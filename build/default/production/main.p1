Version 4.0 HI-TECH Software Intermediate Code
"31 ./realtimeclock.h
[; ;./realtimeclock.h: 31: int RealTimeClock_get_seconds(void);
[v _RealTimeClock_get_seconds `(i ~T0 @X0 0 ef ]
"34
[; ;./realtimeclock.h: 34: int RealTimeClock_get_minutes(void);
[v _RealTimeClock_get_minutes `(i ~T0 @X0 0 ef ]
"37
[; ;./realtimeclock.h: 37: int RealTimeClock_get_hours(void);
[v _RealTimeClock_get_hours `(i ~T0 @X0 0 ef ]
"29 ./LCD.h
[; ;./LCD.h: 29: void LCD_SendString(const char *string);
[v _LCD_SendString `(v ~T0 @X0 0 ef1`*Cuc ]
"43 ./realtimeclock.h
[; ;./realtimeclock.h: 43: int RealTimeClock_get_month(void);
[v _RealTimeClock_get_month `(i ~T0 @X0 0 ef ]
"40
[; ;./realtimeclock.h: 40: int RealTimeClock_get_day_of_month(void);
[v _RealTimeClock_get_day_of_month `(i ~T0 @X0 0 ef ]
"49
[; ;./realtimeclock.h: 49: int RealTimeClock_get_year(void);
[v _RealTimeClock_get_year `(i ~T0 @X0 0 ef ]
"46
[; ;./realtimeclock.h: 46: int RealTimeClock_get_day_of_week(void);
[v _RealTimeClock_get_day_of_week `(i ~T0 @X0 0 ef ]
"31 ./Thermometer.h
[; ;./Thermometer.h: 31: void Get_Temp(char* buffer);
[v _Get_Temp `(v ~T0 @X0 0 ef1`*uc ]
"27 ./LCD.h
[; ;./LCD.h: 27: void LCD_SendData(unsigned char c);
[v _LCD_SendData `(v ~T0 @X0 0 ef1`uc ]
"19
[; ;./LCD.h: 19: void LCD_Busy(void);
[v _LCD_Busy `(v ~T0 @X0 0 ef ]
"25
[; ;./LCD.h: 25: void LCD_SecondLine(void);
[v _LCD_SecondLine `(v ~T0 @X0 0 ef ]
"23
[; ;./LCD.h: 23: void LCD_Command(unsigned char c);
[v _LCD_Command `(v ~T0 @X0 0 ef1`uc ]
"25 ./KeyMatrix.h
[; ;./KeyMatrix.h: 25: int Keypad_Scan(void);
[v _Keypad_Scan `(i ~T0 @X0 0 ef ]
"38 ./realtimeclock.h
[; ;./realtimeclock.h: 38: void RealTimeClock_set_hours(int hours);
[v _RealTimeClock_set_hours `(v ~T0 @X0 0 ef1`i ]
"35
[; ;./realtimeclock.h: 35: void RealTimeClock_set_minutes(int minutes);
[v _RealTimeClock_set_minutes `(v ~T0 @X0 0 ef1`i ]
"32
[; ;./realtimeclock.h: 32: void RealTimeClock_set_seconds(int seconds);
[v _RealTimeClock_set_seconds `(v ~T0 @X0 0 ef1`i ]
"50
[; ;./realtimeclock.h: 50: void RealTimeClock_set_year(int year);
[v _RealTimeClock_set_year `(v ~T0 @X0 0 ef1`i ]
"44
[; ;./realtimeclock.h: 44: void RealTimeClock_set_month(int month);
[v _RealTimeClock_set_month `(v ~T0 @X0 0 ef1`i ]
"41
[; ;./realtimeclock.h: 41: void RealTimeClock_set_day_of_month(int day);
[v _RealTimeClock_set_day_of_month `(v ~T0 @X0 0 ef1`i ]
"47
[; ;./realtimeclock.h: 47: void RealTimeClock_set_day_of_week(int day);
[v _RealTimeClock_set_day_of_week `(v ~T0 @X0 0 ef1`i ]
"17 ./Buzzer.h
[; ;./Buzzer.h: 17: void SoundOff(void);
[v _SoundOff `(v ~T0 @X0 0 ef ]
"15
[; ;./Buzzer.h: 15: void SoundOn(void);
[v _SoundOn `(v ~T0 @X0 0 ef ]
[p mainexit ]
"21 ./LCD.h
[; ;./LCD.h: 21: void LCD_Init(void);
[v _LCD_Init `(v ~T0 @X0 0 ef ]
"23 ./KeyMatrix.h
[; ;./KeyMatrix.h: 23: void Init_Keypad(void);
[v _Init_Keypad `(v ~T0 @X0 0 ef ]
"23 ./Thermometer.h
[; ;./Thermometer.h: 23: void Thermometer_Init(void);
[v _Thermometer_Init `(v ~T0 @X0 0 ef ]
"29 ./realtimeclock.h
[; ;./realtimeclock.h: 29: void RealTimeClock_init(void);
[v _RealTimeClock_init `(v ~T0 @X0 0 ef ]
"25
[; ;./realtimeclock.h: 25: void RealTimeClock_set_burst_time(int* time);
[v _RealTimeClock_set_burst_time `(v ~T0 @X0 0 ef1`*i ]
"13 ./Buzzer.h
[; ;./Buzzer.h: 13: void Buzzer_Init(void);
[v _Buzzer_Init `(v ~T0 @X0 0 ef ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"17 ./realtimeclock.h
[; ;./realtimeclock.h: 17: int __RealTimeClock_buff[7];
[v ___RealTimeClock_buff `i ~T0 @X0 -> 7 `i e ]
"16 main.c
[; ;main.c: 16: char tempBuffer[6] = {'0', '0', '0', '0', '0', '\0'};
[p x FOSC = HS ]
"17
[; ;main.c: 17: 
[p x WDTE = OFF ]
"18
[; ;main.c: 18: char timeDisplayer[9] = {'0', '0', ':', '0', '0', '.','0', '0', '\0'};
[p x PWRTE = ON ]
"19
[; ;main.c: 19: char dateDisplayer[9] = {'0', '0', '/', '0', '0', '/', '0', '0', '\0'};
[p x BOREN = OFF ]
"20
[; ;main.c: 20: 
[p x LVP = OFF ]
"27
[; ;main.c: 27: int triggerTemp[2] = {20, 0};
[v _IsHeatingOn `i ~T0 @X0 1 e ]
"28
[; ;main.c: 28: 
[v _DisableAlarm `i ~T0 @X0 1 e ]
"29
[; ;main.c: 29: 
[v _day_of_week `i ~T0 @X0 1 e ]
"30
[; ;main.c: 30: void Main_Delay(int k)
[v _isWeekDay `i ~T0 @X0 1 e ]
"31
[; ;main.c: 31: {
[v _is24Hour `i ~T0 @X0 1 e ]
"32
[; ;main.c: 32:     int i,j;
[v _weekDayStart `i ~T0 @X0 -> 2 `i e ]
[i _weekDayStart
:U ..
-> 6 `i
-> 30 `i
..
]
"33
[; ;main.c: 33:     for (i= 0; i < k; i++)
[v _weekDayEnd `i ~T0 @X0 -> 2 `i e ]
[i _weekDayEnd
:U ..
-> 22 `i
-> 30 `i
..
]
"34
[; ;main.c: 34:         for(j = 0; j < 100; j++);
[v _weekEndStart `i ~T0 @X0 -> 2 `i e ]
[i _weekEndStart
:U ..
-> 7 `i
-> 0 `i
..
]
"35
[; ;main.c: 35: }
[v _weekEndEnd `i ~T0 @X0 -> 2 `i e ]
[i _weekEndEnd
:U ..
-> 23 `i
-> 0 `i
..
]
"36
[; ;main.c: 36: 
[v _timeBuffer `*i ~T0 @X0 1 e ]
"38
[; ;main.c: 38: void DisplayTime()
[v _tempBuffer `uc ~T0 @X0 -> 6 `i e ]
[i _tempBuffer
:U ..
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 0 `ui `uc
..
]
"40
[; ;main.c: 40: 
[v _timeDisplayer `uc ~T0 @X0 -> 9 `i e ]
[i _timeDisplayer
:U ..
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 58 `ui `uc
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 46 `ui `uc
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 0 `ui `uc
..
]
"41
[; ;main.c: 41:     timeSecs = RealTimeClock_get_seconds();
[v _dateDisplayer `uc ~T0 @X0 -> 9 `i e ]
[i _dateDisplayer
:U ..
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 47 `ui `uc
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 47 `ui `uc
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 0 `ui `uc
..
]
"43
[; ;main.c: 43:     timeHours = RealTimeClock_get_hours();
[v _timeHours `i ~T0 @X0 1 e ]
[v _timeMins `i ~T0 @X0 1 e ]
[v _timeSecs `i ~T0 @X0 1 e ]
"45
[; ;main.c: 45:     timeDisplayer[1] = timeHours % 10 + 48;
[v _month `i ~T0 @X0 1 e ]
[v _day `i ~T0 @X0 1 e ]
[v _year `i ~T0 @X0 1 e ]
"47
[; ;main.c: 47:     timeDisplayer[0] = timeHours % 10 + 48;
[v _previousTemp `i ~T0 @X0 -> 3 `i e ]
[i _previousTemp
:U ..
-> 0 `i
-> 0 `i
-> 0 `i
..
]
"49
[; ;main.c: 49:     timeDisplayer[4] = timeMins % 10 + 48;
[v _triggerTemp `i ~T0 @X0 -> 2 `i e ]
[i _triggerTemp
:U ..
-> 20 `i
-> 0 `i
..
]
"52
[; ;main.c: 52: 
[v _Main_Delay `(v ~T0 @X0 1 ef1`i ]
"53
[; ;main.c: 53:     timeDisplayer[7] = timeSecs % 10 + 48;
{
[e :U _Main_Delay ]
"52
[; ;main.c: 52: 
[v _k `i ~T0 @X0 1 r1 ]
"53
[; ;main.c: 53:     timeDisplayer[7] = timeSecs % 10 + 48;
[f ]
"54
[; ;main.c: 54:     timeSecs /= 10;
[v _i `i ~T0 @X0 1 a ]
[v _j `i ~T0 @X0 1 a ]
"55
[; ;main.c: 55:     timeDisplayer[6] = timeSecs % 10 + 48;
{
[e = _i -> 0 `i ]
[e $U 99  ]
[e :U 96 ]
"56
[; ;main.c: 56: 
{
[e = _j -> 0 `i ]
[e $ < _j -> 100 `i 100  ]
[e $U 101  ]
[e :U 100 ]
[e ++ _j -> 1 `i ]
[e $ < _j -> 100 `i 100  ]
[e :U 101 ]
}
[e ++ _i -> 1 `i ]
[e :U 99 ]
[e $ < _i _k 96  ]
[e :U 97 ]
}
"57
[; ;main.c: 57:     LCD_SendString(timeDisplayer);
[e :UE 95 ]
}
"60
[; ;main.c: 60: 
[v _DisplayTime `(v ~T0 @X0 1 ef ]
"61
[; ;main.c: 61: void DisplayDate(void)
{
[e :U _DisplayTime ]
[f ]
"63
[; ;main.c: 63: 
[e = _timeSecs ( _RealTimeClock_get_seconds ..  ]
"64
[; ;main.c: 64:     month = RealTimeClock_get_month();
[e = _timeMins ( _RealTimeClock_get_minutes ..  ]
"65
[; ;main.c: 65:     day = RealTimeClock_get_day_of_month();
[e = _timeHours ( _RealTimeClock_get_hours ..  ]
"67
[; ;main.c: 67: 
[e = *U + &U _timeDisplayer * -> -> -> 1 `i `ui `ux -> -> # *U &U _timeDisplayer `ui `ux -> + % _timeHours -> 10 `i -> 48 `i `uc ]
"68
[; ;main.c: 68:     dateDisplayer[4] = month % 10 + 48;
[e =/ _timeHours -> 10 `i ]
"69
[; ;main.c: 69:     month /= 10;
[e = *U + &U _timeDisplayer * -> -> -> 0 `i `ui `ux -> -> # *U &U _timeDisplayer `ui `ux -> + % _timeHours -> 10 `i -> 48 `i `uc ]
"71
[; ;main.c: 71:     dateDisplayer[1] = day % 10 + 48;
[e = *U + &U _timeDisplayer * -> -> -> 4 `i `ui `ux -> -> # *U &U _timeDisplayer `ui `ux -> + % _timeMins -> 10 `i -> 48 `i `uc ]
"72
[; ;main.c: 72:     day /= 10;
[e =/ _timeMins -> 10 `i ]
"73
[; ;main.c: 73:     dateDisplayer[0] = day % 10 + 48;
[e = *U + &U _timeDisplayer * -> -> -> 3 `i `ui `ux -> -> # *U &U _timeDisplayer `ui `ux -> + % _timeMins -> 10 `i -> 48 `i `uc ]
"75
[; ;main.c: 75:     year /= 10;
[e = *U + &U _timeDisplayer * -> -> -> 7 `i `ui `ux -> -> # *U &U _timeDisplayer `ui `ux -> + % _timeSecs -> 10 `i -> 48 `i `uc ]
"76
[; ;main.c: 76:     dateDisplayer[6] = year % 10 + 48;
[e =/ _timeSecs -> 10 `i ]
"77
[; ;main.c: 77:     LCD_SendString(dateDisplayer);
[e = *U + &U _timeDisplayer * -> -> -> 6 `i `ui `ux -> -> # *U &U _timeDisplayer `ui `ux -> + % _timeSecs -> 10 `i -> 48 `i `uc ]
"79
[; ;main.c: 79: 
[e ( _LCD_SendString (1 -> &U _timeDisplayer `*Cuc ]
"80
[; ;main.c: 80: 
[e :UE 103 ]
}
"83
[; ;main.c: 83: 
[v _DisplayDate `(v ~T0 @X0 1 ef ]
"84
[; ;main.c: 84:     day_of_week = RealTimeClock_get_day_of_week();
{
[e :U _DisplayDate ]
[f ]
"86
[; ;main.c: 86:     char* Tuesday = ("Tuesday");
[e = _month ( _RealTimeClock_get_month ..  ]
"87
[; ;main.c: 87:     char* Wednesday = ("Wednesday");
[e = _day ( _RealTimeClock_get_day_of_month ..  ]
"88
[; ;main.c: 88:     char* Thursday = ("Thursday");
[e = _year ( _RealTimeClock_get_year ..  ]
"90
[; ;main.c: 90:     char* Saturday = ("Saturday");
[e = *U + &U _dateDisplayer * -> -> -> 4 `i `ui `ux -> -> # *U &U _dateDisplayer `ui `ux -> + % _month -> 10 `i -> 48 `i `uc ]
"91
[; ;main.c: 91:     char* Sunday = ("Sunday");
[e =/ _month -> 10 `i ]
"92
[; ;main.c: 92: 
[e = *U + &U _dateDisplayer * -> -> -> 3 `i `ui `ux -> -> # *U &U _dateDisplayer `ui `ux -> + % _month -> 10 `i -> 48 `i `uc ]
"93
[; ;main.c: 93:     switch(day_of_week)
[e = *U + &U _dateDisplayer * -> -> -> 1 `i `ui `ux -> -> # *U &U _dateDisplayer `ui `ux -> + % _day -> 10 `i -> 48 `i `uc ]
"94
[; ;main.c: 94:     {
[e =/ _day -> 10 `i ]
"95
[; ;main.c: 95:         case 1:
[e = *U + &U _dateDisplayer * -> -> -> 0 `i `ui `ux -> -> # *U &U _dateDisplayer `ui `ux -> + % _day -> 10 `i -> 48 `i `uc ]
"96
[; ;main.c: 96:             LCD_SendString(Monday);
[e = *U + &U _dateDisplayer * -> -> -> 7 `i `ui `ux -> -> # *U &U _dateDisplayer `ui `ux -> + % _year -> 10 `i -> 48 `i `uc ]
"97
[; ;main.c: 97:             break;
[e =/ _year -> 10 `i ]
"98
[; ;main.c: 98:         case 2:
[e = *U + &U _dateDisplayer * -> -> -> 6 `i `ui `ux -> -> # *U &U _dateDisplayer `ui `ux -> + % _year -> 10 `i -> 48 `i `uc ]
"99
[; ;main.c: 99:             LCD_SendString(Tuesday);
[e ( _LCD_SendString (1 -> &U _dateDisplayer `*Cuc ]
"100
[; ;main.c: 100:             break;
[e :UE 104 ]
}
"103
[; ;main.c: 103:             break;
[v _DisplayDay `(v ~T0 @X0 1 ef ]
"104
[; ;main.c: 104:         case 4:
{
[e :U _DisplayDay ]
[f ]
"106
[; ;main.c: 106:             break;
[e = _day_of_week ( _RealTimeClock_get_day_of_week ..  ]
"107
[; ;main.c: 107:         case 5:
[v _Monday `*uc ~T0 @X0 1 a ]
[e = _Monday :s 1C ]
"108
[; ;main.c: 108:             LCD_SendString(Friday);
[v _Tuesday `*uc ~T0 @X0 1 a ]
[e = _Tuesday :s 2C ]
"109
[; ;main.c: 109:             break;
[v _Wednesday `*uc ~T0 @X0 1 a ]
[e = _Wednesday :s 3C ]
"110
[; ;main.c: 110:         case 6:
[v _Thursday `*uc ~T0 @X0 1 a ]
[e = _Thursday :s 4C ]
"111
[; ;main.c: 111:             LCD_SendString(Saturday);
[v _Friday `*uc ~T0 @X0 1 a ]
[e = _Friday :s 5C ]
"112
[; ;main.c: 112:             break;
[v _Saturday `*uc ~T0 @X0 1 a ]
[e = _Saturday :s 6C ]
"113
[; ;main.c: 113:         case 7:
[v _Sunday `*uc ~T0 @X0 1 a ]
[e = _Sunday :s 7C ]
"115
[; ;main.c: 115:             break;
[e $U 107  ]
"116
[; ;main.c: 116:     }
{
"117
[; ;main.c: 117: }
[e :U 108 ]
"118
[; ;main.c: 118: 
[e ( _LCD_SendString (1 -> _Monday `*Cuc ]
"119
[; ;main.c: 119: 
[e $U 106  ]
"120
[; ;main.c: 120: void DisplayTemp(char* tempBuffer)
[e :U 109 ]
"121
[; ;main.c: 121: {
[e ( _LCD_SendString (1 -> _Tuesday `*Cuc ]
"122
[; ;main.c: 122: 
[e $U 106  ]
"123
[; ;main.c: 123:     Get_Temp(tempBuffer);
[e :U 110 ]
"124
[; ;main.c: 124: 
[e ( _LCD_SendString (1 -> _Wednesday `*Cuc ]
"125
[; ;main.c: 125:     LCD_SendString(tempBuffer);
[e $U 106  ]
"126
[; ;main.c: 126: 
[e :U 111 ]
"127
[; ;main.c: 127:     LCD_SendData(0xDF);
[e ( _LCD_SendString (1 -> _Thursday `*Cuc ]
"128
[; ;main.c: 128:     LCD_Busy();
[e $U 106  ]
"129
[; ;main.c: 129: 
[e :U 112 ]
"130
[; ;main.c: 130:     LCD_SendData('C');
[e ( _LCD_SendString (1 -> _Friday `*Cuc ]
"131
[; ;main.c: 131: }
[e $U 106  ]
"132
[; ;main.c: 132: 
[e :U 113 ]
"133
[; ;main.c: 133: 
[e ( _LCD_SendString (1 -> _Saturday `*Cuc ]
"134
[; ;main.c: 134: void MainScreen(void)
[e $U 106  ]
"135
[; ;main.c: 135: {
[e :U 114 ]
"136
[; ;main.c: 136: 
[e ( _LCD_SendString (1 -> _Sunday `*Cuc ]
"137
[; ;main.c: 137:     char* Time = "Time:";
[e $U 106  ]
"138
[; ;main.c: 138:     char* Temp = "Temp:";
}
[e $U 106  ]
[e :U 107 ]
[e [\ _day_of_week , $ -> 1 `i 108
 , $ -> 2 `i 109
 , $ -> 3 `i 110
 , $ -> 4 `i 111
 , $ -> 5 `i 112
 , $ -> 6 `i 113
 , $ -> 7 `i 114
 106 ]
[e :U 106 ]
"139
[; ;main.c: 139:     LCD_SendString(Time);
[e :UE 105 ]
}
"142
[; ;main.c: 142: 
[v _DisplayTemp `(v ~T0 @X0 1 ef1`*uc ]
"143
[; ;main.c: 143:     LCD_SecondLine();
{
[e :U _DisplayTemp ]
"142
[; ;main.c: 142: 
[v _tempBuffer `*uc ~T0 @X0 1 r1 ]
"143
[; ;main.c: 143:     LCD_SecondLine();
[f ]
"145
[; ;main.c: 145: 
[e ( _Get_Temp (1 _tempBuffer ]
"147
[; ;main.c: 147: 
[e ( _LCD_SendString (1 -> _tempBuffer `*Cuc ]
"149
[; ;main.c: 149: 
[e ( _LCD_SendData (1 -> -> 223 `i `uc ]
"150
[; ;main.c: 150: 
[e ( _LCD_Busy ..  ]
"152
[; ;main.c: 152: 
[e ( _LCD_SendData (1 -> -> 67 `ui `uc ]
"153
[; ;main.c: 153: 
[e :UE 115 ]
}
"156
[; ;main.c: 156: 
[v _MainScreen `(v ~T0 @X0 1 ef ]
"157
[; ;main.c: 157:     LCD_Command(0x01);
{
[e :U _MainScreen ]
[f ]
"159
[; ;main.c: 159:     int i = 0;
[v _Time `*uc ~T0 @X0 1 a ]
[e = _Time :s 8C ]
"160
[; ;main.c: 160: 
[v _Temp `*uc ~T0 @X0 1 a ]
[e = _Temp :s 9C ]
"161
[; ;main.c: 161:     int triggerTempChange[2] = {0, 0};
[e ( _LCD_SendString (1 -> _Time `*Cuc ]
"163
[; ;main.c: 163:     char* TriggerSet = "Trigger Set";
[e ( _DisplayTime ..  ]
"165
[; ;main.c: 165:         {
[e ( _LCD_SecondLine ..  ]
"168
[; ;main.c: 168: 
[e ( _LCD_SendString (1 -> _Temp `*Cuc ]
"170
[; ;main.c: 170: 
[e ( _DisplayTemp (1 &U _tempBuffer ]
"173
[; ;main.c: 173:             LCD_SendString(Trigger);
[e :UE 116 ]
}
"176
[; ;main.c: 176: 
[v _ChangeTrigger `(v ~T0 @X0 1 ef1`uc ]
"177
[; ;main.c: 177:             if(Key == 1)
{
[e :U _ChangeTrigger ]
"176
[; ;main.c: 176: 
[v _Key `uc ~T0 @X0 1 r1 ]
"177
[; ;main.c: 177:             if(Key == 1)
[f ]
"179
[; ;main.c: 179:                 LCD_Command(0x01);
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"181
[; ;main.c: 181:                 LCD_SendString(TriggerSet);
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[v F955 `i ~T0 @X0 -> 2 `i s ]
[i F955
:U ..
"183
[; ;main.c: 183:                 LCD_Command(0x01);
-> 0 `i
-> 0 `i
..
]
[v _triggerTempChange `i ~T0 @X0 -> 2 `i a ]
[e = _triggerTempChange F955 ]
"184
[; ;main.c: 184:                 break;
[v _Trigger `*uc ~T0 @X0 1 a ]
[e = _Trigger :s 10C ]
"185
[; ;main.c: 185:             }
[v _TriggerSet `*uc ~T0 @X0 1 a ]
[e = _TriggerSet :s 11C ]
"186
[; ;main.c: 186: 
[e :U 119 ]
"187
[; ;main.c: 187:             switch(Key)
{
"189
[; ;main.c: 189: 
[v _decimal `uc ~T0 @X0 1 a ]
"191
[; ;main.c: 191:                     if(i == 0)
[v _digits `uc ~T0 @X0 -> 3 `i a ]
"193
[; ;main.c: 193:                     else
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"195
[; ;main.c: 195:                     break;
[e ( _LCD_SendString (1 -> _Trigger `*Cuc ]
"197
[; ;main.c: 197: 
[e = _Key -> ( _Keypad_Scan ..  `uc ]
"199
[; ;main.c: 199:                     {
[e $ ! == -> _Key `i -> 1 `i 121  ]
"200
[; ;main.c: 200:                         triggerTemp[1] = 9;
{
"201
[; ;main.c: 201:                         triggerTemp[0] = triggerTemp[0] - 1;
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"202
[; ;main.c: 202:                     }
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"203
[; ;main.c: 203:                     else
[e ( _LCD_SendString (1 -> _TriggerSet `*Cuc ]
"204
[; ;main.c: 204:                         triggerTemp[i] = triggerTemp[i] - 1;
[e ( _Main_Delay (1 -> 200 `i ]
"205
[; ;main.c: 205:                     break;
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"206
[; ;main.c: 206:                 case 4:
[e $U 120  ]
"207
[; ;main.c: 207: 
}
[e :U 121 ]
"209
[; ;main.c: 209:                     {
[e $U 123  ]
"210
[; ;main.c: 210:                         triggerTemp[1] = 0;
{
"212
[; ;main.c: 212:                     }
[e :U 124 ]
"213
[; ;main.c: 213:                     else
[e $ ! == _i -> 0 `i 125  ]
"214
[; ;main.c: 214:                         triggerTemp[i] = triggerTemp[i] + 1;
[e = _i -> 1 `i ]
[e $U 126  ]
"215
[; ;main.c: 215:                     break;
[e :U 125 ]
"216
[; ;main.c: 216:             }
[e = _i -> 0 `i ]
[e :U 126 ]
"217
[; ;main.c: 217: 
[e $U 122  ]
"218
[; ;main.c: 218:             int i = triggerTemp[0];
[e :U 127 ]
"220
[; ;main.c: 220:             digits[1] = i % 10 + 48;
[e $ ! && == _i -> 1 `i == *U + &U _triggerTemp * -> -> -> 1 `i `ui `ux -> -> # *U &U _triggerTemp `ui `ux -> 0 `i 128  ]
"221
[; ;main.c: 221:             i /= 10;
{
"222
[; ;main.c: 222:             digits[0] = i % 10 + 48;
[e = *U + &U _triggerTemp * -> -> -> 1 `i `ui `ux -> -> # *U &U _triggerTemp `ui `ux -> 9 `i ]
"223
[; ;main.c: 223: 
[e = *U + &U _triggerTemp * -> -> -> 0 `i `ui `ux -> -> # *U &U _triggerTemp `ui `ux - *U + &U _triggerTemp * -> -> -> 0 `i `ui `ux -> -> # *U &U _triggerTemp `ui `ux -> 1 `i ]
"224
[; ;main.c: 224:             digits[2] = '\0';
}
[e $U 129  ]
"225
[; ;main.c: 225: 
[e :U 128 ]
"226
[; ;main.c: 226:             decimal = triggerTemp[1] + 48;
[e = *U + &U _triggerTemp * -> -> _i `ui `ux -> -> # *U &U _triggerTemp `ui `ux - *U + &U _triggerTemp * -> -> _i `ui `ux -> -> # *U &U _triggerTemp `ui `ux -> 1 `i ]
[e :U 129 ]
"227
[; ;main.c: 227: 
[e $U 122  ]
"228
[; ;main.c: 228:             LCD_SendString(digits);
[e :U 130 ]
"230
[; ;main.c: 230: 
[e $ ! && == _i -> 1 `i == *U + &U _triggerTemp * -> -> -> 1 `i `ui `ux -> -> # *U &U _triggerTemp `ui `ux -> 9 `i 131  ]
"231
[; ;main.c: 231:             LCD_SendData('.');
{
"232
[; ;main.c: 232:             LCD_Busy();
[e = *U + &U _triggerTemp * -> -> -> 1 `i `ui `ux -> -> # *U &U _triggerTemp `ui `ux -> 0 `i ]
"233
[; ;main.c: 233: 
[e = *U + &U _triggerTemp * -> -> -> 0 `i `ui `ux -> -> # *U &U _triggerTemp `ui `ux + *U + &U _triggerTemp * -> -> -> 0 `i `ui `ux -> -> # *U &U _triggerTemp `ui `ux -> 1 `i ]
"234
[; ;main.c: 234:             LCD_SendData(decimal);
}
[e $U 132  ]
"235
[; ;main.c: 235:             LCD_Busy();
[e :U 131 ]
"236
[; ;main.c: 236: 
[e = *U + &U _triggerTemp * -> -> _i `ui `ux -> -> # *U &U _triggerTemp `ui `ux + *U + &U _triggerTemp * -> -> _i `ui `ux -> -> # *U &U _triggerTemp `ui `ux -> 1 `i ]
[e :U 132 ]
"237
[; ;main.c: 237:             LCD_SendData('0');
[e $U 122  ]
"238
[; ;main.c: 238:         }
}
[e $U 122  ]
[e :U 123 ]
[e [\ -> _Key `i , $ -> 2 `i 124
 , $ -> 3 `i 127
 , $ -> 4 `i 130
 122 ]
[e :U 122 ]
"240
[; ;main.c: 240: 
[v _i `i ~T0 @X0 1 a ]
[e = _i *U + &U _triggerTemp * -> -> -> 0 `i `ui `ux -> -> # *U &U _triggerTemp `ui `ux ]
"242
[; ;main.c: 242: void SwapToHeatingDisplay(int Key)
[e = *U + &U _digits * -> -> -> 1 `i `ui `ux -> -> # *U &U _digits `ui `ux -> + % _i -> 10 `i -> 48 `i `uc ]
"243
[; ;main.c: 243: {
[e =/ _i -> 10 `i ]
"244
[; ;main.c: 244:     char* Heat = "Heating:";
[e = *U + &U _digits * -> -> -> 0 `i `ui `ux -> -> # *U &U _digits `ui `ux -> + % _i -> 10 `i -> 48 `i `uc ]
"246
[; ;main.c: 246:     LCD_Command(0x01);
[e = *U + &U _digits * -> -> -> 2 `i `ui `ux -> -> # *U &U _digits `ui `ux -> -> 0 `ui `uc ]
"248
[; ;main.c: 248:     char* Off = "Off";
[e = _decimal -> + *U + &U _triggerTemp * -> -> -> 1 `i `ui `ux -> -> # *U &U _triggerTemp `ui `ux -> 48 `i `uc ]
"250
[; ;main.c: 250:     {
[e ( _LCD_SendString (1 -> &U _digits `*Cuc ]
"251
[; ;main.c: 251: 
[e ( _LCD_Busy ..  ]
"253
[; ;main.c: 253:         if(Key == 7)
[e ( _LCD_SendData (1 -> -> 46 `ui `uc ]
"254
[; ;main.c: 254:         {
[e ( _LCD_Busy ..  ]
"256
[; ;main.c: 256:             break;
[e ( _LCD_SendData (1 -> _decimal `uc ]
"257
[; ;main.c: 257:         }
[e ( _LCD_Busy ..  ]
"259
[; ;main.c: 259:         LCD_SendString(Heat);
[e ( _LCD_SendData (1 -> -> 48 `ui `uc ]
"260
[; ;main.c: 260: 
}
[e :U 118 ]
[e $U 119  ]
[e :U 120 ]
"261
[; ;main.c: 261:         if(IsHeatingOn == 1)
[e :UE 117 ]
}
"264
[; ;main.c: 264:             LCD_SendString(On);
[v _SwapToHeatingDisplay `(v ~T0 @X0 1 ef1`i ]
"265
[; ;main.c: 265:         }
{
[e :U _SwapToHeatingDisplay ]
"264
[; ;main.c: 264:             LCD_SendString(On);
[v _Key `i ~T0 @X0 1 r1 ]
"265
[; ;main.c: 265:         }
[f ]
"266
[; ;main.c: 266:         else if(IsHeatingOn == 0)
[v _Heat `*uc ~T0 @X0 1 a ]
[e = _Heat :s 12C ]
"268
[; ;main.c: 268:             LCD_Command(0x14);
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"269
[; ;main.c: 269:             LCD_SendString(Off);
[v _On `*uc ~T0 @X0 1 a ]
[e = _On :s 13C ]
"270
[; ;main.c: 270:         }
[v _Off `*uc ~T0 @X0 1 a ]
[e = _Off :s 14C ]
"271
[; ;main.c: 271:     }
[e :U 135 ]
"272
[; ;main.c: 272: }
{
"274
[; ;main.c: 274: 
[e = _Key ( _Keypad_Scan ..  ]
"275
[; ;main.c: 275: void Switch24Hour(int Key)
[e $ ! == _Key -> 7 `i 137  ]
"276
[; ;main.c: 276: {
{
"277
[; ;main.c: 277:     LCD_Command(0x01);
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"278
[; ;main.c: 278:     char* c;
[e $U 136  ]
"279
[; ;main.c: 279:     if(is24Hour == 1)
}
[e :U 137 ]
"280
[; ;main.c: 280:     {
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"281
[; ;main.c: 281:         c = "24 Hour is on";
[e ( _LCD_SendString (1 -> _Heat `*Cuc ]
"283
[; ;main.c: 283:     while(1)
[e $ ! == _IsHeatingOn -> 1 `i 138  ]
"284
[; ;main.c: 284:     {
{
"285
[; ;main.c: 285:         LCD_Command(0x03);
[e ( _LCD_Command (1 -> -> 20 `i `uc ]
"286
[; ;main.c: 286:         LCD_SendString(c);
[e ( _LCD_SendString (1 -> _On `*Cuc ]
"287
[; ;main.c: 287:         if (Key == 8)
}
[e $U 139  ]
"288
[; ;main.c: 288:         {
[e :U 138 ]
[e $ ! == _IsHeatingOn -> 0 `i 140  ]
"289
[; ;main.c: 289:             LCD_Command(0x01);
{
"290
[; ;main.c: 290:             break;
[e ( _LCD_Command (1 -> -> 20 `i `uc ]
"291
[; ;main.c: 291:         }
[e ( _LCD_SendString (1 -> _Off `*Cuc ]
"292
[; ;main.c: 292:     }
}
[e :U 140 ]
[e :U 139 ]
"293
[; ;main.c: 293: }
}
[e :U 134 ]
[e $U 135  ]
[e :U 136 ]
"294
[; ;main.c: 294: 
[e :UE 133 ]
}
"297
[; ;main.c: 297: {
[v _Switch24Hour `(v ~T0 @X0 1 ef1`i ]
"298
[; ;main.c: 298:     LCD_Command(0x01);
{
[e :U _Switch24Hour ]
"297
[; ;main.c: 297: {
[v _Key `i ~T0 @X0 1 r1 ]
"298
[; ;main.c: 298:     LCD_Command(0x01);
[f ]
"299
[; ;main.c: 299:     char* date = ("Date: ");
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"300
[; ;main.c: 300:     char* DayDis = ("Day: ");
[v _c `*uc ~T0 @X0 1 a ]
"301
[; ;main.c: 301:     while(1)
[e $ ! == _is24Hour -> 1 `i 142  ]
"302
[; ;main.c: 302:     {
{
"303
[; ;main.c: 303:         Key = Keypad_Scan();
[e = _c :s 15C ]
"304
[; ;main.c: 304:         LCD_Command(0x03);
}
[e :U 142 ]
"305
[; ;main.c: 305:         LCD_SendString(date);
[e :U 144 ]
"306
[; ;main.c: 306:         DisplayDate();
{
"307
[; ;main.c: 307:         LCD_SecondLine();
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"308
[; ;main.c: 308:         LCD_SendString(DayDis);
[e ( _LCD_SendString (1 -> _c `*Cuc ]
"309
[; ;main.c: 309:         DisplayDay();
[e $ ! == _Key -> 8 `i 146  ]
"310
[; ;main.c: 310:         if (Key == 1)
{
"311
[; ;main.c: 311:         {
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"312
[; ;main.c: 312:             ChangeTrigger(Key);
[e $U 145  ]
"313
[; ;main.c: 313:         }
}
[e :U 146 ]
"314
[; ;main.c: 314:         if (Key == 6)
}
[e :U 143 ]
[e $U 144  ]
[e :U 145 ]
"315
[; ;main.c: 315:         {
[e :UE 141 ]
}
"318
[; ;main.c: 318:         }
[v _DateDayScreen `(v ~T0 @X0 1 ef1`i ]
"319
[; ;main.c: 319:         if (Key == 7)
{
[e :U _DateDayScreen ]
"318
[; ;main.c: 318:         }
[v _Key `i ~T0 @X0 1 r1 ]
"319
[; ;main.c: 319:         if (Key == 7)
[f ]
"320
[; ;main.c: 320:         {
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"321
[; ;main.c: 321:             SwapToHeatingDisplay(Key);
[v _date `*uc ~T0 @X0 1 a ]
[e = _date :s 16C ]
"322
[; ;main.c: 322:         }
[v _DayDis `*uc ~T0 @X0 1 a ]
[e = _DayDis :s 17C ]
"323
[; ;main.c: 323:     }
[e :U 149 ]
"324
[; ;main.c: 324: }
{
"325
[; ;main.c: 325: 
[e = _Key ( _Keypad_Scan ..  ]
"326
[; ;main.c: 326: 
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"327
[; ;main.c: 327: void SetTime(int Key)
[e ( _LCD_SendString (1 -> _date `*Cuc ]
"328
[; ;main.c: 328: {
[e ( _DisplayDate ..  ]
"329
[; ;main.c: 329: 
[e ( _LCD_SecondLine ..  ]
"330
[; ;main.c: 330:     LCD_Command(0x01);
[e ( _LCD_SendString (1 -> _DayDis `*Cuc ]
"331
[; ;main.c: 331: 
[e ( _DisplayDay ..  ]
"332
[; ;main.c: 332:     int i = 0;
[e $ ! == _Key -> 1 `i 151  ]
"333
[; ;main.c: 333:     char* Time = "Time:";
{
"334
[; ;main.c: 334:     char* TimeSet = "Time Set";
[e ( _ChangeTrigger (1 -> _Key `uc ]
"335
[; ;main.c: 335: 
}
[e :U 151 ]
"336
[; ;main.c: 336:     timeSecs = RealTimeClock_get_seconds();
[e $ ! == _Key -> 6 `i 152  ]
"337
[; ;main.c: 337:     timeMins = RealTimeClock_get_minutes();
{
"338
[; ;main.c: 338:     timeHours = RealTimeClock_get_hours();
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"339
[; ;main.c: 339: 
[e $U 150  ]
"340
[; ;main.c: 340:     int setTime[3];
}
[e :U 152 ]
"341
[; ;main.c: 341:     setTime[0] = timeHours;
[e $ ! == _Key -> 7 `i 153  ]
"342
[; ;main.c: 342:     setTime[1] = timeMins;
{
"343
[; ;main.c: 343:     setTime[2] = timeSecs;
[e ( _SwapToHeatingDisplay (1 _Key ]
"344
[; ;main.c: 344:     while(1)
}
[e :U 153 ]
"345
[; ;main.c: 345:     {
}
[e :U 148 ]
[e $U 149  ]
[e :U 150 ]
"346
[; ;main.c: 346: 
[e :UE 147 ]
}
"349
[; ;main.c: 349:         LCD_Command(0x03);
[v _SetTime `(v ~T0 @X0 1 ef1`i ]
"350
[; ;main.c: 350:         LCD_SendString(Time);
{
[e :U _SetTime ]
"349
[; ;main.c: 349:         LCD_Command(0x03);
[v _Key `i ~T0 @X0 1 r1 ]
"350
[; ;main.c: 350:         LCD_SendString(Time);
[f ]
"352
[; ;main.c: 352:         Key = Keypad_Scan();
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"354
[; ;main.c: 354:         if(Key == 9)
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
"355
[; ;main.c: 355:         {
[v _Time `*uc ~T0 @X0 1 a ]
[e = _Time :s 18C ]
"356
[; ;main.c: 356: 
[v _TimeSet `*uc ~T0 @X0 1 a ]
[e = _TimeSet :s 19C ]
"358
[; ;main.c: 358:             RealTimeClock_set_minutes(setTime[1]);
[e = _timeSecs ( _RealTimeClock_get_seconds ..  ]
"359
[; ;main.c: 359:             RealTimeClock_set_seconds(setTime[2]);
[e = _timeMins ( _RealTimeClock_get_minutes ..  ]
"360
[; ;main.c: 360: 
[e = _timeHours ( _RealTimeClock_get_hours ..  ]
"362
[; ;main.c: 362:             LCD_Command(0x03);
[v _setTime `i ~T0 @X0 -> 3 `i a ]
"363
[; ;main.c: 363: 
[e = *U + &U _setTime * -> -> -> 0 `i `ui `ux -> -> # *U &U _setTime `ui `ux _timeHours ]
"364
[; ;main.c: 364:             LCD_SendString(TimeSet);
[e = *U + &U _setTime * -> -> -> 1 `i `ui `ux -> -> # *U &U _setTime `ui `ux _timeMins ]
"365
[; ;main.c: 365:             Main_Delay(200);
[e = *U + &U _setTime * -> -> -> 2 `i `ui `ux -> -> # *U &U _setTime `ui `ux _timeSecs ]
"366
[; ;main.c: 366:             LCD_Command(0x01);
[e :U 156 ]
"367
[; ;main.c: 367:             break;
{
[v F980 `uc ~T0 @X0 -> 9 `i s ]
[i F980
:U ..
"369
[; ;main.c: 369:         switch(Key)
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 58 `ui `uc
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 46 `ui `uc
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 0 `ui `uc
..
]
[v _digits `uc ~T0 @X0 -> 9 `i a ]
[e = _digits F980 ]
"371
[; ;main.c: 371: 
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"372
[; ;main.c: 372:             case 10:
[e ( _LCD_SendString (1 -> _Time `*Cuc ]
"374
[; ;main.c: 374:             if(i == 2)
[e = _Key ( _Keypad_Scan ..  ]
"376
[; ;main.c: 376: 
[e $ ! == _Key -> 9 `i 158  ]
"377
[; ;main.c: 377:             else
{
"379
[; ;main.c: 379:             break;
[e ( _RealTimeClock_set_hours (1 *U + &U _setTime * -> -> -> 0 `i `ui `ux -> -> # *U &U _setTime `ui `ux ]
"380
[; ;main.c: 380: 
[e ( _RealTimeClock_set_minutes (1 *U + &U _setTime * -> -> -> 1 `i `ui `ux -> -> # *U &U _setTime `ui `ux ]
"381
[; ;main.c: 381:             case 11:
[e ( _RealTimeClock_set_seconds (1 *U + &U _setTime * -> -> -> 2 `i `ui `ux -> -> # *U &U _setTime `ui `ux ]
"383
[; ;main.c: 383:                 if(i == 0)
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"384
[; ;main.c: 384:                 {
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"386
[; ;main.c: 386:                     {
[e ( _LCD_SendString (1 -> _TimeSet `*Cuc ]
"387
[; ;main.c: 387:                         if(setTime[i] == 0)
[e ( _Main_Delay (1 -> 200 `i ]
"388
[; ;main.c: 388:                         {
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"389
[; ;main.c: 389:                             setTime[i] = 23;
[e $U 157  ]
"390
[; ;main.c: 390:                         }
}
[e :U 158 ]
"391
[; ;main.c: 391: 
[e $U 160  ]
"392
[; ;main.c: 392:                         else
{
"394
[; ;main.c: 394:                             setTime[i] = setTime[i] - 1;
[e :U 161 ]
"396
[; ;main.c: 396:                     }
[e $ ! == _i -> 2 `i 162  ]
"397
[; ;main.c: 397:                     else if(is24Hour == 0)
[e = _i -> 0 `i ]
[e $U 163  ]
"399
[; ;main.c: 399: 
[e :U 162 ]
"400
[; ;main.c: 400:                     }
[e ++ _i -> 1 `i ]
[e :U 163 ]
"401
[; ;main.c: 401:                     else
[e $U 159  ]
"403
[; ;main.c: 403:                 }
[e :U 164 ]
"405
[; ;main.c: 405:                 else if(setTime[i] == 0)
[e $ ! == _i -> 0 `i 165  ]
"406
[; ;main.c: 406:                 {
{
"407
[; ;main.c: 407:                     setTime[i] = 59;
[e $ ! == _is24Hour -> 1 `i 166  ]
"408
[; ;main.c: 408:                 }
{
"409
[; ;main.c: 409: 
[e $ ! == *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux -> 0 `i 167  ]
"410
[; ;main.c: 410:                 else
{
"411
[; ;main.c: 411:                     setTime[i] = setTime[i] - 1;
[e = *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux -> 23 `i ]
"412
[; ;main.c: 412:                 break;
}
[e $U 168  ]
"414
[; ;main.c: 414:             case 12:
[e :U 167 ]
"415
[; ;main.c: 415: 
{
"416
[; ;main.c: 416:                 if(i == 0)
[e = *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux - *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux -> 1 `i ]
"417
[; ;main.c: 417:                 {
}
[e :U 168 ]
"418
[; ;main.c: 418: 
}
[e $U 169  ]
"419
[; ;main.c: 419:                     if(is24Hour == 1)
[e :U 166 ]
[e $ ! == _is24Hour -> 0 `i 170  ]
"420
[; ;main.c: 420:                     {
{
"422
[; ;main.c: 422:                         {
}
[e $U 171  ]
"423
[; ;main.c: 423:                             setTime[i] = 0;
[e :U 170 ]
"424
[; ;main.c: 424:                         }
[e = *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux - *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux -> 1 `i ]
[e :U 171 ]
[e :U 169 ]
"425
[; ;main.c: 425: 
}
[e $U 172  ]
"427
[; ;main.c: 427:                         {
[e :U 165 ]
[e $ ! == *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux -> 0 `i 173  ]
"428
[; ;main.c: 428:                             setTime[i] = setTime[i] + 1;
{
"429
[; ;main.c: 429:                         }
[e = *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux -> 59 `i ]
"430
[; ;main.c: 430:                     }
}
[e $U 174  ]
"432
[; ;main.c: 432:                     {
[e :U 173 ]
"433
[; ;main.c: 433: 
[e = *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux - *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux -> 1 `i ]
[e :U 174 ]
[e :U 172 ]
"434
[; ;main.c: 434:                     }
[e $U 159  ]
"436
[; ;main.c: 436: 
[e :U 175 ]
"438
[; ;main.c: 438:                 {
[e $ ! == _i -> 0 `i 176  ]
"439
[; ;main.c: 439:                     setTime[i] = 0;
{
"441
[; ;main.c: 441:                 else
[e $ ! == _is24Hour -> 1 `i 177  ]
"442
[; ;main.c: 442:                     setTime[i] = setTime[i] + 1;
{
"443
[; ;main.c: 443:                 break;
[e $ ! == *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux -> 23 `i 178  ]
"444
[; ;main.c: 444:         }
{
"445
[; ;main.c: 445: 
[e = *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux -> 0 `i ]
"446
[; ;main.c: 446: 
}
[e $U 179  ]
"448
[; ;main.c: 448:         timeMins = setTime[1];
[e :U 178 ]
"449
[; ;main.c: 449:         timeSecs = setTime[2];
{
"450
[; ;main.c: 450:         digits[1] = timeHours % 10 + 48;
[e = *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux + *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux -> 1 `i ]
"451
[; ;main.c: 451:         timeHours /= 10;
}
[e :U 179 ]
"452
[; ;main.c: 452:         digits[0] = timeHours % 10 + 48;
}
[e $U 180  ]
"453
[; ;main.c: 453:         digits[4] = timeMins % 10 + 48;
[e :U 177 ]
[e $ ! == _is24Hour -> 0 `i 181  ]
"454
[; ;main.c: 454:         timeMins /= 10;
{
"456
[; ;main.c: 456:         digits[7] = timeSecs % 10 + 48;
}
[e :U 181 ]
[e :U 180 ]
"457
[; ;main.c: 457:         timeSecs /= 10;
}
[e $U 182  ]
"459
[; ;main.c: 459:         LCD_SendString(digits);
[e :U 176 ]
[e $ ! == *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux -> 59 `i 183  ]
"460
[; ;main.c: 460:     }
{
"461
[; ;main.c: 461: }
[e = *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux -> 0 `i ]
"462
[; ;main.c: 462: 
}
[e $U 184  ]
"463
[; ;main.c: 463: 
[e :U 183 ]
"464
[; ;main.c: 464: void CheckDay(void)
[e = *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux + *U + &U _setTime * -> -> _i `ui `ux -> -> # *U &U _setTime `ui `ux -> 1 `i ]
[e :U 184 ]
[e :U 182 ]
"465
[; ;main.c: 465: {
[e $U 159  ]
"466
[; ;main.c: 466:     switch(day_of_week)
}
[e $U 159  ]
[e :U 160 ]
[e [\ _Key , $ -> 10 `i 161
 , $ -> 11 `i 164
 , $ -> 12 `i 175
 159 ]
[e :U 159 ]
"469
[; ;main.c: 469: 
[e = _timeHours *U + &U _setTime * -> -> -> 0 `i `ui `ux -> -> # *U &U _setTime `ui `ux ]
"470
[; ;main.c: 470:         case 1:
[e = _timeMins *U + &U _setTime * -> -> -> 1 `i `ui `ux -> -> # *U &U _setTime `ui `ux ]
"471
[; ;main.c: 471:             isWeekDay = 1;
[e = _timeSecs *U + &U _setTime * -> -> -> 2 `i `ui `ux -> -> # *U &U _setTime `ui `ux ]
"472
[; ;main.c: 472:             break;
[e = *U + &U _digits * -> -> -> 1 `i `ui `ux -> -> # *U &U _digits `ui `ux -> + % _timeHours -> 10 `i -> 48 `i `uc ]
"473
[; ;main.c: 473:         case 2:
[e =/ _timeHours -> 10 `i ]
"474
[; ;main.c: 474:             isWeekDay = 1;
[e = *U + &U _digits * -> -> -> 0 `i `ui `ux -> -> # *U &U _digits `ui `ux -> + % _timeHours -> 10 `i -> 48 `i `uc ]
"475
[; ;main.c: 475:             break;
[e = *U + &U _digits * -> -> -> 4 `i `ui `ux -> -> # *U &U _digits `ui `ux -> + % _timeMins -> 10 `i -> 48 `i `uc ]
"476
[; ;main.c: 476:         case 3:
[e =/ _timeMins -> 10 `i ]
"477
[; ;main.c: 477:             isWeekDay = 1;
[e = *U + &U _digits * -> -> -> 3 `i `ui `ux -> -> # *U &U _digits `ui `ux -> + % _timeMins -> 10 `i -> 48 `i `uc ]
"478
[; ;main.c: 478:             break;
[e = *U + &U _digits * -> -> -> 7 `i `ui `ux -> -> # *U &U _digits `ui `ux -> + % _timeSecs -> 10 `i -> 48 `i `uc ]
"479
[; ;main.c: 479:         case 4:
[e =/ _timeSecs -> 10 `i ]
"480
[; ;main.c: 480:             isWeekDay = 1;
[e = *U + &U _digits * -> -> -> 6 `i `ui `ux -> -> # *U &U _digits `ui `ux -> + % _timeSecs -> 10 `i -> 48 `i `uc ]
"481
[; ;main.c: 481:             break;
[e ( _LCD_SendString (1 -> &U _digits `*Cuc ]
"482
[; ;main.c: 482:         case 5:
}
[e :U 155 ]
[e $U 156  ]
[e :U 157 ]
"483
[; ;main.c: 483:             isWeekDay = 1;
[e :UE 154 ]
}
"486
[; ;main.c: 486:             isWeekDay = 0;
[v _CheckDay `(v ~T0 @X0 1 ef ]
"487
[; ;main.c: 487:             break;
{
[e :U _CheckDay ]
[f ]
"488
[; ;main.c: 488:         case 7:
[e $U 187  ]
"489
[; ;main.c: 489:             isWeekDay = 0;
{
"492
[; ;main.c: 492: 
[e :U 188 ]
"493
[; ;main.c: 493: 
[e = _isWeekDay -> 1 `i ]
"494
[; ;main.c: 494: void SetDate(int Key)
[e $U 186  ]
"495
[; ;main.c: 495: {
[e :U 189 ]
"496
[; ;main.c: 496: 
[e = _isWeekDay -> 1 `i ]
"497
[; ;main.c: 497:     LCD_Command(0x01);
[e $U 186  ]
"498
[; ;main.c: 498:     int i = 0;
[e :U 190 ]
"499
[; ;main.c: 499:     int thirty = 0;
[e = _isWeekDay -> 1 `i ]
"500
[; ;main.c: 500:     int thirtyOne = 0;
[e $U 186  ]
"501
[; ;main.c: 501:     int feb = 0;
[e :U 191 ]
"502
[; ;main.c: 502:     char* DateDis = ("Date:");
[e = _isWeekDay -> 1 `i ]
"503
[; ;main.c: 503:     char* DateSet = ("Date/Day Set");
[e $U 186  ]
"504
[; ;main.c: 504:     char Date[9] = {'0', '0', '/', '0', '0', '/', '0', '0', '\0'};
[e :U 192 ]
"505
[; ;main.c: 505:     int dateArray[3];
[e = _isWeekDay -> 1 `i ]
"506
[; ;main.c: 506: 
[e $U 186  ]
"507
[; ;main.c: 507:     month = RealTimeClock_get_month();
[e :U 193 ]
"508
[; ;main.c: 508:     day = RealTimeClock_get_day_of_month();
[e = _isWeekDay -> 0 `i ]
"509
[; ;main.c: 509:     year = RealTimeClock_get_year();
[e $U 186  ]
"510
[; ;main.c: 510:     dateArray[0] = day;
[e :U 194 ]
"511
[; ;main.c: 511:     dateArray[1] = month;
[e = _isWeekDay -> 0 `i ]
"512
[; ;main.c: 512:     dateArray[2] = year;
}
[e $U 186  ]
[e :U 187 ]
[e [\ _day_of_week , $ -> 1 `i 188
 , $ -> 2 `i 189
 , $ -> 3 `i 190
 , $ -> 4 `i 191
 , $ -> 5 `i 192
 , $ -> 6 `i 193
 , $ -> 7 `i 194
 186 ]
[e :U 186 ]
"513
[; ;main.c: 513:     while(1)
[e :UE 185 ]
}
"516
[; ;main.c: 516:         LCD_SendString(DateDis);
[v _SetDate `(v ~T0 @X0 1 ef1`i ]
"517
[; ;main.c: 517:         if(dateArray[1] == 2)
{
[e :U _SetDate ]
"516
[; ;main.c: 516:         LCD_SendString(DateDis);
[v _Key `i ~T0 @X0 1 r1 ]
"517
[; ;main.c: 517:         if(dateArray[1] == 2)
[f ]
"519
[; ;main.c: 519:             feb = 1;
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"520
[; ;main.c: 520:             thirty = 0;
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
"521
[; ;main.c: 521:             thirtyOne = 0;
[v _thirty `i ~T0 @X0 1 a ]
[e = _thirty -> 0 `i ]
"522
[; ;main.c: 522:             if(dateArray[0] == 31 || dateArray[0] == 30)
[v _thirtyOne `i ~T0 @X0 1 a ]
[e = _thirtyOne -> 0 `i ]
"523
[; ;main.c: 523:                 dateArray[0] = 28;
[v _feb `i ~T0 @X0 1 a ]
[e = _feb -> 0 `i ]
"524
[; ;main.c: 524:         }
[v _DateDis `*uc ~T0 @X0 1 a ]
[e = _DateDis :s 20C ]
"525
[; ;main.c: 525:         else if(dateArray[1] == 4 || dateArray[1] == 6 || dateArray[1] == 9 || dateArray[1] == 11)
[v _DateSet `*uc ~T0 @X0 1 a ]
[e = _DateSet :s 21C ]
[v F991 `uc ~T0 @X0 -> 9 `i s ]
[i F991
:U ..
"526
[; ;main.c: 526:         {
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 47 `ui `uc
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 47 `ui `uc
-> -> 48 `ui `uc
-> -> 48 `ui `uc
-> -> 0 `ui `uc
..
]
[v _Date `uc ~T0 @X0 -> 9 `i a ]
[e = _Date F991 ]
"527
[; ;main.c: 527:             feb = 0;
[v _dateArray `i ~T0 @X0 -> 3 `i a ]
"529
[; ;main.c: 529:             thirtyOne = 0;
[e = _month ( _RealTimeClock_get_month ..  ]
"530
[; ;main.c: 530:             if(dateArray[0] == 31)
[e = _day ( _RealTimeClock_get_day_of_month ..  ]
"531
[; ;main.c: 531:                 dateArray[0] = 30;
[e = _year ( _RealTimeClock_get_year ..  ]
"532
[; ;main.c: 532:         }
[e = *U + &U _dateArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _dateArray `ui `ux _day ]
"533
[; ;main.c: 533:         else
[e = *U + &U _dateArray * -> -> -> 1 `i `ui `ux -> -> # *U &U _dateArray `ui `ux _month ]
"534
[; ;main.c: 534:         {
[e = *U + &U _dateArray * -> -> -> 2 `i `ui `ux -> -> # *U &U _dateArray `ui `ux _year ]
"535
[; ;main.c: 535:             feb = 0;
[e :U 197 ]
"536
[; ;main.c: 536:             thirty = 0;
{
"537
[; ;main.c: 537:             thirtyOne = 1;
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"538
[; ;main.c: 538:         }
[e ( _LCD_SendString (1 -> _DateDis `*Cuc ]
"539
[; ;main.c: 539: 
[e $ ! == *U + &U _dateArray * -> -> -> 1 `i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 2 `i 199  ]
"540
[; ;main.c: 540:         Key = Keypad_Scan();
{
"541
[; ;main.c: 541:         if(Key == 13)
[e = _feb -> 1 `i ]
"542
[; ;main.c: 542:         {
[e = _thirty -> 0 `i ]
"543
[; ;main.c: 543:             LCD_Command(0x01);
[e = _thirtyOne -> 0 `i ]
"544
[; ;main.c: 544:             LCD_Command(0x03);
[e $ ! || == *U + &U _dateArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 31 `i == *U + &U _dateArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 30 `i 200  ]
"545
[; ;main.c: 545: 
[e = *U + &U _dateArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 28 `i ]
[e :U 200 ]
"546
[; ;main.c: 546:             RealTimeClock_set_year(dateArray[2]);
}
[e $U 201  ]
"547
[; ;main.c: 547:             RealTimeClock_set_month(dateArray[1]);
[e :U 199 ]
[e $ ! || || || == *U + &U _dateArray * -> -> -> 1 `i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 4 `i == *U + &U _dateArray * -> -> -> 1 `i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 6 `i == *U + &U _dateArray * -> -> -> 1 `i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 9 `i == *U + &U _dateArray * -> -> -> 1 `i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 11 `i 202  ]
"548
[; ;main.c: 548:             RealTimeClock_set_day_of_month(dateArray[0]);
{
"549
[; ;main.c: 549: 
[e = _feb -> 0 `i ]
"550
[; ;main.c: 550:             RealTimeClock_set_day_of_week(day_of_week);
[e = _thirty -> 1 `i ]
"551
[; ;main.c: 551: 
[e = _thirtyOne -> 0 `i ]
"552
[; ;main.c: 552:             CheckDay();
[e $ ! == *U + &U _dateArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 31 `i 203  ]
"553
[; ;main.c: 553: 
[e = *U + &U _dateArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 30 `i ]
[e :U 203 ]
"554
[; ;main.c: 554:             LCD_SendString(DateSet);
}
[e $U 204  ]
"555
[; ;main.c: 555:             Main_Delay(200);
[e :U 202 ]
"556
[; ;main.c: 556:             LCD_Command(0x01);
{
"557
[; ;main.c: 557:             break;
[e = _feb -> 0 `i ]
"558
[; ;main.c: 558:         }
[e = _thirty -> 0 `i ]
"559
[; ;main.c: 559:         if(Key == 14)
[e = _thirtyOne -> 1 `i ]
"560
[; ;main.c: 560:         {
}
[e :U 204 ]
[e :U 201 ]
"562
[; ;main.c: 562:                 i = 0;
[e = _Key ( _Keypad_Scan ..  ]
"563
[; ;main.c: 563:             else
[e $ ! == _Key -> 13 `i 205  ]
"564
[; ;main.c: 564:                 i++;
{
"565
[; ;main.c: 565:         }
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"566
[; ;main.c: 566:         if(Key == 15)
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"568
[; ;main.c: 568:             if (i == 0)
[e ( _RealTimeClock_set_year (1 *U + &U _dateArray * -> -> -> 2 `i `ui `ux -> -> # *U &U _dateArray `ui `ux ]
"569
[; ;main.c: 569:             {
[e ( _RealTimeClock_set_month (1 *U + &U _dateArray * -> -> -> 1 `i `ui `ux -> -> # *U &U _dateArray `ui `ux ]
"570
[; ;main.c: 570:                 if (thirtyOne == 1)
[e ( _RealTimeClock_set_day_of_month (1 *U + &U _dateArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _dateArray `ui `ux ]
"572
[; ;main.c: 572:                     if (dateArray[i] == 1)
[e ( _RealTimeClock_set_day_of_week (1 _day_of_week ]
"574
[; ;main.c: 574:                         dateArray[i] = 31;
[e ( _CheckDay ..  ]
"576
[; ;main.c: 576:                             day_of_week = 7;
[e ( _LCD_SendString (1 -> _DateSet `*Cuc ]
"577
[; ;main.c: 577:                         else
[e ( _Main_Delay (1 -> 200 `i ]
"578
[; ;main.c: 578:                             day_of_week = day_of_week - 1;
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"579
[; ;main.c: 579:                     }
[e $U 198  ]
"580
[; ;main.c: 580:                     else
}
[e :U 205 ]
"581
[; ;main.c: 581:                     {
[e $ ! == _Key -> 14 `i 206  ]
"582
[; ;main.c: 582:                         dateArray[i] = dateArray[i] - 1;
{
"583
[; ;main.c: 583:                         if (day_of_week == 1)
[e $ ! == _i -> 2 `i 207  ]
"584
[; ;main.c: 584:                             day_of_week = 7;
[e = _i -> 0 `i ]
[e $U 208  ]
"585
[; ;main.c: 585:                         else
[e :U 207 ]
"586
[; ;main.c: 586:                             day_of_week = day_of_week - 1;
[e ++ _i -> 1 `i ]
[e :U 208 ]
"587
[; ;main.c: 587:                     }
}
[e :U 206 ]
"588
[; ;main.c: 588:                 }
[e $ ! == _Key -> 15 `i 209  ]
"589
[; ;main.c: 589:                 else if (thirty == 1)
{
"590
[; ;main.c: 590:                 {
[e $ ! == _i -> 0 `i 210  ]
"591
[; ;main.c: 591:                     if (dateArray[i] == 1) {
{
"592
[; ;main.c: 592:                         dateArray[i] = 30;
[e $ ! == _thirtyOne -> 1 `i 211  ]
"593
[; ;main.c: 593:                         if (day_of_week == 1)
{
"594
[; ;main.c: 594:                             day_of_week = 7;
[e $ ! == *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i 212  ]
"595
[; ;main.c: 595:                         else
{
"596
[; ;main.c: 596:                             day_of_week = day_of_week - 1;
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 31 `i ]
"597
[; ;main.c: 597:                     } else {
[e $ ! == _day_of_week -> 1 `i 213  ]
"598
[; ;main.c: 598:                         dateArray[i] = dateArray[i] - 1;
[e = _day_of_week -> 7 `i ]
[e $U 214  ]
"599
[; ;main.c: 599:                         if (day_of_week == 1)
[e :U 213 ]
"600
[; ;main.c: 600:                             day_of_week = 7;
[e = _day_of_week - _day_of_week -> 1 `i ]
[e :U 214 ]
"601
[; ;main.c: 601:                         else
}
[e $U 215  ]
"602
[; ;main.c: 602:                             day_of_week = day_of_week - 1;
[e :U 212 ]
"603
[; ;main.c: 603:                     }
{
"604
[; ;main.c: 604:                 }
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux - *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i ]
"605
[; ;main.c: 605:                 else
[e $ ! == _day_of_week -> 1 `i 216  ]
"606
[; ;main.c: 606:                 {
[e = _day_of_week -> 7 `i ]
[e $U 217  ]
"607
[; ;main.c: 607:                     if (dateArray[i] == 1)
[e :U 216 ]
"608
[; ;main.c: 608:                     {
[e = _day_of_week - _day_of_week -> 1 `i ]
[e :U 217 ]
"609
[; ;main.c: 609:                         dateArray[i] = 28;
}
[e :U 215 ]
"610
[; ;main.c: 610:                         if (day_of_week == 1)
}
[e $U 218  ]
"611
[; ;main.c: 611:                             day_of_week = 7;
[e :U 211 ]
[e $ ! == _thirty -> 1 `i 219  ]
"612
[; ;main.c: 612:                         else
{
"613
[; ;main.c: 613:                             day_of_week = day_of_week - 1;
[e $ ! == *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i 220  ]
{
"614
[; ;main.c: 614:                     }
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 30 `i ]
"615
[; ;main.c: 615:                     else
[e $ ! == _day_of_week -> 1 `i 221  ]
"616
[; ;main.c: 616:                     {
[e = _day_of_week -> 7 `i ]
[e $U 222  ]
"617
[; ;main.c: 617:                         dateArray[i] = dateArray[i] - 1;
[e :U 221 ]
"618
[; ;main.c: 618:                         if (day_of_week == 1)
[e = _day_of_week - _day_of_week -> 1 `i ]
[e :U 222 ]
"619
[; ;main.c: 619:                             day_of_week = 7;
}
[e $U 223  ]
[e :U 220 ]
{
"620
[; ;main.c: 620:                         else
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux - *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i ]
"621
[; ;main.c: 621:                             day_of_week = day_of_week - 1;
[e $ ! == _day_of_week -> 1 `i 224  ]
"622
[; ;main.c: 622:                     }
[e = _day_of_week -> 7 `i ]
[e $U 225  ]
"623
[; ;main.c: 623:                 }
[e :U 224 ]
"624
[; ;main.c: 624:             }
[e = _day_of_week - _day_of_week -> 1 `i ]
[e :U 225 ]
"625
[; ;main.c: 625:             if (i == 1)
}
[e :U 223 ]
"626
[; ;main.c: 626:             {
}
[e $U 226  ]
"627
[; ;main.c: 627:                 if (dateArray[i] == 1)
[e :U 219 ]
"628
[; ;main.c: 628:                 {
{
"629
[; ;main.c: 629:                     dateArray[i] = 12;
[e $ ! == *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i 227  ]
"630
[; ;main.c: 630:                 }
{
"631
[; ;main.c: 631:                 else
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 28 `i ]
"632
[; ;main.c: 632:                     dateArray[i] = dateArray[i] - 1;
[e $ ! == _day_of_week -> 1 `i 228  ]
"633
[; ;main.c: 633:             }
[e = _day_of_week -> 7 `i ]
[e $U 229  ]
"634
[; ;main.c: 634:             if (i == 2)
[e :U 228 ]
"635
[; ;main.c: 635:             {
[e = _day_of_week - _day_of_week -> 1 `i ]
[e :U 229 ]
"636
[; ;main.c: 636:                 if (dateArray[i] == 0)
}
[e $U 230  ]
"637
[; ;main.c: 637:                 {
[e :U 227 ]
"638
[; ;main.c: 638:                     dateArray[i] = 99;
{
"639
[; ;main.c: 639:                 }
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux - *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i ]
"640
[; ;main.c: 640:                 else
[e $ ! == _day_of_week -> 1 `i 231  ]
"641
[; ;main.c: 641:                     dateArray[i] = dateArray[i] - 1;
[e = _day_of_week -> 7 `i ]
[e $U 232  ]
"642
[; ;main.c: 642:             }
[e :U 231 ]
"643
[; ;main.c: 643:         }
[e = _day_of_week - _day_of_week -> 1 `i ]
[e :U 232 ]
"644
[; ;main.c: 644:         if(Key == 16)
}
[e :U 230 ]
"645
[; ;main.c: 645:         {
}
[e :U 226 ]
[e :U 218 ]
"646
[; ;main.c: 646:             if (i == 0)
}
[e :U 210 ]
"647
[; ;main.c: 647:             {
[e $ ! == _i -> 1 `i 233  ]
"648
[; ;main.c: 648:                 if (thirtyOne == 1)
{
"649
[; ;main.c: 649:                 {
[e $ ! == *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i 234  ]
"650
[; ;main.c: 650:                     if (dateArray[i] == 31)
{
"651
[; ;main.c: 651:                     {
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 12 `i ]
"652
[; ;main.c: 652:                         dateArray[i] = 1;
}
[e $U 235  ]
"653
[; ;main.c: 653:                         if (day_of_week == 7)
[e :U 234 ]
"654
[; ;main.c: 654:                             day_of_week = 1;
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux - *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i ]
[e :U 235 ]
"655
[; ;main.c: 655:                         else
}
[e :U 233 ]
"656
[; ;main.c: 656:                             day_of_week = day_of_week + 1;
[e $ ! == _i -> 2 `i 236  ]
"657
[; ;main.c: 657:                     }
{
"658
[; ;main.c: 658:                     else
[e $ ! == *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 0 `i 237  ]
"659
[; ;main.c: 659:                     {
{
"660
[; ;main.c: 660:                         dateArray[i] = dateArray[i] + 1;
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 99 `i ]
"661
[; ;main.c: 661:                         if (day_of_week == 7)
}
[e $U 238  ]
"662
[; ;main.c: 662:                             day_of_week = 1;
[e :U 237 ]
"663
[; ;main.c: 663:                         else
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux - *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i ]
[e :U 238 ]
"664
[; ;main.c: 664:                             day_of_week = day_of_week + 1;
}
[e :U 236 ]
"665
[; ;main.c: 665:                     }
}
[e :U 209 ]
"666
[; ;main.c: 666:                 }
[e $ ! == _Key -> 16 `i 239  ]
"667
[; ;main.c: 667:                 else if (thirty == 1)
{
"668
[; ;main.c: 668:                 {
[e $ ! == _i -> 0 `i 240  ]
"669
[; ;main.c: 669:                     if (dateArray[i] == 30)
{
"670
[; ;main.c: 670:                     {
[e $ ! == _thirtyOne -> 1 `i 241  ]
"671
[; ;main.c: 671:                         dateArray[i] = 1;
{
"672
[; ;main.c: 672:                         if (day_of_week == 7)
[e $ ! == *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 31 `i 242  ]
"673
[; ;main.c: 673:                             day_of_week = 1;
{
"674
[; ;main.c: 674:                         else
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i ]
"675
[; ;main.c: 675:                             day_of_week = day_of_week + 1;
[e $ ! == _day_of_week -> 7 `i 243  ]
"676
[; ;main.c: 676:                     }
[e = _day_of_week -> 1 `i ]
[e $U 244  ]
"677
[; ;main.c: 677:                     else
[e :U 243 ]
"678
[; ;main.c: 678:                     {
[e = _day_of_week + _day_of_week -> 1 `i ]
[e :U 244 ]
"679
[; ;main.c: 679:                         dateArray[i] = dateArray[i] + 1;
}
[e $U 245  ]
"680
[; ;main.c: 680:                         if (day_of_week == 7)
[e :U 242 ]
"681
[; ;main.c: 681:                             day_of_week = 1;
{
"682
[; ;main.c: 682:                         else
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux + *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i ]
"683
[; ;main.c: 683:                             day_of_week = day_of_week + 1;
[e $ ! == _day_of_week -> 7 `i 246  ]
"684
[; ;main.c: 684:                     }
[e = _day_of_week -> 1 `i ]
[e $U 247  ]
"685
[; ;main.c: 685:                 }
[e :U 246 ]
"686
[; ;main.c: 686:                 else
[e = _day_of_week + _day_of_week -> 1 `i ]
[e :U 247 ]
"687
[; ;main.c: 687:                 {
}
[e :U 245 ]
"688
[; ;main.c: 688:                     if (dateArray[i] == 28)
}
[e $U 248  ]
"689
[; ;main.c: 689:                     {
[e :U 241 ]
[e $ ! == _thirty -> 1 `i 249  ]
"690
[; ;main.c: 690:                         dateArray[i] = 1;
{
"691
[; ;main.c: 691:                         if (day_of_week == 7)
[e $ ! == *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 30 `i 250  ]
"692
[; ;main.c: 692:                             day_of_week = 1;
{
"693
[; ;main.c: 693:                         else
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i ]
"694
[; ;main.c: 694:                             day_of_week = day_of_week + 1;
[e $ ! == _day_of_week -> 7 `i 251  ]
"695
[; ;main.c: 695:                     }
[e = _day_of_week -> 1 `i ]
[e $U 252  ]
"696
[; ;main.c: 696:                     else
[e :U 251 ]
"697
[; ;main.c: 697:                     {
[e = _day_of_week + _day_of_week -> 1 `i ]
[e :U 252 ]
"698
[; ;main.c: 698:                         dateArray[i] = dateArray[i] + 1;
}
[e $U 253  ]
"699
[; ;main.c: 699:                         if (day_of_week == 7)
[e :U 250 ]
"700
[; ;main.c: 700:                             day_of_week = 1;
{
"701
[; ;main.c: 701:                         else
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux + *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i ]
"702
[; ;main.c: 702:                             day_of_week = day_of_week + 1;
[e $ ! == _day_of_week -> 7 `i 254  ]
"703
[; ;main.c: 703:                     }
[e = _day_of_week -> 1 `i ]
[e $U 255  ]
"704
[; ;main.c: 704:                 }
[e :U 254 ]
"705
[; ;main.c: 705:             }
[e = _day_of_week + _day_of_week -> 1 `i ]
[e :U 255 ]
"706
[; ;main.c: 706:             if (i == 1)
}
[e :U 253 ]
"707
[; ;main.c: 707:             {
}
[e $U 256  ]
"708
[; ;main.c: 708:                 if (dateArray[i] == 12)
[e :U 249 ]
"709
[; ;main.c: 709:                 {
{
"710
[; ;main.c: 710:                     dateArray[i] = 1;
[e $ ! == *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 28 `i 257  ]
"711
[; ;main.c: 711:                 } else
{
"712
[; ;main.c: 712:                     dateArray[i] = dateArray[i] + 1;
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i ]
"713
[; ;main.c: 713:             }
[e $ ! == _day_of_week -> 7 `i 258  ]
"714
[; ;main.c: 714:             if (i == 2) {
[e = _day_of_week -> 1 `i ]
[e $U 259  ]
"715
[; ;main.c: 715:                 if (dateArray[i] == 99)
[e :U 258 ]
"716
[; ;main.c: 716:                 {
[e = _day_of_week + _day_of_week -> 1 `i ]
[e :U 259 ]
"717
[; ;main.c: 717:                     dateArray[i] = 0;
}
[e $U 260  ]
"718
[; ;main.c: 718:                 } else
[e :U 257 ]
"719
[; ;main.c: 719:                     dateArray[i] = dateArray[i] + 1;
{
"720
[; ;main.c: 720:             }
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux + *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i ]
"721
[; ;main.c: 721:         }
[e $ ! == _day_of_week -> 7 `i 261  ]
"722
[; ;main.c: 722:         month = dateArray[1];
[e = _day_of_week -> 1 `i ]
[e $U 262  ]
"723
[; ;main.c: 723:         day = dateArray[0];
[e :U 261 ]
"724
[; ;main.c: 724:         year = dateArray[2];
[e = _day_of_week + _day_of_week -> 1 `i ]
[e :U 262 ]
"725
[; ;main.c: 725:         Date[1] = day % 10 + 48;
}
[e :U 260 ]
"726
[; ;main.c: 726:         day /= 10;
}
[e :U 256 ]
[e :U 248 ]
"727
[; ;main.c: 727:         Date[0] = day % 10 + 48;
}
[e :U 240 ]
"728
[; ;main.c: 728:         Date[4] = month % 10 + 48;
[e $ ! == _i -> 1 `i 263  ]
"729
[; ;main.c: 729:         month /= 10;
{
"730
[; ;main.c: 730:         Date[3] = month % 10 + 48;
[e $ ! == *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 12 `i 264  ]
"731
[; ;main.c: 731:         Date[7] = year % 10 + 48;
{
"732
[; ;main.c: 732:         year /= 10;
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i ]
"733
[; ;main.c: 733:         Date[6] = year % 10 + 48;
}
[e $U 265  ]
[e :U 264 ]
"734
[; ;main.c: 734:         LCD_SendString(Date);
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux + *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i ]
[e :U 265 ]
"735
[; ;main.c: 735:     }
}
[e :U 263 ]
"736
[; ;main.c: 736: }
[e $ ! == _i -> 2 `i 266  ]
{
"737
[; ;main.c: 737: 
[e $ ! == *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 99 `i 267  ]
"738
[; ;main.c: 738: 
{
"739
[; ;main.c: 739: void CheckTime(void)
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 0 `i ]
"740
[; ;main.c: 740: {
}
[e $U 268  ]
[e :U 267 ]
"741
[; ;main.c: 741: 
[e = *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux + *U + &U _dateArray * -> -> _i `ui `ux -> -> # *U &U _dateArray `ui `ux -> 1 `i ]
[e :U 268 ]
"742
[; ;main.c: 742: 
}
[e :U 266 ]
"743
[; ;main.c: 743:     if (isWeekDay == 1)
}
[e :U 239 ]
"744
[; ;main.c: 744:     {
[e = _month *U + &U _dateArray * -> -> -> 1 `i `ui `ux -> -> # *U &U _dateArray `ui `ux ]
"745
[; ;main.c: 745:         timeMins = RealTimeClock_get_minutes();
[e = _day *U + &U _dateArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _dateArray `ui `ux ]
"746
[; ;main.c: 746:         timeHours = RealTimeClock_get_hours();
[e = _year *U + &U _dateArray * -> -> -> 2 `i `ui `ux -> -> # *U &U _dateArray `ui `ux ]
"747
[; ;main.c: 747:         if (timeHours < weekDayStart[0])
[e = *U + &U _Date * -> -> -> 1 `i `ui `ux -> -> # *U &U _Date `ui `ux -> + % _day -> 10 `i -> 48 `i `uc ]
"748
[; ;main.c: 748:         {
[e =/ _day -> 10 `i ]
"749
[; ;main.c: 749:             if(timeMins < weekDayStart[1])
[e = *U + &U _Date * -> -> -> 0 `i `ui `ux -> -> # *U &U _Date `ui `ux -> + % _day -> 10 `i -> 48 `i `uc ]
"750
[; ;main.c: 750:                 IsHeatingOn = 0;
[e = *U + &U _Date * -> -> -> 4 `i `ui `ux -> -> # *U &U _Date `ui `ux -> + % _month -> 10 `i -> 48 `i `uc ]
"751
[; ;main.c: 751:             else
[e =/ _month -> 10 `i ]
"752
[; ;main.c: 752:                 IsHeatingOn = 1;
[e = *U + &U _Date * -> -> -> 3 `i `ui `ux -> -> # *U &U _Date `ui `ux -> + % _month -> 10 `i -> 48 `i `uc ]
"753
[; ;main.c: 753:         }
[e = *U + &U _Date * -> -> -> 7 `i `ui `ux -> -> # *U &U _Date `ui `ux -> + % _year -> 10 `i -> 48 `i `uc ]
"754
[; ;main.c: 754:         else if(timeHours > weekDayEnd[0])
[e =/ _year -> 10 `i ]
"755
[; ;main.c: 755:         {
[e = *U + &U _Date * -> -> -> 6 `i `ui `ux -> -> # *U &U _Date `ui `ux -> + % _year -> 10 `i -> 48 `i `uc ]
"756
[; ;main.c: 756:             if(timeMins > weekDayEnd[1])
[e ( _LCD_SendString (1 -> &U _Date `*Cuc ]
"757
[; ;main.c: 757:                 IsHeatingOn = 0;
}
[e :U 196 ]
[e $U 197  ]
[e :U 198 ]
"758
[; ;main.c: 758:             else
[e :UE 195 ]
}
"761
[; ;main.c: 761:         else
[v _CheckTime `(v ~T0 @X0 1 ef ]
"762
[; ;main.c: 762:             IsHeatingOn = 1;
{
[e :U _CheckTime ]
[f ]
"765
[; ;main.c: 765: 
[e $ ! == _isWeekDay -> 1 `i 270  ]
"766
[; ;main.c: 766:     else if (isWeekDay == 0)
{
"767
[; ;main.c: 767:     {
[e = _timeMins ( _RealTimeClock_get_minutes ..  ]
"768
[; ;main.c: 768: 
[e = _timeHours ( _RealTimeClock_get_hours ..  ]
"769
[; ;main.c: 769:         timeMins = RealTimeClock_get_minutes();
[e $ ! < _timeHours *U + &U _weekDayStart * -> -> -> 0 `i `ui `ux -> -> # *U &U _weekDayStart `ui `ux 271  ]
"770
[; ;main.c: 770:         timeHours = RealTimeClock_get_hours();
{
"771
[; ;main.c: 771:         if (timeHours < weekEndStart[0])
[e $ ! < _timeMins *U + &U _weekDayStart * -> -> -> 1 `i `ui `ux -> -> # *U &U _weekDayStart `ui `ux 272  ]
"772
[; ;main.c: 772:         {
[e = _IsHeatingOn -> 0 `i ]
[e $U 273  ]
"773
[; ;main.c: 773:             IsHeatingOn = 0;
[e :U 272 ]
"774
[; ;main.c: 774:         }
[e = _IsHeatingOn -> 1 `i ]
[e :U 273 ]
"775
[; ;main.c: 775:         else if(timeHours > weekEndEnd[0])
}
[e $U 274  ]
"776
[; ;main.c: 776:         {
[e :U 271 ]
[e $ ! > _timeHours *U + &U _weekDayEnd * -> -> -> 0 `i `ui `ux -> -> # *U &U _weekDayEnd `ui `ux 275  ]
"777
[; ;main.c: 777:             IsHeatingOn = 0;
{
"778
[; ;main.c: 778:         }
[e $ ! > _timeMins *U + &U _weekDayEnd * -> -> -> 1 `i `ui `ux -> -> # *U &U _weekDayEnd `ui `ux 276  ]
"779
[; ;main.c: 779:         else
[e = _IsHeatingOn -> 0 `i ]
[e $U 277  ]
"780
[; ;main.c: 780:             IsHeatingOn = 1;
[e :U 276 ]
"781
[; ;main.c: 781:     }
[e = _IsHeatingOn -> 1 `i ]
[e :U 277 ]
"782
[; ;main.c: 782: }
}
[e $U 278  ]
"783
[; ;main.c: 783: 
[e :U 275 ]
"784
[; ;main.c: 784: 
[e = _IsHeatingOn -> 1 `i ]
[e :U 278 ]
[e :U 274 ]
"785
[; ;main.c: 785: void HeatingControlOff(int Key, int temp, int temp2, int temp3)
}
[e $U 279  ]
"788
[; ;main.c: 788:     DisableAlarm = 1;
[e :U 270 ]
[e $ ! == _isWeekDay -> 0 `i 280  ]
"789
[; ;main.c: 789:     SoundOff();
{
"791
[; ;main.c: 791:     char* On = "Heating On";
[e = _timeMins ( _RealTimeClock_get_minutes ..  ]
"792
[; ;main.c: 792: 
[e = _timeHours ( _RealTimeClock_get_hours ..  ]
"793
[; ;main.c: 793:     LCD_Command(0x01);
[e $ ! < _timeHours *U + &U _weekEndStart * -> -> -> 0 `i `ui `ux -> -> # *U &U _weekEndStart `ui `ux 281  ]
"794
[; ;main.c: 794: 
{
"795
[; ;main.c: 795:     LCD_Command(0x03);
[e = _IsHeatingOn -> 0 `i ]
"796
[; ;main.c: 796: 
}
[e $U 282  ]
"797
[; ;main.c: 797:     LCD_SendString(Off);
[e :U 281 ]
[e $ ! > _timeHours *U + &U _weekEndEnd * -> -> -> 0 `i `ui `ux -> -> # *U &U _weekEndEnd `ui `ux 283  ]
"798
[; ;main.c: 798: 
{
"799
[; ;main.c: 799:     Main_Delay(200);
[e = _IsHeatingOn -> 0 `i ]
"800
[; ;main.c: 800: 
}
[e $U 284  ]
"801
[; ;main.c: 801:     LCD_Command(0x01);
[e :U 283 ]
"802
[; ;main.c: 802:     while(1)
[e = _IsHeatingOn -> 1 `i ]
[e :U 284 ]
[e :U 282 ]
"803
[; ;main.c: 803:     {
}
[e :U 280 ]
[e :U 279 ]
"804
[; ;main.c: 804:         LCD_Command(0x03);
[e :UE 269 ]
}
"807
[; ;main.c: 807:         Key = Keypad_Scan();
[v _HeatingControlOff `(v ~T0 @X0 1 ef4`i`i`i`i ]
"808
[; ;main.c: 808: 
{
[e :U _HeatingControlOff ]
"807
[; ;main.c: 807:         Key = Keypad_Scan();
[v _Key `i ~T0 @X0 1 r1 ]
[v _temp `i ~T0 @X0 1 r2 ]
[v _temp2 `i ~T0 @X0 1 r3 ]
[v _temp3 `i ~T0 @X0 1 r4 ]
"808
[; ;main.c: 808: 
[f ]
"810
[; ;main.c: 810:             ChangeTrigger(Key);
[e = _DisableAlarm -> 1 `i ]
"811
[; ;main.c: 811:         }
[e ( _SoundOff ..  ]
"812
[; ;main.c: 812: 
[v _Off `*uc ~T0 @X0 1 a ]
[e = _Off :s 22C ]
"813
[; ;main.c: 813:         if (Key == 6) {
[v _On `*uc ~T0 @X0 1 a ]
[e = _On :s 23C ]
"815
[; ;main.c: 815:         }
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"817
[; ;main.c: 817:         if (Key == 7) {
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"819
[; ;main.c: 819:         }
[e ( _LCD_SendString (1 -> _Off `*Cuc ]
"821
[; ;main.c: 821:         if (Key == 9) {
[e ( _Main_Delay (1 -> 200 `i ]
"823
[; ;main.c: 823:         }
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"824
[; ;main.c: 824: 
[e :U 287 ]
"825
[; ;main.c: 825:         if(Key == 8)
{
"826
[; ;main.c: 826:         {
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"828
[; ;main.c: 828:         }
[e ( _MainScreen ..  ]
"829
[; ;main.c: 829: 
[e = _Key ( _Keypad_Scan ..  ]
"831
[; ;main.c: 831:         {
[e $ ! == _Key -> 1 `i 289  ]
{
"832
[; ;main.c: 832:             SetDate(Key);
[e ( _ChangeTrigger (1 -> _Key `uc ]
"833
[; ;main.c: 833:         }
}
[e :U 289 ]
"835
[; ;main.c: 835:         Get_Temp(tempBuffer);
[e $ ! == _Key -> 6 `i 290  ]
{
"836
[; ;main.c: 836: 
[e ( _DateDayScreen (1 _Key ]
"837
[; ;main.c: 837:         temp = tempBuffer[0] - 48;
}
[e :U 290 ]
"839
[; ;main.c: 839:         temp3 = (temp* 10) + temp2;
[e $ ! == _Key -> 7 `i 291  ]
{
"840
[; ;main.c: 840: 
[e ( _SwapToHeatingDisplay (1 _Key ]
"841
[; ;main.c: 841:         if(triggerTemp[0] > temp3)
}
[e :U 291 ]
"843
[; ;main.c: 843:             LCD_Command(0x01);
[e $ ! == _Key -> 9 `i 292  ]
{
"844
[; ;main.c: 844:             LCD_Command(0x03);
[e ( _SetTime (1 _Key ]
"845
[; ;main.c: 845:             LCD_SendString(On);
}
[e :U 292 ]
"847
[; ;main.c: 847: 
[e $ ! == _Key -> 8 `i 293  ]
"848
[; ;main.c: 848:             Main_Delay(200);
{
"849
[; ;main.c: 849:             LCD_Command(0x01);
[e ( _Switch24Hour (1 _Key ]
"850
[; ;main.c: 850: 
}
[e :U 293 ]
"852
[; ;main.c: 852: 
[e $ ! == _Key -> 13 `i 294  ]
"853
[; ;main.c: 853:             DisableAlarm = 0;
{
"854
[; ;main.c: 854:             break;
[e ( _SetDate (1 _Key ]
"855
[; ;main.c: 855:         }
}
[e :U 294 ]
"857
[; ;main.c: 857: }
[e ( _Get_Temp (1 &U _tempBuffer ]
"859
[; ;main.c: 859: 
[e = _temp - -> *U + &U _tempBuffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _tempBuffer `ui `ux `i -> 48 `i ]
"860
[; ;main.c: 860: void SoundAlarm(int Key, int temp, int temp2, int temp3)
[e = _temp2 - -> *U + &U _tempBuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _tempBuffer `ui `ux `i -> 48 `i ]
"861
[; ;main.c: 861: {
[e = _temp3 + * _temp -> 10 `i _temp2 ]
"863
[; ;main.c: 863:     char* Alarm = "Heating Failure";
[e $ ! > *U + &U _triggerTemp * -> -> -> 0 `i `ui `ux -> -> # *U &U _triggerTemp `ui `ux _temp3 295  ]
"864
[; ;main.c: 864:     DisableAlarm = 0;
{
"865
[; ;main.c: 865:     LCD_Command(0x01);
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"866
[; ;main.c: 866:     while(1)
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"867
[; ;main.c: 867:     {
[e ( _LCD_SendString (1 -> _On `*Cuc ]
"870
[; ;main.c: 870: 
[e ( _Main_Delay (1 -> 200 `i ]
"871
[; ;main.c: 871:         SoundOn();
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"873
[; ;main.c: 873:         Get_Temp(tempBuffer);
[e = _IsHeatingOn -> 1 `i ]
"875
[; ;main.c: 875:         temp2 = tempBuffer[1] - 48;
[e = _DisableAlarm -> 0 `i ]
"876
[; ;main.c: 876:         temp3 = (temp* 10) + temp2;
[e $U 288  ]
"877
[; ;main.c: 877:         Key = Keypad_Scan();
}
[e :U 295 ]
"878
[; ;main.c: 878: 
}
[e :U 286 ]
[e $U 287  ]
[e :U 288 ]
"879
[; ;main.c: 879:         if (Key == 1) {
[e :UE 285 ]
}
"882
[; ;main.c: 882: 
[v _SoundAlarm `(v ~T0 @X0 1 ef4`i`i`i`i ]
"883
[; ;main.c: 883:         if (Key == 6) {
{
[e :U _SoundAlarm ]
"882
[; ;main.c: 882: 
[v _Key `i ~T0 @X0 1 r1 ]
[v _temp `i ~T0 @X0 1 r2 ]
[v _temp2 `i ~T0 @X0 1 r3 ]
[v _temp3 `i ~T0 @X0 1 r4 ]
"883
[; ;main.c: 883:         if (Key == 6) {
[f ]
"885
[; ;main.c: 885:         }
[v _Alarm `*uc ~T0 @X0 1 a ]
[e = _Alarm :s 24C ]
"886
[; ;main.c: 886: 
[e = _DisableAlarm -> 0 `i ]
"887
[; ;main.c: 887:         if (Key == 7) {
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"888
[; ;main.c: 888:             SwapToHeatingDisplay(Key);
[e :U 298 ]
"889
[; ;main.c: 889:         }
{
"890
[; ;main.c: 890: 
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"891
[; ;main.c: 891:         if (Key == 9) {
[e ( _LCD_SendString (1 -> _Alarm `*Cuc ]
"893
[; ;main.c: 893:         }
[e ( _SoundOn ..  ]
"895
[; ;main.c: 895:         if(Key == 8)
[e ( _Get_Temp (1 &U _tempBuffer ]
"896
[; ;main.c: 896:         {
[e = _temp - -> *U + &U _tempBuffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _tempBuffer `ui `ux `i -> 48 `i ]
"897
[; ;main.c: 897:             Switch24Hour(Key);
[e = _temp2 - -> *U + &U _tempBuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _tempBuffer `ui `ux `i -> 48 `i ]
"898
[; ;main.c: 898:         }
[e = _temp3 + * _temp -> 10 `i _temp2 ]
"899
[; ;main.c: 899: 
[e = _Key ( _Keypad_Scan ..  ]
"901
[; ;main.c: 901:         {
[e $ ! == _Key -> 1 `i 300  ]
{
"902
[; ;main.c: 902:             SetDate(Key);
[e ( _ChangeTrigger (1 -> _Key `uc ]
"903
[; ;main.c: 903:         }
}
[e :U 300 ]
"905
[; ;main.c: 905:         if(Key == 5)
[e $ ! == _Key -> 6 `i 301  ]
{
"906
[; ;main.c: 906:         {
[e ( _DateDayScreen (1 _Key ]
"907
[; ;main.c: 907:             DisableAlarm = 1;
}
[e :U 301 ]
"909
[; ;main.c: 909:             LCD_Command(0x01);
[e $ ! == _Key -> 7 `i 302  ]
{
"910
[; ;main.c: 910:             break;
[e ( _SwapToHeatingDisplay (1 _Key ]
"911
[; ;main.c: 911:         }
}
[e :U 302 ]
"913
[; ;main.c: 913:         if(temp3 > triggerTemp[0])
[e $ ! == _Key -> 9 `i 303  ]
{
"914
[; ;main.c: 914:         {
[e ( _SetTime (1 _Key ]
"915
[; ;main.c: 915:             LCD_Command(0x01);
}
[e :U 303 ]
"917
[; ;main.c: 917:             break;
[e $ ! == _Key -> 8 `i 304  ]
"918
[; ;main.c: 918:         }
{
"919
[; ;main.c: 919:     }
[e ( _Switch24Hour (1 _Key ]
"920
[; ;main.c: 920: }
}
[e :U 304 ]
"922
[; ;main.c: 922: 
[e $ ! == _Key -> 13 `i 305  ]
"923
[; ;main.c: 923: 
{
"924
[; ;main.c: 924: 
[e ( _SetDate (1 _Key ]
"925
[; ;main.c: 925: 
}
[e :U 305 ]
"927
[; ;main.c: 927: void main() {
[e $ ! == _Key -> 5 `i 306  ]
"928
[; ;main.c: 928: 
{
"929
[; ;main.c: 929: 
[e = _DisableAlarm -> 1 `i ]
"930
[; ;main.c: 930:     LCD_Init();
[e ( _SoundOff ..  ]
"931
[; ;main.c: 931:     Init_Keypad();
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"932
[; ;main.c: 932:     Thermometer_Init();
[e $U 299  ]
"933
[; ;main.c: 933:     RealTimeClock_init();
}
[e :U 306 ]
"935
[; ;main.c: 935:     int start_date[8] = {0,0,12,1,1,5,10,0};
[e $ ! > _temp3 *U + &U _triggerTemp * -> -> -> 0 `i `ui `ux -> -> # *U &U _triggerTemp `ui `ux 307  ]
"936
[; ;main.c: 936:     RealTimeClock_set_burst_time(start_date);
{
"937
[; ;main.c: 937: 
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"938
[; ;main.c: 938: 
[e ( _HeatingControlOff (4 , , , _Key _temp _temp2 _temp3 ]
"939
[; ;main.c: 939:     Buzzer_Init();
[e $U 299  ]
"940
[; ;main.c: 940:     int Key = 0;
}
[e :U 307 ]
"941
[; ;main.c: 941:     DisableAlarm = 0;
}
[e :U 297 ]
[e $U 298  ]
[e :U 299 ]
"942
[; ;main.c: 942:     isWeekDay = 1;
[e :UE 296 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"949
[; ;main.c: 949:     LCD_Command(0x01);
[v _main `(v ~T0 @X0 1 ef ]
{
[e :U _main ]
[f ]
"952
[; ;main.c: 952: 
[e ( _LCD_Init ..  ]
"953
[; ;main.c: 953:     LCD_Command(0x38);
[e ( _Init_Keypad ..  ]
"954
[; ;main.c: 954:     SoundOff();
[e ( _Thermometer_Init ..  ]
"955
[; ;main.c: 955: 
[e ( _RealTimeClock_init ..  ]
[v F1009 `i ~T0 @X0 -> 8 `i s ]
[i F1009
:U ..
"957
[; ;main.c: 957:     CheckDay();
-> 0 `i
-> 0 `i
-> 12 `i
-> 1 `i
-> 1 `i
-> 5 `i
-> 10 `i
-> 0 `i
..
]
[v _start_date `i ~T0 @X0 -> 8 `i a ]
[e = _start_date F1009 ]
"958
[; ;main.c: 958:     CheckTime();
[e ( _RealTimeClock_set_burst_time (1 &U _start_date ]
"961
[; ;main.c: 961:     {
[e ( _Buzzer_Init ..  ]
"962
[; ;main.c: 962:         day_of_week = RealTimeClock_get_day_of_week();
[v _Key `i ~T0 @X0 1 a ]
[e = _Key -> 0 `i ]
"963
[; ;main.c: 963: 
[e = _DisableAlarm -> 0 `i ]
"964
[; ;main.c: 964:         LCD_Command(0x03);
[e = _isWeekDay -> 1 `i ]
"965
[; ;main.c: 965: 
[v _temp `i ~T0 @X0 1 a ]
[v _temp2 `i ~T0 @X0 1 a ]
[v _temp3 `i ~T0 @X0 1 a ]
[v _tempdec `i ~T0 @X0 1 a ]
[v _tempdectenth `i ~T0 @X0 1 a ]
"966
[; ;main.c: 966: 
[e = _IsHeatingOn -> 1 `i ]
"967
[; ;main.c: 967:         temp = tempBuffer[0] - 48;
[e = _is24Hour -> 1 `i ]
"969
[; ;main.c: 969:         temp3 = (temp * 10) + temp2;
[e ( _LCD_Command (1 -> -> 12 `i `uc ]
"971
[; ;main.c: 971: 
[e ( _LCD_Command (1 -> -> 1 `i `uc ]
"973
[; ;main.c: 973:         tempdec = tempBuffer[2];
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"975
[; ;main.c: 975:         previousTemp[1] = tempdec;
[e ( _LCD_Command (1 -> -> 56 `i `uc ]
"976
[; ;main.c: 976:         previousTemp[2] = tempdectenth;
[e ( _SoundOff ..  ]
"978
[; ;main.c: 978:         Key = Keypad_Scan();
[e = _day_of_week ( _RealTimeClock_get_day_of_week ..  ]
"979
[; ;main.c: 979:         MainScreen();
[e ( _CheckDay ..  ]
"980
[; ;main.c: 980: 
[e ( _CheckTime ..  ]
"981
[; ;main.c: 981: 
[e ( _Main_Delay (1 -> 50 `i ]
"982
[; ;main.c: 982:         temp = tempBuffer[0] - 48;
[e :U 310 ]
"983
[; ;main.c: 983:         temp2 = tempBuffer[1] - 48;
{
"984
[; ;main.c: 984:         temp3 = (temp * 10) + temp2;
[e = _day_of_week ( _RealTimeClock_get_day_of_week ..  ]
"986
[; ;main.c: 986: 
[e ( _LCD_Command (1 -> -> 3 `i `uc ]
"989
[; ;main.c: 989: 
[e = _temp - -> *U + &U _tempBuffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _tempBuffer `ui `ux `i -> 48 `i ]
"990
[; ;main.c: 990:         if (Key == 1) {
[e = _temp2 - -> *U + &U _tempBuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _tempBuffer `ui `ux `i -> 48 `i ]
"991
[; ;main.c: 991:             ChangeTrigger(Key);
[e = _temp3 + * _temp -> 10 `i _temp2 ]
"992
[; ;main.c: 992:         }
[e = *U + &U _previousTemp * -> -> -> 0 `i `ui `ux -> -> # *U &U _previousTemp `ui `ux _temp3 ]
"995
[; ;main.c: 995:             DateDayScreen(Key);
[e = _tempdec -> *U + &U _tempBuffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _tempBuffer `ui `ux `i ]
"996
[; ;main.c: 996:         }
[e = _tempdectenth -> *U + &U _tempBuffer * -> -> -> 3 `i `ui `ux -> -> # *U &U _tempBuffer `ui `ux `i ]
"997
[; ;main.c: 997: 
[e = *U + &U _previousTemp * -> -> -> 1 `i `ui `ux -> -> # *U &U _previousTemp `ui `ux _tempdec ]
"998
[; ;main.c: 998:         if (Key == 7) {
[e = *U + &U _previousTemp * -> -> -> 2 `i `ui `ux -> -> # *U &U _previousTemp `ui `ux _tempdectenth ]
"1000
[; ;main.c: 1000:         }
[e = _Key ( _Keypad_Scan ..  ]
"1001
[; ;main.c: 1001: 
[e ( _MainScreen ..  ]
"1004
[; ;main.c: 1004:         }
[e = _temp - -> *U + &U _tempBuffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _tempBuffer `ui `ux `i -> 48 `i ]
"1005
[; ;main.c: 1005: 
[e = _temp2 - -> *U + &U _tempBuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _tempBuffer `ui `ux `i -> 48 `i ]
"1006
[; ;main.c: 1006:         if(Key == 8)
[e = _temp3 + * _temp -> 10 `i _temp2 ]
"1009
[; ;main.c: 1009:         }
[e = _tempdec -> *U + &U _tempBuffer * -> -> -> 3 `i `ui `ux -> -> # *U &U _tempBuffer `ui `ux `i ]
"1010
[; ;main.c: 1010: 
[e = _tempdectenth -> *U + &U _tempBuffer * -> -> -> 4 `i `ui `ux -> -> # *U &U _tempBuffer `ui `ux `i ]
"1012
[; ;main.c: 1012:         {
[e $ ! == _Key -> 1 `i 312  ]
{
"1013
[; ;main.c: 1013:             SetDate(Key);
[e ( _ChangeTrigger (1 -> _Key `uc ]
"1014
[; ;main.c: 1014:         }
}
[e :U 312 ]
"1016
[; ;main.c: 1016:         if (temp3 >= triggerTemp[0]) {
[e $ ! == _Key -> 6 `i 313  ]
{
"1017
[; ;main.c: 1017:             IsHeatingOn = 0;
[e ( _DateDayScreen (1 _Key ]
"1018
[; ;main.c: 1018:             HeatingControlOff(Key, temp, temp2, temp3);
}
[e :U 313 ]
"1020
[; ;main.c: 1020:         if (temp3 <= triggerTemp[0] && temp3 < previousTemp[0] && IsHeatingOn == 1 && DisableAlarm == 0) {
[e $ ! == _Key -> 7 `i 314  ]
{
"1021
[; ;main.c: 1021:             SoundAlarm(Key, temp, temp2, temp3);
[e ( _SwapToHeatingDisplay (1 _Key ]
"1022
[; ;main.c: 1022:         }
}
[e :U 314 ]
"1024
[; ;main.c: 1024:         CheckTime();
[e $ ! == _Key -> 9 `i 315  ]
{
"1025
[; ;main.c: 1025:     }
[e ( _SetTime (1 _Key ]
"1026
[; ;main.c: 1026: }
}
[e :U 315 ]
"1028
[e $ ! == _Key -> 8 `i 316  ]
"1029
{
"1030
[e ( _Switch24Hour (1 _Key ]
"1031
}
[e :U 316 ]
"1033
[e $ ! == _Key -> 13 `i 317  ]
"1034
{
"1035
[e ( _SetDate (1 _Key ]
"1036
}
[e :U 317 ]
"1038
[e $ ! >= _temp3 *U + &U _triggerTemp * -> -> -> 0 `i `ui `ux -> -> # *U &U _triggerTemp `ui `ux 318  ]
{
"1039
[e = _IsHeatingOn -> 0 `i ]
"1040
[e ( _HeatingControlOff (4 , , , _Key _temp _temp2 _temp3 ]
"1041
}
[e :U 318 ]
"1042
[e $ ! && && && <= _temp3 *U + &U _triggerTemp * -> -> -> 0 `i `ui `ux -> -> # *U &U _triggerTemp `ui `ux < _temp3 *U + &U _previousTemp * -> -> -> 0 `i `ui `ux -> -> # *U &U _previousTemp `ui `ux == _IsHeatingOn -> 1 `i == _DisableAlarm -> 0 `i 319  ]
{
"1043
[e ( _SoundAlarm (4 , , , _Key _temp _temp2 _temp3 ]
"1044
}
[e :U 319 ]
"1046
[e ( _CheckTime ..  ]
"1047
}
[e :U 309 ]
[e $U 310  ]
[e :U 311 ]
"1048
[e :UE 308 ]
}
[a 4C 84 104 117 114 115 100 97 121 0 ]
[a 2C 84 117 101 115 100 97 121 0 ]
[a 3C 87 101 100 110 101 115 100 97 121 0 ]
[a 6C 83 97 116 117 114 100 97 121 0 ]
[a 7C 83 117 110 100 97 121 0 ]
[a 1C 77 111 110 100 97 121 0 ]
[a 5C 70 114 105 100 97 121 0 ]
[a 21C 68 97 116 101 47 68 97 121 32 83 101 116 0 ]
[a 11C 84 114 105 103 103 101 114 32 83 101 116 0 ]
[a 19C 84 105 109 101 32 83 101 116 0 ]
[a 15C 50 52 32 72 111 117 114 32 105 115 32 111 110 0 ]
[a 23C 72 101 97 116 105 110 103 32 79 110 0 ]
[a 13C 79 110 0 ]
[a 22C 72 101 97 116 105 110 103 32 79 102 102 0 ]
[a 14C 79 102 102 0 ]
[a 24C 72 101 97 116 105 110 103 32 70 97 105 108 117 114 101 0 ]
[a 10C 84 114 105 103 103 101 114 58 0 ]
[a 9C 84 101 109 112 58 0 ]
[a 12C 72 101 97 116 105 110 103 58 0 ]
[a 20C 68 97 116 101 58 0 ]
[a 8C 84 105 109 101 58 0 ]
[a 18C 84 105 109 101 58 0 ]
[a 17C 68 97 121 58 32 0 ]
[a 16C 68 97 116 101 58 32 0 ]
