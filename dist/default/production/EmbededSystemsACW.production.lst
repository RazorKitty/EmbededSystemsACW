

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Jan 08 12:57:33 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F877A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   176                           SSPCON2 equ 091h ;# 
   177  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   178                           PR2 equ 092h ;# 
   179  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   180                           SSPADD equ 093h ;# 
   181  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   182                           SSPSTAT equ 094h ;# 
   183  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   184                           TXSTA equ 098h ;# 
   185  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   186                           SPBRG equ 099h ;# 
   187  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   188                           CMCON equ 09Ch ;# 
   189  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   190                           CVRCON equ 09Dh ;# 
   191  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   192                           ADRESL equ 09Eh ;# 
   193  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   194                           ADCON1 equ 09Fh ;# 
   195  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   196                           EEDATA equ 010Ch ;# 
   197  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   198                           EEADR equ 010Dh ;# 
   199  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   200                           EEDATH equ 010Eh ;# 
   201  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   202                           EEADRH equ 010Fh ;# 
   203  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   204                           EECON1 equ 018Ch ;# 
   205  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   206                           EECON2 equ 018Dh ;# 
   207  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   208                           INDF equ 00h ;# 
   209  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   210                           TMR0 equ 01h ;# 
   211  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   212                           PCL equ 02h ;# 
   213  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   214                           STATUS equ 03h ;# 
   215  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   216                           FSR equ 04h ;# 
   217  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   218                           PORTA equ 05h ;# 
   219  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   220                           PORTB equ 06h ;# 
   221  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   222                           PORTC equ 07h ;# 
   223  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   224                           PORTD equ 08h ;# 
   225  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   226                           PORTE equ 09h ;# 
   227  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   228                           PCLATH equ 0Ah ;# 
   229  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   230                           INTCON equ 0Bh ;# 
   231  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   232                           PIR1 equ 0Ch ;# 
   233  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   234                           PIR2 equ 0Dh ;# 
   235  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   236                           TMR1 equ 0Eh ;# 
   237  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   238                           TMR1L equ 0Eh ;# 
   239  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   240                           TMR1H equ 0Fh ;# 
   241  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   242                           T1CON equ 010h ;# 
   243  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   244                           TMR2 equ 011h ;# 
   245  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   246                           T2CON equ 012h ;# 
   247  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   248                           SSPBUF equ 013h ;# 
   249  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   250                           SSPCON equ 014h ;# 
   251  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   252                           CCPR1 equ 015h ;# 
   253  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   254                           CCPR1L equ 015h ;# 
   255  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   256                           CCPR1H equ 016h ;# 
   257  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   258                           CCP1CON equ 017h ;# 
   259  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   260                           RCSTA equ 018h ;# 
   261  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   262                           TXREG equ 019h ;# 
   263  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   264                           RCREG equ 01Ah ;# 
   265  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   266                           CCPR2 equ 01Bh ;# 
   267  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   268                           CCPR2L equ 01Bh ;# 
   269  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   270                           CCPR2H equ 01Ch ;# 
   271  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   272                           CCP2CON equ 01Dh ;# 
   273  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   274                           ADRESH equ 01Eh ;# 
   275  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   276                           ADCON0 equ 01Fh ;# 
   277  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   278                           OPTION_REG equ 081h ;# 
   279  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   280                           TRISA equ 085h ;# 
   281  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   282                           TRISB equ 086h ;# 
   283  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   284                           TRISC equ 087h ;# 
   285  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   286                           TRISD equ 088h ;# 
   287  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   288                           TRISE equ 089h ;# 
   289  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   290                           PIE1 equ 08Ch ;# 
   291  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   292                           PIE2 equ 08Dh ;# 
   293  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   294                           PCON equ 08Eh ;# 
   295  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   296                           SSPCON2 equ 091h ;# 
   297  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   298                           PR2 equ 092h ;# 
   299  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   300                           SSPADD equ 093h ;# 
   301  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   302                           SSPSTAT equ 094h ;# 
   303  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   304                           TXSTA equ 098h ;# 
   305  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   306                           SPBRG equ 099h ;# 
   307  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   308                           CMCON equ 09Ch ;# 
   309  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   310                           CVRCON equ 09Dh ;# 
   311  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   312                           ADRESL equ 09Eh ;# 
   313  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   314                           ADCON1 equ 09Fh ;# 
   315  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   316                           EEDATA equ 010Ch ;# 
   317  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   318                           EEADR equ 010Dh ;# 
   319  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   320                           EEDATH equ 010Eh ;# 
   321  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   322                           EEADRH equ 010Fh ;# 
   323  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   324                           EECON1 equ 018Ch ;# 
   325  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   326                           EECON2 equ 018Dh ;# 
   327  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   328                           INDF equ 00h ;# 
   329  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   330                           TMR0 equ 01h ;# 
   331  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   332                           PCL equ 02h ;# 
   333  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   334                           STATUS equ 03h ;# 
   335  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   336                           FSR equ 04h ;# 
   337  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   338                           PORTA equ 05h ;# 
   339  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   340                           PORTB equ 06h ;# 
   341  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   342                           PORTC equ 07h ;# 
   343  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   344                           PORTD equ 08h ;# 
   345  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   346                           PORTE equ 09h ;# 
   347  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   348                           PCLATH equ 0Ah ;# 
   349  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   350                           INTCON equ 0Bh ;# 
   351  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   352                           PIR1 equ 0Ch ;# 
   353  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   354                           PIR2 equ 0Dh ;# 
   355  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   356                           TMR1 equ 0Eh ;# 
   357  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   358                           TMR1L equ 0Eh ;# 
   359  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   360                           TMR1H equ 0Fh ;# 
   361  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   362                           T1CON equ 010h ;# 
   363  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   364                           TMR2 equ 011h ;# 
   365  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   366                           T2CON equ 012h ;# 
   367  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   368                           SSPBUF equ 013h ;# 
   369  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   370                           SSPCON equ 014h ;# 
   371  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   372                           CCPR1 equ 015h ;# 
   373  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   374                           CCPR1L equ 015h ;# 
   375  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   376                           CCPR1H equ 016h ;# 
   377  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   378                           CCP1CON equ 017h ;# 
   379  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   380                           RCSTA equ 018h ;# 
   381  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   382                           TXREG equ 019h ;# 
   383  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   384                           RCREG equ 01Ah ;# 
   385  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   386                           CCPR2 equ 01Bh ;# 
   387  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   388                           CCPR2L equ 01Bh ;# 
   389  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   390                           CCPR2H equ 01Ch ;# 
   391  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   392                           CCP2CON equ 01Dh ;# 
   393  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   394                           ADRESH equ 01Eh ;# 
   395  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   396                           ADCON0 equ 01Fh ;# 
   397  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   398                           OPTION_REG equ 081h ;# 
   399  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   400                           TRISA equ 085h ;# 
   401  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   402                           TRISB equ 086h ;# 
   403  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   404                           TRISC equ 087h ;# 
   405  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   406                           TRISD equ 088h ;# 
   407  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   408                           TRISE equ 089h ;# 
   409  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   410                           PIE1 equ 08Ch ;# 
   411  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   412                           PIE2 equ 08Dh ;# 
   413  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   414                           PCON equ 08Eh ;# 
   415  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   416                           SSPCON2 equ 091h ;# 
   417  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   418                           PR2 equ 092h ;# 
   419  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   420                           SSPADD equ 093h ;# 
   421  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   422                           SSPSTAT equ 094h ;# 
   423  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   424                           TXSTA equ 098h ;# 
   425  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   426                           SPBRG equ 099h ;# 
   427  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   428                           CMCON equ 09Ch ;# 
   429  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   430                           CVRCON equ 09Dh ;# 
   431  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   432                           ADRESL equ 09Eh ;# 
   433  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   434                           ADCON1 equ 09Fh ;# 
   435  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   436                           EEDATA equ 010Ch ;# 
   437  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   438                           EEADR equ 010Dh ;# 
   439  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   440                           EEDATH equ 010Eh ;# 
   441  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   442                           EEADRH equ 010Fh ;# 
   443  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   444                           EECON1 equ 018Ch ;# 
   445  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   446                           EECON2 equ 018Dh ;# 
   447  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   448                           INDF equ 00h ;# 
   449  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   450                           TMR0 equ 01h ;# 
   451  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   452                           PCL equ 02h ;# 
   453  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   454                           STATUS equ 03h ;# 
   455  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   456                           FSR equ 04h ;# 
   457  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   458                           PORTA equ 05h ;# 
   459  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   460                           PORTB equ 06h ;# 
   461  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   462                           PORTC equ 07h ;# 
   463  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   464                           PORTD equ 08h ;# 
   465  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   466                           PORTE equ 09h ;# 
   467  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   468                           PCLATH equ 0Ah ;# 
   469  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   470                           INTCON equ 0Bh ;# 
   471  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   472                           PIR1 equ 0Ch ;# 
   473  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   474                           PIR2 equ 0Dh ;# 
   475  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   476                           TMR1 equ 0Eh ;# 
   477  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   478                           TMR1L equ 0Eh ;# 
   479  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   480                           TMR1H equ 0Fh ;# 
   481  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   482                           T1CON equ 010h ;# 
   483  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   484                           TMR2 equ 011h ;# 
   485  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   486                           T2CON equ 012h ;# 
   487  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   488                           SSPBUF equ 013h ;# 
   489  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   490                           SSPCON equ 014h ;# 
   491  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   492                           CCPR1 equ 015h ;# 
   493  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   494                           CCPR1L equ 015h ;# 
   495  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   496                           CCPR1H equ 016h ;# 
   497  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   498                           CCP1CON equ 017h ;# 
   499  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   500                           RCSTA equ 018h ;# 
   501  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   502                           TXREG equ 019h ;# 
   503  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   504                           RCREG equ 01Ah ;# 
   505  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   506                           CCPR2 equ 01Bh ;# 
   507  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   508                           CCPR2L equ 01Bh ;# 
   509  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   510                           CCPR2H equ 01Ch ;# 
   511  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   512                           CCP2CON equ 01Dh ;# 
   513  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   514                           ADRESH equ 01Eh ;# 
   515  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   516                           ADCON0 equ 01Fh ;# 
   517  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   518                           OPTION_REG equ 081h ;# 
   519  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   520                           TRISA equ 085h ;# 
   521  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   522                           TRISB equ 086h ;# 
   523  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   524                           TRISC equ 087h ;# 
   525  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   526                           TRISD equ 088h ;# 
   527  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   528                           TRISE equ 089h ;# 
   529  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   530                           PIE1 equ 08Ch ;# 
   531  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   532                           PIE2 equ 08Dh ;# 
   533  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   534                           PCON equ 08Eh ;# 
   535  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   536                           SSPCON2 equ 091h ;# 
   537  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   538                           PR2 equ 092h ;# 
   539  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   540                           SSPADD equ 093h ;# 
   541  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   542                           SSPSTAT equ 094h ;# 
   543  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   544                           TXSTA equ 098h ;# 
   545  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   546                           SPBRG equ 099h ;# 
   547  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   548                           CMCON equ 09Ch ;# 
   549  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   550                           CVRCON equ 09Dh ;# 
   551  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   552                           ADRESL equ 09Eh ;# 
   553  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   554                           ADCON1 equ 09Fh ;# 
   555  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   556                           EEDATA equ 010Ch ;# 
   557  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   558                           EEADR equ 010Dh ;# 
   559  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   560                           EEDATH equ 010Eh ;# 
   561  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   562                           EEADRH equ 010Fh ;# 
   563  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   564                           EECON1 equ 018Ch ;# 
   565  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   566                           EECON2 equ 018Dh ;# 
   567  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   568                           INDF equ 00h ;# 
   569  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   570                           TMR0 equ 01h ;# 
   571  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   572                           PCL equ 02h ;# 
   573  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   574                           STATUS equ 03h ;# 
   575  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   576                           FSR equ 04h ;# 
   577  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   578                           PORTA equ 05h ;# 
   579  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   580                           PORTB equ 06h ;# 
   581  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   582                           PORTC equ 07h ;# 
   583  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   584                           PORTD equ 08h ;# 
   585  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   586                           PORTE equ 09h ;# 
   587  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   588                           PCLATH equ 0Ah ;# 
   589  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   590                           INTCON equ 0Bh ;# 
   591  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   592                           PIR1 equ 0Ch ;# 
   593  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   594                           PIR2 equ 0Dh ;# 
   595  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   596                           TMR1 equ 0Eh ;# 
   597  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   598                           TMR1L equ 0Eh ;# 
   599  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   600                           TMR1H equ 0Fh ;# 
   601  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   602                           T1CON equ 010h ;# 
   603  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   604                           TMR2 equ 011h ;# 
   605  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   606                           T2CON equ 012h ;# 
   607  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   608                           SSPBUF equ 013h ;# 
   609  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   610                           SSPCON equ 014h ;# 
   611  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   612                           CCPR1 equ 015h ;# 
   613  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   614                           CCPR1L equ 015h ;# 
   615  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   616                           CCPR1H equ 016h ;# 
   617  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   618                           CCP1CON equ 017h ;# 
   619  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   620                           RCSTA equ 018h ;# 
   621  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   622                           TXREG equ 019h ;# 
   623  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   624                           RCREG equ 01Ah ;# 
   625  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   626                           CCPR2 equ 01Bh ;# 
   627  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   628                           CCPR2L equ 01Bh ;# 
   629  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   630                           CCPR2H equ 01Ch ;# 
   631  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   632                           CCP2CON equ 01Dh ;# 
   633  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   634                           ADRESH equ 01Eh ;# 
   635  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   636                           ADCON0 equ 01Fh ;# 
   637  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   638                           OPTION_REG equ 081h ;# 
   639  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   640                           TRISA equ 085h ;# 
   641  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   642                           TRISB equ 086h ;# 
   643  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   644                           TRISC equ 087h ;# 
   645  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   646                           TRISD equ 088h ;# 
   647  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   648                           TRISE equ 089h ;# 
   649  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   650                           PIE1 equ 08Ch ;# 
   651  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   652                           PIE2 equ 08Dh ;# 
   653  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   654                           PCON equ 08Eh ;# 
   655  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   656                           SSPCON2 equ 091h ;# 
   657  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   658                           PR2 equ 092h ;# 
   659  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   660                           SSPADD equ 093h ;# 
   661  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   662                           SSPSTAT equ 094h ;# 
   663  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   664                           TXSTA equ 098h ;# 
   665  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   666                           SPBRG equ 099h ;# 
   667  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   668                           CMCON equ 09Ch ;# 
   669  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   670                           CVRCON equ 09Dh ;# 
   671  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   672                           ADRESL equ 09Eh ;# 
   673  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   674                           ADCON1 equ 09Fh ;# 
   675  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   676                           EEDATA equ 010Ch ;# 
   677  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   678                           EEADR equ 010Dh ;# 
   679  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   680                           EEDATH equ 010Eh ;# 
   681  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   682                           EEADRH equ 010Fh ;# 
   683  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   684                           EECON1 equ 018Ch ;# 
   685  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   686                           EECON2 equ 018Dh ;# 
   687  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   688                           INDF equ 00h ;# 
   689  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   690                           TMR0 equ 01h ;# 
   691  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   692                           PCL equ 02h ;# 
   693  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   694                           STATUS equ 03h ;# 
   695  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   696                           FSR equ 04h ;# 
   697  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   698                           PORTA equ 05h ;# 
   699  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   700                           PORTB equ 06h ;# 
   701  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   702                           PORTC equ 07h ;# 
   703  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   704                           PORTD equ 08h ;# 
   705  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   706                           PORTE equ 09h ;# 
   707  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   708                           PCLATH equ 0Ah ;# 
   709  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   710                           INTCON equ 0Bh ;# 
   711  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   712                           PIR1 equ 0Ch ;# 
   713  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   714                           PIR2 equ 0Dh ;# 
   715  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   716                           TMR1 equ 0Eh ;# 
   717  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   718                           TMR1L equ 0Eh ;# 
   719  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   720                           TMR1H equ 0Fh ;# 
   721  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   722                           T1CON equ 010h ;# 
   723  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   724                           TMR2 equ 011h ;# 
   725  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   726                           T2CON equ 012h ;# 
   727  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   728                           SSPBUF equ 013h ;# 
   729  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   730                           SSPCON equ 014h ;# 
   731  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   732                           CCPR1 equ 015h ;# 
   733  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   734                           CCPR1L equ 015h ;# 
   735  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   736                           CCPR1H equ 016h ;# 
   737  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   738                           CCP1CON equ 017h ;# 
   739  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   740                           RCSTA equ 018h ;# 
   741  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   742                           TXREG equ 019h ;# 
   743  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   744                           RCREG equ 01Ah ;# 
   745  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   746                           CCPR2 equ 01Bh ;# 
   747  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   748                           CCPR2L equ 01Bh ;# 
   749  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   750                           CCPR2H equ 01Ch ;# 
   751  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   752                           CCP2CON equ 01Dh ;# 
   753  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   754                           ADRESH equ 01Eh ;# 
   755  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   756                           ADCON0 equ 01Fh ;# 
   757  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   758                           OPTION_REG equ 081h ;# 
   759  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   760                           TRISA equ 085h ;# 
   761  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   762                           TRISB equ 086h ;# 
   763  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   764                           TRISC equ 087h ;# 
   765  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   766                           TRISD equ 088h ;# 
   767  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   768                           TRISE equ 089h ;# 
   769  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   770                           PIE1 equ 08Ch ;# 
   771  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   772                           PIE2 equ 08Dh ;# 
   773  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   774                           PCON equ 08Eh ;# 
   775  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   776                           SSPCON2 equ 091h ;# 
   777  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   778                           PR2 equ 092h ;# 
   779  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   780                           SSPADD equ 093h ;# 
   781  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   782                           SSPSTAT equ 094h ;# 
   783  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   784                           TXSTA equ 098h ;# 
   785  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   786                           SPBRG equ 099h ;# 
   787  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   788                           CMCON equ 09Ch ;# 
   789  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   790                           CVRCON equ 09Dh ;# 
   791  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   792                           ADRESL equ 09Eh ;# 
   793  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   794                           ADCON1 equ 09Fh ;# 
   795  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   796                           EEDATA equ 010Ch ;# 
   797  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   798                           EEADR equ 010Dh ;# 
   799  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   800                           EEDATH equ 010Eh ;# 
   801  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   802                           EEADRH equ 010Fh ;# 
   803  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   804                           EECON1 equ 018Ch ;# 
   805  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   806                           EECON2 equ 018Dh ;# 
   807  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   808                           INDF equ 00h ;# 
   809  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   810                           TMR0 equ 01h ;# 
   811  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   812                           PCL equ 02h ;# 
   813  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   814                           STATUS equ 03h ;# 
   815  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   816                           FSR equ 04h ;# 
   817  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   818                           PORTA equ 05h ;# 
   819  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   820                           PORTB equ 06h ;# 
   821  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   822                           PORTC equ 07h ;# 
   823  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   824                           PORTD equ 08h ;# 
   825  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   826                           PORTE equ 09h ;# 
   827  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   828                           PCLATH equ 0Ah ;# 
   829  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   830                           INTCON equ 0Bh ;# 
   831  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   832                           PIR1 equ 0Ch ;# 
   833  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   834                           PIR2 equ 0Dh ;# 
   835  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   836                           TMR1 equ 0Eh ;# 
   837  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   838                           TMR1L equ 0Eh ;# 
   839  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   840                           TMR1H equ 0Fh ;# 
   841  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   842                           T1CON equ 010h ;# 
   843  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   844                           TMR2 equ 011h ;# 
   845  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   846                           T2CON equ 012h ;# 
   847  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   848                           SSPBUF equ 013h ;# 
   849  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   850                           SSPCON equ 014h ;# 
   851  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   852                           CCPR1 equ 015h ;# 
   853  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   854                           CCPR1L equ 015h ;# 
   855  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   856                           CCPR1H equ 016h ;# 
   857  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   858                           CCP1CON equ 017h ;# 
   859  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   860                           RCSTA equ 018h ;# 
   861  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   862                           TXREG equ 019h ;# 
   863  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   864                           RCREG equ 01Ah ;# 
   865  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   866                           CCPR2 equ 01Bh ;# 
   867  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   868                           CCPR2L equ 01Bh ;# 
   869  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   870                           CCPR2H equ 01Ch ;# 
   871  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   872                           CCP2CON equ 01Dh ;# 
   873  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   874                           ADRESH equ 01Eh ;# 
   875  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   876                           ADCON0 equ 01Fh ;# 
   877  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   878                           OPTION_REG equ 081h ;# 
   879  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   880                           TRISA equ 085h ;# 
   881  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   882                           TRISB equ 086h ;# 
   883  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   884                           TRISC equ 087h ;# 
   885  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   886                           TRISD equ 088h ;# 
   887  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   888                           TRISE equ 089h ;# 
   889  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   890                           PIE1 equ 08Ch ;# 
   891  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   892                           PIE2 equ 08Dh ;# 
   893  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   894                           PCON equ 08Eh ;# 
   895  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   896                           SSPCON2 equ 091h ;# 
   897  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   898                           PR2 equ 092h ;# 
   899  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   900                           SSPADD equ 093h ;# 
   901  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   902                           SSPSTAT equ 094h ;# 
   903  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   904                           TXSTA equ 098h ;# 
   905  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   906                           SPBRG equ 099h ;# 
   907  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   908                           CMCON equ 09Ch ;# 
   909  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   910                           CVRCON equ 09Dh ;# 
   911  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   912                           ADRESL equ 09Eh ;# 
   913  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   914                           ADCON1 equ 09Fh ;# 
   915  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   916                           EEDATA equ 010Ch ;# 
   917  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   918                           EEADR equ 010Dh ;# 
   919  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   920                           EEDATH equ 010Eh ;# 
   921  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   922                           EEADRH equ 010Fh ;# 
   923  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   924                           EECON1 equ 018Ch ;# 
   925  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   926                           EECON2 equ 018Dh ;# 
   927  018D                     	FNCALL	_main,_Buzzer_Init
   928                           	FNCALL	_main,_ChangeTrigger
   929                           	FNCALL	_main,_CheckDay
   930                           	FNCALL	_main,_CheckTime
   931                           	FNCALL	_main,_DateDayScreen
   932                           	FNCALL	_main,_HeatingControlOff
   933                           	FNCALL	_main,_Init_Keypad
   934                           	FNCALL	_main,_Keypad_Scan
   935                           	FNCALL	_main,_LCD_Command
   936                           	FNCALL	_main,_LCD_Init
   937                           	FNCALL	_main,_MainScreen
   938                           	FNCALL	_main,_Main_Delay
   939                           	FNCALL	_main,_RealTimeClock_get_day_of_week
   940                           	FNCALL	_main,_RealTimeClock_init
   941                           	FNCALL	_main,_RealTimeClock_set_burst_time
   942                           	FNCALL	_main,_SetDate
   943                           	FNCALL	_main,_SetTime
   944                           	FNCALL	_main,_SoundAlarm
   945                           	FNCALL	_main,_SoundOff
   946                           	FNCALL	_main,_SwapToHeatingDisplay
   947                           	FNCALL	_main,_Switch24Hour
   948                           	FNCALL	_main,_Thermometer_Init
   949                           	FNCALL	_main,___wmul
   950                           	FNCALL	_Switch24Hour,_LCD_Command
   951                           	FNCALL	_Switch24Hour,_LCD_SendData
   952                           	FNCALL	_Switch24Hour,___awmod
   953                           	FNCALL	_SoundAlarm,_ChangeTrigger
   954                           	FNCALL	_SoundAlarm,_Get_Temp
   955                           	FNCALL	_SoundAlarm,_HeatingControlOff
   956                           	FNCALL	_SoundAlarm,_Keypad_Scan
   957                           	FNCALL	_SoundAlarm,_LCD_Command
   958                           	FNCALL	_SoundAlarm,_LCD_SendString
   959                           	FNCALL	_SoundAlarm,_SoundOff
   960                           	FNCALL	_SoundAlarm,_SoundOn
   961                           	FNCALL	_SoundAlarm,_SwapToHeatingDisplay
   962                           	FNCALL	_SoundAlarm,___wmul
   963                           	FNCALL	_HeatingControlOff,_ChangeTrigger
   964                           	FNCALL	_HeatingControlOff,_Get_Temp
   965                           	FNCALL	_HeatingControlOff,_Keypad_Scan
   966                           	FNCALL	_HeatingControlOff,_LCD_Command
   967                           	FNCALL	_HeatingControlOff,_LCD_SendString
   968                           	FNCALL	_HeatingControlOff,_MainScreen
   969                           	FNCALL	_HeatingControlOff,_Main_Delay
   970                           	FNCALL	_HeatingControlOff,_SoundOff
   971                           	FNCALL	_HeatingControlOff,_SwapToHeatingDisplay
   972                           	FNCALL	_HeatingControlOff,___wmul
   973                           	FNCALL	_MainScreen,_DisplayTemp
   974                           	FNCALL	_MainScreen,_DisplayTime
   975                           	FNCALL	_MainScreen,_LCD_SecondLine
   976                           	FNCALL	_MainScreen,_LCD_SendString
   977                           	FNCALL	_DisplayTime,_LCD_SendString
   978                           	FNCALL	_DisplayTime,_RealTimeClock_get_hours
   979                           	FNCALL	_DisplayTime,_RealTimeClock_get_minutes
   980                           	FNCALL	_DisplayTime,_RealTimeClock_get_seconds
   981                           	FNCALL	_DisplayTime,___awdiv
   982                           	FNCALL	_DisplayTime,___awmod
   983                           	FNCALL	_DisplayTemp,_Get_Temp
   984                           	FNCALL	_DisplayTemp,_LCD_Busy
   985                           	FNCALL	_DisplayTemp,_LCD_SendData
   986                           	FNCALL	_DisplayTemp,_LCD_SendString
   987                           	FNCALL	_Get_Temp,_Delay
   988                           	FNCALL	_Get_Temp,_Read_Byte
   989                           	FNCALL	_Get_Temp,_Reset
   990                           	FNCALL	_Get_Temp,_Write_Byte
   991                           	FNCALL	_Get_Temp,___awdiv
   992                           	FNCALL	_Get_Temp,___awmod
   993                           	FNCALL	_Get_Temp,___lwdiv
   994                           	FNCALL	_Get_Temp,___lwmod
   995                           	FNCALL	_Write_Byte,_Delay
   996                           	FNCALL	_Reset,_Delay
   997                           	FNCALL	_Read_Byte,_Delay
   998                           	FNCALL	_SetTime,_Keypad_Scan
   999                           	FNCALL	_SetTime,_LCD_Command
  1000                           	FNCALL	_SetTime,_LCD_SendString
  1001                           	FNCALL	_SetTime,_Main_Delay
  1002                           	FNCALL	_SetTime,_RealTimeClock_get_hours
  1003                           	FNCALL	_SetTime,_RealTimeClock_get_minutes
  1004                           	FNCALL	_SetTime,_RealTimeClock_get_seconds
  1005                           	FNCALL	_SetTime,_RealTimeClock_set_hours
  1006                           	FNCALL	_SetTime,_RealTimeClock_set_minutes
  1007                           	FNCALL	_SetTime,_RealTimeClock_set_seconds
  1008                           	FNCALL	_SetTime,___awdiv
  1009                           	FNCALL	_SetTime,___awmod
  1010                           	FNCALL	_RealTimeClock_set_seconds,_RealTimeClock_write_byte
  1011                           	FNCALL	_RealTimeClock_set_seconds,___int_to_hex
  1012                           	FNCALL	_RealTimeClock_set_minutes,_RealTimeClock_write_byte
  1013                           	FNCALL	_RealTimeClock_set_minutes,___int_to_hex
  1014                           	FNCALL	_RealTimeClock_set_hours,_RealTimeClock_write_byte
  1015                           	FNCALL	_RealTimeClock_set_hours,___int_to_hex
  1016                           	FNCALL	_RealTimeClock_get_seconds,_RealTimeClock_read_byte
  1017                           	FNCALL	_RealTimeClock_get_seconds,_RealTimeClock_write_byte
  1018                           	FNCALL	_RealTimeClock_get_seconds,___hex_to_int
  1019                           	FNCALL	_SetDate,_CheckDay
  1020                           	FNCALL	_SetDate,_Keypad_Scan
  1021                           	FNCALL	_SetDate,_LCD_Command
  1022                           	FNCALL	_SetDate,_LCD_SecondLine
  1023                           	FNCALL	_SetDate,_LCD_SendString
  1024                           	FNCALL	_SetDate,_Main_Delay
  1025                           	FNCALL	_SetDate,_RealTimeClock_get_day_of_week
  1026                           	FNCALL	_SetDate,_RealTimeClock_set_day_of_week
  1027                           	FNCALL	_RealTimeClock_set_day_of_week,_RealTimeClock_write_byte
  1028                           	FNCALL	_RealTimeClock_set_day_of_week,___int_to_hex
  1029                           	FNCALL	_RealTimeClock_set_burst_time,_RealTimeClock_write_byte
  1030                           	FNCALL	_RealTimeClock_set_burst_time,___int_to_hex
  1031                           	FNCALL	___int_to_hex,___awmod
  1032                           	FNCALL	_RealTimeClock_init,_RealTimeClock_write_byte
  1033                           	FNCALL	_DateDayScreen,_ChangeTrigger
  1034                           	FNCALL	_DateDayScreen,_DisplayDate
  1035                           	FNCALL	_DateDayScreen,_DisplayDay
  1036                           	FNCALL	_DateDayScreen,_Keypad_Scan
  1037                           	FNCALL	_DateDayScreen,_LCD_Command
  1038                           	FNCALL	_DateDayScreen,_LCD_SecondLine
  1039                           	FNCALL	_DateDayScreen,_LCD_SendString
  1040                           	FNCALL	_DateDayScreen,_SwapToHeatingDisplay
  1041                           	FNCALL	_SwapToHeatingDisplay,_Keypad_Scan
  1042                           	FNCALL	_SwapToHeatingDisplay,_LCD_Command
  1043                           	FNCALL	_SwapToHeatingDisplay,_LCD_SendString
  1044                           	FNCALL	_LCD_SecondLine,_LCD_Command
  1045                           	FNCALL	_DisplayDay,_LCD_SendString
  1046                           	FNCALL	_DisplayDay,_RealTimeClock_get_day_of_week
  1047                           	FNCALL	_RealTimeClock_get_day_of_week,_RealTimeClock_read_byte
  1048                           	FNCALL	_RealTimeClock_get_day_of_week,_RealTimeClock_write_byte
  1049                           	FNCALL	_RealTimeClock_get_day_of_week,___hex_to_int
  1050                           	FNCALL	_DisplayDate,_RealTimeClock_get_day_of_month
  1051                           	FNCALL	_DisplayDate,_RealTimeClock_get_month
  1052                           	FNCALL	_DisplayDate,_RealTimeClock_get_year
  1053                           	FNCALL	_DisplayDate,___awdiv
  1054                           	FNCALL	_DisplayDate,___awmod
  1055                           	FNCALL	_RealTimeClock_get_year,_RealTimeClock_read_byte
  1056                           	FNCALL	_RealTimeClock_get_year,_RealTimeClock_write_byte
  1057                           	FNCALL	_RealTimeClock_get_year,___hex_to_int
  1058                           	FNCALL	_RealTimeClock_get_month,_RealTimeClock_read_byte
  1059                           	FNCALL	_RealTimeClock_get_month,_RealTimeClock_write_byte
  1060                           	FNCALL	_RealTimeClock_get_month,___hex_to_int
  1061                           	FNCALL	_RealTimeClock_get_day_of_month,_RealTimeClock_read_byte
  1062                           	FNCALL	_RealTimeClock_get_day_of_month,_RealTimeClock_write_byte
  1063                           	FNCALL	_RealTimeClock_get_day_of_month,___hex_to_int
  1064                           	FNCALL	_ChangeTrigger,_Keypad_Scan
  1065                           	FNCALL	_ChangeTrigger,_LCD_Busy
  1066                           	FNCALL	_ChangeTrigger,_LCD_Command
  1067                           	FNCALL	_ChangeTrigger,_LCD_SendData
  1068                           	FNCALL	_ChangeTrigger,_LCD_SendString
  1069                           	FNCALL	_ChangeTrigger,_Main_Delay
  1070                           	FNCALL	_ChangeTrigger,___awdiv
  1071                           	FNCALL	_ChangeTrigger,___awmod
  1072                           	FNCALL	_LCD_SendString,_LCD_SendData
  1073                           	FNCALL	_LCD_SendData,_LCD_Busy
  1074                           	FNCALL	_LCD_Command,_LCD_Busy
  1075                           	FNCALL	_Keypad_Scan,_Key_Delay
  1076                           	FNCALL	_CheckTime,_RealTimeClock_get_hours
  1077                           	FNCALL	_CheckTime,_RealTimeClock_get_minutes
  1078                           	FNCALL	_RealTimeClock_get_minutes,_RealTimeClock_read_byte
  1079                           	FNCALL	_RealTimeClock_get_minutes,_RealTimeClock_write_byte
  1080                           	FNCALL	_RealTimeClock_get_minutes,___hex_to_int
  1081                           	FNCALL	_RealTimeClock_get_hours,_RealTimeClock_read_byte
  1082                           	FNCALL	_RealTimeClock_get_hours,_RealTimeClock_write_byte
  1083                           	FNCALL	_RealTimeClock_get_hours,___hex_to_int
  1084                           	FNCALL	___hex_to_int,___awmod
  1085                           	FNROOT	_main
  1086                           	global	_triggerTemp
  1087                           	global	_numberTable
  1088                           	global	SetTime@F993
  1089                           	global	_dateDisplayer
  1090                           	global	_weekEndEnd
  1091                           	global	_weekEndStart
  1092                           	global	_weekDayEnd
  1093                           	global	_weekDayStart
  1094                           	global	_timeDisplayer
  1095                           	global	_tempBuffer
  1096                           	global	_start_date
  1097                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1098                           global __pidataBANK0
  1099                           __pidataBANK0:
  1100  10E5                     	file	"main.c"
  1101                           	line	47
  1102                           
  1103                           ;initializer for _triggerTemp
  1104                           	retlw	01Ch
  1105  10E5  341C               	retlw	0
  1106  10E6  3400               
  1107                           	retlw	low(0)
  1108  10E7  3400               	retlw	high(0)
  1109  10E8  3400               
  1110                           psect	idataBANK1,class=CODE,space=0,delta=2,noexec
  1111                           global __pidataBANK1
  1112                           __pidataBANK1:
  1113  11E7                     	file	"Thermometer.c"
  1114                           	line	23
  1115                           
  1116                           ;initializer for _numberTable
  1117                           	retlw	030h
  1118  11E7  3430               	retlw	031h
  1119  11E8  3431               	retlw	032h
  1120  11E9  3432               	retlw	033h
  1121  11EA  3433               	retlw	034h
  1122  11EB  3434               	retlw	035h
  1123  11EC  3435               	retlw	036h
  1124  11ED  3436               	retlw	037h
  1125  11EE  3437               	retlw	038h
  1126  11EF  3438               	retlw	039h
  1127  11F0  3439               	file	"main.c"
  1128                           	line	470
  1129                           
  1130                           ;initializer for SetTime@F993
  1131                           	retlw	030h
  1132  11F1  3430               	retlw	030h
  1133  11F2  3430               	retlw	03Ah
  1134  11F3  343A               	retlw	030h
  1135  11F4  3430               	retlw	030h
  1136  11F5  3430               	retlw	02Eh
  1137  11F6  342E               	retlw	030h
  1138  11F7  3430               	retlw	030h
  1139  11F8  3430               	retlw	low(0)
  1140  11F9  3400               	line	42
  1141                           
  1142                           ;initializer for _dateDisplayer
  1143                           	retlw	030h
  1144  11FA  3430               	retlw	030h
  1145  11FB  3430               	retlw	02Fh
  1146  11FC  342F               	retlw	030h
  1147  11FD  3430               	retlw	030h
  1148  11FE  3430               	retlw	02Fh
  1149  11FF  342F               	retlw	030h
  1150  1200  3430               	retlw	030h
  1151  1201  3430               	retlw	low(0)
  1152  1202  3400               	line	35
  1153                           
  1154                           ;initializer for _weekEndEnd
  1155                           	retlw	017h
  1156  1203  3417               	retlw	0
  1157  1204  3400               
  1158                           	retlw	low(0)
  1159  1205  3400               	retlw	high(0)
  1160  1206  3400               
  1161                           	line	34
  1162                           
  1163                           ;initializer for _weekEndStart
  1164                           	retlw	07h
  1165  1207  3407               	retlw	0
  1166  1208  3400               
  1167                           	retlw	low(0)
  1168  1209  3400               	retlw	high(0)
  1169  120A  3400               
  1170                           	line	33
  1171                           
  1172                           ;initializer for _weekDayEnd
  1173                           	retlw	016h
  1174  120B  3416               	retlw	0
  1175  120C  3400               
  1176                           	retlw	01Eh
  1177  120D  341E               	retlw	0
  1178  120E  3400               
  1179                           	line	32
  1180                           
  1181                           ;initializer for _weekDayStart
  1182                           	retlw	06h
  1183  120F  3406               	retlw	0
  1184  1210  3400               
  1185                           	retlw	01Eh
  1186  1211  341E               	retlw	0
  1187  1212  3400               
  1188                           	line	40
  1189                           
  1190                           ;initializer for _timeDisplayer
  1191                           	retlw	030h
  1192  1213  3430               	retlw	030h
  1193  1214  3430               	retlw	03Ah
  1194  1215  343A               	retlw	030h
  1195  1216  3430               	retlw	030h
  1196  1217  3430               	retlw	02Eh
  1197  1218  342E               	retlw	030h
  1198  1219  3430               	retlw	030h
  1199  121A  3430               	retlw	low(0)
  1200  121B  3400               	line	38
  1201                           
  1202                           ;initializer for _tempBuffer
  1203                           	retlw	030h
  1204  121C  3430               	retlw	030h
  1205  121D  3430               	retlw	030h
  1206  121E  3430               	retlw	030h
  1207  121F  3430               	retlw	030h
  1208  1220  3430               	retlw	low(0)
  1209  1221  3400               psect	idataBANK3,class=CODE,space=0,delta=2,noexec
  1210                           global __pidataBANK3
  1211                           __pidataBANK3:
  1212  1E0D                     	line	51
  1213                           
  1214                           ;initializer for _start_date
  1215                           	retlw	03Bh
  1216  1E0D  343B               	retlw	0
  1217  1E0E  3400               
  1218                           	retlw	03Bh
  1219  1E0F  343B               	retlw	0
  1220  1E10  3400               
  1221                           	retlw	017h
  1222  1E11  3417               	retlw	0
  1223  1E12  3400               
  1224                           	retlw	01Fh
  1225  1E13  341F               	retlw	0
  1226  1E14  3400               
  1227                           	retlw	0Ch
  1228  1E15  340C               	retlw	0
  1229  1E16  3400               
  1230                           	retlw	05h
  1231  1E17  3405               	retlw	0
  1232  1E18  3400               
  1233                           	retlw	063h
  1234  1E19  3463               	retlw	0
  1235  1E1A  3400               
  1236                           	retlw	low(0)
  1237  1E1B  3400               	retlw	high(0)
  1238  1E1C  3400               
  1239                           	global	_TempBCD
  1240                           	global	_timeSecs
  1241                           	global	_timeMins
  1242                           	global	_timeHours
  1243                           	global	_is24Hour
  1244                           	global	_IsHeatingOn
  1245                           	global	Read_Byte@j
  1246                           	global	_hundredthbit
  1247                           	global	_tenthbit
  1248                           	global	_intent
  1249                           	global	_tenbit
  1250                           	global	_TempDec
  1251                           	global	_TempInt
  1252                           	global	_THB
  1253                           	global	_TLB
  1254                           	global	_previousTemp
  1255                           	global	_Temp
  1256                           	global	_isWeekDay
  1257                           	global	_day_of_week
  1258                           	global	_DisableAlarm
  1259                           	global	___RealTimeClock_buff
  1260                           	global	_PORTD
  1261                           _PORTD	set	0x8
  1262  0008                     	global	_PORTC
  1263                           _PORTC	set	0x7
  1264  0007                     	global	_RA0
  1265                           _RA0	set	0x28
  1266  0028                     	global	_RB1
  1267                           _RB1	set	0x31
  1268  0031                     	global	_RD7
  1269                           _RD7	set	0x47
  1270  0047                     	global	_RA2
  1271                           _RA2	set	0x2A
  1272  002A                     	global	_RA1
  1273                           _RA1	set	0x29
  1274  0029                     	global	_RA3
  1275                           _RA3	set	0x2B
  1276  002B                     	global	_RC0
  1277                           _RC0	set	0x38
  1278  0038                     	global	_RC1
  1279                           _RC1	set	0x39
  1280  0039                     	global	_RC2
  1281                           _RC2	set	0x3A
  1282  003A                     	global	_RC3
  1283                           _RC3	set	0x3B
  1284  003B                     	global	_RC7
  1285                           _RC7	set	0x3F
  1286  003F                     	global	_RC6
  1287                           _RC6	set	0x3E
  1288  003E                     	global	_RC5
  1289                           _RC5	set	0x3D
  1290  003D                     	global	_RC4
  1291                           _RC4	set	0x3C
  1292  003C                     	global	_RB5
  1293                           _RB5	set	0x35
  1294  0035                     	global	_RB0
  1295                           _RB0	set	0x30
  1296  0030                     	global	_RB4
  1297                           _RB4	set	0x34
  1298  0034                     	global	_TRISA
  1299                           _TRISA	set	0x85
  1300  0085                     	global	_TRISD
  1301                           _TRISD	set	0x88
  1302  0088                     	global	_TRISC
  1303                           _TRISC	set	0x87
  1304  0087                     	global	_ADCON1
  1305                           _ADCON1	set	0x9F
  1306  009F                     	global	_TRISA0
  1307                           _TRISA0	set	0x428
  1308  0428                     	global	_TRISB1
  1309                           _TRISB1	set	0x431
  1310  0431                     	global	_TRISB5
  1311                           _TRISB5	set	0x435
  1312  0435                     	global	_TRISB0
  1313                           _TRISB0	set	0x430
  1314  0430                     	global	_TRISB4
  1315                           _TRISB4	set	0x434
  1316  0434                     psect	strings,class=STRING,delta=2,noexec
  1317                           global __pstrings
  1318                           __pstrings:
  1319  1000                     stringtab:
  1320  1000                     	global    __stringtab
  1321                           __stringtab:
  1322  1000                     ;	String table - string pointers are 1 byte each
  1323                           	btfsc	(btemp+1),7
  1324  1000  1BFF               	ljmp	stringcode
  1325  1001  280A               	bcf	status,7
  1326  1002  1383               	btfsc	(btemp+1),0
  1327  1003  187F               	bsf	status,7
  1328  1004  1783               	movf	indf,w
  1329  1005  0800               	incf fsr
  1330  1006  0A84               skipnz
  1331  1007  1903               incf btemp+1
  1332  1008  0AFF               	return
  1333  1009  0008               stringcode:stringdir:
  1334  100A                     movlw high(stringdir)
      + 100A                     stringdir:	
  1335  100A  3010               movwf pclath
  1336  100B  008A               movf fsr,w
  1337  100C  0804               incf fsr
  1338  100D  0A84               	addwf pc
  1339  100E  0782               	global __stringbase
  1340                           __stringbase:
  1341  100F                     	retlw	0
  1342  100F  3400               psect	strings
  1343                           	global    __end_of__stringtab
  1344                           __end_of__stringtab:
  1345  1010                     	
  1346                           STR_17:	
  1347  1010                     	retlw	72	;'H'
  1348  1010  3448               	retlw	101	;'e'
  1349  1011  3465               	retlw	97	;'a'
  1350  1012  3461               	retlw	116	;'t'
  1351  1013  3474               	retlw	105	;'i'
  1352  1014  3469               	retlw	110	;'n'
  1353  1015  346E               	retlw	103	;'g'
  1354  1016  3467               	retlw	32	;' '
  1355  1017  3420               	retlw	70	;'F'
  1356  1018  3446               	retlw	97	;'a'
  1357  1019  3461               	retlw	105	;'i'
  1358  101A  3469               	retlw	108	;'l'
  1359  101B  346C               	retlw	117	;'u'
  1360  101C  3475               	retlw	114	;'r'
  1361  101D  3472               	retlw	101	;'e'
  1362  101E  3465               	retlw	0
  1363  101F  3400               psect	strings
  1364                           	
  1365                           STR_24:	
  1366  1020                     	retlw	68	;'D'
  1367  1020  3444               	retlw	97	;'a'
  1368  1021  3461               	retlw	116	;'t'
  1369  1022  3474               	retlw	101	;'e'
  1370  1023  3465               	retlw	47	;'/'
  1371  1024  342F               	retlw	68	;'D'
  1372  1025  3444               	retlw	97	;'a'
  1373  1026  3461               	retlw	121	;'y'
  1374  1027  3479               	retlw	32	;' '
  1375  1028  3420               	retlw	83	;'S'
  1376  1029  3453               	retlw	101	;'e'
  1377  102A  3465               	retlw	116	;'t'
  1378  102B  3474               	retlw	0
  1379  102C  3400               psect	strings
  1380                           	
  1381                           STR_15:	
  1382  102D                     	retlw	72	;'H'
  1383  102D  3448               	retlw	101	;'e'
  1384  102E  3465               	retlw	97	;'a'
  1385  102F  3461               	retlw	116	;'t'
  1386  1030  3474               	retlw	105	;'i'
  1387  1031  3469               	retlw	110	;'n'
  1388  1032  346E               	retlw	103	;'g'
  1389  1033  3467               	retlw	32	;' '
  1390  1034  3420               	retlw	79	;'O'
  1391  1035  344F               	retlw	102	;'f'
  1392  1036  3466               	retlw	102	;'f'
  1393  1037  3466               	retlw	0
  1394  1038  3400               psect	strings
  1395                           	
  1396                           STR_11:	
  1397  1039                     	retlw	84	;'T'
  1398  1039  3454               	retlw	114	;'r'
  1399  103A  3472               	retlw	105	;'i'
  1400  103B  3469               	retlw	103	;'g'
  1401  103C  3467               	retlw	103	;'g'
  1402  103D  3467               	retlw	101	;'e'
  1403  103E  3465               	retlw	114	;'r'
  1404  103F  3472               	retlw	32	;' '
  1405  1040  3420               	retlw	83	;'S'
  1406  1041  3453               	retlw	101	;'e'
  1407  1042  3465               	retlw	116	;'t'
  1408  1043  3474               	retlw	0
  1409  1044  3400               psect	strings
  1410                           	
  1411                           STR_16:	
  1412  1045                     	retlw	72	;'H'
  1413  1045  3448               	retlw	101	;'e'
  1414  1046  3465               	retlw	97	;'a'
  1415  1047  3461               	retlw	116	;'t'
  1416  1048  3474               	retlw	105	;'i'
  1417  1049  3469               	retlw	110	;'n'
  1418  104A  346E               	retlw	103	;'g'
  1419  104B  3467               	retlw	32	;' '
  1420  104C  3420               	retlw	79	;'O'
  1421  104D  344F               	retlw	110	;'n'
  1422  104E  346E               	retlw	0
  1423  104F  3400               psect	strings
  1424                           	
  1425                           STR_3:	
  1426  1050                     	retlw	87	;'W'
  1427  1050  3457               	retlw	101	;'e'
  1428  1051  3465               	retlw	100	;'d'
  1429  1052  3464               	retlw	110	;'n'
  1430  1053  346E               	retlw	101	;'e'
  1431  1054  3465               	retlw	115	;'s'
  1432  1055  3473               	retlw	100	;'d'
  1433  1056  3464               	retlw	97	;'a'
  1434  1057  3461               	retlw	121	;'y'
  1435  1058  3479               	retlw	0
  1436  1059  3400               psect	strings
  1437                           	
  1438                           STR_12:	
  1439  105A                     	retlw	72	;'H'
  1440  105A  3448               	retlw	101	;'e'
  1441  105B  3465               	retlw	97	;'a'
  1442  105C  3461               	retlw	116	;'t'
  1443  105D  3474               	retlw	105	;'i'
  1444  105E  3469               	retlw	110	;'n'
  1445  105F  346E               	retlw	103	;'g'
  1446  1060  3467               	retlw	58	;':'
  1447  1061  343A               	retlw	0
  1448  1062  3400               psect	strings
  1449                           	
  1450                           STR_10:	
  1451  1063                     	retlw	84	;'T'
  1452  1063  3454               	retlw	114	;'r'
  1453  1064  3472               	retlw	105	;'i'
  1454  1065  3469               	retlw	103	;'g'
  1455  1066  3467               	retlw	103	;'g'
  1456  1067  3467               	retlw	101	;'e'
  1457  1068  3465               	retlw	114	;'r'
  1458  1069  3472               	retlw	58	;':'
  1459  106A  343A               	retlw	0
  1460  106B  3400               psect	strings
  1461                           	
  1462                           STR_21:	
  1463  106C                     	retlw	84	;'T'
  1464  106C  3454               	retlw	105	;'i'
  1465  106D  3469               	retlw	109	;'m'
  1466  106E  346D               	retlw	101	;'e'
  1467  106F  3465               	retlw	32	;' '
  1468  1070  3420               	retlw	83	;'S'
  1469  1071  3453               	retlw	101	;'e'
  1470  1072  3465               	retlw	116	;'t'
  1471  1073  3474               	retlw	0
  1472  1074  3400               psect	strings
  1473                           	
  1474                           STR_6:	
  1475  1075                     	retlw	83	;'S'
  1476  1075  3453               	retlw	97	;'a'
  1477  1076  3461               	retlw	116	;'t'
  1478  1077  3474               	retlw	117	;'u'
  1479  1078  3475               	retlw	114	;'r'
  1480  1079  3472               	retlw	100	;'d'
  1481  107A  3464               	retlw	97	;'a'
  1482  107B  3461               	retlw	121	;'y'
  1483  107C  3479               	retlw	0
  1484  107D  3400               psect	strings
  1485                           	
  1486                           STR_4:	
  1487  107E                     	retlw	84	;'T'
  1488  107E  3454               	retlw	104	;'h'
  1489  107F  3468               	retlw	117	;'u'
  1490  1080  3475               	retlw	114	;'r'
  1491  1081  3472               	retlw	115	;'s'
  1492  1082  3473               	retlw	100	;'d'
  1493  1083  3464               	retlw	97	;'a'
  1494  1084  3461               	retlw	121	;'y'
  1495  1085  3479               	retlw	0
  1496  1086  3400               psect	strings
  1497                           	
  1498                           STR_2:	
  1499  1087                     	retlw	84	;'T'
  1500  1087  3454               	retlw	117	;'u'
  1501  1088  3475               	retlw	101	;'e'
  1502  1089  3465               	retlw	115	;'s'
  1503  108A  3473               	retlw	100	;'d'
  1504  108B  3464               	retlw	97	;'a'
  1505  108C  3461               	retlw	121	;'y'
  1506  108D  3479               	retlw	0
  1507  108E  3400               psect	strings
  1508                           	
  1509                           STR_18:	
  1510  108F                     	retlw	68	;'D'
  1511  108F  3444               	retlw	97	;'a'
  1512  1090  3461               	retlw	116	;'t'
  1513  1091  3474               	retlw	101	;'e'
  1514  1092  3465               	retlw	58	;':'
  1515  1093  343A               	retlw	32	;' '
  1516  1094  3420               	retlw	0
  1517  1095  3400               psect	strings
  1518                           	
  1519                           STR_5:	
  1520  1096                     	retlw	70	;'F'
  1521  1096  3446               	retlw	114	;'r'
  1522  1097  3472               	retlw	105	;'i'
  1523  1098  3469               	retlw	100	;'d'
  1524  1099  3464               	retlw	97	;'a'
  1525  109A  3461               	retlw	121	;'y'
  1526  109B  3479               	retlw	0
  1527  109C  3400               psect	strings
  1528                           	
  1529                           STR_1:	
  1530  109D                     	retlw	77	;'M'
  1531  109D  344D               	retlw	111	;'o'
  1532  109E  346F               	retlw	110	;'n'
  1533  109F  346E               	retlw	100	;'d'
  1534  10A0  3464               	retlw	97	;'a'
  1535  10A1  3461               	retlw	121	;'y'
  1536  10A2  3479               	retlw	0
  1537  10A3  3400               psect	strings
  1538                           	
  1539                           STR_7:	
  1540  10A4                     	retlw	83	;'S'
  1541  10A4  3453               	retlw	117	;'u'
  1542  10A5  3475               	retlw	110	;'n'
  1543  10A6  346E               	retlw	100	;'d'
  1544  10A7  3464               	retlw	97	;'a'
  1545  10A8  3461               	retlw	121	;'y'
  1546  10A9  3479               	retlw	0
  1547  10AA  3400               psect	strings
  1548                           	
  1549                           STR_19:	
  1550  10AB                     	retlw	68	;'D'
  1551  10AB  3444               	retlw	97	;'a'
  1552  10AC  3461               	retlw	121	;'y'
  1553  10AD  3479               	retlw	58	;':'
  1554  10AE  343A               	retlw	32	;' '
  1555  10AF  3420               	retlw	0
  1556  10B0  3400               psect	strings
  1557                           	
  1558                           STR_8:	
  1559  10B1                     	retlw	84	;'T'
  1560  10B1  3454               	retlw	105	;'i'
  1561  10B2  3469               	retlw	109	;'m'
  1562  10B3  346D               	retlw	101	;'e'
  1563  10B4  3465               	retlw	58	;':'
  1564  10B5  343A               	retlw	0
  1565  10B6  3400               psect	strings
  1566                           	
  1567                           STR_23:	
  1568  10B7                     	retlw	68	;'D'
  1569  10B7  3444               	retlw	97	;'a'
  1570  10B8  3461               	retlw	116	;'t'
  1571  10B9  3474               	retlw	101	;'e'
  1572  10BA  3465               	retlw	58	;':'
  1573  10BB  343A               	retlw	0
  1574  10BC  3400               psect	strings
  1575                           	
  1576                           STR_9:	
  1577  10BD                     	retlw	84	;'T'
  1578  10BD  3454               	retlw	101	;'e'
  1579  10BE  3465               	retlw	109	;'m'
  1580  10BF  346D               	retlw	112	;'p'
  1581  10C0  3470               	retlw	58	;':'
  1582  10C1  343A               	retlw	0
  1583  10C2  3400               psect	strings
  1584                           	
  1585                           STR_22:	
  1586  10C3                     	retlw	68	;'D'
  1587  10C3  3444               	retlw	97	;'a'
  1588  10C4  3461               	retlw	121	;'y'
  1589  10C5  3479               	retlw	58	;':'
  1590  10C6  343A               	retlw	0
  1591  10C7  3400               psect	strings
  1592                           	
  1593                           STR_27:	
  1594  10C8                     	retlw	87	;'W'
  1595  10C8  3457               	retlw	101	;'e'
  1596  10C9  3465               	retlw	100	;'d'
  1597  10CA  3464               	retlw	0
  1598  10CB  3400               psect	strings
  1599                           	
  1600                           STR_26:	
  1601  10CC                     	retlw	84	;'T'
  1602  10CC  3454               	retlw	117	;'u'
  1603  10CD  3475               	retlw	101	;'e'
  1604  10CE  3465               	retlw	0
  1605  10CF  3400               psect	strings
  1606                           	
  1607                           STR_29:	
  1608  10D0                     	retlw	70	;'F'
  1609  10D0  3446               	retlw	114	;'r'
  1610  10D1  3472               	retlw	105	;'i'
  1611  10D2  3469               	retlw	0
  1612  10D3  3400               psect	strings
  1613                           	
  1614                           STR_25:	
  1615  10D4                     	retlw	77	;'M'
  1616  10D4  344D               	retlw	111	;'o'
  1617  10D5  346F               	retlw	110	;'n'
  1618  10D6  346E               	retlw	0
  1619  10D7  3400               psect	strings
  1620                           	
  1621                           STR_31:	
  1622  10D8                     	retlw	83	;'S'
  1623  10D8  3453               	retlw	117	;'u'
  1624  10D9  3475               	retlw	110	;'n'
  1625  10DA  346E               	retlw	0
  1626  10DB  3400               psect	strings
  1627                           	
  1628                           STR_30:	
  1629  10DC                     	retlw	83	;'S'
  1630  10DC  3453               	retlw	97	;'a'
  1631  10DD  3461               	retlw	116	;'t'
  1632  10DE  3474               	retlw	0
  1633  10DF  3400               psect	strings
  1634                           	
  1635                           STR_28:	
  1636  10E0                     	retlw	84	;'T'
  1637  10E0  3454               	retlw	104	;'h'
  1638  10E1  3468               	retlw	117	;'u'
  1639  10E2  3475               	retlw	0
  1640  10E3  3400               psect	strings
  1641                           STR_13	equ	STR_16+8
  1642  104D                     STR_14	equ	STR_15+8
  1643  1035                     STR_20	equ	STR_8+0
  1644  10B1                     ; #config settings
  1645                           global __CFG_FOSC$HS
  1646                           __CFG_FOSC$HS equ 0x0
  1647  0000                     global __CFG_WDTE$OFF
  1648                           __CFG_WDTE$OFF equ 0x0
  1649  0000                     global __CFG_PWRTE$ON
  1650                           __CFG_PWRTE$ON equ 0x0
  1651  0000                     global __CFG_BOREN$OFF
  1652                           __CFG_BOREN$OFF equ 0x0
  1653  0000                     global __CFG_LVP$OFF
  1654                           __CFG_LVP$OFF equ 0x0
  1655  0000                     	file	"C:\Users\515817\AppData\Local\Temp\s31k."
  1656                           	line	#
  1657                           psect cinit,class=CODE,delta=2
  1658                           global start_initialization
  1659                           start_initialization:
  1660  07B9                     
  1661                           global __initialization
  1662                           __initialization:
  1663  07B9                     psect	bssBANK0,class=BANK0,space=1,noexec
  1664                           global __pbssBANK0
  1665                           __pbssBANK0:
  1666  0056                     _TempBCD:
  1667  0056                            ds      2
  1668  0056                     
  1669                           _timeSecs:
  1670  0058                            ds      2
  1671  0058                     
  1672                           _timeMins:
  1673  005A                            ds      2
  1674  005A                     
  1675                           _timeHours:
  1676  005C                            ds      2
  1677  005C                     
  1678                           _is24Hour:
  1679  005E                            ds      2
  1680  005E                     
  1681                           _IsHeatingOn:
  1682  0060                            ds      2
  1683  0060                     
  1684                           Read_Byte@j:
  1685  0062                            ds      1
  1686  0062                     
  1687                           _hundredthbit:
  1688  0063                            ds      1
  1689  0063                     
  1690                           _tenthbit:
  1691  0064                            ds      1
  1692  0064                     
  1693                           _intent:
  1694  0065                            ds      1
  1695  0065                     
  1696                           _tenbit:
  1697  0066                            ds      1
  1698  0066                     
  1699                           _TempDec:
  1700  0067                            ds      1
  1701  0067                     
  1702                           _TempInt:
  1703  0068                            ds      1
  1704  0068                     
  1705                           _THB:
  1706  0069                            ds      1
  1707  0069                     
  1708                           _TLB:
  1709  006A                            ds      1
  1710  006A                     
  1711                           _timeBuffer:
  1712  006B                            ds      1
  1713  006B                     
  1714                           psect	dataBANK0,class=BANK0,space=1,noexec
  1715                           global __pdataBANK0
  1716                           __pdataBANK0:
  1717  006C                     	file	"main.c"
  1718                           	line	47
  1719                           _triggerTemp:
  1720  006C                            ds      4
  1721  006C                     
  1722                           psect	bssBANK1,class=BANK1,space=1,noexec
  1723                           global __pbssBANK1
  1724                           __pbssBANK1:
  1725  00DB                     _previousTemp:
  1726  00DB                            ds      6
  1727  00DB                     
  1728                           _Temp:
  1729  00E1                            ds      5
  1730  00E1                     
  1731                           _triggerTempChange:
  1732  00E6                            ds      4
  1733  00E6                     
  1734                           _isWeekDay:
  1735  00EA                            ds      2
  1736  00EA                     
  1737                           _day_of_week:
  1738  00EC                            ds      2
  1739  00EC                     
  1740                           _DisableAlarm:
  1741  00EE                            ds      2
  1742  00EE                     
  1743                           psect	dataBANK1,class=BANK1,space=1,noexec
  1744                           global __pdataBANK1
  1745                           __pdataBANK1:
  1746  00A0                     	file	"Thermometer.c"
  1747                           	line	23
  1748                           _numberTable:
  1749  00A0                            ds      10
  1750  00A0                     
  1751                           psect	dataBANK1
  1752                           	file	"main.c"
  1753                           	line	470
  1754                           SetTime@F993:
  1755  00AA                            ds      9
  1756  00AA                     
  1757                           psect	dataBANK1
  1758                           	file	"main.c"
  1759                           	line	42
  1760                           _dateDisplayer:
  1761  00B3                            ds      9
  1762  00B3                     
  1763                           psect	dataBANK1
  1764                           	file	"main.c"
  1765                           	line	35
  1766                           _weekEndEnd:
  1767  00BC                            ds      4
  1768  00BC                     
  1769                           psect	dataBANK1
  1770                           	file	"main.c"
  1771                           	line	34
  1772                           _weekEndStart:
  1773  00C0                            ds      4
  1774  00C0                     
  1775                           psect	dataBANK1
  1776                           	file	"main.c"
  1777                           	line	33
  1778                           _weekDayEnd:
  1779  00C4                            ds      4
  1780  00C4                     
  1781                           psect	dataBANK1
  1782                           	file	"main.c"
  1783                           	line	32
  1784                           _weekDayStart:
  1785  00C8                            ds      4
  1786  00C8                     
  1787                           psect	dataBANK1
  1788                           	file	"main.c"
  1789                           	line	40
  1790                           _timeDisplayer:
  1791  00CC                            ds      9
  1792  00CC                     
  1793                           psect	dataBANK1
  1794                           	file	"main.c"
  1795                           	line	38
  1796                           _tempBuffer:
  1797  00D5                            ds      6
  1798  00D5                     
  1799                           psect	bssBANK3,class=BANK3,space=1,noexec
  1800                           global __pbssBANK3
  1801                           __pbssBANK3:
  1802  01A0                     ___RealTimeClock_buff:
  1803  01A0                            ds      14
  1804  01A0                     
  1805                           psect	dataBANK3,class=BANK3,space=1,noexec
  1806                           global __pdataBANK3
  1807                           __pdataBANK3:
  1808  0190                     	file	"main.c"
  1809                           	line	51
  1810                           _start_date:
  1811  0190                            ds      16
  1812  0190                     
  1813                           	file	"C:\Users\515817\AppData\Local\Temp\s31k."
  1814                           	line	#
  1815                           global btemp
  1816                           psect inittext,class=CODE,delta=2
  1817                           global init_fetch0,btemp
  1818                           ;	Called with low address in FSR and high address in W
  1819                           init_fetch0:
  1820  1E1D                     	movf btemp,w
  1821  1E1D  087E               	movwf pclath
  1822  1E1E  008A               	movf btemp+1,w
  1823  1E1F  087F               	movwf pc
  1824  1E20  0082               global init_ram0
  1825                           ;Called with:
  1826                           ;	high address of idata address in btemp 
  1827                           ;	low address of idata address in btemp+1 
  1828                           ;	low address of data in FSR
  1829                           ;	high address + 1 of data in btemp-1
  1830                           init_ram0:
  1831  1E21                     	fcall init_fetch0
  1832  1E21  160A  158A  261D  160A  158A  	movwf indf,f
  1833  1E26  0080               	incf fsr,f
  1834  1E27  0A84               	movf fsr,w
  1835  1E28  0804               	xorwf btemp-1,w
  1836  1E29  067D               	btfsc status,2
  1837  1E2A  1903               	retlw 0
  1838  1E2B  3400               	incf btemp+1,f
  1839  1E2C  0AFF               	btfsc status,2
  1840  1E2D  1903               	incf btemp,f
  1841  1E2E  0AFE               	goto init_ram0
  1842  1E2F  2E21               ; Initialize objects allocated to BANK3
  1843                           psect cinit,class=CODE,delta=2,merge=1
  1844                           global init_ram0, __pidataBANK3
  1845                           	bsf	status, 7	;select IRP bank2
  1846  07B9  1783               	movlw low(__pdataBANK3+16)
  1847  07BA  30A0               	movwf btemp-1,f
  1848  07BB  00FD               	movlw high(__pidataBANK3)
  1849  07BC  301E               	movwf btemp,f
  1850  07BD  00FE               	movlw low(__pidataBANK3)
  1851  07BE  300D               	movwf btemp+1,f
  1852  07BF  00FF               	movlw low(__pdataBANK3)
  1853  07C0  3090               	movwf fsr,f
  1854  07C1  0084               	fcall init_ram0
  1855  07C2  160A  158A  2621  120A  118A  ; Initialize objects allocated to BANK1
  1856                           psect cinit,class=CODE,delta=2,merge=1
  1857                           global init_ram0, __pidataBANK1
  1858                           	bcf	status, 7	;select IRP bank0
  1859  07C7  1383               	movlw low(__pdataBANK1+59)
  1860  07C8  30DB               	movwf btemp-1,f
  1861  07C9  00FD               	movlw high(__pidataBANK1)
  1862  07CA  3011               	movwf btemp,f
  1863  07CB  00FE               	movlw low(__pidataBANK1)
  1864  07CC  30E7               	movwf btemp+1,f
  1865  07CD  00FF               	movlw low(__pdataBANK1)
  1866  07CE  30A0               	movwf fsr,f
  1867  07CF  0084               	fcall init_ram0
  1868  07D0  160A  158A  2621  120A  118A  ; Initialize objects allocated to BANK0
  1869                           psect cinit,class=CODE,delta=2,merge=1
  1870                           global init_ram0, __pidataBANK0
  1871                           	movlw low(__pdataBANK0+4)
  1872  07D5  3070               	movwf btemp-1,f
  1873  07D6  00FD               	movlw high(__pidataBANK0)
  1874  07D7  3010               	movwf btemp,f
  1875  07D8  00FE               	movlw low(__pidataBANK0)
  1876  07D9  30E5               	movwf btemp+1,f
  1877  07DA  00FF               	movlw low(__pdataBANK0)
  1878  07DB  306C               	movwf fsr,f
  1879  07DC  0084               	fcall init_ram0
  1880  07DD  160A  158A  2621  120A  118A  	line	#
  1881                           psect clrtext,class=CODE,delta=2
  1882                           global clear_ram0
  1883                           ;	Called with FSR containing the base address, and
  1884                           ;	W with the last address+1
  1885                           clear_ram0:
  1886  0004                     	clrwdt			;clear the watchdog before getting into this loop
  1887  0004  0064               clrloop0:
  1888  0005                     	clrf	indf		;clear RAM location pointed to by FSR
  1889  0005  0180               	incf	fsr,f		;increment pointer
  1890  0006  0A84               	xorwf	fsr,w		;XOR with final address
  1891  0007  0604               	btfsc	status,2	;have we reached the end yet?
  1892  0008  1903               	retlw	0		;all done for this memory range, return
  1893  0009  3400               	xorwf	fsr,w		;XOR again to restore value
  1894  000A  0604               	goto	clrloop0		;do the next byte
  1895  000B  2805               
  1896                           ; Clear objects allocated to BANK3
  1897                           psect cinit,class=CODE,delta=2,merge=1
  1898                           	bsf	status, 7	;select IRP bank2
  1899  07E2  1783               	movlw	low(__pbssBANK3)
  1900  07E3  30A0               	movwf	fsr
  1901  07E4  0084               	movlw	low((__pbssBANK3)+0Eh)
  1902  07E5  30AE               	fcall	clear_ram0
  1903  07E6  120A  118A  2004  120A  118A  ; Clear objects allocated to BANK1
  1904                           psect cinit,class=CODE,delta=2,merge=1
  1905                           	bcf	status, 7	;select IRP bank0
  1906  07EB  1383               	movlw	low(__pbssBANK1)
  1907  07EC  30DB               	movwf	fsr
  1908  07ED  0084               	movlw	low((__pbssBANK1)+015h)
  1909  07EE  30F0               	fcall	clear_ram0
  1910  07EF  120A  118A  2004  120A  118A  ; Clear objects allocated to BANK0
  1911                           psect cinit,class=CODE,delta=2,merge=1
  1912                           	movlw	low(__pbssBANK0)
  1913  07F4  3056               	movwf	fsr
  1914  07F5  0084               	movlw	low((__pbssBANK0)+016h)
  1915  07F6  306C               	fcall	clear_ram0
  1916  07F7  120A  118A  2004  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1917                           global end_of_initialization,__end_of__initialization
  1918                           
  1919                           ;End of C runtime variable initialization code
  1920                           
  1921                           end_of_initialization:
  1922  07FC                     __end_of__initialization:
  1923  07FC                     clrf status
  1924  07FC  0183               ljmp _main	;jump to C main() function
  1925  07FD  120A  118A  2AA6   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1926                           global __pcstackCOMMON
  1927                           __pcstackCOMMON:
  1928  0070                     ?_Get_Temp:	; 1 bytes @ 0x0
  1929  0070                     ?_LCD_SendData:	; 1 bytes @ 0x0
  1930  0070                     ??_LCD_SendData:	; 1 bytes @ 0x0
  1931  0070                     ?_LCD_Busy:	; 1 bytes @ 0x0
  1932  0070                     ??_LCD_Busy:	; 1 bytes @ 0x0
  1933  0070                     ?_LCD_SecondLine:	; 1 bytes @ 0x0
  1934  0070                     ?_LCD_Command:	; 1 bytes @ 0x0
  1935  0070                     ??_LCD_Command:	; 1 bytes @ 0x0
  1936  0070                     ?_SoundOff:	; 1 bytes @ 0x0
  1937  0070                     ??_SoundOff:	; 1 bytes @ 0x0
  1938  0070                     ?_SoundOn:	; 1 bytes @ 0x0
  1939  0070                     ??_SoundOn:	; 1 bytes @ 0x0
  1940  0070                     ?_LCD_Init:	; 1 bytes @ 0x0
  1941  0070                     ??_LCD_Init:	; 1 bytes @ 0x0
  1942  0070                     ?_Init_Keypad:	; 1 bytes @ 0x0
  1943  0070                     ??_Init_Keypad:	; 1 bytes @ 0x0
  1944  0070                     ?_Thermometer_Init:	; 1 bytes @ 0x0
  1945  0070                     ??_Thermometer_Init:	; 1 bytes @ 0x0
  1946  0070                     ?_RealTimeClock_init:	; 1 bytes @ 0x0
  1947  0070                     ?_RealTimeClock_set_burst_time:	; 1 bytes @ 0x0
  1948  0070                     ?_Buzzer_Init:	; 1 bytes @ 0x0
  1949  0070                     ??_Buzzer_Init:	; 1 bytes @ 0x0
  1950  0070                     ?_Main_Delay:	; 1 bytes @ 0x0
  1951  0070                     ?_DisplayTime:	; 1 bytes @ 0x0
  1952  0070                     ?_DisplayDate:	; 1 bytes @ 0x0
  1953  0070                     ?_DisplayDay:	; 1 bytes @ 0x0
  1954  0070                     ?_DisplayTemp:	; 1 bytes @ 0x0
  1955  0070                     ?_MainScreen:	; 1 bytes @ 0x0
  1956  0070                     ?_ChangeTrigger:	; 1 bytes @ 0x0
  1957  0070                     ?_CheckDay:	; 1 bytes @ 0x0
  1958  0070                     ??_CheckDay:	; 1 bytes @ 0x0
  1959  0070                     ?_CheckTime:	; 1 bytes @ 0x0
  1960  0070                     ?_main:	; 1 bytes @ 0x0
  1961  0070                     ?_RealTimeClock_write_byte:	; 1 bytes @ 0x0
  1962  0070                     ??_RealTimeClock_write_byte:	; 1 bytes @ 0x0
  1963  0070                     ?_RealTimeClock_read_byte:	; 1 bytes @ 0x0
  1964  0070                     ??_RealTimeClock_read_byte:	; 1 bytes @ 0x0
  1965  0070                     ?_Key_Delay:	; 1 bytes @ 0x0
  1966  0070                     ?_Delay:	; 1 bytes @ 0x0
  1967  0070                     ?_Reset:	; 1 bytes @ 0x0
  1968  0070                     ?_Write_Byte:	; 1 bytes @ 0x0
  1969  0070                     ?_Read_Byte:	; 1 bytes @ 0x0
  1970  0070                     	global	?___wmul
  1971                           ?___wmul:	; 2 bytes @ 0x0
  1972  0070                     	global	?___awdiv
  1973                           ?___awdiv:	; 2 bytes @ 0x0
  1974  0070                     	global	?___awmod
  1975                           ?___awmod:	; 2 bytes @ 0x0
  1976  0070                     	global	?___lwmod
  1977                           ?___lwmod:	; 2 bytes @ 0x0
  1978  0070                     	global	LCD_Command@c
  1979                           LCD_Command@c:	; 1 bytes @ 0x0
  1980  0070                     	global	LCD_SendData@c
  1981                           LCD_SendData@c:	; 1 bytes @ 0x0
  1982  0070                     	global	Delay@y
  1983                           Delay@y:	; 1 bytes @ 0x0
  1984  0070                     	global	Main_Delay@k
  1985                           Main_Delay@k:	; 2 bytes @ 0x0
  1986  0070                     	global	Key_Delay@k
  1987                           Key_Delay@k:	; 2 bytes @ 0x0
  1988  0070                     	global	___wmul@multiplier
  1989                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1990  0070                     	global	___awdiv@divisor
  1991                           ___awdiv@divisor:	; 2 bytes @ 0x0
  1992  0070                     	global	___awmod@divisor
  1993                           ___awmod@divisor:	; 2 bytes @ 0x0
  1994  0070                     	global	___lwmod@divisor
  1995                           ___lwmod@divisor:	; 2 bytes @ 0x0
  1996  0070                     	ds	1
  1997  0070                     ?_LCD_SendString:	; 1 bytes @ 0x1
  1998  0071                     ??_LCD_SecondLine:	; 1 bytes @ 0x1
  1999  0071                     ??_Delay:	; 1 bytes @ 0x1
  2000  0071                     	global	LCD_SendString@string
  2001                           LCD_SendString@string:	; 2 bytes @ 0x1
  2002  0071                     	ds	1
  2003  0071                     ??_Main_Delay:	; 1 bytes @ 0x2
  2004  0072                     ??_Key_Delay:	; 1 bytes @ 0x2
  2005  0072                     	global	RealTimeClock_read_byte@time_rx
  2006                           RealTimeClock_read_byte@time_rx:	; 1 bytes @ 0x2
  2007  0072                     	global	Delay@x
  2008                           Delay@x:	; 1 bytes @ 0x2
  2009  0072                     	global	RealTimeClock_write_byte@i
  2010                           RealTimeClock_write_byte@i:	; 2 bytes @ 0x2
  2011  0072                     	global	Key_Delay@i
  2012                           Key_Delay@i:	; 2 bytes @ 0x2
  2013  0072                     	global	___wmul@multiplicand
  2014                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2015  0072                     	global	___awdiv@dividend
  2016                           ___awdiv@dividend:	; 2 bytes @ 0x2
  2017  0072                     	global	___awmod@dividend
  2018                           ___awmod@dividend:	; 2 bytes @ 0x2
  2019  0072                     	global	___lwmod@dividend
  2020                           ___lwmod@dividend:	; 2 bytes @ 0x2
  2021  0072                     	ds	1
  2022  0072                     ??_LCD_SendString:	; 1 bytes @ 0x3
  2023  0073                     	global	Delay@z
  2024                           Delay@z:	; 1 bytes @ 0x3
  2025  0073                     	global	Main_Delay@i
  2026                           Main_Delay@i:	; 2 bytes @ 0x3
  2027  0073                     	global	RealTimeClock_read_byte@i
  2028                           RealTimeClock_read_byte@i:	; 2 bytes @ 0x3
  2029  0073                     	ds	1
  2030  0073                     ??_Reset:	; 1 bytes @ 0x4
  2031  0074                     ??_Write_Byte:	; 1 bytes @ 0x4
  2032  0074                     ??_Read_Byte:	; 1 bytes @ 0x4
  2033  0074                     ??___wmul:	; 1 bytes @ 0x4
  2034  0074                     ??___awdiv:	; 1 bytes @ 0x4
  2035  0074                     ??___awmod:	; 1 bytes @ 0x4
  2036  0074                     ??___lwmod:	; 1 bytes @ 0x4
  2037  0074                     	global	RealTimeClock_write_byte@time_tx
  2038                           RealTimeClock_write_byte@time_tx:	; 1 bytes @ 0x4
  2039  0074                     	global	Key_Delay@j
  2040                           Key_Delay@j:	; 2 bytes @ 0x4
  2041  0074                     	global	___wmul@product
  2042                           ___wmul@product:	; 2 bytes @ 0x4
  2043  0074                     	ds	1
  2044  0074                     ??_RealTimeClock_init:	; 1 bytes @ 0x5
  2045  0075                     	global	Reset@presence
  2046                           Reset@presence:	; 1 bytes @ 0x5
  2047  0075                     	global	Read_Byte@value
  2048                           Read_Byte@value:	; 1 bytes @ 0x5
  2049  0075                     	global	___awdiv@counter
  2050                           ___awdiv@counter:	; 1 bytes @ 0x5
  2051  0075                     	global	___awmod@counter
  2052                           ___awmod@counter:	; 1 bytes @ 0x5
  2053  0075                     	global	___lwmod@counter
  2054                           ___lwmod@counter:	; 1 bytes @ 0x5
  2055  0075                     	global	Main_Delay@j
  2056                           Main_Delay@j:	; 2 bytes @ 0x5
  2057  0075                     	ds	1
  2058  0075                     	global	?_Keypad_Scan
  2059                           ?_Keypad_Scan:	; 2 bytes @ 0x6
  2060  0076                     	global	?___lwdiv
  2061                           ?___lwdiv:	; 2 bytes @ 0x6
  2062  0076                     	global	Write_Byte@temp
  2063                           Write_Byte@temp:	; 1 bytes @ 0x6
  2064  0076                     	global	Read_Byte@i
  2065                           Read_Byte@i:	; 1 bytes @ 0x6
  2066  0076                     	global	___awdiv@sign
  2067                           ___awdiv@sign:	; 1 bytes @ 0x6
  2068  0076                     	global	___awmod@sign
  2069                           ___awmod@sign:	; 1 bytes @ 0x6
  2070  0076                     	global	LCD_SendString@i
  2071                           LCD_SendString@i:	; 2 bytes @ 0x6
  2072  0076                     	global	___lwdiv@divisor
  2073                           ___lwdiv@divisor:	; 2 bytes @ 0x6
  2074  0076                     	ds	1
  2075  0076                     ?_Switch24Hour:	; 1 bytes @ 0x7
  2076  0077                     ?___int_to_hex:	; 1 bytes @ 0x7
  2077  0077                     	global	?___hex_to_int
  2078                           ?___hex_to_int:	; 2 bytes @ 0x7
  2079  0077                     	global	Write_Byte@val
  2080                           Write_Byte@val:	; 1 bytes @ 0x7
  2081  0077                     	global	Switch24Hour@Key
  2082                           Switch24Hour@Key:	; 2 bytes @ 0x7
  2083  0077                     	global	___int_to_hex@integer
  2084                           ___int_to_hex@integer:	; 2 bytes @ 0x7
  2085  0077                     	global	___awdiv@quotient
  2086                           ___awdiv@quotient:	; 2 bytes @ 0x7
  2087  0077                     	ds	1
  2088  0077                     ??_Keypad_Scan:	; 1 bytes @ 0x8
  2089  0078                     ?_SwapToHeatingDisplay:	; 1 bytes @ 0x8
  2090  0078                     	global	Write_Byte@i
  2091                           Write_Byte@i:	; 1 bytes @ 0x8
  2092  0078                     	global	SwapToHeatingDisplay@Key
  2093                           SwapToHeatingDisplay@Key:	; 2 bytes @ 0x8
  2094  0078                     	global	___lwdiv@dividend
  2095                           ___lwdiv@dividend:	; 2 bytes @ 0x8
  2096  0078                     	ds	1
  2097  0078                     ??_Switch24Hour:	; 1 bytes @ 0x9
  2098  0079                     ??___hex_to_int:	; 1 bytes @ 0x9
  2099  0079                     ??___int_to_hex:	; 1 bytes @ 0x9
  2100  0079                     	ds	1
  2101  0079                     ??_RealTimeClock_get_seconds:	; 1 bytes @ 0xA
  2102  007A                     ??_RealTimeClock_get_minutes:	; 1 bytes @ 0xA
  2103  007A                     ??_RealTimeClock_get_hours:	; 1 bytes @ 0xA
  2104  007A                     ??_RealTimeClock_get_month:	; 1 bytes @ 0xA
  2105  007A                     ??_RealTimeClock_get_day_of_month:	; 1 bytes @ 0xA
  2106  007A                     ??_RealTimeClock_get_year:	; 1 bytes @ 0xA
  2107  007A                     ??_RealTimeClock_get_day_of_week:	; 1 bytes @ 0xA
  2108  007A                     ??_SwapToHeatingDisplay:	; 1 bytes @ 0xA
  2109  007A                     ??___lwdiv:	; 1 bytes @ 0xA
  2110  007A                     	global	Switch24Hour@c
  2111                           Switch24Hour@c:	; 1 bytes @ 0xA
  2112  007A                     	global	___int_to_hex@t
  2113                           ___int_to_hex@t:	; 2 bytes @ 0xA
  2114  007A                     	ds	1
  2115  007A                     	global	SwapToHeatingDisplay@Heat
  2116                           SwapToHeatingDisplay@Heat:	; 1 bytes @ 0xB
  2117  007B                     	global	RealTimeClock_get_seconds@c
  2118                           RealTimeClock_get_seconds@c:	; 1 bytes @ 0xB
  2119  007B                     	global	RealTimeClock_get_minutes@c
  2120                           RealTimeClock_get_minutes@c:	; 1 bytes @ 0xB
  2121  007B                     	global	RealTimeClock_get_hours@c
  2122                           RealTimeClock_get_hours@c:	; 1 bytes @ 0xB
  2123  007B                     	global	RealTimeClock_get_day_of_month@c
  2124                           RealTimeClock_get_day_of_month@c:	; 1 bytes @ 0xB
  2125  007B                     	global	RealTimeClock_get_month@c
  2126                           RealTimeClock_get_month@c:	; 1 bytes @ 0xB
  2127  007B                     	global	RealTimeClock_get_day_of_week@c
  2128                           RealTimeClock_get_day_of_week@c:	; 1 bytes @ 0xB
  2129  007B                     	global	RealTimeClock_get_year@c
  2130                           RealTimeClock_get_year@c:	; 1 bytes @ 0xB
  2131  007B                     	global	___lwdiv@quotient
  2132                           ___lwdiv@quotient:	; 2 bytes @ 0xB
  2133  007B                     	ds	1
  2134  007B                     ??_DisplayTime:	; 1 bytes @ 0xC
  2135  007C                     ??_DisplayDate:	; 1 bytes @ 0xC
  2136  007C                     ??_DisplayDay:	; 1 bytes @ 0xC
  2137  007C                     ??_CheckTime:	; 1 bytes @ 0xC
  2138  007C                     	global	SwapToHeatingDisplay@On
  2139                           SwapToHeatingDisplay@On:	; 1 bytes @ 0xC
  2140  007C                     	global	___int_to_hex@i
  2141                           ___int_to_hex@i:	; 2 bytes @ 0xC
  2142  007C                     	ds	1
  2143  007C                     	global	SwapToHeatingDisplay@Off
  2144                           SwapToHeatingDisplay@Off:	; 1 bytes @ 0xD
  2145  007D                     	global	___lwdiv@counter
  2146                           ___lwdiv@counter:	; 1 bytes @ 0xD
  2147  007D                     	ds	1
  2148  007D                     ??_RealTimeClock_set_hours:	; 1 bytes @ 0xE
  2149  007E                     ??_RealTimeClock_set_minutes:	; 1 bytes @ 0xE
  2150  007E                     ??_RealTimeClock_set_seconds:	; 1 bytes @ 0xE
  2151  007E                     ??_RealTimeClock_set_day_of_week:	; 1 bytes @ 0xE
  2152  007E                     ??_DisplayTemp:	; 1 bytes @ 0xE
  2153  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2154                           global __pcstackBANK0
  2155                           __pcstackBANK0:
  2156  0020                     ??_Get_Temp:	; 1 bytes @ 0x0
  2157  0020                     ?_RealTimeClock_set_hours:	; 1 bytes @ 0x0
  2158  0020                     ?_RealTimeClock_set_minutes:	; 1 bytes @ 0x0
  2159  0020                     ?_RealTimeClock_set_seconds:	; 1 bytes @ 0x0
  2160  0020                     ?_RealTimeClock_set_day_of_week:	; 1 bytes @ 0x0
  2161  0020                     ??_RealTimeClock_set_burst_time:	; 1 bytes @ 0x0
  2162  0020                     ??_ChangeTrigger:	; 1 bytes @ 0x0
  2163  0020                     	global	___hex_to_int@hex
  2164                           ___hex_to_int@hex:	; 1 bytes @ 0x0
  2165  0020                     	global	RealTimeClock_set_seconds@seconds
  2166                           RealTimeClock_set_seconds@seconds:	; 2 bytes @ 0x0
  2167  0020                     	global	RealTimeClock_set_minutes@minutes
  2168                           RealTimeClock_set_minutes@minutes:	; 2 bytes @ 0x0
  2169  0020                     	global	RealTimeClock_set_hours@hours
  2170                           RealTimeClock_set_hours@hours:	; 2 bytes @ 0x0
  2171  0020                     	global	RealTimeClock_set_day_of_week@day
  2172                           RealTimeClock_set_day_of_week@day:	; 2 bytes @ 0x0
  2173  0020                     	ds	1
  2174  0020                     	global	___hex_to_int@i
  2175                           ___hex_to_int@i:	; 2 bytes @ 0x1
  2176  0021                     	ds	1
  2177  0021                     	global	RealTimeClock_set_burst_time@time
  2178                           RealTimeClock_set_burst_time@time:	; 1 bytes @ 0x2
  2179  0022                     	ds	1
  2180  0022                     	global	___hex_to_int@t
  2181                           ___hex_to_int@t:	; 2 bytes @ 0x3
  2182  0023                     	global	RealTimeClock_set_burst_time@i
  2183                           RealTimeClock_set_burst_time@i:	; 2 bytes @ 0x3
  2184  0023                     	ds	1
  2185  0023                     	global	Get_Temp@buffer
  2186                           Get_Temp@buffer:	; 1 bytes @ 0x4
  2187  0024                     	ds	1
  2188  0024                     	global	?_RealTimeClock_get_seconds
  2189                           ?_RealTimeClock_get_seconds:	; 2 bytes @ 0x5
  2190  0025                     	global	?_RealTimeClock_get_minutes
  2191                           ?_RealTimeClock_get_minutes:	; 2 bytes @ 0x5
  2192  0025                     	global	?_RealTimeClock_get_hours
  2193                           ?_RealTimeClock_get_hours:	; 2 bytes @ 0x5
  2194  0025                     	global	?_RealTimeClock_get_month
  2195                           ?_RealTimeClock_get_month:	; 2 bytes @ 0x5
  2196  0025                     	global	?_RealTimeClock_get_day_of_month
  2197                           ?_RealTimeClock_get_day_of_month:	; 2 bytes @ 0x5
  2198  0025                     	global	?_RealTimeClock_get_year
  2199                           ?_RealTimeClock_get_year:	; 2 bytes @ 0x5
  2200  0025                     	global	?_RealTimeClock_get_day_of_week
  2201                           ?_RealTimeClock_get_day_of_week:	; 2 bytes @ 0x5
  2202  0025                     	global	Get_Temp@i
  2203                           Get_Temp@i:	; 2 bytes @ 0x5
  2204  0025                     	ds	1
  2205  0025                     	global	ChangeTrigger@digits
  2206                           ChangeTrigger@digits:	; 3 bytes @ 0x6
  2207  0026                     	ds	1
  2208  0026                     ?_SetTime:	; 1 bytes @ 0x7
  2209  0027                     ?_SetDate:	; 1 bytes @ 0x7
  2210  0027                     	global	DisplayDay@Monday
  2211                           DisplayDay@Monday:	; 1 bytes @ 0x7
  2212  0027                     	global	DisplayTemp@tempBuffer
  2213                           DisplayTemp@tempBuffer:	; 1 bytes @ 0x7
  2214  0027                     	global	DisplayDate@month
  2215                           DisplayDate@month:	; 2 bytes @ 0x7
  2216  0027                     	global	SetTime@Key
  2217                           SetTime@Key:	; 2 bytes @ 0x7
  2218  0027                     	global	SetDate@Key
  2219                           SetDate@Key:	; 2 bytes @ 0x7
  2220  0027                     	ds	1
  2221  0027                     ??_MainScreen:	; 1 bytes @ 0x8
  2222  0028                     	global	DisplayDay@Tuesday
  2223                           DisplayDay@Tuesday:	; 1 bytes @ 0x8
  2224  0028                     	ds	1
  2225  0028                     ??_SetTime:	; 1 bytes @ 0x9
  2226  0029                     ??_SetDate:	; 1 bytes @ 0x9
  2227  0029                     	global	DisplayDay@Wednesday
  2228                           DisplayDay@Wednesday:	; 1 bytes @ 0x9
  2229  0029                     	global	MainScreen@Time
  2230                           MainScreen@Time:	; 1 bytes @ 0x9
  2231  0029                     	global	ChangeTrigger@Trigger
  2232                           ChangeTrigger@Trigger:	; 1 bytes @ 0x9
  2233  0029                     	global	DisplayDate@day
  2234                           DisplayDate@day:	; 2 bytes @ 0x9
  2235  0029                     	ds	1
  2236  0029                     	global	DisplayDay@Thursday
  2237                           DisplayDay@Thursday:	; 1 bytes @ 0xA
  2238  002A                     	global	MainScreen@Temp
  2239                           MainScreen@Temp:	; 1 bytes @ 0xA
  2240  002A                     	global	ChangeTrigger@TriggerSet
  2241                           ChangeTrigger@TriggerSet:	; 1 bytes @ 0xA
  2242  002A                     	global	SetDate@Day
  2243                           SetDate@Day:	; 1 bytes @ 0xA
  2244  002A                     	ds	1
  2245  002A                     	global	DisplayDay@Friday
  2246                           DisplayDay@Friday:	; 1 bytes @ 0xB
  2247  002B                     	global	ChangeTrigger@decimal
  2248                           ChangeTrigger@decimal:	; 1 bytes @ 0xB
  2249  002B                     	global	SetDate@Date
  2250                           SetDate@Date:	; 1 bytes @ 0xB
  2251  002B                     	global	DisplayDate@year
  2252                           DisplayDate@year:	; 2 bytes @ 0xB
  2253  002B                     	ds	1
  2254  002B                     	global	DisplayDay@Saturday
  2255                           DisplayDay@Saturday:	; 1 bytes @ 0xC
  2256  002C                     	global	ChangeTrigger@Key
  2257                           ChangeTrigger@Key:	; 1 bytes @ 0xC
  2258  002C                     	global	SetDate@DateSet
  2259                           SetDate@DateSet:	; 1 bytes @ 0xC
  2260  002C                     	ds	1
  2261  002C                     	global	DisplayDay@Sunday
  2262                           DisplayDay@Sunday:	; 1 bytes @ 0xD
  2263  002D                     	global	SetDate@Monday
  2264                           SetDate@Monday:	; 1 bytes @ 0xD
  2265  002D                     	global	ChangeTrigger@i_199
  2266                           ChangeTrigger@i_199:	; 2 bytes @ 0xD
  2267  002D                     	ds	1
  2268  002D                     	global	SetDate@Tuesday
  2269                           SetDate@Tuesday:	; 1 bytes @ 0xE
  2270  002E                     	ds	1
  2271  002E                     	global	SetDate@Wednesday
  2272                           SetDate@Wednesday:	; 1 bytes @ 0xF
  2273  002F                     	global	ChangeTrigger@i
  2274                           ChangeTrigger@i:	; 2 bytes @ 0xF
  2275  002F                     	global	SetTime@digits
  2276                           SetTime@digits:	; 9 bytes @ 0xF
  2277  002F                     	ds	1
  2278  002F                     	global	SetDate@Thursday
  2279                           SetDate@Thursday:	; 1 bytes @ 0x10
  2280  0030                     	ds	1
  2281  0030                     ?_HeatingControlOff:	; 1 bytes @ 0x11
  2282  0031                     ?_DateDayScreen:	; 1 bytes @ 0x11
  2283  0031                     	global	SetDate@Friday
  2284                           SetDate@Friday:	; 1 bytes @ 0x11
  2285  0031                     	global	HeatingControlOff@Key
  2286                           HeatingControlOff@Key:	; 2 bytes @ 0x11
  2287  0031                     	global	DateDayScreen@Key
  2288                           DateDayScreen@Key:	; 2 bytes @ 0x11
  2289  0031                     	ds	1
  2290  0031                     	global	SetDate@Saturday
  2291                           SetDate@Saturday:	; 1 bytes @ 0x12
  2292  0032                     	ds	1
  2293  0032                     ??_DateDayScreen:	; 1 bytes @ 0x13
  2294  0033                     	global	SetDate@Sunday
  2295                           SetDate@Sunday:	; 1 bytes @ 0x13
  2296  0033                     	global	HeatingControlOff@temp
  2297                           HeatingControlOff@temp:	; 2 bytes @ 0x13
  2298  0033                     	ds	1
  2299  0033                     	global	DateDayScreen@date
  2300                           DateDayScreen@date:	; 1 bytes @ 0x14
  2301  0034                     	global	SetDate@i
  2302                           SetDate@i:	; 2 bytes @ 0x14
  2303  0034                     	ds	1
  2304  0034                     	global	DateDayScreen@day
  2305                           DateDayScreen@day:	; 1 bytes @ 0x15
  2306  0035                     	global	HeatingControlOff@temp2
  2307                           HeatingControlOff@temp2:	; 2 bytes @ 0x15
  2308  0035                     	ds	1
  2309  0035                     	global	SetDate@dayInt
  2310                           SetDate@dayInt:	; 2 bytes @ 0x16
  2311  0036                     	ds	1
  2312  0036                     	global	HeatingControlOff@temp3
  2313                           HeatingControlOff@temp3:	; 2 bytes @ 0x17
  2314  0037                     	ds	1
  2315  0037                     	global	SetTime@Time
  2316                           SetTime@Time:	; 1 bytes @ 0x18
  2317  0038                     	ds	1
  2318  0038                     ??_HeatingControlOff:	; 1 bytes @ 0x19
  2319  0039                     	global	SetTime@TimeSet
  2320                           SetTime@TimeSet:	; 1 bytes @ 0x19
  2321  0039                     	ds	1
  2322  0039                     	global	HeatingControlOff@Off
  2323                           HeatingControlOff@Off:	; 1 bytes @ 0x1A
  2324  003A                     	global	SetTime@hour
  2325                           SetTime@hour:	; 2 bytes @ 0x1A
  2326  003A                     	ds	1
  2327  003A                     	global	HeatingControlOff@On
  2328                           HeatingControlOff@On:	; 1 bytes @ 0x1B
  2329  003B                     	ds	1
  2330  003B                     ?_SoundAlarm:	; 1 bytes @ 0x1C
  2331  003C                     	global	SoundAlarm@Key
  2332                           SoundAlarm@Key:	; 2 bytes @ 0x1C
  2333  003C                     	global	SetTime@min
  2334                           SetTime@min:	; 2 bytes @ 0x1C
  2335  003C                     	ds	2
  2336  003C                     	global	SoundAlarm@temp
  2337                           SoundAlarm@temp:	; 2 bytes @ 0x1E
  2338  003E                     	global	SetTime@sec
  2339                           SetTime@sec:	; 2 bytes @ 0x1E
  2340  003E                     	ds	2
  2341  003E                     	global	SoundAlarm@temp2
  2342                           SoundAlarm@temp2:	; 2 bytes @ 0x20
  2343  0040                     	global	SetTime@setTime
  2344                           SetTime@setTime:	; 6 bytes @ 0x20
  2345  0040                     	ds	2
  2346  0040                     	global	SoundAlarm@temp3
  2347                           SoundAlarm@temp3:	; 2 bytes @ 0x22
  2348  0042                     	ds	2
  2349  0042                     ??_SoundAlarm:	; 1 bytes @ 0x24
  2350  0044                     	ds	1
  2351  0044                     	global	SoundAlarm@Alarm
  2352                           SoundAlarm@Alarm:	; 1 bytes @ 0x25
  2353  0045                     	ds	1
  2354  0045                     	global	SetTime@i
  2355                           SetTime@i:	; 2 bytes @ 0x26
  2356  0046                     	ds	2
  2357  0046                     ??_main:	; 1 bytes @ 0x28
  2358  0048                     	ds	2
  2359  0048                     	global	main@tempdec
  2360                           main@tempdec:	; 2 bytes @ 0x2A
  2361  004A                     	ds	2
  2362  004A                     	global	main@tempdectenth
  2363                           main@tempdectenth:	; 2 bytes @ 0x2C
  2364  004C                     	ds	2
  2365  004C                     	global	main@temp
  2366                           main@temp:	; 2 bytes @ 0x2E
  2367  004E                     	ds	2
  2368  004E                     	global	main@temp2
  2369                           main@temp2:	; 2 bytes @ 0x30
  2370  0050                     	ds	2
  2371  0050                     	global	main@temp3
  2372                           main@temp3:	; 2 bytes @ 0x32
  2373  0052                     	ds	2
  2374  0052                     	global	main@Key
  2375                           main@Key:	; 2 bytes @ 0x34
  2376  0054                     	ds	2
  2377  0054                     ;!
  2378                           ;!Data Sizes:
  2379                           ;!    Strings     212
  2380                           ;!    Constant    0
  2381                           ;!    Data        79
  2382                           ;!    BSS         57
  2383                           ;!    Persistent  0
  2384                           ;!    Stack       0
  2385                           ;!
  2386                           ;!Auto Spaces:
  2387                           ;!    Space          Size  Autos    Used
  2388                           ;!    COMMON           14     14      14
  2389                           ;!    BANK0            80     54      80
  2390                           ;!    BANK1            80      0      80
  2391                           ;!    BANK3            96      0      30
  2392                           ;!    BANK2            96      0       0
  2393                           
  2394                           ;!
  2395                           ;!Pointer List with Targets:
  2396                           ;!
  2397                           ;!    timeBuffer	PTR int  size(1) Largest target is 0
  2398                           ;!		 -> NULL(NULL[0]), 
  2399                           ;!
  2400                           ;!    Get_Temp@buffer	PTR unsigned char  size(1) Largest target is 6
  2401                           ;!		 -> tempBuffer(BANK1[6]), 
  2402                           ;!
  2403                           ;!    LCD_SendString@string	PTR const unsigned char  size(2) Largest target is 16
  2404                           ;!		 -> STR_31(CODE[4]), STR_30(CODE[4]), STR_29(CODE[4]), STR_28(CODE[4]), 
  2405                           ;!		 -> STR_27(CODE[4]), STR_26(CODE[4]), STR_25(CODE[4]), STR_24(CODE[13]), 
  2406                           ;!		 -> STR_23(CODE[6]), STR_22(CODE[5]), SetTime@digits(BANK0[9]), STR_21(CODE[9]), 
  2407                           ;!		 -> STR_20(CODE[6]), STR_19(CODE[6]), STR_18(CODE[7]), STR_17(CODE[16]), 
  2408                           ;!		 -> STR_16(CODE[11]), STR_15(CODE[12]), STR_14(CODE[4]), STR_13(CODE[3]), 
  2409                           ;!		 -> STR_12(CODE[9]), ChangeTrigger@digits(BANK0[3]), STR_11(CODE[12]), STR_10(CODE[9
                                 ]), 
  2410                           ;!		 -> tempBuffer(BANK1[6]), STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[7]), 
  2411                           ;!		 -> STR_6(CODE[9]), STR_5(CODE[7]), STR_4(CODE[9]), STR_3(CODE[10]), 
  2412                           ;!		 -> STR_2(CODE[8]), STR_1(CODE[7]), timeDisplayer(BANK1[9]), 
  2413                           ;!
  2414                           ;!    sp__RealTimeClock_get_burst_time	PTR int  size(1) Largest target is 14
  2415                           ;!		 -> __RealTimeClock_buff(BANK3[14]), 
  2416                           ;!
  2417                           ;!    RealTimeClock_set_burst_time@time	PTR int  size(1) Largest target is 16
  2418                           ;!		 -> start_date(BANK3[16]), 
  2419                           ;!
  2420                           ;!    SetDate@Sunday	PTR unsigned char  size(1) Largest target is 4
  2421                           ;!		 -> STR_31(CODE[4]), 
  2422                           ;!
  2423                           ;!    SetDate@Saturday	PTR unsigned char  size(1) Largest target is 4
  2424                           ;!		 -> STR_30(CODE[4]), 
  2425                           ;!
  2426                           ;!    SetDate@Friday	PTR unsigned char  size(1) Largest target is 4
  2427                           ;!		 -> STR_29(CODE[4]), 
  2428                           ;!
  2429                           ;!    SetDate@Thursday	PTR unsigned char  size(1) Largest target is 4
  2430                           ;!		 -> STR_28(CODE[4]), 
  2431                           ;!
  2432                           ;!    SetDate@Wednesday	PTR unsigned char  size(1) Largest target is 4
  2433                           ;!		 -> STR_27(CODE[4]), 
  2434                           ;!
  2435                           ;!    SetDate@Tuesday	PTR unsigned char  size(1) Largest target is 4
  2436                           ;!		 -> STR_26(CODE[4]), 
  2437                           ;!
  2438                           ;!    SetDate@Monday	PTR unsigned char  size(1) Largest target is 4
  2439                           ;!		 -> STR_25(CODE[4]), 
  2440                           ;!
  2441                           ;!    SetDate@DateSet	PTR unsigned char  size(1) Largest target is 13
  2442                           ;!		 -> STR_24(CODE[13]), 
  2443                           ;!
  2444                           ;!    SetDate@Date	PTR unsigned char  size(1) Largest target is 6
  2445                           ;!		 -> STR_23(CODE[6]), 
  2446                           ;!
  2447                           ;!    SetDate@Day	PTR unsigned char  size(1) Largest target is 5
  2448                           ;!		 -> STR_22(CODE[5]), 
  2449                           ;!
  2450                           ;!    SetTime@TimeSet	PTR unsigned char  size(1) Largest target is 9
  2451                           ;!		 -> STR_21(CODE[9]), 
  2452                           ;!
  2453                           ;!    SetTime@Time	PTR unsigned char  size(1) Largest target is 6
  2454                           ;!		 -> STR_20(CODE[6]), 
  2455                           ;!
  2456                           ;!    DateDayScreen@day	PTR unsigned char  size(1) Largest target is 6
  2457                           ;!		 -> STR_19(CODE[6]), 
  2458                           ;!
  2459                           ;!    DateDayScreen@date	PTR unsigned char  size(1) Largest target is 7
  2460                           ;!		 -> STR_18(CODE[7]), 
  2461                           ;!
  2462                           ;!    SoundAlarm@Alarm	PTR unsigned char  size(1) Largest target is 16
  2463                           ;!		 -> STR_17(CODE[16]), 
  2464                           ;!
  2465                           ;!    HeatingControlOff@On	PTR unsigned char  size(1) Largest target is 11
  2466                           ;!		 -> STR_16(CODE[11]), 
  2467                           ;!
  2468                           ;!    HeatingControlOff@Off	PTR unsigned char  size(1) Largest target is 12
  2469                           ;!		 -> STR_15(CODE[12]), 
  2470                           ;!
  2471                           ;!    SwapToHeatingDisplay@Off	PTR unsigned char  size(1) Largest target is 4
  2472                           ;!		 -> STR_14(CODE[4]), 
  2473                           ;!
  2474                           ;!    SwapToHeatingDisplay@On	PTR unsigned char  size(1) Largest target is 3
  2475                           ;!		 -> STR_13(CODE[3]), 
  2476                           ;!
  2477                           ;!    SwapToHeatingDisplay@Heat	PTR unsigned char  size(1) Largest target is 9
  2478                           ;!		 -> STR_12(CODE[9]), 
  2479                           ;!
  2480                           ;!    ChangeTrigger@TriggerSet	PTR unsigned char  size(1) Largest target is 12
  2481                           ;!		 -> STR_11(CODE[12]), 
  2482                           ;!
  2483                           ;!    ChangeTrigger@Trigger	PTR unsigned char  size(1) Largest target is 9
  2484                           ;!		 -> STR_10(CODE[9]), 
  2485                           ;!
  2486                           ;!    MainScreen@Temp	PTR unsigned char  size(1) Largest target is 6
  2487                           ;!		 -> STR_9(CODE[6]), 
  2488                           ;!
  2489                           ;!    MainScreen@Time	PTR unsigned char  size(1) Largest target is 6
  2490                           ;!		 -> STR_8(CODE[6]), 
  2491                           ;!
  2492                           ;!    DisplayTemp@tempBuffer	PTR unsigned char  size(1) Largest target is 6
  2493                           ;!		 -> tempBuffer(BANK1[6]), 
  2494                           ;!
  2495                           ;!    DisplayDay@Sunday	PTR unsigned char  size(1) Largest target is 7
  2496                           ;!		 -> STR_7(CODE[7]), 
  2497                           ;!
  2498                           ;!    DisplayDay@Saturday	PTR unsigned char  size(1) Largest target is 9
  2499                           ;!		 -> STR_6(CODE[9]), 
  2500                           ;!
  2501                           ;!    DisplayDay@Friday	PTR unsigned char  size(1) Largest target is 7
  2502                           ;!		 -> STR_5(CODE[7]), 
  2503                           ;!
  2504                           ;!    DisplayDay@Thursday	PTR unsigned char  size(1) Largest target is 9
  2505                           ;!		 -> STR_4(CODE[9]), 
  2506                           ;!
  2507                           ;!    DisplayDay@Wednesday	PTR unsigned char  size(1) Largest target is 10
  2508                           ;!		 -> STR_3(CODE[10]), 
  2509                           ;!
  2510                           ;!    DisplayDay@Tuesday	PTR unsigned char  size(1) Largest target is 8
  2511                           ;!		 -> STR_2(CODE[8]), 
  2512                           ;!
  2513                           ;!    DisplayDay@Monday	PTR unsigned char  size(1) Largest target is 7
  2514                           ;!		 -> STR_1(CODE[7]), 
  2515                           ;!
  2516                           
  2517                           
  2518                           ;!
  2519                           ;!Critical Paths under _main in COMMON
  2520                           ;!
  2521                           ;!    _main->_SwapToHeatingDisplay
  2522                           ;!    _Switch24Hour->___awmod
  2523                           ;!    _SoundAlarm->_SwapToHeatingDisplay
  2524                           ;!    _HeatingControlOff->_SwapToHeatingDisplay
  2525                           ;!    _DisplayTime->_RealTimeClock_get_hours
  2526                           ;!    _DisplayTime->_RealTimeClock_get_minutes
  2527                           ;!    _DisplayTime->_RealTimeClock_get_seconds
  2528                           ;!    _Get_Temp->___lwdiv
  2529                           ;!    ___lwdiv->___lwmod
  2530                           ;!    _Write_Byte->_Delay
  2531                           ;!    _Reset->_Delay
  2532                           ;!    _Read_Byte->_Delay
  2533                           ;!    _RealTimeClock_set_seconds->___int_to_hex
  2534                           ;!    _RealTimeClock_set_minutes->___int_to_hex
  2535                           ;!    _RealTimeClock_set_hours->___int_to_hex
  2536                           ;!    _RealTimeClock_get_seconds->___hex_to_int
  2537                           ;!    _RealTimeClock_set_day_of_week->___int_to_hex
  2538                           ;!    _RealTimeClock_set_burst_time->___int_to_hex
  2539                           ;!    ___int_to_hex->___awmod
  2540                           ;!    _RealTimeClock_init->_RealTimeClock_write_byte
  2541                           ;!    _DateDayScreen->_SwapToHeatingDisplay
  2542                           ;!    _SwapToHeatingDisplay->_Keypad_Scan
  2543                           ;!    _SwapToHeatingDisplay->_LCD_SendString
  2544                           ;!    _LCD_SecondLine->_LCD_Command
  2545                           ;!    _DisplayDay->_RealTimeClock_get_day_of_week
  2546                           ;!    _RealTimeClock_get_day_of_week->___hex_to_int
  2547                           ;!    _DisplayDate->_RealTimeClock_get_day_of_month
  2548                           ;!    _DisplayDate->_RealTimeClock_get_month
  2549                           ;!    _DisplayDate->_RealTimeClock_get_year
  2550                           ;!    _RealTimeClock_get_year->___hex_to_int
  2551                           ;!    _RealTimeClock_get_month->___hex_to_int
  2552                           ;!    _RealTimeClock_get_day_of_month->___hex_to_int
  2553                           ;!    _ChangeTrigger->___awdiv
  2554                           ;!    _LCD_SendString->_LCD_SendData
  2555                           ;!    _Keypad_Scan->_Key_Delay
  2556                           ;!    _CheckTime->_RealTimeClock_get_hours
  2557                           ;!    _CheckTime->_RealTimeClock_get_minutes
  2558                           ;!    _RealTimeClock_get_minutes->___hex_to_int
  2559                           ;!    _RealTimeClock_get_hours->___hex_to_int
  2560                           ;!    ___hex_to_int->___awmod
  2561                           ;!
  2562                           ;!Critical Paths under _main in BANK0
  2563                           ;!
  2564                           ;!    _main->_SetTime
  2565                           ;!    _SoundAlarm->_HeatingControlOff
  2566                           ;!    _HeatingControlOff->_ChangeTrigger
  2567                           ;!    _MainScreen->_DisplayTemp
  2568                           ;!    _DisplayTime->_RealTimeClock_get_hours
  2569                           ;!    _DisplayTime->_RealTimeClock_get_minutes
  2570                           ;!    _DisplayTime->_RealTimeClock_get_seconds
  2571                           ;!    _DisplayTemp->_Get_Temp
  2572                           ;!    _SetTime->_RealTimeClock_get_hours
  2573                           ;!    _SetTime->_RealTimeClock_get_minutes
  2574                           ;!    _SetTime->_RealTimeClock_get_seconds
  2575                           ;!    _RealTimeClock_get_seconds->___hex_to_int
  2576                           ;!    _SetDate->_RealTimeClock_get_day_of_week
  2577                           ;!    _DateDayScreen->_ChangeTrigger
  2578                           ;!    _DisplayDay->_RealTimeClock_get_day_of_week
  2579                           ;!    _RealTimeClock_get_day_of_week->___hex_to_int
  2580                           ;!    _DisplayDate->_RealTimeClock_get_day_of_month
  2581                           ;!    _DisplayDate->_RealTimeClock_get_month
  2582                           ;!    _DisplayDate->_RealTimeClock_get_year
  2583                           ;!    _RealTimeClock_get_year->___hex_to_int
  2584                           ;!    _RealTimeClock_get_month->___hex_to_int
  2585                           ;!    _RealTimeClock_get_day_of_month->___hex_to_int
  2586                           ;!    _CheckTime->_RealTimeClock_get_hours
  2587                           ;!    _CheckTime->_RealTimeClock_get_minutes
  2588                           ;!    _RealTimeClock_get_minutes->___hex_to_int
  2589                           ;!    _RealTimeClock_get_hours->___hex_to_int
  2590                           ;!
  2591                           ;!Critical Paths under _main in BANK1
  2592                           ;!
  2593                           ;!    None.
  2594                           ;!
  2595                           ;!Critical Paths under _main in BANK3
  2596                           ;!
  2597                           ;!    None.
  2598                           ;!
  2599                           ;!Critical Paths under _main in BANK2
  2600                           ;!
  2601                           ;!    None.
  2602                           
  2603 ;;
  2604 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2605 ;;
  2606                           
  2607                           ;!
  2608                           ;!Call Graph Tables:
  2609                           ;!
  2610                           ;! ---------------------------------------------------------------------------------
  2611                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2612                           ;! ---------------------------------------------------------------------------------
  2613                           ;! (0) _main                                                14    14      0  342784
  2614                           ;!                                             40 BANK0     14    14      0
  2615                           ;!                        _Buzzer_Init
  2616                           ;!                      _ChangeTrigger
  2617                           ;!                           _CheckDay
  2618                           ;!                          _CheckTime
  2619                           ;!                      _DateDayScreen
  2620                           ;!                  _HeatingControlOff
  2621                           ;!                        _Init_Keypad
  2622                           ;!                        _Keypad_Scan
  2623                           ;!                        _LCD_Command
  2624                           ;!                           _LCD_Init
  2625                           ;!                         _MainScreen
  2626                           ;!                         _Main_Delay
  2627                           ;!      _RealTimeClock_get_day_of_week
  2628                           ;!                 _RealTimeClock_init
  2629                           ;!       _RealTimeClock_set_burst_time
  2630                           ;!                            _SetDate
  2631                           ;!                            _SetTime
  2632                           ;!                         _SoundAlarm
  2633                           ;!                           _SoundOff
  2634                           ;!               _SwapToHeatingDisplay
  2635                           ;!                       _Switch24Hour
  2636                           ;!                   _Thermometer_Init
  2637                           ;!                             ___wmul
  2638                           ;! ---------------------------------------------------------------------------------
  2639                           ;! (1) _Thermometer_Init                                     0     0      0       0
  2640                           ;! ---------------------------------------------------------------------------------
  2641                           ;! (1) _Switch24Hour                                         4     2      2    4109
  2642                           ;!                                              7 COMMON     4     2      2
  2643                           ;!                        _LCD_Command
  2644                           ;!                       _LCD_SendData
  2645                           ;!                            ___awmod
  2646                           ;! ---------------------------------------------------------------------------------
  2647                           ;! (1) _SoundAlarm                                          10     2      8   98279
  2648                           ;!                                             28 BANK0     10     2      8
  2649                           ;!                      _ChangeTrigger
  2650                           ;!                           _Get_Temp
  2651                           ;!                  _HeatingControlOff
  2652                           ;!                        _Keypad_Scan
  2653                           ;!                        _LCD_Command
  2654                           ;!                     _LCD_SendString
  2655                           ;!                           _SoundOff
  2656                           ;!                            _SoundOn
  2657                           ;!               _SwapToHeatingDisplay
  2658                           ;!                             ___wmul
  2659                           ;! ---------------------------------------------------------------------------------
  2660                           ;! (2) _SoundOn                                              0     0      0       0
  2661                           ;! ---------------------------------------------------------------------------------
  2662                           ;! (2) _HeatingControlOff                                   11     3      8   67874
  2663                           ;!                                             17 BANK0     11     3      8
  2664                           ;!                      _ChangeTrigger
  2665                           ;!                           _Get_Temp
  2666                           ;!                        _Keypad_Scan
  2667                           ;!                        _LCD_Command
  2668                           ;!                     _LCD_SendString
  2669                           ;!                         _MainScreen
  2670                           ;!                         _Main_Delay
  2671                           ;!                           _SoundOff
  2672                           ;!               _SwapToHeatingDisplay
  2673                           ;!                             ___wmul
  2674                           ;! ---------------------------------------------------------------------------------
  2675                           ;! (1) ___wmul                                               6     2      4     700
  2676                           ;!                                              0 COMMON     6     2      4
  2677                           ;! ---------------------------------------------------------------------------------
  2678                           ;! (1) _SoundOff                                             0     0      0       0
  2679                           ;! ---------------------------------------------------------------------------------
  2680                           ;! (3) _MainScreen                                           3     3      0   36704
  2681                           ;!                                              8 BANK0      3     3      0
  2682                           ;!                        _DisplayTemp
  2683                           ;!                        _DisplayTime
  2684                           ;!                     _LCD_SecondLine
  2685                           ;!                     _LCD_SendString
  2686                           ;! ---------------------------------------------------------------------------------
  2687                           ;! (4) _DisplayTime                                          1     1      0   21635
  2688                           ;!                                             12 COMMON     1     1      0
  2689                           ;!                     _LCD_SendString
  2690                           ;!            _RealTimeClock_get_hours
  2691                           ;!          _RealTimeClock_get_minutes
  2692                           ;!          _RealTimeClock_get_seconds
  2693                           ;!                            ___awdiv
  2694                           ;!                            ___awmod
  2695                           ;! ---------------------------------------------------------------------------------
  2696                           ;! (4) _DisplayTemp                                          1     1      0   12229
  2697                           ;!                                              7 BANK0      1     1      0
  2698                           ;!                           _Get_Temp
  2699                           ;!                           _LCD_Busy
  2700                           ;!                       _LCD_SendData
  2701                           ;!                     _LCD_SendString
  2702                           ;! ---------------------------------------------------------------------------------
  2703                           ;! (5) _Get_Temp                                             7     7      0    9358
  2704                           ;!                                              0 BANK0      7     7      0
  2705                           ;!                              _Delay
  2706                           ;!                          _Read_Byte
  2707                           ;!                              _Reset
  2708                           ;!                         _Write_Byte
  2709                           ;!                            ___awdiv
  2710                           ;!                            ___awmod
  2711                           ;!                            ___lwdiv
  2712                           ;!                            ___lwmod
  2713                           ;! ---------------------------------------------------------------------------------
  2714                           ;! (6) ___lwmod                                              6     2      4     311
  2715                           ;!                                              0 COMMON     6     2      4
  2716                           ;! ---------------------------------------------------------------------------------
  2717                           ;! (6) ___lwdiv                                              8     4      4     466
  2718                           ;!                                              6 COMMON     8     4      4
  2719                           ;!                            ___lwmod (ARG)
  2720                           ;! ---------------------------------------------------------------------------------
  2721                           ;! (6) _Write_Byte                                           5     5      0     637
  2722                           ;!                                              4 COMMON     5     5      0
  2723                           ;!                              _Delay
  2724                           ;! ---------------------------------------------------------------------------------
  2725                           ;! (6) _Reset                                                2     2      0     548
  2726                           ;!                                              4 COMMON     2     2      0
  2727                           ;!                              _Delay
  2728                           ;! ---------------------------------------------------------------------------------
  2729                           ;! (6) _Read_Byte                                            3     3      0     594
  2730                           ;!                                              4 COMMON     3     3      0
  2731                           ;!                              _Delay
  2732                           ;! ---------------------------------------------------------------------------------
  2733                           ;! (7) _Delay                                                4     3      1     523
  2734                           ;!                                              0 COMMON     4     3      1
  2735                           ;! ---------------------------------------------------------------------------------
  2736                           ;! (1) _SetTime                                             33    31      2   38987
  2737                           ;!                                              7 BANK0     33    31      2
  2738                           ;!                        _Keypad_Scan
  2739                           ;!                        _LCD_Command
  2740                           ;!                     _LCD_SendString
  2741                           ;!                         _Main_Delay
  2742                           ;!            _RealTimeClock_get_hours
  2743                           ;!          _RealTimeClock_get_minutes
  2744                           ;!          _RealTimeClock_get_seconds
  2745                           ;!            _RealTimeClock_set_hours
  2746                           ;!          _RealTimeClock_set_minutes
  2747                           ;!          _RealTimeClock_set_seconds
  2748                           ;!                            ___awdiv
  2749                           ;!                            ___awmod
  2750                           ;! ---------------------------------------------------------------------------------
  2751                           ;! (2) _RealTimeClock_set_seconds                            2     0      2    4628
  2752                           ;!                                              0 BANK0      2     0      2
  2753                           ;!           _RealTimeClock_write_byte
  2754                           ;!                       ___int_to_hex
  2755                           ;! ---------------------------------------------------------------------------------
  2756                           ;! (2) _RealTimeClock_set_minutes                            2     0      2    4628
  2757                           ;!                                              0 BANK0      2     0      2
  2758                           ;!           _RealTimeClock_write_byte
  2759                           ;!                       ___int_to_hex
  2760                           ;! ---------------------------------------------------------------------------------
  2761                           ;! (2) _RealTimeClock_set_hours                              2     0      2    4628
  2762                           ;!                                              0 BANK0      2     0      2
  2763                           ;!           _RealTimeClock_write_byte
  2764                           ;!                       ___int_to_hex
  2765                           ;! ---------------------------------------------------------------------------------
  2766                           ;! (5) _RealTimeClock_get_seconds                            4     2      2    4265
  2767                           ;!                                             10 COMMON     2     2      0
  2768                           ;!                                              5 BANK0      2     0      2
  2769                           ;!            _RealTimeClock_read_byte
  2770                           ;!           _RealTimeClock_write_byte
  2771                           ;!                       ___hex_to_int
  2772                           ;! ---------------------------------------------------------------------------------
  2773                           ;! (1) _SetDate                                             17    15      2   14120
  2774                           ;!                                              7 BANK0     17    15      2
  2775                           ;!                           _CheckDay
  2776                           ;!                        _Keypad_Scan
  2777                           ;!                        _LCD_Command
  2778                           ;!                     _LCD_SecondLine
  2779                           ;!                     _LCD_SendString
  2780                           ;!                         _Main_Delay
  2781                           ;!      _RealTimeClock_get_day_of_week
  2782                           ;!      _RealTimeClock_set_day_of_week
  2783                           ;! ---------------------------------------------------------------------------------
  2784                           ;! (2) _RealTimeClock_set_day_of_week                        2     0      2    4628
  2785                           ;!                                              0 BANK0      2     0      2
  2786                           ;!           _RealTimeClock_write_byte
  2787                           ;!                       ___int_to_hex
  2788                           ;! ---------------------------------------------------------------------------------
  2789                           ;! (2) _CheckDay                                             0     0      0       0
  2790                           ;! ---------------------------------------------------------------------------------
  2791                           ;! (1) _RealTimeClock_set_burst_time                         5     5      0    4653
  2792                           ;!                                              0 BANK0      5     5      0
  2793                           ;!           _RealTimeClock_write_byte
  2794                           ;!                       ___int_to_hex
  2795                           ;! ---------------------------------------------------------------------------------
  2796                           ;! (3) ___int_to_hex                                         7     5      2    4439
  2797                           ;!                                              7 COMMON     7     5      2
  2798                           ;!                            ___awmod
  2799                           ;! ---------------------------------------------------------------------------------
  2800                           ;! (1) _RealTimeClock_init                                   0     0      0      91
  2801                           ;!           _RealTimeClock_write_byte
  2802                           ;! ---------------------------------------------------------------------------------
  2803                           ;! (1) _LCD_Init                                             0     0      0       0
  2804                           ;! ---------------------------------------------------------------------------------
  2805                           ;! (1) _Init_Keypad                                          0     0      0       0
  2806                           ;! ---------------------------------------------------------------------------------
  2807                           ;! (1) _DateDayScreen                                        5     3      2   46272
  2808                           ;!                                             17 BANK0      5     3      2
  2809                           ;!                      _ChangeTrigger
  2810                           ;!                        _DisplayDate
  2811                           ;!                         _DisplayDay
  2812                           ;!                        _Keypad_Scan
  2813                           ;!                        _LCD_Command
  2814                           ;!                     _LCD_SecondLine
  2815                           ;!                     _LCD_SendString
  2816                           ;!               _SwapToHeatingDisplay
  2817                           ;! ---------------------------------------------------------------------------------
  2818                           ;! (1) _SwapToHeatingDisplay                                 6     4      2    4498
  2819                           ;!                                              8 COMMON     6     4      2
  2820                           ;!                        _Keypad_Scan
  2821                           ;!                        _LCD_Command
  2822                           ;!                     _LCD_SendString
  2823                           ;! ---------------------------------------------------------------------------------
  2824                           ;! (4) _LCD_SecondLine                                       0     0      0      22
  2825                           ;!                        _LCD_Command
  2826                           ;! ---------------------------------------------------------------------------------
  2827                           ;! (2) _DisplayDay                                           8     8      0    7198
  2828                           ;!                                             12 COMMON     1     1      0
  2829                           ;!                                              7 BANK0      7     7      0
  2830                           ;!                     _LCD_SendString
  2831                           ;!      _RealTimeClock_get_day_of_week
  2832                           ;! ---------------------------------------------------------------------------------
  2833                           ;! (2) _RealTimeClock_get_day_of_week                        4     2      2    4265
  2834                           ;!                                             10 COMMON     2     2      0
  2835                           ;!                                              5 BANK0      2     0      2
  2836                           ;!            _RealTimeClock_read_byte
  2837                           ;!           _RealTimeClock_write_byte
  2838                           ;!                       ___hex_to_int
  2839                           ;! ---------------------------------------------------------------------------------
  2840                           ;! (2) _DisplayDate                                          7     7      0   19067
  2841                           ;!                                             12 COMMON     1     1      0
  2842                           ;!                                              7 BANK0      6     6      0
  2843                           ;!     _RealTimeClock_get_day_of_month
  2844                           ;!            _RealTimeClock_get_month
  2845                           ;!             _RealTimeClock_get_year
  2846                           ;!                            ___awdiv
  2847                           ;!                            ___awmod
  2848                           ;! ---------------------------------------------------------------------------------
  2849                           ;! (3) _RealTimeClock_get_year                               4     2      2    4265
  2850                           ;!                                             10 COMMON     2     2      0
  2851                           ;!                                              5 BANK0      2     0      2
  2852                           ;!            _RealTimeClock_read_byte
  2853                           ;!           _RealTimeClock_write_byte
  2854                           ;!                       ___hex_to_int
  2855                           ;! ---------------------------------------------------------------------------------
  2856                           ;! (3) _RealTimeClock_get_month                              4     2      2    4265
  2857                           ;!                                             10 COMMON     2     2      0
  2858                           ;!                                              5 BANK0      2     0      2
  2859                           ;!            _RealTimeClock_read_byte
  2860                           ;!           _RealTimeClock_write_byte
  2861                           ;!                       ___hex_to_int
  2862                           ;! ---------------------------------------------------------------------------------
  2863                           ;! (3) _RealTimeClock_get_day_of_month                       4     2      2    4265
  2864                           ;!                                             10 COMMON     2     2      0
  2865                           ;!                                              5 BANK0      2     0      2
  2866                           ;!            _RealTimeClock_read_byte
  2867                           ;!           _RealTimeClock_write_byte
  2868                           ;!                       ___hex_to_int
  2869                           ;! ---------------------------------------------------------------------------------
  2870                           ;! (3) _ChangeTrigger                                       17    17      0   11152
  2871                           ;!                                              0 BANK0     17    17      0
  2872                           ;!                        _Keypad_Scan
  2873                           ;!                           _LCD_Busy
  2874                           ;!                        _LCD_Command
  2875                           ;!                       _LCD_SendData
  2876                           ;!                     _LCD_SendString
  2877                           ;!                         _Main_Delay
  2878                           ;!                            ___awdiv
  2879                           ;!                            ___awmod
  2880                           ;! ---------------------------------------------------------------------------------
  2881                           ;! (5) ___awdiv                                              9     5      4    2124
  2882                           ;!                                              0 COMMON     9     5      4
  2883                           ;! ---------------------------------------------------------------------------------
  2884                           ;! (3) _Main_Delay                                           7     5      2     548
  2885                           ;!                                              0 COMMON     7     5      2
  2886                           ;! ---------------------------------------------------------------------------------
  2887                           ;! (2) _LCD_SendString                                       7     5      2    2772
  2888                           ;!                                              1 COMMON     7     5      2
  2889                           ;!                       _LCD_SendData
  2890                           ;! ---------------------------------------------------------------------------------
  2891                           ;! (2) _LCD_SendData                                         1     1      0      22
  2892                           ;!                                              0 COMMON     1     1      0
  2893                           ;!                           _LCD_Busy
  2894                           ;! ---------------------------------------------------------------------------------
  2895                           ;! (2) _LCD_Command                                          1     1      0      22
  2896                           ;!                                              0 COMMON     1     1      0
  2897                           ;!                           _LCD_Busy
  2898                           ;! ---------------------------------------------------------------------------------
  2899                           ;! (3) _LCD_Busy                                             0     0      0       0
  2900                           ;! ---------------------------------------------------------------------------------
  2901                           ;! (2) _Keypad_Scan                                          2     0      2    1308
  2902                           ;!                                              6 COMMON     2     0      2
  2903                           ;!                          _Key_Delay
  2904                           ;! ---------------------------------------------------------------------------------
  2905                           ;! (3) _Key_Delay                                            6     4      2    1308
  2906                           ;!                                              0 COMMON     6     4      2
  2907                           ;! ---------------------------------------------------------------------------------
  2908                           ;! (1) _CheckTime                                            1     1      0    8530
  2909                           ;!                                             12 COMMON     1     1      0
  2910                           ;!            _RealTimeClock_get_hours
  2911                           ;!          _RealTimeClock_get_minutes
  2912                           ;! ---------------------------------------------------------------------------------
  2913                           ;! (5) _RealTimeClock_get_minutes                            4     2      2    4265
  2914                           ;!                                             10 COMMON     2     2      0
  2915                           ;!                                              5 BANK0      2     0      2
  2916                           ;!            _RealTimeClock_read_byte
  2917                           ;!           _RealTimeClock_write_byte
  2918                           ;!                       ___hex_to_int
  2919                           ;! ---------------------------------------------------------------------------------
  2920                           ;! (5) _RealTimeClock_get_hours                              4     2      2    4265
  2921                           ;!                                             10 COMMON     2     2      0
  2922                           ;!                                              5 BANK0      2     0      2
  2923                           ;!            _RealTimeClock_read_byte
  2924                           ;!           _RealTimeClock_write_byte
  2925                           ;!                       ___hex_to_int
  2926                           ;! ---------------------------------------------------------------------------------
  2927                           ;! (6) ___hex_to_int                                         8     6      2    4059
  2928                           ;!                                              7 COMMON     3     1      2
  2929                           ;!                                              0 BANK0      5     5      0
  2930                           ;!                            ___awmod
  2931                           ;! ---------------------------------------------------------------------------------
  2932                           ;! (2) ___awmod                                              7     3      4    3944
  2933                           ;!                                              0 COMMON     7     3      4
  2934                           ;! ---------------------------------------------------------------------------------
  2935                           ;! (6) _RealTimeClock_write_byte                             5     5      0      91
  2936                           ;!                                              0 COMMON     5     5      0
  2937                           ;! ---------------------------------------------------------------------------------
  2938                           ;! (6) _RealTimeClock_read_byte                              5     5      0      92
  2939                           ;!                                              0 COMMON     5     5      0
  2940                           ;! ---------------------------------------------------------------------------------
  2941                           ;! (1) _Buzzer_Init                                          0     0      0       0
  2942                           ;! ---------------------------------------------------------------------------------
  2943                           ;! Estimated maximum stack depth 7
  2944                           ;! ---------------------------------------------------------------------------------
  2945                           ;!
  2946                           ;! Call Graph Graphs:
  2947                           ;!
  2948                           ;! _main (ROOT)
  2949                           ;!   _Buzzer_Init
  2950                           ;!   _ChangeTrigger
  2951                           ;!     _Keypad_Scan
  2952                           ;!       _Key_Delay
  2953                           ;!     _LCD_Busy
  2954                           ;!     _LCD_Command
  2955                           ;!       _LCD_Busy
  2956                           ;!     _LCD_SendData
  2957                           ;!       _LCD_Busy
  2958                           ;!     _LCD_SendString
  2959                           ;!       _LCD_SendData
  2960                           ;!         _LCD_Busy
  2961                           ;!     _Main_Delay
  2962                           ;!     ___awdiv
  2963                           ;!     ___awmod
  2964                           ;!   _CheckDay
  2965                           ;!   _CheckTime
  2966                           ;!     _RealTimeClock_get_hours
  2967                           ;!       _RealTimeClock_read_byte
  2968                           ;!       _RealTimeClock_write_byte
  2969                           ;!       ___hex_to_int
  2970                           ;!         ___awmod
  2971                           ;!     _RealTimeClock_get_minutes
  2972                           ;!       _RealTimeClock_read_byte
  2973                           ;!       _RealTimeClock_write_byte
  2974                           ;!       ___hex_to_int
  2975                           ;!         ___awmod
  2976                           ;!   _DateDayScreen
  2977                           ;!     _ChangeTrigger
  2978                           ;!       _Keypad_Scan
  2979                           ;!         _Key_Delay
  2980                           ;!       _LCD_Busy
  2981                           ;!       _LCD_Command
  2982                           ;!         _LCD_Busy
  2983                           ;!       _LCD_SendData
  2984                           ;!         _LCD_Busy
  2985                           ;!       _LCD_SendString
  2986                           ;!         _LCD_SendData
  2987                           ;!           _LCD_Busy
  2988                           ;!       _Main_Delay
  2989                           ;!       ___awdiv
  2990                           ;!       ___awmod
  2991                           ;!     _DisplayDate
  2992                           ;!       _RealTimeClock_get_day_of_month
  2993                           ;!         _RealTimeClock_read_byte
  2994                           ;!         _RealTimeClock_write_byte
  2995                           ;!         ___hex_to_int
  2996                           ;!           ___awmod
  2997                           ;!       _RealTimeClock_get_month
  2998                           ;!         _RealTimeClock_read_byte
  2999                           ;!         _RealTimeClock_write_byte
  3000                           ;!         ___hex_to_int
  3001                           ;!           ___awmod
  3002                           ;!       _RealTimeClock_get_year
  3003                           ;!         _RealTimeClock_read_byte
  3004                           ;!         _RealTimeClock_write_byte
  3005                           ;!         ___hex_to_int
  3006                           ;!           ___awmod
  3007                           ;!       ___awdiv
  3008                           ;!       ___awmod
  3009                           ;!     _DisplayDay
  3010                           ;!       _LCD_SendString
  3011                           ;!         _LCD_SendData
  3012                           ;!           _LCD_Busy
  3013                           ;!       _RealTimeClock_get_day_of_week
  3014                           ;!         _RealTimeClock_read_byte
  3015                           ;!         _RealTimeClock_write_byte
  3016                           ;!         ___hex_to_int
  3017                           ;!           ___awmod
  3018                           ;!     _Keypad_Scan
  3019                           ;!       _Key_Delay
  3020                           ;!     _LCD_Command
  3021                           ;!       _LCD_Busy
  3022                           ;!     _LCD_SecondLine
  3023                           ;!       _LCD_Command
  3024                           ;!         _LCD_Busy
  3025                           ;!     _LCD_SendString
  3026                           ;!       _LCD_SendData
  3027                           ;!         _LCD_Busy
  3028                           ;!     _SwapToHeatingDisplay
  3029                           ;!       _Keypad_Scan
  3030                           ;!         _Key_Delay
  3031                           ;!       _LCD_Command
  3032                           ;!         _LCD_Busy
  3033                           ;!       _LCD_SendString
  3034                           ;!         _LCD_SendData
  3035                           ;!           _LCD_Busy
  3036                           ;!   _HeatingControlOff
  3037                           ;!     _ChangeTrigger
  3038                           ;!       _Keypad_Scan
  3039                           ;!         _Key_Delay
  3040                           ;!       _LCD_Busy
  3041                           ;!       _LCD_Command
  3042                           ;!         _LCD_Busy
  3043                           ;!       _LCD_SendData
  3044                           ;!         _LCD_Busy
  3045                           ;!       _LCD_SendString
  3046                           ;!         _LCD_SendData
  3047                           ;!           _LCD_Busy
  3048                           ;!       _Main_Delay
  3049                           ;!       ___awdiv
  3050                           ;!       ___awmod
  3051                           ;!     _Get_Temp
  3052                           ;!       _Delay
  3053                           ;!       _Read_Byte
  3054                           ;!         _Delay
  3055                           ;!       _Reset
  3056                           ;!         _Delay
  3057                           ;!       _Write_Byte
  3058                           ;!         _Delay
  3059                           ;!       ___awdiv
  3060                           ;!       ___awmod
  3061                           ;!       ___lwdiv
  3062                           ;!         ___lwmod (ARG)
  3063                           ;!       ___lwmod
  3064                           ;!     _Keypad_Scan
  3065                           ;!       _Key_Delay
  3066                           ;!     _LCD_Command
  3067                           ;!       _LCD_Busy
  3068                           ;!     _LCD_SendString
  3069                           ;!       _LCD_SendData
  3070                           ;!         _LCD_Busy
  3071                           ;!     _MainScreen
  3072                           ;!       _DisplayTemp
  3073                           ;!         _Get_Temp
  3074                           ;!           _Delay
  3075                           ;!           _Read_Byte
  3076                           ;!             _Delay
  3077                           ;!           _Reset
  3078                           ;!             _Delay
  3079                           ;!           _Write_Byte
  3080                           ;!             _Delay
  3081                           ;!           ___awdiv
  3082                           ;!           ___awmod
  3083                           ;!           ___lwdiv
  3084                           ;!             ___lwmod (ARG)
  3085                           ;!           ___lwmod
  3086                           ;!         _LCD_Busy
  3087                           ;!         _LCD_SendData
  3088                           ;!           _LCD_Busy
  3089                           ;!         _LCD_SendString
  3090                           ;!           _LCD_SendData
  3091                           ;!             _LCD_Busy
  3092                           ;!       _DisplayTime
  3093                           ;!         _LCD_SendString
  3094                           ;!           _LCD_SendData
  3095                           ;!             _LCD_Busy
  3096                           ;!         _RealTimeClock_get_hours
  3097                           ;!           _RealTimeClock_read_byte
  3098                           ;!           _RealTimeClock_write_byte
  3099                           ;!           ___hex_to_int
  3100                           ;!             ___awmod
  3101                           ;!         _RealTimeClock_get_minutes
  3102                           ;!           _RealTimeClock_read_byte
  3103                           ;!           _RealTimeClock_write_byte
  3104                           ;!           ___hex_to_int
  3105                           ;!             ___awmod
  3106                           ;!         _RealTimeClock_get_seconds
  3107                           ;!           _RealTimeClock_read_byte
  3108                           ;!           _RealTimeClock_write_byte
  3109                           ;!           ___hex_to_int
  3110                           ;!             ___awmod
  3111                           ;!         ___awdiv
  3112                           ;!         ___awmod
  3113                           ;!       _LCD_SecondLine
  3114                           ;!         _LCD_Command
  3115                           ;!           _LCD_Busy
  3116                           ;!       _LCD_SendString
  3117                           ;!         _LCD_SendData
  3118                           ;!           _LCD_Busy
  3119                           ;!     _Main_Delay
  3120                           ;!     _SoundOff
  3121                           ;!     _SwapToHeatingDisplay
  3122                           ;!       _Keypad_Scan
  3123                           ;!         _Key_Delay
  3124                           ;!       _LCD_Command
  3125                           ;!         _LCD_Busy
  3126                           ;!       _LCD_SendString
  3127                           ;!         _LCD_SendData
  3128                           ;!           _LCD_Busy
  3129                           ;!     ___wmul
  3130                           ;!   _Init_Keypad
  3131                           ;!   _Keypad_Scan
  3132                           ;!     _Key_Delay
  3133                           ;!   _LCD_Command
  3134                           ;!     _LCD_Busy
  3135                           ;!   _LCD_Init
  3136                           ;!   _MainScreen
  3137                           ;!     _DisplayTemp
  3138                           ;!       _Get_Temp
  3139                           ;!         _Delay
  3140                           ;!         _Read_Byte
  3141                           ;!           _Delay
  3142                           ;!         _Reset
  3143                           ;!           _Delay
  3144                           ;!         _Write_Byte
  3145                           ;!           _Delay
  3146                           ;!         ___awdiv
  3147                           ;!         ___awmod
  3148                           ;!         ___lwdiv
  3149                           ;!           ___lwmod (ARG)
  3150                           ;!         ___lwmod
  3151                           ;!       _LCD_Busy
  3152                           ;!       _LCD_SendData
  3153                           ;!         _LCD_Busy
  3154                           ;!       _LCD_SendString
  3155                           ;!         _LCD_SendData
  3156                           ;!           _LCD_Busy
  3157                           ;!     _DisplayTime
  3158                           ;!       _LCD_SendString
  3159                           ;!         _LCD_SendData
  3160                           ;!           _LCD_Busy
  3161                           ;!       _RealTimeClock_get_hours
  3162                           ;!         _RealTimeClock_read_byte
  3163                           ;!         _RealTimeClock_write_byte
  3164                           ;!         ___hex_to_int
  3165                           ;!           ___awmod
  3166                           ;!       _RealTimeClock_get_minutes
  3167                           ;!         _RealTimeClock_read_byte
  3168                           ;!         _RealTimeClock_write_byte
  3169                           ;!         ___hex_to_int
  3170                           ;!           ___awmod
  3171                           ;!       _RealTimeClock_get_seconds
  3172                           ;!         _RealTimeClock_read_byte
  3173                           ;!         _RealTimeClock_write_byte
  3174                           ;!         ___hex_to_int
  3175                           ;!           ___awmod
  3176                           ;!       ___awdiv
  3177                           ;!       ___awmod
  3178                           ;!     _LCD_SecondLine
  3179                           ;!       _LCD_Command
  3180                           ;!         _LCD_Busy
  3181                           ;!     _LCD_SendString
  3182                           ;!       _LCD_SendData
  3183                           ;!         _LCD_Busy
  3184                           ;!   _Main_Delay
  3185                           ;!   _RealTimeClock_get_day_of_week
  3186                           ;!     _RealTimeClock_read_byte
  3187                           ;!     _RealTimeClock_write_byte
  3188                           ;!     ___hex_to_int
  3189                           ;!       ___awmod
  3190                           ;!   _RealTimeClock_init
  3191                           ;!     _RealTimeClock_write_byte
  3192                           ;!   _RealTimeClock_set_burst_time
  3193                           ;!     _RealTimeClock_write_byte
  3194                           ;!     ___int_to_hex
  3195                           ;!       ___awmod
  3196                           ;!   _SetDate
  3197                           ;!     _CheckDay
  3198                           ;!     _Keypad_Scan
  3199                           ;!       _Key_Delay
  3200                           ;!     _LCD_Command
  3201                           ;!       _LCD_Busy
  3202                           ;!     _LCD_SecondLine
  3203                           ;!       _LCD_Command
  3204                           ;!         _LCD_Busy
  3205                           ;!     _LCD_SendString
  3206                           ;!       _LCD_SendData
  3207                           ;!         _LCD_Busy
  3208                           ;!     _Main_Delay
  3209                           ;!     _RealTimeClock_get_day_of_week
  3210                           ;!       _RealTimeClock_read_byte
  3211                           ;!       _RealTimeClock_write_byte
  3212                           ;!       ___hex_to_int
  3213                           ;!         ___awmod
  3214                           ;!     _RealTimeClock_set_day_of_week
  3215                           ;!       _RealTimeClock_write_byte
  3216                           ;!       ___int_to_hex
  3217                           ;!         ___awmod
  3218                           ;!   _SetTime
  3219                           ;!     _Keypad_Scan
  3220                           ;!       _Key_Delay
  3221                           ;!     _LCD_Command
  3222                           ;!       _LCD_Busy
  3223                           ;!     _LCD_SendString
  3224                           ;!       _LCD_SendData
  3225                           ;!         _LCD_Busy
  3226                           ;!     _Main_Delay
  3227                           ;!     _RealTimeClock_get_hours
  3228                           ;!       _RealTimeClock_read_byte
  3229                           ;!       _RealTimeClock_write_byte
  3230                           ;!       ___hex_to_int
  3231                           ;!         ___awmod
  3232                           ;!     _RealTimeClock_get_minutes
  3233                           ;!       _RealTimeClock_read_byte
  3234                           ;!       _RealTimeClock_write_byte
  3235                           ;!       ___hex_to_int
  3236                           ;!         ___awmod
  3237                           ;!     _RealTimeClock_get_seconds
  3238                           ;!       _RealTimeClock_read_byte
  3239                           ;!       _RealTimeClock_write_byte
  3240                           ;!       ___hex_to_int
  3241                           ;!         ___awmod
  3242                           ;!     _RealTimeClock_set_hours
  3243                           ;!       _RealTimeClock_write_byte
  3244                           ;!       ___int_to_hex
  3245                           ;!         ___awmod
  3246                           ;!     _RealTimeClock_set_minutes
  3247                           ;!       _RealTimeClock_write_byte
  3248                           ;!       ___int_to_hex
  3249                           ;!         ___awmod
  3250                           ;!     _RealTimeClock_set_seconds
  3251                           ;!       _RealTimeClock_write_byte
  3252                           ;!       ___int_to_hex
  3253                           ;!         ___awmod
  3254                           ;!     ___awdiv
  3255                           ;!     ___awmod
  3256                           ;!   _SoundAlarm
  3257                           ;!     _ChangeTrigger
  3258                           ;!       _Keypad_Scan
  3259                           ;!         _Key_Delay
  3260                           ;!       _LCD_Busy
  3261                           ;!       _LCD_Command
  3262                           ;!         _LCD_Busy
  3263                           ;!       _LCD_SendData
  3264                           ;!         _LCD_Busy
  3265                           ;!       _LCD_SendString
  3266                           ;!         _LCD_SendData
  3267                           ;!           _LCD_Busy
  3268                           ;!       _Main_Delay
  3269                           ;!       ___awdiv
  3270                           ;!       ___awmod
  3271                           ;!     _Get_Temp
  3272                           ;!       _Delay
  3273                           ;!       _Read_Byte
  3274                           ;!         _Delay
  3275                           ;!       _Reset
  3276                           ;!         _Delay
  3277                           ;!       _Write_Byte
  3278                           ;!         _Delay
  3279                           ;!       ___awdiv
  3280                           ;!       ___awmod
  3281                           ;!       ___lwdiv
  3282                           ;!         ___lwmod (ARG)
  3283                           ;!       ___lwmod
  3284                           ;!     _HeatingControlOff
  3285                           ;!       _ChangeTrigger
  3286                           ;!         _Keypad_Scan
  3287                           ;!           _Key_Delay
  3288                           ;!         _LCD_Busy
  3289                           ;!         _LCD_Command
  3290                           ;!           _LCD_Busy
  3291                           ;!         _LCD_SendData
  3292                           ;!           _LCD_Busy
  3293                           ;!         _LCD_SendString
  3294                           ;!           _LCD_SendData
  3295                           ;!             _LCD_Busy
  3296                           ;!         _Main_Delay
  3297                           ;!         ___awdiv
  3298                           ;!         ___awmod
  3299                           ;!       _Get_Temp
  3300                           ;!         _Delay
  3301                           ;!         _Read_Byte
  3302                           ;!           _Delay
  3303                           ;!         _Reset
  3304                           ;!           _Delay
  3305                           ;!         _Write_Byte
  3306                           ;!           _Delay
  3307                           ;!         ___awdiv
  3308                           ;!         ___awmod
  3309                           ;!         ___lwdiv
  3310                           ;!           ___lwmod (ARG)
  3311                           ;!         ___lwmod
  3312                           ;!       _Keypad_Scan
  3313                           ;!         _Key_Delay
  3314                           ;!       _LCD_Command
  3315                           ;!         _LCD_Busy
  3316                           ;!       _LCD_SendString
  3317                           ;!         _LCD_SendData
  3318                           ;!           _LCD_Busy
  3319                           ;!       _MainScreen
  3320                           ;!         _DisplayTemp
  3321                           ;!           _Get_Temp
  3322                           ;!             _Delay
  3323                           ;!             _Read_Byte
  3324                           ;!               _Delay
  3325                           ;!             _Reset
  3326                           ;!               _Delay
  3327                           ;!             _Write_Byte
  3328                           ;!               _Delay
  3329                           ;!             ___awdiv
  3330                           ;!             ___awmod
  3331                           ;!             ___lwdiv
  3332                           ;!               ___lwmod (ARG)
  3333                           ;!             ___lwmod
  3334                           ;!           _LCD_Busy
  3335                           ;!           _LCD_SendData
  3336                           ;!             _LCD_Busy
  3337                           ;!           _LCD_SendString
  3338                           ;!             _LCD_SendData
  3339                           ;!               _LCD_Busy
  3340                           ;!         _DisplayTime
  3341                           ;!           _LCD_SendString
  3342                           ;!             _LCD_SendData
  3343                           ;!               _LCD_Busy
  3344                           ;!           _RealTimeClock_get_hours
  3345                           ;!             _RealTimeClock_read_byte
  3346                           ;!             _RealTimeClock_write_byte
  3347                           ;!             ___hex_to_int
  3348                           ;!               ___awmod
  3349                           ;!           _RealTimeClock_get_minutes
  3350                           ;!             _RealTimeClock_read_byte
  3351                           ;!             _RealTimeClock_write_byte
  3352                           ;!             ___hex_to_int
  3353                           ;!               ___awmod
  3354                           ;!           _RealTimeClock_get_seconds
  3355                           ;!             _RealTimeClock_read_byte
  3356                           ;!             _RealTimeClock_write_byte
  3357                           ;!             ___hex_to_int
  3358                           ;!               ___awmod
  3359                           ;!           ___awdiv
  3360                           ;!           ___awmod
  3361                           ;!         _LCD_SecondLine
  3362                           ;!           _LCD_Command
  3363                           ;!             _LCD_Busy
  3364                           ;!         _LCD_SendString
  3365                           ;!           _LCD_SendData
  3366                           ;!             _LCD_Busy
  3367                           ;!       _Main_Delay
  3368                           ;!       _SoundOff
  3369                           ;!       _SwapToHeatingDisplay
  3370                           ;!         _Keypad_Scan
  3371                           ;!           _Key_Delay
  3372                           ;!         _LCD_Command
  3373                           ;!           _LCD_Busy
  3374                           ;!         _LCD_SendString
  3375                           ;!           _LCD_SendData
  3376                           ;!             _LCD_Busy
  3377                           ;!       ___wmul
  3378                           ;!     _Keypad_Scan
  3379                           ;!       _Key_Delay
  3380                           ;!     _LCD_Command
  3381                           ;!       _LCD_Busy
  3382                           ;!     _LCD_SendString
  3383                           ;!       _LCD_SendData
  3384                           ;!         _LCD_Busy
  3385                           ;!     _SoundOff
  3386                           ;!     _SoundOn
  3387                           ;!     _SwapToHeatingDisplay
  3388                           ;!       _Keypad_Scan
  3389                           ;!         _Key_Delay
  3390                           ;!       _LCD_Command
  3391                           ;!         _LCD_Busy
  3392                           ;!       _LCD_SendString
  3393                           ;!         _LCD_SendData
  3394                           ;!           _LCD_Busy
  3395                           ;!     ___wmul
  3396                           ;!   _SoundOff
  3397                           ;!   _SwapToHeatingDisplay
  3398                           ;!     _Keypad_Scan
  3399                           ;!       _Key_Delay
  3400                           ;!     _LCD_Command
  3401                           ;!       _LCD_Busy
  3402                           ;!     _LCD_SendString
  3403                           ;!       _LCD_SendData
  3404                           ;!         _LCD_Busy
  3405                           ;!   _Switch24Hour
  3406                           ;!     _LCD_Command
  3407                           ;!       _LCD_Busy
  3408                           ;!     _LCD_SendData
  3409                           ;!       _LCD_Busy
  3410                           ;!     ___awmod
  3411                           ;!   _Thermometer_Init
  3412                           ;!   ___wmul
  3413                           ;!
  3414                           
  3415                           ;! Address spaces:
  3416                           
  3417                           ;!Name               Size   Autos  Total    Cost      Usage
  3418                           ;!BANK3               60      0      1E       9       31.3%
  3419                           ;!BITBANK3            60      0       0       8        0.0%
  3420                           ;!SFR3                 0      0       0       4        0.0%
  3421                           ;!BITSFR3              0      0       0       4        0.0%
  3422                           ;!BANK2               60      0       0      11        0.0%
  3423                           ;!BITBANK2            60      0       0      10        0.0%
  3424                           ;!SFR2                 0      0       0       5        0.0%
  3425                           ;!BITSFR2              0      0       0       5        0.0%
  3426                           ;!BANK1               50      0      50       7      100.0%
  3427                           ;!BITBANK1            50      0       0       6        0.0%
  3428                           ;!SFR1                 0      0       0       2        0.0%
  3429                           ;!BITSFR1              0      0       0       2        0.0%
  3430                           ;!BANK0               50     36      50       5      100.0%
  3431                           ;!BITBANK0            50      0       0       4        0.0%
  3432                           ;!SFR0                 0      0       0       1        0.0%
  3433                           ;!BITSFR0              0      0       0       1        0.0%
  3434                           ;!COMMON               E      E       E       1      100.0%
  3435                           ;!BITCOMMON            E      0       0       0        0.0%
  3436                           ;!CODE                 0      0       0       0        0.0%
  3437                           ;!DATA                 0      0      CC      12        0.0%
  3438                           ;!ABS                  0      0      CC       3        0.0%
  3439                           ;!NULL                 0      0       0       0        0.0%
  3440                           ;!STACK                0      0       0       2        0.0%
  3441                           ;!EEDATA             100      0       0       0        0.0%
  3442                           
  3443                           	global	_main
  3444                           
  3445 ;; *************** function _main *****************
  3446 ;; Defined at:
  3447 ;;		line 760 in file "main.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;  Key             2   52[BANK0 ] int 
  3452 ;;  temp3           2   50[BANK0 ] int 
  3453 ;;  temp2           2   48[BANK0 ] int 
  3454 ;;  temp            2   46[BANK0 ] int 
  3455 ;;  tempdectenth    2   44[BANK0 ] int 
  3456 ;;  tempdec         2   42[BANK0 ] int 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : B00/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3466 ;;      Params:         0       0       0       0       0
  3467 ;;      Locals:         0      12       0       0       0
  3468 ;;      Temps:          0       2       0       0       0
  3469 ;;      Totals:         0      14       0       0       0
  3470 ;;Total ram usage:       14 bytes
  3471 ;; Hardware stack levels required when called:    7
  3472 ;; This function calls:
  3473 ;;		_Buzzer_Init
  3474 ;;		_ChangeTrigger
  3475 ;;		_CheckDay
  3476 ;;		_CheckTime
  3477 ;;		_DateDayScreen
  3478 ;;		_HeatingControlOff
  3479 ;;		_Init_Keypad
  3480 ;;		_Keypad_Scan
  3481 ;;		_LCD_Command
  3482 ;;		_LCD_Init
  3483 ;;		_MainScreen
  3484 ;;		_Main_Delay
  3485 ;;		_RealTimeClock_get_day_of_week
  3486 ;;		_RealTimeClock_init
  3487 ;;		_RealTimeClock_set_burst_time
  3488 ;;		_SetDate
  3489 ;;		_SetTime
  3490 ;;		_SoundAlarm
  3491 ;;		_SoundOff
  3492 ;;		_SwapToHeatingDisplay
  3493 ;;		_Switch24Hour
  3494 ;;		_Thermometer_Init
  3495 ;;		___wmul
  3496 ;; This function is called by:
  3497 ;;		Startup code after reset
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  3501                           	file	"main.c"
  3502                           	line	760
  3503                           global __pmaintext
  3504                           __pmaintext:	;psect for function _main
  3505  02A6                     psect	maintext
  3506                           	file	"main.c"
  3507                           	line	760
  3508                           	global	__size_of_main
  3509                           	__size_of_main	equ	__end_of_main-_main
  3510  0232                     	
  3511                           _main:	
  3512  02A6                     ;incstack = 0
  3513                           	opt	stack 1
  3514                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3515                           	line	763
  3516                           	
  3517                           l4047:	
  3518  02A6                     ;main.c: 763:     SoundOff();
  3519                           	fcall	_LCD_Init
  3520  02A6  160A  158A  25E1  120A  118A  	line	764
  3521                           ;main.c: 764: 
  3522                           	fcall	_Init_Keypad
  3523  02AB  120A  158A  2003  120A  118A  	line	765
  3524                           ;main.c: 765:     day_of_week = RealTimeClock_get_day_of_week();
  3525                           	fcall	_Thermometer_Init
  3526  02B0  160A  158A  25E8  120A  118A  	line	766
  3527                           	
  3528                           l4049:	
  3529  02B5                     ;main.c: 766:     CheckDay();
  3530                           	fcall	_RealTimeClock_init
  3531  02B5  160A  158A  26CE  120A  118A  	line	767
  3532                           	
  3533                           l4051:	
  3534  02BA                     ;main.c: 767:     CheckTime();
  3535                           	movlw	(low(_start_date|((0x1)<<8)))&0ffh
  3536  02BA  3090               	fcall	_RealTimeClock_set_burst_time
  3537  02BB  160A  118A  250E  120A  118A  	line	770
  3538                           	
  3539                           l4053:	
  3540  02C0                     ;main.c: 770:     {
  3541                           	fcall	_Buzzer_Init
  3542  02C0  160A  158A  25CE  120A  118A  	line	771
  3543                           	
  3544                           l4055:	
  3545  02C5                     ;main.c: 771:         day_of_week = RealTimeClock_get_day_of_week();
  3546                           	bcf	status, 5	;RP0=0, select bank0
  3547  02C5  1283               	bcf	status, 6	;RP1=0, select bank0
  3548  02C6  1303               	clrf	(main@Key)
  3549  02C7  01D4               	clrf	(main@Key+1)
  3550  02C8  01D5               	line	772
  3551                           	
  3552                           l4057:	
  3553  02C9                     ;main.c: 772: 
  3554                           	bsf	status, 5	;RP0=1, select bank1
  3555  02C9  1683               	bcf	status, 6	;RP1=0, select bank1
  3556  02CA  1303               	clrf	(_DisableAlarm)^080h
  3557  02CB  01EE               	clrf	(_DisableAlarm+1)^080h
  3558  02CC  01EF               	line	773
  3559                           	
  3560                           l4059:	
  3561  02CD                     ;main.c: 773:         LCD_Command(0x03);
  3562                           	movlw	01h
  3563  02CD  3001               	movwf	(_isWeekDay)^080h
  3564  02CE  00EA               	movlw	0
  3565  02CF  3000               	movwf	((_isWeekDay)^080h)+1
  3566  02D0  00EB               	line	775
  3567                           	
  3568                           l4061:	
  3569  02D1                     ;main.c: 774: ;main.c: 775: 
  3570                           	movlw	01h
  3571  02D1  3001               	bcf	status, 5	;RP0=0, select bank0
  3572  02D2  1283               	bcf	status, 6	;RP1=0, select bank0
  3573  02D3  1303               	movwf	(_IsHeatingOn)
  3574  02D4  00E0               	movlw	0
  3575  02D5  3000               	movwf	((_IsHeatingOn))+1
  3576  02D6  00E1               	line	776
  3577                           	
  3578                           l4063:	
  3579  02D7                     ;main.c: 776:         temp = tempBuffer[0] - 48;
  3580                           	movlw	01h
  3581  02D7  3001               	movwf	(_is24Hour)
  3582  02D8  00DE               	movlw	0
  3583  02D9  3000               	movwf	((_is24Hour))+1
  3584  02DA  00DF               	line	778
  3585                           	
  3586                           l4065:	
  3587  02DB                     ;main.c: 778:         temp3 = (temp * 10) + temp2;
  3588                           	movlw	low(0Ch)
  3589  02DB  300C               	fcall	_LCD_Command
  3590  02DC  160A  158A  25EF  120A  118A  	line	780
  3591                           	
  3592                           l4067:	
  3593  02E1                     ;main.c: 780: 
  3594                           	movlw	low(01h)
  3595  02E1  3001               	fcall	_LCD_Command
  3596  02E2  160A  158A  25EF  120A  118A  	line	782
  3597                           	
  3598                           l4069:	
  3599  02E7                     ;main.c: 782:         tempdec = tempBuffer[2];
  3600                           	movlw	low(03h)
  3601  02E7  3003               	fcall	_LCD_Command
  3602  02E8  160A  158A  25EF  120A  118A  	line	784
  3603                           	
  3604                           l4071:	
  3605  02ED                     ;main.c: 784:         previousTemp[1] = tempdec;
  3606                           	movlw	low(038h)
  3607  02ED  3038               	fcall	_LCD_Command
  3608  02EE  160A  158A  25EF  120A  118A  	line	785
  3609                           	
  3610                           l4073:	
  3611  02F3                     ;main.c: 785:         previousTemp[2] = tempdectenth;
  3612                           	fcall	_SoundOff
  3613  02F3  160A  158A  25D2  120A  118A  	line	787
  3614                           	
  3615                           l4075:	
  3616  02F8                     ;main.c: 787:         Key = Keypad_Scan();
  3617                           	fcall	_RealTimeClock_get_day_of_week
  3618  02F8  160A  158A  2796  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3619  02FD  1283               	bcf	status, 6	;RP1=0, select bank0
  3620  02FE  1303               	movf	(1+(?_RealTimeClock_get_day_of_week)),w
  3621  02FF  0826               	bsf	status, 5	;RP0=1, select bank1
  3622  0300  1683               	bcf	status, 6	;RP1=0, select bank1
  3623  0301  1303               	movwf	(_day_of_week+1)^080h
  3624  0302  00ED               	bcf	status, 5	;RP0=0, select bank0
  3625  0303  1283               	bcf	status, 6	;RP1=0, select bank0
  3626  0304  1303               	movf	(0+(?_RealTimeClock_get_day_of_week)),w
  3627  0305  0825               	bsf	status, 5	;RP0=1, select bank1
  3628  0306  1683               	bcf	status, 6	;RP1=0, select bank1
  3629  0307  1303               	movwf	(_day_of_week)^080h
  3630  0308  00EC               	line	788
  3631                           	
  3632                           l4077:	
  3633  0309                     ;main.c: 788:         MainScreen();
  3634                           	fcall	_CheckDay
  3635  0309  160A  118A  229D  120A  118A  	line	789
  3636                           	
  3637                           l4079:	
  3638  030E                     ;main.c: 789: 
  3639                           	fcall	_CheckTime
  3640  030E  120A  158A  21A2  120A  118A  	line	790
  3641                           	
  3642                           l4081:	
  3643  0313                     ;main.c: 790: 
  3644                           	movlw	032h
  3645  0313  3032               	movwf	(Main_Delay@k)
  3646  0314  00F0               	movlw	0
  3647  0315  3000               	movwf	((Main_Delay@k))+1
  3648  0316  00F1               	fcall	_Main_Delay
  3649  0317  160A  118A  225F  120A  118A  	goto	l4083
  3650  031C  2B1D               	line	791
  3651                           ;main.c: 791:         temp = tempBuffer[0] - 48;
  3652                           	
  3653                           l286:	
  3654  031D                     	line	793
  3655                           	
  3656                           l4083:	
  3657  031D                     ;main.c: 792:         temp2 = tempBuffer[1] - 48;;main.c: 793:         temp3 = (temp * 1
                                 0) + temp2;
  3658                           	fcall	_RealTimeClock_get_day_of_week
  3659  031D  160A  158A  2796  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3660  0322  1283               	bcf	status, 6	;RP1=0, select bank0
  3661  0323  1303               	movf	(1+(?_RealTimeClock_get_day_of_week)),w
  3662  0324  0826               	bsf	status, 5	;RP0=1, select bank1
  3663  0325  1683               	bcf	status, 6	;RP1=0, select bank1
  3664  0326  1303               	movwf	(_day_of_week+1)^080h
  3665  0327  00ED               	bcf	status, 5	;RP0=0, select bank0
  3666  0328  1283               	bcf	status, 6	;RP1=0, select bank0
  3667  0329  1303               	movf	(0+(?_RealTimeClock_get_day_of_week)),w
  3668  032A  0825               	bsf	status, 5	;RP0=1, select bank1
  3669  032B  1683               	bcf	status, 6	;RP1=0, select bank1
  3670  032C  1303               	movwf	(_day_of_week)^080h
  3671  032D  00EC               	line	795
  3672                           	
  3673                           l4085:	
  3674  032E                     ;main.c: 795: 
  3675                           	movlw	low(03h)
  3676  032E  3003               	fcall	_LCD_Command
  3677  032F  160A  158A  25EF  120A  118A  	line	798
  3678                           	
  3679                           l4087:	
  3680  0334                     ;main.c: 798: 
  3681                           	bsf	status, 5	;RP0=1, select bank1
  3682  0334  1683               	bcf	status, 6	;RP1=0, select bank1
  3683  0335  1303               	movf	(_tempBuffer)^080h,w
  3684  0336  0855               	addlw	low(-48)
  3685  0337  3ED0               	bcf	status, 5	;RP0=0, select bank0
  3686  0338  1283               	bcf	status, 6	;RP1=0, select bank0
  3687  0339  1303               	movwf	(main@temp)
  3688  033A  00CE               	movlw	high(-48)
  3689  033B  30FF               	skipnc
  3690  033C  1803               	movlw	(high(-48)+1)&0ffh
  3691  033D  3000               	movwf	((main@temp))+1
  3692  033E  00CF               	line	799
  3693                           	
  3694                           l4089:	
  3695  033F                     ;main.c: 799:         if (Key == 1) {
  3696                           	bsf	status, 5	;RP0=1, select bank1
  3697  033F  1683               	bcf	status, 6	;RP1=0, select bank1
  3698  0340  1303               	movf	0+(_tempBuffer)^080h+01h,w
  3699  0341  0856               	addlw	low(-48)
  3700  0342  3ED0               	bcf	status, 5	;RP0=0, select bank0
  3701  0343  1283               	bcf	status, 6	;RP1=0, select bank0
  3702  0344  1303               	movwf	(main@temp2)
  3703  0345  00D0               	movlw	high(-48)
  3704  0346  30FF               	skipnc
  3705  0347  1803               	movlw	(high(-48)+1)&0ffh
  3706  0348  3000               	movwf	((main@temp2))+1
  3707  0349  00D1               	line	800
  3708                           	
  3709                           l4091:	
  3710  034A                     ;main.c: 800:             ChangeTrigger(Key);
  3711                           	movf	(main@temp+1),w
  3712  034A  084F               	movwf	(___wmul@multiplier+1)
  3713  034B  00F1               	movf	(main@temp),w
  3714  034C  084E               	movwf	(___wmul@multiplier)
  3715  034D  00F0               	movlw	0Ah
  3716  034E  300A               	movwf	(___wmul@multiplicand)
  3717  034F  00F2               	movlw	0
  3718  0350  3000               	movwf	((___wmul@multiplicand))+1
  3719  0351  00F3               	fcall	___wmul
  3720  0352  160A  118A  20E9  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3721  0357  1283               	bcf	status, 6	;RP1=0, select bank0
  3722  0358  1303               	movf	(main@temp2),w
  3723  0359  0850               	addwf	(0+(?___wmul)),w
  3724  035A  0770               	movwf	(main@temp3)
  3725  035B  00D2               	movf	(main@temp2+1),w
  3726  035C  0851               	skipnc
  3727  035D  1803               	incf	(main@temp2+1),w
  3728  035E  0A51               	addwf	(1+(?___wmul)),w
  3729  035F  0771               	movwf	1+(main@temp3)
  3730  0360  00D3               	line	801
  3731                           ;main.c: 801:         }
  3732                           	movf	(main@temp3+1),w
  3733  0361  0853               	bsf	status, 5	;RP0=1, select bank1
  3734  0362  1683               	bcf	status, 6	;RP1=0, select bank1
  3735  0363  1303               	movwf	(_previousTemp+1)^080h
  3736  0364  00DC               	bcf	status, 5	;RP0=0, select bank0
  3737  0365  1283               	bcf	status, 6	;RP1=0, select bank0
  3738  0366  1303               	movf	(main@temp3),w
  3739  0367  0852               	bsf	status, 5	;RP0=1, select bank1
  3740  0368  1683               	bcf	status, 6	;RP1=0, select bank1
  3741  0369  1303               	movwf	(_previousTemp)^080h
  3742  036A  00DB               	line	804
  3743                           ;main.c: 804:             DateDayScreen(Key);
  3744                           	movf	0+(_tempBuffer)^080h+02h,w
  3745  036B  0857               	bcf	status, 5	;RP0=0, select bank0
  3746  036C  1283               	bcf	status, 6	;RP1=0, select bank0
  3747  036D  1303               	movwf	(??_main+0)+0
  3748  036E  00C8               	clrf	(??_main+0)+0+1
  3749  036F  01C9               	movf	0+(??_main+0)+0,w
  3750  0370  0848               	movwf	(main@tempdec)
  3751  0371  00CA               	movf	1+(??_main+0)+0,w
  3752  0372  0849               	movwf	(main@tempdec+1)
  3753  0373  00CB               	line	805
  3754                           ;main.c: 805:         }
  3755                           	bsf	status, 5	;RP0=1, select bank1
  3756  0374  1683               	bcf	status, 6	;RP1=0, select bank1
  3757  0375  1303               	movf	0+(_tempBuffer)^080h+03h,w
  3758  0376  0858               	bcf	status, 5	;RP0=0, select bank0
  3759  0377  1283               	bcf	status, 6	;RP1=0, select bank0
  3760  0378  1303               	movwf	(??_main+0)+0
  3761  0379  00C8               	clrf	(??_main+0)+0+1
  3762  037A  01C9               	movf	0+(??_main+0)+0,w
  3763  037B  0848               	movwf	(main@tempdectenth)
  3764  037C  00CC               	movf	1+(??_main+0)+0,w
  3765  037D  0849               	movwf	(main@tempdectenth+1)
  3766  037E  00CD               	line	806
  3767                           ;main.c: 806: 
  3768                           	movf	(main@tempdec+1),w
  3769  037F  084B               	bsf	status, 5	;RP0=1, select bank1
  3770  0380  1683               	bcf	status, 6	;RP1=0, select bank1
  3771  0381  1303               	movwf	1+(_previousTemp)^080h+02h
  3772  0382  00DE               	bcf	status, 5	;RP0=0, select bank0
  3773  0383  1283               	bcf	status, 6	;RP1=0, select bank0
  3774  0384  1303               	movf	(main@tempdec),w
  3775  0385  084A               	bsf	status, 5	;RP0=1, select bank1
  3776  0386  1683               	bcf	status, 6	;RP1=0, select bank1
  3777  0387  1303               	movwf	0+(_previousTemp)^080h+02h
  3778  0388  00DD               	line	807
  3779                           ;main.c: 807:         if (Key == 7) {
  3780                           	bcf	status, 5	;RP0=0, select bank0
  3781  0389  1283               	bcf	status, 6	;RP1=0, select bank0
  3782  038A  1303               	movf	(main@tempdectenth+1),w
  3783  038B  084D               	bsf	status, 5	;RP0=1, select bank1
  3784  038C  1683               	bcf	status, 6	;RP1=0, select bank1
  3785  038D  1303               	movwf	1+(_previousTemp)^080h+04h
  3786  038E  00E0               	bcf	status, 5	;RP0=0, select bank0
  3787  038F  1283               	bcf	status, 6	;RP1=0, select bank0
  3788  0390  1303               	movf	(main@tempdectenth),w
  3789  0391  084C               	bsf	status, 5	;RP0=1, select bank1
  3790  0392  1683               	bcf	status, 6	;RP1=0, select bank1
  3791  0393  1303               	movwf	0+(_previousTemp)^080h+04h
  3792  0394  00DF               	line	809
  3793                           	
  3794                           l4093:	
  3795  0395                     ;main.c: 809:         }
  3796                           	fcall	_Keypad_Scan
  3797  0395  120A  118A  20DF  120A  118A  	movf	(1+(?_Keypad_Scan)),w
  3798  039A  0877               	bcf	status, 5	;RP0=0, select bank0
  3799  039B  1283               	bcf	status, 6	;RP1=0, select bank0
  3800  039C  1303               	movwf	(main@Key+1)
  3801  039D  00D5               	movf	(0+(?_Keypad_Scan)),w
  3802  039E  0876               	movwf	(main@Key)
  3803  039F  00D4               	line	810
  3804                           	
  3805                           l4095:	
  3806  03A0                     ;main.c: 810: 
  3807                           	fcall	_MainScreen
  3808  03A0  160A  118A  2143  120A  118A  	line	813
  3809                           	
  3810                           l4097:	
  3811  03A5                     ;main.c: 813:         }
  3812                           	bsf	status, 5	;RP0=1, select bank1
  3813  03A5  1683               	bcf	status, 6	;RP1=0, select bank1
  3814  03A6  1303               	movf	(_tempBuffer)^080h,w
  3815  03A7  0855               	addlw	low(-48)
  3816  03A8  3ED0               	bcf	status, 5	;RP0=0, select bank0
  3817  03A9  1283               	bcf	status, 6	;RP1=0, select bank0
  3818  03AA  1303               	movwf	(main@temp)
  3819  03AB  00CE               	movlw	high(-48)
  3820  03AC  30FF               	skipnc
  3821  03AD  1803               	movlw	(high(-48)+1)&0ffh
  3822  03AE  3000               	movwf	((main@temp))+1
  3823  03AF  00CF               	line	814
  3824                           	
  3825                           l4099:	
  3826  03B0                     ;main.c: 814: 
  3827                           	bsf	status, 5	;RP0=1, select bank1
  3828  03B0  1683               	bcf	status, 6	;RP1=0, select bank1
  3829  03B1  1303               	movf	0+(_tempBuffer)^080h+01h,w
  3830  03B2  0856               	addlw	low(-48)
  3831  03B3  3ED0               	bcf	status, 5	;RP0=0, select bank0
  3832  03B4  1283               	bcf	status, 6	;RP1=0, select bank0
  3833  03B5  1303               	movwf	(main@temp2)
  3834  03B6  00D0               	movlw	high(-48)
  3835  03B7  30FF               	skipnc
  3836  03B8  1803               	movlw	(high(-48)+1)&0ffh
  3837  03B9  3000               	movwf	((main@temp2))+1
  3838  03BA  00D1               	line	815
  3839                           	
  3840                           l4101:	
  3841  03BB                     ;main.c: 815:         if(Key == 8)
  3842                           	movf	(main@temp+1),w
  3843  03BB  084F               	movwf	(___wmul@multiplier+1)
  3844  03BC  00F1               	movf	(main@temp),w
  3845  03BD  084E               	movwf	(___wmul@multiplier)
  3846  03BE  00F0               	movlw	0Ah
  3847  03BF  300A               	movwf	(___wmul@multiplicand)
  3848  03C0  00F2               	movlw	0
  3849  03C1  3000               	movwf	((___wmul@multiplicand))+1
  3850  03C2  00F3               	fcall	___wmul
  3851  03C3  160A  118A  20E9  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3852  03C8  1283               	bcf	status, 6	;RP1=0, select bank0
  3853  03C9  1303               	movf	(main@temp2),w
  3854  03CA  0850               	addwf	(0+(?___wmul)),w
  3855  03CB  0770               	movwf	(main@temp3)
  3856  03CC  00D2               	movf	(main@temp2+1),w
  3857  03CD  0851               	skipnc
  3858  03CE  1803               	incf	(main@temp2+1),w
  3859  03CF  0A51               	addwf	(1+(?___wmul)),w
  3860  03D0  0771               	movwf	1+(main@temp3)
  3861  03D1  00D3               	line	818
  3862                           	
  3863                           l4103:	
  3864  03D2                     ;main.c: 818:         }
  3865                           	bsf	status, 5	;RP0=1, select bank1
  3866  03D2  1683               	bcf	status, 6	;RP1=0, select bank1
  3867  03D3  1303               	movf	0+(_tempBuffer)^080h+03h,w
  3868  03D4  0858               	bcf	status, 5	;RP0=0, select bank0
  3869  03D5  1283               	bcf	status, 6	;RP1=0, select bank0
  3870  03D6  1303               	movwf	(??_main+0)+0
  3871  03D7  00C8               	clrf	(??_main+0)+0+1
  3872  03D8  01C9               	movf	0+(??_main+0)+0,w
  3873  03D9  0848               	movwf	(main@tempdec)
  3874  03DA  00CA               	movf	1+(??_main+0)+0,w
  3875  03DB  0849               	movwf	(main@tempdec+1)
  3876  03DC  00CB               	line	819
  3877                           	
  3878                           l4105:	
  3879  03DD                     ;main.c: 819: 
  3880                           	bsf	status, 5	;RP0=1, select bank1
  3881  03DD  1683               	bcf	status, 6	;RP1=0, select bank1
  3882  03DE  1303               	movf	0+(_tempBuffer)^080h+04h,w
  3883  03DF  0859               	bcf	status, 5	;RP0=0, select bank0
  3884  03E0  1283               	bcf	status, 6	;RP1=0, select bank0
  3885  03E1  1303               	movwf	(??_main+0)+0
  3886  03E2  00C8               	clrf	(??_main+0)+0+1
  3887  03E3  01C9               	movf	0+(??_main+0)+0,w
  3888  03E4  0848               	movwf	(main@tempdectenth)
  3889  03E5  00CC               	movf	1+(??_main+0)+0,w
  3890  03E6  0849               	movwf	(main@tempdectenth+1)
  3891  03E7  00CD               	line	821
  3892                           	
  3893                           l4107:	
  3894  03E8                     ;main.c: 821:         {
  3895                           		decf	((main@Key)),w
  3896  03E8  0354               iorwf	((main@Key+1)),w
  3897  03E9  0455               	btfss	status,2
  3898  03EA  1D03               	goto	u3301
  3899  03EB  2BED               	goto	u3300
  3900  03EC  2BEE               u3301:
  3901  03ED                     	goto	l4111
  3902  03ED  2BF5               u3300:
  3903  03EE                     	line	822
  3904                           	
  3905                           l4109:	
  3906  03EE                     ;main.c: 822:             SetDate(Key);
  3907                           	movf	(main@Key),w
  3908  03EE  0854               	fcall	_ChangeTrigger
  3909  03EF  120A  158A  2374  120A  118A  	goto	l4111
  3910  03F4  2BF5               	line	823
  3911                           ;main.c: 823:         }
  3912                           	
  3913                           l287:	
  3914  03F5                     	line	825
  3915                           	
  3916                           l4111:	
  3917  03F5                     ;main.c: 825:         if (temp3 >= triggerTemp[0]) {
  3918                           		movlw	6
  3919  03F5  3006               	bcf	status, 5	;RP0=0, select bank0
  3920  03F6  1283               	bcf	status, 6	;RP1=0, select bank0
  3921  03F7  1303               	xorwf	((main@Key)),w
  3922  03F8  0654               iorwf	((main@Key+1)),w
  3923  03F9  0455               	btfss	status,2
  3924  03FA  1D03               	goto	u3311
  3925  03FB  2BFD               	goto	u3310
  3926  03FC  2BFE               u3311:
  3927  03FD                     	goto	l4115
  3928  03FD  2C08               u3310:
  3929  03FE                     	line	826
  3930                           	
  3931                           l4113:	
  3932  03FE                     ;main.c: 826:             IsHeatingOn = 0;
  3933                           	movf	(main@Key+1),w
  3934  03FE  0855               	movwf	(DateDayScreen@Key+1)
  3935  03FF  00B2               	movf	(main@Key),w
  3936  0400  0854               	movwf	(DateDayScreen@Key)
  3937  0401  00B1               	fcall	_DateDayScreen
  3938  0402  160A  118A  26A4  120A  118A  	goto	l4115
  3939  0407  2C08               	line	827
  3940                           ;main.c: 827:             HeatingControlOff(Key, temp, temp2, temp3);
  3941                           	
  3942                           l288:	
  3943  0408                     	line	829
  3944                           	
  3945                           l4115:	
  3946  0408                     ;main.c: 829:         if (temp3 <= triggerTemp[0] && temp3 < previousTemp[0] && IsHeatin
                                 gOn == 1 && DisableAlarm == 0) {
  3947                           		movlw	7
  3948  0408  3007               	bcf	status, 5	;RP0=0, select bank0
  3949  0409  1283               	bcf	status, 6	;RP1=0, select bank0
  3950  040A  1303               	xorwf	((main@Key)),w
  3951  040B  0654               iorwf	((main@Key+1)),w
  3952  040C  0455               	btfss	status,2
  3953  040D  1D03               	goto	u3321
  3954  040E  2C10               	goto	u3320
  3955  040F  2C11               u3321:
  3956  0410                     	goto	l4119
  3957  0410  2C1B               u3320:
  3958  0411                     	line	830
  3959                           	
  3960                           l4117:	
  3961  0411                     ;main.c: 830:             SoundAlarm(Key, temp, temp2, temp3);
  3962                           	movf	(main@Key+1),w
  3963  0411  0855               	movwf	(SwapToHeatingDisplay@Key+1)
  3964  0412  00F9               	movf	(main@Key),w
  3965  0413  0854               	movwf	(SwapToHeatingDisplay@Key)
  3966  0414  00F8               	fcall	_SwapToHeatingDisplay
  3967  0415  160A  118A  2631  120A  118A  	goto	l4119
  3968  041A  2C1B               	line	831
  3969                           ;main.c: 831:         }
  3970                           	
  3971                           l289:	
  3972  041B                     	line	833
  3973                           	
  3974                           l4119:	
  3975  041B                     ;main.c: 833:         CheckTime();
  3976                           		movlw	9
  3977  041B  3009               	bcf	status, 5	;RP0=0, select bank0
  3978  041C  1283               	bcf	status, 6	;RP1=0, select bank0
  3979  041D  1303               	xorwf	((main@Key)),w
  3980  041E  0654               iorwf	((main@Key+1)),w
  3981  041F  0455               	btfss	status,2
  3982  0420  1D03               	goto	u3331
  3983  0421  2C23               	goto	u3330
  3984  0422  2C24               u3331:
  3985  0423                     	goto	l4123
  3986  0423  2C2E               u3330:
  3987  0424                     	line	834
  3988                           	
  3989                           l4121:	
  3990  0424                     ;main.c: 834:     }
  3991                           	movf	(main@Key+1),w
  3992  0424  0855               	movwf	(SetTime@Key+1)
  3993  0425  00A8               	movf	(main@Key),w
  3994  0426  0854               	movwf	(SetTime@Key)
  3995  0427  00A7               	fcall	_SetTime
  3996  0428  120A  118A  24D8  120A  118A  	goto	l4123
  3997  042D  2C2E               	line	835
  3998                           ;main.c: 835: }
  3999                           	
  4000                           l290:	
  4001  042E                     	line	837
  4002                           	
  4003                           l4123:	
  4004  042E                     		movlw	8
  4005  042E  3008               	bcf	status, 5	;RP0=0, select bank0
  4006  042F  1283               	bcf	status, 6	;RP1=0, select bank0
  4007  0430  1303               	xorwf	((main@Key)),w
  4008  0431  0654               iorwf	((main@Key+1)),w
  4009  0432  0455               	btfss	status,2
  4010  0433  1D03               	goto	u3341
  4011  0434  2C36               	goto	u3340
  4012  0435  2C37               u3341:
  4013  0436                     	goto	l4127
  4014  0436  2C41               u3340:
  4015  0437                     	line	839
  4016                           	
  4017                           l4125:	
  4018  0437                     	movf	(main@Key+1),w
  4019  0437  0855               	movwf	(Switch24Hour@Key+1)
  4020  0438  00F8               	movf	(main@Key),w
  4021  0439  0854               	movwf	(Switch24Hour@Key)
  4022  043A  00F7               	fcall	_Switch24Hour
  4023  043B  160A  118A  2176  120A  118A  	goto	l4127
  4024  0440  2C41               	line	840
  4025                           	
  4026                           l291:	
  4027  0441                     	line	842
  4028                           	
  4029                           l4127:	
  4030  0441                     		movlw	13
  4031  0441  300D               	bcf	status, 5	;RP0=0, select bank0
  4032  0442  1283               	bcf	status, 6	;RP1=0, select bank0
  4033  0443  1303               	xorwf	((main@Key)),w
  4034  0444  0654               iorwf	((main@Key+1)),w
  4035  0445  0455               	btfss	status,2
  4036  0446  1D03               	goto	u3351
  4037  0447  2C49               	goto	u3350
  4038  0448  2C4A               u3351:
  4039  0449                     	goto	l4131
  4040  0449  2C54               u3350:
  4041  044A                     	line	844
  4042                           	
  4043                           l4129:	
  4044  044A                     	movf	(main@Key+1),w
  4045  044A  0855               	movwf	(SetDate@Key+1)
  4046  044B  00A8               	movf	(main@Key),w
  4047  044C  0854               	movwf	(SetDate@Key)
  4048  044D  00A7               	fcall	_SetDate
  4049  044E  120A  158A  24E1  120A  118A  	goto	l4131
  4050  0453  2C54               	line	845
  4051                           	
  4052                           l292:	
  4053  0454                     	line	847
  4054                           	
  4055                           l4131:	
  4056  0454                     	bcf	status, 5	;RP0=0, select bank0
  4057  0454  1283               	bcf	status, 6	;RP1=0, select bank0
  4058  0455  1303               	movf	(main@temp3+1),w
  4059  0456  0853               	xorlw	80h
  4060  0457  3A80               	movwf	(??_main+0)+0
  4061  0458  00C8               	movf	(_triggerTemp+1),w
  4062  0459  086D               	xorlw	80h
  4063  045A  3A80               	subwf	(??_main+0)+0,w
  4064  045B  0248               	skipz
  4065  045C  1D03               	goto	u3365
  4066  045D  2C60               	movf	(_triggerTemp),w
  4067  045E  086C               	subwf	(main@temp3),w
  4068  045F  0252               u3365:
  4069  0460                     
  4070                           	skipc
  4071  0460  1C03               	goto	u3361
  4072  0461  2C63               	goto	u3360
  4073  0462  2C64               u3361:
  4074  0463                     	goto	l4137
  4075  0463  2C7E               u3360:
  4076  0464                     	line	848
  4077                           	
  4078                           l4133:	
  4079  0464                     	bcf	status, 5	;RP0=0, select bank0
  4080  0464  1283               	bcf	status, 6	;RP1=0, select bank0
  4081  0465  1303               	clrf	(_IsHeatingOn)
  4082  0466  01E0               	clrf	(_IsHeatingOn+1)
  4083  0467  01E1               	line	849
  4084                           	
  4085                           l4135:	
  4086  0468                     	movf	(main@Key+1),w
  4087  0468  0855               	movwf	(HeatingControlOff@Key+1)
  4088  0469  00B2               	movf	(main@Key),w
  4089  046A  0854               	movwf	(HeatingControlOff@Key)
  4090  046B  00B1               	movf	(main@temp+1),w
  4091  046C  084F               	movwf	(HeatingControlOff@temp+1)
  4092  046D  00B4               	movf	(main@temp),w
  4093  046E  084E               	movwf	(HeatingControlOff@temp)
  4094  046F  00B3               	movf	(main@temp2+1),w
  4095  0470  0851               	movwf	(HeatingControlOff@temp2+1)
  4096  0471  00B6               	movf	(main@temp2),w
  4097  0472  0850               	movwf	(HeatingControlOff@temp2)
  4098  0473  00B5               	movf	(main@temp3+1),w
  4099  0474  0853               	movwf	(HeatingControlOff@temp3+1)
  4100  0475  00B8               	movf	(main@temp3),w
  4101  0476  0852               	movwf	(HeatingControlOff@temp3)
  4102  0477  00B7               	fcall	_HeatingControlOff
  4103  0478  120A  158A  228A  120A  118A  	goto	l4137
  4104  047D  2C7E               	line	850
  4105                           	
  4106                           l293:	
  4107  047E                     	line	851
  4108                           	
  4109                           l4137:	
  4110  047E                     	bcf	status, 5	;RP0=0, select bank0
  4111  047E  1283               	bcf	status, 6	;RP1=0, select bank0
  4112  047F  1303               	movf	(_triggerTemp+1),w
  4113  0480  086D               	xorlw	80h
  4114  0481  3A80               	movwf	(??_main+0)+0
  4115  0482  00C8               	movf	(main@temp3+1),w
  4116  0483  0853               	xorlw	80h
  4117  0484  3A80               	subwf	(??_main+0)+0,w
  4118  0485  0248               	skipz
  4119  0486  1D03               	goto	u3375
  4120  0487  2C8A               	movf	(main@temp3),w
  4121  0488  0852               	subwf	(_triggerTemp),w
  4122  0489  026C               u3375:
  4123  048A                     
  4124                           	skipc
  4125  048A  1C03               	goto	u3371
  4126  048B  2C8D               	goto	u3370
  4127  048C  2C8E               u3371:
  4128  048D                     	goto	l4147
  4129  048D  2CCE               u3370:
  4130  048E                     	
  4131                           l4139:	
  4132  048E                     	bcf	status, 5	;RP0=0, select bank0
  4133  048E  1283               	bcf	status, 6	;RP1=0, select bank0
  4134  048F  1303               	movf	(main@temp3+1),w
  4135  0490  0853               	xorlw	80h
  4136  0491  3A80               	movwf	(??_main+0)+0
  4137  0492  00C8               	bsf	status, 5	;RP0=1, select bank1
  4138  0493  1683               	bcf	status, 6	;RP1=0, select bank1
  4139  0494  1303               	movf	(_previousTemp+1)^080h,w
  4140  0495  085C               	xorlw	80h
  4141  0496  3A80               	bcf	status, 5	;RP0=0, select bank0
  4142  0497  1283               	bcf	status, 6	;RP1=0, select bank0
  4143  0498  1303               	subwf	(??_main+0)+0,w
  4144  0499  0248               	skipz
  4145  049A  1D03               	goto	u3385
  4146  049B  2CA2               	bsf	status, 5	;RP0=1, select bank1
  4147  049C  1683               	bcf	status, 6	;RP1=0, select bank1
  4148  049D  1303               	movf	(_previousTemp)^080h,w
  4149  049E  085B               	bcf	status, 5	;RP0=0, select bank0
  4150  049F  1283               	bcf	status, 6	;RP1=0, select bank0
  4151  04A0  1303               	subwf	(main@temp3),w
  4152  04A1  0252               u3385:
  4153  04A2                     
  4154                           	skipnc
  4155  04A2  1803               	goto	u3381
  4156  04A3  2CA5               	goto	u3380
  4157  04A4  2CA6               u3381:
  4158  04A5                     	goto	l4147
  4159  04A5  2CCE               u3380:
  4160  04A6                     	
  4161                           l4141:	
  4162  04A6                     	bcf	status, 5	;RP0=0, select bank0
  4163  04A6  1283               	bcf	status, 6	;RP1=0, select bank0
  4164  04A7  1303               		decf	((_IsHeatingOn)),w
  4165  04A8  0360               iorwf	((_IsHeatingOn+1)),w
  4166  04A9  0461               	btfss	status,2
  4167  04AA  1D03               	goto	u3391
  4168  04AB  2CAD               	goto	u3390
  4169  04AC  2CAE               u3391:
  4170  04AD                     	goto	l4147
  4171  04AD  2CCE               u3390:
  4172  04AE                     	
  4173                           l4143:	
  4174  04AE                     	bsf	status, 5	;RP0=1, select bank1
  4175  04AE  1683               	bcf	status, 6	;RP1=0, select bank1
  4176  04AF  1303               	movf	((_DisableAlarm)^080h),w
  4177  04B0  086E               iorwf	((_DisableAlarm+1)^080h),w
  4178  04B1  046F               	btfss	status,2
  4179  04B2  1D03               	goto	u3401
  4180  04B3  2CB5               	goto	u3400
  4181  04B4  2CB6               u3401:
  4182  04B5                     	goto	l4147
  4183  04B5  2CCE               u3400:
  4184  04B6                     	line	852
  4185                           	
  4186                           l4145:	
  4187  04B6                     	bcf	status, 5	;RP0=0, select bank0
  4188  04B6  1283               	bcf	status, 6	;RP1=0, select bank0
  4189  04B7  1303               	movf	(main@Key+1),w
  4190  04B8  0855               	movwf	(SoundAlarm@Key+1)
  4191  04B9  00BD               	movf	(main@Key),w
  4192  04BA  0854               	movwf	(SoundAlarm@Key)
  4193  04BB  00BC               	movf	(main@temp+1),w
  4194  04BC  084F               	movwf	(SoundAlarm@temp+1)
  4195  04BD  00BF               	movf	(main@temp),w
  4196  04BE  084E               	movwf	(SoundAlarm@temp)
  4197  04BF  00BE               	movf	(main@temp2+1),w
  4198  04C0  0851               	movwf	(SoundAlarm@temp2+1)
  4199  04C1  00C1               	movf	(main@temp2),w
  4200  04C2  0850               	movwf	(SoundAlarm@temp2)
  4201  04C3  00C0               	movf	(main@temp3+1),w
  4202  04C4  0853               	movwf	(SoundAlarm@temp3+1)
  4203  04C5  00C3               	movf	(main@temp3),w
  4204  04C6  0852               	movwf	(SoundAlarm@temp3)
  4205  04C7  00C2               	fcall	_SoundAlarm
  4206  04C8  120A  118A  200C  120A  118A  	goto	l4147
  4207  04CD  2CCE               	line	853
  4208                           	
  4209                           l294:	
  4210  04CE                     	line	855
  4211                           	
  4212                           l4147:	
  4213  04CE                     	fcall	_CheckTime
  4214  04CE  120A  158A  21A2  120A  118A  	goto	l4083
  4215  04D3  2B1D               	line	856
  4216                           	
  4217                           l295:	
  4218  04D4                     	goto	l4083
  4219  04D4  2B1D               	
  4220                           l296:	
  4221  04D5                     	line	857
  4222                           	
  4223                           l297:	
  4224  04D5                     	global	start
  4225                           	ljmp	start
  4226  04D5  120A  118A  2800   	opt stack 0
  4227                           GLOBAL	__end_of_main
  4228                           	__end_of_main:
  4229  04D8                     	signat	_main,89
  4230                           	global	_Thermometer_Init
  4231                           
  4232 ;; *************** function _Thermometer_Init *****************
  4233 ;; Defined at:
  4234 ;;		line 37 in file "Thermometer.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;		None
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4248 ;;      Params:         0       0       0       0       0
  4249 ;;      Locals:         0       0       0       0       0
  4250 ;;      Temps:          0       0       0       0       0
  4251 ;;      Totals:         0       0       0       0       0
  4252 ;;Total ram usage:        0 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_main
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4261                           	file	"Thermometer.c"
  4262                           	line	37
  4263                           global __ptext1
  4264                           __ptext1:	;psect for function _Thermometer_Init
  4265  1DE8                     psect	text1
  4266                           	file	"Thermometer.c"
  4267                           	line	37
  4268                           	global	__size_of_Thermometer_Init
  4269                           	__size_of_Thermometer_Init	equ	__end_of_Thermometer_Init-_Thermometer_Init
  4270  0007                     	
  4271                           _Thermometer_Init:	
  4272  1DE8                     ;incstack = 0
  4273                           	opt	stack 7
  4274                           ; Regs used in _Thermometer_Init: [wreg+status,2]
  4275                           	line	39
  4276                           	
  4277                           l4003:	
  4278  1DE8                     ;Thermometer.c: 39:   ADCON1=0X07;
  4279                           	movlw	low(07h)
  4280  1DE8  3007               	bsf	status, 5	;RP0=1, select bank1
  4281  1DE9  1683               	bcf	status, 6	;RP1=0, select bank1
  4282  1DEA  1303               	movwf	(159)^080h	;volatile
  4283  1DEB  009F               	line	40
  4284                           	
  4285                           l4005:	
  4286  1DEC                     ;Thermometer.c: 40:   TRISA=0X00;
  4287                           	clrf	(133)^080h	;volatile
  4288  1DEC  0185               	line	41
  4289                           	
  4290                           l4007:	
  4291  1DED                     ;Thermometer.c: 41:   TRISD=0X00;
  4292                           	clrf	(136)^080h	;volatile
  4293  1DED  0188               	line	42
  4294                           	
  4295                           l580:	
  4296  1DEE                     	return
  4297  1DEE  0008               	opt stack 0
  4298                           GLOBAL	__end_of_Thermometer_Init
  4299                           	__end_of_Thermometer_Init:
  4300  1DEF                     	signat	_Thermometer_Init,89
  4301                           	global	_Switch24Hour
  4302                           
  4303 ;; *************** function _Switch24Hour *****************
  4304 ;; Defined at:
  4305 ;;		line 402 in file "main.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;  Key             2    7[COMMON] int 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  c               1   10[COMMON] unsigned char 
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2, status,0, pclath, cstack
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4319 ;;      Params:         2       0       0       0       0
  4320 ;;      Locals:         1       0       0       0       0
  4321 ;;      Temps:          1       0       0       0       0
  4322 ;;      Totals:         4       0       0       0       0
  4323 ;;Total ram usage:        4 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; Hardware stack levels required when called:    2
  4326 ;; This function calls:
  4327 ;;		_LCD_Command
  4328 ;;		_LCD_SendData
  4329 ;;		___awmod
  4330 ;; This function is called by:
  4331 ;;		_main
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4335                           	file	"main.c"
  4336                           	line	402
  4337                           global __ptext2
  4338                           __ptext2:	;psect for function _Switch24Hour
  4339  1176                     psect	text2
  4340                           	file	"main.c"
  4341                           	line	402
  4342                           	global	__size_of_Switch24Hour
  4343                           	__size_of_Switch24Hour	equ	__end_of_Switch24Hour-_Switch24Hour
  4344  0036                     	
  4345                           _Switch24Hour:	
  4346  1176                     ;incstack = 0
  4347                           	opt	stack 5
  4348                           ; Regs used in _Switch24Hour: [wreg+status,2+status,0+pclath+cstack]
  4349                           	line	404
  4350                           	
  4351                           l3709:	
  4352  1176                     ;main.c: 402:     while(1);main.c: 403:     {;main.c: 404:         Key = Keypad_Scan();

  4353                           	movlw	low(01h)
  4354  1176  3001               	fcall	_LCD_Command
  4355  1177  160A  158A  25EF  160A  118A  	line	405
  4356                           ;main.c: 405:         LCD_Command(0x03);
  4357                           	movlw	0Ah
  4358  117C  300A               	movwf	(___awmod@divisor)
  4359  117D  00F0               	movlw	0
  4360  117E  3000               	movwf	((___awmod@divisor))+1
  4361  117F  00F1               	bcf	status, 5	;RP0=0, select bank0
  4362  1180  1283               	bcf	status, 6	;RP1=0, select bank0
  4363  1181  1303               	movf	(_is24Hour+1),w
  4364  1182  085F               	movwf	(___awmod@dividend+1)
  4365  1183  00F3               	movf	(_is24Hour),w
  4366  1184  085E               	movwf	(___awmod@dividend)
  4367  1185  00F2               	fcall	___awmod
  4368  1186  160A  118A  255D  160A  118A  	movf	(0+(?___awmod)),w
  4369  118B  0870               	movwf	(??_Switch24Hour+0)+0
  4370  118C  00F9               	movf	(??_Switch24Hour+0)+0,w
  4371  118D  0879               	movwf	(Switch24Hour@c)
  4372  118E  00FA               	line	406
  4373                           ;main.c: 406:         LCD_SendString(date);
  4374                           	
  4375                           l176:	
  4376  118F                     	line	408
  4377                           ;main.c: 407:         DisplayDate();;main.c: 408:         LCD_SecondLine();
  4378                           	movlw	low(03h)
  4379  118F  3003               	fcall	_LCD_Command
  4380  1190  160A  158A  25EF  160A  118A  	line	409
  4381                           ;main.c: 409:         LCD_SendString(day);
  4382                           	movf	(Switch24Hour@c),w
  4383  1195  087A               	fcall	_LCD_SendData
  4384  1196  160A  158A  25FE  160A  118A  	line	410
  4385                           	
  4386                           l3711:	
  4387  119B                     ;main.c: 410:         DisplayDay();
  4388                           		movlw	8
  4389  119B  3008               	xorwf	((Switch24Hour@Key)),w
  4390  119C  0677               iorwf	((Switch24Hour@Key+1)),w
  4391  119D  0478               	btfss	status,2
  4392  119E  1D03               	goto	u2991
  4393  119F  29A1               	goto	u2990
  4394  11A0  29A2               u2991:
  4395  11A1                     	goto	l176
  4396  11A1  298F               u2990:
  4397  11A2                     	line	412
  4398                           	
  4399                           l3713:	
  4400  11A2                     ;main.c: 411:         if (Key == 1);main.c: 412:         {
  4401                           	movlw	low(01h)
  4402  11A2  3001               	fcall	_LCD_Command
  4403  11A3  160A  158A  25EF  160A  118A  	line	413
  4404                           ;main.c: 413:             ChangeTrigger(Key);
  4405                           	goto	l180
  4406  11A8  29AB               	line	414
  4407                           ;main.c: 414:         }
  4408                           	
  4409                           l177:	
  4410  11A9                     	goto	l176
  4411  11A9  298F               	line	415
  4412                           ;main.c: 415:         if (Key == 6)
  4413                           	
  4414                           l179:	
  4415  11AA                     	goto	l176
  4416  11AA  298F               	
  4417                           l178:	
  4418  11AB                     	line	416
  4419                           	
  4420                           l180:	
  4421  11AB                     	return
  4422  11AB  0008               	opt stack 0
  4423                           GLOBAL	__end_of_Switch24Hour
  4424                           	__end_of_Switch24Hour:
  4425  11AC                     	signat	_Switch24Hour,4217
  4426                           	global	_SoundAlarm
  4427                           
  4428 ;; *************** function _SoundAlarm *****************
  4429 ;; Defined at:
  4430 ;;		line 355 in file "main.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  Key             2   28[BANK0 ] int 
  4433 ;;  temp            2   30[BANK0 ] int 
  4434 ;;  temp2           2   32[BANK0 ] int 
  4435 ;;  temp3           2   34[BANK0 ] int 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  Alarm           1   37[BANK0 ] PTR unsigned char 
  4438 ;;		 -> STR_17(16), 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  1    wreg      void 
  4441 ;; Registers used:
  4442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4448 ;;      Params:         0       8       0       0       0
  4449 ;;      Locals:         0       1       0       0       0
  4450 ;;      Temps:          0       1       0       0       0
  4451 ;;      Totals:         0      10       0       0       0
  4452 ;;Total ram usage:       10 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    6
  4455 ;; This function calls:
  4456 ;;		_ChangeTrigger
  4457 ;;		_Get_Temp
  4458 ;;		_HeatingControlOff
  4459 ;;		_Keypad_Scan
  4460 ;;		_LCD_Command
  4461 ;;		_LCD_SendString
  4462 ;;		_SoundOff
  4463 ;;		_SoundOn
  4464 ;;		_SwapToHeatingDisplay
  4465 ;;		___wmul
  4466 ;; This function is called by:
  4467 ;;		_main
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4471                           	line	355
  4472                           global __ptext3
  4473                           __ptext3:	;psect for function _SoundAlarm
  4474  000C                     psect	text3
  4475                           	file	"main.c"
  4476                           	line	355
  4477                           	global	__size_of_SoundAlarm
  4478                           	__size_of_SoundAlarm	equ	__end_of_SoundAlarm-_SoundAlarm
  4479  00D3                     	
  4480                           _SoundAlarm:	
  4481  000C                     ;incstack = 0
  4482                           	opt	stack 1
  4483                           ; Regs used in _SoundAlarm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4484                           	line	358
  4485                           	
  4486                           l3667:	
  4487  000C                     ;main.c: 355:         };main.c: 356: ;main.c: 358:         {
  4488                           	movlw	(low((((STR_17)-__stringbase)|8000h)))&0ffh
  4489  000C  3001               	bcf	status, 5	;RP0=0, select bank0
  4490  000D  1283               	bcf	status, 6	;RP1=0, select bank0
  4491  000E  1303               	movwf	(??_SoundAlarm+0)+0
  4492  000F  00C4               	movf	(??_SoundAlarm+0)+0,w
  4493  0010  0844               	movwf	(SoundAlarm@Alarm)
  4494  0011  00C5               	line	359
  4495                           	
  4496                           l3669:	
  4497  0012                     ;main.c: 359:             SwapToHeatingDisplay(Key);
  4498                           	bsf	status, 5	;RP0=1, select bank1
  4499  0012  1683               	bcf	status, 6	;RP1=0, select bank1
  4500  0013  1303               	clrf	(_DisableAlarm)^080h
  4501  0014  01EE               	clrf	(_DisableAlarm+1)^080h
  4502  0015  01EF               	line	360
  4503                           	
  4504                           l3671:	
  4505  0016                     ;main.c: 360:         }
  4506                           	movlw	low(01h)
  4507  0016  3001               	fcall	_LCD_Command
  4508  0017  160A  158A  25EF  120A  118A  	goto	l3673
  4509  001C  281D               	line	361
  4510                           ;main.c: 361: 
  4511                           	
  4512                           l166:	
  4513  001D                     	line	363
  4514                           	
  4515                           l3673:	
  4516  001D                     ;main.c: 362:         if(Key == 5);main.c: 363:         {
  4517                           	movlw	low(03h)
  4518  001D  3003               	fcall	_LCD_Command
  4519  001E  160A  158A  25EF  120A  118A  	line	364
  4520                           	
  4521                           l3675:	
  4522  0023                     ;main.c: 364:             DisableAlarm = 1;
  4523                           	bcf	status, 5	;RP0=0, select bank0
  4524  0023  1283               	bcf	status, 6	;RP1=0, select bank0
  4525  0024  1303               		movf	(SoundAlarm@Alarm),w
  4526  0025  0845               	movwf	(LCD_SendString@string)
  4527  0026  00F1               	movlw	0
  4528  0027  3000               	btfss	status,2
  4529  0028  1D03               	movlw	080h
  4530  0029  3080               	movwf	(LCD_SendString@string+1)
  4531  002A  00F2               
  4532                           	fcall	_LCD_SendString
  4533  002B  160A  118A  2361  120A  118A  	line	366
  4534                           	
  4535                           l3677:	
  4536  0030                     ;main.c: 366:             LCD_Command(0x01);
  4537                           	fcall	_SoundOn
  4538  0030  160A  158A  25D6  120A  118A  	line	368
  4539                           	
  4540                           l3679:	
  4541  0035                     ;main.c: 368:         }
  4542                           	movlw	(low(_tempBuffer|((0x0)<<8)))&0ffh
  4543  0035  30D5               	fcall	_Get_Temp
  4544  0036  120A  158A  2670  120A  118A  	line	369
  4545                           	
  4546                           l3681:	
  4547  003B                     ;main.c: 369: 
  4548                           	bsf	status, 5	;RP0=1, select bank1
  4549  003B  1683               	bcf	status, 6	;RP1=0, select bank1
  4550  003C  1303               	movf	(_tempBuffer)^080h,w
  4551  003D  0855               	addlw	low(-48)
  4552  003E  3ED0               	bcf	status, 5	;RP0=0, select bank0
  4553  003F  1283               	bcf	status, 6	;RP1=0, select bank0
  4554  0040  1303               	movwf	(SoundAlarm@temp)
  4555  0041  00BE               	movlw	high(-48)
  4556  0042  30FF               	skipnc
  4557  0043  1803               	movlw	(high(-48)+1)&0ffh
  4558  0044  3000               	movwf	((SoundAlarm@temp))+1
  4559  0045  00BF               	line	370
  4560                           	
  4561                           l3683:	
  4562  0046                     ;main.c: 370:         if(temp3 > triggerTemp[0])
  4563                           	bsf	status, 5	;RP0=1, select bank1
  4564  0046  1683               	bcf	status, 6	;RP1=0, select bank1
  4565  0047  1303               	movf	0+(_tempBuffer)^080h+01h,w
  4566  0048  0856               	addlw	low(-48)
  4567  0049  3ED0               	bcf	status, 5	;RP0=0, select bank0
  4568  004A  1283               	bcf	status, 6	;RP1=0, select bank0
  4569  004B  1303               	movwf	(SoundAlarm@temp2)
  4570  004C  00C0               	movlw	high(-48)
  4571  004D  30FF               	skipnc
  4572  004E  1803               	movlw	(high(-48)+1)&0ffh
  4573  004F  3000               	movwf	((SoundAlarm@temp2))+1
  4574  0050  00C1               	line	371
  4575                           	
  4576                           l3685:	
  4577  0051                     ;main.c: 371:         {
  4578                           	movf	(SoundAlarm@temp+1),w
  4579  0051  083F               	movwf	(___wmul@multiplier+1)
  4580  0052  00F1               	movf	(SoundAlarm@temp),w
  4581  0053  083E               	movwf	(___wmul@multiplier)
  4582  0054  00F0               	movlw	0Ah
  4583  0055  300A               	movwf	(___wmul@multiplicand)
  4584  0056  00F2               	movlw	0
  4585  0057  3000               	movwf	((___wmul@multiplicand))+1
  4586  0058  00F3               	fcall	___wmul
  4587  0059  160A  118A  20E9  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4588  005E  1283               	bcf	status, 6	;RP1=0, select bank0
  4589  005F  1303               	movf	(SoundAlarm@temp2),w
  4590  0060  0840               	addwf	(0+(?___wmul)),w
  4591  0061  0770               	movwf	(SoundAlarm@temp3)
  4592  0062  00C2               	movf	(SoundAlarm@temp2+1),w
  4593  0063  0841               	skipnc
  4594  0064  1803               	incf	(SoundAlarm@temp2+1),w
  4595  0065  0A41               	addwf	(1+(?___wmul)),w
  4596  0066  0771               	movwf	1+(SoundAlarm@temp3)
  4597  0067  00C3               	line	372
  4598                           	
  4599                           l3687:	
  4600  0068                     ;main.c: 372:             LCD_Command(0x01);
  4601                           	fcall	_Keypad_Scan
  4602  0068  120A  118A  20DF  120A  118A  	movf	(1+(?_Keypad_Scan)),w
  4603  006D  0877               	bcf	status, 5	;RP0=0, select bank0
  4604  006E  1283               	bcf	status, 6	;RP1=0, select bank0
  4605  006F  1303               	movwf	(SoundAlarm@Key+1)
  4606  0070  00BD               	movf	(0+(?_Keypad_Scan)),w
  4607  0071  0876               	movwf	(SoundAlarm@Key)
  4608  0072  00BC               	line	374
  4609                           	
  4610                           l3689:	
  4611  0073                     ;main.c: 374:             break;
  4612                           		decf	((SoundAlarm@Key)),w
  4613  0073  033C               iorwf	((SoundAlarm@Key+1)),w
  4614  0074  043D               	btfss	status,2
  4615  0075  1D03               	goto	u2951
  4616  0076  2878               	goto	u2950
  4617  0077  2879               u2951:
  4618  0078                     	goto	l3693
  4619  0078  2880               u2950:
  4620  0079                     	line	376
  4621                           	
  4622                           l3691:	
  4623  0079                     ;main.c: 375:         };main.c: 376:     }
  4624                           	movf	(SoundAlarm@Key),w
  4625  0079  083C               	fcall	_ChangeTrigger
  4626  007A  120A  158A  2374  120A  118A  	goto	l3693
  4627  007F  2880               	line	377
  4628                           ;main.c: 377: }
  4629                           	
  4630                           l167:	
  4631  0080                     	line	379
  4632                           	
  4633                           l3693:	
  4634  0080                     ;main.c: 379: 
  4635                           		movlw	7
  4636  0080  3007               	bcf	status, 5	;RP0=0, select bank0
  4637  0081  1283               	bcf	status, 6	;RP1=0, select bank0
  4638  0082  1303               	xorwf	((SoundAlarm@Key)),w
  4639  0083  063C               iorwf	((SoundAlarm@Key+1)),w
  4640  0084  043D               	btfss	status,2
  4641  0085  1D03               	goto	u2961
  4642  0086  2888               	goto	u2960
  4643  0087  2889               u2961:
  4644  0088                     	goto	l3697
  4645  0088  2893               u2960:
  4646  0089                     	line	381
  4647                           	
  4648                           l3695:	
  4649  0089                     ;main.c: 380: void Switch24Hour(int Key);main.c: 381: {
  4650                           	movf	(SoundAlarm@Key+1),w
  4651  0089  083D               	movwf	(SwapToHeatingDisplay@Key+1)
  4652  008A  00F9               	movf	(SoundAlarm@Key),w
  4653  008B  083C               	movwf	(SwapToHeatingDisplay@Key)
  4654  008C  00F8               	fcall	_SwapToHeatingDisplay
  4655  008D  160A  118A  2631  120A  118A  	goto	l3697
  4656  0092  2893               	line	382
  4657                           ;main.c: 382:     LCD_Command(0x01);
  4658                           	
  4659                           l168:	
  4660  0093                     	line	384
  4661                           	
  4662                           l3697:	
  4663  0093                     ;main.c: 384:     while(1)
  4664                           		movlw	5
  4665  0093  3005               	bcf	status, 5	;RP0=0, select bank0
  4666  0094  1283               	bcf	status, 6	;RP1=0, select bank0
  4667  0095  1303               	xorwf	((SoundAlarm@Key)),w
  4668  0096  063C               iorwf	((SoundAlarm@Key+1)),w
  4669  0097  043D               	btfss	status,2
  4670  0098  1D03               	goto	u2971
  4671  0099  289B               	goto	u2970
  4672  009A  289C               u2971:
  4673  009B                     	goto	l3703
  4674  009B  28AE               u2970:
  4675  009C                     	line	386
  4676                           	
  4677                           l3699:	
  4678  009C                     ;main.c: 385:     {;main.c: 386:         LCD_Command(0x03);
  4679                           	movlw	01h
  4680  009C  3001               	bsf	status, 5	;RP0=1, select bank1
  4681  009D  1683               	bcf	status, 6	;RP1=0, select bank1
  4682  009E  1303               	movwf	(_DisableAlarm)^080h
  4683  009F  00EE               	movlw	0
  4684  00A0  3000               	movwf	((_DisableAlarm)^080h)+1
  4685  00A1  00EF               	line	387
  4686                           	
  4687                           l3701:	
  4688  00A2                     ;main.c: 387:         LCD_SendData(c);
  4689                           	fcall	_SoundOff
  4690  00A2  160A  158A  25D2  120A  118A  	line	388
  4691                           ;main.c: 388:         if (Key == 8)
  4692                           	movlw	low(01h)
  4693  00A7  3001               	fcall	_LCD_Command
  4694  00A8  160A  158A  25EF  120A  118A  	line	389
  4695                           ;main.c: 389:         {
  4696                           	goto	l173
  4697  00AD  28DE               	line	390
  4698                           ;main.c: 390:             LCD_Command(0x01);
  4699                           	
  4700                           l169:	
  4701  00AE                     	line	392
  4702                           	
  4703                           l3703:	
  4704  00AE                     ;main.c: 392:         }
  4705                           	bcf	status, 5	;RP0=0, select bank0
  4706  00AE  1283               	bcf	status, 6	;RP1=0, select bank0
  4707  00AF  1303               	movf	(_triggerTemp+1),w
  4708  00B0  086D               	xorlw	80h
  4709  00B1  3A80               	movwf	(??_SoundAlarm+0)+0
  4710  00B2  00C4               	movf	(SoundAlarm@temp3+1),w
  4711  00B3  0843               	xorlw	80h
  4712  00B4  3A80               	subwf	(??_SoundAlarm+0)+0,w
  4713  00B5  0244               	skipz
  4714  00B6  1D03               	goto	u2985
  4715  00B7  28BA               	movf	(SoundAlarm@temp3),w
  4716  00B8  0842               	subwf	(_triggerTemp),w
  4717  00B9  026C               u2985:
  4718  00BA                     
  4719                           	skipnc
  4720  00BA  1803               	goto	u2981
  4721  00BB  28BD               	goto	u2980
  4722  00BC  28BE               u2981:
  4723  00BD                     	goto	l3673
  4724  00BD  281D               u2980:
  4725  00BE                     	line	394
  4726                           	
  4727                           l3705:	
  4728  00BE                     ;main.c: 393:     };main.c: 394: }
  4729                           	movlw	low(01h)
  4730  00BE  3001               	fcall	_LCD_Command
  4731  00BF  160A  158A  25EF  120A  118A  	line	395
  4732                           	
  4733                           l3707:	
  4734  00C4                     ;main.c: 395: 
  4735                           	bcf	status, 5	;RP0=0, select bank0
  4736  00C4  1283               	bcf	status, 6	;RP1=0, select bank0
  4737  00C5  1303               	movf	(SoundAlarm@Key+1),w
  4738  00C6  083D               	movwf	(HeatingControlOff@Key+1)
  4739  00C7  00B2               	movf	(SoundAlarm@Key),w
  4740  00C8  083C               	movwf	(HeatingControlOff@Key)
  4741  00C9  00B1               	movf	(SoundAlarm@temp+1),w
  4742  00CA  083F               	movwf	(HeatingControlOff@temp+1)
  4743  00CB  00B4               	movf	(SoundAlarm@temp),w
  4744  00CC  083E               	movwf	(HeatingControlOff@temp)
  4745  00CD  00B3               	movf	(SoundAlarm@temp2+1),w
  4746  00CE  0841               	movwf	(HeatingControlOff@temp2+1)
  4747  00CF  00B6               	movf	(SoundAlarm@temp2),w
  4748  00D0  0840               	movwf	(HeatingControlOff@temp2)
  4749  00D1  00B5               	movf	(SoundAlarm@temp3+1),w
  4750  00D2  0843               	movwf	(HeatingControlOff@temp3+1)
  4751  00D3  00B8               	movf	(SoundAlarm@temp3),w
  4752  00D4  0842               	movwf	(HeatingControlOff@temp3)
  4753  00D5  00B7               	fcall	_HeatingControlOff
  4754  00D6  120A  158A  228A  120A  118A  	line	396
  4755                           ;main.c: 396: 
  4756                           	goto	l173
  4757  00DB  28DE               	line	397
  4758                           ;main.c: 397: void DateDayScreen(int Key)
  4759                           	
  4760                           l171:	
  4761  00DC                     	goto	l3673
  4762  00DC  281D               	line	398
  4763                           ;main.c: 398: {
  4764                           	
  4765                           l172:	
  4766  00DD                     	goto	l3673
  4767  00DD  281D               	
  4768                           l170:	
  4769  00DE                     	line	399
  4770                           	
  4771                           l173:	
  4772  00DE                     	return
  4773  00DE  0008               	opt stack 0
  4774                           GLOBAL	__end_of_SoundAlarm
  4775                           	__end_of_SoundAlarm:
  4776  00DF                     	signat	_SoundAlarm,16505
  4777                           	global	_SoundOn
  4778                           
  4779 ;; *************** function _SoundOn *****************
  4780 ;; Defined at:
  4781 ;;		line 12 in file "Buzzer.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;		None
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;		None
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  1    wreg      void 
  4788 ;; Registers used:
  4789 ;;		None
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4795 ;;      Params:         0       0       0       0       0
  4796 ;;      Locals:         0       0       0       0       0
  4797 ;;      Temps:          0       0       0       0       0
  4798 ;;      Totals:         0       0       0       0       0
  4799 ;;Total ram usage:        0 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; This function calls:
  4802 ;;		Nothing
  4803 ;; This function is called by:
  4804 ;;		_SoundAlarm
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4808                           	file	"Buzzer.c"
  4809                           	line	12
  4810                           global __ptext4
  4811                           __ptext4:	;psect for function _SoundOn
  4812  1DD6                     psect	text4
  4813                           	file	"Buzzer.c"
  4814                           	line	12
  4815                           	global	__size_of_SoundOn
  4816                           	__size_of_SoundOn	equ	__end_of_SoundOn-_SoundOn
  4817  0004                     	
  4818                           _SoundOn:	
  4819  1DD6                     ;incstack = 0
  4820                           	opt	stack 6
  4821                           ; Regs used in _SoundOn: []
  4822                           	line	14
  4823                           	
  4824                           l3619:	
  4825  1DD6                     ;Buzzer.c: 14:     RB1 = 1;
  4826                           	bcf	status, 5	;RP0=0, select bank0
  4827  1DD6  1283               	bcf	status, 6	;RP1=0, select bank0
  4828  1DD7  1303               	bsf	(49/8),(49)&7	;volatile
  4829  1DD8  1486               	line	15
  4830                           	
  4831                           l533:	
  4832  1DD9                     	return
  4833  1DD9  0008               	opt stack 0
  4834                           GLOBAL	__end_of_SoundOn
  4835                           	__end_of_SoundOn:
  4836  1DDA                     	signat	_SoundOn,89
  4837                           	global	_HeatingControlOff
  4838                           
  4839 ;; *************** function _HeatingControlOff *****************
  4840 ;; Defined at:
  4841 ;;		line 296 in file "main.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  Key             2   17[BANK0 ] int 
  4844 ;;  temp            2   19[BANK0 ] int 
  4845 ;;  temp2           2   21[BANK0 ] int 
  4846 ;;  temp3           2   23[BANK0 ] int 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  On              1   27[BANK0 ] PTR unsigned char 
  4849 ;;		 -> STR_16(11), 
  4850 ;;  Off             1   26[BANK0 ] PTR unsigned char 
  4851 ;;		 -> STR_15(12), 
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      void 
  4854 ;; Registers used:
  4855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4861 ;;      Params:         0       8       0       0       0
  4862 ;;      Locals:         0       2       0       0       0
  4863 ;;      Temps:          0       1       0       0       0
  4864 ;;      Totals:         0      11       0       0       0
  4865 ;;Total ram usage:       11 bytes
  4866 ;; Hardware stack levels used:    1
  4867 ;; Hardware stack levels required when called:    5
  4868 ;; This function calls:
  4869 ;;		_ChangeTrigger
  4870 ;;		_Get_Temp
  4871 ;;		_Keypad_Scan
  4872 ;;		_LCD_Command
  4873 ;;		_LCD_SendString
  4874 ;;		_MainScreen
  4875 ;;		_Main_Delay
  4876 ;;		_SoundOff
  4877 ;;		_SwapToHeatingDisplay
  4878 ;;		___wmul
  4879 ;; This function is called by:
  4880 ;;		_SoundAlarm
  4881 ;;		_main
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4885                           	file	"main.c"
  4886                           	line	296
  4887                           global __ptext5
  4888                           __ptext5:	;psect for function _HeatingControlOff
  4889  0A8A                     psect	text5
  4890                           	file	"main.c"
  4891                           	line	296
  4892                           	global	__size_of_HeatingControlOff
  4893                           	__size_of_HeatingControlOff	equ	__end_of_HeatingControlOff-_HeatingControlOff
  4894  00EA                     	
  4895                           _HeatingControlOff:	
  4896  0A8A                     ;incstack = 0
  4897                           	opt	stack 1
  4898                           ; Regs used in _HeatingControlOff: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]

  4899                           	line	299
  4900                           	
  4901                           l3571:	
  4902  0A8A                     ;main.c: 296:         Key = Keypad_Scan();;main.c: 297: ;main.c: 299:         {
  4903                           	movlw	01h
  4904  0A8A  3001               	bsf	status, 5	;RP0=1, select bank1
  4905  0A8B  1683               	bcf	status, 6	;RP1=0, select bank1
  4906  0A8C  1303               	movwf	(_DisableAlarm)^080h
  4907  0A8D  00EE               	movlw	0
  4908  0A8E  3000               	movwf	((_DisableAlarm)^080h)+1
  4909  0A8F  00EF               	line	300
  4910                           	
  4911                           l3573:	
  4912  0A90                     ;main.c: 300:            ChangeTrigger(Key);
  4913                           	fcall	_SoundOff
  4914  0A90  160A  158A  25D2  120A  158A  	line	301
  4915                           	
  4916                           l3575:	
  4917  0A95                     ;main.c: 301:         }
  4918                           	movlw	(low((((STR_15)-__stringbase)|8000h)))&0ffh
  4919  0A95  301E               	bcf	status, 5	;RP0=0, select bank0
  4920  0A96  1283               	bcf	status, 6	;RP1=0, select bank0
  4921  0A97  1303               	movwf	(??_HeatingControlOff+0)+0
  4922  0A98  00B9               	movf	(??_HeatingControlOff+0)+0,w
  4923  0A99  0839               	movwf	(HeatingControlOff@Off)
  4924  0A9A  00BA               	line	302
  4925                           	
  4926                           l3577:	
  4927  0A9B                     ;main.c: 302: 
  4928                           	movlw	(low((((STR_16)-__stringbase)|8000h)))&0ffh
  4929  0A9B  3036               	movwf	(??_HeatingControlOff+0)+0
  4930  0A9C  00B9               	movf	(??_HeatingControlOff+0)+0,w
  4931  0A9D  0839               	movwf	(HeatingControlOff@On)
  4932  0A9E  00BB               	line	304
  4933                           ;main.c: 304:         {
  4934                           	movlw	low(01h)
  4935  0A9F  3001               	fcall	_LCD_Command
  4936  0AA0  160A  158A  25EF  120A  158A  	line	306
  4937                           ;main.c: 306:         }
  4938                           	movlw	low(03h)
  4939  0AA5  3003               	fcall	_LCD_Command
  4940  0AA6  160A  158A  25EF  120A  158A  	line	308
  4941                           	
  4942                           l3579:	
  4943  0AAB                     ;main.c: 308:         Get_Temp(tempBuffer);
  4944                           	bcf	status, 5	;RP0=0, select bank0
  4945  0AAB  1283               	bcf	status, 6	;RP1=0, select bank0
  4946  0AAC  1303               		movf	(HeatingControlOff@Off),w
  4947  0AAD  083A               	movwf	(LCD_SendString@string)
  4948  0AAE  00F1               	movlw	0
  4949  0AAF  3000               	btfss	status,2
  4950  0AB0  1D03               	movlw	080h
  4951  0AB1  3080               	movwf	(LCD_SendString@string+1)
  4952  0AB2  00F2               
  4953                           	fcall	_LCD_SendString
  4954  0AB3  160A  118A  2361  120A  158A  	line	310
  4955                           	
  4956                           l3581:	
  4957  0AB8                     ;main.c: 310:         temp = tempBuffer[0] - 48;
  4958                           	movlw	0C8h
  4959  0AB8  30C8               	movwf	(Main_Delay@k)
  4960  0AB9  00F0               	movlw	0
  4961  0ABA  3000               	movwf	((Main_Delay@k))+1
  4962  0ABB  00F1               	fcall	_Main_Delay
  4963  0ABC  160A  118A  225F  120A  158A  	line	312
  4964                           	
  4965                           l3583:	
  4966  0AC1                     ;main.c: 312:         temp3 = (temp* 10) + temp2;
  4967                           	movlw	low(01h)
  4968  0AC1  3001               	fcall	_LCD_Command
  4969  0AC2  160A  158A  25EF  120A  158A  	goto	l3585
  4970  0AC7  2AC8               	line	313
  4971                           ;main.c: 313: 
  4972                           	
  4973                           l157:	
  4974  0AC8                     	line	315
  4975                           	
  4976                           l3585:	
  4977  0AC8                     ;main.c: 314:         if(triggerTemp[0] > temp3);main.c: 315:         {
  4978                           	movlw	low(03h)
  4979  0AC8  3003               	fcall	_LCD_Command
  4980  0AC9  160A  158A  25EF  120A  158A  	line	317
  4981                           	
  4982                           l3587:	
  4983  0ACE                     ;main.c: 317:             LCD_Command(0x03);
  4984                           	fcall	_MainScreen
  4985  0ACE  160A  118A  2143  120A  158A  	line	318
  4986                           	
  4987                           l3589:	
  4988  0AD3                     ;main.c: 318:             LCD_SendString(On);
  4989                           	fcall	_Keypad_Scan
  4990  0AD3  120A  118A  20DF  120A  158A  	movf	(1+(?_Keypad_Scan)),w
  4991  0AD8  0877               	bcf	status, 5	;RP0=0, select bank0
  4992  0AD9  1283               	bcf	status, 6	;RP1=0, select bank0
  4993  0ADA  1303               	movwf	(HeatingControlOff@Key+1)
  4994  0ADB  00B2               	movf	(0+(?_Keypad_Scan)),w
  4995  0ADC  0876               	movwf	(HeatingControlOff@Key)
  4996  0ADD  00B1               	line	320
  4997                           	
  4998                           l3591:	
  4999  0ADE                     ;main.c: 320: 
  5000                           		decf	((HeatingControlOff@Key)),w
  5001  0ADE  0331               iorwf	((HeatingControlOff@Key+1)),w
  5002  0ADF  0432               	btfss	status,2
  5003  0AE0  1D03               	goto	u2921
  5004  0AE1  2AE3               	goto	u2920
  5005  0AE2  2AE4               u2921:
  5006  0AE3                     	goto	l3595
  5007  0AE3  2AEB               u2920:
  5008  0AE4                     	line	322
  5009                           	
  5010                           l3593:	
  5011  0AE4                     ;main.c: 321:             Main_Delay(200);;main.c: 322:             LCD_Command(0x01);
  5012                           	movf	(HeatingControlOff@Key),w
  5013  0AE4  0831               	fcall	_ChangeTrigger
  5014  0AE5  120A  158A  2374  120A  158A  	goto	l3595
  5015  0AEA  2AEB               	line	323
  5016                           ;main.c: 323: 
  5017                           	
  5018                           l158:	
  5019  0AEB                     	line	325
  5020                           	
  5021                           l3595:	
  5022  0AEB                     ;main.c: 325: 
  5023                           		movlw	7
  5024  0AEB  3007               	bcf	status, 5	;RP0=0, select bank0
  5025  0AEC  1283               	bcf	status, 6	;RP1=0, select bank0
  5026  0AED  1303               	xorwf	((HeatingControlOff@Key)),w
  5027  0AEE  0631               iorwf	((HeatingControlOff@Key+1)),w
  5028  0AEF  0432               	btfss	status,2
  5029  0AF0  1D03               	goto	u2931
  5030  0AF1  2AF3               	goto	u2930
  5031  0AF2  2AF4               u2931:
  5032  0AF3                     	goto	l159
  5033  0AF3  2AFD               u2930:
  5034  0AF4                     	line	327
  5035                           	
  5036                           l3597:	
  5037  0AF4                     ;main.c: 326:             DisableAlarm = 0;;main.c: 327:             break;
  5038                           	movf	(HeatingControlOff@Key+1),w
  5039  0AF4  0832               	movwf	(SwapToHeatingDisplay@Key+1)
  5040  0AF5  00F9               	movf	(HeatingControlOff@Key),w
  5041  0AF6  0831               	movwf	(SwapToHeatingDisplay@Key)
  5042  0AF7  00F8               	fcall	_SwapToHeatingDisplay
  5043  0AF8  160A  118A  2631  120A  158A  	line	328
  5044                           ;main.c: 328:         }
  5045                           	
  5046                           l159:	
  5047  0AFD                     	line	330
  5048                           ;main.c: 330: }
  5049                           	movlw	(low(_tempBuffer|((0x0)<<8)))&0ffh
  5050  0AFD  30D5               	fcall	_Get_Temp
  5051  0AFE  120A  158A  2670  120A  158A  	line	332
  5052                           	
  5053                           l3599:	
  5054  0B03                     ;main.c: 332: 
  5055                           	bsf	status, 5	;RP0=1, select bank1
  5056  0B03  1683               	bcf	status, 6	;RP1=0, select bank1
  5057  0B04  1303               	movf	(_tempBuffer)^080h,w
  5058  0B05  0855               	addlw	low(-48)
  5059  0B06  3ED0               	bcf	status, 5	;RP0=0, select bank0
  5060  0B07  1283               	bcf	status, 6	;RP1=0, select bank0
  5061  0B08  1303               	movwf	(HeatingControlOff@temp)
  5062  0B09  00B3               	movlw	high(-48)
  5063  0B0A  30FF               	skipnc
  5064  0B0B  1803               	movlw	(high(-48)+1)&0ffh
  5065  0B0C  3000               	movwf	((HeatingControlOff@temp))+1
  5066  0B0D  00B4               	line	333
  5067                           	
  5068                           l3601:	
  5069  0B0E                     ;main.c: 333: void SoundAlarm(int Key, int temp, int temp2, int temp3)
  5070                           	bsf	status, 5	;RP0=1, select bank1
  5071  0B0E  1683               	bcf	status, 6	;RP1=0, select bank1
  5072  0B0F  1303               	movf	0+(_tempBuffer)^080h+01h,w
  5073  0B10  0856               	addlw	low(-48)
  5074  0B11  3ED0               	bcf	status, 5	;RP0=0, select bank0
  5075  0B12  1283               	bcf	status, 6	;RP1=0, select bank0
  5076  0B13  1303               	movwf	(HeatingControlOff@temp2)
  5077  0B14  00B5               	movlw	high(-48)
  5078  0B15  30FF               	skipnc
  5079  0B16  1803               	movlw	(high(-48)+1)&0ffh
  5080  0B17  3000               	movwf	((HeatingControlOff@temp2))+1
  5081  0B18  00B6               	line	334
  5082                           	
  5083                           l3603:	
  5084  0B19                     ;main.c: 334: {
  5085                           	movf	(HeatingControlOff@temp+1),w
  5086  0B19  0834               	movwf	(___wmul@multiplier+1)
  5087  0B1A  00F1               	movf	(HeatingControlOff@temp),w
  5088  0B1B  0833               	movwf	(___wmul@multiplier)
  5089  0B1C  00F0               	movlw	0Ah
  5090  0B1D  300A               	movwf	(___wmul@multiplicand)
  5091  0B1E  00F2               	movlw	0
  5092  0B1F  3000               	movwf	((___wmul@multiplicand))+1
  5093  0B20  00F3               	fcall	___wmul
  5094  0B21  160A  118A  20E9  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5095  0B26  1283               	bcf	status, 6	;RP1=0, select bank0
  5096  0B27  1303               	movf	(HeatingControlOff@temp2),w
  5097  0B28  0835               	addwf	(0+(?___wmul)),w
  5098  0B29  0770               	movwf	(HeatingControlOff@temp3)
  5099  0B2A  00B7               	movf	(HeatingControlOff@temp2+1),w
  5100  0B2B  0836               	skipnc
  5101  0B2C  1803               	incf	(HeatingControlOff@temp2+1),w
  5102  0B2D  0A36               	addwf	(1+(?___wmul)),w
  5103  0B2E  0771               	movwf	1+(HeatingControlOff@temp3)
  5104  0B2F  00B8               	line	336
  5105                           	
  5106                           l3605:	
  5107  0B30                     ;main.c: 336:     char* Alarm = "Heating Failure";
  5108                           	movf	(HeatingControlOff@temp3+1),w
  5109  0B30  0838               	xorlw	80h
  5110  0B31  3A80               	movwf	(??_HeatingControlOff+0)+0
  5111  0B32  00B9               	movf	(_triggerTemp+1),w
  5112  0B33  086D               	xorlw	80h
  5113  0B34  3A80               	subwf	(??_HeatingControlOff+0)+0,w
  5114  0B35  0239               	skipz
  5115  0B36  1D03               	goto	u2945
  5116  0B37  2B3A               	movf	(_triggerTemp),w
  5117  0B38  086C               	subwf	(HeatingControlOff@temp3),w
  5118  0B39  0237               u2945:
  5119  0B3A                     
  5120                           	skipnc
  5121  0B3A  1803               	goto	u2941
  5122  0B3B  2B3D               	goto	u2940
  5123  0B3C  2B3E               u2941:
  5124  0B3D                     	goto	l3585
  5125  0B3D  2AC8               u2940:
  5126  0B3E                     	line	338
  5127                           	
  5128                           l3607:	
  5129  0B3E                     ;main.c: 337:     DisableAlarm = 0;;main.c: 338:     LCD_Command(0x01);
  5130                           	movlw	low(01h)
  5131  0B3E  3001               	fcall	_LCD_Command
  5132  0B3F  160A  158A  25EF  120A  158A  	line	339
  5133                           ;main.c: 339:     while(1)
  5134                           	movlw	low(03h)
  5135  0B44  3003               	fcall	_LCD_Command
  5136  0B45  160A  158A  25EF  120A  158A  	line	340
  5137                           	
  5138                           l3609:	
  5139  0B4A                     ;main.c: 340:     {
  5140                           	bcf	status, 5	;RP0=0, select bank0
  5141  0B4A  1283               	bcf	status, 6	;RP1=0, select bank0
  5142  0B4B  1303               		movf	(HeatingControlOff@On),w
  5143  0B4C  083B               	movwf	(LCD_SendString@string)
  5144  0B4D  00F1               	movlw	0
  5145  0B4E  3000               	btfss	status,2
  5146  0B4F  1D03               	movlw	080h
  5147  0B50  3080               	movwf	(LCD_SendString@string+1)
  5148  0B51  00F2               
  5149                           	fcall	_LCD_SendString
  5150  0B52  160A  118A  2361  120A  158A  	line	343
  5151                           	
  5152                           l3611:	
  5153  0B57                     ;main.c: 343: 
  5154                           	movlw	0C8h
  5155  0B57  30C8               	movwf	(Main_Delay@k)
  5156  0B58  00F0               	movlw	0
  5157  0B59  3000               	movwf	((Main_Delay@k))+1
  5158  0B5A  00F1               	fcall	_Main_Delay
  5159  0B5B  160A  118A  225F  120A  158A  	line	344
  5160                           	
  5161                           l3613:	
  5162  0B60                     ;main.c: 344:         SoundOn();
  5163                           	movlw	low(01h)
  5164  0B60  3001               	fcall	_LCD_Command
  5165  0B61  160A  158A  25EF  120A  158A  	line	346
  5166                           	
  5167                           l3615:	
  5168  0B66                     ;main.c: 346:         Get_Temp(tempBuffer);
  5169                           	movlw	01h
  5170  0B66  3001               	bcf	status, 5	;RP0=0, select bank0
  5171  0B67  1283               	bcf	status, 6	;RP1=0, select bank0
  5172  0B68  1303               	movwf	(_IsHeatingOn)
  5173  0B69  00E0               	movlw	0
  5174  0B6A  3000               	movwf	((_IsHeatingOn))+1
  5175  0B6B  00E1               	line	348
  5176                           	
  5177                           l3617:	
  5178  0B6C                     ;main.c: 348:         temp2 = tempBuffer[1] - 48;
  5179                           	bsf	status, 5	;RP0=1, select bank1
  5180  0B6C  1683               	bcf	status, 6	;RP1=0, select bank1
  5181  0B6D  1303               	clrf	(_DisableAlarm)^080h
  5182  0B6E  01EE               	clrf	(_DisableAlarm+1)^080h
  5183  0B6F  01EF               	line	349
  5184                           ;main.c: 349:         temp3 = (temp* 10) + temp2;
  5185                           	goto	l163
  5186  0B70  2B73               	line	350
  5187                           ;main.c: 350:         Key = Keypad_Scan();
  5188                           	
  5189                           l160:	
  5190  0B71                     	goto	l3585
  5191  0B71  2AC8               	line	351
  5192                           ;main.c: 351: 
  5193                           	
  5194                           l162:	
  5195  0B72                     	goto	l3585
  5196  0B72  2AC8               	
  5197                           l161:	
  5198  0B73                     	line	352
  5199                           	
  5200                           l163:	
  5201  0B73                     	return
  5202  0B73  0008               	opt stack 0
  5203                           GLOBAL	__end_of_HeatingControlOff
  5204                           	__end_of_HeatingControlOff:
  5205  0B74                     	signat	_HeatingControlOff,16505
  5206                           	global	___wmul
  5207                           
  5208 ;; *************** function ___wmul *****************
  5209 ;; Defined at:
  5210 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  multiplier      2    0[COMMON] unsigned int 
  5213 ;;  multiplicand    2    2[COMMON] unsigned int 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;  product         2    4[COMMON] unsigned int 
  5216 ;; Return value:  Size  Location     Type
  5217 ;;                  2    0[COMMON] unsigned int 
  5218 ;; Registers used:
  5219 ;;		wreg, status,2, status,0
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5225 ;;      Params:         4       0       0       0       0
  5226 ;;      Locals:         2       0       0       0       0
  5227 ;;      Temps:          0       0       0       0       0
  5228 ;;      Totals:         6       0       0       0       0
  5229 ;;Total ram usage:        6 bytes
  5230 ;; Hardware stack levels used:    1
  5231 ;; This function calls:
  5232 ;;		Nothing
  5233 ;; This function is called by:
  5234 ;;		_HeatingControlOff
  5235 ;;		_SoundAlarm
  5236 ;;		_main
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  5240                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  5241                           	line	15
  5242                           global __ptext6
  5243                           __ptext6:	;psect for function ___wmul
  5244  10E9                     psect	text6
  5245                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  5246                           	line	15
  5247                           	global	__size_of___wmul
  5248                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  5249  0028                     	
  5250                           ___wmul:	
  5251  10E9                     ;incstack = 0
  5252                           	opt	stack 7
  5253                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5254                           	line	43
  5255                           	
  5256                           l3499:	
  5257  10E9                     	clrf	(___wmul@product)
  5258  10E9  01F4               	clrf	(___wmul@product+1)
  5259  10EA  01F5               	goto	l3501
  5260  10EB  28EC               	line	44
  5261                           	
  5262                           l697:	
  5263  10EC                     	line	45
  5264                           	
  5265                           l3501:	
  5266  10EC                     	btfss	(___wmul@multiplier),(0)&7
  5267  10EC  1C70               	goto	u2881
  5268  10ED  28EF               	goto	u2880
  5269  10EE  28F0               u2881:
  5270  10EF                     	goto	l698
  5271  10EF  28F6               u2880:
  5272  10F0                     	line	46
  5273                           	
  5274                           l3503:	
  5275  10F0                     	movf	(___wmul@multiplicand),w
  5276  10F0  0872               	addwf	(___wmul@product),f
  5277  10F1  07F4               	skipnc
  5278  10F2  1803               	incf	(___wmul@product+1),f
  5279  10F3  0AF5               	movf	(___wmul@multiplicand+1),w
  5280  10F4  0873               	addwf	(___wmul@product+1),f
  5281  10F5  07F5               	
  5282                           l698:	
  5283  10F6                     	line	47
  5284                           	movlw	01h
  5285  10F6  3001               	
  5286                           u2895:
  5287  10F7                     	clrc
  5288  10F7  1003               	rlf	(___wmul@multiplicand),f
  5289  10F8  0DF2               	rlf	(___wmul@multiplicand+1),f
  5290  10F9  0DF3               	addlw	-1
  5291  10FA  3EFF               	skipz
  5292  10FB  1D03               	goto	u2895
  5293  10FC  28F7               	line	48
  5294                           	
  5295                           l3505:	
  5296  10FD                     	movlw	01h
  5297  10FD  3001               	
  5298                           u2905:
  5299  10FE                     	clrc
  5300  10FE  1003               	rrf	(___wmul@multiplier+1),f
  5301  10FF  0CF1               	rrf	(___wmul@multiplier),f
  5302  1100  0CF0               	addlw	-1
  5303  1101  3EFF               	skipz
  5304  1102  1D03               	goto	u2905
  5305  1103  28FE               	line	49
  5306                           	
  5307                           l3507:	
  5308  1104                     	movf	((___wmul@multiplier)),w
  5309  1104  0870               iorwf	((___wmul@multiplier+1)),w
  5310  1105  0471               	btfss	status,2
  5311  1106  1D03               	goto	u2911
  5312  1107  2909               	goto	u2910
  5313  1108  290A               u2911:
  5314  1109                     	goto	l3501
  5315  1109  28EC               u2910:
  5316  110A                     	goto	l3509
  5317  110A  290B               	
  5318                           l699:	
  5319  110B                     	line	52
  5320                           	
  5321                           l3509:	
  5322  110B                     	movf	(___wmul@product+1),w
  5323  110B  0875               	movwf	(?___wmul+1)
  5324  110C  00F1               	movf	(___wmul@product),w
  5325  110D  0874               	movwf	(?___wmul)
  5326  110E  00F0               	goto	l700
  5327  110F  2910               	
  5328                           l3511:	
  5329  1110                     	line	53
  5330                           	
  5331                           l700:	
  5332  1110                     	return
  5333  1110  0008               	opt stack 0
  5334                           GLOBAL	__end_of___wmul
  5335                           	__end_of___wmul:
  5336  1111                     	signat	___wmul,8314
  5337                           	global	_SoundOff
  5338                           
  5339 ;; *************** function _SoundOff *****************
  5340 ;; Defined at:
  5341 ;;		line 18 in file "Buzzer.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;		None
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;		None
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      void 
  5348 ;; Registers used:
  5349 ;;		None
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5355 ;;      Params:         0       0       0       0       0
  5356 ;;      Locals:         0       0       0       0       0
  5357 ;;      Temps:          0       0       0       0       0
  5358 ;;      Totals:         0       0       0       0       0
  5359 ;;Total ram usage:        0 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		_HeatingControlOff
  5365 ;;		_SoundAlarm
  5366 ;;		_main
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  5370                           	file	"Buzzer.c"
  5371                           	line	18
  5372                           global __ptext7
  5373                           __ptext7:	;psect for function _SoundOff
  5374  1DD2                     psect	text7
  5375                           	file	"Buzzer.c"
  5376                           	line	18
  5377                           	global	__size_of_SoundOff
  5378                           	__size_of_SoundOff	equ	__end_of_SoundOff-_SoundOff
  5379  0004                     	
  5380                           _SoundOff:	
  5381  1DD2                     ;incstack = 0
  5382                           	opt	stack 7
  5383                           ; Regs used in _SoundOff: []
  5384                           	line	20
  5385                           	
  5386                           l3483:	
  5387  1DD2                     ;Buzzer.c: 20:     RB1 = 0;
  5388                           	bcf	status, 5	;RP0=0, select bank0
  5389  1DD2  1283               	bcf	status, 6	;RP1=0, select bank0
  5390  1DD3  1303               	bcf	(49/8),(49)&7	;volatile
  5391  1DD4  1086               	line	21
  5392                           	
  5393                           l536:	
  5394  1DD5                     	return
  5395  1DD5  0008               	opt stack 0
  5396                           GLOBAL	__end_of_SoundOff
  5397                           	__end_of_SoundOff:
  5398  1DD6                     	signat	_SoundOff,89
  5399                           	global	_MainScreen
  5400                           
  5401 ;; *************** function _MainScreen *****************
  5402 ;; Defined at:
  5403 ;;		line 157 in file "main.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;		None
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;  Temp            1   10[BANK0 ] PTR unsigned char 
  5408 ;;		 -> STR_9(6), 
  5409 ;;  Time            1    9[BANK0 ] PTR unsigned char 
  5410 ;;		 -> STR_8(6), 
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5420 ;;      Params:         0       0       0       0       0
  5421 ;;      Locals:         0       2       0       0       0
  5422 ;;      Temps:          0       1       0       0       0
  5423 ;;      Totals:         0       3       0       0       0
  5424 ;;Total ram usage:        3 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:    4
  5427 ;; This function calls:
  5428 ;;		_DisplayTemp
  5429 ;;		_DisplayTime
  5430 ;;		_LCD_SecondLine
  5431 ;;		_LCD_SendString
  5432 ;; This function is called by:
  5433 ;;		_HeatingControlOff
  5434 ;;		_main
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5438                           	file	"main.c"
  5439                           	line	157
  5440                           global __ptext8
  5441                           __ptext8:	;psect for function _MainScreen
  5442  1143                     psect	text8
  5443                           	file	"main.c"
  5444                           	line	157
  5445                           	global	__size_of_MainScreen
  5446                           	__size_of_MainScreen	equ	__end_of_MainScreen-_MainScreen
  5447  0033                     	
  5448                           _MainScreen:	
  5449  1143                     ;incstack = 0
  5450                           	opt	stack 1
  5451                           ; Regs used in _MainScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5452                           	line	160
  5453                           	
  5454                           l3357:	
  5455  1143                     ;main.c: 160:     int i = 0;
  5456                           	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  5457  1143  30A2               	bcf	status, 5	;RP0=0, select bank0
  5458  1144  1283               	bcf	status, 6	;RP1=0, select bank0
  5459  1145  1303               	movwf	(??_MainScreen+0)+0
  5460  1146  00A8               	movf	(??_MainScreen+0)+0,w
  5461  1147  0828               	movwf	(MainScreen@Time)
  5462  1148  00A9               	line	161
  5463                           ;main.c: 161:     char* Trigger = "Trigger:";
  5464                           	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  5465  1149  30AE               	movwf	(??_MainScreen+0)+0
  5466  114A  00A8               	movf	(??_MainScreen+0)+0,w
  5467  114B  0828               	movwf	(MainScreen@Temp)
  5468  114C  00AA               	line	162
  5469                           	
  5470                           l3359:	
  5471  114D                     ;main.c: 162:     char* TriggerSet = "Trigger Set";
  5472                           		movf	(MainScreen@Time),w
  5473  114D  0829               	movwf	(LCD_SendString@string)
  5474  114E  00F1               	movlw	0
  5475  114F  3000               	btfss	status,2
  5476  1150  1D03               	movlw	080h
  5477  1151  3080               	movwf	(LCD_SendString@string+1)
  5478  1152  00F2               
  5479                           	fcall	_LCD_SendString
  5480  1153  160A  118A  2361  160A  118A  	line	164
  5481                           	
  5482                           l3361:	
  5483  1158                     ;main.c: 164:         {
  5484                           	fcall	_DisplayTime
  5485  1158  120A  158A  20BC  160A  118A  	line	166
  5486                           	
  5487                           l3363:	
  5488  115D                     ;main.c: 166:             char decimal;
  5489                           	fcall	_LCD_SecondLine
  5490  115D  160A  158A  25DA  160A  118A  	line	169
  5491                           	
  5492                           l3365:	
  5493  1162                     ;main.c: 169: 
  5494                           	bcf	status, 5	;RP0=0, select bank0
  5495  1162  1283               	bcf	status, 6	;RP1=0, select bank0
  5496  1163  1303               		movf	(MainScreen@Temp),w
  5497  1164  082A               	movwf	(LCD_SendString@string)
  5498  1165  00F1               	movlw	0
  5499  1166  3000               	btfss	status,2
  5500  1167  1D03               	movlw	080h
  5501  1168  3080               	movwf	(LCD_SendString@string+1)
  5502  1169  00F2               
  5503                           	fcall	_LCD_SendString
  5504  116A  160A  118A  2361  160A  118A  	line	171
  5505                           	
  5506                           l3367:	
  5507  116F                     ;main.c: 171: 
  5508                           	movlw	(low(_tempBuffer|((0x0)<<8)))&0ffh
  5509  116F  30D5               	fcall	_DisplayTemp
  5510  1170  160A  158A  27DA  160A  118A  	line	174
  5511                           	
  5512                           l126:	
  5513  1175                     	return
  5514  1175  0008               	opt stack 0
  5515                           GLOBAL	__end_of_MainScreen
  5516                           	__end_of_MainScreen:
  5517  1176                     	signat	_MainScreen,89
  5518                           	global	_DisplayTime
  5519                           
  5520 ;; *************** function _DisplayTime *****************
  5521 ;; Defined at:
  5522 ;;		line 62 in file "main.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;		None
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      void 
  5529 ;; Registers used:
  5530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5536 ;;      Params:         0       0       0       0       0
  5537 ;;      Locals:         0       0       0       0       0
  5538 ;;      Temps:          1       0       0       0       0
  5539 ;;      Totals:         1       0       0       0       0
  5540 ;;Total ram usage:        1 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:    3
  5543 ;; This function calls:
  5544 ;;		_LCD_SendString
  5545 ;;		_RealTimeClock_get_hours
  5546 ;;		_RealTimeClock_get_minutes
  5547 ;;		_RealTimeClock_get_seconds
  5548 ;;		___awdiv
  5549 ;;		___awmod
  5550 ;; This function is called by:
  5551 ;;		_MainScreen
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5555                           	line	62
  5556                           global __ptext9
  5557                           __ptext9:	;psect for function _DisplayTime
  5558  08BC                     psect	text9
  5559                           	file	"main.c"
  5560                           	line	62
  5561                           	global	__size_of_DisplayTime
  5562                           	__size_of_DisplayTime	equ	__end_of_DisplayTime-_DisplayTime
  5563  00E6                     	
  5564                           _DisplayTime:	
  5565  08BC                     ;incstack = 0
  5566                           	opt	stack 1
  5567                           ; Regs used in _DisplayTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5568                           	line	65
  5569                           	
  5570                           l3183:	
  5571  08BC                     ;main.c: 65: 
  5572                           	fcall	_RealTimeClock_get_seconds
  5573  08BC  160A  158A  27B8  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5574  08C1  1283               	bcf	status, 6	;RP1=0, select bank0
  5575  08C2  1303               	movf	(1+(?_RealTimeClock_get_seconds)),w
  5576  08C3  0826               	movwf	(_timeSecs+1)
  5577  08C4  00D9               	movf	(0+(?_RealTimeClock_get_seconds)),w
  5578  08C5  0825               	movwf	(_timeSecs)
  5579  08C6  00D8               	line	66
  5580                           ;main.c: 66:     int month = RealTimeClock_get_month();
  5581                           	fcall	_RealTimeClock_get_minutes
  5582  08C7  160A  158A  270E  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5583  08CC  1283               	bcf	status, 6	;RP1=0, select bank0
  5584  08CD  1303               	movf	(1+(?_RealTimeClock_get_minutes)),w
  5585  08CE  0826               	movwf	(_timeMins+1)
  5586  08CF  00DB               	movf	(0+(?_RealTimeClock_get_minutes)),w
  5587  08D0  0825               	movwf	(_timeMins)
  5588  08D1  00DA               	line	67
  5589                           ;main.c: 67:     int day = RealTimeClock_get_day_of_month();
  5590                           	fcall	_RealTimeClock_get_hours
  5591  08D2  160A  158A  26EC  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5592  08D7  1283               	bcf	status, 6	;RP1=0, select bank0
  5593  08D8  1303               	movf	(1+(?_RealTimeClock_get_hours)),w
  5594  08D9  0826               	movwf	(_timeHours+1)
  5595  08DA  00DD               	movf	(0+(?_RealTimeClock_get_hours)),w
  5596  08DB  0825               	movwf	(_timeHours)
  5597  08DC  00DC               	line	69
  5598                           	
  5599                           l3185:	
  5600  08DD                     ;main.c: 69: 
  5601                           	movlw	0Ah
  5602  08DD  300A               	movwf	(___awmod@divisor)
  5603  08DE  00F0               	movlw	0
  5604  08DF  3000               	movwf	((___awmod@divisor))+1
  5605  08E0  00F1               	movf	(_timeHours+1),w
  5606  08E1  085D               	movwf	(___awmod@dividend+1)
  5607  08E2  00F3               	movf	(_timeHours),w
  5608  08E3  085C               	movwf	(___awmod@dividend)
  5609  08E4  00F2               	fcall	___awmod
  5610  08E5  160A  118A  255D  120A  158A  	movf	(0+(?___awmod)),w
  5611  08EA  0870               	addlw	030h
  5612  08EB  3E30               	movwf	(??_DisplayTime+0)+0
  5613  08EC  00FC               	movf	(??_DisplayTime+0)+0,w
  5614  08ED  087C               	bsf	status, 5	;RP0=1, select bank1
  5615  08EE  1683               	bcf	status, 6	;RP1=0, select bank1
  5616  08EF  1303               	movwf	0+(_timeDisplayer)^080h+01h
  5617  08F0  00CD               	line	70
  5618                           	
  5619                           l3187:	
  5620  08F1                     ;main.c: 70:     dateDisplayer[1] = month % 10 + 48;
  5621                           	movlw	0Ah
  5622  08F1  300A               	movwf	(___awdiv@divisor)
  5623  08F2  00F0               	movlw	0
  5624  08F3  3000               	movwf	((___awdiv@divisor))+1
  5625  08F4  00F1               	bcf	status, 5	;RP0=0, select bank0
  5626  08F5  1283               	bcf	status, 6	;RP1=0, select bank0
  5627  08F6  1303               	movf	(_timeHours+1),w
  5628  08F7  085D               	movwf	(___awdiv@dividend+1)
  5629  08F8  00F3               	movf	(_timeHours),w
  5630  08F9  085C               	movwf	(___awdiv@dividend)
  5631  08FA  00F2               	fcall	___awdiv
  5632  08FB  160A  118A  25C0  120A  158A  	movf	(1+(?___awdiv)),w
  5633  0900  0871               	bcf	status, 5	;RP0=0, select bank0
  5634  0901  1283               	bcf	status, 6	;RP1=0, select bank0
  5635  0902  1303               	movwf	(_timeHours+1)
  5636  0903  00DD               	movf	(0+(?___awdiv)),w
  5637  0904  0870               	movwf	(_timeHours)
  5638  0905  00DC               	line	71
  5639                           	
  5640                           l3189:	
  5641  0906                     ;main.c: 71:     month /= 10;
  5642                           	movlw	0Ah
  5643  0906  300A               	movwf	(___awmod@divisor)
  5644  0907  00F0               	movlw	0
  5645  0908  3000               	movwf	((___awmod@divisor))+1
  5646  0909  00F1               	movf	(_timeHours+1),w
  5647  090A  085D               	movwf	(___awmod@dividend+1)
  5648  090B  00F3               	movf	(_timeHours),w
  5649  090C  085C               	movwf	(___awmod@dividend)
  5650  090D  00F2               	fcall	___awmod
  5651  090E  160A  118A  255D  120A  158A  	movf	(0+(?___awmod)),w
  5652  0913  0870               	addlw	030h
  5653  0914  3E30               	movwf	(??_DisplayTime+0)+0
  5654  0915  00FC               	movf	(??_DisplayTime+0)+0,w
  5655  0916  087C               	bsf	status, 5	;RP0=1, select bank1
  5656  0917  1683               	bcf	status, 6	;RP1=0, select bank1
  5657  0918  1303               	movwf	(_timeDisplayer)^080h
  5658  0919  00CC               	line	73
  5659                           	
  5660                           l3191:	
  5661  091A                     ;main.c: 73:     dateDisplayer[3] = day % 10 + 48;
  5662                           	movlw	0Ah
  5663  091A  300A               	movwf	(___awmod@divisor)
  5664  091B  00F0               	movlw	0
  5665  091C  3000               	movwf	((___awmod@divisor))+1
  5666  091D  00F1               	bcf	status, 5	;RP0=0, select bank0
  5667  091E  1283               	bcf	status, 6	;RP1=0, select bank0
  5668  091F  1303               	movf	(_timeMins+1),w
  5669  0920  085B               	movwf	(___awmod@dividend+1)
  5670  0921  00F3               	movf	(_timeMins),w
  5671  0922  085A               	movwf	(___awmod@dividend)
  5672  0923  00F2               	fcall	___awmod
  5673  0924  160A  118A  255D  120A  158A  	movf	(0+(?___awmod)),w
  5674  0929  0870               	addlw	030h
  5675  092A  3E30               	movwf	(??_DisplayTime+0)+0
  5676  092B  00FC               	movf	(??_DisplayTime+0)+0,w
  5677  092C  087C               	bsf	status, 5	;RP0=1, select bank1
  5678  092D  1683               	bcf	status, 6	;RP1=0, select bank1
  5679  092E  1303               	movwf	0+(_timeDisplayer)^080h+04h
  5680  092F  00D0               	line	74
  5681                           	
  5682                           l3193:	
  5683  0930                     ;main.c: 74:     day /= 10;
  5684                           	movlw	0Ah
  5685  0930  300A               	movwf	(___awdiv@divisor)
  5686  0931  00F0               	movlw	0
  5687  0932  3000               	movwf	((___awdiv@divisor))+1
  5688  0933  00F1               	bcf	status, 5	;RP0=0, select bank0
  5689  0934  1283               	bcf	status, 6	;RP1=0, select bank0
  5690  0935  1303               	movf	(_timeMins+1),w
  5691  0936  085B               	movwf	(___awdiv@dividend+1)
  5692  0937  00F3               	movf	(_timeMins),w
  5693  0938  085A               	movwf	(___awdiv@dividend)
  5694  0939  00F2               	fcall	___awdiv
  5695  093A  160A  118A  25C0  120A  158A  	movf	(1+(?___awdiv)),w
  5696  093F  0871               	bcf	status, 5	;RP0=0, select bank0
  5697  0940  1283               	bcf	status, 6	;RP1=0, select bank0
  5698  0941  1303               	movwf	(_timeMins+1)
  5699  0942  00DB               	movf	(0+(?___awdiv)),w
  5700  0943  0870               	movwf	(_timeMins)
  5701  0944  00DA               	line	75
  5702                           	
  5703                           l3195:	
  5704  0945                     ;main.c: 75:     dateDisplayer[4] = day % 10 + 48;
  5705                           	movlw	0Ah
  5706  0945  300A               	movwf	(___awmod@divisor)
  5707  0946  00F0               	movlw	0
  5708  0947  3000               	movwf	((___awmod@divisor))+1
  5709  0948  00F1               	movf	(_timeMins+1),w
  5710  0949  085B               	movwf	(___awmod@dividend+1)
  5711  094A  00F3               	movf	(_timeMins),w
  5712  094B  085A               	movwf	(___awmod@dividend)
  5713  094C  00F2               	fcall	___awmod
  5714  094D  160A  118A  255D  120A  158A  	movf	(0+(?___awmod)),w
  5715  0952  0870               	addlw	030h
  5716  0953  3E30               	movwf	(??_DisplayTime+0)+0
  5717  0954  00FC               	movf	(??_DisplayTime+0)+0,w
  5718  0955  087C               	bsf	status, 5	;RP0=1, select bank1
  5719  0956  1683               	bcf	status, 6	;RP1=0, select bank1
  5720  0957  1303               	movwf	0+(_timeDisplayer)^080h+03h
  5721  0958  00CF               	line	77
  5722                           	
  5723                           l3197:	
  5724  0959                     ;main.c: 77:     year /= 10;
  5725                           	movlw	0Ah
  5726  0959  300A               	movwf	(___awmod@divisor)
  5727  095A  00F0               	movlw	0
  5728  095B  3000               	movwf	((___awmod@divisor))+1
  5729  095C  00F1               	bcf	status, 5	;RP0=0, select bank0
  5730  095D  1283               	bcf	status, 6	;RP1=0, select bank0
  5731  095E  1303               	movf	(_timeSecs+1),w
  5732  095F  0859               	movwf	(___awmod@dividend+1)
  5733  0960  00F3               	movf	(_timeSecs),w
  5734  0961  0858               	movwf	(___awmod@dividend)
  5735  0962  00F2               	fcall	___awmod
  5736  0963  160A  118A  255D  120A  158A  	movf	(0+(?___awmod)),w
  5737  0968  0870               	addlw	030h
  5738  0969  3E30               	movwf	(??_DisplayTime+0)+0
  5739  096A  00FC               	movf	(??_DisplayTime+0)+0,w
  5740  096B  087C               	bsf	status, 5	;RP0=1, select bank1
  5741  096C  1683               	bcf	status, 6	;RP1=0, select bank1
  5742  096D  1303               	movwf	0+(_timeDisplayer)^080h+07h
  5743  096E  00D3               	line	78
  5744                           	
  5745                           l3199:	
  5746  096F                     ;main.c: 78:     dateDisplayer[6] = year % 10 + 48;
  5747                           	movlw	0Ah
  5748  096F  300A               	movwf	(___awdiv@divisor)
  5749  0970  00F0               	movlw	0
  5750  0971  3000               	movwf	((___awdiv@divisor))+1
  5751  0972  00F1               	bcf	status, 5	;RP0=0, select bank0
  5752  0973  1283               	bcf	status, 6	;RP1=0, select bank0
  5753  0974  1303               	movf	(_timeSecs+1),w
  5754  0975  0859               	movwf	(___awdiv@dividend+1)
  5755  0976  00F3               	movf	(_timeSecs),w
  5756  0977  0858               	movwf	(___awdiv@dividend)
  5757  0978  00F2               	fcall	___awdiv
  5758  0979  160A  118A  25C0  120A  158A  	movf	(1+(?___awdiv)),w
  5759  097E  0871               	bcf	status, 5	;RP0=0, select bank0
  5760  097F  1283               	bcf	status, 6	;RP1=0, select bank0
  5761  0980  1303               	movwf	(_timeSecs+1)
  5762  0981  00D9               	movf	(0+(?___awdiv)),w
  5763  0982  0870               	movwf	(_timeSecs)
  5764  0983  00D8               	line	79
  5765                           	
  5766                           l3201:	
  5767  0984                     ;main.c: 79: }
  5768                           	movlw	0Ah
  5769  0984  300A               	movwf	(___awmod@divisor)
  5770  0985  00F0               	movlw	0
  5771  0986  3000               	movwf	((___awmod@divisor))+1
  5772  0987  00F1               	movf	(_timeSecs+1),w
  5773  0988  0859               	movwf	(___awmod@dividend+1)
  5774  0989  00F3               	movf	(_timeSecs),w
  5775  098A  0858               	movwf	(___awmod@dividend)
  5776  098B  00F2               	fcall	___awmod
  5777  098C  160A  118A  255D  120A  158A  	movf	(0+(?___awmod)),w
  5778  0991  0870               	addlw	030h
  5779  0992  3E30               	movwf	(??_DisplayTime+0)+0
  5780  0993  00FC               	movf	(??_DisplayTime+0)+0,w
  5781  0994  087C               	bsf	status, 5	;RP0=1, select bank1
  5782  0995  1683               	bcf	status, 6	;RP1=0, select bank1
  5783  0996  1303               	movwf	0+(_timeDisplayer)^080h+06h
  5784  0997  00D2               	line	81
  5785                           	
  5786                           l3203:	
  5787  0998                     ;main.c: 81: 
  5788                           	movlw	(low(_timeDisplayer|((0x0)<<8))&0ffh)
  5789  0998  30CC               	movwf	(LCD_SendString@string)
  5790  0999  00F1               	movlw	(0x0)
  5791  099A  3000               	movwf	(LCD_SendString@string+1)
  5792  099B  00F2               	fcall	_LCD_SendString
  5793  099C  160A  118A  2361  120A  158A  	line	82
  5794                           	
  5795                           l105:	
  5796  09A1                     	return
  5797  09A1  0008               	opt stack 0
  5798                           GLOBAL	__end_of_DisplayTime
  5799                           	__end_of_DisplayTime:
  5800  09A2                     	signat	_DisplayTime,89
  5801                           	global	_DisplayTemp
  5802                           
  5803 ;; *************** function _DisplayTemp *****************
  5804 ;; Defined at:
  5805 ;;		line 143 in file "main.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;  tempBuffer      1    wreg     PTR unsigned char 
  5808 ;;		 -> tempBuffer(6), 
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;  tempBuffer      1    7[BANK0 ] PTR unsigned char 
  5811 ;;		 -> tempBuffer(6), 
  5812 ;; Return value:  Size  Location     Type
  5813 ;;                  1    wreg      void 
  5814 ;; Registers used:
  5815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5816 ;; Tracked objects:
  5817 ;;		On entry : 0/0
  5818 ;;		On exit  : 0/0
  5819 ;;		Unchanged: 0/0
  5820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5821 ;;      Params:         0       0       0       0       0
  5822 ;;      Locals:         0       1       0       0       0
  5823 ;;      Temps:          0       0       0       0       0
  5824 ;;      Totals:         0       1       0       0       0
  5825 ;;Total ram usage:        1 bytes
  5826 ;; Hardware stack levels used:    1
  5827 ;; Hardware stack levels required when called:    3
  5828 ;; This function calls:
  5829 ;;		_Get_Temp
  5830 ;;		_LCD_Busy
  5831 ;;		_LCD_SendData
  5832 ;;		_LCD_SendString
  5833 ;; This function is called by:
  5834 ;;		_MainScreen
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5838                           	line	143
  5839                           global __ptext10
  5840                           __ptext10:	;psect for function _DisplayTemp
  5841  1FDA                     psect	text10
  5842                           	file	"main.c"
  5843                           	line	143
  5844                           	global	__size_of_DisplayTemp
  5845                           	__size_of_DisplayTemp	equ	__end_of_DisplayTemp-_DisplayTemp
  5846  0026                     	
  5847                           _DisplayTemp:	
  5848  1FDA                     ;incstack = 0
  5849                           	opt	stack 1
  5850                           ; Regs used in _DisplayTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5851                           ;DisplayTemp@tempBuffer stored from wreg
  5852                           	bcf	status, 5	;RP0=0, select bank0
  5853  1FDA  1283               	bcf	status, 6	;RP1=0, select bank0
  5854  1FDB  1303               	movwf	(DisplayTemp@tempBuffer)
  5855  1FDC  00A7               	line	146
  5856                           	
  5857                           l3205:	
  5858  1FDD                     ;main.c: 143: ;main.c: 144:     LCD_SecondLine();;main.c: 146: 
  5859                           	movf	(DisplayTemp@tempBuffer),w
  5860  1FDD  0827               	fcall	_Get_Temp
  5861  1FDE  120A  158A  2670  160A  158A  	line	148
  5862                           ;main.c: 148: 
  5863                           	bcf	status, 5	;RP0=0, select bank0
  5864  1FE3  1283               	bcf	status, 6	;RP1=0, select bank0
  5865  1FE4  1303               	movf	(DisplayTemp@tempBuffer),w
  5866  1FE5  0827               	movwf	(LCD_SendString@string)
  5867  1FE6  00F1               	movlw	(0x0)
  5868  1FE7  3000               	movwf	(LCD_SendString@string+1)
  5869  1FE8  00F2               	fcall	_LCD_SendString
  5870  1FE9  160A  118A  2361  160A  158A  	line	150
  5871                           	
  5872                           l3207:	
  5873  1FEE                     ;main.c: 150: 
  5874                           	movlw	low(0DFh)
  5875  1FEE  30DF               	fcall	_LCD_SendData
  5876  1FEF  160A  158A  25FE  160A  158A  	line	151
  5877                           	
  5878                           l3209:	
  5879  1FF4                     ;main.c: 151: 
  5880                           	fcall	_LCD_Busy
  5881  1FF4  160A  158A  2630  160A  158A  	line	153
  5882                           	
  5883                           l3211:	
  5884  1FF9                     ;main.c: 153: 
  5885                           	movlw	low(043h)
  5886  1FF9  3043               	fcall	_LCD_SendData
  5887  1FFA  160A  158A  25FE  160A  158A  	line	154
  5888                           	
  5889                           l123:	
  5890  1FFF                     	return
  5891  1FFF  0008               	opt stack 0
  5892                           GLOBAL	__end_of_DisplayTemp
  5893                           	__end_of_DisplayTemp:
  5894  2000                     	signat	_DisplayTemp,4217
  5895                           	global	_Get_Temp
  5896                           
  5897 ;; *************** function _Get_Temp *****************
  5898 ;; Defined at:
  5899 ;;		line 130 in file "Thermometer.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;  buffer          1    wreg     PTR unsigned char 
  5902 ;;		 -> tempBuffer(6), 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;  buffer          1    4[BANK0 ] PTR unsigned char 
  5905 ;;		 -> tempBuffer(6), 
  5906 ;;  i               2    5[BANK0 ] int 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      void 
  5909 ;; Registers used:
  5910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5916 ;;      Params:         0       0       0       0       0
  5917 ;;      Locals:         0       3       0       0       0
  5918 ;;      Temps:          0       4       0       0       0
  5919 ;;      Totals:         0       7       0       0       0
  5920 ;;Total ram usage:        7 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    2
  5923 ;; This function calls:
  5924 ;;		_Delay
  5925 ;;		_Read_Byte
  5926 ;;		_Reset
  5927 ;;		_Write_Byte
  5928 ;;		___awdiv
  5929 ;;		___awmod
  5930 ;;		___lwdiv
  5931 ;;		___lwmod
  5932 ;; This function is called by:
  5933 ;;		_DisplayTemp
  5934 ;;		_HeatingControlOff
  5935 ;;		_SoundAlarm
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5939                           	file	"Thermometer.c"
  5940                           	line	130
  5941                           global __ptext11
  5942                           __ptext11:	;psect for function _Get_Temp
  5943  0E70                     psect	text11
  5944                           	file	"Thermometer.c"
  5945                           	line	130
  5946                           	global	__size_of_Get_Temp
  5947                           	__size_of_Get_Temp	equ	__end_of_Get_Temp-_Get_Temp
  5948  0190                     	
  5949                           _Get_Temp:	
  5950  0E70                     ;incstack = 0
  5951                           	opt	stack 1
  5952                           ; Regs used in _Get_Temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5953                           ;Get_Temp@buffer stored from wreg
  5954                           	bcf	status, 5	;RP0=0, select bank0
  5955  0E70  1283               	bcf	status, 6	;RP1=0, select bank0
  5956  0E71  1303               	movwf	(Get_Temp@buffer)
  5957  0E72  00A4               	line	133
  5958                           	
  5959                           l3087:	
  5960  0E73                     ;Thermometer.c: 130: void Get_Temp(char* buffer);Thermometer.c: 131: {;Thermometer.c: 13
                                 2: int i;;Thermometer.c: 133: TRISA0 =1;
  5961                           	bsf	status, 5	;RP0=1, select bank1
  5962  0E73  1683               	bcf	status, 6	;RP1=0, select bank1
  5963  0E74  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
  5964  0E75  1405               	line	135
  5965                           	
  5966                           l3089:	
  5967  0E76                     ;Thermometer.c: 135: Reset();
  5968                           	fcall	_Reset
  5969  0E76  160A  118A  2222  120A  158A  	line	137
  5970                           ;Thermometer.c: 137: Write_Byte(0XCC);
  5971                           	movlw	low(0CCh)
  5972  0E7B  30CC               	fcall	_Write_Byte
  5973  0E7C  160A  118A  23E9  120A  158A  	line	139
  5974                           ;Thermometer.c: 139: Write_Byte(0X44);
  5975                           	movlw	low(044h)
  5976  0E81  3044               	fcall	_Write_Byte
  5977  0E82  160A  118A  23E9  120A  158A  	line	141
  5978                           	
  5979                           l3091:	
  5980  0E87                     ;Thermometer.c: 141: Temp[0] = numberTable[tenbit];
  5981                           	bcf	status, 5	;RP0=0, select bank0
  5982  0E87  1283               	bcf	status, 6	;RP1=0, select bank0
  5983  0E88  1303               	movf	(_tenbit),w
  5984  0E89  0866               	addlw	low(_numberTable|((0x0)<<8))&0ffh
  5985  0E8A  3EA0               	movwf	fsr0
  5986  0E8B  0084               	bcf	status, 7	;select IRP bank1
  5987  0E8C  1383               	movf	indf,w
  5988  0E8D  0800               	movwf	(??_Get_Temp+0)+0
  5989  0E8E  00A0               	movf	(??_Get_Temp+0)+0,w
  5990  0E8F  0820               	bsf	status, 5	;RP0=1, select bank1
  5991  0E90  1683               	bcf	status, 6	;RP1=0, select bank1
  5992  0E91  1303               	movwf	(_Temp)^080h
  5993  0E92  00E1               	line	142
  5994                           	
  5995                           l3093:	
  5996  0E93                     ;Thermometer.c: 142: Temp[1] = numberTable[intent];
  5997                           	bcf	status, 5	;RP0=0, select bank0
  5998  0E93  1283               	bcf	status, 6	;RP1=0, select bank0
  5999  0E94  1303               	movf	(_intent),w
  6000  0E95  0865               	addlw	low(_numberTable|((0x0)<<8))&0ffh
  6001  0E96  3EA0               	movwf	fsr0
  6002  0E97  0084               	movf	indf,w
  6003  0E98  0800               	movwf	(??_Get_Temp+0)+0
  6004  0E99  00A0               	movf	(??_Get_Temp+0)+0,w
  6005  0E9A  0820               	bsf	status, 5	;RP0=1, select bank1
  6006  0E9B  1683               	bcf	status, 6	;RP1=0, select bank1
  6007  0E9C  1303               	movwf	0+(_Temp)^080h+01h
  6008  0E9D  00E2               	line	143
  6009                           	
  6010                           l3095:	
  6011  0E9E                     ;Thermometer.c: 143: Temp[2] = '.';
  6012                           	movlw	low(02Eh)
  6013  0E9E  302E               	bcf	status, 5	;RP0=0, select bank0
  6014  0E9F  1283               	bcf	status, 6	;RP1=0, select bank0
  6015  0EA0  1303               	movwf	(??_Get_Temp+0)+0
  6016  0EA1  00A0               	movf	(??_Get_Temp+0)+0,w
  6017  0EA2  0820               	bsf	status, 5	;RP0=1, select bank1
  6018  0EA3  1683               	bcf	status, 6	;RP1=0, select bank1
  6019  0EA4  1303               	movwf	0+(_Temp)^080h+02h
  6020  0EA5  00E3               	line	144
  6021                           	
  6022                           l3097:	
  6023  0EA6                     ;Thermometer.c: 144: Temp[3] = numberTable[tenthbit];
  6024                           	bcf	status, 5	;RP0=0, select bank0
  6025  0EA6  1283               	bcf	status, 6	;RP1=0, select bank0
  6026  0EA7  1303               	movf	(_tenthbit),w
  6027  0EA8  0864               	addlw	low(_numberTable|((0x0)<<8))&0ffh
  6028  0EA9  3EA0               	movwf	fsr0
  6029  0EAA  0084               	movf	indf,w
  6030  0EAB  0800               	movwf	(??_Get_Temp+0)+0
  6031  0EAC  00A0               	movf	(??_Get_Temp+0)+0,w
  6032  0EAD  0820               	bsf	status, 5	;RP0=1, select bank1
  6033  0EAE  1683               	bcf	status, 6	;RP1=0, select bank1
  6034  0EAF  1303               	movwf	0+(_Temp)^080h+03h
  6035  0EB0  00E4               	line	145
  6036                           	
  6037                           l3099:	
  6038  0EB1                     ;Thermometer.c: 145: Temp[4] = numberTable[hundredthbit];
  6039                           	bcf	status, 5	;RP0=0, select bank0
  6040  0EB1  1283               	bcf	status, 6	;RP1=0, select bank0
  6041  0EB2  1303               	movf	(_hundredthbit),w
  6042  0EB3  0863               	addlw	low(_numberTable|((0x0)<<8))&0ffh
  6043  0EB4  3EA0               	movwf	fsr0
  6044  0EB5  0084               	movf	indf,w
  6045  0EB6  0800               	movwf	(??_Get_Temp+0)+0
  6046  0EB7  00A0               	movf	(??_Get_Temp+0)+0,w
  6047  0EB8  0820               	bsf	status, 5	;RP0=1, select bank1
  6048  0EB9  1683               	bcf	status, 6	;RP1=0, select bank1
  6049  0EBA  1303               	movwf	0+(_Temp)^080h+04h
  6050  0EBB  00E5               	line	147
  6051                           	
  6052                           l3101:	
  6053  0EBC                     ;Thermometer.c: 147: for(i = 0; i < 5; i++)
  6054                           	bcf	status, 5	;RP0=0, select bank0
  6055  0EBC  1283               	bcf	status, 6	;RP1=0, select bank0
  6056  0EBD  1303               	clrf	(Get_Temp@i)
  6057  0EBE  01A5               	clrf	(Get_Temp@i+1)
  6058  0EBF  01A6               	
  6059                           l3103:	
  6060  0EC0                     	movf	(Get_Temp@i+1),w
  6061  0EC0  0826               	xorlw	80h
  6062  0EC1  3A80               	movwf	btemp+1
  6063  0EC2  00FF               	movlw	(0)^80h
  6064  0EC3  3080               	subwf	btemp+1,w
  6065  0EC4  027F               	skipz
  6066  0EC5  1D03               	goto	u2285
  6067  0EC6  2EC9               	movlw	05h
  6068  0EC7  3005               	subwf	(Get_Temp@i),w
  6069  0EC8  0225               u2285:
  6070  0EC9                     
  6071                           	skipc
  6072  0EC9  1C03               	goto	u2281
  6073  0ECA  2ECC               	goto	u2280
  6074  0ECB  2ECD               u2281:
  6075  0ECC                     	goto	l3107
  6076  0ECC  2ECF               u2280:
  6077  0ECD                     	goto	l3113
  6078  0ECD  2EF2               	
  6079                           l3105:	
  6080  0ECE                     	goto	l3113
  6081  0ECE  2EF2               	
  6082                           l605:	
  6083  0ECF                     	line	149
  6084                           	
  6085                           l3107:	
  6086  0ECF                     ;Thermometer.c: 148: {;Thermometer.c: 149:     buffer[i] = Temp[i];
  6087                           	bcf	status, 5	;RP0=0, select bank0
  6088  0ECF  1283               	bcf	status, 6	;RP1=0, select bank0
  6089  0ED0  1303               	movf	(Get_Temp@i),w
  6090  0ED1  0825               	addlw	low(_Temp|((0x0)<<8))&0ffh
  6091  0ED2  3EE1               	movwf	fsr0
  6092  0ED3  0084               	bcf	status, 7	;select IRP bank1
  6093  0ED4  1383               	movf	indf,w
  6094  0ED5  0800               	movwf	(??_Get_Temp+0)+0
  6095  0ED6  00A0               	movf	(Get_Temp@i),w
  6096  0ED7  0825               	addwf	(Get_Temp@buffer),w
  6097  0ED8  0724               	movwf	(??_Get_Temp+1)+0
  6098  0ED9  00A1               	movf	0+(??_Get_Temp+1)+0,w
  6099  0EDA  0821               	movwf	fsr0
  6100  0EDB  0084               	movf	(??_Get_Temp+0)+0,w
  6101  0EDC  0820               	movwf	indf
  6102  0EDD  0080               	line	150
  6103                           	
  6104                           l3109:	
  6105  0EDE                     ;Thermometer.c: 150: }
  6106                           	movlw	01h
  6107  0EDE  3001               	addwf	(Get_Temp@i),f
  6108  0EDF  07A5               	skipnc
  6109  0EE0  1803               	incf	(Get_Temp@i+1),f
  6110  0EE1  0AA6               	movlw	0
  6111  0EE2  3000               	addwf	(Get_Temp@i+1),f
  6112  0EE3  07A6               	
  6113                           l3111:	
  6114  0EE4                     	movf	(Get_Temp@i+1),w
  6115  0EE4  0826               	xorlw	80h
  6116  0EE5  3A80               	movwf	btemp+1
  6117  0EE6  00FF               	movlw	(0)^80h
  6118  0EE7  3080               	subwf	btemp+1,w
  6119  0EE8  027F               	skipz
  6120  0EE9  1D03               	goto	u2295
  6121  0EEA  2EED               	movlw	05h
  6122  0EEB  3005               	subwf	(Get_Temp@i),w
  6123  0EEC  0225               u2295:
  6124  0EED                     
  6125                           	skipc
  6126  0EED  1C03               	goto	u2291
  6127  0EEE  2EF0               	goto	u2290
  6128  0EEF  2EF1               u2291:
  6129  0EF0                     	goto	l3107
  6130  0EF0  2ECF               u2290:
  6131  0EF1                     	goto	l3113
  6132  0EF1  2EF2               	
  6133                           l606:	
  6134  0EF2                     	line	151
  6135                           	
  6136                           l3113:	
  6137  0EF2                     ;Thermometer.c: 151: Delay(10,70);
  6138                           	movlw	low(046h)
  6139  0EF2  3046               	bcf	status, 5	;RP0=0, select bank0
  6140  0EF3  1283               	bcf	status, 6	;RP1=0, select bank0
  6141  0EF4  1303               	movwf	(??_Get_Temp+0)+0
  6142  0EF5  00A0               	movf	(??_Get_Temp+0)+0,w
  6143  0EF6  0820               	movwf	(Delay@y)
  6144  0EF7  00F0               	movlw	low(0Ah)
  6145  0EF8  300A               	fcall	_Delay
  6146  0EF9  160A  158A  2645  120A  158A  	line	153
  6147                           ;Thermometer.c: 153: Reset();
  6148                           	fcall	_Reset
  6149  0EFE  160A  118A  2222  120A  158A  	line	155
  6150                           ;Thermometer.c: 155: Write_Byte(0XCC);
  6151                           	movlw	low(0CCh)
  6152  0F03  30CC               	fcall	_Write_Byte
  6153  0F04  160A  118A  23E9  120A  158A  	line	157
  6154                           ;Thermometer.c: 157: Write_Byte(0XBE);
  6155                           	movlw	low(0BEh)
  6156  0F09  30BE               	fcall	_Write_Byte
  6157  0F0A  160A  118A  23E9  120A  158A  	line	159
  6158                           ;Thermometer.c: 159: TLB = Read_Byte();
  6159                           	fcall	_Read_Byte
  6160  0F0F  160A  118A  23A5  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  6161  0F14  1283               	bcf	status, 6	;RP1=0, select bank0
  6162  0F15  1303               	movwf	(??_Get_Temp+0)+0
  6163  0F16  00A0               	movf	(??_Get_Temp+0)+0,w
  6164  0F17  0820               	movwf	(_TLB)
  6165  0F18  00EA               	line	161
  6166                           ;Thermometer.c: 161: THB = Read_Byte();
  6167                           	fcall	_Read_Byte
  6168  0F19  160A  118A  23A5  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  6169  0F1E  1283               	bcf	status, 6	;RP1=0, select bank0
  6170  0F1F  1303               	movwf	(??_Get_Temp+0)+0
  6171  0F20  00A0               	movf	(??_Get_Temp+0)+0,w
  6172  0F21  0820               	movwf	(_THB)
  6173  0F22  00E9               	line	163
  6174                           	
  6175                           l3115:	
  6176  0F23                     ;Thermometer.c: 163: TRISA0 =1;
  6177                           	bsf	status, 5	;RP0=1, select bank1
  6178  0F23  1683               	bcf	status, 6	;RP1=0, select bank1
  6179  0F24  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
  6180  0F25  1405               	line	165
  6181                           	
  6182                           l3117:	
  6183  0F26                     ;Thermometer.c: 165: TempInt=(TLB>>4)|((THB<<4)&(0X3f));
  6184                           	bcf	status, 5	;RP0=0, select bank0
  6185  0F26  1283               	bcf	status, 6	;RP1=0, select bank0
  6186  0F27  1303               	movf	(_THB),w
  6187  0F28  0869               	movwf	(??_Get_Temp+0)+0
  6188  0F29  00A0               	movlw	04h
  6189  0F2A  3004               u2305:
  6190  0F2B                     	clrc
  6191  0F2B  1003               	rlf	(??_Get_Temp+0)+0,f
  6192  0F2C  0DA0               	addlw	-1
  6193  0F2D  3EFF               	skipz
  6194  0F2E  1D03               	goto	u2305
  6195  0F2F  2F2B               	movlw	low(03Fh)
  6196  0F30  303F               	andwf	0+(??_Get_Temp+0)+0,w
  6197  0F31  0520               	movwf	(??_Get_Temp+1)+0
  6198  0F32  00A1               	movf	(_TLB),w
  6199  0F33  086A               	movwf	(??_Get_Temp+2)+0
  6200  0F34  00A2               	movlw	04h
  6201  0F35  3004               u2315:
  6202  0F36                     	clrc
  6203  0F36  1003               	rrf	(??_Get_Temp+2)+0,f
  6204  0F37  0CA2               	addlw	-1
  6205  0F38  3EFF               	skipz
  6206  0F39  1D03               	goto	u2315
  6207  0F3A  2F36               	movf	0+(??_Get_Temp+2)+0,w
  6208  0F3B  0822               	iorwf	0+(??_Get_Temp+1)+0,w
  6209  0F3C  0421               	movwf	(??_Get_Temp+3)+0
  6210  0F3D  00A3               	movf	(??_Get_Temp+3)+0,w
  6211  0F3E  0823               	movwf	(_TempInt)
  6212  0F3F  00E8               	line	167
  6213                           	
  6214                           l3119:	
  6215  0F40                     ;Thermometer.c: 167: TempDec=TLB<<4;
  6216                           	movf	(_TLB),w
  6217  0F40  086A               	movwf	(??_Get_Temp+0)+0
  6218  0F41  00A0               	movlw	(04h)-1
  6219  0F42  3003               u2325:
  6220  0F43                     	clrc
  6221  0F43  1003               	rlf	(??_Get_Temp+0)+0,f
  6222  0F44  0DA0               	addlw	-1
  6223  0F45  3EFF               	skipz
  6224  0F46  1D03               	goto	u2325
  6225  0F47  2F43               	clrc
  6226  0F48  1003               	rlf	(??_Get_Temp+0)+0,w
  6227  0F49  0D20               	movwf	(??_Get_Temp+1)+0
  6228  0F4A  00A1               	movf	(??_Get_Temp+1)+0,w
  6229  0F4B  0821               	movwf	(_TempDec)
  6230  0F4C  00E7               	line	169
  6231                           	
  6232                           l3121:	
  6233  0F4D                     ;Thermometer.c: 169: if(TempInt>100) TempInt = TempInt/100;
  6234                           	movlw	low(065h)
  6235  0F4D  3065               	subwf	(_TempInt),w
  6236  0F4E  0268               	skipc
  6237  0F4F  1C03               	goto	u2331
  6238  0F50  2F52               	goto	u2330
  6239  0F51  2F53               u2331:
  6240  0F52                     	goto	l607
  6241  0F52  2F69               u2330:
  6242  0F53                     	
  6243                           l3123:	
  6244  0F53                     	movlw	064h
  6245  0F53  3064               	movwf	(___awdiv@divisor)
  6246  0F54  00F0               	movlw	0
  6247  0F55  3000               	movwf	((___awdiv@divisor))+1
  6248  0F56  00F1               	movf	(_TempInt),w
  6249  0F57  0868               	movwf	(??_Get_Temp+0)+0
  6250  0F58  00A0               	clrf	(??_Get_Temp+0)+0+1
  6251  0F59  01A1               	movf	0+(??_Get_Temp+0)+0,w
  6252  0F5A  0820               	movwf	(___awdiv@dividend)
  6253  0F5B  00F2               	movf	1+(??_Get_Temp+0)+0,w
  6254  0F5C  0821               	movwf	(___awdiv@dividend+1)
  6255  0F5D  00F3               	fcall	___awdiv
  6256  0F5E  160A  118A  25C0  120A  158A  	movf	(0+(?___awdiv)),w
  6257  0F63  0870               	bcf	status, 5	;RP0=0, select bank0
  6258  0F64  1283               	bcf	status, 6	;RP1=0, select bank0
  6259  0F65  1303               	movwf	(??_Get_Temp+2)+0
  6260  0F66  00A2               	movf	(??_Get_Temp+2)+0,w
  6261  0F67  0822               	movwf	(_TempInt)
  6262  0F68  00E8               	
  6263                           l607:	
  6264  0F69                     	line	171
  6265                           ;Thermometer.c: 171: intent=TempInt%10;
  6266                           	movlw	0Ah
  6267  0F69  300A               	movwf	(___awmod@divisor)
  6268  0F6A  00F0               	movlw	0
  6269  0F6B  3000               	movwf	((___awmod@divisor))+1
  6270  0F6C  00F1               	movf	(_TempInt),w
  6271  0F6D  0868               	movwf	(??_Get_Temp+0)+0
  6272  0F6E  00A0               	clrf	(??_Get_Temp+0)+0+1
  6273  0F6F  01A1               	movf	0+(??_Get_Temp+0)+0,w
  6274  0F70  0820               	movwf	(___awmod@dividend)
  6275  0F71  00F2               	movf	1+(??_Get_Temp+0)+0,w
  6276  0F72  0821               	movwf	(___awmod@dividend+1)
  6277  0F73  00F3               	fcall	___awmod
  6278  0F74  160A  118A  255D  120A  158A  	movf	(0+(?___awmod)),w
  6279  0F79  0870               	bcf	status, 5	;RP0=0, select bank0
  6280  0F7A  1283               	bcf	status, 6	;RP1=0, select bank0
  6281  0F7B  1303               	movwf	(??_Get_Temp+2)+0
  6282  0F7C  00A2               	movf	(??_Get_Temp+2)+0,w
  6283  0F7D  0822               	movwf	(_intent)
  6284  0F7E  00E5               	line	173
  6285                           ;Thermometer.c: 173: tenbit=TempInt/10;
  6286                           	movlw	0Ah
  6287  0F7F  300A               	movwf	(___awdiv@divisor)
  6288  0F80  00F0               	movlw	0
  6289  0F81  3000               	movwf	((___awdiv@divisor))+1
  6290  0F82  00F1               	movf	(_TempInt),w
  6291  0F83  0868               	movwf	(??_Get_Temp+0)+0
  6292  0F84  00A0               	clrf	(??_Get_Temp+0)+0+1
  6293  0F85  01A1               	movf	0+(??_Get_Temp+0)+0,w
  6294  0F86  0820               	movwf	(___awdiv@dividend)
  6295  0F87  00F2               	movf	1+(??_Get_Temp+0)+0,w
  6296  0F88  0821               	movwf	(___awdiv@dividend+1)
  6297  0F89  00F3               	fcall	___awdiv
  6298  0F8A  160A  118A  25C0  120A  158A  	movf	(0+(?___awdiv)),w
  6299  0F8F  0870               	bcf	status, 5	;RP0=0, select bank0
  6300  0F90  1283               	bcf	status, 6	;RP1=0, select bank0
  6301  0F91  1303               	movwf	(??_Get_Temp+2)+0
  6302  0F92  00A2               	movf	(??_Get_Temp+2)+0,w
  6303  0F93  0822               	movwf	(_tenbit)
  6304  0F94  00E6               	line	175
  6305                           	
  6306                           l3125:	
  6307  0F95                     ;Thermometer.c: 175: TempBCD=0;
  6308                           	clrf	(_TempBCD)
  6309  0F95  01D6               	clrf	(_TempBCD+1)
  6310  0F96  01D7               	line	177
  6311                           	
  6312                           l3127:	
  6313  0F97                     ;Thermometer.c: 177: if (TempDec & 0x80) TempBCD=TempBCD+5000;
  6314                           	btfss	(_TempDec),(7)&7
  6315  0F97  1FE7               	goto	u2341
  6316  0F98  2F9A               	goto	u2340
  6317  0F99  2F9B               u2341:
  6318  0F9A                     	goto	l3131
  6319  0F9A  2FA4               u2340:
  6320  0F9B                     	
  6321                           l3129:	
  6322  0F9B                     	movf	(_TempBCD),w
  6323  0F9B  0856               	addlw	low(01388h)
  6324  0F9C  3E88               	movwf	(_TempBCD)
  6325  0F9D  00D6               	movf	(_TempBCD+1),w
  6326  0F9E  0857               	skipnc
  6327  0F9F  1803               	addlw	1
  6328  0FA0  3E01               	addlw	high(01388h)
  6329  0FA1  3E13               	movwf	1+(_TempBCD)
  6330  0FA2  00D7               	goto	l3131
  6331  0FA3  2FA4               	
  6332                           l608:	
  6333  0FA4                     	line	178
  6334                           	
  6335                           l3131:	
  6336  0FA4                     ;Thermometer.c: 178: if (TempDec & 0x40) TempBCD=TempBCD+2500;
  6337                           	btfss	(_TempDec),(6)&7
  6338  0FA4  1F67               	goto	u2351
  6339  0FA5  2FA7               	goto	u2350
  6340  0FA6  2FA8               u2351:
  6341  0FA7                     	goto	l3135
  6342  0FA7  2FB1               u2350:
  6343  0FA8                     	
  6344                           l3133:	
  6345  0FA8                     	movf	(_TempBCD),w
  6346  0FA8  0856               	addlw	low(09C4h)
  6347  0FA9  3EC4               	movwf	(_TempBCD)
  6348  0FAA  00D6               	movf	(_TempBCD+1),w
  6349  0FAB  0857               	skipnc
  6350  0FAC  1803               	addlw	1
  6351  0FAD  3E01               	addlw	high(09C4h)
  6352  0FAE  3E09               	movwf	1+(_TempBCD)
  6353  0FAF  00D7               	goto	l3135
  6354  0FB0  2FB1               	
  6355                           l609:	
  6356  0FB1                     	line	179
  6357                           	
  6358                           l3135:	
  6359  0FB1                     ;Thermometer.c: 179: if (TempDec & 0x20) TempBCD=TempBCD+1250;
  6360                           	btfss	(_TempDec),(5)&7
  6361  0FB1  1EE7               	goto	u2361
  6362  0FB2  2FB4               	goto	u2360
  6363  0FB3  2FB5               u2361:
  6364  0FB4                     	goto	l3139
  6365  0FB4  2FBE               u2360:
  6366  0FB5                     	
  6367                           l3137:	
  6368  0FB5                     	movf	(_TempBCD),w
  6369  0FB5  0856               	addlw	low(04E2h)
  6370  0FB6  3EE2               	movwf	(_TempBCD)
  6371  0FB7  00D6               	movf	(_TempBCD+1),w
  6372  0FB8  0857               	skipnc
  6373  0FB9  1803               	addlw	1
  6374  0FBA  3E01               	addlw	high(04E2h)
  6375  0FBB  3E04               	movwf	1+(_TempBCD)
  6376  0FBC  00D7               	goto	l3139
  6377  0FBD  2FBE               	
  6378                           l610:	
  6379  0FBE                     	line	180
  6380                           	
  6381                           l3139:	
  6382  0FBE                     ;Thermometer.c: 180: if (TempDec & 0x10) TempBCD=TempBCD+625;
  6383                           	btfss	(_TempDec),(4)&7
  6384  0FBE  1E67               	goto	u2371
  6385  0FBF  2FC1               	goto	u2370
  6386  0FC0  2FC2               u2371:
  6387  0FC1                     	goto	l3143
  6388  0FC1  2FCB               u2370:
  6389  0FC2                     	
  6390                           l3141:	
  6391  0FC2                     	movf	(_TempBCD),w
  6392  0FC2  0856               	addlw	low(0271h)
  6393  0FC3  3E71               	movwf	(_TempBCD)
  6394  0FC4  00D6               	movf	(_TempBCD+1),w
  6395  0FC5  0857               	skipnc
  6396  0FC6  1803               	addlw	1
  6397  0FC7  3E01               	addlw	high(0271h)
  6398  0FC8  3E02               	movwf	1+(_TempBCD)
  6399  0FC9  00D7               	goto	l3143
  6400  0FCA  2FCB               	
  6401                           l611:	
  6402  0FCB                     	line	182
  6403                           	
  6404                           l3143:	
  6405  0FCB                     ;Thermometer.c: 182: tenthbit=TempBCD/1000;
  6406                           	movlw	0E8h
  6407  0FCB  30E8               	movwf	(___lwdiv@divisor)
  6408  0FCC  00F6               	movlw	03h
  6409  0FCD  3003               	movwf	((___lwdiv@divisor))+1
  6410  0FCE  00F7               	movf	(_TempBCD+1),w
  6411  0FCF  0857               	movwf	(___lwdiv@dividend+1)
  6412  0FD0  00F9               	movf	(_TempBCD),w
  6413  0FD1  0856               	movwf	(___lwdiv@dividend)
  6414  0FD2  00F8               	fcall	___lwdiv
  6415  0FD3  160A  118A  2474  120A  158A  	movf	(0+(?___lwdiv)),w
  6416  0FD8  0876               	bcf	status, 5	;RP0=0, select bank0
  6417  0FD9  1283               	bcf	status, 6	;RP1=0, select bank0
  6418  0FDA  1303               	movwf	(??_Get_Temp+0)+0
  6419  0FDB  00A0               	movf	(??_Get_Temp+0)+0,w
  6420  0FDC  0820               	movwf	(_tenthbit)
  6421  0FDD  00E4               	line	184
  6422                           	
  6423                           l3145:	
  6424  0FDE                     ;Thermometer.c: 184: hundredthbit=(TempBCD%1000)/100;
  6425                           	movlw	064h
  6426  0FDE  3064               	movwf	(___lwdiv@divisor)
  6427  0FDF  00F6               	movlw	0
  6428  0FE0  3000               	movwf	((___lwdiv@divisor))+1
  6429  0FE1  00F7               	movf	(_TempBCD+1),w
  6430  0FE2  0857               	movwf	(___lwmod@dividend+1)
  6431  0FE3  00F3               	movf	(_TempBCD),w
  6432  0FE4  0856               	movwf	(___lwmod@dividend)
  6433  0FE5  00F2               	movlw	0E8h
  6434  0FE6  30E8               	movwf	(___lwmod@divisor)
  6435  0FE7  00F0               	movlw	03h
  6436  0FE8  3003               	movwf	((___lwmod@divisor))+1
  6437  0FE9  00F1               	fcall	___lwmod
  6438  0FEA  160A  118A  22DE  120A  158A  	movf	(1+(?___lwmod)),w
  6439  0FEF  0871               	movwf	(___lwdiv@dividend+1)
  6440  0FF0  00F9               	movf	(0+(?___lwmod)),w
  6441  0FF1  0870               	movwf	(___lwdiv@dividend)
  6442  0FF2  00F8               	fcall	___lwdiv
  6443  0FF3  160A  118A  2474  120A  158A  	movf	(0+(?___lwdiv)),w
  6444  0FF8  0876               	bcf	status, 5	;RP0=0, select bank0
  6445  0FF9  1283               	bcf	status, 6	;RP1=0, select bank0
  6446  0FFA  1303               	movwf	(??_Get_Temp+0)+0
  6447  0FFB  00A0               	movf	(??_Get_Temp+0)+0,w
  6448  0FFC  0820               	movwf	(_hundredthbit)
  6449  0FFD  00E3               	line	185
  6450                           	
  6451                           l3147:	
  6452  0FFE                     ;Thermometer.c: 185: __nop();
  6453                           	opt	asmopt_push
  6454                           	opt	asmopt_off
  6455                           	nop
  6456  0FFE  0000               	opt	asmopt_pop
  6457                           	line	186
  6458                           	
  6459                           l612:	
  6460  0FFF                     	return
  6461  0FFF  0008               	opt stack 0
  6462                           GLOBAL	__end_of_Get_Temp
  6463                           	__end_of_Get_Temp:
  6464  1000                     	signat	_Get_Temp,4217
  6465                           	global	___lwmod
  6466                           
  6467 ;; *************** function ___lwmod *****************
  6468 ;; Defined at:
  6469 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  divisor         2    0[COMMON] unsigned int 
  6472 ;;  dividend        2    2[COMMON] unsigned int 
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;  counter         1    5[COMMON] unsigned char 
  6475 ;; Return value:  Size  Location     Type
  6476 ;;                  2    0[COMMON] unsigned int 
  6477 ;; Registers used:
  6478 ;;		wreg, status,2, status,0
  6479 ;; Tracked objects:
  6480 ;;		On entry : 0/0
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6484 ;;      Params:         4       0       0       0       0
  6485 ;;      Locals:         1       0       0       0       0
  6486 ;;      Temps:          1       0       0       0       0
  6487 ;;      Totals:         6       0       0       0       0
  6488 ;;Total ram usage:        6 bytes
  6489 ;; Hardware stack levels used:    1
  6490 ;; This function calls:
  6491 ;;		Nothing
  6492 ;; This function is called by:
  6493 ;;		_Get_Temp
  6494 ;; This function uses a non-reentrant model
  6495 ;;
  6496                           psect	text12,local,class=CODE,delta=2,merge=1,group=1
  6497                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  6498                           	line	5
  6499                           global __ptext12
  6500                           __ptext12:	;psect for function ___lwmod
  6501  12DE                     psect	text12
  6502                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  6503                           	line	5
  6504                           	global	__size_of___lwmod
  6505                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6506  0041                     	
  6507                           ___lwmod:	
  6508  12DE                     ;incstack = 0
  6509                           	opt	stack 2
  6510                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6511                           	line	12
  6512                           	
  6513                           l3027:	
  6514  12DE                     	movf	((___lwmod@divisor)),w
  6515  12DE  0870               iorwf	((___lwmod@divisor+1)),w
  6516  12DF  0471               	btfsc	status,2
  6517  12E0  1903               	goto	u2191
  6518  12E1  2AE3               	goto	u2190
  6519  12E2  2AE4               u2191:
  6520  12E3                     	goto	l3045
  6521  12E3  2B19               u2190:
  6522  12E4                     	line	13
  6523                           	
  6524                           l3029:	
  6525  12E4                     	clrf	(___lwmod@counter)
  6526  12E4  01F5               	incf	(___lwmod@counter),f
  6527  12E5  0AF5               	line	14
  6528                           	goto	l3035
  6529  12E6  2AF3               	
  6530                           l975:	
  6531  12E7                     	line	15
  6532                           	
  6533                           l3031:	
  6534  12E7                     	movlw	01h
  6535  12E7  3001               	
  6536                           u2205:
  6537  12E8                     	clrc
  6538  12E8  1003               	rlf	(___lwmod@divisor),f
  6539  12E9  0DF0               	rlf	(___lwmod@divisor+1),f
  6540  12EA  0DF1               	addlw	-1
  6541  12EB  3EFF               	skipz
  6542  12EC  1D03               	goto	u2205
  6543  12ED  2AE8               	line	16
  6544                           	
  6545                           l3033:	
  6546  12EE                     	movlw	low(01h)
  6547  12EE  3001               	movwf	(??___lwmod+0)+0
  6548  12EF  00F4               	movf	(??___lwmod+0)+0,w
  6549  12F0  0874               	addwf	(___lwmod@counter),f
  6550  12F1  07F5               	goto	l3035
  6551  12F2  2AF3               	line	17
  6552                           	
  6553                           l974:	
  6554  12F3                     	line	14
  6555                           	
  6556                           l3035:	
  6557  12F3                     	btfss	(___lwmod@divisor+1),(15)&7
  6558  12F3  1FF1               	goto	u2211
  6559  12F4  2AF6               	goto	u2210
  6560  12F5  2AF7               u2211:
  6561  12F6                     	goto	l3031
  6562  12F6  2AE7               u2210:
  6563  12F7                     	goto	l3037
  6564  12F7  2AF9               	
  6565                           l976:	
  6566  12F8                     	goto	l3037
  6567  12F8  2AF9               	line	18
  6568                           	
  6569                           l977:	
  6570  12F9                     	line	19
  6571                           	
  6572                           l3037:	
  6573  12F9                     	movf	(___lwmod@divisor+1),w
  6574  12F9  0871               	subwf	(___lwmod@dividend+1),w
  6575  12FA  0273               	skipz
  6576  12FB  1D03               	goto	u2225
  6577  12FC  2AFF               	movf	(___lwmod@divisor),w
  6578  12FD  0870               	subwf	(___lwmod@dividend),w
  6579  12FE  0272               u2225:
  6580  12FF                     	skipc
  6581  12FF  1C03               	goto	u2221
  6582  1300  2B02               	goto	u2220
  6583  1301  2B03               u2221:
  6584  1302                     	goto	l3041
  6585  1302  2B0A               u2220:
  6586  1303                     	line	20
  6587                           	
  6588                           l3039:	
  6589  1303                     	movf	(___lwmod@divisor),w
  6590  1303  0870               	subwf	(___lwmod@dividend),f
  6591  1304  02F2               	movf	(___lwmod@divisor+1),w
  6592  1305  0871               	skipc
  6593  1306  1C03               	decf	(___lwmod@dividend+1),f
  6594  1307  03F3               	subwf	(___lwmod@dividend+1),f
  6595  1308  02F3               	goto	l3041
  6596  1309  2B0A               	
  6597                           l978:	
  6598  130A                     	line	21
  6599                           	
  6600                           l3041:	
  6601  130A                     	movlw	01h
  6602  130A  3001               	
  6603                           u2235:
  6604  130B                     	clrc
  6605  130B  1003               	rrf	(___lwmod@divisor+1),f
  6606  130C  0CF1               	rrf	(___lwmod@divisor),f
  6607  130D  0CF0               	addlw	-1
  6608  130E  3EFF               	skipz
  6609  130F  1D03               	goto	u2235
  6610  1310  2B0B               	line	22
  6611                           	
  6612                           l3043:	
  6613  1311                     	movlw	01h
  6614  1311  3001               	subwf	(___lwmod@counter),f
  6615  1312  02F5               	btfss	status,2
  6616  1313  1D03               	goto	u2241
  6617  1314  2B16               	goto	u2240
  6618  1315  2B17               u2241:
  6619  1316                     	goto	l3037
  6620  1316  2AF9               u2240:
  6621  1317                     	goto	l3045
  6622  1317  2B19               	
  6623                           l979:	
  6624  1318                     	goto	l3045
  6625  1318  2B19               	line	23
  6626                           	
  6627                           l973:	
  6628  1319                     	line	24
  6629                           	
  6630                           l3045:	
  6631  1319                     	movf	(___lwmod@dividend+1),w
  6632  1319  0873               	movwf	(?___lwmod+1)
  6633  131A  00F1               	movf	(___lwmod@dividend),w
  6634  131B  0872               	movwf	(?___lwmod)
  6635  131C  00F0               	goto	l980
  6636  131D  2B1E               	
  6637                           l3047:	
  6638  131E                     	line	25
  6639                           	
  6640                           l980:	
  6641  131E                     	return
  6642  131E  0008               	opt stack 0
  6643                           GLOBAL	__end_of___lwmod
  6644                           	__end_of___lwmod:
  6645  131F                     	signat	___lwmod,8314
  6646                           	global	___lwdiv
  6647                           
  6648 ;; *************** function ___lwdiv *****************
  6649 ;; Defined at:
  6650 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;  divisor         2    6[COMMON] unsigned int 
  6653 ;;  dividend        2    8[COMMON] unsigned int 
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;  quotient        2   11[COMMON] unsigned int 
  6656 ;;  counter         1   13[COMMON] unsigned char 
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  2    6[COMMON] unsigned int 
  6659 ;; Registers used:
  6660 ;;		wreg, status,2, status,0
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6666 ;;      Params:         4       0       0       0       0
  6667 ;;      Locals:         3       0       0       0       0
  6668 ;;      Temps:          1       0       0       0       0
  6669 ;;      Totals:         8       0       0       0       0
  6670 ;;Total ram usage:        8 bytes
  6671 ;; Hardware stack levels used:    1
  6672 ;; This function calls:
  6673 ;;		Nothing
  6674 ;; This function is called by:
  6675 ;;		_Get_Temp
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           psect	text13,local,class=CODE,delta=2,merge=1,group=1
  6679                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  6680                           	line	5
  6681                           global __ptext13
  6682                           __ptext13:	;psect for function ___lwdiv
  6683  1474                     psect	text13
  6684                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  6685                           	line	5
  6686                           	global	__size_of___lwdiv
  6687                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  6688  004B                     	
  6689                           ___lwdiv:	
  6690  1474                     ;incstack = 0
  6691                           	opt	stack 2
  6692                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6693                           	line	13
  6694                           	
  6695                           l3001:	
  6696  1474                     	clrf	(___lwdiv@quotient)
  6697  1474  01FB               	clrf	(___lwdiv@quotient+1)
  6698  1475  01FC               	line	14
  6699                           	
  6700                           l3003:	
  6701  1476                     	movf	((___lwdiv@divisor)),w
  6702  1476  0876               iorwf	((___lwdiv@divisor+1)),w
  6703  1477  0477               	btfsc	status,2
  6704  1478  1903               	goto	u2121
  6705  1479  2C7B               	goto	u2120
  6706  147A  2C7C               u2121:
  6707  147B                     	goto	l3023
  6708  147B  2CB9               u2120:
  6709  147C                     	line	15
  6710                           	
  6711                           l3005:	
  6712  147C                     	clrf	(___lwdiv@counter)
  6713  147C  01FD               	incf	(___lwdiv@counter),f
  6714  147D  0AFD               	line	16
  6715                           	goto	l3011
  6716  147E  2C8B               	
  6717                           l965:	
  6718  147F                     	line	17
  6719                           	
  6720                           l3007:	
  6721  147F                     	movlw	01h
  6722  147F  3001               	
  6723                           u2135:
  6724  1480                     	clrc
  6725  1480  1003               	rlf	(___lwdiv@divisor),f
  6726  1481  0DF6               	rlf	(___lwdiv@divisor+1),f
  6727  1482  0DF7               	addlw	-1
  6728  1483  3EFF               	skipz
  6729  1484  1D03               	goto	u2135
  6730  1485  2C80               	line	18
  6731                           	
  6732                           l3009:	
  6733  1486                     	movlw	low(01h)
  6734  1486  3001               	movwf	(??___lwdiv+0)+0
  6735  1487  00FA               	movf	(??___lwdiv+0)+0,w
  6736  1488  087A               	addwf	(___lwdiv@counter),f
  6737  1489  07FD               	goto	l3011
  6738  148A  2C8B               	line	19
  6739                           	
  6740                           l964:	
  6741  148B                     	line	16
  6742                           	
  6743                           l3011:	
  6744  148B                     	btfss	(___lwdiv@divisor+1),(15)&7
  6745  148B  1FF7               	goto	u2141
  6746  148C  2C8E               	goto	u2140
  6747  148D  2C8F               u2141:
  6748  148E                     	goto	l3007
  6749  148E  2C7F               u2140:
  6750  148F                     	goto	l3013
  6751  148F  2C91               	
  6752                           l966:	
  6753  1490                     	goto	l3013
  6754  1490  2C91               	line	20
  6755                           	
  6756                           l967:	
  6757  1491                     	line	21
  6758                           	
  6759                           l3013:	
  6760  1491                     	movlw	01h
  6761  1491  3001               	
  6762                           u2155:
  6763  1492                     	clrc
  6764  1492  1003               	rlf	(___lwdiv@quotient),f
  6765  1493  0DFB               	rlf	(___lwdiv@quotient+1),f
  6766  1494  0DFC               	addlw	-1
  6767  1495  3EFF               	skipz
  6768  1496  1D03               	goto	u2155
  6769  1497  2C92               	line	22
  6770                           	movf	(___lwdiv@divisor+1),w
  6771  1498  0877               	subwf	(___lwdiv@dividend+1),w
  6772  1499  0279               	skipz
  6773  149A  1D03               	goto	u2165
  6774  149B  2C9E               	movf	(___lwdiv@divisor),w
  6775  149C  0876               	subwf	(___lwdiv@dividend),w
  6776  149D  0278               u2165:
  6777  149E                     	skipc
  6778  149E  1C03               	goto	u2161
  6779  149F  2CA1               	goto	u2160
  6780  14A0  2CA2               u2161:
  6781  14A1                     	goto	l3019
  6782  14A1  2CAA               u2160:
  6783  14A2                     	line	23
  6784                           	
  6785                           l3015:	
  6786  14A2                     	movf	(___lwdiv@divisor),w
  6787  14A2  0876               	subwf	(___lwdiv@dividend),f
  6788  14A3  02F8               	movf	(___lwdiv@divisor+1),w
  6789  14A4  0877               	skipc
  6790  14A5  1C03               	decf	(___lwdiv@dividend+1),f
  6791  14A6  03F9               	subwf	(___lwdiv@dividend+1),f
  6792  14A7  02F9               	line	24
  6793                           	
  6794                           l3017:	
  6795  14A8                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  6796  14A8  147B               	goto	l3019
  6797  14A9  2CAA               	line	25
  6798                           	
  6799                           l968:	
  6800  14AA                     	line	26
  6801                           	
  6802                           l3019:	
  6803  14AA                     	movlw	01h
  6804  14AA  3001               	
  6805                           u2175:
  6806  14AB                     	clrc
  6807  14AB  1003               	rrf	(___lwdiv@divisor+1),f
  6808  14AC  0CF7               	rrf	(___lwdiv@divisor),f
  6809  14AD  0CF6               	addlw	-1
  6810  14AE  3EFF               	skipz
  6811  14AF  1D03               	goto	u2175
  6812  14B0  2CAB               	line	27
  6813                           	
  6814                           l3021:	
  6815  14B1                     	movlw	01h
  6816  14B1  3001               	subwf	(___lwdiv@counter),f
  6817  14B2  02FD               	btfss	status,2
  6818  14B3  1D03               	goto	u2181
  6819  14B4  2CB6               	goto	u2180
  6820  14B5  2CB7               u2181:
  6821  14B6                     	goto	l3013
  6822  14B6  2C91               u2180:
  6823  14B7                     	goto	l3023
  6824  14B7  2CB9               	
  6825                           l969:	
  6826  14B8                     	goto	l3023
  6827  14B8  2CB9               	line	28
  6828                           	
  6829                           l963:	
  6830  14B9                     	line	29
  6831                           	
  6832                           l3023:	
  6833  14B9                     	movf	(___lwdiv@quotient+1),w
  6834  14B9  087C               	movwf	(?___lwdiv+1)
  6835  14BA  00F7               	movf	(___lwdiv@quotient),w
  6836  14BB  087B               	movwf	(?___lwdiv)
  6837  14BC  00F6               	goto	l970
  6838  14BD  2CBE               	
  6839                           l3025:	
  6840  14BE                     	line	30
  6841                           	
  6842                           l970:	
  6843  14BE                     	return
  6844  14BE  0008               	opt stack 0
  6845                           GLOBAL	__end_of___lwdiv
  6846                           	__end_of___lwdiv:
  6847  14BF                     	signat	___lwdiv,8314
  6848                           	global	_Write_Byte
  6849                           
  6850 ;; *************** function _Write_Byte *****************
  6851 ;; Defined at:
  6852 ;;		line 68 in file "Thermometer.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  val             1    wreg     unsigned char 
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;  val             1    7[COMMON] unsigned char 
  6857 ;;  i               1    8[COMMON] unsigned char 
  6858 ;;  temp            1    6[COMMON] unsigned char 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  1    wreg      void 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2, status,0, pclath, cstack
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6868 ;;      Params:         0       0       0       0       0
  6869 ;;      Locals:         3       0       0       0       0
  6870 ;;      Temps:          2       0       0       0       0
  6871 ;;      Totals:         5       0       0       0       0
  6872 ;;Total ram usage:        5 bytes
  6873 ;; Hardware stack levels used:    1
  6874 ;; Hardware stack levels required when called:    1
  6875 ;; This function calls:
  6876 ;;		_Delay
  6877 ;; This function is called by:
  6878 ;;		_Get_Temp
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  6882                           	file	"Thermometer.c"
  6883                           	line	68
  6884                           global __ptext14
  6885                           __ptext14:	;psect for function _Write_Byte
  6886  13E9                     psect	text14
  6887                           	file	"Thermometer.c"
  6888                           	line	68
  6889                           	global	__size_of_Write_Byte
  6890                           	__size_of_Write_Byte	equ	__end_of_Write_Byte-_Write_Byte
  6891  0044                     	
  6892                           _Write_Byte:	
  6893  13E9                     ;incstack = 0
  6894                           	opt	stack 1
  6895                           ; Regs used in _Write_Byte: [wreg+status,2+status,0+pclath+cstack]
  6896                           ;Write_Byte@val stored from wreg
  6897                           	movwf	(Write_Byte@val)
  6898  13E9  00F7               	line	72
  6899                           	
  6900                           l2863:	
  6901  13EA                     ;Thermometer.c: 68: void Write_Byte(unsigned char val);Thermometer.c: 69: {;Thermometer.
                                 c: 70:  unsigned char i;;Thermometer.c: 71:  unsigned char temp;;Thermometer.c: 72:  for
                                 (i=8;i>0;i--)
  6902                           	movlw	low(08h)
  6903  13EA  3008               	movwf	(??_Write_Byte+0)+0
  6904  13EB  00F4               	movf	(??_Write_Byte+0)+0,w
  6905  13EC  0874               	movwf	(Write_Byte@i)
  6906  13ED  00F8               	
  6907                           l2865:	
  6908  13EE                     	movf	((Write_Byte@i)),w
  6909  13EE  0878               	btfss	status,2
  6910  13EF  1D03               	goto	u1961
  6911  13F0  2BF2               	goto	u1960
  6912  13F1  2BF3               u1961:
  6913  13F2                     	goto	l2869
  6914  13F2  2BF5               u1960:
  6915  13F3                     	goto	l594
  6916  13F3  2C2C               	
  6917                           l2867:	
  6918  13F4                     	goto	l594
  6919  13F4  2C2C               	
  6920                           l591:	
  6921  13F5                     	line	75
  6922                           	
  6923                           l2869:	
  6924  13F5                     ;Thermometer.c: 73:  {;Thermometer.c: 75:    temp=val&0x01;
  6925                           	movf	(Write_Byte@val),w
  6926  13F5  0877               	andlw	01h
  6927  13F6  3901               	movwf	(??_Write_Byte+0)+0
  6928  13F7  00F4               	movf	(??_Write_Byte+0)+0,w
  6929  13F8  0874               	movwf	(Write_Byte@temp)
  6930  13F9  00F6               	line	77
  6931                           	
  6932                           l2871:	
  6933  13FA                     ;Thermometer.c: 77:    RA0 = 0; TRISA0 = 0;
  6934                           	bcf	status, 5	;RP0=0, select bank0
  6935  13FA  1283               	bcf	status, 6	;RP1=0, select bank0
  6936  13FB  1303               	bcf	(40/8),(40)&7	;volatile
  6937  13FC  1005               	
  6938                           l2873:	
  6939  13FD                     	bsf	status, 5	;RP0=1, select bank1
  6940  13FD  1683               	bcf	status, 6	;RP1=0, select bank1
  6941  13FE  1303               	bcf	(1064/8)^080h,(1064)&7	;volatile
  6942  13FF  1005               	line	78
  6943                           	
  6944                           l2875:	
  6945  1400                     ;Thermometer.c: 78:    __nop();
  6946                           	opt	asmopt_push
  6947                           	opt	asmopt_off
  6948                           	nop
  6949  1400  0000               	opt	asmopt_pop
  6950                           	line	79
  6951                           	
  6952                           l2877:	
  6953  1401                     ;Thermometer.c: 79:    __nop();
  6954                           	opt	asmopt_push
  6955                           	opt	asmopt_off
  6956                           	nop
  6957  1401  0000               	opt	asmopt_pop
  6958                           	line	80
  6959                           	
  6960                           l2879:	
  6961  1402                     ;Thermometer.c: 80:    __nop();
  6962                           	opt	asmopt_push
  6963                           	opt	asmopt_off
  6964                           	nop
  6965  1402  0000               	opt	asmopt_pop
  6966                           	line	81
  6967                           	
  6968                           l2881:	
  6969  1403                     ;Thermometer.c: 81:    __nop();
  6970                           	opt	asmopt_push
  6971                           	opt	asmopt_off
  6972                           	nop
  6973  1403  0000               	opt	asmopt_pop
  6974                           	line	82
  6975                           	
  6976                           l2883:	
  6977  1404                     ;Thermometer.c: 82:    __nop();
  6978                           	opt	asmopt_push
  6979                           	opt	asmopt_off
  6980                           	nop
  6981  1404  0000               	opt	asmopt_pop
  6982                           	line	84
  6983                           	
  6984                           l2885:	
  6985  1405                     ;Thermometer.c: 84:    if(temp==1) TRISA0 =1;
  6986                           		decf	((Write_Byte@temp)),w
  6987  1405  0376               	btfss	status,2
  6988  1406  1D03               	goto	u1971
  6989  1407  2C09               	goto	u1970
  6990  1408  2C0A               u1971:
  6991  1409                     	goto	l2889
  6992  1409  2C0E               u1970:
  6993  140A                     	
  6994                           l2887:	
  6995  140A                     	bsf	status, 5	;RP0=1, select bank1
  6996  140A  1683               	bcf	status, 6	;RP1=0, select bank1
  6997  140B  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
  6998  140C  1405               	goto	l2889
  6999  140D  2C0E               	
  7000                           l593:	
  7001  140E                     	line	86
  7002                           	
  7003                           l2889:	
  7004  140E                     ;Thermometer.c: 86:    Delay(2,7);
  7005                           	movlw	low(07h)
  7006  140E  3007               	movwf	(??_Write_Byte+0)+0
  7007  140F  00F4               	movf	(??_Write_Byte+0)+0,w
  7008  1410  0874               	movwf	(Delay@y)
  7009  1411  00F0               	movlw	low(02h)
  7010  1412  3002               	fcall	_Delay
  7011  1413  160A  158A  2645  160A  118A  	line	87
  7012                           	
  7013                           l2891:	
  7014  1418                     ;Thermometer.c: 87:    TRISA0 =1;
  7015                           	bsf	status, 5	;RP0=1, select bank1
  7016  1418  1683               	bcf	status, 6	;RP1=0, select bank1
  7017  1419  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
  7018  141A  1405               	line	88
  7019                           	
  7020                           l2893:	
  7021  141B                     ;Thermometer.c: 88:    __nop();
  7022                           	opt	asmopt_push
  7023                           	opt	asmopt_off
  7024                           	nop
  7025  141B  0000               	opt	asmopt_pop
  7026                           	line	89
  7027                           	
  7028                           l2895:	
  7029  141C                     ;Thermometer.c: 89:    __nop();
  7030                           	opt	asmopt_push
  7031                           	opt	asmopt_off
  7032                           	nop
  7033  141C  0000               	opt	asmopt_pop
  7034                           	line	91
  7035                           	
  7036                           l2897:	
  7037  141D                     ;Thermometer.c: 91:    val=val>>1;
  7038                           	movf	(Write_Byte@val),w
  7039  141D  0877               	movwf	(??_Write_Byte+0)+0
  7040  141E  00F4               	clrc
  7041  141F  1003               	rrf	(??_Write_Byte+0)+0,w
  7042  1420  0C74               	movwf	(??_Write_Byte+1)+0
  7043  1421  00F5               	movf	(??_Write_Byte+1)+0,w
  7044  1422  0875               	movwf	(Write_Byte@val)
  7045  1423  00F7               	line	92
  7046                           	
  7047                           l2899:	
  7048  1424                     ;Thermometer.c: 92:   }
  7049                           	movlw	01h
  7050  1424  3001               	subwf	(Write_Byte@i),f
  7051  1425  02F8               	
  7052                           l2901:	
  7053  1426                     	movf	((Write_Byte@i)),w
  7054  1426  0878               	btfss	status,2
  7055  1427  1D03               	goto	u1981
  7056  1428  2C2A               	goto	u1980
  7057  1429  2C2B               u1981:
  7058  142A                     	goto	l2869
  7059  142A  2BF5               u1980:
  7060  142B                     	goto	l594
  7061  142B  2C2C               	
  7062                           l592:	
  7063  142C                     	line	93
  7064                           	
  7065                           l594:	
  7066  142C                     	return
  7067  142C  0008               	opt stack 0
  7068                           GLOBAL	__end_of_Write_Byte
  7069                           	__end_of_Write_Byte:
  7070  142D                     	signat	_Write_Byte,4217
  7071                           	global	_Reset
  7072                           
  7073 ;; *************** function _Reset *****************
  7074 ;; Defined at:
  7075 ;;		line 45 in file "Thermometer.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;		None
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;  presence        1    5[COMMON] unsigned char 
  7080 ;; Return value:  Size  Location     Type
  7081 ;;                  1    wreg      void 
  7082 ;; Registers used:
  7083 ;;		wreg, status,2, status,0, pclath, cstack
  7084 ;; Tracked objects:
  7085 ;;		On entry : 0/0
  7086 ;;		On exit  : 0/0
  7087 ;;		Unchanged: 0/0
  7088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7089 ;;      Params:         0       0       0       0       0
  7090 ;;      Locals:         1       0       0       0       0
  7091 ;;      Temps:          1       0       0       0       0
  7092 ;;      Totals:         2       0       0       0       0
  7093 ;;Total ram usage:        2 bytes
  7094 ;; Hardware stack levels used:    1
  7095 ;; Hardware stack levels required when called:    1
  7096 ;; This function calls:
  7097 ;;		_Delay
  7098 ;; This function is called by:
  7099 ;;		_Get_Temp
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  7103                           	line	45
  7104                           global __ptext15
  7105                           __ptext15:	;psect for function _Reset
  7106  1222                     psect	text15
  7107                           	file	"Thermometer.c"
  7108                           	line	45
  7109                           	global	__size_of_Reset
  7110                           	__size_of_Reset	equ	__end_of_Reset-_Reset
  7111  003D                     	
  7112                           _Reset:	
  7113  1222                     ;incstack = 0
  7114                           	opt	stack 1
  7115                           ; Regs used in _Reset: [wreg+status,2+status,0+pclath+cstack]
  7116                           	line	47
  7117                           	
  7118                           l2847:	
  7119  1222                     ;Thermometer.c: 47:   char presence=1;
  7120                           	clrf	(Reset@presence)
  7121  1222  01F5               	incf	(Reset@presence),f
  7122  1223  0AF5               	line	48
  7123                           ;Thermometer.c: 48:   while(presence)
  7124                           	goto	l2861
  7125  1224  2A58               	
  7126                           l584:	
  7127  1225                     	line	51
  7128                           ;Thermometer.c: 49:   {;Thermometer.c: 51:     RA0 = 0; TRISA0 = 0;
  7129                           	bcf	status, 5	;RP0=0, select bank0
  7130  1225  1283               	bcf	status, 6	;RP1=0, select bank0
  7131  1226  1303               	bcf	(40/8),(40)&7	;volatile
  7132  1227  1005               	bsf	status, 5	;RP0=1, select bank1
  7133  1228  1683               	bcf	status, 6	;RP1=0, select bank1
  7134  1229  1303               	bcf	(1064/8)^080h,(1064)&7	;volatile
  7135  122A  1005               	line	53
  7136                           	
  7137                           l2849:	
  7138  122B                     ;Thermometer.c: 53:     Delay(2,70);
  7139                           	movlw	low(046h)
  7140  122B  3046               	movwf	(??_Reset+0)+0
  7141  122C  00F4               	movf	(??_Reset+0)+0,w
  7142  122D  0874               	movwf	(Delay@y)
  7143  122E  00F0               	movlw	low(02h)
  7144  122F  3002               	fcall	_Delay
  7145  1230  160A  158A  2645  160A  118A  	line	55
  7146                           	
  7147                           l2851:	
  7148  1235                     ;Thermometer.c: 55:     TRISA0 =1;
  7149                           	bsf	status, 5	;RP0=1, select bank1
  7150  1235  1683               	bcf	status, 6	;RP1=0, select bank1
  7151  1236  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
  7152  1237  1405               	line	57
  7153                           ;Thermometer.c: 57:     Delay(2,8);
  7154                           	movlw	low(08h)
  7155  1238  3008               	movwf	(??_Reset+0)+0
  7156  1239  00F4               	movf	(??_Reset+0)+0,w
  7157  123A  0874               	movwf	(Delay@y)
  7158  123B  00F0               	movlw	low(02h)
  7159  123C  3002               	fcall	_Delay
  7160  123D  160A  158A  2645  160A  118A  	line	59
  7161                           	
  7162                           l2853:	
  7163  1242                     ;Thermometer.c: 59:     if(RA0==1) presence=1;
  7164                           	bcf	status, 5	;RP0=0, select bank0
  7165  1242  1283               	bcf	status, 6	;RP1=0, select bank0
  7166  1243  1303               	btfss	(40/8),(40)&7	;volatile
  7167  1244  1C05               	goto	u1941
  7168  1245  2A47               	goto	u1940
  7169  1246  2A48               u1941:
  7170  1247                     	goto	l2857
  7171  1247  2A4B               u1940:
  7172  1248                     	
  7173                           l2855:	
  7174  1248                     	clrf	(Reset@presence)
  7175  1248  01F5               	incf	(Reset@presence),f
  7176  1249  0AF5               	goto	l2859
  7177  124A  2A4D               	line	61
  7178                           ;Thermometer.c: 61:     else presence=0;
  7179                           	
  7180                           l585:	
  7181  124B                     	
  7182                           l2857:	
  7183  124B                     	clrf	(Reset@presence)
  7184  124B  01F5               	goto	l2859
  7185  124C  2A4D               	
  7186                           l586:	
  7187  124D                     	line	63
  7188                           	
  7189                           l2859:	
  7190  124D                     ;Thermometer.c: 63:     Delay(2,60);
  7191                           	movlw	low(03Ch)
  7192  124D  303C               	movwf	(??_Reset+0)+0
  7193  124E  00F4               	movf	(??_Reset+0)+0,w
  7194  124F  0874               	movwf	(Delay@y)
  7195  1250  00F0               	movlw	low(02h)
  7196  1251  3002               	fcall	_Delay
  7197  1252  160A  158A  2645  160A  118A  	goto	l2861
  7198  1257  2A58               	line	64
  7199                           ;Thermometer.c: 64:    }
  7200                           	
  7201                           l583:	
  7202  1258                     	line	48
  7203                           	
  7204                           l2861:	
  7205  1258                     ;Thermometer.c: 48:   while(presence)
  7206                           	movf	((Reset@presence)),w
  7207  1258  0875               	btfss	status,2
  7208  1259  1D03               	goto	u1951
  7209  125A  2A5C               	goto	u1950
  7210  125B  2A5D               u1951:
  7211  125C                     	goto	l584
  7212  125C  2A25               u1950:
  7213  125D                     	goto	l588
  7214  125D  2A5E               	
  7215                           l587:	
  7216  125E                     	line	65
  7217                           	
  7218                           l588:	
  7219  125E                     	return
  7220  125E  0008               	opt stack 0
  7221                           GLOBAL	__end_of_Reset
  7222                           	__end_of_Reset:
  7223  125F                     	signat	_Reset,89
  7224                           	global	_Read_Byte
  7225                           
  7226 ;; *************** function _Read_Byte *****************
  7227 ;; Defined at:
  7228 ;;		line 96 in file "Thermometer.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;		None
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;  i               1    6[COMMON] unsigned char 
  7233 ;;  value           1    5[COMMON] unsigned char 
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  1    wreg      unsigned char 
  7236 ;; Registers used:
  7237 ;;		wreg, status,2, status,0, pclath, cstack
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7243 ;;      Params:         0       0       0       0       0
  7244 ;;      Locals:         2       0       0       0       0
  7245 ;;      Temps:          1       0       0       0       0
  7246 ;;      Totals:         3       0       0       0       0
  7247 ;;Total ram usage:        3 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; Hardware stack levels required when called:    1
  7250 ;; This function calls:
  7251 ;;		_Delay
  7252 ;; This function is called by:
  7253 ;;		_Get_Temp
  7254 ;; This function uses a non-reentrant model
  7255 ;;
  7256                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  7257                           	line	96
  7258                           global __ptext16
  7259                           __ptext16:	;psect for function _Read_Byte
  7260  13A5                     psect	text16
  7261                           	file	"Thermometer.c"
  7262                           	line	96
  7263                           	global	__size_of_Read_Byte
  7264                           	__size_of_Read_Byte	equ	__end_of_Read_Byte-_Read_Byte
  7265  0044                     	
  7266                           _Read_Byte:	
  7267  13A5                     ;incstack = 0
  7268                           	opt	stack 1
  7269                           ; Regs used in _Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  7270                           	line	99
  7271                           	
  7272                           l2903:	
  7273  13A5                     ;Thermometer.c: 98:  unsigned char i;;Thermometer.c: 99:  unsigned char value=0;
  7274                           	clrf	(Read_Byte@value)
  7275  13A5  01F5               	line	101
  7276                           	
  7277                           l2905:	
  7278  13A6                     ;Thermometer.c: 100:  static char j;;Thermometer.c: 101:  for(i=8;i>0;i--)
  7279                           	movlw	low(08h)
  7280  13A6  3008               	movwf	(??_Read_Byte+0)+0
  7281  13A7  00F4               	movf	(??_Read_Byte+0)+0,w
  7282  13A8  0874               	movwf	(Read_Byte@i)
  7283  13A9  00F6               	
  7284                           l2907:	
  7285  13AA                     	movf	((Read_Byte@i)),w
  7286  13AA  0876               	btfss	status,2
  7287  13AB  1D03               	goto	u1991
  7288  13AC  2BAE               	goto	u1990
  7289  13AD  2BAF               u1991:
  7290  13AE                     	goto	l2911
  7291  13AE  2BB1               u1990:
  7292  13AF                     	goto	l2953
  7293  13AF  2BE6               	
  7294                           l2909:	
  7295  13B0                     	goto	l2953
  7296  13B0  2BE6               	
  7297                           l599:	
  7298  13B1                     	line	103
  7299                           	
  7300                           l2911:	
  7301  13B1                     ;Thermometer.c: 102:  {;Thermometer.c: 103:    value>>=1;
  7302                           	clrc
  7303  13B1  1003               	rrf	(Read_Byte@value),f
  7304  13B2  0CF5               
  7305                           	line	105
  7306                           	
  7307                           l2913:	
  7308  13B3                     ;Thermometer.c: 105:    RA0 = 0; TRISA0 = 0;
  7309                           	bcf	status, 5	;RP0=0, select bank0
  7310  13B3  1283               	bcf	status, 6	;RP1=0, select bank0
  7311  13B4  1303               	bcf	(40/8),(40)&7	;volatile
  7312  13B5  1005               	
  7313                           l2915:	
  7314  13B6                     	bsf	status, 5	;RP0=1, select bank1
  7315  13B6  1683               	bcf	status, 6	;RP1=0, select bank1
  7316  13B7  1303               	bcf	(1064/8)^080h,(1064)&7	;volatile
  7317  13B8  1005               	line	107
  7318                           	
  7319                           l2917:	
  7320  13B9                     ;Thermometer.c: 107:    __nop();
  7321                           	opt	asmopt_push
  7322                           	opt	asmopt_off
  7323                           	nop
  7324  13B9  0000               	opt	asmopt_pop
  7325                           	line	108
  7326                           	
  7327                           l2919:	
  7328  13BA                     ;Thermometer.c: 108:    __nop();
  7329                           	opt	asmopt_push
  7330                           	opt	asmopt_off
  7331                           	nop
  7332  13BA  0000               	opt	asmopt_pop
  7333                           	line	109
  7334                           	
  7335                           l2921:	
  7336  13BB                     ;Thermometer.c: 109:    __nop();
  7337                           	opt	asmopt_push
  7338                           	opt	asmopt_off
  7339                           	nop
  7340  13BB  0000               	opt	asmopt_pop
  7341                           	line	110
  7342                           	
  7343                           l2923:	
  7344  13BC                     ;Thermometer.c: 110:    __nop();
  7345                           	opt	asmopt_push
  7346                           	opt	asmopt_off
  7347                           	nop
  7348  13BC  0000               	opt	asmopt_pop
  7349                           	line	111
  7350                           	
  7351                           l2925:	
  7352  13BD                     ;Thermometer.c: 111:    __nop();
  7353                           	opt	asmopt_push
  7354                           	opt	asmopt_off
  7355                           	nop
  7356  13BD  0000               	opt	asmopt_pop
  7357                           	line	112
  7358                           	
  7359                           l2927:	
  7360  13BE                     ;Thermometer.c: 112:    __nop();
  7361                           	opt	asmopt_push
  7362                           	opt	asmopt_off
  7363                           	nop
  7364  13BE  0000               	opt	asmopt_pop
  7365                           	line	114
  7366                           	
  7367                           l2929:	
  7368  13BF                     ;Thermometer.c: 114:    TRISA0 =1;
  7369                           	bsf	status, 5	;RP0=1, select bank1
  7370  13BF  1683               	bcf	status, 6	;RP1=0, select bank1
  7371  13C0  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
  7372  13C1  1405               	line	116
  7373                           	
  7374                           l2931:	
  7375  13C2                     ;Thermometer.c: 116:    __nop();
  7376                           	opt	asmopt_push
  7377                           	opt	asmopt_off
  7378                           	nop
  7379  13C2  0000               	opt	asmopt_pop
  7380                           	line	117
  7381                           	
  7382                           l2933:	
  7383  13C3                     ;Thermometer.c: 117:    __nop();
  7384                           	opt	asmopt_push
  7385                           	opt	asmopt_off
  7386                           	nop
  7387  13C3  0000               	opt	asmopt_pop
  7388                           	line	118
  7389                           	
  7390                           l2935:	
  7391  13C4                     ;Thermometer.c: 118:    __nop();
  7392                           	opt	asmopt_push
  7393                           	opt	asmopt_off
  7394                           	nop
  7395  13C4  0000               	opt	asmopt_pop
  7396                           	line	119
  7397                           	
  7398                           l2937:	
  7399  13C5                     ;Thermometer.c: 119:    __nop();
  7400                           	opt	asmopt_push
  7401                           	opt	asmopt_off
  7402                           	nop
  7403  13C5  0000               	opt	asmopt_pop
  7404                           	line	120
  7405                           	
  7406                           l2939:	
  7407  13C6                     ;Thermometer.c: 120:    __nop();
  7408                           	opt	asmopt_push
  7409                           	opt	asmopt_off
  7410                           	nop
  7411  13C6  0000               	opt	asmopt_pop
  7412                           	line	121
  7413                           	
  7414                           l2941:	
  7415  13C7                     ;Thermometer.c: 121:    j=RA0;
  7416                           	movlw	0
  7417  13C7  3000               	bcf	status, 5	;RP0=0, select bank0
  7418  13C8  1283               	bcf	status, 6	;RP1=0, select bank0
  7419  13C9  1303               	btfsc	(40/8),(40)&7	;volatile
  7420  13CA  1805               	movlw	1
  7421  13CB  3001               	movwf	(Read_Byte@j)
  7422  13CC  00E2               	line	122
  7423                           	
  7424                           l2943:	
  7425  13CD                     ;Thermometer.c: 122:    if(j) value|=0x80;
  7426                           	movf	((Read_Byte@j)),w
  7427  13CD  0862               	btfsc	status,2
  7428  13CE  1903               	goto	u2001
  7429  13CF  2BD1               	goto	u2000
  7430  13D0  2BD2               u2001:
  7431  13D1                     	goto	l2947
  7432  13D1  2BD4               u2000:
  7433  13D2                     	
  7434                           l2945:	
  7435  13D2                     	bsf	(Read_Byte@value)+(7/8),(7)&7
  7436  13D2  17F5               	goto	l2947
  7437  13D3  2BD4               	
  7438                           l601:	
  7439  13D4                     	line	124
  7440                           	
  7441                           l2947:	
  7442  13D4                     ;Thermometer.c: 124:    Delay(2,7);
  7443                           	movlw	low(07h)
  7444  13D4  3007               	movwf	(??_Read_Byte+0)+0
  7445  13D5  00F4               	movf	(??_Read_Byte+0)+0,w
  7446  13D6  0874               	movwf	(Delay@y)
  7447  13D7  00F0               	movlw	low(02h)
  7448  13D8  3002               	fcall	_Delay
  7449  13D9  160A  158A  2645  160A  118A  	line	125
  7450                           	
  7451                           l2949:	
  7452  13DE                     ;Thermometer.c: 125:   }
  7453                           	movlw	01h
  7454  13DE  3001               	subwf	(Read_Byte@i),f
  7455  13DF  02F6               	
  7456                           l2951:	
  7457  13E0                     	movf	((Read_Byte@i)),w
  7458  13E0  0876               	btfss	status,2
  7459  13E1  1D03               	goto	u2011
  7460  13E2  2BE4               	goto	u2010
  7461  13E3  2BE5               u2011:
  7462  13E4                     	goto	l2911
  7463  13E4  2BB1               u2010:
  7464  13E5                     	goto	l2953
  7465  13E5  2BE6               	
  7466                           l600:	
  7467  13E6                     	line	126
  7468                           	
  7469                           l2953:	
  7470  13E6                     ;Thermometer.c: 126:   return(value);
  7471                           	movf	(Read_Byte@value),w
  7472  13E6  0875               	goto	l602
  7473  13E7  2BE8               	
  7474                           l2955:	
  7475  13E8                     	line	127
  7476                           	
  7477                           l602:	
  7478  13E8                     	return
  7479  13E8  0008               	opt stack 0
  7480                           GLOBAL	__end_of_Read_Byte
  7481                           	__end_of_Read_Byte:
  7482  13E9                     	signat	_Read_Byte,89
  7483                           	global	_Delay
  7484                           
  7485 ;; *************** function _Delay *****************
  7486 ;; Defined at:
  7487 ;;		line 28 in file "Thermometer.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;  x               1    wreg     unsigned char 
  7490 ;;  y               1    0[COMMON] unsigned char 
  7491 ;; Auto vars:     Size  Location     Type
  7492 ;;  x               1    2[COMMON] unsigned char 
  7493 ;;  z               1    3[COMMON] unsigned char 
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  1    wreg      void 
  7496 ;; Registers used:
  7497 ;;		wreg, status,2, status,0
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7503 ;;      Params:         1       0       0       0       0
  7504 ;;      Locals:         2       0       0       0       0
  7505 ;;      Temps:          1       0       0       0       0
  7506 ;;      Totals:         4       0       0       0       0
  7507 ;;Total ram usage:        4 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; This function calls:
  7510 ;;		Nothing
  7511 ;; This function is called by:
  7512 ;;		_Reset
  7513 ;;		_Write_Byte
  7514 ;;		_Read_Byte
  7515 ;;		_Get_Temp
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  7519                           	line	28
  7520                           global __ptext17
  7521                           __ptext17:	;psect for function _Delay
  7522  1E45                     psect	text17
  7523                           	file	"Thermometer.c"
  7524                           	line	28
  7525                           	global	__size_of_Delay
  7526                           	__size_of_Delay	equ	__end_of_Delay-_Delay
  7527  0015                     	
  7528                           _Delay:	
  7529  1E45                     ;incstack = 0
  7530                           	opt	stack 1
  7531                           ; Regs used in _Delay: [wreg+status,2+status,0]
  7532                           ;Delay@x stored from wreg
  7533                           	movwf	(Delay@x)
  7534  1E45  00F2               	line	31
  7535                           ;Thermometer.c: 28: void Delay(char x,char y);Thermometer.c: 29: {;Thermometer.c: 30:   
                                 char z;;Thermometer.c: 31:   do{
  7536                           	
  7537                           l573:	
  7538  1E46                     	line	32
  7539                           	
  7540                           l2745:	
  7541  1E46                     ;Thermometer.c: 32:       z=y;
  7542                           	movf	(Delay@y),w
  7543  1E46  0870               	movwf	(??_Delay+0)+0
  7544  1E47  00F1               	movf	(??_Delay+0)+0,w
  7545  1E48  0871               	movwf	(Delay@z)
  7546  1E49  00F3               	goto	l2747
  7547  1E4A  2E4B               	line	33
  7548                           ;Thermometer.c: 33:       do{;}while(--z);
  7549                           	
  7550                           l574:	
  7551  1E4B                     	
  7552                           l2747:	
  7553  1E4B                     	movlw	01h
  7554  1E4B  3001               	subwf	(Delay@z),f
  7555  1E4C  02F3               	btfss	status,2
  7556  1E4D  1D03               	goto	u1731
  7557  1E4E  2E50               	goto	u1730
  7558  1E4F  2E51               u1731:
  7559  1E50                     	goto	l2747
  7560  1E50  2E4B               u1730:
  7561  1E51                     	goto	l2749
  7562  1E51  2E52               	
  7563                           l575:	
  7564  1E52                     	line	34
  7565                           	
  7566                           l2749:	
  7567  1E52                     ;Thermometer.c: 34:      }while(--x);
  7568                           	movlw	01h
  7569  1E52  3001               	subwf	(Delay@x),f
  7570  1E53  02F2               	btfss	status,2
  7571  1E54  1D03               	goto	u1741
  7572  1E55  2E57               	goto	u1740
  7573  1E56  2E58               u1741:
  7574  1E57                     	goto	l573
  7575  1E57  2E46               u1740:
  7576  1E58                     	goto	l577
  7577  1E58  2E59               	
  7578                           l576:	
  7579  1E59                     	line	35
  7580                           	
  7581                           l577:	
  7582  1E59                     	return
  7583  1E59  0008               	opt stack 0
  7584                           GLOBAL	__end_of_Delay
  7585                           	__end_of_Delay:
  7586  1E5A                     	signat	_Delay,8313
  7587                           	global	_SetTime
  7588                           
  7589 ;; *************** function _SetTime *****************
  7590 ;; Defined at:
  7591 ;;		line 450 in file "main.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;  Key             2    7[BANK0 ] int 
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;  digits          9   15[BANK0 ] unsigned char [9]
  7596 ;;  setTime         6   32[BANK0 ] int [3]
  7597 ;;  i               2   38[BANK0 ] int 
  7598 ;;  sec             2   30[BANK0 ] int 
  7599 ;;  min             2   28[BANK0 ] int 
  7600 ;;  hour            2   26[BANK0 ] int 
  7601 ;;  TimeSet         1   25[BANK0 ] PTR unsigned char 
  7602 ;;		 -> STR_21(9), 
  7603 ;;  Time            1   24[BANK0 ] PTR unsigned char 
  7604 ;;		 -> STR_20(6), 
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  1    wreg      void 
  7607 ;; Registers used:
  7608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7614 ;;      Params:         0       2       0       0       0
  7615 ;;      Locals:         0      25       0       0       0
  7616 ;;      Temps:          0       6       0       0       0
  7617 ;;      Totals:         0      33       0       0       0
  7618 ;;Total ram usage:       33 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; Hardware stack levels required when called:    3
  7621 ;; This function calls:
  7622 ;;		_Keypad_Scan
  7623 ;;		_LCD_Command
  7624 ;;		_LCD_SendString
  7625 ;;		_Main_Delay
  7626 ;;		_RealTimeClock_get_hours
  7627 ;;		_RealTimeClock_get_minutes
  7628 ;;		_RealTimeClock_get_seconds
  7629 ;;		_RealTimeClock_set_hours
  7630 ;;		_RealTimeClock_set_minutes
  7631 ;;		_RealTimeClock_set_seconds
  7632 ;;		___awdiv
  7633 ;;		___awmod
  7634 ;; This function is called by:
  7635 ;;		_main
  7636 ;; This function uses a non-reentrant model
  7637 ;;
  7638                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  7639                           	file	"main.c"
  7640                           	line	450
  7641                           global __ptext18
  7642                           __ptext18:	;psect for function _SetTime
  7643  04D8                     psect	text18
  7644                           	file	"main.c"
  7645                           	line	450
  7646                           	global	__size_of_SetTime
  7647                           	__size_of_SetTime	equ	__end_of_SetTime-_SetTime
  7648  02E1                     	
  7649                           _SetTime:	
  7650  04D8                     ;incstack = 0
  7651                           	opt	stack 4
  7652                           ; Regs used in _SetTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7653                           	line	453
  7654                           	
  7655                           l3743:	
  7656  04D8                     ;main.c: 450:         char digits[9] = {'0', '0', ':', '0', '0', '.', '0', '0', '\0'};;m
                                 ain.c: 451: ;main.c: 453:         LCD_SendString(Time);
  7657                           	movlw	low(01h)
  7658  04D8  3001               	fcall	_LCD_Command
  7659  04D9  160A  158A  25EF  120A  118A  	line	455
  7660                           	
  7661                           l3745:	
  7662  04DE                     ;main.c: 455:         Key = Keypad_Scan();
  7663                           	bcf	status, 5	;RP0=0, select bank0
  7664  04DE  1283               	bcf	status, 6	;RP1=0, select bank0
  7665  04DF  1303               	clrf	(SetTime@i)
  7666  04E0  01C6               	clrf	(SetTime@i+1)
  7667  04E1  01C7               	line	458
  7668                           	
  7669                           l3747:	
  7670  04E2                     ;main.c: 457:         if(Key == 9);main.c: 458:         {
  7671                           	movlw	(low((((STR_20)-__stringbase)|8000h)))&0ffh
  7672  04E2  30A2               	movwf	(??_SetTime+0)+0
  7673  04E3  00A9               	movf	(??_SetTime+0)+0,w
  7674  04E4  0829               	movwf	(SetTime@Time)
  7675  04E5  00B8               	line	459
  7676                           	
  7677                           l3749:	
  7678  04E6                     ;main.c: 459: 
  7679                           	movlw	(low((((STR_21)-__stringbase)|8000h)))&0ffh
  7680  04E6  305D               	movwf	(??_SetTime+0)+0
  7681  04E7  00A9               	movf	(??_SetTime+0)+0,w
  7682  04E8  0829               	movwf	(SetTime@TimeSet)
  7683  04E9  00B9               	line	461
  7684                           	
  7685                           l3751:	
  7686  04EA                     ;main.c: 461:             RealTimeClock_set_minutes(setTime[1]);
  7687                           	fcall	_RealTimeClock_get_seconds
  7688  04EA  160A  158A  27B8  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7689  04EF  1283               	bcf	status, 6	;RP1=0, select bank0
  7690  04F0  1303               	movf	(1+(?_RealTimeClock_get_seconds)),w
  7691  04F1  0826               	movwf	(_timeSecs+1)
  7692  04F2  00D9               	movf	(0+(?_RealTimeClock_get_seconds)),w
  7693  04F3  0825               	movwf	(_timeSecs)
  7694  04F4  00D8               	line	462
  7695                           	
  7696                           l3753:	
  7697  04F5                     ;main.c: 462:             RealTimeClock_set_seconds(setTime[2]);
  7698                           	fcall	_RealTimeClock_get_minutes
  7699  04F5  160A  158A  270E  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7700  04FA  1283               	bcf	status, 6	;RP1=0, select bank0
  7701  04FB  1303               	movf	(1+(?_RealTimeClock_get_minutes)),w
  7702  04FC  0826               	movwf	(_timeMins+1)
  7703  04FD  00DB               	movf	(0+(?_RealTimeClock_get_minutes)),w
  7704  04FE  0825               	movwf	(_timeMins)
  7705  04FF  00DA               	line	463
  7706                           	
  7707                           l3755:	
  7708  0500                     ;main.c: 463: 
  7709                           	fcall	_RealTimeClock_get_hours
  7710  0500  160A  158A  26EC  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7711  0505  1283               	bcf	status, 6	;RP1=0, select bank0
  7712  0506  1303               	movf	(1+(?_RealTimeClock_get_hours)),w
  7713  0507  0826               	movwf	(_timeHours+1)
  7714  0508  00DD               	movf	(0+(?_RealTimeClock_get_hours)),w
  7715  0509  0825               	movwf	(_timeHours)
  7716  050A  00DC               	line	466
  7717                           	
  7718                           l3757:	
  7719  050B                     ;main.c: 465:             LCD_Command(0x03);;main.c: 466: 
  7720                           	movf	(_timeHours+1),w
  7721  050B  085D               	movwf	(SetTime@setTime+1)
  7722  050C  00C1               	movf	(_timeHours),w
  7723  050D  085C               	movwf	(SetTime@setTime)
  7724  050E  00C0               	line	467
  7725                           	
  7726                           l3759:	
  7727  050F                     ;main.c: 467:             LCD_SendString(TimeSet);
  7728                           	movf	(_timeMins+1),w
  7729  050F  085B               	movwf	1+(SetTime@setTime)+02h
  7730  0510  00C3               	movf	(_timeMins),w
  7731  0511  085A               	movwf	0+(SetTime@setTime)+02h
  7732  0512  00C2               	line	468
  7733                           	
  7734                           l3761:	
  7735  0513                     ;main.c: 468:             Main_Delay(200);
  7736                           	movf	(_timeSecs+1),w
  7737  0513  0859               	movwf	1+(SetTime@setTime)+04h
  7738  0514  00C5               	movf	(_timeSecs),w
  7739  0515  0858               	movwf	0+(SetTime@setTime)+04h
  7740  0516  00C4               	goto	l3763
  7741  0517  2D18               	line	469
  7742                           ;main.c: 469:             LCD_Command(0x01);
  7743                           	
  7744                           l192:	
  7745  0518                     	line	472
  7746                           	
  7747                           l3763:	
  7748  0518                     ;main.c: 470:             break;;main.c: 472:         switch(Key)
  7749                           	movlw	(SetTime@digits)&0ffh
  7750  0518  302F               	movwf	fsr0
  7751  0519  0084               	movlw	low(SetTime@F993)
  7752  051A  30AA               	bcf	status, 5	;RP0=0, select bank0
  7753  051B  1283               	bcf	status, 6	;RP1=0, select bank0
  7754  051C  1303               	movwf	(??_SetTime+0)+0
  7755  051D  00A9               	movf	fsr0,w
  7756  051E  0804               	movwf	((??_SetTime+0)+0+1)
  7757  051F  00AA               	movlw	9
  7758  0520  3009               	movwf	((??_SetTime+0)+0+2)
  7759  0521  00AB               u3030:
  7760  0522                     	movf	(??_SetTime+0)+0,w
  7761  0522  0829               	movwf	fsr0
  7762  0523  0084               	bcf	status, 7	;select IRP bank1
  7763  0524  1383               	
  7764                           	movf	indf,w
  7765  0525  0800               	movwf	((??_SetTime+0)+0+3)
  7766  0526  00AC               	incf	(??_SetTime+0)+0,f
  7767  0527  0AA9               	movf	((??_SetTime+0)+0+1),w
  7768  0528  082A               	movwf	fsr0
  7769  0529  0084               	
  7770                           	movf	((??_SetTime+0)+0+3),w
  7771  052A  082C               	movwf	indf
  7772  052B  0080               	incf	((??_SetTime+0)+0+1),f
  7773  052C  0AAA               	decfsz	((??_SetTime+0)+0+2),f
  7774  052D  0BAB               	goto	u3030
  7775  052E  2D22               	
  7776                           	line	474
  7777                           	
  7778                           l3765:	
  7779  052F                     ;main.c: 474: 
  7780                           	movlw	low(03h)
  7781  052F  3003               	fcall	_LCD_Command
  7782  0530  160A  158A  25EF  120A  118A  	line	475
  7783                           	
  7784                           l3767:	
  7785  0535                     ;main.c: 475:             case 10:
  7786                           	bcf	status, 5	;RP0=0, select bank0
  7787  0535  1283               	bcf	status, 6	;RP1=0, select bank0
  7788  0536  1303               		movf	(SetTime@Time),w
  7789  0537  0838               	movwf	(LCD_SendString@string)
  7790  0538  00F1               	movlw	0
  7791  0539  3000               	btfss	status,2
  7792  053A  1D03               	movlw	080h
  7793  053B  3080               	movwf	(LCD_SendString@string+1)
  7794  053C  00F2               
  7795                           	fcall	_LCD_SendString
  7796  053D  160A  118A  2361  120A  118A  	line	477
  7797                           	
  7798                           l3769:	
  7799  0542                     ;main.c: 477:             if(i == 2)
  7800                           	fcall	_Keypad_Scan
  7801  0542  120A  118A  20DF  120A  118A  	movf	(1+(?_Keypad_Scan)),w
  7802  0547  0877               	bcf	status, 5	;RP0=0, select bank0
  7803  0548  1283               	bcf	status, 6	;RP1=0, select bank0
  7804  0549  1303               	movwf	(SetTime@Key+1)
  7805  054A  00A8               	movf	(0+(?_Keypad_Scan)),w
  7806  054B  0876               	movwf	(SetTime@Key)
  7807  054C  00A7               	line	479
  7808                           	
  7809                           l3771:	
  7810  054D                     ;main.c: 479: 
  7811                           		movlw	9
  7812  054D  3009               	xorwf	((SetTime@Key)),w
  7813  054E  0627               iorwf	((SetTime@Key+1)),w
  7814  054F  0428               	btfss	status,2
  7815  0550  1D03               	goto	u3041
  7816  0551  2D53               	goto	u3040
  7817  0552  2D54               u3041:
  7818  0553                     	goto	l3833
  7819  0553  2EDE               u3040:
  7820  0554                     	line	482
  7821                           	
  7822                           l3773:	
  7823  0554                     ;main.c: 480:             else;main.c: 482:             break;
  7824                           	movf	(SetTime@setTime+1),w
  7825  0554  0841               	movwf	(RealTimeClock_set_hours@hours+1)
  7826  0555  00A1               	movf	(SetTime@setTime),w
  7827  0556  0840               	movwf	(RealTimeClock_set_hours@hours)
  7828  0557  00A0               	fcall	_RealTimeClock_set_hours
  7829  0558  160A  158A  2677  120A  118A  	line	483
  7830                           ;main.c: 483: 
  7831                           	bcf	status, 5	;RP0=0, select bank0
  7832  055D  1283               	bcf	status, 6	;RP1=0, select bank0
  7833  055E  1303               	movf	1+(SetTime@setTime)+02h,w
  7834  055F  0843               	movwf	(RealTimeClock_set_minutes@minutes+1)
  7835  0560  00A1               	movf	0+(SetTime@setTime)+02h,w
  7836  0561  0842               	movwf	(RealTimeClock_set_minutes@minutes)
  7837  0562  00A0               	fcall	_RealTimeClock_set_minutes
  7838  0563  160A  158A  2694  120A  118A  	line	484
  7839                           ;main.c: 484:             case 11:
  7840                           	bcf	status, 5	;RP0=0, select bank0
  7841  0568  1283               	bcf	status, 6	;RP1=0, select bank0
  7842  0569  1303               	movf	1+(SetTime@setTime)+04h,w
  7843  056A  0845               	movwf	(RealTimeClock_set_seconds@seconds+1)
  7844  056B  00A1               	movf	0+(SetTime@setTime)+04h,w
  7845  056C  0844               	movwf	(RealTimeClock_set_seconds@seconds)
  7846  056D  00A0               	fcall	_RealTimeClock_set_seconds
  7847  056E  160A  158A  26B1  120A  118A  	line	486
  7848                           	
  7849                           l3775:	
  7850  0573                     ;main.c: 486:                 if(i == 0)
  7851                           	movlw	low(01h)
  7852  0573  3001               	fcall	_LCD_Command
  7853  0574  160A  158A  25EF  120A  118A  	line	487
  7854                           	
  7855                           l3777:	
  7856  0579                     ;main.c: 487:                 {
  7857                           	movlw	low(03h)
  7858  0579  3003               	fcall	_LCD_Command
  7859  057A  160A  158A  25EF  120A  118A  	line	489
  7860                           	
  7861                           l3779:	
  7862  057F                     ;main.c: 489:                     {
  7863                           	bcf	status, 5	;RP0=0, select bank0
  7864  057F  1283               	bcf	status, 6	;RP1=0, select bank0
  7865  0580  1303               		movf	(SetTime@TimeSet),w
  7866  0581  0839               	movwf	(LCD_SendString@string)
  7867  0582  00F1               	movlw	0
  7868  0583  3000               	btfss	status,2
  7869  0584  1D03               	movlw	080h
  7870  0585  3080               	movwf	(LCD_SendString@string+1)
  7871  0586  00F2               
  7872                           	fcall	_LCD_SendString
  7873  0587  160A  118A  2361  120A  118A  	line	490
  7874                           	
  7875                           l3781:	
  7876  058C                     ;main.c: 490:                         if(setTime[i] == 0)
  7877                           	movlw	0C8h
  7878  058C  30C8               	movwf	(Main_Delay@k)
  7879  058D  00F0               	movlw	0
  7880  058E  3000               	movwf	((Main_Delay@k))+1
  7881  058F  00F1               	fcall	_Main_Delay
  7882  0590  160A  118A  225F  120A  118A  	line	491
  7883                           	
  7884                           l3783:	
  7885  0595                     ;main.c: 491:                         {
  7886                           	movlw	low(01h)
  7887  0595  3001               	fcall	_LCD_Command
  7888  0596  160A  158A  25EF  120A  118A  	line	492
  7889                           ;main.c: 492:                             setTime[i] = 23;
  7890                           	goto	l224
  7891  059B  2FB8               	line	493
  7892                           ;main.c: 493:                         }
  7893                           	
  7894                           l195:	
  7895  059C                     	line	494
  7896                           ;main.c: 494: 
  7897                           	goto	l3833
  7898  059C  2EDE               	line	497
  7899                           ;main.c: 495:                         else;main.c: 497:                             setT
                                 ime[i] = setTime[i] - 1;
  7900                           	
  7901                           l198:	
  7902  059D                     	line	499
  7903                           	
  7904                           l3785:	
  7905  059D                     ;main.c: 499:                     }
  7906                           		movlw	2
  7907  059D  3002               	bcf	status, 5	;RP0=0, select bank0
  7908  059E  1283               	bcf	status, 6	;RP1=0, select bank0
  7909  059F  1303               	xorwf	((SetTime@i)),w
  7910  05A0  0646               iorwf	((SetTime@i+1)),w
  7911  05A1  0447               	btfss	status,2
  7912  05A2  1D03               	goto	u3051
  7913  05A3  2DA5               	goto	u3050
  7914  05A4  2DA6               u3051:
  7915  05A5                     	goto	l3789
  7916  05A5  2DA9               u3050:
  7917  05A6                     	line	500
  7918                           	
  7919                           l3787:	
  7920  05A6                     ;main.c: 500:                     else if(is24Hour == 0)
  7921                           	clrf	(SetTime@i)
  7922  05A6  01C6               	clrf	(SetTime@i+1)
  7923  05A7  01C7               	goto	l3835
  7924  05A8  2EF0               	line	502
  7925                           ;main.c: 502: 
  7926                           	
  7927                           l199:	
  7928  05A9                     	line	503
  7929                           	
  7930                           l3789:	
  7931  05A9                     ;main.c: 503:                     }
  7932                           	movlw	01h
  7933  05A9  3001               	addwf	(SetTime@i),f
  7934  05AA  07C6               	skipnc
  7935  05AB  1803               	incf	(SetTime@i+1),f
  7936  05AC  0AC7               	movlw	0
  7937  05AD  3000               	addwf	(SetTime@i+1),f
  7938  05AE  07C7               	goto	l3835
  7939  05AF  2EF0               	
  7940                           l200:	
  7941  05B0                     	line	504
  7942                           ;main.c: 504:                     else
  7943                           	goto	l3835
  7944  05B0  2EF0               	line	506
  7945                           ;main.c: 506:                 }
  7946                           	
  7947                           l202:	
  7948  05B1                     	line	508
  7949                           	
  7950                           l3791:	
  7951  05B1                     ;main.c: 508:                 else if(setTime[i] == 0)
  7952                           	movf	((SetTime@i)),w
  7953  05B1  0846               iorwf	((SetTime@i+1)),w
  7954  05B2  0447               	btfss	status,2
  7955  05B3  1D03               	goto	u3061
  7956  05B4  2DB6               	goto	u3060
  7957  05B5  2DB7               u3061:
  7958  05B6                     	goto	l3807
  7959  05B6  2E1F               u3060:
  7960  05B7                     	line	510
  7961                           	
  7962                           l3793:	
  7963  05B7                     ;main.c: 509:                 {;main.c: 510:                     setTime[i] = 59;
  7964                           		decf	((_is24Hour)),w
  7965  05B7  035E               iorwf	((_is24Hour+1)),w
  7966  05B8  045F               	btfss	status,2
  7967  05B9  1D03               	goto	u3071
  7968  05BA  2DBC               	goto	u3070
  7969  05BB  2DBD               u3071:
  7970  05BC                     	goto	l3801
  7971  05BC  2DF7               u3070:
  7972  05BD                     	line	512
  7973                           	
  7974                           l3795:	
  7975  05BD                     ;main.c: 511:                 };main.c: 512: 
  7976                           	movf	(SetTime@i),w
  7977  05BD  0846               	movwf	(??_SetTime+0)+0
  7978  05BE  00A9               	addwf	(??_SetTime+0)+0,w
  7979  05BF  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  7980  05C0  3E40               	movwf	fsr0
  7981  05C1  0084               	bcf	status, 7	;select IRP bank0
  7982  05C2  1383               	movf	indf,w
  7983  05C3  0800               	movwf	(??_SetTime+1)+0+0
  7984  05C4  00AA               	incf	fsr0,f
  7985  05C5  0A84               	movf	indf,w
  7986  05C6  0800               	movwf	(??_SetTime+1)+0+1
  7987  05C7  00AB               	movf	((??_SetTime+1)+0),w
  7988  05C8  082A               iorwf	((??_SetTime+1)+1),w
  7989  05C9  042B               	btfss	status,2
  7990  05CA  1D03               	goto	u3081
  7991  05CB  2DCD               	goto	u3080
  7992  05CC  2DCE               u3081:
  7993  05CD                     	goto	l3799
  7994  05CD  2DD9               u3080:
  7995  05CE                     	line	514
  7996                           	
  7997                           l3797:	
  7998  05CE                     ;main.c: 513:                 else;main.c: 514:                     setTime[i] = setTime
                                 [i] - 1;
  7999                           	movf	(SetTime@i),w
  8000  05CE  0846               	movwf	(??_SetTime+0)+0
  8001  05CF  00A9               	addwf	(??_SetTime+0)+0,w
  8002  05D0  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8003  05D1  3E40               	movwf	fsr0
  8004  05D2  0084               	movlw	017h
  8005  05D3  3017               	movwf	indf
  8006  05D4  0080               	incf	fsr0,f
  8007  05D5  0A84               	movlw	0
  8008  05D6  3000               	movwf	indf
  8009  05D7  0080               	line	515
  8010                           ;main.c: 515:                 break;
  8011                           	goto	l3835
  8012  05D8  2EF0               	line	517
  8013                           ;main.c: 517:             case 12:
  8014                           	
  8015                           l205:	
  8016  05D9                     	line	519
  8017                           	
  8018                           l3799:	
  8019  05D9                     ;main.c: 518: ;main.c: 519:                 if(i == 0)
  8020                           	movf	(SetTime@i),w
  8021  05D9  0846               	movwf	(??_SetTime+0)+0
  8022  05DA  00A9               	addwf	(??_SetTime+0)+0,w
  8023  05DB  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8024  05DC  3E40               	movwf	fsr0
  8025  05DD  0084               	movf	indf,w
  8026  05DE  0800               	movwf	(??_SetTime+1)+0+0
  8027  05DF  00AA               	incf	fsr0,f
  8028  05E0  0A84               	movf	indf,w
  8029  05E1  0800               	movwf	(??_SetTime+1)+0+1
  8030  05E2  00AB               	movf	0+(??_SetTime+1)+0,w
  8031  05E3  082A               	addlw	low(-1)
  8032  05E4  3EFF               	movwf	(??_SetTime+3)+0
  8033  05E5  00AC               	movf	1+(??_SetTime+1)+0,w
  8034  05E6  082B               	skipnc
  8035  05E7  1803               	addlw	1
  8036  05E8  3E01               	addlw	high(-1)
  8037  05E9  3EFF               	movwf	1+(??_SetTime+3)+0
  8038  05EA  00AD               	movf	(SetTime@i),w
  8039  05EB  0846               	movwf	(??_SetTime+5)+0
  8040  05EC  00AE               	addwf	(??_SetTime+5)+0,w
  8041  05ED  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8042  05EE  3E40               	movwf	fsr0
  8043  05EF  0084               	movf	0+(??_SetTime+3)+0,w
  8044  05F0  082C               	movwf	indf
  8045  05F1  0080               	incf	fsr0,f
  8046  05F2  0A84               	movf	1+(??_SetTime+3)+0,w
  8047  05F3  082D               	movwf	indf
  8048  05F4  0080               	goto	l3835
  8049  05F5  2EF0               	line	520
  8050                           ;main.c: 520:                 {
  8051                           	
  8052                           l206:	
  8053  05F6                     	line	521
  8054                           ;main.c: 521: 
  8055                           	goto	l3835
  8056  05F6  2EF0               	line	522
  8057                           ;main.c: 522:                     if(is24Hour == 1)
  8058                           	
  8059                           l204:	
  8060  05F7                     	
  8061                           l3801:	
  8062  05F7                     	movf	((_is24Hour)),w
  8063  05F7  085E               iorwf	((_is24Hour+1)),w
  8064  05F8  045F               	btfss	status,2
  8065  05F9  1D03               	goto	u3091
  8066  05FA  2DFC               	goto	u3090
  8067  05FB  2DFD               u3091:
  8068  05FC                     	goto	l3805
  8069  05FC  2DFF               u3090:
  8070  05FD                     	goto	l3835
  8071  05FD  2EF0               	line	525
  8072                           	
  8073                           l3803:	
  8074  05FE                     ;main.c: 523:                     {;main.c: 525:                         {
  8075                           	goto	l3835
  8076  05FE  2EF0               	line	526
  8077                           ;main.c: 526:                             setTime[i] = 0;
  8078                           	
  8079                           l208:	
  8080  05FF                     	line	527
  8081                           	
  8082                           l3805:	
  8083  05FF                     ;main.c: 527:                         }
  8084                           	movf	(SetTime@i),w
  8085  05FF  0846               	movwf	(??_SetTime+0)+0
  8086  0600  00A9               	addwf	(??_SetTime+0)+0,w
  8087  0601  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8088  0602  3E40               	movwf	fsr0
  8089  0603  0084               	bcf	status, 7	;select IRP bank0
  8090  0604  1383               	movf	indf,w
  8091  0605  0800               	movwf	(??_SetTime+1)+0+0
  8092  0606  00AA               	incf	fsr0,f
  8093  0607  0A84               	movf	indf,w
  8094  0608  0800               	movwf	(??_SetTime+1)+0+1
  8095  0609  00AB               	movf	0+(??_SetTime+1)+0,w
  8096  060A  082A               	addlw	low(-1)
  8097  060B  3EFF               	movwf	(??_SetTime+3)+0
  8098  060C  00AC               	movf	1+(??_SetTime+1)+0,w
  8099  060D  082B               	skipnc
  8100  060E  1803               	addlw	1
  8101  060F  3E01               	addlw	high(-1)
  8102  0610  3EFF               	movwf	1+(??_SetTime+3)+0
  8103  0611  00AD               	movf	(SetTime@i),w
  8104  0612  0846               	movwf	(??_SetTime+5)+0
  8105  0613  00AE               	addwf	(??_SetTime+5)+0,w
  8106  0614  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8107  0615  3E40               	movwf	fsr0
  8108  0616  0084               	movf	0+(??_SetTime+3)+0,w
  8109  0617  082C               	movwf	indf
  8110  0618  0080               	incf	fsr0,f
  8111  0619  0A84               	movf	1+(??_SetTime+3)+0,w
  8112  061A  082D               	movwf	indf
  8113  061B  0080               	goto	l3835
  8114  061C  2EF0               	
  8115                           l209:	
  8116  061D                     	goto	l3835
  8117  061D  2EF0               	
  8118                           l207:	
  8119  061E                     	line	528
  8120                           ;main.c: 528: 
  8121                           	goto	l3835
  8122  061E  2EF0               	line	530
  8123                           ;main.c: 530:                         {
  8124                           	
  8125                           l203:	
  8126  061F                     	
  8127                           l3807:	
  8128  061F                     	movf	(SetTime@i),w
  8129  061F  0846               	movwf	(??_SetTime+0)+0
  8130  0620  00A9               	addwf	(??_SetTime+0)+0,w
  8131  0621  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8132  0622  3E40               	movwf	fsr0
  8133  0623  0084               	bcf	status, 7	;select IRP bank0
  8134  0624  1383               	movf	indf,w
  8135  0625  0800               	movwf	(??_SetTime+1)+0+0
  8136  0626  00AA               	incf	fsr0,f
  8137  0627  0A84               	movf	indf,w
  8138  0628  0800               	movwf	(??_SetTime+1)+0+1
  8139  0629  00AB               	movf	((??_SetTime+1)+0),w
  8140  062A  082A               iorwf	((??_SetTime+1)+1),w
  8141  062B  042B               	btfss	status,2
  8142  062C  1D03               	goto	u3101
  8143  062D  2E2F               	goto	u3100
  8144  062E  2E30               u3101:
  8145  062F                     	goto	l3811
  8146  062F  2E3B               u3100:
  8147  0630                     	line	532
  8148                           	
  8149                           l3809:	
  8150  0630                     ;main.c: 531:                             setTime[i] = setTime[i] + 1;;main.c: 532:     
                                                     }
  8151                           	movf	(SetTime@i),w
  8152  0630  0846               	movwf	(??_SetTime+0)+0
  8153  0631  00A9               	addwf	(??_SetTime+0)+0,w
  8154  0632  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8155  0633  3E40               	movwf	fsr0
  8156  0634  0084               	movlw	03Bh
  8157  0635  303B               	movwf	indf
  8158  0636  0080               	incf	fsr0,f
  8159  0637  0A84               	movlw	0
  8160  0638  3000               	movwf	indf
  8161  0639  0080               	line	533
  8162                           ;main.c: 533:                     }
  8163                           	goto	l3835
  8164  063A  2EF0               	line	535
  8165                           ;main.c: 535:                     {
  8166                           	
  8167                           l211:	
  8168  063B                     	line	536
  8169                           	
  8170                           l3811:	
  8171  063B                     ;main.c: 536: 
  8172                           	movf	(SetTime@i),w
  8173  063B  0846               	movwf	(??_SetTime+0)+0
  8174  063C  00A9               	addwf	(??_SetTime+0)+0,w
  8175  063D  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8176  063E  3E40               	movwf	fsr0
  8177  063F  0084               	movf	indf,w
  8178  0640  0800               	movwf	(??_SetTime+1)+0+0
  8179  0641  00AA               	incf	fsr0,f
  8180  0642  0A84               	movf	indf,w
  8181  0643  0800               	movwf	(??_SetTime+1)+0+1
  8182  0644  00AB               	movf	0+(??_SetTime+1)+0,w
  8183  0645  082A               	addlw	low(-1)
  8184  0646  3EFF               	movwf	(??_SetTime+3)+0
  8185  0647  00AC               	movf	1+(??_SetTime+1)+0,w
  8186  0648  082B               	skipnc
  8187  0649  1803               	addlw	1
  8188  064A  3E01               	addlw	high(-1)
  8189  064B  3EFF               	movwf	1+(??_SetTime+3)+0
  8190  064C  00AD               	movf	(SetTime@i),w
  8191  064D  0846               	movwf	(??_SetTime+5)+0
  8192  064E  00AE               	addwf	(??_SetTime+5)+0,w
  8193  064F  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8194  0650  3E40               	movwf	fsr0
  8195  0651  0084               	movf	0+(??_SetTime+3)+0,w
  8196  0652  082C               	movwf	indf
  8197  0653  0080               	incf	fsr0,f
  8198  0654  0A84               	movf	1+(??_SetTime+3)+0,w
  8199  0655  082D               	movwf	indf
  8200  0656  0080               	goto	l3835
  8201  0657  2EF0               	
  8202                           l212:	
  8203  0658                     	goto	l3835
  8204  0658  2EF0               	
  8205                           l210:	
  8206  0659                     	line	537
  8207                           ;main.c: 537:                     }
  8208                           	goto	l3835
  8209  0659  2EF0               	line	539
  8210                           ;main.c: 539: 
  8211                           	
  8212                           l213:	
  8213  065A                     	line	541
  8214                           	
  8215                           l3813:	
  8216  065A                     ;main.c: 541:                 {
  8217                           	movf	((SetTime@i)),w
  8218  065A  0846               iorwf	((SetTime@i+1)),w
  8219  065B  0447               	btfss	status,2
  8220  065C  1D03               	goto	u3111
  8221  065D  2E5F               	goto	u3110
  8222  065E  2E60               u3111:
  8223  065F                     	goto	l3825
  8224  065F  2EA3               u3110:
  8225  0660                     	line	544
  8226                           	
  8227                           l3815:	
  8228  0660                     ;main.c: 542:                     setTime[i] = 0;;main.c: 544:                 else
  8229                           		decf	((_is24Hour)),w
  8230  0660  035E               iorwf	((_is24Hour+1)),w
  8231  0661  045F               	btfss	status,2
  8232  0662  1D03               	goto	u3121
  8233  0663  2E65               	goto	u3120
  8234  0664  2E66               u3121:
  8235  0665                     	goto	l3835
  8236  0665  2EF0               u3120:
  8237  0666                     	line	546
  8238                           	
  8239                           l3817:	
  8240  0666                     ;main.c: 545:                     setTime[i] = setTime[i] + 1;;main.c: 546:             
                                     break;
  8241                           	movf	(SetTime@i),w
  8242  0666  0846               	movwf	(??_SetTime+0)+0
  8243  0667  00A9               	addwf	(??_SetTime+0)+0,w
  8244  0668  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8245  0669  3E40               	movwf	fsr0
  8246  066A  0084               	bcf	status, 7	;select IRP bank0
  8247  066B  1383               	movf	indf,w
  8248  066C  0800               	movwf	(??_SetTime+1)+0+0
  8249  066D  00AA               	incf	fsr0,f
  8250  066E  0A84               	movf	indf,w
  8251  066F  0800               	movwf	(??_SetTime+1)+0+1
  8252  0670  00AB               		movlw	23
  8253  0671  3017               	xorwf	((??_SetTime+1)+0),w
  8254  0672  062A               iorwf	((??_SetTime+1)+1),w
  8255  0673  042B               	btfss	status,2
  8256  0674  1D03               	goto	u3131
  8257  0675  2E77               	goto	u3130
  8258  0676  2E78               u3131:
  8259  0677                     	goto	l3821
  8260  0677  2E81               u3130:
  8261  0678                     	line	548
  8262                           	
  8263                           l3819:	
  8264  0678                     ;main.c: 547:         };main.c: 548: 
  8265                           	movf	(SetTime@i),w
  8266  0678  0846               	movwf	(??_SetTime+0)+0
  8267  0679  00A9               	addwf	(??_SetTime+0)+0,w
  8268  067A  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8269  067B  3E40               	movwf	fsr0
  8270  067C  0084               	clrf	indf
  8271  067D  0180               	incf	fsr0,f
  8272  067E  0A84               	clrf	indf
  8273  067F  0180               	line	549
  8274                           ;main.c: 549: 
  8275                           	goto	l3835
  8276  0680  2EF0               	line	551
  8277                           ;main.c: 551:         min = setTime[1];
  8278                           	
  8279                           l216:	
  8280  0681                     	line	553
  8281                           	
  8282                           l3821:	
  8283  0681                     ;main.c: 552:         sec = setTime[2];;main.c: 553:         digits[1] = hour % 10 + 48;
                                 
  8284                           	movf	(SetTime@i),w
  8285  0681  0846               	movwf	(??_SetTime+0)+0
  8286  0682  00A9               	addwf	(??_SetTime+0)+0,w
  8287  0683  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8288  0684  3E40               	movwf	fsr0
  8289  0685  0084               	movf	indf,w
  8290  0686  0800               	movwf	(??_SetTime+1)+0+0
  8291  0687  00AA               	incf	fsr0,f
  8292  0688  0A84               	movf	indf,w
  8293  0689  0800               	movwf	(??_SetTime+1)+0+1
  8294  068A  00AB               	movf	0+(??_SetTime+1)+0,w
  8295  068B  082A               	addlw	low(01h)
  8296  068C  3E01               	movwf	(??_SetTime+3)+0
  8297  068D  00AC               	movf	1+(??_SetTime+1)+0,w
  8298  068E  082B               	skipnc
  8299  068F  1803               	addlw	1
  8300  0690  3E01               	addlw	high(01h)
  8301  0691  3E00               	movwf	1+(??_SetTime+3)+0
  8302  0692  00AD               	movf	(SetTime@i),w
  8303  0693  0846               	movwf	(??_SetTime+5)+0
  8304  0694  00AE               	addwf	(??_SetTime+5)+0,w
  8305  0695  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8306  0696  3E40               	movwf	fsr0
  8307  0697  0084               	movf	0+(??_SetTime+3)+0,w
  8308  0698  082C               	movwf	indf
  8309  0699  0080               	incf	fsr0,f
  8310  069A  0A84               	movf	1+(??_SetTime+3)+0,w
  8311  069B  082D               	movwf	indf
  8312  069C  0080               	goto	l3835
  8313  069D  2EF0               	line	554
  8314                           ;main.c: 554:         hour /= 10;
  8315                           	
  8316                           l217:	
  8317  069E                     	line	555
  8318                           ;main.c: 555:         digits[0] = hour % 10 + 48;
  8319                           	goto	l3835
  8320  069E  2EF0               	line	556
  8321                           ;main.c: 556:         digits[4] = min % 10 + 48;
  8322                           	
  8323                           l215:	
  8324  069F                     	goto	l3835
  8325  069F  2EF0               	
  8326                           l3823:	
  8327  06A0                     	goto	l3835
  8328  06A0  2EF0               	line	559
  8329                           ;main.c: 557:         min /= 10;;main.c: 559:         digits[7] = sec % 10 + 48;
  8330                           	
  8331                           l219:	
  8332  06A1                     	goto	l3835
  8333  06A1  2EF0               	
  8334                           l218:	
  8335  06A2                     	line	560
  8336                           ;main.c: 560:         sec /= 10;
  8337                           	goto	l3835
  8338  06A2  2EF0               	line	562
  8339                           ;main.c: 562:         LCD_SendString(digits);
  8340                           	
  8341                           l214:	
  8342  06A3                     	
  8343                           l3825:	
  8344  06A3                     	movf	(SetTime@i),w
  8345  06A3  0846               	movwf	(??_SetTime+0)+0
  8346  06A4  00A9               	addwf	(??_SetTime+0)+0,w
  8347  06A5  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8348  06A6  3E40               	movwf	fsr0
  8349  06A7  0084               	bcf	status, 7	;select IRP bank0
  8350  06A8  1383               	movf	indf,w
  8351  06A9  0800               	movwf	(??_SetTime+1)+0+0
  8352  06AA  00AA               	incf	fsr0,f
  8353  06AB  0A84               	movf	indf,w
  8354  06AC  0800               	movwf	(??_SetTime+1)+0+1
  8355  06AD  00AB               		movlw	59
  8356  06AE  303B               	xorwf	((??_SetTime+1)+0),w
  8357  06AF  062A               iorwf	((??_SetTime+1)+1),w
  8358  06B0  042B               	btfss	status,2
  8359  06B1  1D03               	goto	u3141
  8360  06B2  2EB4               	goto	u3140
  8361  06B3  2EB5               u3141:
  8362  06B4                     	goto	l3829
  8363  06B4  2EBE               u3140:
  8364  06B5                     	line	564
  8365                           	
  8366                           l3827:	
  8367  06B5                     ;main.c: 563:     };main.c: 564: }
  8368                           	movf	(SetTime@i),w
  8369  06B5  0846               	movwf	(??_SetTime+0)+0
  8370  06B6  00A9               	addwf	(??_SetTime+0)+0,w
  8371  06B7  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8372  06B8  3E40               	movwf	fsr0
  8373  06B9  0084               	clrf	indf
  8374  06BA  0180               	incf	fsr0,f
  8375  06BB  0A84               	clrf	indf
  8376  06BC  0180               	line	565
  8377                           ;main.c: 565: 
  8378                           	goto	l3835
  8379  06BD  2EF0               	line	566
  8380                           ;main.c: 566: 
  8381                           	
  8382                           l221:	
  8383  06BE                     	line	567
  8384                           	
  8385                           l3829:	
  8386  06BE                     ;main.c: 567: void CheckDay(void)
  8387                           	movf	(SetTime@i),w
  8388  06BE  0846               	movwf	(??_SetTime+0)+0
  8389  06BF  00A9               	addwf	(??_SetTime+0)+0,w
  8390  06C0  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8391  06C1  3E40               	movwf	fsr0
  8392  06C2  0084               	movf	indf,w
  8393  06C3  0800               	movwf	(??_SetTime+1)+0+0
  8394  06C4  00AA               	incf	fsr0,f
  8395  06C5  0A84               	movf	indf,w
  8396  06C6  0800               	movwf	(??_SetTime+1)+0+1
  8397  06C7  00AB               	movf	0+(??_SetTime+1)+0,w
  8398  06C8  082A               	addlw	low(01h)
  8399  06C9  3E01               	movwf	(??_SetTime+3)+0
  8400  06CA  00AC               	movf	1+(??_SetTime+1)+0,w
  8401  06CB  082B               	skipnc
  8402  06CC  1803               	addlw	1
  8403  06CD  3E01               	addlw	high(01h)
  8404  06CE  3E00               	movwf	1+(??_SetTime+3)+0
  8405  06CF  00AD               	movf	(SetTime@i),w
  8406  06D0  0846               	movwf	(??_SetTime+5)+0
  8407  06D1  00AE               	addwf	(??_SetTime+5)+0,w
  8408  06D2  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8409  06D3  3E40               	movwf	fsr0
  8410  06D4  0084               	movf	0+(??_SetTime+3)+0,w
  8411  06D5  082C               	movwf	indf
  8412  06D6  0080               	incf	fsr0,f
  8413  06D7  0A84               	movf	1+(??_SetTime+3)+0,w
  8414  06D8  082D               	movwf	indf
  8415  06D9  0080               	goto	l3835
  8416  06DA  2EF0               	
  8417                           l222:	
  8418  06DB                     	goto	l3835
  8419  06DB  2EF0               	
  8420                           l220:	
  8421  06DC                     	line	568
  8422                           ;main.c: 568: {
  8423                           	goto	l3835
  8424  06DC  2EF0               	line	569
  8425                           	
  8426                           l3831:	
  8427  06DD                     ;main.c: 569:     switch(day_of_week)
  8428                           	goto	l3835
  8429  06DD  2EF0               	
  8430                           l197:	
  8431  06DE                     	
  8432                           l3833:	
  8433  06DE                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8434                           ; Switch size 1, requested type "space"
  8435                           ; Number of cases is 1, Range of values is 0 to 0
  8436                           ; switch strategies available:
  8437                           ; Name         Instructions Cycles
  8438                           ; simple_byte            4     3 (average)
  8439                           ; direct_byte           11     8 (fixed)
  8440                           ; jumptable            260     6 (fixed)
  8441                           ;	Chosen strategy is simple_byte
  8442                           
  8443                           	bcf	status, 5	;RP0=0, select bank0
  8444  06DE  1283               	bcf	status, 6	;RP1=0, select bank0
  8445  06DF  1303               	movf (SetTime@Key+1),w
  8446  06E0  0828               	opt asmopt_push
  8447                           	opt asmopt_off
  8448                           	xorlw	0^0	; case 0
  8449  06E1  3A00               	skipnz
  8450  06E2  1903               	goto	l4285
  8451  06E3  2EE5               	goto	l3835
  8452  06E4  2EF0               	opt asmopt_pop
  8453                           	
  8454                           l4285:	
  8455  06E5                     ; Switch size 1, requested type "space"
  8456                           ; Number of cases is 3, Range of values is 10 to 12
  8457                           ; switch strategies available:
  8458                           ; Name         Instructions Cycles
  8459                           ; simple_byte           10     6 (average)
  8460                           ; direct_byte           20    11 (fixed)
  8461                           ; jumptable            263     9 (fixed)
  8462                           ;	Chosen strategy is simple_byte
  8463                           
  8464                           	movf (SetTime@Key),w
  8465  06E5  0827               	opt asmopt_push
  8466                           	opt asmopt_off
  8467                           	xorlw	10^0	; case 10
  8468  06E6  3A0A               	skipnz
  8469  06E7  1903               	goto	l3785
  8470  06E8  2D9D               	xorlw	11^10	; case 11
  8471  06E9  3A01               	skipnz
  8472  06EA  1903               	goto	l3791
  8473  06EB  2DB1               	xorlw	12^11	; case 12
  8474  06EC  3A07               	skipnz
  8475  06ED  1903               	goto	l3813
  8476  06EE  2E5A               	goto	l3835
  8477  06EF  2EF0               	opt asmopt_pop
  8478                           
  8479                           	
  8480                           l201:	
  8481  06F0                     	line	572
  8482                           	
  8483                           l3835:	
  8484  06F0                     ;main.c: 572: 
  8485                           	movf	(SetTime@setTime+1),w
  8486  06F0  0841               	movwf	(SetTime@hour+1)
  8487  06F1  00BB               	movf	(SetTime@setTime),w
  8488  06F2  0840               	movwf	(SetTime@hour)
  8489  06F3  00BA               	line	573
  8490                           ;main.c: 573:         case 1:
  8491                           	movf	1+(SetTime@setTime)+02h,w
  8492  06F4  0843               	movwf	(SetTime@min+1)
  8493  06F5  00BD               	movf	0+(SetTime@setTime)+02h,w
  8494  06F6  0842               	movwf	(SetTime@min)
  8495  06F7  00BC               	line	574
  8496                           ;main.c: 574:             isWeekDay = 1;
  8497                           	movf	1+(SetTime@setTime)+04h,w
  8498  06F8  0845               	movwf	(SetTime@sec+1)
  8499  06F9  00BF               	movf	0+(SetTime@setTime)+04h,w
  8500  06FA  0844               	movwf	(SetTime@sec)
  8501  06FB  00BE               	line	575
  8502                           	
  8503                           l3837:	
  8504  06FC                     ;main.c: 575:             break;
  8505                           	movlw	0Ah
  8506  06FC  300A               	movwf	(___awmod@divisor)
  8507  06FD  00F0               	movlw	0
  8508  06FE  3000               	movwf	((___awmod@divisor))+1
  8509  06FF  00F1               	movf	(SetTime@hour+1),w
  8510  0700  083B               	movwf	(___awmod@dividend+1)
  8511  0701  00F3               	movf	(SetTime@hour),w
  8512  0702  083A               	movwf	(___awmod@dividend)
  8513  0703  00F2               	fcall	___awmod
  8514  0704  160A  118A  255D  120A  118A  	movf	(0+(?___awmod)),w
  8515  0709  0870               	addlw	030h
  8516  070A  3E30               	bcf	status, 5	;RP0=0, select bank0
  8517  070B  1283               	bcf	status, 6	;RP1=0, select bank0
  8518  070C  1303               	movwf	(??_SetTime+0)+0
  8519  070D  00A9               	movf	(??_SetTime+0)+0,w
  8520  070E  0829               	movwf	0+(SetTime@digits)+01h
  8521  070F  00B0               	line	576
  8522                           	
  8523                           l3839:	
  8524  0710                     ;main.c: 576:         case 2:
  8525                           	movlw	0Ah
  8526  0710  300A               	movwf	(___awdiv@divisor)
  8527  0711  00F0               	movlw	0
  8528  0712  3000               	movwf	((___awdiv@divisor))+1
  8529  0713  00F1               	movf	(SetTime@hour+1),w
  8530  0714  083B               	movwf	(___awdiv@dividend+1)
  8531  0715  00F3               	movf	(SetTime@hour),w
  8532  0716  083A               	movwf	(___awdiv@dividend)
  8533  0717  00F2               	fcall	___awdiv
  8534  0718  160A  118A  25C0  120A  118A  	movf	(1+(?___awdiv)),w
  8535  071D  0871               	bcf	status, 5	;RP0=0, select bank0
  8536  071E  1283               	bcf	status, 6	;RP1=0, select bank0
  8537  071F  1303               	movwf	(SetTime@hour+1)
  8538  0720  00BB               	movf	(0+(?___awdiv)),w
  8539  0721  0870               	movwf	(SetTime@hour)
  8540  0722  00BA               	line	577
  8541                           	
  8542                           l3841:	
  8543  0723                     ;main.c: 577:             isWeekDay = 1;
  8544                           	movlw	0Ah
  8545  0723  300A               	movwf	(___awmod@divisor)
  8546  0724  00F0               	movlw	0
  8547  0725  3000               	movwf	((___awmod@divisor))+1
  8548  0726  00F1               	movf	(SetTime@hour+1),w
  8549  0727  083B               	movwf	(___awmod@dividend+1)
  8550  0728  00F3               	movf	(SetTime@hour),w
  8551  0729  083A               	movwf	(___awmod@dividend)
  8552  072A  00F2               	fcall	___awmod
  8553  072B  160A  118A  255D  120A  118A  	movf	(0+(?___awmod)),w
  8554  0730  0870               	addlw	030h
  8555  0731  3E30               	bcf	status, 5	;RP0=0, select bank0
  8556  0732  1283               	bcf	status, 6	;RP1=0, select bank0
  8557  0733  1303               	movwf	(??_SetTime+0)+0
  8558  0734  00A9               	movf	(??_SetTime+0)+0,w
  8559  0735  0829               	movwf	(SetTime@digits)
  8560  0736  00AF               	line	578
  8561                           	
  8562                           l3843:	
  8563  0737                     ;main.c: 578:             break;
  8564                           	movlw	0Ah
  8565  0737  300A               	movwf	(___awmod@divisor)
  8566  0738  00F0               	movlw	0
  8567  0739  3000               	movwf	((___awmod@divisor))+1
  8568  073A  00F1               	movf	(SetTime@min+1),w
  8569  073B  083D               	movwf	(___awmod@dividend+1)
  8570  073C  00F3               	movf	(SetTime@min),w
  8571  073D  083C               	movwf	(___awmod@dividend)
  8572  073E  00F2               	fcall	___awmod
  8573  073F  160A  118A  255D  120A  118A  	movf	(0+(?___awmod)),w
  8574  0744  0870               	addlw	030h
  8575  0745  3E30               	bcf	status, 5	;RP0=0, select bank0
  8576  0746  1283               	bcf	status, 6	;RP1=0, select bank0
  8577  0747  1303               	movwf	(??_SetTime+0)+0
  8578  0748  00A9               	movf	(??_SetTime+0)+0,w
  8579  0749  0829               	movwf	0+(SetTime@digits)+04h
  8580  074A  00B3               	line	579
  8581                           	
  8582                           l3845:	
  8583  074B                     ;main.c: 579:         case 3:
  8584                           	movlw	0Ah
  8585  074B  300A               	movwf	(___awdiv@divisor)
  8586  074C  00F0               	movlw	0
  8587  074D  3000               	movwf	((___awdiv@divisor))+1
  8588  074E  00F1               	movf	(SetTime@min+1),w
  8589  074F  083D               	movwf	(___awdiv@dividend+1)
  8590  0750  00F3               	movf	(SetTime@min),w
  8591  0751  083C               	movwf	(___awdiv@dividend)
  8592  0752  00F2               	fcall	___awdiv
  8593  0753  160A  118A  25C0  120A  118A  	movf	(1+(?___awdiv)),w
  8594  0758  0871               	bcf	status, 5	;RP0=0, select bank0
  8595  0759  1283               	bcf	status, 6	;RP1=0, select bank0
  8596  075A  1303               	movwf	(SetTime@min+1)
  8597  075B  00BD               	movf	(0+(?___awdiv)),w
  8598  075C  0870               	movwf	(SetTime@min)
  8599  075D  00BC               	line	580
  8600                           	
  8601                           l3847:	
  8602  075E                     ;main.c: 580:             isWeekDay = 1;
  8603                           	movlw	0Ah
  8604  075E  300A               	movwf	(___awmod@divisor)
  8605  075F  00F0               	movlw	0
  8606  0760  3000               	movwf	((___awmod@divisor))+1
  8607  0761  00F1               	movf	(SetTime@min+1),w
  8608  0762  083D               	movwf	(___awmod@dividend+1)
  8609  0763  00F3               	movf	(SetTime@min),w
  8610  0764  083C               	movwf	(___awmod@dividend)
  8611  0765  00F2               	fcall	___awmod
  8612  0766  160A  118A  255D  120A  118A  	movf	(0+(?___awmod)),w
  8613  076B  0870               	addlw	030h
  8614  076C  3E30               	bcf	status, 5	;RP0=0, select bank0
  8615  076D  1283               	bcf	status, 6	;RP1=0, select bank0
  8616  076E  1303               	movwf	(??_SetTime+0)+0
  8617  076F  00A9               	movf	(??_SetTime+0)+0,w
  8618  0770  0829               	movwf	0+(SetTime@digits)+03h
  8619  0771  00B2               	line	581
  8620                           	
  8621                           l3849:	
  8622  0772                     ;main.c: 581:             break;
  8623                           	movlw	0Ah
  8624  0772  300A               	movwf	(___awmod@divisor)
  8625  0773  00F0               	movlw	0
  8626  0774  3000               	movwf	((___awmod@divisor))+1
  8627  0775  00F1               	movf	(SetTime@sec+1),w
  8628  0776  083F               	movwf	(___awmod@dividend+1)
  8629  0777  00F3               	movf	(SetTime@sec),w
  8630  0778  083E               	movwf	(___awmod@dividend)
  8631  0779  00F2               	fcall	___awmod
  8632  077A  160A  118A  255D  120A  118A  	movf	(0+(?___awmod)),w
  8633  077F  0870               	addlw	030h
  8634  0780  3E30               	bcf	status, 5	;RP0=0, select bank0
  8635  0781  1283               	bcf	status, 6	;RP1=0, select bank0
  8636  0782  1303               	movwf	(??_SetTime+0)+0
  8637  0783  00A9               	movf	(??_SetTime+0)+0,w
  8638  0784  0829               	movwf	0+(SetTime@digits)+07h
  8639  0785  00B6               	line	582
  8640                           	
  8641                           l3851:	
  8642  0786                     ;main.c: 582:         case 4:
  8643                           	movlw	0Ah
  8644  0786  300A               	movwf	(___awdiv@divisor)
  8645  0787  00F0               	movlw	0
  8646  0788  3000               	movwf	((___awdiv@divisor))+1
  8647  0789  00F1               	movf	(SetTime@sec+1),w
  8648  078A  083F               	movwf	(___awdiv@dividend+1)
  8649  078B  00F3               	movf	(SetTime@sec),w
  8650  078C  083E               	movwf	(___awdiv@dividend)
  8651  078D  00F2               	fcall	___awdiv
  8652  078E  160A  118A  25C0  120A  118A  	movf	(1+(?___awdiv)),w
  8653  0793  0871               	bcf	status, 5	;RP0=0, select bank0
  8654  0794  1283               	bcf	status, 6	;RP1=0, select bank0
  8655  0795  1303               	movwf	(SetTime@sec+1)
  8656  0796  00BF               	movf	(0+(?___awdiv)),w
  8657  0797  0870               	movwf	(SetTime@sec)
  8658  0798  00BE               	line	583
  8659                           	
  8660                           l3853:	
  8661  0799                     ;main.c: 583:             isWeekDay = 1;
  8662                           	movlw	0Ah
  8663  0799  300A               	movwf	(___awmod@divisor)
  8664  079A  00F0               	movlw	0
  8665  079B  3000               	movwf	((___awmod@divisor))+1
  8666  079C  00F1               	movf	(SetTime@sec+1),w
  8667  079D  083F               	movwf	(___awmod@dividend+1)
  8668  079E  00F3               	movf	(SetTime@sec),w
  8669  079F  083E               	movwf	(___awmod@dividend)
  8670  07A0  00F2               	fcall	___awmod
  8671  07A1  160A  118A  255D  120A  118A  	movf	(0+(?___awmod)),w
  8672  07A6  0870               	addlw	030h
  8673  07A7  3E30               	bcf	status, 5	;RP0=0, select bank0
  8674  07A8  1283               	bcf	status, 6	;RP1=0, select bank0
  8675  07A9  1303               	movwf	(??_SetTime+0)+0
  8676  07AA  00A9               	movf	(??_SetTime+0)+0,w
  8677  07AB  0829               	movwf	0+(SetTime@digits)+06h
  8678  07AC  00B5               	line	584
  8679                           	
  8680                           l3855:	
  8681  07AD                     ;main.c: 584:             break;
  8682                           	movlw	(low(SetTime@digits|((0x0)<<8))&0ffh)
  8683  07AD  302F               	movwf	(LCD_SendString@string)
  8684  07AE  00F1               	movlw	(0x0)
  8685  07AF  3000               	movwf	(LCD_SendString@string+1)
  8686  07B0  00F2               	fcall	_LCD_SendString
  8687  07B1  160A  118A  2361  120A  118A  	goto	l3763
  8688  07B6  2D18               	line	585
  8689                           ;main.c: 585:         case 5:
  8690                           	
  8691                           l223:	
  8692  07B7                     	goto	l3763
  8693  07B7  2D18               	
  8694                           l196:	
  8695  07B8                     	line	586
  8696                           	
  8697                           l224:	
  8698  07B8                     	return
  8699  07B8  0008               	opt stack 0
  8700                           GLOBAL	__end_of_SetTime
  8701                           	__end_of_SetTime:
  8702  07B9                     	signat	_SetTime,4217
  8703                           	global	_RealTimeClock_set_seconds
  8704                           
  8705 ;; *************** function _RealTimeClock_set_seconds *****************
  8706 ;; Defined at:
  8707 ;;		line 144 in file "realtimeclock.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;  seconds         2    0[BANK0 ] int 
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;		None
  8712 ;; Return value:  Size  Location     Type
  8713 ;;                  1    wreg      void 
  8714 ;; Registers used:
  8715 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8716 ;; Tracked objects:
  8717 ;;		On entry : 0/0
  8718 ;;		On exit  : 0/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8721 ;;      Params:         0       2       0       0       0
  8722 ;;      Locals:         0       0       0       0       0
  8723 ;;      Temps:          0       0       0       0       0
  8724 ;;      Totals:         0       2       0       0       0
  8725 ;;Total ram usage:        2 bytes
  8726 ;; Hardware stack levels used:    1
  8727 ;; Hardware stack levels required when called:    2
  8728 ;; This function calls:
  8729 ;;		_RealTimeClock_write_byte
  8730 ;;		___int_to_hex
  8731 ;; This function is called by:
  8732 ;;		_SetTime
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  8736                           	file	"realtimeclock.c"
  8737                           	line	144
  8738                           global __ptext19
  8739                           __ptext19:	;psect for function _RealTimeClock_set_seconds
  8740  1EB1                     psect	text19
  8741                           	file	"realtimeclock.c"
  8742                           	line	144
  8743                           	global	__size_of_RealTimeClock_set_seconds
  8744                           	__size_of_RealTimeClock_set_seconds	equ	__end_of_RealTimeClock_set_seconds-_RealTimeClo
                                 ck_set_seconds
  8745  001D                     	
  8746                           _RealTimeClock_set_seconds:	
  8747  1EB1                     ;incstack = 0
  8748                           	opt	stack 4
  8749                           ; Regs used in _RealTimeClock_set_seconds: [wreg+status,2+status,0+btemp+1+pclath+cstack
                                 ]
  8750                           	line	145
  8751                           	
  8752                           l3633:	
  8753  1EB1                     ;realtimeclock.c: 145:     RB5 = 1;
  8754                           	bcf	status, 5	;RP0=0, select bank0
  8755  1EB1  1283               	bcf	status, 6	;RP1=0, select bank0
  8756  1EB2  1303               	bsf	(53/8),(53)&7	;volatile
  8757  1EB3  1686               	line	146
  8758                           	
  8759                           l3635:	
  8760  1EB4                     ;realtimeclock.c: 146:     RealTimeClock_write_byte(0x80);
  8761                           	movlw	low(080h)
  8762  1EB4  3080               	fcall	_RealTimeClock_write_byte
  8763  1EB5  160A  118A  21AC  160A  158A  	line	147
  8764                           ;realtimeclock.c: 147:     RealTimeClock_write_byte(__int_to_hex(seconds));
  8765                           	bcf	status, 5	;RP0=0, select bank0
  8766  1EBA  1283               	bcf	status, 6	;RP1=0, select bank0
  8767  1EBB  1303               	movf	(RealTimeClock_set_seconds@seconds+1),w
  8768  1EBC  0821               	movwf	(___int_to_hex@integer+1)
  8769  1EBD  00F8               	movf	(RealTimeClock_set_seconds@seconds),w
  8770  1EBE  0820               	movwf	(___int_to_hex@integer)
  8771  1EBF  00F7               	fcall	___int_to_hex
  8772  1EC0  160A  118A  231F  160A  158A  	fcall	_RealTimeClock_write_byte
  8773  1EC5  160A  118A  21AC  160A  158A  	line	148
  8774                           	
  8775                           l3637:	
  8776  1ECA                     ;realtimeclock.c: 148:     RB5 = 0;
  8777                           	bcf	status, 5	;RP0=0, select bank0
  8778  1ECA  1283               	bcf	status, 6	;RP1=0, select bank0
  8779  1ECB  1303               	bcf	(53/8),(53)&7	;volatile
  8780  1ECC  1286               	line	149
  8781                           	
  8782                           l376:	
  8783  1ECD                     	return
  8784  1ECD  0008               	opt stack 0
  8785                           GLOBAL	__end_of_RealTimeClock_set_seconds
  8786                           	__end_of_RealTimeClock_set_seconds:
  8787  1ECE                     	signat	_RealTimeClock_set_seconds,4217
  8788                           	global	_RealTimeClock_set_minutes
  8789                           
  8790 ;; *************** function _RealTimeClock_set_minutes *****************
  8791 ;; Defined at:
  8792 ;;		line 151 in file "realtimeclock.c"
  8793 ;; Parameters:    Size  Location     Type
  8794 ;;  minutes         2    0[BANK0 ] int 
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;		None
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  1    wreg      void 
  8799 ;; Registers used:
  8800 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8806 ;;      Params:         0       2       0       0       0
  8807 ;;      Locals:         0       0       0       0       0
  8808 ;;      Temps:          0       0       0       0       0
  8809 ;;      Totals:         0       2       0       0       0
  8810 ;;Total ram usage:        2 bytes
  8811 ;; Hardware stack levels used:    1
  8812 ;; Hardware stack levels required when called:    2
  8813 ;; This function calls:
  8814 ;;		_RealTimeClock_write_byte
  8815 ;;		___int_to_hex
  8816 ;; This function is called by:
  8817 ;;		_SetTime
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  8821                           	line	151
  8822                           global __ptext20
  8823                           __ptext20:	;psect for function _RealTimeClock_set_minutes
  8824  1E94                     psect	text20
  8825                           	file	"realtimeclock.c"
  8826                           	line	151
  8827                           	global	__size_of_RealTimeClock_set_minutes
  8828                           	__size_of_RealTimeClock_set_minutes	equ	__end_of_RealTimeClock_set_minutes-_RealTimeClo
                                 ck_set_minutes
  8829  001D                     	
  8830                           _RealTimeClock_set_minutes:	
  8831  1E94                     ;incstack = 0
  8832                           	opt	stack 4
  8833                           ; Regs used in _RealTimeClock_set_minutes: [wreg+status,2+status,0+btemp+1+pclath+cstack
                                 ]
  8834                           	line	152
  8835                           	
  8836                           l3627:	
  8837  1E94                     ;realtimeclock.c: 152:     RB5 = 1;
  8838                           	bcf	status, 5	;RP0=0, select bank0
  8839  1E94  1283               	bcf	status, 6	;RP1=0, select bank0
  8840  1E95  1303               	bsf	(53/8),(53)&7	;volatile
  8841  1E96  1686               	line	153
  8842                           	
  8843                           l3629:	
  8844  1E97                     ;realtimeclock.c: 153:     RealTimeClock_write_byte(0x82);
  8845                           	movlw	low(082h)
  8846  1E97  3082               	fcall	_RealTimeClock_write_byte
  8847  1E98  160A  118A  21AC  160A  158A  	line	154
  8848                           ;realtimeclock.c: 154:     RealTimeClock_write_byte(__int_to_hex(minutes));
  8849                           	bcf	status, 5	;RP0=0, select bank0
  8850  1E9D  1283               	bcf	status, 6	;RP1=0, select bank0
  8851  1E9E  1303               	movf	(RealTimeClock_set_minutes@minutes+1),w
  8852  1E9F  0821               	movwf	(___int_to_hex@integer+1)
  8853  1EA0  00F8               	movf	(RealTimeClock_set_minutes@minutes),w
  8854  1EA1  0820               	movwf	(___int_to_hex@integer)
  8855  1EA2  00F7               	fcall	___int_to_hex
  8856  1EA3  160A  118A  231F  160A  158A  	fcall	_RealTimeClock_write_byte
  8857  1EA8  160A  118A  21AC  160A  158A  	line	155
  8858                           	
  8859                           l3631:	
  8860  1EAD                     ;realtimeclock.c: 155:     RB5 = 0;
  8861                           	bcf	status, 5	;RP0=0, select bank0
  8862  1EAD  1283               	bcf	status, 6	;RP1=0, select bank0
  8863  1EAE  1303               	bcf	(53/8),(53)&7	;volatile
  8864  1EAF  1286               	line	156
  8865                           	
  8866                           l379:	
  8867  1EB0                     	return
  8868  1EB0  0008               	opt stack 0
  8869                           GLOBAL	__end_of_RealTimeClock_set_minutes
  8870                           	__end_of_RealTimeClock_set_minutes:
  8871  1EB1                     	signat	_RealTimeClock_set_minutes,4217
  8872                           	global	_RealTimeClock_set_hours
  8873                           
  8874 ;; *************** function _RealTimeClock_set_hours *****************
  8875 ;; Defined at:
  8876 ;;		line 158 in file "realtimeclock.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;  hours           2    0[BANK0 ] int 
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;		None
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8890 ;;      Params:         0       2       0       0       0
  8891 ;;      Locals:         0       0       0       0       0
  8892 ;;      Temps:          0       0       0       0       0
  8893 ;;      Totals:         0       2       0       0       0
  8894 ;;Total ram usage:        2 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    2
  8897 ;; This function calls:
  8898 ;;		_RealTimeClock_write_byte
  8899 ;;		___int_to_hex
  8900 ;; This function is called by:
  8901 ;;		_SetTime
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  8905                           	line	158
  8906                           global __ptext21
  8907                           __ptext21:	;psect for function _RealTimeClock_set_hours
  8908  1E77                     psect	text21
  8909                           	file	"realtimeclock.c"
  8910                           	line	158
  8911                           	global	__size_of_RealTimeClock_set_hours
  8912                           	__size_of_RealTimeClock_set_hours	equ	__end_of_RealTimeClock_set_hours-_RealTimeClock_s
                                 et_hours
  8913  001D                     	
  8914                           _RealTimeClock_set_hours:	
  8915  1E77                     ;incstack = 0
  8916                           	opt	stack 4
  8917                           ; Regs used in _RealTimeClock_set_hours: [wreg+status,2+status,0+btemp+1+pclath+cstack]

  8918                           	line	159
  8919                           	
  8920                           l3621:	
  8921  1E77                     ;realtimeclock.c: 159:     RB5 = 1;
  8922                           	bcf	status, 5	;RP0=0, select bank0
  8923  1E77  1283               	bcf	status, 6	;RP1=0, select bank0
  8924  1E78  1303               	bsf	(53/8),(53)&7	;volatile
  8925  1E79  1686               	line	160
  8926                           	
  8927                           l3623:	
  8928  1E7A                     ;realtimeclock.c: 160:     RealTimeClock_write_byte(0x84);
  8929                           	movlw	low(084h)
  8930  1E7A  3084               	fcall	_RealTimeClock_write_byte
  8931  1E7B  160A  118A  21AC  160A  158A  	line	161
  8932                           ;realtimeclock.c: 161:     RealTimeClock_write_byte(__int_to_hex(hours));
  8933                           	bcf	status, 5	;RP0=0, select bank0
  8934  1E80  1283               	bcf	status, 6	;RP1=0, select bank0
  8935  1E81  1303               	movf	(RealTimeClock_set_hours@hours+1),w
  8936  1E82  0821               	movwf	(___int_to_hex@integer+1)
  8937  1E83  00F8               	movf	(RealTimeClock_set_hours@hours),w
  8938  1E84  0820               	movwf	(___int_to_hex@integer)
  8939  1E85  00F7               	fcall	___int_to_hex
  8940  1E86  160A  118A  231F  160A  158A  	fcall	_RealTimeClock_write_byte
  8941  1E8B  160A  118A  21AC  160A  158A  	line	162
  8942                           	
  8943                           l3625:	
  8944  1E90                     ;realtimeclock.c: 162:     RB5 = 0;
  8945                           	bcf	status, 5	;RP0=0, select bank0
  8946  1E90  1283               	bcf	status, 6	;RP1=0, select bank0
  8947  1E91  1303               	bcf	(53/8),(53)&7	;volatile
  8948  1E92  1286               	line	163
  8949                           	
  8950                           l382:	
  8951  1E93                     	return
  8952  1E93  0008               	opt stack 0
  8953                           GLOBAL	__end_of_RealTimeClock_set_hours
  8954                           	__end_of_RealTimeClock_set_hours:
  8955  1E94                     	signat	_RealTimeClock_set_hours,4217
  8956                           	global	_RealTimeClock_get_seconds
  8957                           
  8958 ;; *************** function _RealTimeClock_get_seconds *****************
  8959 ;; Defined at:
  8960 ;;		line 88 in file "realtimeclock.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;		None
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  c               1   11[COMMON] unsigned char 
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  2    5[BANK0 ] int 
  8967 ;; Registers used:
  8968 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8974 ;;      Params:         0       2       0       0       0
  8975 ;;      Locals:         1       0       0       0       0
  8976 ;;      Temps:          1       0       0       0       0
  8977 ;;      Totals:         2       2       0       0       0
  8978 ;;Total ram usage:        4 bytes
  8979 ;; Hardware stack levels used:    1
  8980 ;; Hardware stack levels required when called:    2
  8981 ;; This function calls:
  8982 ;;		_RealTimeClock_read_byte
  8983 ;;		_RealTimeClock_write_byte
  8984 ;;		___hex_to_int
  8985 ;; This function is called by:
  8986 ;;		_DisplayTime
  8987 ;;		_SetTime
  8988 ;; This function uses a non-reentrant model
  8989 ;;
  8990                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  8991                           	line	88
  8992                           global __ptext22
  8993                           __ptext22:	;psect for function _RealTimeClock_get_seconds
  8994  1FB8                     psect	text22
  8995                           	file	"realtimeclock.c"
  8996                           	line	88
  8997                           	global	__size_of_RealTimeClock_get_seconds
  8998                           	__size_of_RealTimeClock_get_seconds	equ	__end_of_RealTimeClock_get_seconds-_RealTimeClo
                                 ck_get_seconds
  8999  0022                     	
  9000                           _RealTimeClock_get_seconds:	
  9001  1FB8                     ;incstack = 0
  9002                           	opt	stack 1
  9003                           ; Regs used in _RealTimeClock_get_seconds: [wreg+status,2+status,0+btemp+1+pclath+cstack
                                 ]
  9004                           	line	89
  9005                           	
  9006                           l3049:	
  9007  1FB8                     ;realtimeclock.c: 89:     RB5 = 1;
  9008                           	bcf	status, 5	;RP0=0, select bank0
  9009  1FB8  1283               	bcf	status, 6	;RP1=0, select bank0
  9010  1FB9  1303               	bsf	(53/8),(53)&7	;volatile
  9011  1FBA  1686               	line	90
  9012                           	
  9013                           l3051:	
  9014  1FBB                     ;realtimeclock.c: 90:     RealTimeClock_write_byte(0x81);
  9015                           	movlw	low(081h)
  9016  1FBB  3081               	fcall	_RealTimeClock_write_byte
  9017  1FBC  160A  118A  21AC  160A  158A  	line	91
  9018                           ;realtimeclock.c: 91:     unsigned char c = RealTimeClock_read_byte();
  9019                           	fcall	_RealTimeClock_read_byte
  9020  1FC1  160A  118A  242D  160A  158A  	movwf	(??_RealTimeClock_get_seconds+0)+0
  9021  1FC6  00FA               	movf	(??_RealTimeClock_get_seconds+0)+0,w
  9022  1FC7  087A               	movwf	(RealTimeClock_get_seconds@c)
  9023  1FC8  00FB               	line	92
  9024                           	
  9025                           l3053:	
  9026  1FC9                     ;realtimeclock.c: 92:     RB5 = 0;
  9027                           	bcf	status, 5	;RP0=0, select bank0
  9028  1FC9  1283               	bcf	status, 6	;RP1=0, select bank0
  9029  1FCA  1303               	bcf	(53/8),(53)&7	;volatile
  9030  1FCB  1286               	line	93
  9031                           	
  9032                           l3055:	
  9033  1FCC                     ;realtimeclock.c: 93:     return __hex_to_int(c);
  9034                           	movf	(RealTimeClock_get_seconds@c),w
  9035  1FCC  087B               	fcall	___hex_to_int
  9036  1FCD  160A  118A  24BF  160A  158A  	movf	(1+(?___hex_to_int)),w
  9037  1FD2  0878               	bcf	status, 5	;RP0=0, select bank0
  9038  1FD3  1283               	bcf	status, 6	;RP1=0, select bank0
  9039  1FD4  1303               	movwf	(?_RealTimeClock_get_seconds+1)
  9040  1FD5  00A6               	movf	(0+(?___hex_to_int)),w
  9041  1FD6  0877               	movwf	(?_RealTimeClock_get_seconds)
  9042  1FD7  00A5               	goto	l355
  9043  1FD8  2FD9               	
  9044                           l3057:	
  9045  1FD9                     	line	94
  9046                           	
  9047                           l355:	
  9048  1FD9                     	return
  9049  1FD9  0008               	opt stack 0
  9050                           GLOBAL	__end_of_RealTimeClock_get_seconds
  9051                           	__end_of_RealTimeClock_get_seconds:
  9052  1FDA                     	signat	_RealTimeClock_get_seconds,90
  9053                           	global	_SetDate
  9054                           
  9055 ;; *************** function _SetDate *****************
  9056 ;; Defined at:
  9057 ;;		line 619 in file "main.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;  Key             2    7[BANK0 ] int 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;  dayInt          2   22[BANK0 ] int 
  9062 ;;  i               2   20[BANK0 ] int 
  9063 ;;  Sunday          1   19[BANK0 ] PTR unsigned char 
  9064 ;;		 -> STR_31(4), 
  9065 ;;  Saturday        1   18[BANK0 ] PTR unsigned char 
  9066 ;;		 -> STR_30(4), 
  9067 ;;  Friday          1   17[BANK0 ] PTR unsigned char 
  9068 ;;		 -> STR_29(4), 
  9069 ;;  Thursday        1   16[BANK0 ] PTR unsigned char 
  9070 ;;		 -> STR_28(4), 
  9071 ;;  Wednesday       1   15[BANK0 ] PTR unsigned char 
  9072 ;;		 -> STR_27(4), 
  9073 ;;  Tuesday         1   14[BANK0 ] PTR unsigned char 
  9074 ;;		 -> STR_26(4), 
  9075 ;;  Monday          1   13[BANK0 ] PTR unsigned char 
  9076 ;;		 -> STR_25(4), 
  9077 ;;  DateSet         1   12[BANK0 ] PTR unsigned char 
  9078 ;;		 -> STR_24(13), 
  9079 ;;  Date            1   11[BANK0 ] PTR unsigned char 
  9080 ;;		 -> STR_23(6), 
  9081 ;;  Day             1   10[BANK0 ] PTR unsigned char 
  9082 ;;		 -> STR_22(5), 
  9083 ;; Return value:  Size  Location     Type
  9084 ;;                  1    wreg      void 
  9085 ;; Registers used:
  9086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9087 ;; Tracked objects:
  9088 ;;		On entry : 0/0
  9089 ;;		On exit  : 0/0
  9090 ;;		Unchanged: 0/0
  9091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9092 ;;      Params:         0       2       0       0       0
  9093 ;;      Locals:         0      14       0       0       0
  9094 ;;      Temps:          0       1       0       0       0
  9095 ;;      Totals:         0      17       0       0       0
  9096 ;;Total ram usage:       17 bytes
  9097 ;; Hardware stack levels used:    1
  9098 ;; Hardware stack levels required when called:    3
  9099 ;; This function calls:
  9100 ;;		_CheckDay
  9101 ;;		_Keypad_Scan
  9102 ;;		_LCD_Command
  9103 ;;		_LCD_SecondLine
  9104 ;;		_LCD_SendString
  9105 ;;		_Main_Delay
  9106 ;;		_RealTimeClock_get_day_of_week
  9107 ;;		_RealTimeClock_set_day_of_week
  9108 ;; This function is called by:
  9109 ;;		_main
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  9113                           	file	"main.c"
  9114                           	line	619
  9115                           global __ptext23
  9116                           __ptext23:	;psect for function _SetDate
  9117  0CE1                     psect	text23
  9118                           	file	"main.c"
  9119                           	line	619
  9120                           	global	__size_of_SetDate
  9121                           	__size_of_SetDate	equ	__end_of_SetDate-_SetDate
  9122  018F                     	
  9123                           _SetDate:	
  9124  0CE1                     ;incstack = 0
  9125                           	opt	stack 4
  9126                           ; Regs used in _SetDate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9127                           	line	622
  9128                           	
  9129                           l3861:	
  9130  0CE1                     ;main.c: 619:         if(Key == 13);main.c: 620:         {;main.c: 622:             LCD_
                                 Command(0x03);
  9131                           	movlw	low(01h)
  9132  0CE1  3001               	fcall	_LCD_Command
  9133  0CE2  160A  158A  25EF  120A  158A  	line	623
  9134                           	
  9135                           l3863:	
  9136  0CE7                     ;main.c: 623: 
  9137                           	bcf	status, 5	;RP0=0, select bank0
  9138  0CE7  1283               	bcf	status, 6	;RP1=0, select bank0
  9139  0CE8  1303               	clrf	(SetDate@i)
  9140  0CE9  01B4               	clrf	(SetDate@i+1)
  9141  0CEA  01B5               	line	624
  9142                           	
  9143                           l3865:	
  9144  0CEB                     ;main.c: 624:             CheckDay();
  9145                           	movlw	(low((((STR_22)-__stringbase)|8000h)))&0ffh
  9146  0CEB  30B4               	movwf	(??_SetDate+0)+0
  9147  0CEC  00A9               	movf	(??_SetDate+0)+0,w
  9148  0CED  0829               	movwf	(SetDate@Day)
  9149  0CEE  00AA               	line	625
  9150                           	
  9151                           l3867:	
  9152  0CEF                     ;main.c: 625: 
  9153                           	movlw	(low((((STR_23)-__stringbase)|8000h)))&0ffh
  9154  0CEF  30A8               	movwf	(??_SetDate+0)+0
  9155  0CF0  00A9               	movf	(??_SetDate+0)+0,w
  9156  0CF1  0829               	movwf	(SetDate@Date)
  9157  0CF2  00AB               	line	626
  9158                           	
  9159                           l3869:	
  9160  0CF3                     ;main.c: 626:             day_of_week = dayInt;
  9161                           	movlw	(low((((STR_24)-__stringbase)|8000h)))&0ffh
  9162  0CF3  3011               	movwf	(??_SetDate+0)+0
  9163  0CF4  00A9               	movf	(??_SetDate+0)+0,w
  9164  0CF5  0829               	movwf	(SetDate@DateSet)
  9165  0CF6  00AC               	line	627
  9166                           	
  9167                           l3871:	
  9168  0CF7                     ;main.c: 627: 
  9169                           	movlw	(low((((STR_25)-__stringbase)|8000h)))&0ffh
  9170  0CF7  30C5               	movwf	(??_SetDate+0)+0
  9171  0CF8  00A9               	movf	(??_SetDate+0)+0,w
  9172  0CF9  0829               	movwf	(SetDate@Monday)
  9173  0CFA  00AD               	line	628
  9174                           	
  9175                           l3873:	
  9176  0CFB                     ;main.c: 628:             RealTimeClock_set_day_of_week(dayInt);
  9177                           	movlw	(low((((STR_26)-__stringbase)|8000h)))&0ffh
  9178  0CFB  30BD               	movwf	(??_SetDate+0)+0
  9179  0CFC  00A9               	movf	(??_SetDate+0)+0,w
  9180  0CFD  0829               	movwf	(SetDate@Tuesday)
  9181  0CFE  00AE               	line	629
  9182                           	
  9183                           l3875:	
  9184  0CFF                     ;main.c: 629: 
  9185                           	movlw	(low((((STR_27)-__stringbase)|8000h)))&0ffh
  9186  0CFF  30B9               	movwf	(??_SetDate+0)+0
  9187  0D00  00A9               	movf	(??_SetDate+0)+0,w
  9188  0D01  0829               	movwf	(SetDate@Wednesday)
  9189  0D02  00AF               	line	630
  9190                           	
  9191                           l3877:	
  9192  0D03                     ;main.c: 630:             LCD_SendString(DateSet);
  9193                           	movlw	(low((((STR_28)-__stringbase)|8000h)))&0ffh
  9194  0D03  30D1               	movwf	(??_SetDate+0)+0
  9195  0D04  00A9               	movf	(??_SetDate+0)+0,w
  9196  0D05  0829               	movwf	(SetDate@Thursday)
  9197  0D06  00B0               	line	631
  9198                           	
  9199                           l3879:	
  9200  0D07                     ;main.c: 631:             Main_Delay(200);
  9201                           	movlw	(low((((STR_29)-__stringbase)|8000h)))&0ffh
  9202  0D07  30C1               	movwf	(??_SetDate+0)+0
  9203  0D08  00A9               	movf	(??_SetDate+0)+0,w
  9204  0D09  0829               	movwf	(SetDate@Friday)
  9205  0D0A  00B1               	line	632
  9206                           	
  9207                           l3881:	
  9208  0D0B                     ;main.c: 632:             LCD_Command(0x01);
  9209                           	movlw	(low((((STR_30)-__stringbase)|8000h)))&0ffh
  9210  0D0B  30CD               	movwf	(??_SetDate+0)+0
  9211  0D0C  00A9               	movf	(??_SetDate+0)+0,w
  9212  0D0D  0829               	movwf	(SetDate@Saturday)
  9213  0D0E  00B2               	line	633
  9214                           	
  9215                           l3883:	
  9216  0D0F                     ;main.c: 633:             break;
  9217                           	movlw	(low((((STR_31)-__stringbase)|8000h)))&0ffh
  9218  0D0F  30C9               	movwf	(??_SetDate+0)+0
  9219  0D10  00A9               	movf	(??_SetDate+0)+0,w
  9220  0D11  0829               	movwf	(SetDate@Sunday)
  9221  0D12  00B3               	line	635
  9222                           	
  9223                           l3885:	
  9224  0D13                     ;main.c: 634:         };main.c: 635:         switch(Key)
  9225                           	fcall	_RealTimeClock_get_day_of_week
  9226  0D13  160A  158A  2796  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  9227  0D18  1283               	bcf	status, 6	;RP1=0, select bank0
  9228  0D19  1303               	movf	(1+(?_RealTimeClock_get_day_of_week)),w
  9229  0D1A  0826               	movwf	(SetDate@dayInt+1)
  9230  0D1B  00B7               	movf	(0+(?_RealTimeClock_get_day_of_week)),w
  9231  0D1C  0825               	movwf	(SetDate@dayInt)
  9232  0D1D  00B6               	goto	l3887
  9233  0D1E  2D1F               	line	636
  9234                           ;main.c: 636:         {
  9235                           	
  9236                           l239:	
  9237  0D1F                     	line	638
  9238                           	
  9239                           l3887:	
  9240  0D1F                     ;main.c: 637:             case 14:;main.c: 638:                 break;
  9241                           	movlw	low(03h)
  9242  0D1F  3003               	fcall	_LCD_Command
  9243  0D20  160A  158A  25EF  120A  158A  	line	639
  9244                           	
  9245                           l3889:	
  9246  0D25                     ;main.c: 639:             case 15:
  9247                           	bcf	status, 5	;RP0=0, select bank0
  9248  0D25  1283               	bcf	status, 6	;RP1=0, select bank0
  9249  0D26  1303               		movf	(SetDate@Date),w
  9250  0D27  082B               	movwf	(LCD_SendString@string)
  9251  0D28  00F1               	movlw	0
  9252  0D29  3000               	btfss	status,2
  9253  0D2A  1D03               	movlw	080h
  9254  0D2B  3080               	movwf	(LCD_SendString@string+1)
  9255  0D2C  00F2               
  9256                           	fcall	_LCD_SendString
  9257  0D2D  160A  118A  2361  120A  158A  	line	640
  9258                           	
  9259                           l3891:	
  9260  0D32                     ;main.c: 640:                 if(i == 0)
  9261                           	fcall	_Keypad_Scan
  9262  0D32  120A  118A  20DF  120A  158A  	movf	(1+(?_Keypad_Scan)),w
  9263  0D37  0877               	bcf	status, 5	;RP0=0, select bank0
  9264  0D38  1283               	bcf	status, 6	;RP1=0, select bank0
  9265  0D39  1303               	movwf	(SetDate@Key+1)
  9266  0D3A  00A8               	movf	(0+(?_Keypad_Scan)),w
  9267  0D3B  0876               	movwf	(SetDate@Key)
  9268  0D3C  00A7               	line	641
  9269                           	
  9270                           l3893:	
  9271  0D3D                     ;main.c: 641:                 {
  9272                           		movlw	13
  9273  0D3D  300D               	xorwf	((SetDate@Key)),w
  9274  0D3E  0627               iorwf	((SetDate@Key+1)),w
  9275  0D3F  0428               	btfss	status,2
  9276  0D40  1D03               	goto	u3151
  9277  0D41  2D43               	goto	u3150
  9278  0D42  2D44               u3151:
  9279  0D43                     	goto	l3927
  9280  0D43  2DC7               u3150:
  9281  0D44                     	line	643
  9282                           	
  9283                           l3895:	
  9284  0D44                     ;main.c: 642:                     if(dayInt == 1);main.c: 643:                         d
                                 ayInt = 7;
  9285                           	movlw	low(01h)
  9286  0D44  3001               	fcall	_LCD_Command
  9287  0D45  160A  158A  25EF  120A  158A  	line	644
  9288                           ;main.c: 644:                     else
  9289                           	movlw	low(03h)
  9290  0D4A  3003               	fcall	_LCD_Command
  9291  0D4B  160A  158A  25EF  120A  158A  	line	646
  9292                           	
  9293                           l3897:	
  9294  0D50                     ;main.c: 646:                 }
  9295                           	fcall	_CheckDay
  9296  0D50  160A  118A  229D  120A  158A  	line	648
  9297                           	
  9298                           l3899:	
  9299  0D55                     ;main.c: 648:             case 16:
  9300                           	bcf	status, 5	;RP0=0, select bank0
  9301  0D55  1283               	bcf	status, 6	;RP1=0, select bank0
  9302  0D56  1303               	movf	(SetDate@dayInt+1),w
  9303  0D57  0837               	bsf	status, 5	;RP0=1, select bank1
  9304  0D58  1683               	bcf	status, 6	;RP1=0, select bank1
  9305  0D59  1303               	movwf	(_day_of_week+1)^080h
  9306  0D5A  00ED               	bcf	status, 5	;RP0=0, select bank0
  9307  0D5B  1283               	bcf	status, 6	;RP1=0, select bank0
  9308  0D5C  1303               	movf	(SetDate@dayInt),w
  9309  0D5D  0836               	bsf	status, 5	;RP0=1, select bank1
  9310  0D5E  1683               	bcf	status, 6	;RP1=0, select bank1
  9311  0D5F  1303               	movwf	(_day_of_week)^080h
  9312  0D60  00EC               	line	650
  9313                           	
  9314                           l3901:	
  9315  0D61                     ;main.c: 650:                 {
  9316                           	bcf	status, 5	;RP0=0, select bank0
  9317  0D61  1283               	bcf	status, 6	;RP1=0, select bank0
  9318  0D62  1303               	movf	(SetDate@dayInt+1),w
  9319  0D63  0837               	movwf	(RealTimeClock_set_day_of_week@day+1)
  9320  0D64  00A1               	movf	(SetDate@dayInt),w
  9321  0D65  0836               	movwf	(RealTimeClock_set_day_of_week@day)
  9322  0D66  00A0               	fcall	_RealTimeClock_set_day_of_week
  9323  0D67  160A  158A  265A  120A  158A  	line	652
  9324                           	
  9325                           l3903:	
  9326  0D6C                     ;main.c: 652:                         dayInt = 1;
  9327                           	bcf	status, 5	;RP0=0, select bank0
  9328  0D6C  1283               	bcf	status, 6	;RP1=0, select bank0
  9329  0D6D  1303               		movf	(SetDate@DateSet),w
  9330  0D6E  082C               	movwf	(LCD_SendString@string)
  9331  0D6F  00F1               	movlw	0
  9332  0D70  3000               	btfss	status,2
  9333  0D71  1D03               	movlw	080h
  9334  0D72  3080               	movwf	(LCD_SendString@string+1)
  9335  0D73  00F2               
  9336                           	fcall	_LCD_SendString
  9337  0D74  160A  118A  2361  120A  158A  	line	653
  9338                           	
  9339                           l3905:	
  9340  0D79                     ;main.c: 653:                     else
  9341                           	movlw	0C8h
  9342  0D79  30C8               	movwf	(Main_Delay@k)
  9343  0D7A  00F0               	movlw	0
  9344  0D7B  3000               	movwf	((Main_Delay@k))+1
  9345  0D7C  00F1               	fcall	_Main_Delay
  9346  0D7D  160A  118A  225F  120A  158A  	line	654
  9347                           	
  9348                           l3907:	
  9349  0D82                     ;main.c: 654:                         dayInt = dayInt + 1;
  9350                           	movlw	low(01h)
  9351  0D82  3001               	fcall	_LCD_Command
  9352  0D83  160A  158A  25EF  120A  158A  	line	655
  9353                           ;main.c: 655:                 }
  9354                           	goto	l263
  9355  0D88  2E6F               	line	656
  9356                           ;main.c: 656:                 break;
  9357                           	
  9358                           l240:	
  9359  0D89                     	line	657
  9360                           ;main.c: 657:         }
  9361                           	goto	l3927
  9362  0D89  2DC7               	line	659
  9363                           ;main.c: 658:         LCD_SecondLine();;main.c: 659:         LCD_SendString(Day);
  9364                           	
  9365                           l243:	
  9366  0D8A                     	line	660
  9367                           ;main.c: 660:         switch(dayInt)
  9368                           	goto	l3929
  9369  0D8A  2DD9               	line	661
  9370                           ;main.c: 661:         {
  9371                           	
  9372                           l245:	
  9373  0D8B                     	line	662
  9374                           	
  9375                           l3909:	
  9376  0D8B                     ;main.c: 662:             case 1:
  9377                           	bcf	status, 5	;RP0=0, select bank0
  9378  0D8B  1283               	bcf	status, 6	;RP1=0, select bank0
  9379  0D8C  1303               	movf	((SetDate@i)),w
  9380  0D8D  0834               iorwf	((SetDate@i+1)),w
  9381  0D8E  0435               	btfss	status,2
  9382  0D8F  1D03               	goto	u3161
  9383  0D90  2D92               	goto	u3160
  9384  0D91  2D93               u3161:
  9385  0D92                     	goto	l3929
  9386  0D92  2DD9               u3160:
  9387  0D93                     	line	664
  9388                           	
  9389                           l3911:	
  9390  0D93                     ;main.c: 663:                 LCD_SendString(Monday);;main.c: 664:                 break
                                 ;
  9391                           		decf	((SetDate@dayInt)),w
  9392  0D93  0336               iorwf	((SetDate@dayInt+1)),w
  9393  0D94  0437               	btfss	status,2
  9394  0D95  1D03               	goto	u3171
  9395  0D96  2D98               	goto	u3170
  9396  0D97  2D99               u3171:
  9397  0D98                     	goto	l3915
  9398  0D98  2D9E               u3170:
  9399  0D99                     	line	665
  9400                           	
  9401                           l3913:	
  9402  0D99                     ;main.c: 665:             case 2:
  9403                           	movlw	07h
  9404  0D99  3007               	movwf	(SetDate@dayInt)
  9405  0D9A  00B6               	movlw	0
  9406  0D9B  3000               	movwf	((SetDate@dayInt))+1
  9407  0D9C  00B7               	goto	l3929
  9408  0D9D  2DD9               	line	666
  9409                           ;main.c: 666:                 LCD_SendString(Tuesday);
  9410                           	
  9411                           l247:	
  9412  0D9E                     	line	667
  9413                           	
  9414                           l3915:	
  9415  0D9E                     ;main.c: 667:                 break;
  9416                           	movf	(SetDate@dayInt),w
  9417  0D9E  0836               	addlw	low(-1)
  9418  0D9F  3EFF               	movwf	(SetDate@dayInt)
  9419  0DA0  00B6               	movf	(SetDate@dayInt+1),w
  9420  0DA1  0837               	skipnc
  9421  0DA2  1803               	addlw	1
  9422  0DA3  3E01               	addlw	high(-1)
  9423  0DA4  3EFF               	movwf	1+(SetDate@dayInt)
  9424  0DA5  00B7               	goto	l3929
  9425  0DA6  2DD9               	
  9426                           l248:	
  9427  0DA7                     	goto	l3929
  9428  0DA7  2DD9               	line	668
  9429                           ;main.c: 668:             case 3:
  9430                           	
  9431                           l246:	
  9432  0DA8                     	line	669
  9433                           ;main.c: 669:                 LCD_SendString(Wednesday);
  9434                           	goto	l3929
  9435  0DA8  2DD9               	line	670
  9436                           ;main.c: 670:                 break;
  9437                           	
  9438                           l249:	
  9439  0DA9                     	line	671
  9440                           	
  9441                           l3917:	
  9442  0DA9                     ;main.c: 671:             case 4:
  9443                           	movf	((SetDate@i)),w
  9444  0DA9  0834               iorwf	((SetDate@i+1)),w
  9445  0DAA  0435               	btfss	status,2
  9446  0DAB  1D03               	goto	u3181
  9447  0DAC  2DAE               	goto	u3180
  9448  0DAD  2DAF               u3181:
  9449  0DAE                     	goto	l3929
  9450  0DAE  2DD9               u3180:
  9451  0DAF                     	line	673
  9452                           	
  9453                           l3919:	
  9454  0DAF                     ;main.c: 672:                 LCD_SendString(Thursday);;main.c: 673:                 bre
                                 ak;
  9455                           		movlw	7
  9456  0DAF  3007               	xorwf	((SetDate@dayInt)),w
  9457  0DB0  0636               iorwf	((SetDate@dayInt+1)),w
  9458  0DB1  0437               	btfss	status,2
  9459  0DB2  1D03               	goto	u3191
  9460  0DB3  2DB5               	goto	u3190
  9461  0DB4  2DB6               u3191:
  9462  0DB5                     	goto	l3923
  9463  0DB5  2DBB               u3190:
  9464  0DB6                     	line	674
  9465                           	
  9466                           l3921:	
  9467  0DB6                     ;main.c: 674:             case 5:
  9468                           	movlw	01h
  9469  0DB6  3001               	movwf	(SetDate@dayInt)
  9470  0DB7  00B6               	movlw	0
  9471  0DB8  3000               	movwf	((SetDate@dayInt))+1
  9472  0DB9  00B7               	goto	l3929
  9473  0DBA  2DD9               	line	675
  9474                           ;main.c: 675:                 LCD_SendString(Friday);
  9475                           	
  9476                           l251:	
  9477  0DBB                     	line	676
  9478                           	
  9479                           l3923:	
  9480  0DBB                     ;main.c: 676:                 break;
  9481                           	movf	(SetDate@dayInt),w
  9482  0DBB  0836               	addlw	low(01h)
  9483  0DBC  3E01               	movwf	(SetDate@dayInt)
  9484  0DBD  00B6               	movf	(SetDate@dayInt+1),w
  9485  0DBE  0837               	skipnc
  9486  0DBF  1803               	addlw	1
  9487  0DC0  3E01               	addlw	high(01h)
  9488  0DC1  3E00               	movwf	1+(SetDate@dayInt)
  9489  0DC2  00B7               	goto	l3929
  9490  0DC3  2DD9               	
  9491                           l252:	
  9492  0DC4                     	goto	l3929
  9493  0DC4  2DD9               	line	677
  9494                           ;main.c: 677:             case 6:
  9495                           	
  9496                           l250:	
  9497  0DC5                     	line	678
  9498                           ;main.c: 678:                 LCD_SendString(Saturday);
  9499                           	goto	l3929
  9500  0DC5  2DD9               	line	679
  9501                           	
  9502                           l3925:	
  9503  0DC6                     ;main.c: 679:                 break;
  9504                           	goto	l3929
  9505  0DC6  2DD9               	
  9506                           l242:	
  9507  0DC7                     	
  9508                           l3927:	
  9509  0DC7                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9510                           ; Switch size 1, requested type "space"
  9511                           ; Number of cases is 1, Range of values is 0 to 0
  9512                           ; switch strategies available:
  9513                           ; Name         Instructions Cycles
  9514                           ; simple_byte            4     3 (average)
  9515                           ; direct_byte           11     8 (fixed)
  9516                           ; jumptable            260     6 (fixed)
  9517                           ;	Chosen strategy is simple_byte
  9518                           
  9519                           	bcf	status, 5	;RP0=0, select bank0
  9520  0DC7  1283               	bcf	status, 6	;RP1=0, select bank0
  9521  0DC8  1303               	movf (SetDate@Key+1),w
  9522  0DC9  0828               	opt asmopt_push
  9523                           	opt asmopt_off
  9524                           	xorlw	0^0	; case 0
  9525  0DCA  3A00               	skipnz
  9526  0DCB  1903               	goto	l4287
  9527  0DCC  2DCE               	goto	l3929
  9528  0DCD  2DD9               	opt asmopt_pop
  9529                           	
  9530                           l4287:	
  9531  0DCE                     ; Switch size 1, requested type "space"
  9532                           ; Number of cases is 3, Range of values is 14 to 16
  9533                           ; switch strategies available:
  9534                           ; Name         Instructions Cycles
  9535                           ; simple_byte           10     6 (average)
  9536                           ; direct_byte           20    11 (fixed)
  9537                           ; jumptable            263     9 (fixed)
  9538                           ;	Chosen strategy is simple_byte
  9539                           
  9540                           	movf (SetDate@Key),w
  9541  0DCE  0827               	opt asmopt_push
  9542                           	opt asmopt_off
  9543                           	xorlw	14^0	; case 14
  9544  0DCF  3A0E               	skipnz
  9545  0DD0  1903               	goto	l3929
  9546  0DD1  2DD9               	xorlw	15^14	; case 15
  9547  0DD2  3A01               	skipnz
  9548  0DD3  1903               	goto	l3909
  9549  0DD4  2D8B               	xorlw	16^15	; case 16
  9550  0DD5  3A1F               	skipnz
  9551  0DD6  1903               	goto	l3917
  9552  0DD7  2DA9               	goto	l3929
  9553  0DD8  2DD9               	opt asmopt_pop
  9554                           
  9555                           	
  9556                           l244:	
  9557  0DD9                     	line	680
  9558                           	
  9559                           l3929:	
  9560  0DD9                     ;main.c: 680:             case 7:
  9561                           	fcall	_LCD_SecondLine
  9562  0DD9  160A  158A  25DA  120A  158A  	line	681
  9563                           	
  9564                           l3931:	
  9565  0DDE                     ;main.c: 681:                 LCD_SendString(Sunday);
  9566                           	bcf	status, 5	;RP0=0, select bank0
  9567  0DDE  1283               	bcf	status, 6	;RP1=0, select bank0
  9568  0DDF  1303               		movf	(SetDate@Day),w
  9569  0DE0  082A               	movwf	(LCD_SendString@string)
  9570  0DE1  00F1               	movlw	0
  9571  0DE2  3000               	btfss	status,2
  9572  0DE3  1D03               	movlw	080h
  9573  0DE4  3080               	movwf	(LCD_SendString@string+1)
  9574  0DE5  00F2               
  9575                           	fcall	_LCD_SendString
  9576  0DE6  160A  118A  2361  120A  158A  	line	682
  9577                           ;main.c: 682:                 break;
  9578                           	goto	l3949
  9579  0DEB  2E4F               	line	684
  9580                           ;main.c: 683:         };main.c: 684:     }
  9581                           	
  9582                           l254:	
  9583  0DEC                     	line	685
  9584                           	
  9585                           l3933:	
  9586  0DEC                     ;main.c: 685: }
  9587                           	bcf	status, 5	;RP0=0, select bank0
  9588  0DEC  1283               	bcf	status, 6	;RP1=0, select bank0
  9589  0DED  1303               		movf	(SetDate@Monday),w
  9590  0DEE  082D               	movwf	(LCD_SendString@string)
  9591  0DEF  00F1               	movlw	0
  9592  0DF0  3000               	btfss	status,2
  9593  0DF1  1D03               	movlw	080h
  9594  0DF2  3080               	movwf	(LCD_SendString@string+1)
  9595  0DF3  00F2               
  9596                           	fcall	_LCD_SendString
  9597  0DF4  160A  118A  2361  120A  158A  	line	686
  9598                           ;main.c: 686: 
  9599                           	goto	l3887
  9600  0DF9  2D1F               	line	687
  9601                           ;main.c: 687: 
  9602                           	
  9603                           l256:	
  9604  0DFA                     	line	688
  9605                           	
  9606                           l3935:	
  9607  0DFA                     ;main.c: 688: void CheckTime(void)
  9608                           	bcf	status, 5	;RP0=0, select bank0
  9609  0DFA  1283               	bcf	status, 6	;RP1=0, select bank0
  9610  0DFB  1303               		movf	(SetDate@Tuesday),w
  9611  0DFC  082E               	movwf	(LCD_SendString@string)
  9612  0DFD  00F1               	movlw	0
  9613  0DFE  3000               	btfss	status,2
  9614  0DFF  1D03               	movlw	080h
  9615  0E00  3080               	movwf	(LCD_SendString@string+1)
  9616  0E01  00F2               
  9617                           	fcall	_LCD_SendString
  9618  0E02  160A  118A  2361  120A  158A  	line	689
  9619                           ;main.c: 689: {
  9620                           	goto	l3887
  9621  0E07  2D1F               	line	690
  9622                           ;main.c: 690: 
  9623                           	
  9624                           l257:	
  9625  0E08                     	line	691
  9626                           	
  9627                           l3937:	
  9628  0E08                     ;main.c: 691: 
  9629                           	bcf	status, 5	;RP0=0, select bank0
  9630  0E08  1283               	bcf	status, 6	;RP1=0, select bank0
  9631  0E09  1303               		movf	(SetDate@Wednesday),w
  9632  0E0A  082F               	movwf	(LCD_SendString@string)
  9633  0E0B  00F1               	movlw	0
  9634  0E0C  3000               	btfss	status,2
  9635  0E0D  1D03               	movlw	080h
  9636  0E0E  3080               	movwf	(LCD_SendString@string+1)
  9637  0E0F  00F2               
  9638                           	fcall	_LCD_SendString
  9639  0E10  160A  118A  2361  120A  158A  	line	692
  9640                           ;main.c: 692:     if (isWeekDay == 1)
  9641                           	goto	l3887
  9642  0E15  2D1F               	line	693
  9643                           ;main.c: 693:     {
  9644                           	
  9645                           l258:	
  9646  0E16                     	line	694
  9647                           	
  9648                           l3939:	
  9649  0E16                     ;main.c: 694:         timeMins = RealTimeClock_get_minutes();
  9650                           	bcf	status, 5	;RP0=0, select bank0
  9651  0E16  1283               	bcf	status, 6	;RP1=0, select bank0
  9652  0E17  1303               		movf	(SetDate@Thursday),w
  9653  0E18  0830               	movwf	(LCD_SendString@string)
  9654  0E19  00F1               	movlw	0
  9655  0E1A  3000               	btfss	status,2
  9656  0E1B  1D03               	movlw	080h
  9657  0E1C  3080               	movwf	(LCD_SendString@string+1)
  9658  0E1D  00F2               
  9659                           	fcall	_LCD_SendString
  9660  0E1E  160A  118A  2361  120A  158A  	line	695
  9661                           ;main.c: 695:         timeHours = RealTimeClock_get_hours();
  9662                           	goto	l3887
  9663  0E23  2D1F               	line	696
  9664                           ;main.c: 696:         if (timeHours < weekDayStart[0])
  9665                           	
  9666                           l259:	
  9667  0E24                     	line	697
  9668                           	
  9669                           l3941:	
  9670  0E24                     ;main.c: 697:         {
  9671                           	bcf	status, 5	;RP0=0, select bank0
  9672  0E24  1283               	bcf	status, 6	;RP1=0, select bank0
  9673  0E25  1303               		movf	(SetDate@Friday),w
  9674  0E26  0831               	movwf	(LCD_SendString@string)
  9675  0E27  00F1               	movlw	0
  9676  0E28  3000               	btfss	status,2
  9677  0E29  1D03               	movlw	080h
  9678  0E2A  3080               	movwf	(LCD_SendString@string+1)
  9679  0E2B  00F2               
  9680                           	fcall	_LCD_SendString
  9681  0E2C  160A  118A  2361  120A  158A  	line	698
  9682                           ;main.c: 698:             if(timeMins < weekDayStart[1])
  9683                           	goto	l3887
  9684  0E31  2D1F               	line	699
  9685                           ;main.c: 699:                 IsHeatingOn = 0;
  9686                           	
  9687                           l260:	
  9688  0E32                     	line	700
  9689                           	
  9690                           l3943:	
  9691  0E32                     ;main.c: 700:             else
  9692                           	bcf	status, 5	;RP0=0, select bank0
  9693  0E32  1283               	bcf	status, 6	;RP1=0, select bank0
  9694  0E33  1303               		movf	(SetDate@Saturday),w
  9695  0E34  0832               	movwf	(LCD_SendString@string)
  9696  0E35  00F1               	movlw	0
  9697  0E36  3000               	btfss	status,2
  9698  0E37  1D03               	movlw	080h
  9699  0E38  3080               	movwf	(LCD_SendString@string+1)
  9700  0E39  00F2               
  9701                           	fcall	_LCD_SendString
  9702  0E3A  160A  118A  2361  120A  158A  	line	701
  9703                           ;main.c: 701:                 IsHeatingOn = 1;
  9704                           	goto	l3887
  9705  0E3F  2D1F               	line	702
  9706                           ;main.c: 702:         }
  9707                           	
  9708                           l261:	
  9709  0E40                     	line	703
  9710                           	
  9711                           l3945:	
  9712  0E40                     ;main.c: 703:         else if(timeHours > weekDayEnd[0])
  9713                           	bcf	status, 5	;RP0=0, select bank0
  9714  0E40  1283               	bcf	status, 6	;RP1=0, select bank0
  9715  0E41  1303               		movf	(SetDate@Sunday),w
  9716  0E42  0833               	movwf	(LCD_SendString@string)
  9717  0E43  00F1               	movlw	0
  9718  0E44  3000               	btfss	status,2
  9719  0E45  1D03               	movlw	080h
  9720  0E46  3080               	movwf	(LCD_SendString@string+1)
  9721  0E47  00F2               
  9722                           	fcall	_LCD_SendString
  9723  0E48  160A  118A  2361  120A  158A  	line	704
  9724                           ;main.c: 704:         {
  9725                           	goto	l3887
  9726  0E4D  2D1F               	line	705
  9727                           	
  9728                           l3947:	
  9729  0E4E                     ;main.c: 705:             if(timeMins > weekDayEnd[1])
  9730                           	goto	l3887
  9731  0E4E  2D1F               	
  9732                           l253:	
  9733  0E4F                     	
  9734                           l3949:	
  9735  0E4F                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9736                           ; Switch size 1, requested type "space"
  9737                           ; Number of cases is 1, Range of values is 0 to 0
  9738                           ; switch strategies available:
  9739                           ; Name         Instructions Cycles
  9740                           ; simple_byte            4     3 (average)
  9741                           ; direct_byte           11     8 (fixed)
  9742                           ; jumptable            260     6 (fixed)
  9743                           ;	Chosen strategy is simple_byte
  9744                           
  9745                           	bcf	status, 5	;RP0=0, select bank0
  9746  0E4F  1283               	bcf	status, 6	;RP1=0, select bank0
  9747  0E50  1303               	movf (SetDate@dayInt+1),w
  9748  0E51  0837               	opt asmopt_push
  9749                           	opt asmopt_off
  9750                           	xorlw	0^0	; case 0
  9751  0E52  3A00               	skipnz
  9752  0E53  1903               	goto	l4289
  9753  0E54  2E56               	goto	l3887
  9754  0E55  2D1F               	opt asmopt_pop
  9755                           	
  9756                           l4289:	
  9757  0E56                     ; Switch size 1, requested type "space"
  9758                           ; Number of cases is 7, Range of values is 1 to 7
  9759                           ; switch strategies available:
  9760                           ; Name         Instructions Cycles
  9761                           ; simple_byte           22    12 (average)
  9762                           ; direct_byte           32    11 (fixed)
  9763                           ; jumptable            263     9 (fixed)
  9764                           ;	Chosen strategy is simple_byte
  9765                           
  9766                           	movf (SetDate@dayInt),w
  9767  0E56  0836               	opt asmopt_push
  9768                           	opt asmopt_off
  9769                           	xorlw	1^0	; case 1
  9770  0E57  3A01               	skipnz
  9771  0E58  1903               	goto	l3933
  9772  0E59  2DEC               	xorlw	2^1	; case 2
  9773  0E5A  3A03               	skipnz
  9774  0E5B  1903               	goto	l3935
  9775  0E5C  2DFA               	xorlw	3^2	; case 3
  9776  0E5D  3A01               	skipnz
  9777  0E5E  1903               	goto	l3937
  9778  0E5F  2E08               	xorlw	4^3	; case 4
  9779  0E60  3A07               	skipnz
  9780  0E61  1903               	goto	l3939
  9781  0E62  2E16               	xorlw	5^4	; case 5
  9782  0E63  3A01               	skipnz
  9783  0E64  1903               	goto	l3941
  9784  0E65  2E24               	xorlw	6^5	; case 6
  9785  0E66  3A03               	skipnz
  9786  0E67  1903               	goto	l3943
  9787  0E68  2E32               	xorlw	7^6	; case 7
  9788  0E69  3A01               	skipnz
  9789  0E6A  1903               	goto	l3945
  9790  0E6B  2E40               	goto	l3887
  9791  0E6C  2D1F               	opt asmopt_pop
  9792                           
  9793                           	
  9794                           l255:	
  9795  0E6D                     	goto	l3887
  9796  0E6D  2D1F               	line	706
  9797                           ;main.c: 706:                 IsHeatingOn = 0;
  9798                           	
  9799                           l262:	
  9800  0E6E                     	goto	l3887
  9801  0E6E  2D1F               	
  9802                           l241:	
  9803  0E6F                     	line	707
  9804                           	
  9805                           l263:	
  9806  0E6F                     	return
  9807  0E6F  0008               	opt stack 0
  9808                           GLOBAL	__end_of_SetDate
  9809                           	__end_of_SetDate:
  9810  0E70                     	signat	_SetDate,4217
  9811                           	global	_RealTimeClock_set_day_of_week
  9812                           
  9813 ;; *************** function _RealTimeClock_set_day_of_week *****************
  9814 ;; Defined at:
  9815 ;;		line 165 in file "realtimeclock.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;  day             2    0[BANK0 ] int 
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;		None
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  1    wreg      void 
  9822 ;; Registers used:
  9823 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9829 ;;      Params:         0       2       0       0       0
  9830 ;;      Locals:         0       0       0       0       0
  9831 ;;      Temps:          0       0       0       0       0
  9832 ;;      Totals:         0       2       0       0       0
  9833 ;;Total ram usage:        2 bytes
  9834 ;; Hardware stack levels used:    1
  9835 ;; Hardware stack levels required when called:    2
  9836 ;; This function calls:
  9837 ;;		_RealTimeClock_write_byte
  9838 ;;		___int_to_hex
  9839 ;; This function is called by:
  9840 ;;		_SetDate
  9841 ;; This function uses a non-reentrant model
  9842 ;;
  9843                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  9844                           	file	"realtimeclock.c"
  9845                           	line	165
  9846                           global __ptext24
  9847                           __ptext24:	;psect for function _RealTimeClock_set_day_of_week
  9848  1E5A                     psect	text24
  9849                           	file	"realtimeclock.c"
  9850                           	line	165
  9851                           	global	__size_of_RealTimeClock_set_day_of_week
  9852                           	__size_of_RealTimeClock_set_day_of_week	equ	__end_of_RealTimeClock_set_day_of_week-_Rea
                                 lTimeClock_set_day_of_week
  9853  001D                     	
  9854                           _RealTimeClock_set_day_of_week:	
  9855  1E5A                     ;incstack = 0
  9856                           	opt	stack 4
  9857                           ; Regs used in _RealTimeClock_set_day_of_week: [wreg+status,2+status,0+btemp+1+pclath+cs
                                 tack]
  9858                           	line	166
  9859                           	
  9860                           l3661:	
  9861  1E5A                     ;realtimeclock.c: 166:     RB5 = 1;
  9862                           	bcf	status, 5	;RP0=0, select bank0
  9863  1E5A  1283               	bcf	status, 6	;RP1=0, select bank0
  9864  1E5B  1303               	bsf	(53/8),(53)&7	;volatile
  9865  1E5C  1686               	line	167
  9866                           	
  9867                           l3663:	
  9868  1E5D                     ;realtimeclock.c: 167:     RealTimeClock_write_byte(0x8a);
  9869                           	movlw	low(08Ah)
  9870  1E5D  308A               	fcall	_RealTimeClock_write_byte
  9871  1E5E  160A  118A  21AC  160A  158A  	line	168
  9872                           ;realtimeclock.c: 168:     RealTimeClock_write_byte(__int_to_hex(day));
  9873                           	bcf	status, 5	;RP0=0, select bank0
  9874  1E63  1283               	bcf	status, 6	;RP1=0, select bank0
  9875  1E64  1303               	movf	(RealTimeClock_set_day_of_week@day+1),w
  9876  1E65  0821               	movwf	(___int_to_hex@integer+1)
  9877  1E66  00F8               	movf	(RealTimeClock_set_day_of_week@day),w
  9878  1E67  0820               	movwf	(___int_to_hex@integer)
  9879  1E68  00F7               	fcall	___int_to_hex
  9880  1E69  160A  118A  231F  160A  158A  	fcall	_RealTimeClock_write_byte
  9881  1E6E  160A  118A  21AC  160A  158A  	line	169
  9882                           	
  9883                           l3665:	
  9884  1E73                     ;realtimeclock.c: 169:     RB5 = 0;
  9885                           	bcf	status, 5	;RP0=0, select bank0
  9886  1E73  1283               	bcf	status, 6	;RP1=0, select bank0
  9887  1E74  1303               	bcf	(53/8),(53)&7	;volatile
  9888  1E75  1286               	line	170
  9889                           	
  9890                           l385:	
  9891  1E76                     	return
  9892  1E76  0008               	opt stack 0
  9893                           GLOBAL	__end_of_RealTimeClock_set_day_of_week
  9894                           	__end_of_RealTimeClock_set_day_of_week:
  9895  1E77                     	signat	_RealTimeClock_set_day_of_week,4217
  9896                           	global	_CheckDay
  9897                           
  9898 ;; *************** function _CheckDay *****************
  9899 ;; Defined at:
  9900 ;;		line 589 in file "main.c"
  9901 ;; Parameters:    Size  Location     Type
  9902 ;;		None
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;		None
  9905 ;; Return value:  Size  Location     Type
  9906 ;;                  1    wreg      void 
  9907 ;; Registers used:
  9908 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9909 ;; Tracked objects:
  9910 ;;		On entry : 0/0
  9911 ;;		On exit  : 0/0
  9912 ;;		Unchanged: 0/0
  9913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9914 ;;      Params:         0       0       0       0       0
  9915 ;;      Locals:         0       0       0       0       0
  9916 ;;      Temps:          0       0       0       0       0
  9917 ;;      Totals:         0       0       0       0       0
  9918 ;;Total ram usage:        0 bytes
  9919 ;; Hardware stack levels used:    1
  9920 ;; This function calls:
  9921 ;;		Nothing
  9922 ;; This function is called by:
  9923 ;;		_SetDate
  9924 ;;		_main
  9925 ;; This function uses a non-reentrant model
  9926 ;;
  9927                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  9928                           	file	"main.c"
  9929                           	line	589
  9930                           global __ptext25
  9931                           __ptext25:	;psect for function _CheckDay
  9932  129D                     psect	text25
  9933                           	file	"main.c"
  9934                           	line	589
  9935                           	global	__size_of_CheckDay
  9936                           	__size_of_CheckDay	equ	__end_of_CheckDay-_CheckDay
  9937  0041                     	
  9938                           _CheckDay:	
  9939  129D                     ;incstack = 0
  9940                           	opt	stack 6
  9941                           ; Regs used in _CheckDay: [wreg-fsr0h+status,2+status,0]
  9942                           	line	591
  9943                           	
  9944                           l3639:	
  9945  129D                     ;main.c: 591:         case 7:
  9946                           	goto	l3655
  9947  129D  2ABF               	line	595
  9948                           ;main.c: 592:             isWeekDay = 0;;main.c: 595: 
  9949                           	
  9950                           l228:	
  9951  129E                     	line	596
  9952                           	
  9953                           l3641:	
  9954  129E                     ;main.c: 596: 
  9955                           	movlw	01h
  9956  129E  3001               	bsf	status, 5	;RP0=1, select bank1
  9957  129F  1683               	bcf	status, 6	;RP1=0, select bank1
  9958  12A0  1303               	movwf	(_isWeekDay)^080h
  9959  12A1  00EA               	movlw	0
  9960  12A2  3000               	movwf	((_isWeekDay)^080h)+1
  9961  12A3  00EB               	line	597
  9962                           ;main.c: 597: void SetDate(int Key)
  9963                           	goto	l236
  9964  12A4  2ADD               	line	598
  9965                           ;main.c: 598: {
  9966                           	
  9967                           l230:	
  9968  12A5                     	line	599
  9969                           	
  9970                           l3643:	
  9971  12A5                     ;main.c: 599: 
  9972                           	movlw	01h
  9973  12A5  3001               	movwf	(_isWeekDay)^080h
  9974  12A6  00EA               	movlw	0
  9975  12A7  3000               	movwf	((_isWeekDay)^080h)+1
  9976  12A8  00EB               	line	600
  9977                           ;main.c: 600:     LCD_Command(0x01);
  9978                           	goto	l236
  9979  12A9  2ADD               	line	601
  9980                           ;main.c: 601:     int i = 0;
  9981                           	
  9982                           l231:	
  9983  12AA                     	line	602
  9984                           	
  9985                           l3645:	
  9986  12AA                     ;main.c: 602:     char* Day = ("Day:");
  9987                           	movlw	01h
  9988  12AA  3001               	movwf	(_isWeekDay)^080h
  9989  12AB  00EA               	movlw	0
  9990  12AC  3000               	movwf	((_isWeekDay)^080h)+1
  9991  12AD  00EB               	line	603
  9992                           ;main.c: 603:     char* Date = ("Date:");
  9993                           	goto	l236
  9994  12AE  2ADD               	line	604
  9995                           ;main.c: 604:     char* DateSet = ("Date/Day Set");
  9996                           	
  9997                           l232:	
  9998  12AF                     	line	605
  9999                           	
 10000                           l3647:	
 10001  12AF                     ;main.c: 605:     char* Monday = ("Mon");
 10002                           	movlw	01h
 10003  12AF  3001               	movwf	(_isWeekDay)^080h
 10004  12B0  00EA               	movlw	0
 10005  12B1  3000               	movwf	((_isWeekDay)^080h)+1
 10006  12B2  00EB               	line	606
 10007                           ;main.c: 606:     char* Tuesday = ("Tue");
 10008                           	goto	l236
 10009  12B3  2ADD               	line	607
 10010                           ;main.c: 607:     char* Wednesday = ("Wed");
 10011                           	
 10012                           l233:	
 10013  12B4                     	line	608
 10014                           	
 10015                           l3649:	
 10016  12B4                     ;main.c: 608:     char* Thursday = ("Thu");
 10017                           	movlw	01h
 10018  12B4  3001               	movwf	(_isWeekDay)^080h
 10019  12B5  00EA               	movlw	0
 10020  12B6  3000               	movwf	((_isWeekDay)^080h)+1
 10021  12B7  00EB               	line	609
 10022                           ;main.c: 609:     char* Friday = ("Fri");
 10023                           	goto	l236
 10024  12B8  2ADD               	line	610
 10025                           ;main.c: 610:     char* Saturday = ("Sat");
 10026                           	
 10027                           l234:	
 10028  12B9                     	line	611
 10029                           	
 10030                           l3651:	
 10031  12B9                     ;main.c: 611:     char* Sunday = ("Sun");
 10032                           	clrf	(_isWeekDay)^080h
 10033  12B9  01EA               	clrf	(_isWeekDay+1)^080h
 10034  12BA  01EB               	line	612
 10035                           ;main.c: 612:     int dayInt;
 10036                           	goto	l236
 10037  12BB  2ADD               	line	613
 10038                           ;main.c: 613:     dayInt = RealTimeClock_get_day_of_week();
 10039                           	
 10040                           l235:	
 10041  12BC                     	line	614
 10042                           	
 10043                           l3653:	
 10044  12BC                     ;main.c: 614:     while(1)
 10045                           	clrf	(_isWeekDay)^080h
 10046  12BC  01EA               	clrf	(_isWeekDay+1)^080h
 10047  12BD  01EB               	line	615
 10048                           ;main.c: 615:     {
 10049                           	goto	l236
 10050  12BE  2ADD               	
 10051                           l227:	
 10052  12BF                     	
 10053                           l3655:	
 10054  12BF                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10055                           ; Switch size 1, requested type "space"
 10056                           ; Number of cases is 1, Range of values is 0 to 0
 10057                           ; switch strategies available:
 10058                           ; Name         Instructions Cycles
 10059                           ; simple_byte            4     3 (average)
 10060                           ; direct_byte           11     8 (fixed)
 10061                           ; jumptable            260     6 (fixed)
 10062                           ;	Chosen strategy is simple_byte
 10063                           
 10064                           	bsf	status, 5	;RP0=1, select bank1
 10065  12BF  1683               	bcf	status, 6	;RP1=0, select bank1
 10066  12C0  1303               	movf (_day_of_week+1)^080h,w
 10067  12C1  086D               	opt asmopt_push
 10068                           	opt asmopt_off
 10069                           	xorlw	0^0	; case 0
 10070  12C2  3A00               	skipnz
 10071  12C3  1903               	goto	l4291
 10072  12C4  2AC6               	goto	l236
 10073  12C5  2ADD               	opt asmopt_pop
 10074                           	
 10075                           l4291:	
 10076  12C6                     ; Switch size 1, requested type "space"
 10077                           ; Number of cases is 7, Range of values is 1 to 7
 10078                           ; switch strategies available:
 10079                           ; Name         Instructions Cycles
 10080                           ; simple_byte           22    12 (average)
 10081                           ; direct_byte           32    11 (fixed)
 10082                           ; jumptable            263     9 (fixed)
 10083                           ;	Chosen strategy is simple_byte
 10084                           
 10085                           	movf (_day_of_week)^080h,w
 10086  12C6  086C               	opt asmopt_push
 10087                           	opt asmopt_off
 10088                           	xorlw	1^0	; case 1
 10089  12C7  3A01               	skipnz
 10090  12C8  1903               	goto	l3641
 10091  12C9  2A9E               	xorlw	2^1	; case 2
 10092  12CA  3A03               	skipnz
 10093  12CB  1903               	goto	l3643
 10094  12CC  2AA5               	xorlw	3^2	; case 3
 10095  12CD  3A01               	skipnz
 10096  12CE  1903               	goto	l3645
 10097  12CF  2AAA               	xorlw	4^3	; case 4
 10098  12D0  3A07               	skipnz
 10099  12D1  1903               	goto	l3647
 10100  12D2  2AAF               	xorlw	5^4	; case 5
 10101  12D3  3A01               	skipnz
 10102  12D4  1903               	goto	l3649
 10103  12D5  2AB4               	xorlw	6^5	; case 6
 10104  12D6  3A03               	skipnz
 10105  12D7  1903               	goto	l3651
 10106  12D8  2AB9               	xorlw	7^6	; case 7
 10107  12D9  3A01               	skipnz
 10108  12DA  1903               	goto	l3653
 10109  12DB  2ABC               	goto	l236
 10110  12DC  2ADD               	opt asmopt_pop
 10111                           
 10112                           	
 10113                           l229:	
 10114  12DD                     	line	616
 10115                           	
 10116                           l236:	
 10117  12DD                     	return
 10118  12DD  0008               	opt stack 0
 10119                           GLOBAL	__end_of_CheckDay
 10120                           	__end_of_CheckDay:
 10121  12DE                     	signat	_CheckDay,89
 10122                           	global	_RealTimeClock_set_burst_time
 10123                           
 10124 ;; *************** function _RealTimeClock_set_burst_time *****************
 10125 ;; Defined at:
 10126 ;;		line 55 in file "realtimeclock.c"
 10127 ;; Parameters:    Size  Location     Type
 10128 ;;  time            1    wreg     PTR int 
 10129 ;;		 -> start_date(16), 
 10130 ;; Auto vars:     Size  Location     Type
 10131 ;;  time            1    2[BANK0 ] PTR int 
 10132 ;;		 -> start_date(16), 
 10133 ;;  i               2    3[BANK0 ] int 
 10134 ;; Return value:  Size  Location     Type
 10135 ;;                  1    wreg      void 
 10136 ;; Registers used:
 10137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10138 ;; Tracked objects:
 10139 ;;		On entry : 0/0
 10140 ;;		On exit  : 0/0
 10141 ;;		Unchanged: 0/0
 10142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10143 ;;      Params:         0       0       0       0       0
 10144 ;;      Locals:         0       3       0       0       0
 10145 ;;      Temps:          0       2       0       0       0
 10146 ;;      Totals:         0       5       0       0       0
 10147 ;;Total ram usage:        5 bytes
 10148 ;; Hardware stack levels used:    1
 10149 ;; Hardware stack levels required when called:    2
 10150 ;; This function calls:
 10151 ;;		_RealTimeClock_write_byte
 10152 ;;		___int_to_hex
 10153 ;; This function is called by:
 10154 ;;		_main
 10155 ;; This function uses a non-reentrant model
 10156 ;;
 10157                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
 10158                           	file	"realtimeclock.c"
 10159                           	line	55
 10160                           global __ptext26
 10161                           __ptext26:	;psect for function _RealTimeClock_set_burst_time
 10162  150E                     psect	text26
 10163                           	file	"realtimeclock.c"
 10164                           	line	55
 10165                           	global	__size_of_RealTimeClock_set_burst_time
 10166                           	__size_of_RealTimeClock_set_burst_time	equ	__end_of_RealTimeClock_set_burst_time-_RealT
                                 imeClock_set_burst_time
 10167  004F                     	
 10168                           _RealTimeClock_set_burst_time:	
 10169  150E                     ;incstack = 0
 10170                           	opt	stack 5
 10171                           ; Regs used in _RealTimeClock_set_burst_time: [wreg-fsr0h+status,2+status,0+btemp+1+pcla
                                 th+cstack]
 10172                           ;RealTimeClock_set_burst_time@time stored from wreg
 10173                           	bcf	status, 5	;RP0=0, select bank0
 10174  150E  1283               	bcf	status, 6	;RP1=0, select bank0
 10175  150F  1303               	movwf	(RealTimeClock_set_burst_time@time)
 10176  1510  00A2               	line	56
 10177                           	
 10178                           l4029:	
 10179  1511                     ;realtimeclock.c: 56:     RB5 = 1;
 10180                           	bsf	(53/8),(53)&7	;volatile
 10181  1511  1686               	line	57
 10182                           	
 10183                           l4031:	
 10184  1512                     ;realtimeclock.c: 57:     RealTimeClock_write_byte(0xbe);
 10185                           	movlw	low(0BEh)
 10186  1512  30BE               	fcall	_RealTimeClock_write_byte
 10187  1513  160A  118A  21AC  160A  118A  	line	58
 10188                           	
 10189                           l4033:	
 10190  1518                     ;realtimeclock.c: 58:     for(int i = 0; i < 8; ++i) {
 10191                           	bcf	status, 5	;RP0=0, select bank0
 10192  1518  1283               	bcf	status, 6	;RP1=0, select bank0
 10193  1519  1303               	clrf	(RealTimeClock_set_burst_time@i)
 10194  151A  01A3               	clrf	(RealTimeClock_set_burst_time@i+1)
 10195  151B  01A4               	
 10196                           l4035:	
 10197  151C                     	movf	(RealTimeClock_set_burst_time@i+1),w
 10198  151C  0824               	xorlw	80h
 10199  151D  3A80               	movwf	btemp+1
 10200  151E  00FF               	movlw	(0)^80h
 10201  151F  3080               	subwf	btemp+1,w
 10202  1520  027F               	skipz
 10203  1521  1D03               	goto	u3285
 10204  1522  2D25               	movlw	08h
 10205  1523  3008               	subwf	(RealTimeClock_set_burst_time@i),w
 10206  1524  0223               u3285:
 10207  1525                     
 10208                           	skipc
 10209  1525  1C03               	goto	u3281
 10210  1526  2D28               	goto	u3280
 10211  1527  2D29               u3281:
 10212  1528                     	goto	l4039
 10213  1528  2D2B               u3280:
 10214  1529                     	goto	l343
 10215  1529  2D59               	
 10216                           l4037:	
 10217  152A                     	goto	l343
 10218  152A  2D59               	
 10219                           l342:	
 10220  152B                     	line	59
 10221                           	
 10222                           l4039:	
 10223  152B                     ;realtimeclock.c: 59:         RealTimeClock_write_byte(__int_to_hex(time[i]));
 10224                           	bcf	status, 5	;RP0=0, select bank0
 10225  152B  1283               	bcf	status, 6	;RP1=0, select bank0
 10226  152C  1303               	movf	(RealTimeClock_set_burst_time@i),w
 10227  152D  0823               	movwf	(??_RealTimeClock_set_burst_time+0)+0
 10228  152E  00A0               	addwf	(??_RealTimeClock_set_burst_time+0)+0,w
 10229  152F  0720               	addwf	(RealTimeClock_set_burst_time@time),w
 10230  1530  0722               	movwf	(??_RealTimeClock_set_burst_time+1)+0
 10231  1531  00A1               	movf	0+(??_RealTimeClock_set_burst_time+1)+0,w
 10232  1532  0821               	movwf	fsr0
 10233  1533  0084               	bsf	status, 7	;select IRP bank2
 10234  1534  1783               	movf	indf,w
 10235  1535  0800               	movwf	(___int_to_hex@integer)
 10236  1536  00F7               	incf	fsr0,f
 10237  1537  0A84               	movf	indf,w
 10238  1538  0800               	movwf	(___int_to_hex@integer+1)
 10239  1539  00F8               	fcall	___int_to_hex
 10240  153A  160A  118A  231F  160A  118A  	fcall	_RealTimeClock_write_byte
 10241  153F  160A  118A  21AC  160A  118A  	line	60
 10242                           	
 10243                           l4041:	
 10244  1544                     ;realtimeclock.c: 60:     }
 10245                           	movlw	01h
 10246  1544  3001               	bcf	status, 5	;RP0=0, select bank0
 10247  1545  1283               	bcf	status, 6	;RP1=0, select bank0
 10248  1546  1303               	addwf	(RealTimeClock_set_burst_time@i),f
 10249  1547  07A3               	skipnc
 10250  1548  1803               	incf	(RealTimeClock_set_burst_time@i+1),f
 10251  1549  0AA4               	movlw	0
 10252  154A  3000               	addwf	(RealTimeClock_set_burst_time@i+1),f
 10253  154B  07A4               	
 10254                           l4043:	
 10255  154C                     	movf	(RealTimeClock_set_burst_time@i+1),w
 10256  154C  0824               	xorlw	80h
 10257  154D  3A80               	movwf	btemp+1
 10258  154E  00FF               	movlw	(0)^80h
 10259  154F  3080               	subwf	btemp+1,w
 10260  1550  027F               	skipz
 10261  1551  1D03               	goto	u3295
 10262  1552  2D55               	movlw	08h
 10263  1553  3008               	subwf	(RealTimeClock_set_burst_time@i),w
 10264  1554  0223               u3295:
 10265  1555                     
 10266                           	skipc
 10267  1555  1C03               	goto	u3291
 10268  1556  2D58               	goto	u3290
 10269  1557  2D59               u3291:
 10270  1558                     	goto	l4039
 10271  1558  2D2B               u3290:
 10272  1559                     	
 10273                           l343:	
 10274  1559                     	line	61
 10275                           ;realtimeclock.c: 61:     RB5 = 0;
 10276                           	bcf	status, 5	;RP0=0, select bank0
 10277  1559  1283               	bcf	status, 6	;RP1=0, select bank0
 10278  155A  1303               	bcf	(53/8),(53)&7	;volatile
 10279  155B  1286               	line	62
 10280                           	
 10281                           l344:	
 10282  155C                     	return
 10283  155C  0008               	opt stack 0
 10284                           GLOBAL	__end_of_RealTimeClock_set_burst_time
 10285                           	__end_of_RealTimeClock_set_burst_time:
 10286  155D                     	signat	_RealTimeClock_set_burst_time,4217
 10287                           	global	___int_to_hex
 10288                           
 10289 ;; *************** function ___int_to_hex *****************
 10290 ;; Defined at:
 10291 ;;		line 15 in file "realtimeclock.c"
 10292 ;; Parameters:    Size  Location     Type
 10293 ;;  integer         2    7[COMMON] int 
 10294 ;; Auto vars:     Size  Location     Type
 10295 ;;  i               2   12[COMMON] int 
 10296 ;;  t               2   10[COMMON] int 
 10297 ;; Return value:  Size  Location     Type
 10298 ;;                  1    wreg      unsigned char 
 10299 ;; Registers used:
 10300 ;;		wreg, status,2, status,0, pclath, cstack
 10301 ;; Tracked objects:
 10302 ;;		On entry : 0/0
 10303 ;;		On exit  : 0/0
 10304 ;;		Unchanged: 0/0
 10305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10306 ;;      Params:         2       0       0       0       0
 10307 ;;      Locals:         4       0       0       0       0
 10308 ;;      Temps:          1       0       0       0       0
 10309 ;;      Totals:         7       0       0       0       0
 10310 ;;Total ram usage:        7 bytes
 10311 ;; Hardware stack levels used:    1
 10312 ;; Hardware stack levels required when called:    1
 10313 ;; This function calls:
 10314 ;;		___awmod
 10315 ;; This function is called by:
 10316 ;;		_RealTimeClock_set_burst_time
 10317 ;;		_RealTimeClock_set_seconds
 10318 ;;		_RealTimeClock_set_minutes
 10319 ;;		_RealTimeClock_set_hours
 10320 ;;		_RealTimeClock_set_day_of_week
 10321 ;; This function uses a non-reentrant model
 10322 ;;
 10323                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
 10324                           	line	15
 10325                           global __ptext27
 10326                           __ptext27:	;psect for function ___int_to_hex
 10327  131F                     psect	text27
 10328                           	file	"realtimeclock.c"
 10329                           	line	15
 10330                           	global	__size_of___int_to_hex
 10331                           	__size_of___int_to_hex	equ	__end_of___int_to_hex-___int_to_hex
 10332  0042                     	
 10333                           ___int_to_hex:	
 10334  131F                     ;incstack = 0
 10335                           	opt	stack 4
 10336                           ; Regs used in ___int_to_hex: [wreg+status,2+status,0+pclath+cstack]
 10337                           	line	16
 10338                           	
 10339                           l3485:	
 10340  131F                     ;realtimeclock.c: 16:     int t = 0;
 10341                           	clrf	(___int_to_hex@t)
 10342  131F  01FA               	clrf	(___int_to_hex@t+1)
 10343  1320  01FB               	line	17
 10344                           ;realtimeclock.c: 17:     for(int i = 0; i < integer; ++i) {
 10345                           	clrf	(___int_to_hex@i)
 10346  1321  01FC               	clrf	(___int_to_hex@i+1)
 10347  1322  01FD               	goto	l323
 10348  1323  2B4F               	
 10349                           l324:	
 10350  1324                     	line	18
 10351                           	
 10352                           l3487:	
 10353  1324                     ;realtimeclock.c: 18:         ++t;
 10354                           	movlw	01h
 10355  1324  3001               	addwf	(___int_to_hex@t),f
 10356  1325  07FA               	skipnc
 10357  1326  1803               	incf	(___int_to_hex@t+1),f
 10358  1327  0AFB               	movlw	0
 10359  1328  3000               	addwf	(___int_to_hex@t+1),f
 10360  1329  07FB               	line	19
 10361                           	
 10362                           l3489:	
 10363  132A                     ;realtimeclock.c: 19:         if(i && i % 10 == 0) {
 10364                           	movf	((___int_to_hex@i)),w
 10365  132A  087C               iorwf	((___int_to_hex@i+1)),w
 10366  132B  047D               	btfsc	status,2
 10367  132C  1903               	goto	u2851
 10368  132D  2B2F               	goto	u2850
 10369  132E  2B30               u2851:
 10370  132F                     	goto	l325
 10371  132F  2B49               u2850:
 10372  1330                     	
 10373                           l3491:	
 10374  1330                     	movlw	0Ah
 10375  1330  300A               	movwf	(___awmod@divisor)
 10376  1331  00F0               	movlw	0
 10377  1332  3000               	movwf	((___awmod@divisor))+1
 10378  1333  00F1               	movf	(___int_to_hex@i+1),w
 10379  1334  087D               	movwf	(___awmod@dividend+1)
 10380  1335  00F3               	movf	(___int_to_hex@i),w
 10381  1336  087C               	movwf	(___awmod@dividend)
 10382  1337  00F2               	fcall	___awmod
 10383  1338  160A  118A  255D  160A  118A  	movf	((0+(?___awmod))),w
 10384  133D  0870               iorwf	((1+(?___awmod))),w
 10385  133E  0471               	btfss	status,2
 10386  133F  1D03               	goto	u2861
 10387  1340  2B42               	goto	u2860
 10388  1341  2B43               u2861:
 10389  1342                     	goto	l325
 10390  1342  2B49               u2860:
 10391  1343                     	line	20
 10392                           	
 10393                           l3493:	
 10394  1343                     ;realtimeclock.c: 20:             t+=6;
 10395                           	movlw	06h
 10396  1343  3006               	addwf	(___int_to_hex@t),f
 10397  1344  07FA               	skipnc
 10398  1345  1803               	incf	(___int_to_hex@t+1),f
 10399  1346  0AFB               	movlw	0
 10400  1347  3000               	addwf	(___int_to_hex@t+1),f
 10401  1348  07FB               	line	21
 10402                           ;realtimeclock.c: 21:         }
 10403                           	
 10404                           l325:	
 10405  1349                     	line	22
 10406                           ;realtimeclock.c: 22:     }
 10407                           	movlw	01h
 10408  1349  3001               	addwf	(___int_to_hex@i),f
 10409  134A  07FC               	skipnc
 10410  134B  1803               	incf	(___int_to_hex@i+1),f
 10411  134C  0AFD               	movlw	0
 10412  134D  3000               	addwf	(___int_to_hex@i+1),f
 10413  134E  07FD               	
 10414                           l323:	
 10415  134F                     	movf	(___int_to_hex@i+1),w
 10416  134F  087D               	xorlw	80h
 10417  1350  3A80               	movwf	(??___int_to_hex+0)+0
 10418  1351  00F9               	movf	(___int_to_hex@integer+1),w
 10419  1352  0878               	xorlw	80h
 10420  1353  3A80               	subwf	(??___int_to_hex+0)+0,w
 10421  1354  0279               	skipz
 10422  1355  1D03               	goto	u2875
 10423  1356  2B59               	movf	(___int_to_hex@integer),w
 10424  1357  0877               	subwf	(___int_to_hex@i),w
 10425  1358  027C               u2875:
 10426  1359                     
 10427                           	skipc
 10428  1359  1C03               	goto	u2871
 10429  135A  2B5C               	goto	u2870
 10430  135B  2B5D               u2871:
 10431  135C                     	goto	l3487
 10432  135C  2B24               u2870:
 10433  135D                     	goto	l3495
 10434  135D  2B5E               	
 10435                           l326:	
 10436  135E                     	line	23
 10437                           	
 10438                           l3495:	
 10439  135E                     ;realtimeclock.c: 23:     return t;
 10440                           	movf	(___int_to_hex@t),w
 10441  135E  087A               	goto	l327
 10442  135F  2B60               	
 10443                           l3497:	
 10444  1360                     	line	24
 10445                           	
 10446                           l327:	
 10447  1360                     	return
 10448  1360  0008               	opt stack 0
 10449                           GLOBAL	__end_of___int_to_hex
 10450                           	__end_of___int_to_hex:
 10451  1361                     	signat	___int_to_hex,4217
 10452                           	global	_RealTimeClock_init
 10453                           
 10454 ;; *************** function _RealTimeClock_init *****************
 10455 ;; Defined at:
 10456 ;;		line 74 in file "realtimeclock.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;		None
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;		None
 10461 ;; Return value:  Size  Location     Type
 10462 ;;                  1    wreg      void 
 10463 ;; Registers used:
 10464 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10465 ;; Tracked objects:
 10466 ;;		On entry : 0/0
 10467 ;;		On exit  : 0/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10470 ;;      Params:         0       0       0       0       0
 10471 ;;      Locals:         0       0       0       0       0
 10472 ;;      Temps:          0       0       0       0       0
 10473 ;;      Totals:         0       0       0       0       0
 10474 ;;Total ram usage:        0 bytes
 10475 ;; Hardware stack levels used:    1
 10476 ;; Hardware stack levels required when called:    1
 10477 ;; This function calls:
 10478 ;;		_RealTimeClock_write_byte
 10479 ;; This function is called by:
 10480 ;;		_main
 10481 ;; This function uses a non-reentrant model
 10482 ;;
 10483                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
 10484                           	line	74
 10485                           global __ptext28
 10486                           __ptext28:	;psect for function _RealTimeClock_init
 10487  1ECE                     psect	text28
 10488                           	file	"realtimeclock.c"
 10489                           	line	74
 10490                           	global	__size_of_RealTimeClock_init
 10491                           	__size_of_RealTimeClock_init	equ	__end_of_RealTimeClock_init-_RealTimeClock_init
 10492  001E                     	
 10493                           _RealTimeClock_init:	
 10494  1ECE                     ;incstack = 0
 10495                           	opt	stack 6
 10496                           ; Regs used in _RealTimeClock_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10497                           	line	75
 10498                           	
 10499                           l4009:	
 10500  1ECE                     ;realtimeclock.c: 75:     RB5 = 0;
 10501                           	bcf	status, 5	;RP0=0, select bank0
 10502  1ECE  1283               	bcf	status, 6	;RP1=0, select bank0
 10503  1ECF  1303               	bcf	(53/8),(53)&7	;volatile
 10504  1ED0  1286               	line	76
 10505                           	
 10506                           l4011:	
 10507  1ED1                     ;realtimeclock.c: 76:     ADCON1 = 0x06;
 10508                           	movlw	low(06h)
 10509  1ED1  3006               	bsf	status, 5	;RP0=1, select bank1
 10510  1ED2  1683               	bcf	status, 6	;RP1=0, select bank1
 10511  1ED3  1303               	movwf	(159)^080h	;volatile
 10512  1ED4  009F               	line	78
 10513                           	
 10514                           l4013:	
 10515  1ED5                     ;realtimeclock.c: 78:     TRISB0 = 0;
 10516                           	bcf	(1072/8)^080h,(1072)&7	;volatile
 10517  1ED5  1006               	line	79
 10518                           	
 10519                           l4015:	
 10520  1ED6                     ;realtimeclock.c: 79:     TRISB4 = 0;
 10521                           	bcf	(1076/8)^080h,(1076)&7	;volatile
 10522  1ED6  1206               	line	80
 10523                           	
 10524                           l4017:	
 10525  1ED7                     ;realtimeclock.c: 80:     TRISB5 = 0;
 10526                           	bcf	(1077/8)^080h,(1077)&7	;volatile
 10527  1ED7  1286               	line	81
 10528                           	
 10529                           l4019:	
 10530  1ED8                     ;realtimeclock.c: 81:     RB0 = 0;
 10531                           	bcf	status, 5	;RP0=0, select bank0
 10532  1ED8  1283               	bcf	status, 6	;RP1=0, select bank0
 10533  1ED9  1303               	bcf	(48/8),(48)&7	;volatile
 10534  1EDA  1006               	line	82
 10535                           	
 10536                           l4021:	
 10537  1EDB                     ;realtimeclock.c: 82:     RB5 = 1;
 10538                           	bsf	(53/8),(53)&7	;volatile
 10539  1EDB  1686               	line	83
 10540                           	
 10541                           l4023:	
 10542  1EDC                     ;realtimeclock.c: 83:     RealTimeClock_write_byte(0x8e);
 10543                           	movlw	low(08Eh)
 10544  1EDC  308E               	fcall	_RealTimeClock_write_byte
 10545  1EDD  160A  118A  21AC  160A  158A  	line	84
 10546                           	
 10547                           l4025:	
 10548  1EE2                     ;realtimeclock.c: 84:     RealTimeClock_write_byte(0);
 10549                           	movlw	low(0)
 10550  1EE2  3000               	fcall	_RealTimeClock_write_byte
 10551  1EE3  160A  118A  21AC  160A  158A  	line	85
 10552                           	
 10553                           l4027:	
 10554  1EE8                     ;realtimeclock.c: 85:     RB5 = 0;
 10555                           	bcf	status, 5	;RP0=0, select bank0
 10556  1EE8  1283               	bcf	status, 6	;RP1=0, select bank0
 10557  1EE9  1303               	bcf	(53/8),(53)&7	;volatile
 10558  1EEA  1286               	line	86
 10559                           	
 10560                           l352:	
 10561  1EEB                     	return
 10562  1EEB  0008               	opt stack 0
 10563                           GLOBAL	__end_of_RealTimeClock_init
 10564                           	__end_of_RealTimeClock_init:
 10565  1EEC                     	signat	_RealTimeClock_init,89
 10566                           	global	_LCD_Init
 10567                           
 10568 ;; *************** function _LCD_Init *****************
 10569 ;; Defined at:
 10570 ;;		line 26 in file "LCD.c"
 10571 ;; Parameters:    Size  Location     Type
 10572 ;;		None
 10573 ;; Auto vars:     Size  Location     Type
 10574 ;;		None
 10575 ;; Return value:  Size  Location     Type
 10576 ;;                  1    wreg      void 
 10577 ;; Registers used:
 10578 ;;		wreg, status,2
 10579 ;; Tracked objects:
 10580 ;;		On entry : 0/0
 10581 ;;		On exit  : 0/0
 10582 ;;		Unchanged: 0/0
 10583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10584 ;;      Params:         0       0       0       0       0
 10585 ;;      Locals:         0       0       0       0       0
 10586 ;;      Temps:          0       0       0       0       0
 10587 ;;      Totals:         0       0       0       0       0
 10588 ;;Total ram usage:        0 bytes
 10589 ;; Hardware stack levels used:    1
 10590 ;; This function calls:
 10591 ;;		Nothing
 10592 ;; This function is called by:
 10593 ;;		_main
 10594 ;; This function uses a non-reentrant model
 10595 ;;
 10596                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
 10597                           	file	"LCD.c"
 10598                           	line	26
 10599                           global __ptext29
 10600                           __ptext29:	;psect for function _LCD_Init
 10601  1DE1                     psect	text29
 10602                           	file	"LCD.c"
 10603                           	line	26
 10604                           	global	__size_of_LCD_Init
 10605                           	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_Init
 10606  0007                     	
 10607                           _LCD_Init:	
 10608  1DE1                     ;incstack = 0
 10609                           	opt	stack 7
 10610                           ; Regs used in _LCD_Init: [wreg+status,2]
 10611                           	line	28
 10612                           	
 10613                           l3995:	
 10614  1DE1                     ;LCD.c: 28:     TRISD = 0x00;
 10615                           	bsf	status, 5	;RP0=1, select bank1
 10616  1DE1  1683               	bcf	status, 6	;RP1=0, select bank1
 10617  1DE2  1303               	clrf	(136)^080h	;volatile
 10618  1DE3  0188               	line	29
 10619                           ;LCD.c: 29:     TRISA = 0x00;
 10620                           	clrf	(133)^080h	;volatile
 10621  1DE4  0185               	line	30
 10622                           	
 10623                           l3997:	
 10624  1DE5                     ;LCD.c: 30:     ADCON1 = 0x06;
 10625                           	movlw	low(06h)
 10626  1DE5  3006               	movwf	(159)^080h	;volatile
 10627  1DE6  009F               	line	31
 10628                           	
 10629                           l508:	
 10630  1DE7                     	return
 10631  1DE7  0008               	opt stack 0
 10632                           GLOBAL	__end_of_LCD_Init
 10633                           	__end_of_LCD_Init:
 10634  1DE8                     	signat	_LCD_Init,89
 10635                           	global	_Init_Keypad
 10636                           
 10637 ;; *************** function _Init_Keypad *****************
 10638 ;; Defined at:
 10639 ;;		line 11 in file "KeyMatrix.c"
 10640 ;; Parameters:    Size  Location     Type
 10641 ;;		None
 10642 ;; Auto vars:     Size  Location     Type
 10643 ;;		None
 10644 ;; Return value:  Size  Location     Type
 10645 ;;                  1    wreg      void 
 10646 ;; Registers used:
 10647 ;;		wreg, status,2
 10648 ;; Tracked objects:
 10649 ;;		On entry : 0/0
 10650 ;;		On exit  : 0/0
 10651 ;;		Unchanged: 0/0
 10652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10653 ;;      Params:         0       0       0       0       0
 10654 ;;      Locals:         0       0       0       0       0
 10655 ;;      Temps:          0       0       0       0       0
 10656 ;;      Totals:         0       0       0       0       0
 10657 ;;Total ram usage:        0 bytes
 10658 ;; Hardware stack levels used:    1
 10659 ;; This function calls:
 10660 ;;		Nothing
 10661 ;; This function is called by:
 10662 ;;		_main
 10663 ;; This function uses a non-reentrant model
 10664 ;;
 10665                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 10666                           	file	"KeyMatrix.c"
 10667                           	line	11
 10668                           global __ptext30
 10669                           __ptext30:	;psect for function _Init_Keypad
 10670  0803                     psect	text30
 10671                           	file	"KeyMatrix.c"
 10672                           	line	11
 10673                           	global	__size_of_Init_Keypad
 10674                           	__size_of_Init_Keypad	equ	__end_of_Init_Keypad-_Init_Keypad
 10675  0008                     	
 10676                           _Init_Keypad:	
 10677  0803                     ;incstack = 0
 10678                           	opt	stack 7
 10679                           ; Regs used in _Init_Keypad: [wreg+status,2]
 10680                           	line	13
 10681                           	
 10682                           l3999:	
 10683  0803                     ;KeyMatrix.c: 13:     PORTC = 0x00;
 10684                           	bcf	status, 5	;RP0=0, select bank0
 10685  0803  1283               	bcf	status, 6	;RP1=0, select bank0
 10686  0804  1303               	clrf	(7)	;volatile
 10687  0805  0187               	line	14
 10688                           	
 10689                           l4001:	
 10690  0806                     ;KeyMatrix.c: 14:     TRISC = 0xF;
 10691                           	movlw	low(0Fh)
 10692  0806  300F               	bsf	status, 5	;RP0=1, select bank1
 10693  0807  1683               	bcf	status, 6	;RP1=0, select bank1
 10694  0808  1303               	movwf	(135)^080h	;volatile
 10695  0809  0087               	line	15
 10696                           	
 10697                           l416:	
 10698  080A                     	return
 10699  080A  0008               	opt stack 0
 10700                           GLOBAL	__end_of_Init_Keypad
 10701                           	__end_of_Init_Keypad:
 10702  080B                     	signat	_Init_Keypad,89
 10703                           	global	_DateDayScreen
 10704                           
 10705 ;; *************** function _DateDayScreen *****************
 10706 ;; Defined at:
 10707 ;;		line 419 in file "main.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;  Key             2   17[BANK0 ] int 
 10710 ;; Auto vars:     Size  Location     Type
 10711 ;;  day             1   21[BANK0 ] PTR unsigned char 
 10712 ;;		 -> STR_19(6), 
 10713 ;;  date            1   20[BANK0 ] PTR unsigned char 
 10714 ;;		 -> STR_18(7), 
 10715 ;; Return value:  Size  Location     Type
 10716 ;;                  1    wreg      void 
 10717 ;; Registers used:
 10718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10719 ;; Tracked objects:
 10720 ;;		On entry : 0/0
 10721 ;;		On exit  : 0/0
 10722 ;;		Unchanged: 0/0
 10723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10724 ;;      Params:         0       2       0       0       0
 10725 ;;      Locals:         0       2       0       0       0
 10726 ;;      Temps:          0       1       0       0       0
 10727 ;;      Totals:         0       5       0       0       0
 10728 ;;Total ram usage:        5 bytes
 10729 ;; Hardware stack levels used:    1
 10730 ;; Hardware stack levels required when called:    4
 10731 ;; This function calls:
 10732 ;;		_ChangeTrigger
 10733 ;;		_DisplayDate
 10734 ;;		_DisplayDay
 10735 ;;		_Keypad_Scan
 10736 ;;		_LCD_Command
 10737 ;;		_LCD_SecondLine
 10738 ;;		_LCD_SendString
 10739 ;;		_SwapToHeatingDisplay
 10740 ;; This function is called by:
 10741 ;;		_main
 10742 ;; This function uses a non-reentrant model
 10743 ;;
 10744                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 10745                           	file	"main.c"
 10746                           	line	419
 10747                           global __ptext31
 10748                           __ptext31:	;psect for function _DateDayScreen
 10749  16A4                     psect	text31
 10750                           	file	"main.c"
 10751                           	line	419
 10752                           	global	__size_of_DateDayScreen
 10753                           	__size_of_DateDayScreen	equ	__end_of_DateDayScreen-_DateDayScreen
 10754  007F                     	
 10755                           _DateDayScreen:	
 10756  16A4                     ;incstack = 0
 10757                           	opt	stack 3
 10758                           ; Regs used in _DateDayScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10759                           	line	421
 10760                           	
 10761                           l3715:	
 10762  16A4                     ;main.c: 419:         };main.c: 420:         if (Key == 7);main.c: 421:         {
 10763                           	movlw	low(01h)
 10764  16A4  3001               	fcall	_LCD_Command
 10765  16A5  160A  158A  25EF  160A  118A  	line	422
 10766                           	
 10767                           l3717:	
 10768  16AA                     ;main.c: 422:             SwapToHeatingDisplay(Key);
 10769                           	movlw	(low((((STR_18)-__stringbase)|8000h)))&0ffh
 10770  16AA  3080               	bcf	status, 5	;RP0=0, select bank0
 10771  16AB  1283               	bcf	status, 6	;RP1=0, select bank0
 10772  16AC  1303               	movwf	(??_DateDayScreen+0)+0
 10773  16AD  00B3               	movf	(??_DateDayScreen+0)+0,w
 10774  16AE  0833               	movwf	(DateDayScreen@date)
 10775  16AF  00B4               	line	423
 10776                           	
 10777                           l3719:	
 10778  16B0                     ;main.c: 423:         }
 10779                           	movlw	(low((((STR_19)-__stringbase)|8000h)))&0ffh
 10780  16B0  309C               	movwf	(??_DateDayScreen+0)+0
 10781  16B1  00B3               	movf	(??_DateDayScreen+0)+0,w
 10782  16B2  0833               	movwf	(DateDayScreen@day)
 10783  16B3  00B5               	line	424
 10784                           ;main.c: 424:     }
 10785                           	
 10786                           l183:	
 10787  16B4                     	line	426
 10788                           ;main.c: 425: };main.c: 426: 
 10789                           	fcall	_Keypad_Scan
 10790  16B4  120A  118A  20DF  160A  118A  	movf	(1+(?_Keypad_Scan)),w
 10791  16B9  0877               	bcf	status, 5	;RP0=0, select bank0
 10792  16BA  1283               	bcf	status, 6	;RP1=0, select bank0
 10793  16BB  1303               	movwf	(DateDayScreen@Key+1)
 10794  16BC  00B2               	movf	(0+(?_Keypad_Scan)),w
 10795  16BD  0876               	movwf	(DateDayScreen@Key)
 10796  16BE  00B1               	line	427
 10797                           ;main.c: 427: 
 10798                           	movlw	low(03h)
 10799  16BF  3003               	fcall	_LCD_Command
 10800  16C0  160A  158A  25EF  160A  118A  	line	428
 10801                           	
 10802                           l3721:	
 10803  16C5                     ;main.c: 428: void SetTime(int Key)
 10804                           	bcf	status, 5	;RP0=0, select bank0
 10805  16C5  1283               	bcf	status, 6	;RP1=0, select bank0
 10806  16C6  1303               		movf	(DateDayScreen@date),w
 10807  16C7  0834               	movwf	(LCD_SendString@string)
 10808  16C8  00F1               	movlw	0
 10809  16C9  3000               	btfss	status,2
 10810  16CA  1D03               	movlw	080h
 10811  16CB  3080               	movwf	(LCD_SendString@string+1)
 10812  16CC  00F2               
 10813                           	fcall	_LCD_SendString
 10814  16CD  160A  118A  2361  160A  118A  	line	429
 10815                           	
 10816                           l3723:	
 10817  16D2                     ;main.c: 429: {
 10818                           	fcall	_DisplayDate
 10819  16D2  160A  118A  2723  160A  118A  	line	430
 10820                           	
 10821                           l3725:	
 10822  16D7                     ;main.c: 430: 
 10823                           	fcall	_LCD_SecondLine
 10824  16D7  160A  158A  25DA  160A  118A  	line	431
 10825                           	
 10826                           l3727:	
 10827  16DC                     ;main.c: 431:     LCD_Command(0x01);
 10828                           	bcf	status, 5	;RP0=0, select bank0
 10829  16DC  1283               	bcf	status, 6	;RP1=0, select bank0
 10830  16DD  1303               		movf	(DateDayScreen@day),w
 10831  16DE  0835               	movwf	(LCD_SendString@string)
 10832  16DF  00F1               	movlw	0
 10833  16E0  3000               	btfss	status,2
 10834  16E1  1D03               	movlw	080h
 10835  16E2  3080               	movwf	(LCD_SendString@string+1)
 10836  16E3  00F2               
 10837                           	fcall	_LCD_SendString
 10838  16E4  160A  118A  2361  160A  118A  	line	432
 10839                           	
 10840                           l3729:	
 10841  16E9                     ;main.c: 432: 
 10842                           	fcall	_DisplayDay
 10843  16E9  120A  158A  200B  160A  118A  	line	433
 10844                           	
 10845                           l3731:	
 10846  16EE                     ;main.c: 433:     int i = 0;
 10847                           	bcf	status, 5	;RP0=0, select bank0
 10848  16EE  1283               	bcf	status, 6	;RP1=0, select bank0
 10849  16EF  1303               		decf	((DateDayScreen@Key)),w
 10850  16F0  0331               iorwf	((DateDayScreen@Key+1)),w
 10851  16F1  0432               	btfss	status,2
 10852  16F2  1D03               	goto	u3001
 10853  16F3  2EF5               	goto	u3000
 10854  16F4  2EF6               u3001:
 10855  16F5                     	goto	l3735
 10856  16F5  2EFD               u3000:
 10857  16F6                     	line	435
 10858                           	
 10859                           l3733:	
 10860  16F6                     ;main.c: 434: ;main.c: 435:     int hour, min, sec;
 10861                           	movf	(DateDayScreen@Key),w
 10862  16F6  0831               	fcall	_ChangeTrigger
 10863  16F7  120A  158A  2374  160A  118A  	goto	l3735
 10864  16FC  2EFD               	line	436
 10865                           ;main.c: 436:     char* Time = "Time:";
 10866                           	
 10867                           l184:	
 10868  16FD                     	line	437
 10869                           	
 10870                           l3735:	
 10871  16FD                     ;main.c: 437:     char* TimeSet = "Time Set";
 10872                           		movlw	6
 10873  16FD  3006               	bcf	status, 5	;RP0=0, select bank0
 10874  16FE  1283               	bcf	status, 6	;RP1=0, select bank0
 10875  16FF  1303               	xorwf	((DateDayScreen@Key)),w
 10876  1700  0631               iorwf	((DateDayScreen@Key+1)),w
 10877  1701  0432               	btfss	status,2
 10878  1702  1D03               	goto	u3011
 10879  1703  2F05               	goto	u3010
 10880  1704  2F06               u3011:
 10881  1705                     	goto	l3739
 10882  1705  2F0D               u3010:
 10883  1706                     	line	439
 10884                           	
 10885                           l3737:	
 10886  1706                     ;main.c: 438: ;main.c: 439:     timeSecs = RealTimeClock_get_seconds();
 10887                           	movlw	low(01h)
 10888  1706  3001               	fcall	_LCD_Command
 10889  1707  160A  158A  25EF  160A  118A  	line	440
 10890                           ;main.c: 440:     timeMins = RealTimeClock_get_minutes();
 10891                           	goto	l189
 10892  170C  2F22               	line	441
 10893                           ;main.c: 441:     timeHours = RealTimeClock_get_hours();
 10894                           	
 10895                           l185:	
 10896  170D                     	line	442
 10897                           	
 10898                           l3739:	
 10899  170D                     ;main.c: 442: 
 10900                           		movlw	7
 10901  170D  3007               	bcf	status, 5	;RP0=0, select bank0
 10902  170E  1283               	bcf	status, 6	;RP1=0, select bank0
 10903  170F  1303               	xorwf	((DateDayScreen@Key)),w
 10904  1710  0631               iorwf	((DateDayScreen@Key+1)),w
 10905  1711  0432               	btfss	status,2
 10906  1712  1D03               	goto	u3021
 10907  1713  2F15               	goto	u3020
 10908  1714  2F16               u3021:
 10909  1715                     	goto	l183
 10910  1715  2EB4               u3020:
 10911  1716                     	line	444
 10912                           	
 10913                           l3741:	
 10914  1716                     ;main.c: 443:     int setTime[3];;main.c: 444:     setTime[0] = timeHours;
 10915                           	movf	(DateDayScreen@Key+1),w
 10916  1716  0832               	movwf	(SwapToHeatingDisplay@Key+1)
 10917  1717  00F9               	movf	(DateDayScreen@Key),w
 10918  1718  0831               	movwf	(SwapToHeatingDisplay@Key)
 10919  1719  00F8               	fcall	_SwapToHeatingDisplay
 10920  171A  160A  118A  2631  160A  118A  	goto	l183
 10921  171F  2EB4               	line	445
 10922                           ;main.c: 445:     setTime[1] = timeMins;
 10923                           	
 10924                           l187:	
 10925  1720                     	goto	l183
 10926  1720  2EB4               	line	446
 10927                           ;main.c: 446:     setTime[2] = timeSecs;
 10928                           	
 10929                           l188:	
 10930  1721                     	goto	l183
 10931  1721  2EB4               	
 10932                           l186:	
 10933  1722                     	line	447
 10934                           	
 10935                           l189:	
 10936  1722                     	return
 10937  1722  0008               	opt stack 0
 10938                           GLOBAL	__end_of_DateDayScreen
 10939                           	__end_of_DateDayScreen:
 10940  1723                     	signat	_DateDayScreen,4217
 10941                           	global	_SwapToHeatingDisplay
 10942                           
 10943 ;; *************** function _SwapToHeatingDisplay *****************
 10944 ;; Defined at:
 10945 ;;		line 263 in file "main.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;  Key             2    8[COMMON] int 
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;  Off             1   13[COMMON] PTR unsigned char 
 10950 ;;		 -> STR_14(4), 
 10951 ;;  On              1   12[COMMON] PTR unsigned char 
 10952 ;;		 -> STR_13(3), 
 10953 ;;  Heat            1   11[COMMON] PTR unsigned char 
 10954 ;;		 -> STR_12(9), 
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  1    wreg      void 
 10957 ;; Registers used:
 10958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10964 ;;      Params:         2       0       0       0       0
 10965 ;;      Locals:         3       0       0       0       0
 10966 ;;      Temps:          1       0       0       0       0
 10967 ;;      Totals:         6       0       0       0       0
 10968 ;;Total ram usage:        6 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; Hardware stack levels required when called:    3
 10971 ;; This function calls:
 10972 ;;		_Keypad_Scan
 10973 ;;		_LCD_Command
 10974 ;;		_LCD_SendString
 10975 ;; This function is called by:
 10976 ;;		_HeatingControlOff
 10977 ;;		_SoundAlarm
 10978 ;;		_DateDayScreen
 10979 ;;		_main
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 10983                           	line	263
 10984                           global __ptext32
 10985                           __ptext32:	;psect for function _SwapToHeatingDisplay
 10986  1631                     psect	text32
 10987                           	file	"main.c"
 10988                           	line	263
 10989                           	global	__size_of_SwapToHeatingDisplay
 10990                           	__size_of_SwapToHeatingDisplay	equ	__end_of_SwapToHeatingDisplay-_SwapToHeatingDisplay

 10991  0073                     	
 10992                           _SwapToHeatingDisplay:	
 10993  1631                     ;incstack = 0
 10994                           	opt	stack 4
 10995                           ; Regs used in _SwapToHeatingDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
                                 k]
 10996                           	line	265
 10997                           	
 10998                           l3453:	
 10999  1631                     ;main.c: 263:             LCD_SendString(On);;main.c: 264:         };main.c: 265:       
                                   else if(IsHeatingOn == 0)
 11000                           	movlw	(low((((STR_12)-__stringbase)|8000h)))&0ffh
 11001  1631  304B               	movwf	(??_SwapToHeatingDisplay+0)+0
 11002  1632  00FA               	movf	(??_SwapToHeatingDisplay+0)+0,w
 11003  1633  087A               	movwf	(SwapToHeatingDisplay@Heat)
 11004  1634  00FB               	line	267
 11005                           	
 11006                           l3455:	
 11007  1635                     ;main.c: 267:             LCD_Command(0x14);
 11008                           	movlw	low(01h)
 11009  1635  3001               	fcall	_LCD_Command
 11010  1636  160A  158A  25EF  160A  118A  	line	268
 11011                           	
 11012                           l3457:	
 11013  163B                     ;main.c: 268:             LCD_SendString(Off);
 11014                           	movlw	(low((((STR_13)-__stringbase)|8000h)))&0ffh
 11015  163B  303E               	movwf	(??_SwapToHeatingDisplay+0)+0
 11016  163C  00FA               	movf	(??_SwapToHeatingDisplay+0)+0,w
 11017  163D  087A               	movwf	(SwapToHeatingDisplay@On)
 11018  163E  00FC               	line	269
 11019                           	
 11020                           l3459:	
 11021  163F                     ;main.c: 269:         }
 11022                           	movlw	(low((((STR_14)-__stringbase)|8000h)))&0ffh
 11023  163F  3026               	movwf	(??_SwapToHeatingDisplay+0)+0
 11024  1640  00FA               	movf	(??_SwapToHeatingDisplay+0)+0,w
 11025  1641  087A               	movwf	(SwapToHeatingDisplay@Off)
 11026  1642  00FD               	goto	l3461
 11027  1643  2E44               	line	270
 11028                           ;main.c: 270:     }
 11029                           	
 11030                           l147:	
 11031  1644                     	line	273
 11032                           	
 11033                           l3461:	
 11034  1644                     ;main.c: 271: };main.c: 273: 
 11035                           	fcall	_Keypad_Scan
 11036  1644  120A  118A  20DF  160A  118A  	movf	(1+(?_Keypad_Scan)),w
 11037  1649  0877               	movwf	(SwapToHeatingDisplay@Key+1)
 11038  164A  00F9               	movf	(0+(?_Keypad_Scan)),w
 11039  164B  0876               	movwf	(SwapToHeatingDisplay@Key)
 11040  164C  00F8               	line	274
 11041                           	
 11042                           l3463:	
 11043  164D                     ;main.c: 274: void HeatingControlOff(int Key, int temp, int temp2, int temp3)
 11044                           		movlw	7
 11045  164D  3007               	xorwf	((SwapToHeatingDisplay@Key)),w
 11046  164E  0678               iorwf	((SwapToHeatingDisplay@Key+1)),w
 11047  164F  0479               	btfss	status,2
 11048  1650  1D03               	goto	u2821
 11049  1651  2E53               	goto	u2820
 11050  1652  2E54               u2821:
 11051  1653                     	goto	l3467
 11052  1653  2E5B               u2820:
 11053  1654                     	line	276
 11054                           	
 11055                           l3465:	
 11056  1654                     ;main.c: 275: {;main.c: 276: 
 11057                           	movlw	low(01h)
 11058  1654  3001               	fcall	_LCD_Command
 11059  1655  160A  158A  25EF  160A  118A  	line	277
 11060                           ;main.c: 277:     DisableAlarm = 1;
 11061                           	goto	l154
 11062  165A  2EA3               	line	278
 11063                           ;main.c: 278:     SoundOff();
 11064                           	
 11065                           l148:	
 11066  165B                     	line	279
 11067                           	
 11068                           l3467:	
 11069  165B                     ;main.c: 279:     char* Off = "Heating Off";
 11070                           	movlw	low(03h)
 11071  165B  3003               	fcall	_LCD_Command
 11072  165C  160A  158A  25EF  160A  118A  	line	280
 11073                           	
 11074                           l3469:	
 11075  1661                     ;main.c: 280:     char* On = "Heating On";
 11076                           		movf	(SwapToHeatingDisplay@Heat),w
 11077  1661  087B               	movwf	(LCD_SendString@string)
 11078  1662  00F1               	movlw	0
 11079  1663  3000               	btfss	status,2
 11080  1664  1D03               	movlw	080h
 11081  1665  3080               	movwf	(LCD_SendString@string+1)
 11082  1666  00F2               
 11083                           	fcall	_LCD_SendString
 11084  1667  160A  118A  2361  160A  118A  	line	282
 11085                           	
 11086                           l3471:	
 11087  166C                     ;main.c: 282:     LCD_Command(0x01);
 11088                           	bcf	status, 5	;RP0=0, select bank0
 11089  166C  1283               	bcf	status, 6	;RP1=0, select bank0
 11090  166D  1303               		decf	((_IsHeatingOn)),w
 11091  166E  0360               iorwf	((_IsHeatingOn+1)),w
 11092  166F  0461               	btfss	status,2
 11093  1670  1D03               	goto	u2831
 11094  1671  2E73               	goto	u2830
 11095  1672  2E74               u2831:
 11096  1673                     	goto	l3477
 11097  1673  2E86               u2830:
 11098  1674                     	line	284
 11099                           	
 11100                           l3473:	
 11101  1674                     ;main.c: 283: ;main.c: 284:     LCD_Command(0x03);
 11102                           	movlw	low(014h)
 11103  1674  3014               	fcall	_LCD_Command
 11104  1675  160A  158A  25EF  160A  118A  	line	285
 11105                           	
 11106                           l3475:	
 11107  167A                     ;main.c: 285: 
 11108                           		movf	(SwapToHeatingDisplay@On),w
 11109  167A  087C               	movwf	(LCD_SendString@string)
 11110  167B  00F1               	movlw	0
 11111  167C  3000               	btfss	status,2
 11112  167D  1D03               	movlw	080h
 11113  167E  3080               	movwf	(LCD_SendString@string+1)
 11114  167F  00F2               
 11115                           	fcall	_LCD_SendString
 11116  1680  160A  118A  2361  160A  118A  	line	286
 11117                           ;main.c: 286:     LCD_SendString(Off);
 11118                           	goto	l3461
 11119  1685  2E44               	line	287
 11120                           ;main.c: 287: 
 11121                           	
 11122                           l150:	
 11123  1686                     	
 11124                           l3477:	
 11125  1686                     	bcf	status, 5	;RP0=0, select bank0
 11126  1686  1283               	bcf	status, 6	;RP1=0, select bank0
 11127  1687  1303               	movf	((_IsHeatingOn)),w
 11128  1688  0860               iorwf	((_IsHeatingOn+1)),w
 11129  1689  0461               	btfss	status,2
 11130  168A  1D03               	goto	u2841
 11131  168B  2E8D               	goto	u2840
 11132  168C  2E8E               u2841:
 11133  168D                     	goto	l3461
 11134  168D  2E44               u2840:
 11135  168E                     	line	289
 11136                           	
 11137                           l3479:	
 11138  168E                     ;main.c: 288:     Main_Delay(200);;main.c: 289: 
 11139                           	movlw	low(014h)
 11140  168E  3014               	fcall	_LCD_Command
 11141  168F  160A  158A  25EF  160A  118A  	line	290
 11142                           	
 11143                           l3481:	
 11144  1694                     ;main.c: 290:     LCD_Command(0x01);
 11145                           		movf	(SwapToHeatingDisplay@Off),w
 11146  1694  087D               	movwf	(LCD_SendString@string)
 11147  1695  00F1               	movlw	0
 11148  1696  3000               	btfss	status,2
 11149  1697  1D03               	movlw	080h
 11150  1698  3080               	movwf	(LCD_SendString@string+1)
 11151  1699  00F2               
 11152                           	fcall	_LCD_SendString
 11153  169A  160A  118A  2361  160A  118A  	goto	l3461
 11154  169F  2E44               	line	291
 11155                           ;main.c: 291:     while(1)
 11156                           	
 11157                           l152:	
 11158  16A0                     	goto	l3461
 11159  16A0  2E44               	
 11160                           l151:	
 11161  16A1                     	goto	l3461
 11162  16A1  2E44               	line	292
 11163                           ;main.c: 292:     {
 11164                           	
 11165                           l153:	
 11166  16A2                     	goto	l3461
 11167  16A2  2E44               	
 11168                           l149:	
 11169  16A3                     	line	293
 11170                           	
 11171                           l154:	
 11172  16A3                     	return
 11173  16A3  0008               	opt stack 0
 11174                           GLOBAL	__end_of_SwapToHeatingDisplay
 11175                           	__end_of_SwapToHeatingDisplay:
 11176  16A4                     	signat	_SwapToHeatingDisplay,4217
 11177                           	global	_LCD_SecondLine
 11178                           
 11179 ;; *************** function _LCD_SecondLine *****************
 11180 ;; Defined at:
 11181 ;;		line 49 in file "LCD.c"
 11182 ;; Parameters:    Size  Location     Type
 11183 ;;		None
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;		None
 11186 ;; Return value:  Size  Location     Type
 11187 ;;                  1    wreg      void 
 11188 ;; Registers used:
 11189 ;;		wreg, status,2, status,0, pclath, cstack
 11190 ;; Tracked objects:
 11191 ;;		On entry : 0/0
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11195 ;;      Params:         0       0       0       0       0
 11196 ;;      Locals:         0       0       0       0       0
 11197 ;;      Temps:          0       0       0       0       0
 11198 ;;      Totals:         0       0       0       0       0
 11199 ;;Total ram usage:        0 bytes
 11200 ;; Hardware stack levels used:    1
 11201 ;; Hardware stack levels required when called:    2
 11202 ;; This function calls:
 11203 ;;		_LCD_Command
 11204 ;; This function is called by:
 11205 ;;		_MainScreen
 11206 ;;		_DateDayScreen
 11207 ;;		_SetDate
 11208 ;; This function uses a non-reentrant model
 11209 ;;
 11210                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 11211                           	file	"LCD.c"
 11212                           	line	49
 11213                           global __ptext33
 11214                           __ptext33:	;psect for function _LCD_SecondLine
 11215  1DDA                     psect	text33
 11216                           	file	"LCD.c"
 11217                           	line	49
 11218                           	global	__size_of_LCD_SecondLine
 11219                           	__size_of_LCD_SecondLine	equ	__end_of_LCD_SecondLine-_LCD_SecondLine
 11220  0007                     	
 11221                           _LCD_SecondLine:	
 11222  1DDA                     ;incstack = 0
 11223                           	opt	stack 2
 11224                           ; Regs used in _LCD_SecondLine: [wreg+status,2+status,0+pclath+cstack]
 11225                           	line	51
 11226                           	
 11227                           l3213:	
 11228  1DDA                     ;LCD.c: 51:     LCD_Command(0xc0);
 11229                           	movlw	low(0C0h)
 11230  1DDA  30C0               	fcall	_LCD_Command
 11231  1DDB  160A  158A  25EF  160A  158A  	line	52
 11232                           	
 11233                           l514:	
 11234  1DE0                     	return
 11235  1DE0  0008               	opt stack 0
 11236                           GLOBAL	__end_of_LCD_SecondLine
 11237                           	__end_of_LCD_SecondLine:
 11238  1DE1                     	signat	_LCD_SecondLine,89
 11239                           	global	_DisplayDay
 11240                           
 11241 ;; *************** function _DisplayDay *****************
 11242 ;; Defined at:
 11243 ;;		line 104 in file "main.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;		None
 11246 ;; Auto vars:     Size  Location     Type
 11247 ;;  Sunday          1   13[BANK0 ] PTR unsigned char 
 11248 ;;		 -> STR_7(7), 
 11249 ;;  Saturday        1   12[BANK0 ] PTR unsigned char 
 11250 ;;		 -> STR_6(9), 
 11251 ;;  Friday          1   11[BANK0 ] PTR unsigned char 
 11252 ;;		 -> STR_5(7), 
 11253 ;;  Thursday        1   10[BANK0 ] PTR unsigned char 
 11254 ;;		 -> STR_4(9), 
 11255 ;;  Wednesday       1    9[BANK0 ] PTR unsigned char 
 11256 ;;		 -> STR_3(10), 
 11257 ;;  Tuesday         1    8[BANK0 ] PTR unsigned char 
 11258 ;;		 -> STR_2(8), 
 11259 ;;  Monday          1    7[BANK0 ] PTR unsigned char 
 11260 ;;		 -> STR_1(7), 
 11261 ;; Return value:  Size  Location     Type
 11262 ;;                  1    wreg      void 
 11263 ;; Registers used:
 11264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11265 ;; Tracked objects:
 11266 ;;		On entry : 0/0
 11267 ;;		On exit  : 0/0
 11268 ;;		Unchanged: 0/0
 11269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11270 ;;      Params:         0       0       0       0       0
 11271 ;;      Locals:         0       7       0       0       0
 11272 ;;      Temps:          1       0       0       0       0
 11273 ;;      Totals:         1       7       0       0       0
 11274 ;;Total ram usage:        8 bytes
 11275 ;; Hardware stack levels used:    1
 11276 ;; Hardware stack levels required when called:    3
 11277 ;; This function calls:
 11278 ;;		_LCD_SendString
 11279 ;;		_RealTimeClock_get_day_of_week
 11280 ;; This function is called by:
 11281 ;;		_DateDayScreen
 11282 ;; This function uses a non-reentrant model
 11283 ;;
 11284                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 11285                           	file	"main.c"
 11286                           	line	104
 11287                           global __ptext34
 11288                           __ptext34:	;psect for function _DisplayDay
 11289  080B                     psect	text34
 11290                           	file	"main.c"
 11291                           	line	104
 11292                           	global	__size_of_DisplayDay
 11293                           	__size_of_DisplayDay	equ	__end_of_DisplayDay-_DisplayDay
 11294  00B1                     	
 11295                           _DisplayDay:	
 11296  080B                     ;incstack = 0
 11297                           	opt	stack 3
 11298                           ; Regs used in _DisplayDay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11299                           	line	107
 11300                           	
 11301                           l3533:	
 11302  080B                     ;main.c: 107:             break;
 11303                           	fcall	_RealTimeClock_get_day_of_week
 11304  080B  160A  158A  2796  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 11305  0810  1283               	bcf	status, 6	;RP1=0, select bank0
 11306  0811  1303               	movf	(1+(?_RealTimeClock_get_day_of_week)),w
 11307  0812  0826               	bsf	status, 5	;RP0=1, select bank1
 11308  0813  1683               	bcf	status, 6	;RP1=0, select bank1
 11309  0814  1303               	movwf	(_day_of_week+1)^080h
 11310  0815  00ED               	bcf	status, 5	;RP0=0, select bank0
 11311  0816  1283               	bcf	status, 6	;RP1=0, select bank0
 11312  0817  1303               	movf	(0+(?_RealTimeClock_get_day_of_week)),w
 11313  0818  0825               	bsf	status, 5	;RP0=1, select bank1
 11314  0819  1683               	bcf	status, 6	;RP1=0, select bank1
 11315  081A  1303               	movwf	(_day_of_week)^080h
 11316  081B  00EC               	line	108
 11317                           	
 11318                           l3535:	
 11319  081C                     ;main.c: 108:         case 5:
 11320                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
 11321  081C  308E               	movwf	(??_DisplayDay+0)+0
 11322  081D  00FC               	movf	(??_DisplayDay+0)+0,w
 11323  081E  087C               	bcf	status, 5	;RP0=0, select bank0
 11324  081F  1283               	bcf	status, 6	;RP1=0, select bank0
 11325  0820  1303               	movwf	(DisplayDay@Monday)
 11326  0821  00A7               	line	109
 11327                           	
 11328                           l3537:	
 11329  0822                     ;main.c: 109:             LCD_SendString(Friday);
 11330                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
 11331  0822  3078               	movwf	(??_DisplayDay+0)+0
 11332  0823  00FC               	movf	(??_DisplayDay+0)+0,w
 11333  0824  087C               	movwf	(DisplayDay@Tuesday)
 11334  0825  00A8               	line	110
 11335                           	
 11336                           l3539:	
 11337  0826                     ;main.c: 110:             break;
 11338                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
 11339  0826  3041               	movwf	(??_DisplayDay+0)+0
 11340  0827  00FC               	movf	(??_DisplayDay+0)+0,w
 11341  0828  087C               	movwf	(DisplayDay@Wednesday)
 11342  0829  00A9               	line	111
 11343                           	
 11344                           l3541:	
 11345  082A                     ;main.c: 111:         case 6:
 11346                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
 11347  082A  306F               	movwf	(??_DisplayDay+0)+0
 11348  082B  00FC               	movf	(??_DisplayDay+0)+0,w
 11349  082C  087C               	movwf	(DisplayDay@Thursday)
 11350  082D  00AA               	line	112
 11351                           	
 11352                           l3543:	
 11353  082E                     ;main.c: 112:             LCD_SendString(Saturday);
 11354                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
 11355  082E  3087               	movwf	(??_DisplayDay+0)+0
 11356  082F  00FC               	movf	(??_DisplayDay+0)+0,w
 11357  0830  087C               	movwf	(DisplayDay@Friday)
 11358  0831  00AB               	line	113
 11359                           	
 11360                           l3545:	
 11361  0832                     ;main.c: 113:             break;
 11362                           	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
 11363  0832  3066               	movwf	(??_DisplayDay+0)+0
 11364  0833  00FC               	movf	(??_DisplayDay+0)+0,w
 11365  0834  087C               	movwf	(DisplayDay@Saturday)
 11366  0835  00AC               	line	114
 11367                           	
 11368                           l3547:	
 11369  0836                     ;main.c: 114:         case 7:
 11370                           	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
 11371  0836  3095               	movwf	(??_DisplayDay+0)+0
 11372  0837  00FC               	movf	(??_DisplayDay+0)+0,w
 11373  0838  087C               	movwf	(DisplayDay@Sunday)
 11374  0839  00AD               	line	116
 11375                           ;main.c: 116:             break;
 11376                           	goto	l3565
 11377  083A  289D               	line	118
 11378                           ;main.c: 117:     };main.c: 118: }
 11379                           	
 11380                           l112:	
 11381  083B                     	line	119
 11382                           	
 11383                           l3549:	
 11384  083B                     ;main.c: 119: 
 11385                           	bcf	status, 5	;RP0=0, select bank0
 11386  083B  1283               		movf	(DisplayDay@Monday),w
 11387  083C  0827               	movwf	(LCD_SendString@string)
 11388  083D  00F1               	movlw	0
 11389  083E  3000               	btfss	status,2
 11390  083F  1D03               	movlw	080h
 11391  0840  3080               	movwf	(LCD_SendString@string+1)
 11392  0841  00F2               
 11393                           	fcall	_LCD_SendString
 11394  0842  160A  118A  2361  120A  158A  	line	120
 11395                           ;main.c: 120: 
 11396                           	goto	l120
 11397  0847  28BB               	line	121
 11398                           ;main.c: 121: void DisplayTemp(char* tempBuffer)
 11399                           	
 11400                           l114:	
 11401  0848                     	line	122
 11402                           	
 11403                           l3551:	
 11404  0848                     ;main.c: 122: {
 11405                           	bcf	status, 5	;RP0=0, select bank0
 11406  0848  1283               	bcf	status, 6	;RP1=0, select bank0
 11407  0849  1303               		movf	(DisplayDay@Tuesday),w
 11408  084A  0828               	movwf	(LCD_SendString@string)
 11409  084B  00F1               	movlw	0
 11410  084C  3000               	btfss	status,2
 11411  084D  1D03               	movlw	080h
 11412  084E  3080               	movwf	(LCD_SendString@string+1)
 11413  084F  00F2               
 11414                           	fcall	_LCD_SendString
 11415  0850  160A  118A  2361  120A  158A  	line	123
 11416                           ;main.c: 123: 
 11417                           	goto	l120
 11418  0855  28BB               	line	124
 11419                           ;main.c: 124:     Get_Temp(tempBuffer);
 11420                           	
 11421                           l115:	
 11422  0856                     	line	125
 11423                           	
 11424                           l3553:	
 11425  0856                     ;main.c: 125: 
 11426                           	bcf	status, 5	;RP0=0, select bank0
 11427  0856  1283               	bcf	status, 6	;RP1=0, select bank0
 11428  0857  1303               		movf	(DisplayDay@Wednesday),w
 11429  0858  0829               	movwf	(LCD_SendString@string)
 11430  0859  00F1               	movlw	0
 11431  085A  3000               	btfss	status,2
 11432  085B  1D03               	movlw	080h
 11433  085C  3080               	movwf	(LCD_SendString@string+1)
 11434  085D  00F2               
 11435                           	fcall	_LCD_SendString
 11436  085E  160A  118A  2361  120A  158A  	line	126
 11437                           ;main.c: 126:     LCD_SendString(tempBuffer);
 11438                           	goto	l120
 11439  0863  28BB               	line	127
 11440                           ;main.c: 127: 
 11441                           	
 11442                           l116:	
 11443  0864                     	line	128
 11444                           	
 11445                           l3555:	
 11446  0864                     ;main.c: 128:     LCD_SendData(0xDF);
 11447                           	bcf	status, 5	;RP0=0, select bank0
 11448  0864  1283               	bcf	status, 6	;RP1=0, select bank0
 11449  0865  1303               		movf	(DisplayDay@Thursday),w
 11450  0866  082A               	movwf	(LCD_SendString@string)
 11451  0867  00F1               	movlw	0
 11452  0868  3000               	btfss	status,2
 11453  0869  1D03               	movlw	080h
 11454  086A  3080               	movwf	(LCD_SendString@string+1)
 11455  086B  00F2               
 11456                           	fcall	_LCD_SendString
 11457  086C  160A  118A  2361  120A  158A  	line	129
 11458                           ;main.c: 129:     LCD_Busy();
 11459                           	goto	l120
 11460  0871  28BB               	line	130
 11461                           ;main.c: 130: 
 11462                           	
 11463                           l117:	
 11464  0872                     	line	131
 11465                           	
 11466                           l3557:	
 11467  0872                     ;main.c: 131:     LCD_SendData('C');
 11468                           	bcf	status, 5	;RP0=0, select bank0
 11469  0872  1283               	bcf	status, 6	;RP1=0, select bank0
 11470  0873  1303               		movf	(DisplayDay@Friday),w
 11471  0874  082B               	movwf	(LCD_SendString@string)
 11472  0875  00F1               	movlw	0
 11473  0876  3000               	btfss	status,2
 11474  0877  1D03               	movlw	080h
 11475  0878  3080               	movwf	(LCD_SendString@string+1)
 11476  0879  00F2               
 11477                           	fcall	_LCD_SendString
 11478  087A  160A  118A  2361  120A  158A  	line	132
 11479                           ;main.c: 132: }
 11480                           	goto	l120
 11481  087F  28BB               	line	133
 11482                           ;main.c: 133: 
 11483                           	
 11484                           l118:	
 11485  0880                     	line	134
 11486                           	
 11487                           l3559:	
 11488  0880                     ;main.c: 134: 
 11489                           	bcf	status, 5	;RP0=0, select bank0
 11490  0880  1283               	bcf	status, 6	;RP1=0, select bank0
 11491  0881  1303               		movf	(DisplayDay@Saturday),w
 11492  0882  082C               	movwf	(LCD_SendString@string)
 11493  0883  00F1               	movlw	0
 11494  0884  3000               	btfss	status,2
 11495  0885  1D03               	movlw	080h
 11496  0886  3080               	movwf	(LCD_SendString@string+1)
 11497  0887  00F2               
 11498                           	fcall	_LCD_SendString
 11499  0888  160A  118A  2361  120A  158A  	line	135
 11500                           ;main.c: 135: void MainScreen(void)
 11501                           	goto	l120
 11502  088D  28BB               	line	136
 11503                           ;main.c: 136: {
 11504                           	
 11505                           l119:	
 11506  088E                     	line	137
 11507                           	
 11508                           l3561:	
 11509  088E                     ;main.c: 137: 
 11510                           	bcf	status, 5	;RP0=0, select bank0
 11511  088E  1283               	bcf	status, 6	;RP1=0, select bank0
 11512  088F  1303               		movf	(DisplayDay@Sunday),w
 11513  0890  082D               	movwf	(LCD_SendString@string)
 11514  0891  00F1               	movlw	0
 11515  0892  3000               	btfss	status,2
 11516  0893  1D03               	movlw	080h
 11517  0894  3080               	movwf	(LCD_SendString@string+1)
 11518  0895  00F2               
 11519                           	fcall	_LCD_SendString
 11520  0896  160A  118A  2361  120A  158A  	line	138
 11521                           ;main.c: 138:     char* Time = "Time:";
 11522                           	goto	l120
 11523  089B  28BB               	line	139
 11524                           	
 11525                           l3563:	
 11526  089C                     ;main.c: 139:     char* Temp = "Temp:";
 11527                           	goto	l120
 11528  089C  28BB               	
 11529                           l111:	
 11530  089D                     	
 11531                           l3565:	
 11532  089D                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11533                           ; Switch size 1, requested type "space"
 11534                           ; Number of cases is 1, Range of values is 0 to 0
 11535                           ; switch strategies available:
 11536                           ; Name         Instructions Cycles
 11537                           ; simple_byte            4     3 (average)
 11538                           ; direct_byte           11     8 (fixed)
 11539                           ; jumptable            260     6 (fixed)
 11540                           ;	Chosen strategy is simple_byte
 11541                           
 11542                           	bsf	status, 5	;RP0=1, select bank1
 11543  089D  1683               	bcf	status, 6	;RP1=0, select bank1
 11544  089E  1303               	movf (_day_of_week+1)^080h,w
 11545  089F  086D               	opt asmopt_push
 11546                           	opt asmopt_off
 11547                           	xorlw	0^0	; case 0
 11548  08A0  3A00               	skipnz
 11549  08A1  1903               	goto	l4293
 11550  08A2  28A4               	goto	l120
 11551  08A3  28BB               	opt asmopt_pop
 11552                           	
 11553                           l4293:	
 11554  08A4                     ; Switch size 1, requested type "space"
 11555                           ; Number of cases is 7, Range of values is 1 to 7
 11556                           ; switch strategies available:
 11557                           ; Name         Instructions Cycles
 11558                           ; simple_byte           22    12 (average)
 11559                           ; direct_byte           32    11 (fixed)
 11560                           ; jumptable            263     9 (fixed)
 11561                           ;	Chosen strategy is simple_byte
 11562                           
 11563                           	movf (_day_of_week)^080h,w
 11564  08A4  086C               	opt asmopt_push
 11565                           	opt asmopt_off
 11566                           	xorlw	1^0	; case 1
 11567  08A5  3A01               	skipnz
 11568  08A6  1903               	goto	l3549
 11569  08A7  283B               	xorlw	2^1	; case 2
 11570  08A8  3A03               	skipnz
 11571  08A9  1903               	goto	l3551
 11572  08AA  2848               	xorlw	3^2	; case 3
 11573  08AB  3A01               	skipnz
 11574  08AC  1903               	goto	l3553
 11575  08AD  2856               	xorlw	4^3	; case 4
 11576  08AE  3A07               	skipnz
 11577  08AF  1903               	goto	l3555
 11578  08B0  2864               	xorlw	5^4	; case 5
 11579  08B1  3A01               	skipnz
 11580  08B2  1903               	goto	l3557
 11581  08B3  2872               	xorlw	6^5	; case 6
 11582  08B4  3A03               	skipnz
 11583  08B5  1903               	goto	l3559
 11584  08B6  2880               	xorlw	7^6	; case 7
 11585  08B7  3A01               	skipnz
 11586  08B8  1903               	goto	l3561
 11587  08B9  288E               	goto	l120
 11588  08BA  28BB               	opt asmopt_pop
 11589                           
 11590                           	
 11591                           l113:	
 11592  08BB                     	line	140
 11593                           	
 11594                           l120:	
 11595  08BB                     	return
 11596  08BB  0008               	opt stack 0
 11597                           GLOBAL	__end_of_DisplayDay
 11598                           	__end_of_DisplayDay:
 11599  08BC                     	signat	_DisplayDay,89
 11600                           	global	_RealTimeClock_get_day_of_week
 11601                           
 11602 ;; *************** function _RealTimeClock_get_day_of_week *****************
 11603 ;; Defined at:
 11604 ;;		line 128 in file "realtimeclock.c"
 11605 ;; Parameters:    Size  Location     Type
 11606 ;;		None
 11607 ;; Auto vars:     Size  Location     Type
 11608 ;;  c               1   11[COMMON] unsigned char 
 11609 ;; Return value:  Size  Location     Type
 11610 ;;                  2    5[BANK0 ] int 
 11611 ;; Registers used:
 11612 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11613 ;; Tracked objects:
 11614 ;;		On entry : 0/0
 11615 ;;		On exit  : 0/0
 11616 ;;		Unchanged: 0/0
 11617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11618 ;;      Params:         0       2       0       0       0
 11619 ;;      Locals:         1       0       0       0       0
 11620 ;;      Temps:          1       0       0       0       0
 11621 ;;      Totals:         2       2       0       0       0
 11622 ;;Total ram usage:        4 bytes
 11623 ;; Hardware stack levels used:    1
 11624 ;; Hardware stack levels required when called:    2
 11625 ;; This function calls:
 11626 ;;		_RealTimeClock_read_byte
 11627 ;;		_RealTimeClock_write_byte
 11628 ;;		___hex_to_int
 11629 ;; This function is called by:
 11630 ;;		_DisplayDay
 11631 ;;		_SetDate
 11632 ;;		_main
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
 11636                           	file	"realtimeclock.c"
 11637                           	line	128
 11638                           global __ptext35
 11639                           __ptext35:	;psect for function _RealTimeClock_get_day_of_week
 11640  1F96                     psect	text35
 11641                           	file	"realtimeclock.c"
 11642                           	line	128
 11643                           	global	__size_of_RealTimeClock_get_day_of_week
 11644                           	__size_of_RealTimeClock_get_day_of_week	equ	__end_of_RealTimeClock_get_day_of_week-_Rea
                                 lTimeClock_get_day_of_week
 11645  0022                     	
 11646                           _RealTimeClock_get_day_of_week:	
 11647  1F96                     ;incstack = 0
 11648                           	opt	stack 4
 11649                           ; Regs used in _RealTimeClock_get_day_of_week: [wreg+status,2+status,0+btemp+1+pclath+cs
                                 tack]
 11650                           	line	129
 11651                           	
 11652                           l3347:	
 11653  1F96                     ;realtimeclock.c: 129:     RB5 = 1;
 11654                           	bcf	status, 5	;RP0=0, select bank0
 11655  1F96  1283               	bcf	status, 6	;RP1=0, select bank0
 11656  1F97  1303               	bsf	(53/8),(53)&7	;volatile
 11657  1F98  1686               	line	130
 11658                           	
 11659                           l3349:	
 11660  1F99                     ;realtimeclock.c: 130:     RealTimeClock_write_byte(0x8b);
 11661                           	movlw	low(08Bh)
 11662  1F99  308B               	fcall	_RealTimeClock_write_byte
 11663  1F9A  160A  118A  21AC  160A  158A  	line	131
 11664                           ;realtimeclock.c: 131:     unsigned char c = RealTimeClock_read_byte();
 11665                           	fcall	_RealTimeClock_read_byte
 11666  1F9F  160A  118A  242D  160A  158A  	movwf	(??_RealTimeClock_get_day_of_week+0)+0
 11667  1FA4  00FA               	movf	(??_RealTimeClock_get_day_of_week+0)+0,w
 11668  1FA5  087A               	movwf	(RealTimeClock_get_day_of_week@c)
 11669  1FA6  00FB               	line	132
 11670                           	
 11671                           l3351:	
 11672  1FA7                     ;realtimeclock.c: 132:     RB5 = 0;
 11673                           	bcf	status, 5	;RP0=0, select bank0
 11674  1FA7  1283               	bcf	status, 6	;RP1=0, select bank0
 11675  1FA8  1303               	bcf	(53/8),(53)&7	;volatile
 11676  1FA9  1286               	line	133
 11677                           	
 11678                           l3353:	
 11679  1FAA                     ;realtimeclock.c: 133:     return __hex_to_int(c);
 11680                           	movf	(RealTimeClock_get_day_of_week@c),w
 11681  1FAA  087B               	fcall	___hex_to_int
 11682  1FAB  160A  118A  24BF  160A  158A  	movf	(1+(?___hex_to_int)),w
 11683  1FB0  0878               	bcf	status, 5	;RP0=0, select bank0
 11684  1FB1  1283               	bcf	status, 6	;RP1=0, select bank0
 11685  1FB2  1303               	movwf	(?_RealTimeClock_get_day_of_week+1)
 11686  1FB3  00A6               	movf	(0+(?___hex_to_int)),w
 11687  1FB4  0877               	movwf	(?_RealTimeClock_get_day_of_week)
 11688  1FB5  00A5               	goto	l370
 11689  1FB6  2FB7               	
 11690                           l3355:	
 11691  1FB7                     	line	134
 11692                           	
 11693                           l370:	
 11694  1FB7                     	return
 11695  1FB7  0008               	opt stack 0
 11696                           GLOBAL	__end_of_RealTimeClock_get_day_of_week
 11697                           	__end_of_RealTimeClock_get_day_of_week:
 11698  1FB8                     	signat	_RealTimeClock_get_day_of_week,90
 11699                           	global	_DisplayDate
 11700                           
 11701 ;; *************** function _DisplayDate *****************
 11702 ;; Defined at:
 11703 ;;		line 85 in file "main.c"
 11704 ;; Parameters:    Size  Location     Type
 11705 ;;		None
 11706 ;; Auto vars:     Size  Location     Type
 11707 ;;  year            2   11[BANK0 ] int 
 11708 ;;  day             2    9[BANK0 ] int 
 11709 ;;  month           2    7[BANK0 ] int 
 11710 ;; Return value:  Size  Location     Type
 11711 ;;                  1    wreg      void 
 11712 ;; Registers used:
 11713 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11714 ;; Tracked objects:
 11715 ;;		On entry : 0/0
 11716 ;;		On exit  : 0/0
 11717 ;;		Unchanged: 0/0
 11718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11719 ;;      Params:         0       0       0       0       0
 11720 ;;      Locals:         0       6       0       0       0
 11721 ;;      Temps:          1       0       0       0       0
 11722 ;;      Totals:         1       6       0       0       0
 11723 ;;Total ram usage:        7 bytes
 11724 ;; Hardware stack levels used:    1
 11725 ;; Hardware stack levels required when called:    3
 11726 ;; This function calls:
 11727 ;;		_RealTimeClock_get_day_of_month
 11728 ;;		_RealTimeClock_get_month
 11729 ;;		_RealTimeClock_get_year
 11730 ;;		___awdiv
 11731 ;;		___awmod
 11732 ;; This function is called by:
 11733 ;;		_DateDayScreen
 11734 ;; This function uses a non-reentrant model
 11735 ;;
 11736                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 11737                           	file	"main.c"
 11738                           	line	85
 11739                           global __ptext36
 11740                           __ptext36:	;psect for function _DisplayDate
 11741  1723                     psect	text36
 11742                           	file	"main.c"
 11743                           	line	85
 11744                           	global	__size_of_DisplayDate
 11745                           	__size_of_DisplayDate	equ	__end_of_DisplayDate-_DisplayDate
 11746  00DD                     	
 11747                           _DisplayDate:	
 11748  1723                     ;incstack = 0
 11749                           	opt	stack 3
 11750                           ; Regs used in _DisplayDate: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 11751                           	line	88
 11752                           	
 11753                           l3513:	
 11754  1723                     ;main.c: 88:     char* Wednesday = ("Wednesday");
 11755                           	fcall	_RealTimeClock_get_month
 11756  1723  160A  158A  2752  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 11757  1728  1283               	bcf	status, 6	;RP1=0, select bank0
 11758  1729  1303               	movf	(1+(?_RealTimeClock_get_month)),w
 11759  172A  0826               	movwf	(DisplayDate@month+1)
 11760  172B  00A8               	movf	(0+(?_RealTimeClock_get_month)),w
 11761  172C  0825               	movwf	(DisplayDate@month)
 11762  172D  00A7               	line	89
 11763                           ;main.c: 89:     char* Thursday = ("Thursday");
 11764                           	fcall	_RealTimeClock_get_day_of_month
 11765  172E  160A  158A  2730  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 11766  1733  1283               	bcf	status, 6	;RP1=0, select bank0
 11767  1734  1303               	movf	(1+(?_RealTimeClock_get_day_of_month)),w
 11768  1735  0826               	movwf	(DisplayDate@day+1)
 11769  1736  00AA               	movf	(0+(?_RealTimeClock_get_day_of_month)),w
 11770  1737  0825               	movwf	(DisplayDate@day)
 11771  1738  00A9               	line	90
 11772                           ;main.c: 90:     char* Friday = ("Friday");
 11773                           	fcall	_RealTimeClock_get_year
 11774  1739  160A  158A  2774  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 11775  173E  1283               	bcf	status, 6	;RP1=0, select bank0
 11776  173F  1303               	movf	(1+(?_RealTimeClock_get_year)),w
 11777  1740  0826               	movwf	(DisplayDate@year+1)
 11778  1741  00AC               	movf	(0+(?_RealTimeClock_get_year)),w
 11779  1742  0825               	movwf	(DisplayDate@year)
 11780  1743  00AB               	line	92
 11781                           	
 11782                           l3515:	
 11783  1744                     ;main.c: 92:     char* Sunday = ("Sunday");
 11784                           	movlw	0Ah
 11785  1744  300A               	movwf	(___awmod@divisor)
 11786  1745  00F0               	movlw	0
 11787  1746  3000               	movwf	((___awmod@divisor))+1
 11788  1747  00F1               	movf	(DisplayDate@month+1),w
 11789  1748  0828               	movwf	(___awmod@dividend+1)
 11790  1749  00F3               	movf	(DisplayDate@month),w
 11791  174A  0827               	movwf	(___awmod@dividend)
 11792  174B  00F2               	fcall	___awmod
 11793  174C  160A  118A  255D  160A  118A  	movf	(0+(?___awmod)),w
 11794  1751  0870               	addlw	030h
 11795  1752  3E30               	movwf	(??_DisplayDate+0)+0
 11796  1753  00FC               	movf	(??_DisplayDate+0)+0,w
 11797  1754  087C               	bsf	status, 5	;RP0=1, select bank1
 11798  1755  1683               	bcf	status, 6	;RP1=0, select bank1
 11799  1756  1303               	movwf	0+(_dateDisplayer)^080h+01h
 11800  1757  00B4               	line	93
 11801                           	
 11802                           l3517:	
 11803  1758                     ;main.c: 93: 
 11804                           	movlw	0Ah
 11805  1758  300A               	movwf	(___awdiv@divisor)
 11806  1759  00F0               	movlw	0
 11807  175A  3000               	movwf	((___awdiv@divisor))+1
 11808  175B  00F1               	bcf	status, 5	;RP0=0, select bank0
 11809  175C  1283               	bcf	status, 6	;RP1=0, select bank0
 11810  175D  1303               	movf	(DisplayDate@month+1),w
 11811  175E  0828               	movwf	(___awdiv@dividend+1)
 11812  175F  00F3               	movf	(DisplayDate@month),w
 11813  1760  0827               	movwf	(___awdiv@dividend)
 11814  1761  00F2               	fcall	___awdiv
 11815  1762  160A  118A  25C0  160A  118A  	movf	(1+(?___awdiv)),w
 11816  1767  0871               	bcf	status, 5	;RP0=0, select bank0
 11817  1768  1283               	bcf	status, 6	;RP1=0, select bank0
 11818  1769  1303               	movwf	(DisplayDate@month+1)
 11819  176A  00A8               	movf	(0+(?___awdiv)),w
 11820  176B  0870               	movwf	(DisplayDate@month)
 11821  176C  00A7               	line	94
 11822                           	
 11823                           l3519:	
 11824  176D                     ;main.c: 94:     switch(day_of_week)
 11825                           	movlw	0Ah
 11826  176D  300A               	movwf	(___awmod@divisor)
 11827  176E  00F0               	movlw	0
 11828  176F  3000               	movwf	((___awmod@divisor))+1
 11829  1770  00F1               	movf	(DisplayDate@month+1),w
 11830  1771  0828               	movwf	(___awmod@dividend+1)
 11831  1772  00F3               	movf	(DisplayDate@month),w
 11832  1773  0827               	movwf	(___awmod@dividend)
 11833  1774  00F2               	fcall	___awmod
 11834  1775  160A  118A  255D  160A  118A  	movf	(0+(?___awmod)),w
 11835  177A  0870               	addlw	030h
 11836  177B  3E30               	movwf	(??_DisplayDate+0)+0
 11837  177C  00FC               	movf	(??_DisplayDate+0)+0,w
 11838  177D  087C               	bsf	status, 5	;RP0=1, select bank1
 11839  177E  1683               	bcf	status, 6	;RP1=0, select bank1
 11840  177F  1303               	movwf	(_dateDisplayer)^080h
 11841  1780  00B3               	line	95
 11842                           	
 11843                           l3521:	
 11844  1781                     ;main.c: 95:     {
 11845                           	movlw	0Ah
 11846  1781  300A               	movwf	(___awmod@divisor)
 11847  1782  00F0               	movlw	0
 11848  1783  3000               	movwf	((___awmod@divisor))+1
 11849  1784  00F1               	bcf	status, 5	;RP0=0, select bank0
 11850  1785  1283               	bcf	status, 6	;RP1=0, select bank0
 11851  1786  1303               	movf	(DisplayDate@day+1),w
 11852  1787  082A               	movwf	(___awmod@dividend+1)
 11853  1788  00F3               	movf	(DisplayDate@day),w
 11854  1789  0829               	movwf	(___awmod@dividend)
 11855  178A  00F2               	fcall	___awmod
 11856  178B  160A  118A  255D  160A  118A  	movf	(0+(?___awmod)),w
 11857  1790  0870               	addlw	030h
 11858  1791  3E30               	movwf	(??_DisplayDate+0)+0
 11859  1792  00FC               	movf	(??_DisplayDate+0)+0,w
 11860  1793  087C               	bsf	status, 5	;RP0=1, select bank1
 11861  1794  1683               	bcf	status, 6	;RP1=0, select bank1
 11862  1795  1303               	movwf	0+(_dateDisplayer)^080h+03h
 11863  1796  00B6               	line	96
 11864                           	
 11865                           l3523:	
 11866  1797                     ;main.c: 96:         case 1:
 11867                           	movlw	0Ah
 11868  1797  300A               	movwf	(___awdiv@divisor)
 11869  1798  00F0               	movlw	0
 11870  1799  3000               	movwf	((___awdiv@divisor))+1
 11871  179A  00F1               	bcf	status, 5	;RP0=0, select bank0
 11872  179B  1283               	bcf	status, 6	;RP1=0, select bank0
 11873  179C  1303               	movf	(DisplayDate@day+1),w
 11874  179D  082A               	movwf	(___awdiv@dividend+1)
 11875  179E  00F3               	movf	(DisplayDate@day),w
 11876  179F  0829               	movwf	(___awdiv@dividend)
 11877  17A0  00F2               	fcall	___awdiv
 11878  17A1  160A  118A  25C0  160A  118A  	movf	(1+(?___awdiv)),w
 11879  17A6  0871               	bcf	status, 5	;RP0=0, select bank0
 11880  17A7  1283               	bcf	status, 6	;RP1=0, select bank0
 11881  17A8  1303               	movwf	(DisplayDate@day+1)
 11882  17A9  00AA               	movf	(0+(?___awdiv)),w
 11883  17AA  0870               	movwf	(DisplayDate@day)
 11884  17AB  00A9               	line	97
 11885                           	
 11886                           l3525:	
 11887  17AC                     ;main.c: 97:             LCD_SendString(Monday);
 11888                           	movlw	0Ah
 11889  17AC  300A               	movwf	(___awmod@divisor)
 11890  17AD  00F0               	movlw	0
 11891  17AE  3000               	movwf	((___awmod@divisor))+1
 11892  17AF  00F1               	movf	(DisplayDate@day+1),w
 11893  17B0  082A               	movwf	(___awmod@dividend+1)
 11894  17B1  00F3               	movf	(DisplayDate@day),w
 11895  17B2  0829               	movwf	(___awmod@dividend)
 11896  17B3  00F2               	fcall	___awmod
 11897  17B4  160A  118A  255D  160A  118A  	movf	(0+(?___awmod)),w
 11898  17B9  0870               	addlw	030h
 11899  17BA  3E30               	movwf	(??_DisplayDate+0)+0
 11900  17BB  00FC               	movf	(??_DisplayDate+0)+0,w
 11901  17BC  087C               	bsf	status, 5	;RP0=1, select bank1
 11902  17BD  1683               	bcf	status, 6	;RP1=0, select bank1
 11903  17BE  1303               	movwf	0+(_dateDisplayer)^080h+04h
 11904  17BF  00B7               	line	98
 11905                           	
 11906                           l3527:	
 11907  17C0                     ;main.c: 98:             break;
 11908                           	movlw	0Ah
 11909  17C0  300A               	movwf	(___awmod@divisor)
 11910  17C1  00F0               	movlw	0
 11911  17C2  3000               	movwf	((___awmod@divisor))+1
 11912  17C3  00F1               	bcf	status, 5	;RP0=0, select bank0
 11913  17C4  1283               	bcf	status, 6	;RP1=0, select bank0
 11914  17C5  1303               	movf	(DisplayDate@year+1),w
 11915  17C6  082C               	movwf	(___awmod@dividend+1)
 11916  17C7  00F3               	movf	(DisplayDate@year),w
 11917  17C8  082B               	movwf	(___awmod@dividend)
 11918  17C9  00F2               	fcall	___awmod
 11919  17CA  160A  118A  255D  160A  118A  	movf	(0+(?___awmod)),w
 11920  17CF  0870               	addlw	030h
 11921  17D0  3E30               	movwf	(??_DisplayDate+0)+0
 11922  17D1  00FC               	movf	(??_DisplayDate+0)+0,w
 11923  17D2  087C               	bsf	status, 5	;RP0=1, select bank1
 11924  17D3  1683               	bcf	status, 6	;RP1=0, select bank1
 11925  17D4  1303               	movwf	0+(_dateDisplayer)^080h+07h
 11926  17D5  00BA               	line	99
 11927                           	
 11928                           l3529:	
 11929  17D6                     ;main.c: 99:         case 2:
 11930                           	movlw	0Ah
 11931  17D6  300A               	movwf	(___awdiv@divisor)
 11932  17D7  00F0               	movlw	0
 11933  17D8  3000               	movwf	((___awdiv@divisor))+1
 11934  17D9  00F1               	bcf	status, 5	;RP0=0, select bank0
 11935  17DA  1283               	bcf	status, 6	;RP1=0, select bank0
 11936  17DB  1303               	movf	(DisplayDate@year+1),w
 11937  17DC  082C               	movwf	(___awdiv@dividend+1)
 11938  17DD  00F3               	movf	(DisplayDate@year),w
 11939  17DE  082B               	movwf	(___awdiv@dividend)
 11940  17DF  00F2               	fcall	___awdiv
 11941  17E0  160A  118A  25C0  160A  118A  	movf	(1+(?___awdiv)),w
 11942  17E5  0871               	bcf	status, 5	;RP0=0, select bank0
 11943  17E6  1283               	bcf	status, 6	;RP1=0, select bank0
 11944  17E7  1303               	movwf	(DisplayDate@year+1)
 11945  17E8  00AC               	movf	(0+(?___awdiv)),w
 11946  17E9  0870               	movwf	(DisplayDate@year)
 11947  17EA  00AB               	line	100
 11948                           	
 11949                           l3531:	
 11950  17EB                     ;main.c: 100:             LCD_SendString(Tuesday);
 11951                           	movlw	0Ah
 11952  17EB  300A               	movwf	(___awmod@divisor)
 11953  17EC  00F0               	movlw	0
 11954  17ED  3000               	movwf	((___awmod@divisor))+1
 11955  17EE  00F1               	movf	(DisplayDate@year+1),w
 11956  17EF  082C               	movwf	(___awmod@dividend+1)
 11957  17F0  00F3               	movf	(DisplayDate@year),w
 11958  17F1  082B               	movwf	(___awmod@dividend)
 11959  17F2  00F2               	fcall	___awmod
 11960  17F3  160A  118A  255D  160A  118A  	movf	(0+(?___awmod)),w
 11961  17F8  0870               	addlw	030h
 11962  17F9  3E30               	movwf	(??_DisplayDate+0)+0
 11963  17FA  00FC               	movf	(??_DisplayDate+0)+0,w
 11964  17FB  087C               	bsf	status, 5	;RP0=1, select bank1
 11965  17FC  1683               	bcf	status, 6	;RP1=0, select bank1
 11966  17FD  1303               	movwf	0+(_dateDisplayer)^080h+06h
 11967  17FE  00B9               	line	101
 11968                           	
 11969                           l108:	
 11970  17FF                     	return
 11971  17FF  0008               	opt stack 0
 11972                           GLOBAL	__end_of_DisplayDate
 11973                           	__end_of_DisplayDate:
 11974  1800                     	signat	_DisplayDate,89
 11975                           	global	_RealTimeClock_get_year
 11976                           
 11977 ;; *************** function _RealTimeClock_get_year *****************
 11978 ;; Defined at:
 11979 ;;		line 136 in file "realtimeclock.c"
 11980 ;; Parameters:    Size  Location     Type
 11981 ;;		None
 11982 ;; Auto vars:     Size  Location     Type
 11983 ;;  c               1   11[COMMON] unsigned char 
 11984 ;; Return value:  Size  Location     Type
 11985 ;;                  2    5[BANK0 ] int 
 11986 ;; Registers used:
 11987 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11988 ;; Tracked objects:
 11989 ;;		On entry : 0/0
 11990 ;;		On exit  : 0/0
 11991 ;;		Unchanged: 0/0
 11992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11993 ;;      Params:         0       2       0       0       0
 11994 ;;      Locals:         1       0       0       0       0
 11995 ;;      Temps:          1       0       0       0       0
 11996 ;;      Totals:         2       2       0       0       0
 11997 ;;Total ram usage:        4 bytes
 11998 ;; Hardware stack levels used:    1
 11999 ;; Hardware stack levels required when called:    2
 12000 ;; This function calls:
 12001 ;;		_RealTimeClock_read_byte
 12002 ;;		_RealTimeClock_write_byte
 12003 ;;		___hex_to_int
 12004 ;; This function is called by:
 12005 ;;		_DisplayDate
 12006 ;; This function uses a non-reentrant model
 12007 ;;
 12008                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
 12009                           	file	"realtimeclock.c"
 12010                           	line	136
 12011                           global __ptext37
 12012                           __ptext37:	;psect for function _RealTimeClock_get_year
 12013  1F74                     psect	text37
 12014                           	file	"realtimeclock.c"
 12015                           	line	136
 12016                           	global	__size_of_RealTimeClock_get_year
 12017                           	__size_of_RealTimeClock_get_year	equ	__end_of_RealTimeClock_get_year-_RealTimeClock_get
                                 _year
 12018  0022                     	
 12019                           _RealTimeClock_get_year:	
 12020  1F74                     ;incstack = 0
 12021                           	opt	stack 3
 12022                           ; Regs used in _RealTimeClock_get_year: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12023                           	line	137
 12024                           	
 12025                           l3337:	
 12026  1F74                     ;realtimeclock.c: 137:     RB5 = 1;
 12027                           	bcf	status, 5	;RP0=0, select bank0
 12028  1F74  1283               	bcf	status, 6	;RP1=0, select bank0
 12029  1F75  1303               	bsf	(53/8),(53)&7	;volatile
 12030  1F76  1686               	line	138
 12031                           	
 12032                           l3339:	
 12033  1F77                     ;realtimeclock.c: 138:     RealTimeClock_write_byte(0x8d);
 12034                           	movlw	low(08Dh)
 12035  1F77  308D               	fcall	_RealTimeClock_write_byte
 12036  1F78  160A  118A  21AC  160A  158A  	line	139
 12037                           ;realtimeclock.c: 139:     unsigned char c = RealTimeClock_read_byte();
 12038                           	fcall	_RealTimeClock_read_byte
 12039  1F7D  160A  118A  242D  160A  158A  	movwf	(??_RealTimeClock_get_year+0)+0
 12040  1F82  00FA               	movf	(??_RealTimeClock_get_year+0)+0,w
 12041  1F83  087A               	movwf	(RealTimeClock_get_year@c)
 12042  1F84  00FB               	line	140
 12043                           	
 12044                           l3341:	
 12045  1F85                     ;realtimeclock.c: 140:     RB5 = 0;
 12046                           	bcf	status, 5	;RP0=0, select bank0
 12047  1F85  1283               	bcf	status, 6	;RP1=0, select bank0
 12048  1F86  1303               	bcf	(53/8),(53)&7	;volatile
 12049  1F87  1286               	line	141
 12050                           	
 12051                           l3343:	
 12052  1F88                     ;realtimeclock.c: 141:     return __hex_to_int(c);
 12053                           	movf	(RealTimeClock_get_year@c),w
 12054  1F88  087B               	fcall	___hex_to_int
 12055  1F89  160A  118A  24BF  160A  158A  	movf	(1+(?___hex_to_int)),w
 12056  1F8E  0878               	bcf	status, 5	;RP0=0, select bank0
 12057  1F8F  1283               	bcf	status, 6	;RP1=0, select bank0
 12058  1F90  1303               	movwf	(?_RealTimeClock_get_year+1)
 12059  1F91  00A6               	movf	(0+(?___hex_to_int)),w
 12060  1F92  0877               	movwf	(?_RealTimeClock_get_year)
 12061  1F93  00A5               	goto	l373
 12062  1F94  2F95               	
 12063                           l3345:	
 12064  1F95                     	line	142
 12065                           	
 12066                           l373:	
 12067  1F95                     	return
 12068  1F95  0008               	opt stack 0
 12069                           GLOBAL	__end_of_RealTimeClock_get_year
 12070                           	__end_of_RealTimeClock_get_year:
 12071  1F96                     	signat	_RealTimeClock_get_year,90
 12072                           	global	_RealTimeClock_get_month
 12073                           
 12074 ;; *************** function _RealTimeClock_get_month *****************
 12075 ;; Defined at:
 12076 ;;		line 120 in file "realtimeclock.c"
 12077 ;; Parameters:    Size  Location     Type
 12078 ;;		None
 12079 ;; Auto vars:     Size  Location     Type
 12080 ;;  c               1   11[COMMON] unsigned char 
 12081 ;; Return value:  Size  Location     Type
 12082 ;;                  2    5[BANK0 ] int 
 12083 ;; Registers used:
 12084 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/0
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12090 ;;      Params:         0       2       0       0       0
 12091 ;;      Locals:         1       0       0       0       0
 12092 ;;      Temps:          1       0       0       0       0
 12093 ;;      Totals:         2       2       0       0       0
 12094 ;;Total ram usage:        4 bytes
 12095 ;; Hardware stack levels used:    1
 12096 ;; Hardware stack levels required when called:    2
 12097 ;; This function calls:
 12098 ;;		_RealTimeClock_read_byte
 12099 ;;		_RealTimeClock_write_byte
 12100 ;;		___hex_to_int
 12101 ;; This function is called by:
 12102 ;;		_DisplayDate
 12103 ;; This function uses a non-reentrant model
 12104 ;;
 12105                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
 12106                           	line	120
 12107                           global __ptext38
 12108                           __ptext38:	;psect for function _RealTimeClock_get_month
 12109  1F52                     psect	text38
 12110                           	file	"realtimeclock.c"
 12111                           	line	120
 12112                           	global	__size_of_RealTimeClock_get_month
 12113                           	__size_of_RealTimeClock_get_month	equ	__end_of_RealTimeClock_get_month-_RealTimeClock_g
                                 et_month
 12114  0022                     	
 12115                           _RealTimeClock_get_month:	
 12116  1F52                     ;incstack = 0
 12117                           	opt	stack 3
 12118                           ; Regs used in _RealTimeClock_get_month: [wreg+status,2+status,0+btemp+1+pclath+cstack]

 12119                           	line	121
 12120                           	
 12121                           l3317:	
 12122  1F52                     ;realtimeclock.c: 121:     RB5 = 1;
 12123                           	bcf	status, 5	;RP0=0, select bank0
 12124  1F52  1283               	bcf	status, 6	;RP1=0, select bank0
 12125  1F53  1303               	bsf	(53/8),(53)&7	;volatile
 12126  1F54  1686               	line	122
 12127                           	
 12128                           l3319:	
 12129  1F55                     ;realtimeclock.c: 122:     RealTimeClock_write_byte(0x89);
 12130                           	movlw	low(089h)
 12131  1F55  3089               	fcall	_RealTimeClock_write_byte
 12132  1F56  160A  118A  21AC  160A  158A  	line	123
 12133                           ;realtimeclock.c: 123:     unsigned char c = RealTimeClock_read_byte();
 12134                           	fcall	_RealTimeClock_read_byte
 12135  1F5B  160A  118A  242D  160A  158A  	movwf	(??_RealTimeClock_get_month+0)+0
 12136  1F60  00FA               	movf	(??_RealTimeClock_get_month+0)+0,w
 12137  1F61  087A               	movwf	(RealTimeClock_get_month@c)
 12138  1F62  00FB               	line	124
 12139                           	
 12140                           l3321:	
 12141  1F63                     ;realtimeclock.c: 124:     RB5 = 0;
 12142                           	bcf	status, 5	;RP0=0, select bank0
 12143  1F63  1283               	bcf	status, 6	;RP1=0, select bank0
 12144  1F64  1303               	bcf	(53/8),(53)&7	;volatile
 12145  1F65  1286               	line	125
 12146                           	
 12147                           l3323:	
 12148  1F66                     ;realtimeclock.c: 125:     return __hex_to_int(c);
 12149                           	movf	(RealTimeClock_get_month@c),w
 12150  1F66  087B               	fcall	___hex_to_int
 12151  1F67  160A  118A  24BF  160A  158A  	movf	(1+(?___hex_to_int)),w
 12152  1F6C  0878               	bcf	status, 5	;RP0=0, select bank0
 12153  1F6D  1283               	bcf	status, 6	;RP1=0, select bank0
 12154  1F6E  1303               	movwf	(?_RealTimeClock_get_month+1)
 12155  1F6F  00A6               	movf	(0+(?___hex_to_int)),w
 12156  1F70  0877               	movwf	(?_RealTimeClock_get_month)
 12157  1F71  00A5               	goto	l367
 12158  1F72  2F73               	
 12159                           l3325:	
 12160  1F73                     	line	126
 12161                           	
 12162                           l367:	
 12163  1F73                     	return
 12164  1F73  0008               	opt stack 0
 12165                           GLOBAL	__end_of_RealTimeClock_get_month
 12166                           	__end_of_RealTimeClock_get_month:
 12167  1F74                     	signat	_RealTimeClock_get_month,90
 12168                           	global	_RealTimeClock_get_day_of_month
 12169                           
 12170 ;; *************** function _RealTimeClock_get_day_of_month *****************
 12171 ;; Defined at:
 12172 ;;		line 112 in file "realtimeclock.c"
 12173 ;; Parameters:    Size  Location     Type
 12174 ;;		None
 12175 ;; Auto vars:     Size  Location     Type
 12176 ;;  c               1   11[COMMON] unsigned char 
 12177 ;; Return value:  Size  Location     Type
 12178 ;;                  2    5[BANK0 ] int 
 12179 ;; Registers used:
 12180 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12181 ;; Tracked objects:
 12182 ;;		On entry : 0/0
 12183 ;;		On exit  : 0/0
 12184 ;;		Unchanged: 0/0
 12185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12186 ;;      Params:         0       2       0       0       0
 12187 ;;      Locals:         1       0       0       0       0
 12188 ;;      Temps:          1       0       0       0       0
 12189 ;;      Totals:         2       2       0       0       0
 12190 ;;Total ram usage:        4 bytes
 12191 ;; Hardware stack levels used:    1
 12192 ;; Hardware stack levels required when called:    2
 12193 ;; This function calls:
 12194 ;;		_RealTimeClock_read_byte
 12195 ;;		_RealTimeClock_write_byte
 12196 ;;		___hex_to_int
 12197 ;; This function is called by:
 12198 ;;		_DisplayDate
 12199 ;; This function uses a non-reentrant model
 12200 ;;
 12201                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
 12202                           	line	112
 12203                           global __ptext39
 12204                           __ptext39:	;psect for function _RealTimeClock_get_day_of_month
 12205  1F30                     psect	text39
 12206                           	file	"realtimeclock.c"
 12207                           	line	112
 12208                           	global	__size_of_RealTimeClock_get_day_of_month
 12209                           	__size_of_RealTimeClock_get_day_of_month	equ	__end_of_RealTimeClock_get_day_of_month-_R
                                 ealTimeClock_get_day_of_month
 12210  0022                     	
 12211                           _RealTimeClock_get_day_of_month:	
 12212  1F30                     ;incstack = 0
 12213                           	opt	stack 3
 12214                           ; Regs used in _RealTimeClock_get_day_of_month: [wreg+status,2+status,0+btemp+1+pclath+c
                                 stack]
 12215                           	line	113
 12216                           	
 12217                           l3327:	
 12218  1F30                     ;realtimeclock.c: 113:     RB5 = 1;
 12219                           	bcf	status, 5	;RP0=0, select bank0
 12220  1F30  1283               	bcf	status, 6	;RP1=0, select bank0
 12221  1F31  1303               	bsf	(53/8),(53)&7	;volatile
 12222  1F32  1686               	line	114
 12223                           	
 12224                           l3329:	
 12225  1F33                     ;realtimeclock.c: 114:     RealTimeClock_write_byte(0x87);
 12226                           	movlw	low(087h)
 12227  1F33  3087               	fcall	_RealTimeClock_write_byte
 12228  1F34  160A  118A  21AC  160A  158A  	line	115
 12229                           ;realtimeclock.c: 115:     unsigned char c = RealTimeClock_read_byte();
 12230                           	fcall	_RealTimeClock_read_byte
 12231  1F39  160A  118A  242D  160A  158A  	movwf	(??_RealTimeClock_get_day_of_month+0)+0
 12232  1F3E  00FA               	movf	(??_RealTimeClock_get_day_of_month+0)+0,w
 12233  1F3F  087A               	movwf	(RealTimeClock_get_day_of_month@c)
 12234  1F40  00FB               	line	116
 12235                           	
 12236                           l3331:	
 12237  1F41                     ;realtimeclock.c: 116:     RB5 = 0;
 12238                           	bcf	status, 5	;RP0=0, select bank0
 12239  1F41  1283               	bcf	status, 6	;RP1=0, select bank0
 12240  1F42  1303               	bcf	(53/8),(53)&7	;volatile
 12241  1F43  1286               	line	117
 12242                           	
 12243                           l3333:	
 12244  1F44                     ;realtimeclock.c: 117:     return __hex_to_int(c);
 12245                           	movf	(RealTimeClock_get_day_of_month@c),w
 12246  1F44  087B               	fcall	___hex_to_int
 12247  1F45  160A  118A  24BF  160A  158A  	movf	(1+(?___hex_to_int)),w
 12248  1F4A  0878               	bcf	status, 5	;RP0=0, select bank0
 12249  1F4B  1283               	bcf	status, 6	;RP1=0, select bank0
 12250  1F4C  1303               	movwf	(?_RealTimeClock_get_day_of_month+1)
 12251  1F4D  00A6               	movf	(0+(?___hex_to_int)),w
 12252  1F4E  0877               	movwf	(?_RealTimeClock_get_day_of_month)
 12253  1F4F  00A5               	goto	l364
 12254  1F50  2F51               	
 12255                           l3335:	
 12256  1F51                     	line	118
 12257                           	
 12258                           l364:	
 12259  1F51                     	return
 12260  1F51  0008               	opt stack 0
 12261                           GLOBAL	__end_of_RealTimeClock_get_day_of_month
 12262                           	__end_of_RealTimeClock_get_day_of_month:
 12263  1F52                     	signat	_RealTimeClock_get_day_of_month,90
 12264                           	global	_ChangeTrigger
 12265                           
 12266 ;; *************** function _ChangeTrigger *****************
 12267 ;; Defined at:
 12268 ;;		line 177 in file "main.c"
 12269 ;; Parameters:    Size  Location     Type
 12270 ;;  Key             1    wreg     unsigned char 
 12271 ;; Auto vars:     Size  Location     Type
 12272 ;;  Key             1   12[BANK0 ] unsigned char 
 12273 ;;  digits          3    6[BANK0 ] unsigned char [3]
 12274 ;;  i               2   13[BANK0 ] int 
 12275 ;;  decimal         1   11[BANK0 ] unsigned char 
 12276 ;;  i               2   15[BANK0 ] int 
 12277 ;;  TriggerSet      1   10[BANK0 ] PTR unsigned char 
 12278 ;;		 -> STR_11(12), 
 12279 ;;  Trigger         1    9[BANK0 ] PTR unsigned char 
 12280 ;;		 -> STR_10(9), 
 12281 ;; Return value:  Size  Location     Type
 12282 ;;                  1    wreg      void 
 12283 ;; Registers used:
 12284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12285 ;; Tracked objects:
 12286 ;;		On entry : 0/0
 12287 ;;		On exit  : 0/0
 12288 ;;		Unchanged: 0/0
 12289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12290 ;;      Params:         0       0       0       0       0
 12291 ;;      Locals:         0      11       0       0       0
 12292 ;;      Temps:          0       6       0       0       0
 12293 ;;      Totals:         0      17       0       0       0
 12294 ;;Total ram usage:       17 bytes
 12295 ;; Hardware stack levels used:    1
 12296 ;; Hardware stack levels required when called:    3
 12297 ;; This function calls:
 12298 ;;		_Keypad_Scan
 12299 ;;		_LCD_Busy
 12300 ;;		_LCD_Command
 12301 ;;		_LCD_SendData
 12302 ;;		_LCD_SendString
 12303 ;;		_Main_Delay
 12304 ;;		___awdiv
 12305 ;;		___awmod
 12306 ;; This function is called by:
 12307 ;;		_HeatingControlOff
 12308 ;;		_SoundAlarm
 12309 ;;		_DateDayScreen
 12310 ;;		_main
 12311 ;; This function uses a non-reentrant model
 12312 ;;
 12313                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
 12314                           	file	"main.c"
 12315                           	line	177
 12316                           global __ptext40
 12317                           __ptext40:	;psect for function _ChangeTrigger
 12318  0B74                     psect	text40
 12319                           	file	"main.c"
 12320                           	line	177
 12321                           	global	__size_of_ChangeTrigger
 12322                           	__size_of_ChangeTrigger	equ	__end_of_ChangeTrigger-_ChangeTrigger
 12323  016D                     	
 12324                           _ChangeTrigger:	
 12325  0B74                     ;incstack = 0
 12326                           	opt	stack 2
 12327                           ; Regs used in _ChangeTrigger: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12328                           ;ChangeTrigger@Key stored from wreg
 12329                           	bcf	status, 5	;RP0=0, select bank0
 12330  0B74  1283               	bcf	status, 6	;RP1=0, select bank0
 12331  0B75  1303               	movwf	(ChangeTrigger@Key)
 12332  0B76  00AC               	line	180
 12333                           	
 12334                           l3369:	
 12335  0B77                     ;main.c: 177:             {;main.c: 178:                 LCD_Command(0x01);;main.c: 180:
                                                  LCD_SendString(TriggerSet);
 12336                           	movlw	low(01h)
 12337  0B77  3001               	fcall	_LCD_Command
 12338  0B78  160A  158A  25EF  120A  158A  	line	182
 12339                           	
 12340                           l3371:	
 12341  0B7D                     ;main.c: 182:                 LCD_Command(0x01);
 12342                           	bcf	status, 5	;RP0=0, select bank0
 12343  0B7D  1283               	bcf	status, 6	;RP1=0, select bank0
 12344  0B7E  1303               	clrf	(ChangeTrigger@i)
 12345  0B7F  01AF               	clrf	(ChangeTrigger@i+1)
 12346  0B80  01B0               	line	183
 12347                           	
 12348                           l3373:	
 12349  0B81                     ;main.c: 183:                 break;
 12350                           	movlw	(low((((STR_10)-__stringbase)|8000h)))&0ffh
 12351  0B81  3054               	movwf	(??_ChangeTrigger+0)+0
 12352  0B82  00A0               	movf	(??_ChangeTrigger+0)+0,w
 12353  0B83  0820               	movwf	(ChangeTrigger@Trigger)
 12354  0B84  00A9               	line	184
 12355                           	
 12356                           l3375:	
 12357  0B85                     ;main.c: 184:             }
 12358                           	movlw	(low((((STR_11)-__stringbase)|8000h)))&0ffh
 12359  0B85  302A               	movwf	(??_ChangeTrigger+0)+0
 12360  0B86  00A0               	movf	(??_ChangeTrigger+0)+0,w
 12361  0B87  0820               	movwf	(ChangeTrigger@TriggerSet)
 12362  0B88  00AA               	goto	l3377
 12363  0B89  2B8A               	line	185
 12364                           ;main.c: 185: 
 12365                           	
 12366                           l129:	
 12367  0B8A                     	line	192
 12368                           	
 12369                           l3377:	
 12370  0B8A                     ;main.c: 186:             switch(Key);main.c: 188: ;main.c: 190:                     if(
                                 i == 0);main.c: 192:                     else
 12371                           	movlw	low(03h)
 12372  0B8A  3003               	fcall	_LCD_Command
 12373  0B8B  160A  158A  25EF  120A  158A  	line	194
 12374                           	
 12375                           l3379:	
 12376  0B90                     ;main.c: 194:                     break;
 12377                           	bcf	status, 5	;RP0=0, select bank0
 12378  0B90  1283               	bcf	status, 6	;RP1=0, select bank0
 12379  0B91  1303               		movf	(ChangeTrigger@Trigger),w
 12380  0B92  0829               	movwf	(LCD_SendString@string)
 12381  0B93  00F1               	movlw	0
 12382  0B94  3000               	btfss	status,2
 12383  0B95  1D03               	movlw	080h
 12384  0B96  3080               	movwf	(LCD_SendString@string+1)
 12385  0B97  00F2               
 12386                           	fcall	_LCD_SendString
 12387  0B98  160A  118A  2361  120A  158A  	line	196
 12388                           	
 12389                           l3381:	
 12390  0B9D                     ;main.c: 196: 
 12391                           	fcall	_Keypad_Scan
 12392  0B9D  120A  118A  20DF  120A  158A  	movf	(0+(?_Keypad_Scan)),w
 12393  0BA2  0876               	bcf	status, 5	;RP0=0, select bank0
 12394  0BA3  1283               	bcf	status, 6	;RP1=0, select bank0
 12395  0BA4  1303               	movwf	(??_ChangeTrigger+0)+0
 12396  0BA5  00A0               	movf	(??_ChangeTrigger+0)+0,w
 12397  0BA6  0820               	movwf	(ChangeTrigger@Key)
 12398  0BA7  00AC               	line	198
 12399                           	
 12400                           l3383:	
 12401  0BA8                     ;main.c: 198:                     {
 12402                           		decf	((ChangeTrigger@Key)),w
 12403  0BA8  032C               	btfss	status,2
 12404  0BA9  1D03               	goto	u2761
 12405  0BAA  2BAC               	goto	u2760
 12406  0BAB  2BAD               u2761:
 12407  0BAC                     	goto	l3421
 12408  0BAC  2C58               u2760:
 12409  0BAD                     	line	200
 12410                           	
 12411                           l3385:	
 12412  0BAD                     ;main.c: 199:                         triggerTemp[1] = 9;;main.c: 200:                  
                                        triggerTemp[0] = triggerTemp[0] - 1;
 12413                           	movlw	low(01h)
 12414  0BAD  3001               	fcall	_LCD_Command
 12415  0BAE  160A  158A  25EF  120A  158A  	line	201
 12416                           ;main.c: 201:                     }
 12417                           	movlw	low(03h)
 12418  0BB3  3003               	fcall	_LCD_Command
 12419  0BB4  160A  158A  25EF  120A  158A  	line	202
 12420                           	
 12421                           l3387:	
 12422  0BB9                     ;main.c: 202:                     else
 12423                           	bcf	status, 5	;RP0=0, select bank0
 12424  0BB9  1283               	bcf	status, 6	;RP1=0, select bank0
 12425  0BBA  1303               		movf	(ChangeTrigger@TriggerSet),w
 12426  0BBB  082A               	movwf	(LCD_SendString@string)
 12427  0BBC  00F1               	movlw	0
 12428  0BBD  3000               	btfss	status,2
 12429  0BBE  1D03               	movlw	080h
 12430  0BBF  3080               	movwf	(LCD_SendString@string+1)
 12431  0BC0  00F2               
 12432                           	fcall	_LCD_SendString
 12433  0BC1  160A  118A  2361  120A  158A  	line	203
 12434                           	
 12435                           l3389:	
 12436  0BC6                     ;main.c: 203:                         triggerTemp[i] = triggerTemp[i] - 1;
 12437                           	movlw	0C8h
 12438  0BC6  30C8               	movwf	(Main_Delay@k)
 12439  0BC7  00F0               	movlw	0
 12440  0BC8  3000               	movwf	((Main_Delay@k))+1
 12441  0BC9  00F1               	fcall	_Main_Delay
 12442  0BCA  160A  118A  225F  120A  158A  	line	204
 12443                           	
 12444                           l3391:	
 12445  0BCF                     ;main.c: 204:                     break;
 12446                           	movlw	low(01h)
 12447  0BCF  3001               	fcall	_LCD_Command
 12448  0BD0  160A  158A  25EF  120A  158A  	line	205
 12449                           ;main.c: 205:                 case 4:
 12450                           	goto	l144
 12451  0BD5  2CE0               	line	206
 12452                           ;main.c: 206: 
 12453                           	
 12454                           l130:	
 12455  0BD6                     	line	208
 12456                           ;main.c: 208:                     {
 12457                           	goto	l3421
 12458  0BD6  2C58               	line	211
 12459                           ;main.c: 209:                         triggerTemp[1] = 0;;main.c: 211:                  
                                    }
 12460                           	
 12461                           l133:	
 12462  0BD7                     	line	212
 12463                           	
 12464                           l3393:	
 12465  0BD7                     ;main.c: 212:                     else
 12466                           	bcf	status, 5	;RP0=0, select bank0
 12467  0BD7  1283               	bcf	status, 6	;RP1=0, select bank0
 12468  0BD8  1303               	movf	((ChangeTrigger@i)),w
 12469  0BD9  082F               iorwf	((ChangeTrigger@i+1)),w
 12470  0BDA  0430               	btfss	status,2
 12471  0BDB  1D03               	goto	u2771
 12472  0BDC  2BDE               	goto	u2770
 12473  0BDD  2BDF               u2771:
 12474  0BDE                     	goto	l3397
 12475  0BDE  2BE4               u2770:
 12476  0BDF                     	line	213
 12477                           	
 12478                           l3395:	
 12479  0BDF                     ;main.c: 213:                         triggerTemp[i] = triggerTemp[i] + 1;
 12480                           	movlw	01h
 12481  0BDF  3001               	movwf	(ChangeTrigger@i)
 12482  0BE0  00AF               	movlw	0
 12483  0BE1  3000               	movwf	((ChangeTrigger@i))+1
 12484  0BE2  00B0               	goto	l3423
 12485  0BE3  2C6D               	line	214
 12486                           ;main.c: 214:                     break;
 12487                           	
 12488                           l134:	
 12489  0BE4                     	line	215
 12490                           	
 12491                           l3397:	
 12492  0BE4                     ;main.c: 215:             }
 12493                           	clrf	(ChangeTrigger@i)
 12494  0BE4  01AF               	clrf	(ChangeTrigger@i+1)
 12495  0BE5  01B0               	goto	l3423
 12496  0BE6  2C6D               	
 12497                           l135:	
 12498  0BE7                     	line	216
 12499                           ;main.c: 216: 
 12500                           	goto	l3423
 12501  0BE7  2C6D               	line	217
 12502                           ;main.c: 217:             int i = triggerTemp[0];
 12503                           	
 12504                           l137:	
 12505  0BE8                     	line	219
 12506                           	
 12507                           l3399:	
 12508  0BE8                     ;main.c: 219:             digits[1] = i % 10 + 48;
 12509                           		decf	((ChangeTrigger@i)),w
 12510  0BE8  032F               iorwf	((ChangeTrigger@i+1)),w
 12511  0BE9  0430               	btfss	status,2
 12512  0BEA  1D03               	goto	u2781
 12513  0BEB  2BED               	goto	u2780
 12514  0BEC  2BEE               u2781:
 12515  0BED                     	goto	l3407
 12516  0BED  2C01               u2780:
 12517  0BEE                     	
 12518                           l3401:	
 12519  0BEE                     	movf	(0+(_triggerTemp)+02h),w
 12520  0BEE  086E               iorwf	(1+(_triggerTemp)+02h),w
 12521  0BEF  046F               	btfss	status,2
 12522  0BF0  1D03               	goto	u2791
 12523  0BF1  2BF3               	goto	u2790
 12524  0BF2  2BF4               u2791:
 12525  0BF3                     	goto	l3407
 12526  0BF3  2C01               u2790:
 12527  0BF4                     	line	221
 12528                           	
 12529                           l3403:	
 12530  0BF4                     ;main.c: 220:             i /= 10;;main.c: 221:             digits[0] = i % 10 + 48;
 12531                           	movlw	09h
 12532  0BF4  3009               	movwf	0+(_triggerTemp)+02h
 12533  0BF5  00EE               	movlw	0
 12534  0BF6  3000               	movwf	(0+(_triggerTemp)+02h)+1
 12535  0BF7  00EF               	line	222
 12536                           	
 12537                           l3405:	
 12538  0BF8                     ;main.c: 222: 
 12539                           	movf	(_triggerTemp),w
 12540  0BF8  086C               	addlw	low(-1)
 12541  0BF9  3EFF               	movwf	(_triggerTemp)
 12542  0BFA  00EC               	movf	(_triggerTemp+1),w
 12543  0BFB  086D               	skipnc
 12544  0BFC  1803               	addlw	1
 12545  0BFD  3E01               	addlw	high(-1)
 12546  0BFE  3EFF               	movwf	1+(_triggerTemp)
 12547  0BFF  00ED               	line	223
 12548                           ;main.c: 223:             digits[2] = '\0';
 12549                           	goto	l3423
 12550  0C00  2C6D               	line	224
 12551                           ;main.c: 224: 
 12552                           	
 12553                           l138:	
 12554  0C01                     	line	225
 12555                           	
 12556                           l3407:	
 12557  0C01                     ;main.c: 225:             decimal = triggerTemp[1] + 48;
 12558                           	movf	(ChangeTrigger@i),w
 12559  0C01  082F               	movwf	(??_ChangeTrigger+0)+0
 12560  0C02  00A0               	addwf	(??_ChangeTrigger+0)+0,w
 12561  0C03  0720               	addlw	low(_triggerTemp|((0x0)<<8))&0ffh
 12562  0C04  3E6C               	movwf	fsr0
 12563  0C05  0084               	bcf	status, 7	;select IRP bank0
 12564  0C06  1383               	movf	indf,w
 12565  0C07  0800               	movwf	(??_ChangeTrigger+1)+0+0
 12566  0C08  00A1               	incf	fsr0,f
 12567  0C09  0A84               	movf	indf,w
 12568  0C0A  0800               	movwf	(??_ChangeTrigger+1)+0+1
 12569  0C0B  00A2               	movf	0+(??_ChangeTrigger+1)+0,w
 12570  0C0C  0821               	addlw	low(-1)
 12571  0C0D  3EFF               	movwf	(??_ChangeTrigger+3)+0
 12572  0C0E  00A3               	movf	1+(??_ChangeTrigger+1)+0,w
 12573  0C0F  0822               	skipnc
 12574  0C10  1803               	addlw	1
 12575  0C11  3E01               	addlw	high(-1)
 12576  0C12  3EFF               	movwf	1+(??_ChangeTrigger+3)+0
 12577  0C13  00A4               	movf	(ChangeTrigger@i),w
 12578  0C14  082F               	movwf	(??_ChangeTrigger+5)+0
 12579  0C15  00A5               	addwf	(??_ChangeTrigger+5)+0,w
 12580  0C16  0725               	addlw	low(_triggerTemp|((0x0)<<8))&0ffh
 12581  0C17  3E6C               	movwf	fsr0
 12582  0C18  0084               	movf	0+(??_ChangeTrigger+3)+0,w
 12583  0C19  0823               	movwf	indf
 12584  0C1A  0080               	incf	fsr0,f
 12585  0C1B  0A84               	movf	1+(??_ChangeTrigger+3)+0,w
 12586  0C1C  0824               	movwf	indf
 12587  0C1D  0080               	goto	l3423
 12588  0C1E  2C6D               	
 12589                           l139:	
 12590  0C1F                     	line	226
 12591                           ;main.c: 226: 
 12592                           	goto	l3423
 12593  0C1F  2C6D               	line	227
 12594                           ;main.c: 227:             LCD_SendString(digits);
 12595                           	
 12596                           l140:	
 12597  0C20                     	line	229
 12598                           	
 12599                           l3409:	
 12600  0C20                     ;main.c: 229: 
 12601                           		decf	((ChangeTrigger@i)),w
 12602  0C20  032F               iorwf	((ChangeTrigger@i+1)),w
 12603  0C21  0430               	btfss	status,2
 12604  0C22  1D03               	goto	u2801
 12605  0C23  2C25               	goto	u2800
 12606  0C24  2C26               u2801:
 12607  0C25                     	goto	l3417
 12608  0C25  2C38               u2800:
 12609  0C26                     	
 12610                           l3411:	
 12611  0C26                     		movlw	9
 12612  0C26  3009               	xorwf	(0+(_triggerTemp)+02h),w
 12613  0C27  066E               iorwf	(1+(_triggerTemp)+02h),w
 12614  0C28  046F               	btfss	status,2
 12615  0C29  1D03               	goto	u2811
 12616  0C2A  2C2C               	goto	u2810
 12617  0C2B  2C2D               u2811:
 12618  0C2C                     	goto	l3417
 12619  0C2C  2C38               u2810:
 12620  0C2D                     	line	231
 12621                           	
 12622                           l3413:	
 12623  0C2D                     ;main.c: 230:             LCD_SendData('.');;main.c: 231:             LCD_Busy();
 12624                           	clrf	0+(_triggerTemp)+02h
 12625  0C2D  01EE               	clrf	1+(_triggerTemp)+02h
 12626  0C2E  01EF               	line	232
 12627                           	
 12628                           l3415:	
 12629  0C2F                     ;main.c: 232: 
 12630                           	movf	(_triggerTemp),w
 12631  0C2F  086C               	addlw	low(01h)
 12632  0C30  3E01               	movwf	(_triggerTemp)
 12633  0C31  00EC               	movf	(_triggerTemp+1),w
 12634  0C32  086D               	skipnc
 12635  0C33  1803               	addlw	1
 12636  0C34  3E01               	addlw	high(01h)
 12637  0C35  3E00               	movwf	1+(_triggerTemp)
 12638  0C36  00ED               	line	233
 12639                           ;main.c: 233:             LCD_SendData(decimal);
 12640                           	goto	l3423
 12641  0C37  2C6D               	line	234
 12642                           ;main.c: 234:             LCD_Busy();
 12643                           	
 12644                           l141:	
 12645  0C38                     	line	235
 12646                           	
 12647                           l3417:	
 12648  0C38                     ;main.c: 235: 
 12649                           	movf	(ChangeTrigger@i),w
 12650  0C38  082F               	movwf	(??_ChangeTrigger+0)+0
 12651  0C39  00A0               	addwf	(??_ChangeTrigger+0)+0,w
 12652  0C3A  0720               	addlw	low(_triggerTemp|((0x0)<<8))&0ffh
 12653  0C3B  3E6C               	movwf	fsr0
 12654  0C3C  0084               	bcf	status, 7	;select IRP bank0
 12655  0C3D  1383               	movf	indf,w
 12656  0C3E  0800               	movwf	(??_ChangeTrigger+1)+0+0
 12657  0C3F  00A1               	incf	fsr0,f
 12658  0C40  0A84               	movf	indf,w
 12659  0C41  0800               	movwf	(??_ChangeTrigger+1)+0+1
 12660  0C42  00A2               	movf	0+(??_ChangeTrigger+1)+0,w
 12661  0C43  0821               	addlw	low(01h)
 12662  0C44  3E01               	movwf	(??_ChangeTrigger+3)+0
 12663  0C45  00A3               	movf	1+(??_ChangeTrigger+1)+0,w
 12664  0C46  0822               	skipnc
 12665  0C47  1803               	addlw	1
 12666  0C48  3E01               	addlw	high(01h)
 12667  0C49  3E00               	movwf	1+(??_ChangeTrigger+3)+0
 12668  0C4A  00A4               	movf	(ChangeTrigger@i),w
 12669  0C4B  082F               	movwf	(??_ChangeTrigger+5)+0
 12670  0C4C  00A5               	addwf	(??_ChangeTrigger+5)+0,w
 12671  0C4D  0725               	addlw	low(_triggerTemp|((0x0)<<8))&0ffh
 12672  0C4E  3E6C               	movwf	fsr0
 12673  0C4F  0084               	movf	0+(??_ChangeTrigger+3)+0,w
 12674  0C50  0823               	movwf	indf
 12675  0C51  0080               	incf	fsr0,f
 12676  0C52  0A84               	movf	1+(??_ChangeTrigger+3)+0,w
 12677  0C53  0824               	movwf	indf
 12678  0C54  0080               	goto	l3423
 12679  0C55  2C6D               	
 12680                           l142:	
 12681  0C56                     	line	236
 12682                           ;main.c: 236:             LCD_SendData('0');
 12683                           	goto	l3423
 12684  0C56  2C6D               	line	237
 12685                           	
 12686                           l3419:	
 12687  0C57                     ;main.c: 237:         }
 12688                           	goto	l3423
 12689  0C57  2C6D               	
 12690                           l132:	
 12691  0C58                     	
 12692                           l3421:	
 12693  0C58                     	bcf	status, 5	;RP0=0, select bank0
 12694  0C58  1283               	bcf	status, 6	;RP1=0, select bank0
 12695  0C59  1303               	movf	(ChangeTrigger@Key),w
 12696  0C5A  082C               	movwf	(??_ChangeTrigger+0)+0
 12697  0C5B  00A0               	clrf	(??_ChangeTrigger+0)+0+1
 12698  0C5C  01A1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 12699                           ; Switch size 1, requested type "space"
 12700                           ; Number of cases is 1, Range of values is 0 to 0
 12701                           ; switch strategies available:
 12702                           ; Name         Instructions Cycles
 12703                           ; simple_byte            4     3 (average)
 12704                           ; direct_byte           11     8 (fixed)
 12705                           ; jumptable            260     6 (fixed)
 12706                           ;	Chosen strategy is simple_byte
 12707                           
 12708                           	movf 1+(??_ChangeTrigger+0)+0,w
 12709  0C5D  0821               	opt asmopt_push
 12710                           	opt asmopt_off
 12711                           	xorlw	0^0	; case 0
 12712  0C5E  3A00               	skipnz
 12713  0C5F  1903               	goto	l4295
 12714  0C60  2C62               	goto	l3423
 12715  0C61  2C6D               	opt asmopt_pop
 12716                           	
 12717                           l4295:	
 12718  0C62                     ; Switch size 1, requested type "space"
 12719                           ; Number of cases is 3, Range of values is 2 to 4
 12720                           ; switch strategies available:
 12721                           ; Name         Instructions Cycles
 12722                           ; simple_byte           10     6 (average)
 12723                           ; direct_byte           20    11 (fixed)
 12724                           ; jumptable            263     9 (fixed)
 12725                           ;	Chosen strategy is simple_byte
 12726                           
 12727                           	movf 0+(??_ChangeTrigger+0)+0,w
 12728  0C62  0820               	opt asmopt_push
 12729                           	opt asmopt_off
 12730                           	xorlw	2^0	; case 2
 12731  0C63  3A02               	skipnz
 12732  0C64  1903               	goto	l3393
 12733  0C65  2BD7               	xorlw	3^2	; case 3
 12734  0C66  3A01               	skipnz
 12735  0C67  1903               	goto	l3399
 12736  0C68  2BE8               	xorlw	4^3	; case 4
 12737  0C69  3A07               	skipnz
 12738  0C6A  1903               	goto	l3409
 12739  0C6B  2C20               	goto	l3423
 12740  0C6C  2C6D               	opt asmopt_pop
 12741                           
 12742                           	
 12743                           l136:	
 12744  0C6D                     	line	239
 12745                           	
 12746                           l3423:	
 12747  0C6D                     ;main.c: 239: 
 12748                           	movf	(_triggerTemp+1),w
 12749  0C6D  086D               	movwf	(ChangeTrigger@i_199+1)
 12750  0C6E  00AE               	movf	(_triggerTemp),w
 12751  0C6F  086C               	movwf	(ChangeTrigger@i_199)
 12752  0C70  00AD               	line	241
 12753                           	
 12754                           l3425:	
 12755  0C71                     ;main.c: 241: void SwapToHeatingDisplay(int Key)
 12756                           	movlw	0Ah
 12757  0C71  300A               	movwf	(___awmod@divisor)
 12758  0C72  00F0               	movlw	0
 12759  0C73  3000               	movwf	((___awmod@divisor))+1
 12760  0C74  00F1               	movf	(ChangeTrigger@i_199+1),w
 12761  0C75  082E               	movwf	(___awmod@dividend+1)
 12762  0C76  00F3               	movf	(ChangeTrigger@i_199),w
 12763  0C77  082D               	movwf	(___awmod@dividend)
 12764  0C78  00F2               	fcall	___awmod
 12765  0C79  160A  118A  255D  120A  158A  	movf	(0+(?___awmod)),w
 12766  0C7E  0870               	addlw	030h
 12767  0C7F  3E30               	bcf	status, 5	;RP0=0, select bank0
 12768  0C80  1283               	bcf	status, 6	;RP1=0, select bank0
 12769  0C81  1303               	movwf	(??_ChangeTrigger+0)+0
 12770  0C82  00A0               	movf	(??_ChangeTrigger+0)+0,w
 12771  0C83  0820               	movwf	0+(ChangeTrigger@digits)+01h
 12772  0C84  00A7               	line	242
 12773                           	
 12774                           l3427:	
 12775  0C85                     ;main.c: 242: {
 12776                           	movlw	0Ah
 12777  0C85  300A               	movwf	(___awdiv@divisor)
 12778  0C86  00F0               	movlw	0
 12779  0C87  3000               	movwf	((___awdiv@divisor))+1
 12780  0C88  00F1               	movf	(ChangeTrigger@i_199+1),w
 12781  0C89  082E               	movwf	(___awdiv@dividend+1)
 12782  0C8A  00F3               	movf	(ChangeTrigger@i_199),w
 12783  0C8B  082D               	movwf	(___awdiv@dividend)
 12784  0C8C  00F2               	fcall	___awdiv
 12785  0C8D  160A  118A  25C0  120A  158A  	movf	(1+(?___awdiv)),w
 12786  0C92  0871               	bcf	status, 5	;RP0=0, select bank0
 12787  0C93  1283               	bcf	status, 6	;RP1=0, select bank0
 12788  0C94  1303               	movwf	(ChangeTrigger@i_199+1)
 12789  0C95  00AE               	movf	(0+(?___awdiv)),w
 12790  0C96  0870               	movwf	(ChangeTrigger@i_199)
 12791  0C97  00AD               	line	243
 12792                           	
 12793                           l3429:	
 12794  0C98                     ;main.c: 243:     char* Heat = "Heating:";
 12795                           	movlw	0Ah
 12796  0C98  300A               	movwf	(___awmod@divisor)
 12797  0C99  00F0               	movlw	0
 12798  0C9A  3000               	movwf	((___awmod@divisor))+1
 12799  0C9B  00F1               	movf	(ChangeTrigger@i_199+1),w
 12800  0C9C  082E               	movwf	(___awmod@dividend+1)
 12801  0C9D  00F3               	movf	(ChangeTrigger@i_199),w
 12802  0C9E  082D               	movwf	(___awmod@dividend)
 12803  0C9F  00F2               	fcall	___awmod
 12804  0CA0  160A  118A  255D  120A  158A  	movf	(0+(?___awmod)),w
 12805  0CA5  0870               	addlw	030h
 12806  0CA6  3E30               	bcf	status, 5	;RP0=0, select bank0
 12807  0CA7  1283               	bcf	status, 6	;RP1=0, select bank0
 12808  0CA8  1303               	movwf	(??_ChangeTrigger+0)+0
 12809  0CA9  00A0               	movf	(??_ChangeTrigger+0)+0,w
 12810  0CAA  0820               	movwf	(ChangeTrigger@digits)
 12811  0CAB  00A6               	line	245
 12812                           	
 12813                           l3431:	
 12814  0CAC                     ;main.c: 245:     LCD_Command(0x01);
 12815                           	clrf	0+(ChangeTrigger@digits)+02h
 12816  0CAC  01A8               	line	247
 12817                           	
 12818                           l3433:	
 12819  0CAD                     ;main.c: 247:     char* Off = "Off";
 12820                           	movf	0+(_triggerTemp)+02h,w
 12821  0CAD  086E               	addlw	030h
 12822  0CAE  3E30               	movwf	(??_ChangeTrigger+0)+0
 12823  0CAF  00A0               	movf	(??_ChangeTrigger+0)+0,w
 12824  0CB0  0820               	movwf	(ChangeTrigger@decimal)
 12825  0CB1  00AB               	line	249
 12826                           	
 12827                           l3435:	
 12828  0CB2                     ;main.c: 249:     {
 12829                           	movlw	(low(ChangeTrigger@digits|((0x0)<<8))&0ffh)
 12830  0CB2  3026               	movwf	(LCD_SendString@string)
 12831  0CB3  00F1               	movlw	(0x0)
 12832  0CB4  3000               	movwf	(LCD_SendString@string+1)
 12833  0CB5  00F2               	fcall	_LCD_SendString
 12834  0CB6  160A  118A  2361  120A  158A  	line	250
 12835                           	
 12836                           l3437:	
 12837  0CBB                     ;main.c: 250: 
 12838                           	fcall	_LCD_Busy
 12839  0CBB  160A  158A  2630  120A  158A  	line	252
 12840                           	
 12841                           l3439:	
 12842  0CC0                     ;main.c: 252:         if(Key == 7)
 12843                           	movlw	low(02Eh)
 12844  0CC0  302E               	fcall	_LCD_SendData
 12845  0CC1  160A  158A  25FE  120A  158A  	line	253
 12846                           	
 12847                           l3441:	
 12848  0CC6                     ;main.c: 253:         {
 12849                           	fcall	_LCD_Busy
 12850  0CC6  160A  158A  2630  120A  158A  	line	255
 12851                           	
 12852                           l3443:	
 12853  0CCB                     ;main.c: 255:             break;
 12854                           	bcf	status, 5	;RP0=0, select bank0
 12855  0CCB  1283               	bcf	status, 6	;RP1=0, select bank0
 12856  0CCC  1303               	movf	(ChangeTrigger@decimal),w
 12857  0CCD  082B               	fcall	_LCD_SendData
 12858  0CCE  160A  158A  25FE  120A  158A  	line	256
 12859                           	
 12860                           l3445:	
 12861  0CD3                     ;main.c: 256:         }
 12862                           	fcall	_LCD_Busy
 12863  0CD3  160A  158A  2630  120A  158A  	line	258
 12864                           	
 12865                           l3447:	
 12866  0CD8                     ;main.c: 258:         LCD_SendString(Heat);
 12867                           	movlw	low(030h)
 12868  0CD8  3030               	fcall	_LCD_SendData
 12869  0CD9  160A  158A  25FE  120A  158A  	goto	l3377
 12870  0CDE  2B8A               	line	259
 12871                           ;main.c: 259: 
 12872                           	
 12873                           l143:	
 12874  0CDF                     	goto	l3377
 12875  0CDF  2B8A               	
 12876                           l131:	
 12877  0CE0                     	line	260
 12878                           	
 12879                           l144:	
 12880  0CE0                     	return
 12881  0CE0  0008               	opt stack 0
 12882                           GLOBAL	__end_of_ChangeTrigger
 12883                           	__end_of_ChangeTrigger:
 12884  0CE1                     	signat	_ChangeTrigger,4217
 12885                           	global	___awdiv
 12886                           
 12887 ;; *************** function ___awdiv *****************
 12888 ;; Defined at:
 12889 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 12890 ;; Parameters:    Size  Location     Type
 12891 ;;  divisor         2    0[COMMON] int 
 12892 ;;  dividend        2    2[COMMON] int 
 12893 ;; Auto vars:     Size  Location     Type
 12894 ;;  quotient        2    7[COMMON] int 
 12895 ;;  sign            1    6[COMMON] unsigned char 
 12896 ;;  counter         1    5[COMMON] unsigned char 
 12897 ;; Return value:  Size  Location     Type
 12898 ;;                  2    0[COMMON] int 
 12899 ;; Registers used:
 12900 ;;		wreg, status,2, status,0
 12901 ;; Tracked objects:
 12902 ;;		On entry : 0/0
 12903 ;;		On exit  : 0/0
 12904 ;;		Unchanged: 0/0
 12905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12906 ;;      Params:         4       0       0       0       0
 12907 ;;      Locals:         4       0       0       0       0
 12908 ;;      Temps:          1       0       0       0       0
 12909 ;;      Totals:         9       0       0       0       0
 12910 ;;Total ram usage:        9 bytes
 12911 ;; Hardware stack levels used:    1
 12912 ;; This function calls:
 12913 ;;		Nothing
 12914 ;; This function is called by:
 12915 ;;		_DisplayTime
 12916 ;;		_DisplayDate
 12917 ;;		_ChangeTrigger
 12918 ;;		_SetTime
 12919 ;;		_Get_Temp
 12920 ;; This function uses a non-reentrant model
 12921 ;;
 12922                           psect	text41,local,class=CODE,delta=2,merge=1,group=1
 12923                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 12924                           	line	5
 12925                           global __ptext41
 12926                           __ptext41:	;psect for function ___awdiv
 12927  15C0                     psect	text41
 12928                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 12929                           	line	5
 12930                           	global	__size_of___awdiv
 12931                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 12932  0071                     	
 12933                           ___awdiv:	
 12934  15C0                     ;incstack = 0
 12935                           	opt	stack 3
 12936                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12937                           	line	13
 12938                           	
 12939                           l2957:	
 12940  15C0                     	clrf	(___awdiv@sign)
 12941  15C0  01F6               	line	14
 12942                           	
 12943                           l2959:	
 12944  15C1                     	btfss	(___awdiv@divisor+1),7
 12945  15C1  1FF1               	goto	u2021
 12946  15C2  2DC4               	goto	u2020
 12947  15C3  2DC5               u2021:
 12948  15C4                     	goto	l2965
 12949  15C4  2DCD               u2020:
 12950  15C5                     	line	15
 12951                           	
 12952                           l2961:	
 12953  15C5                     	comf	(___awdiv@divisor),f
 12954  15C5  09F0               	comf	(___awdiv@divisor+1),f
 12955  15C6  09F1               	incf	(___awdiv@divisor),f
 12956  15C7  0AF0               	skipnz
 12957  15C8  1903               	incf	(___awdiv@divisor+1),f
 12958  15C9  0AF1               	line	16
 12959                           	
 12960                           l2963:	
 12961  15CA                     	clrf	(___awdiv@sign)
 12962  15CA  01F6               	incf	(___awdiv@sign),f
 12963  15CB  0AF6               	goto	l2965
 12964  15CC  2DCD               	line	17
 12965                           	
 12966                           l841:	
 12967  15CD                     	line	18
 12968                           	
 12969                           l2965:	
 12970  15CD                     	btfss	(___awdiv@dividend+1),7
 12971  15CD  1FF3               	goto	u2031
 12972  15CE  2DD0               	goto	u2030
 12973  15CF  2DD1               u2031:
 12974  15D0                     	goto	l2971
 12975  15D0  2DDB               u2030:
 12976  15D1                     	line	19
 12977                           	
 12978                           l2967:	
 12979  15D1                     	comf	(___awdiv@dividend),f
 12980  15D1  09F2               	comf	(___awdiv@dividend+1),f
 12981  15D2  09F3               	incf	(___awdiv@dividend),f
 12982  15D3  0AF2               	skipnz
 12983  15D4  1903               	incf	(___awdiv@dividend+1),f
 12984  15D5  0AF3               	line	20
 12985                           	
 12986                           l2969:	
 12987  15D6                     	movlw	low(01h)
 12988  15D6  3001               	movwf	(??___awdiv+0)+0
 12989  15D7  00F4               	movf	(??___awdiv+0)+0,w
 12990  15D8  0874               	xorwf	(___awdiv@sign),f
 12991  15D9  06F6               	goto	l2971
 12992  15DA  2DDB               	line	21
 12993                           	
 12994                           l842:	
 12995  15DB                     	line	22
 12996                           	
 12997                           l2971:	
 12998  15DB                     	clrf	(___awdiv@quotient)
 12999  15DB  01F7               	clrf	(___awdiv@quotient+1)
 13000  15DC  01F8               	line	23
 13001                           	
 13002                           l2973:	
 13003  15DD                     	movf	((___awdiv@divisor)),w
 13004  15DD  0870               iorwf	((___awdiv@divisor+1)),w
 13005  15DE  0471               	btfsc	status,2
 13006  15DF  1903               	goto	u2041
 13007  15E0  2DE2               	goto	u2040
 13008  15E1  2DE3               u2041:
 13009  15E2                     	goto	l2993
 13010  15E2  2E20               u2040:
 13011  15E3                     	line	24
 13012                           	
 13013                           l2975:	
 13014  15E3                     	clrf	(___awdiv@counter)
 13015  15E3  01F5               	incf	(___awdiv@counter),f
 13016  15E4  0AF5               	line	25
 13017                           	goto	l2981
 13018  15E5  2DF2               	
 13019                           l845:	
 13020  15E6                     	line	26
 13021                           	
 13022                           l2977:	
 13023  15E6                     	movlw	01h
 13024  15E6  3001               	
 13025                           u2055:
 13026  15E7                     	clrc
 13027  15E7  1003               	rlf	(___awdiv@divisor),f
 13028  15E8  0DF0               	rlf	(___awdiv@divisor+1),f
 13029  15E9  0DF1               	addlw	-1
 13030  15EA  3EFF               	skipz
 13031  15EB  1D03               	goto	u2055
 13032  15EC  2DE7               	line	27
 13033                           	
 13034                           l2979:	
 13035  15ED                     	movlw	low(01h)
 13036  15ED  3001               	movwf	(??___awdiv+0)+0
 13037  15EE  00F4               	movf	(??___awdiv+0)+0,w
 13038  15EF  0874               	addwf	(___awdiv@counter),f
 13039  15F0  07F5               	goto	l2981
 13040  15F1  2DF2               	line	28
 13041                           	
 13042                           l844:	
 13043  15F2                     	line	25
 13044                           	
 13045                           l2981:	
 13046  15F2                     	btfss	(___awdiv@divisor+1),(15)&7
 13047  15F2  1FF1               	goto	u2061
 13048  15F3  2DF5               	goto	u2060
 13049  15F4  2DF6               u2061:
 13050  15F5                     	goto	l2977
 13051  15F5  2DE6               u2060:
 13052  15F6                     	goto	l2983
 13053  15F6  2DF8               	
 13054                           l846:	
 13055  15F7                     	goto	l2983
 13056  15F7  2DF8               	line	29
 13057                           	
 13058                           l847:	
 13059  15F8                     	line	30
 13060                           	
 13061                           l2983:	
 13062  15F8                     	movlw	01h
 13063  15F8  3001               	
 13064                           u2075:
 13065  15F9                     	clrc
 13066  15F9  1003               	rlf	(___awdiv@quotient),f
 13067  15FA  0DF7               	rlf	(___awdiv@quotient+1),f
 13068  15FB  0DF8               	addlw	-1
 13069  15FC  3EFF               	skipz
 13070  15FD  1D03               	goto	u2075
 13071  15FE  2DF9               	line	31
 13072                           	movf	(___awdiv@divisor+1),w
 13073  15FF  0871               	subwf	(___awdiv@dividend+1),w
 13074  1600  0273               	skipz
 13075  1601  1D03               	goto	u2085
 13076  1602  2E05               	movf	(___awdiv@divisor),w
 13077  1603  0870               	subwf	(___awdiv@dividend),w
 13078  1604  0272               u2085:
 13079  1605                     	skipc
 13080  1605  1C03               	goto	u2081
 13081  1606  2E08               	goto	u2080
 13082  1607  2E09               u2081:
 13083  1608                     	goto	l2989
 13084  1608  2E11               u2080:
 13085  1609                     	line	32
 13086                           	
 13087                           l2985:	
 13088  1609                     	movf	(___awdiv@divisor),w
 13089  1609  0870               	subwf	(___awdiv@dividend),f
 13090  160A  02F2               	movf	(___awdiv@divisor+1),w
 13091  160B  0871               	skipc
 13092  160C  1C03               	decf	(___awdiv@dividend+1),f
 13093  160D  03F3               	subwf	(___awdiv@dividend+1),f
 13094  160E  02F3               	line	33
 13095                           	
 13096                           l2987:	
 13097  160F                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
 13098  160F  1477               	goto	l2989
 13099  1610  2E11               	line	34
 13100                           	
 13101                           l848:	
 13102  1611                     	line	35
 13103                           	
 13104                           l2989:	
 13105  1611                     	movlw	01h
 13106  1611  3001               	
 13107                           u2095:
 13108  1612                     	clrc
 13109  1612  1003               	rrf	(___awdiv@divisor+1),f
 13110  1613  0CF1               	rrf	(___awdiv@divisor),f
 13111  1614  0CF0               	addlw	-1
 13112  1615  3EFF               	skipz
 13113  1616  1D03               	goto	u2095
 13114  1617  2E12               	line	36
 13115                           	
 13116                           l2991:	
 13117  1618                     	movlw	01h
 13118  1618  3001               	subwf	(___awdiv@counter),f
 13119  1619  02F5               	btfss	status,2
 13120  161A  1D03               	goto	u2101
 13121  161B  2E1D               	goto	u2100
 13122  161C  2E1E               u2101:
 13123  161D                     	goto	l2983
 13124  161D  2DF8               u2100:
 13125  161E                     	goto	l2993
 13126  161E  2E20               	
 13127                           l849:	
 13128  161F                     	goto	l2993
 13129  161F  2E20               	line	37
 13130                           	
 13131                           l843:	
 13132  1620                     	line	38
 13133                           	
 13134                           l2993:	
 13135  1620                     	movf	((___awdiv@sign)),w
 13136  1620  0876               	btfsc	status,2
 13137  1621  1903               	goto	u2111
 13138  1622  2E24               	goto	u2110
 13139  1623  2E25               u2111:
 13140  1624                     	goto	l2997
 13141  1624  2E2B               u2110:
 13142  1625                     	line	39
 13143                           	
 13144                           l2995:	
 13145  1625                     	comf	(___awdiv@quotient),f
 13146  1625  09F7               	comf	(___awdiv@quotient+1),f
 13147  1626  09F8               	incf	(___awdiv@quotient),f
 13148  1627  0AF7               	skipnz
 13149  1628  1903               	incf	(___awdiv@quotient+1),f
 13150  1629  0AF8               	goto	l2997
 13151  162A  2E2B               	
 13152                           l850:	
 13153  162B                     	line	40
 13154                           	
 13155                           l2997:	
 13156  162B                     	movf	(___awdiv@quotient+1),w
 13157  162B  0878               	movwf	(?___awdiv+1)
 13158  162C  00F1               	movf	(___awdiv@quotient),w
 13159  162D  0877               	movwf	(?___awdiv)
 13160  162E  00F0               	goto	l851
 13161  162F  2E30               	
 13162                           l2999:	
 13163  1630                     	line	41
 13164                           	
 13165                           l851:	
 13166  1630                     	return
 13167  1630  0008               	opt stack 0
 13168                           GLOBAL	__end_of___awdiv
 13169                           	__end_of___awdiv:
 13170  1631                     	signat	___awdiv,8314
 13171                           	global	_Main_Delay
 13172                           
 13173 ;; *************** function _Main_Delay *****************
 13174 ;; Defined at:
 13175 ;;		line 54 in file "main.c"
 13176 ;; Parameters:    Size  Location     Type
 13177 ;;  k               2    0[COMMON] int 
 13178 ;; Auto vars:     Size  Location     Type
 13179 ;;  j               2    5[COMMON] int 
 13180 ;;  i               2    3[COMMON] int 
 13181 ;; Return value:  Size  Location     Type
 13182 ;;                  1    wreg      void 
 13183 ;; Registers used:
 13184 ;;		wreg, status,2, btemp+1
 13185 ;; Tracked objects:
 13186 ;;		On entry : 0/0
 13187 ;;		On exit  : 0/0
 13188 ;;		Unchanged: 0/0
 13189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13190 ;;      Params:         2       0       0       0       0
 13191 ;;      Locals:         4       0       0       0       0
 13192 ;;      Temps:          1       0       0       0       0
 13193 ;;      Totals:         7       0       0       0       0
 13194 ;;Total ram usage:        7 bytes
 13195 ;; Hardware stack levels used:    1
 13196 ;; This function calls:
 13197 ;;		Nothing
 13198 ;; This function is called by:
 13199 ;;		_ChangeTrigger
 13200 ;;		_HeatingControlOff
 13201 ;;		_SetTime
 13202 ;;		_SetDate
 13203 ;;		_main
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 13207                           	file	"main.c"
 13208                           	line	54
 13209                           global __ptext42
 13210                           __ptext42:	;psect for function _Main_Delay
 13211  125F                     psect	text42
 13212                           	file	"main.c"
 13213                           	line	54
 13214                           	global	__size_of_Main_Delay
 13215                           	__size_of_Main_Delay	equ	__end_of_Main_Delay-_Main_Delay
 13216  003E                     	
 13217                           _Main_Delay:	
 13218  125F                     ;incstack = 0
 13219                           	opt	stack 5
 13220                           ; Regs used in _Main_Delay: [wreg+status,2+btemp+1]
 13221                           	line	57
 13222                           	
 13223                           l3169:	
 13224  125F                     ;main.c: 54: ;main.c: 55:     timeDisplayer[7] = timeSecs % 10 + 48;;main.c: 56:     tim
                                 eSecs /= 10;;main.c: 57:     timeDisplayer[6] = timeSecs % 10 + 48;
 13225                           	clrf	(Main_Delay@i)
 13226  125F  01F3               	clrf	(Main_Delay@i+1)
 13227  1260  01F4               	goto	l97
 13228  1261  2A8D               	
 13229                           l98:	
 13230  1262                     	line	58
 13231                           	
 13232                           l3171:	
 13233  1262                     ;main.c: 58: 
 13234                           	clrf	(Main_Delay@j)
 13235  1262  01F5               	clrf	(Main_Delay@j+1)
 13236  1263  01F6               	
 13237                           l3173:	
 13238  1264                     	movf	(Main_Delay@j+1),w
 13239  1264  0876               	xorlw	80h
 13240  1265  3A80               	movwf	btemp+1
 13241  1266  00FF               	movlw	(0)^80h
 13242  1267  3080               	subwf	btemp+1,w
 13243  1268  027F               	skipz
 13244  1269  1D03               	goto	u2415
 13245  126A  2A6D               	movlw	064h
 13246  126B  3064               	subwf	(Main_Delay@j),w
 13247  126C  0275               u2415:
 13248  126D                     
 13249                           	skipc
 13250  126D  1C03               	goto	u2411
 13251  126E  2A70               	goto	u2410
 13252  126F  2A71               u2411:
 13253  1270                     	goto	l3177
 13254  1270  2A73               u2410:
 13255  1271                     	goto	l3181
 13256  1271  2A87               	
 13257                           l3175:	
 13258  1272                     	goto	l3181
 13259  1272  2A87               	
 13260                           l99:	
 13261  1273                     	
 13262                           l3177:	
 13263  1273                     	movlw	01h
 13264  1273  3001               	addwf	(Main_Delay@j),f
 13265  1274  07F5               	skipnc
 13266  1275  1803               	incf	(Main_Delay@j+1),f
 13267  1276  0AF6               	movlw	0
 13268  1277  3000               	addwf	(Main_Delay@j+1),f
 13269  1278  07F6               	
 13270                           l3179:	
 13271  1279                     	movf	(Main_Delay@j+1),w
 13272  1279  0876               	xorlw	80h
 13273  127A  3A80               	movwf	btemp+1
 13274  127B  00FF               	movlw	(0)^80h
 13275  127C  3080               	subwf	btemp+1,w
 13276  127D  027F               	skipz
 13277  127E  1D03               	goto	u2425
 13278  127F  2A82               	movlw	064h
 13279  1280  3064               	subwf	(Main_Delay@j),w
 13280  1281  0275               u2425:
 13281  1282                     
 13282                           	skipc
 13283  1282  1C03               	goto	u2421
 13284  1283  2A85               	goto	u2420
 13285  1284  2A86               u2421:
 13286  1285                     	goto	l3177
 13287  1285  2A73               u2420:
 13288  1286                     	goto	l3181
 13289  1286  2A87               	
 13290                           l100:	
 13291  1287                     	
 13292                           l3181:	
 13293  1287                     	movlw	01h
 13294  1287  3001               	addwf	(Main_Delay@i),f
 13295  1288  07F3               	skipnc
 13296  1289  1803               	incf	(Main_Delay@i+1),f
 13297  128A  0AF4               	movlw	0
 13298  128B  3000               	addwf	(Main_Delay@i+1),f
 13299  128C  07F4               	
 13300                           l97:	
 13301  128D                     	movf	(Main_Delay@i+1),w
 13302  128D  0874               	xorlw	80h
 13303  128E  3A80               	movwf	(??_Main_Delay+0)+0
 13304  128F  00F2               	movf	(Main_Delay@k+1),w
 13305  1290  0871               	xorlw	80h
 13306  1291  3A80               	subwf	(??_Main_Delay+0)+0,w
 13307  1292  0272               	skipz
 13308  1293  1D03               	goto	u2435
 13309  1294  2A97               	movf	(Main_Delay@k),w
 13310  1295  0870               	subwf	(Main_Delay@i),w
 13311  1296  0273               u2435:
 13312  1297                     
 13313                           	skipc
 13314  1297  1C03               	goto	u2431
 13315  1298  2A9A               	goto	u2430
 13316  1299  2A9B               u2431:
 13317  129A                     	goto	l3171
 13318  129A  2A62               u2430:
 13319  129B                     	goto	l102
 13320  129B  2A9C               	
 13321                           l101:	
 13322  129C                     	line	59
 13323                           	
 13324                           l102:	
 13325  129C                     	return
 13326  129C  0008               	opt stack 0
 13327                           GLOBAL	__end_of_Main_Delay
 13328                           	__end_of_Main_Delay:
 13329  129D                     	signat	_Main_Delay,4217
 13330                           	global	_LCD_SendString
 13331                           
 13332 ;; *************** function _LCD_SendString *****************
 13333 ;; Defined at:
 13334 ;;		line 69 in file "LCD.c"
 13335 ;; Parameters:    Size  Location     Type
 13336 ;;  string          2    1[COMMON] PTR const unsigned char 
 13337 ;;		 -> STR_31(4), STR_30(4), STR_29(4), STR_28(4), 
 13338 ;;		 -> STR_27(4), STR_26(4), STR_25(4), STR_24(13), 
 13339 ;;		 -> STR_23(6), STR_22(5), SetTime@digits(9), STR_21(9), 
 13340 ;;		 -> STR_20(6), STR_19(6), STR_18(7), STR_17(16), 
 13341 ;;		 -> STR_16(11), STR_15(12), STR_14(4), STR_13(3), 
 13342 ;;		 -> STR_12(9), ChangeTrigger@digits(3), STR_11(12), STR_10(9), 
 13343 ;;		 -> tempBuffer(6), STR_9(6), STR_8(6), STR_7(7), 
 13344 ;;		 -> STR_6(9), STR_5(7), STR_4(9), STR_3(10), 
 13345 ;;		 -> STR_2(8), STR_1(7), timeDisplayer(9), 
 13346 ;; Auto vars:     Size  Location     Type
 13347 ;;  i               2    6[COMMON] int 
 13348 ;; Return value:  Size  Location     Type
 13349 ;;                  1    wreg      void 
 13350 ;; Registers used:
 13351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 13352 ;; Tracked objects:
 13353 ;;		On entry : 0/0
 13354 ;;		On exit  : 0/0
 13355 ;;		Unchanged: 0/0
 13356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13357 ;;      Params:         2       0       0       0       0
 13358 ;;      Locals:         2       0       0       0       0
 13359 ;;      Temps:          3       0       0       0       0
 13360 ;;      Totals:         7       0       0       0       0
 13361 ;;Total ram usage:        7 bytes
 13362 ;; Hardware stack levels used:    1
 13363 ;; Hardware stack levels required when called:    2
 13364 ;; This function calls:
 13365 ;;		_LCD_SendData
 13366 ;; This function is called by:
 13367 ;;		_DisplayTime
 13368 ;;		_DisplayDay
 13369 ;;		_DisplayTemp
 13370 ;;		_MainScreen
 13371 ;;		_ChangeTrigger
 13372 ;;		_SwapToHeatingDisplay
 13373 ;;		_HeatingControlOff
 13374 ;;		_SoundAlarm
 13375 ;;		_DateDayScreen
 13376 ;;		_SetTime
 13377 ;;		_SetDate
 13378 ;; This function uses a non-reentrant model
 13379 ;;
 13380                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
 13381                           	file	"LCD.c"
 13382                           	line	69
 13383                           global __ptext43
 13384                           __ptext43:	;psect for function _LCD_SendString
 13385  1361                     psect	text43
 13386                           	file	"LCD.c"
 13387                           	line	69
 13388                           	global	__size_of_LCD_SendString
 13389                           	__size_of_LCD_SendString	equ	__end_of_LCD_SendString-_LCD_SendString
 13390  0044                     	
 13391                           _LCD_SendString:	
 13392  1361                     ;incstack = 0
 13393                           	opt	stack 4
 13394                           ; Regs used in _LCD_SendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 13395                           	line	71
 13396                           	
 13397                           l3079:	
 13398  1361                     ;LCD.c: 71:     for (int i = 0; string[i]!='\0'; ++i)
 13399                           	clrf	(LCD_SendString@i)
 13400  1361  01F6               	clrf	(LCD_SendString@i+1)
 13401  1362  01F7               	goto	l3085
 13402  1363  2B87               	
 13403                           l521:	
 13404  1364                     	line	74
 13405                           	
 13406                           l3081:	
 13407  1364                     ;LCD.c: 72:     {;LCD.c: 74:         LCD_SendData(string[i]);
 13408                           	movf	(LCD_SendString@i),w
 13409  1364  0876               	addwf	(LCD_SendString@string),w
 13410  1365  0771               	movwf	(??_LCD_SendString+1)+0
 13411  1366  00F4               	movf	(LCD_SendString@string+1),w
 13412  1367  0872               	movwf	(??_LCD_SendString+0)+0
 13413  1368  00F3               	skipnc
 13414  1369  1803               	incf	(??_LCD_SendString+0)+0,f
 13415  136A  0AF3               	btfss	(LCD_SendString@i),7
 13416  136B  1FF6               	goto	u2250
 13417  136C  2B6E               	decf	(??_LCD_SendString+0)+0,f
 13418  136D  03F3               u2250:
 13419  136E                     	movf	(??_LCD_SendString+0)+0,w
 13420  136E  0873               	movwf	0+((??_LCD_SendString+1)+0)+1
 13421  136F  00F5               	movf	1+(??_LCD_SendString+1)+0,w
 13422  1370  0875               	bcf	status, 5	;RP0=0, select bank0
 13423  1371  1283               	bcf	status, 6	;RP1=0, select bank0
 13424  1372  1303               	movwf	btemp+1
 13425  1373  00FF               	movf	0+(??_LCD_SendString+1)+0,w
 13426  1374  0874               	movwf	fsr0
 13427  1375  0084               	fcall	stringtab
 13428  1376  160A  118A  2000  160A  118A  	fcall	_LCD_SendData
 13429  137B  160A  158A  25FE  160A  118A  	line	75
 13430                           	
 13431                           l3083:	
 13432  1380                     ;LCD.c: 75:     }
 13433                           	movlw	01h
 13434  1380  3001               	addwf	(LCD_SendString@i),f
 13435  1381  07F6               	skipnc
 13436  1382  1803               	incf	(LCD_SendString@i+1),f
 13437  1383  0AF7               	movlw	0
 13438  1384  3000               	addwf	(LCD_SendString@i+1),f
 13439  1385  07F7               	goto	l3085
 13440  1386  2B87               	
 13441                           l520:	
 13442  1387                     	
 13443                           l3085:	
 13444  1387                     	movf	(LCD_SendString@i),w
 13445  1387  0876               	addwf	(LCD_SendString@string),w
 13446  1388  0771               	movwf	(??_LCD_SendString+1)+0
 13447  1389  00F4               	movf	(LCD_SendString@string+1),w
 13448  138A  0872               	movwf	(??_LCD_SendString+0)+0
 13449  138B  00F3               	skipnc
 13450  138C  1803               	incf	(??_LCD_SendString+0)+0,f
 13451  138D  0AF3               	btfss	(LCD_SendString@i),7
 13452  138E  1FF6               	goto	u2260
 13453  138F  2B91               	decf	(??_LCD_SendString+0)+0,f
 13454  1390  03F3               u2260:
 13455  1391                     	movf	(??_LCD_SendString+0)+0,w
 13456  1391  0873               	movwf	0+((??_LCD_SendString+1)+0)+1
 13457  1392  00F5               	movf	1+(??_LCD_SendString+1)+0,w
 13458  1393  0875               	bcf	status, 5	;RP0=0, select bank0
 13459  1394  1283               	bcf	status, 6	;RP1=0, select bank0
 13460  1395  1303               	movwf	btemp+1
 13461  1396  00FF               	movf	0+(??_LCD_SendString+1)+0,w
 13462  1397  0874               	movwf	fsr0
 13463  1398  0084               	fcall	stringtab
 13464  1399  160A  118A  2000  160A  118A  	xorlw	0
 13465  139E  3A00               	skipz
 13466  139F  1D03               	goto	u2271
 13467  13A0  2BA2               	goto	u2270
 13468  13A1  2BA3               u2271:
 13469  13A2                     	goto	l3081
 13470  13A2  2B64               u2270:
 13471  13A3                     	goto	l523
 13472  13A3  2BA4               	
 13473                           l522:	
 13474  13A4                     	line	76
 13475                           	
 13476                           l523:	
 13477  13A4                     	return
 13478  13A4  0008               	opt stack 0
 13479                           GLOBAL	__end_of_LCD_SendString
 13480                           	__end_of_LCD_SendString:
 13481  13A5                     	signat	_LCD_SendString,4217
 13482                           	global	_LCD_SendData
 13483                           
 13484 ;; *************** function _LCD_SendData *****************
 13485 ;; Defined at:
 13486 ;;		line 55 in file "LCD.c"
 13487 ;; Parameters:    Size  Location     Type
 13488 ;;  c               1    wreg     unsigned char 
 13489 ;; Auto vars:     Size  Location     Type
 13490 ;;  c               1    0[COMMON] unsigned char 
 13491 ;; Return value:  Size  Location     Type
 13492 ;;                  1    wreg      void 
 13493 ;; Registers used:
 13494 ;;		wreg, status,2, status,0, pclath, cstack
 13495 ;; Tracked objects:
 13496 ;;		On entry : 0/0
 13497 ;;		On exit  : 0/0
 13498 ;;		Unchanged: 0/0
 13499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13500 ;;      Params:         0       0       0       0       0
 13501 ;;      Locals:         1       0       0       0       0
 13502 ;;      Temps:          0       0       0       0       0
 13503 ;;      Totals:         1       0       0       0       0
 13504 ;;Total ram usage:        1 bytes
 13505 ;; Hardware stack levels used:    1
 13506 ;; Hardware stack levels required when called:    1
 13507 ;; This function calls:
 13508 ;;		_LCD_Busy
 13509 ;; This function is called by:
 13510 ;;		_DisplayTemp
 13511 ;;		_ChangeTrigger
 13512 ;;		_Switch24Hour
 13513 ;;		_LCD_SendString
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           psect	text44,local,class=CODE,delta=2,merge=1,group=0
 13517                           	line	55
 13518                           global __ptext44
 13519                           __ptext44:	;psect for function _LCD_SendData
 13520  1DFE                     psect	text44
 13521                           	file	"LCD.c"
 13522                           	line	55
 13523                           	global	__size_of_LCD_SendData
 13524                           	__size_of_LCD_SendData	equ	__end_of_LCD_SendData-_LCD_SendData
 13525  000F                     	
 13526                           _LCD_SendData:	
 13527  1DFE                     ;incstack = 0
 13528                           	opt	stack 5
 13529                           ; Regs used in _LCD_SendData: [wreg+status,2+status,0+pclath+cstack]
 13530                           ;LCD_SendData@c stored from wreg
 13531                           	movwf	(LCD_SendData@c)
 13532  1DFE  00F0               	line	57
 13533                           	
 13534                           l2789:	
 13535  1DFF                     ;LCD.c: 57:     RA1 = 1;
 13536                           	bcf	status, 5	;RP0=0, select bank0
 13537  1DFF  1283               	bcf	status, 6	;RP1=0, select bank0
 13538  1E00  1303               	bsf	(41/8),(41)&7	;volatile
 13539  1E01  1485               	line	59
 13540                           ;LCD.c: 59:     RA2 = 0;
 13541                           	bcf	(42/8),(42)&7	;volatile
 13542  1E02  1105               	line	61
 13543                           ;LCD.c: 61:     RA3 = 1;
 13544                           	bsf	(43/8),(43)&7	;volatile
 13545  1E03  1585               	line	63
 13546                           	
 13547                           l2791:	
 13548  1E04                     ;LCD.c: 63:     PORTD = c;
 13549                           	movf	(LCD_SendData@c),w
 13550  1E04  0870               	movwf	(8)	;volatile
 13551  1E05  0088               	line	64
 13552                           	
 13553                           l2793:	
 13554  1E06                     ;LCD.c: 64:     RA3 = 0;
 13555                           	bcf	(43/8),(43)&7	;volatile
 13556  1E06  1185               	line	65
 13557                           	
 13558                           l2795:	
 13559  1E07                     ;LCD.c: 65:     LCD_Busy();
 13560                           	fcall	_LCD_Busy
 13561  1E07  160A  158A  2630  160A  158A  	line	66
 13562                           	
 13563                           l517:	
 13564  1E0C                     	return
 13565  1E0C  0008               	opt stack 0
 13566                           GLOBAL	__end_of_LCD_SendData
 13567                           	__end_of_LCD_SendData:
 13568  1E0D                     	signat	_LCD_SendData,4217
 13569                           	global	_LCD_Command
 13570                           
 13571 ;; *************** function _LCD_Command *****************
 13572 ;; Defined at:
 13573 ;;		line 34 in file "LCD.c"
 13574 ;; Parameters:    Size  Location     Type
 13575 ;;  c               1    wreg     unsigned char 
 13576 ;; Auto vars:     Size  Location     Type
 13577 ;;  c               1    0[COMMON] unsigned char 
 13578 ;; Return value:  Size  Location     Type
 13579 ;;                  1    wreg      void 
 13580 ;; Registers used:
 13581 ;;		wreg, status,2, status,0, pclath, cstack
 13582 ;; Tracked objects:
 13583 ;;		On entry : 0/0
 13584 ;;		On exit  : 0/0
 13585 ;;		Unchanged: 0/0
 13586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13587 ;;      Params:         0       0       0       0       0
 13588 ;;      Locals:         1       0       0       0       0
 13589 ;;      Temps:          0       0       0       0       0
 13590 ;;      Totals:         1       0       0       0       0
 13591 ;;Total ram usage:        1 bytes
 13592 ;; Hardware stack levels used:    1
 13593 ;; Hardware stack levels required when called:    1
 13594 ;; This function calls:
 13595 ;;		_LCD_Busy
 13596 ;; This function is called by:
 13597 ;;		_ChangeTrigger
 13598 ;;		_SwapToHeatingDisplay
 13599 ;;		_HeatingControlOff
 13600 ;;		_SoundAlarm
 13601 ;;		_Switch24Hour
 13602 ;;		_DateDayScreen
 13603 ;;		_SetTime
 13604 ;;		_SetDate
 13605 ;;		_main
 13606 ;;		_LCD_SecondLine
 13607 ;; This function uses a non-reentrant model
 13608 ;;
 13609                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
 13610                           	line	34
 13611                           global __ptext45
 13612                           __ptext45:	;psect for function _LCD_Command
 13613  1DEF                     psect	text45
 13614                           	file	"LCD.c"
 13615                           	line	34
 13616                           	global	__size_of_LCD_Command
 13617                           	__size_of_LCD_Command	equ	__end_of_LCD_Command-_LCD_Command
 13618  000F                     	
 13619                           _LCD_Command:	
 13620  1DEF                     ;incstack = 0
 13621                           	opt	stack 5
 13622                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
 13623                           ;LCD_Command@c stored from wreg
 13624                           	movwf	(LCD_Command@c)
 13625  1DEF  00F0               	line	36
 13626                           	
 13627                           l3149:	
 13628  1DF0                     ;LCD.c: 36:     RA1 = 0;
 13629                           	bcf	status, 5	;RP0=0, select bank0
 13630  1DF0  1283               	bcf	status, 6	;RP1=0, select bank0
 13631  1DF1  1303               	bcf	(41/8),(41)&7	;volatile
 13632  1DF2  1085               	line	38
 13633                           ;LCD.c: 38:     RA2 = 0;
 13634                           	bcf	(42/8),(42)&7	;volatile
 13635  1DF3  1105               	line	40
 13636                           ;LCD.c: 40:     RA3 = 1;
 13637                           	bsf	(43/8),(43)&7	;volatile
 13638  1DF4  1585               	line	42
 13639                           	
 13640                           l3151:	
 13641  1DF5                     ;LCD.c: 42:     PORTD = c;
 13642                           	movf	(LCD_Command@c),w
 13643  1DF5  0870               	movwf	(8)	;volatile
 13644  1DF6  0088               	line	43
 13645                           	
 13646                           l3153:	
 13647  1DF7                     ;LCD.c: 43:     RA3 = 0;
 13648                           	bcf	(43/8),(43)&7	;volatile
 13649  1DF7  1185               	line	45
 13650                           	
 13651                           l3155:	
 13652  1DF8                     ;LCD.c: 45:     LCD_Busy();
 13653                           	fcall	_LCD_Busy
 13654  1DF8  160A  158A  2630  160A  158A  	line	46
 13655                           	
 13656                           l511:	
 13657  1DFD                     	return
 13658  1DFD  0008               	opt stack 0
 13659                           GLOBAL	__end_of_LCD_Command
 13660                           	__end_of_LCD_Command:
 13661  1DFE                     	signat	_LCD_Command,4217
 13662                           	global	_LCD_Busy
 13663                           
 13664 ;; *************** function _LCD_Busy *****************
 13665 ;; Defined at:
 13666 ;;		line 6 in file "LCD.c"
 13667 ;; Parameters:    Size  Location     Type
 13668 ;;		None
 13669 ;; Auto vars:     Size  Location     Type
 13670 ;;		None
 13671 ;; Return value:  Size  Location     Type
 13672 ;;                  1    wreg      void 
 13673 ;; Registers used:
 13674 ;;		wreg, status,2
 13675 ;; Tracked objects:
 13676 ;;		On entry : 0/0
 13677 ;;		On exit  : 0/0
 13678 ;;		Unchanged: 0/0
 13679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13680 ;;      Params:         0       0       0       0       0
 13681 ;;      Locals:         0       0       0       0       0
 13682 ;;      Temps:          0       0       0       0       0
 13683 ;;      Totals:         0       0       0       0       0
 13684 ;;Total ram usage:        0 bytes
 13685 ;; Hardware stack levels used:    1
 13686 ;; This function calls:
 13687 ;;		Nothing
 13688 ;; This function is called by:
 13689 ;;		_DisplayTemp
 13690 ;;		_ChangeTrigger
 13691 ;;		_LCD_Command
 13692 ;;		_LCD_SendData
 13693 ;; This function uses a non-reentrant model
 13694 ;;
 13695                           psect	text46,local,class=CODE,delta=2,merge=1,group=0
 13696                           	line	6
 13697                           global __ptext46
 13698                           __ptext46:	;psect for function _LCD_Busy
 13699  1E30                     psect	text46
 13700                           	file	"LCD.c"
 13701                           	line	6
 13702                           	global	__size_of_LCD_Busy
 13703                           	__size_of_LCD_Busy	equ	__end_of_LCD_Busy-_LCD_Busy
 13704  0015                     	
 13705                           _LCD_Busy:	
 13706  1E30                     ;incstack = 0
 13707                           	opt	stack 5
 13708                           ; Regs used in _LCD_Busy: [wreg+status,2]
 13709                           	line	8
 13710                           	
 13711                           l2735:	
 13712  1E30                     ;LCD.c: 8:     TRISD = 0xFF;
 13713                           	movlw	low(0FFh)
 13714  1E30  30FF               	bsf	status, 5	;RP0=1, select bank1
 13715  1E31  1683               	bcf	status, 6	;RP1=0, select bank1
 13716  1E32  1303               	movwf	(136)^080h	;volatile
 13717  1E33  0088               	line	9
 13718                           	
 13719                           l2737:	
 13720  1E34                     ;LCD.c: 9:     RA3 = 1;
 13721                           	bcf	status, 5	;RP0=0, select bank0
 13722  1E34  1283               	bcf	status, 6	;RP1=0, select bank0
 13723  1E35  1303               	bsf	(43/8),(43)&7	;volatile
 13724  1E36  1585               	line	11
 13725                           	
 13726                           l2739:	
 13727  1E37                     ;LCD.c: 11:     RA1 = 0;
 13728                           	bcf	(41/8),(41)&7	;volatile
 13729  1E37  1085               	line	13
 13730                           	
 13731                           l2741:	
 13732  1E38                     ;LCD.c: 13:     RA2 = 1;
 13733                           	bsf	(42/8),(42)&7	;volatile
 13734  1E38  1505               	line	15
 13735                           ;LCD.c: 15:     while(RD7)
 13736                           	goto	l502
 13737  1E39  2E3C               	
 13738                           l503:	
 13739  1E3A                     	line	18
 13740                           ;LCD.c: 16:     {;LCD.c: 18:         RA3 = 0;
 13741                           	bcf	(43/8),(43)&7	;volatile
 13742  1E3A  1185               	line	19
 13743                           ;LCD.c: 19:         RA3 = 1;
 13744                           	bsf	(43/8),(43)&7	;volatile
 13745  1E3B  1585               	line	20
 13746                           ;LCD.c: 20:     }
 13747                           	
 13748                           l502:	
 13749  1E3C                     	line	15
 13750                           ;LCD.c: 15:     while(RD7)
 13751                           	btfsc	(71/8),(71)&7	;volatile
 13752  1E3C  1B88               	goto	u1721
 13753  1E3D  2E3F               	goto	u1720
 13754  1E3E  2E40               u1721:
 13755  1E3F                     	goto	l503
 13756  1E3F  2E3A               u1720:
 13757  1E40                     	goto	l2743
 13758  1E40  2E41               	
 13759                           l504:	
 13760  1E41                     	line	22
 13761                           	
 13762                           l2743:	
 13763  1E41                     ;LCD.c: 22:     TRISD = 0x00;
 13764                           	bsf	status, 5	;RP0=1, select bank1
 13765  1E41  1683               	bcf	status, 6	;RP1=0, select bank1
 13766  1E42  1303               	clrf	(136)^080h	;volatile
 13767  1E43  0188               	line	23
 13768                           	
 13769                           l505:	
 13770  1E44                     	return
 13771  1E44  0008               	opt stack 0
 13772                           GLOBAL	__end_of_LCD_Busy
 13773                           	__end_of_LCD_Busy:
 13774  1E45                     	signat	_LCD_Busy,89
 13775                           	global	_Keypad_Scan
 13776                           
 13777 ;; *************** function _Keypad_Scan *****************
 13778 ;; Defined at:
 13779 ;;		line 17 in file "KeyMatrix.c"
 13780 ;; Parameters:    Size  Location     Type
 13781 ;;		None
 13782 ;; Auto vars:     Size  Location     Type
 13783 ;;		None
 13784 ;; Return value:  Size  Location     Type
 13785 ;;                  2    6[COMMON] int 
 13786 ;; Registers used:
 13787 ;;		wreg, status,2, status,0, pclath, cstack
 13788 ;; Tracked objects:
 13789 ;;		On entry : 0/0
 13790 ;;		On exit  : 0/0
 13791 ;;		Unchanged: 0/0
 13792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13793 ;;      Params:         2       0       0       0       0
 13794 ;;      Locals:         0       0       0       0       0
 13795 ;;      Temps:          0       0       0       0       0
 13796 ;;      Totals:         2       0       0       0       0
 13797 ;;Total ram usage:        2 bytes
 13798 ;; Hardware stack levels used:    1
 13799 ;; Hardware stack levels required when called:    1
 13800 ;; This function calls:
 13801 ;;		_Key_Delay
 13802 ;; This function is called by:
 13803 ;;		_ChangeTrigger
 13804 ;;		_SwapToHeatingDisplay
 13805 ;;		_HeatingControlOff
 13806 ;;		_SoundAlarm
 13807 ;;		_DateDayScreen
 13808 ;;		_SetTime
 13809 ;;		_SetDate
 13810 ;;		_main
 13811 ;; This function uses a non-reentrant model
 13812 ;;
 13813                           psect	text47,local,class=CODE,delta=2,merge=1,group=0
 13814                           	file	"KeyMatrix.c"
 13815                           	line	17
 13816                           global __ptext47
 13817                           __ptext47:	;psect for function _Keypad_Scan
 13818  00DF                     psect	text47
 13819                           	file	"KeyMatrix.c"
 13820                           	line	17
 13821                           	global	__size_of_Keypad_Scan
 13822                           	__size_of_Keypad_Scan	equ	__end_of_Keypad_Scan-_Keypad_Scan
 13823  01C7                     	
 13824                           _Keypad_Scan:	
 13825  00DF                     ;incstack = 0
 13826                           	opt	stack 5
 13827                           ; Regs used in _Keypad_Scan: [wreg+status,2+status,0+pclath+cstack]
 13828                           	line	19
 13829                           	
 13830                           l3215:	
 13831  00DF                     ;KeyMatrix.c: 19:     RC4 = 1; RC5 = 0; RC6 = 0; RC7 = 0;
 13832                           	bcf	status, 5	;RP0=0, select bank0
 13833  00DF  1283               	bcf	status, 6	;RP1=0, select bank0
 13834  00E0  1303               	bsf	(60/8),(60)&7	;volatile
 13835  00E1  1607               	bcf	(61/8),(61)&7	;volatile
 13836  00E2  1287               	bcf	(62/8),(62)&7	;volatile
 13837  00E3  1307               	bcf	(63/8),(63)&7	;volatile
 13838  00E4  1387               	line	20
 13839                           ;KeyMatrix.c: 20:     if(RC3 == 1)
 13840                           	btfss	(59/8),(59)&7	;volatile
 13841  00E5  1D87               	goto	u2441
 13842  00E6  28E8               	goto	u2440
 13843  00E7  28E9               u2441:
 13844  00E8                     	goto	l419
 13845  00E8  2900               u2440:
 13846  00E9                     	line	22
 13847                           	
 13848                           l3217:	
 13849  00E9                     ;KeyMatrix.c: 21:     {;KeyMatrix.c: 22:         Key_Delay(50);
 13850                           	movlw	032h
 13851  00E9  3032               	movwf	(Key_Delay@k)
 13852  00EA  00F0               	movlw	0
 13853  00EB  3000               	movwf	((Key_Delay@k))+1
 13854  00EC  00F1               	fcall	_Key_Delay
 13855  00ED  160A  118A  2111  120A  118A  	line	23
 13856                           ;KeyMatrix.c: 23:         while(RC3 == 1)
 13857                           	goto	l420
 13858  00F2  28F9               	
 13859                           l421:	
 13860  00F3                     	line	24
 13861                           	
 13862                           l3219:	
 13863  00F3                     ;KeyMatrix.c: 24:             return 1;
 13864                           	movlw	01h
 13865  00F3  3001               	movwf	(?_Keypad_Scan)
 13866  00F4  00F6               	movlw	0
 13867  00F5  3000               	movwf	((?_Keypad_Scan))+1
 13868  00F6  00F7               	goto	l422
 13869  00F7  2AA5               	
 13870                           l3221:	
 13871  00F8                     	goto	l422
 13872  00F8  2AA5               	
 13873                           l420:	
 13874  00F9                     	line	23
 13875                           ;KeyMatrix.c: 23:         while(RC3 == 1)
 13876                           	bcf	status, 5	;RP0=0, select bank0
 13877  00F9  1283               	bcf	status, 6	;RP1=0, select bank0
 13878  00FA  1303               	btfsc	(59/8),(59)&7	;volatile
 13879  00FB  1987               	goto	u2451
 13880  00FC  28FE               	goto	u2450
 13881  00FD  28FF               u2451:
 13882  00FE                     	goto	l3219
 13883  00FE  28F3               u2450:
 13884  00FF                     	goto	l419
 13885  00FF  2900               	
 13886                           l423:	
 13887  0100                     	line	25
 13888                           ;KeyMatrix.c: 25:     }
 13889                           	
 13890                           l419:	
 13891  0100                     	line	26
 13892                           ;KeyMatrix.c: 26:     if(RC2 == 1)
 13893                           	btfss	(58/8),(58)&7	;volatile
 13894  0100  1D07               	goto	u2461
 13895  0101  2903               	goto	u2460
 13896  0102  2904               u2461:
 13897  0103                     	goto	l424
 13898  0103  291B               u2460:
 13899  0104                     	line	28
 13900                           	
 13901                           l3223:	
 13902  0104                     ;KeyMatrix.c: 27:     {;KeyMatrix.c: 28:        Key_Delay(50);
 13903                           	movlw	032h
 13904  0104  3032               	movwf	(Key_Delay@k)
 13905  0105  00F0               	movlw	0
 13906  0106  3000               	movwf	((Key_Delay@k))+1
 13907  0107  00F1               	fcall	_Key_Delay
 13908  0108  160A  118A  2111  120A  118A  	line	29
 13909                           ;KeyMatrix.c: 29:        while(RC2 == 1)
 13910                           	goto	l425
 13911  010D  2914               	
 13912                           l426:	
 13913  010E                     	line	30
 13914                           	
 13915                           l3225:	
 13916  010E                     ;KeyMatrix.c: 30:             return 2;
 13917                           	movlw	02h
 13918  010E  3002               	movwf	(?_Keypad_Scan)
 13919  010F  00F6               	movlw	0
 13920  0110  3000               	movwf	((?_Keypad_Scan))+1
 13921  0111  00F7               	goto	l422
 13922  0112  2AA5               	
 13923                           l3227:	
 13924  0113                     	goto	l422
 13925  0113  2AA5               	
 13926                           l425:	
 13927  0114                     	line	29
 13928                           ;KeyMatrix.c: 29:        while(RC2 == 1)
 13929                           	bcf	status, 5	;RP0=0, select bank0
 13930  0114  1283               	bcf	status, 6	;RP1=0, select bank0
 13931  0115  1303               	btfsc	(58/8),(58)&7	;volatile
 13932  0116  1907               	goto	u2471
 13933  0117  2919               	goto	u2470
 13934  0118  291A               u2471:
 13935  0119                     	goto	l3225
 13936  0119  290E               u2470:
 13937  011A                     	goto	l424
 13938  011A  291B               	
 13939                           l427:	
 13940  011B                     	line	31
 13941                           ;KeyMatrix.c: 31:     }
 13942                           	
 13943                           l424:	
 13944  011B                     	line	32
 13945                           ;KeyMatrix.c: 32:     if(RC1 == 1)
 13946                           	btfss	(57/8),(57)&7	;volatile
 13947  011B  1C87               	goto	u2481
 13948  011C  291E               	goto	u2480
 13949  011D  291F               u2481:
 13950  011E                     	goto	l428
 13951  011E  2936               u2480:
 13952  011F                     	line	34
 13953                           	
 13954                           l3229:	
 13955  011F                     ;KeyMatrix.c: 33:     {;KeyMatrix.c: 34:         Key_Delay(50);
 13956                           	movlw	032h
 13957  011F  3032               	movwf	(Key_Delay@k)
 13958  0120  00F0               	movlw	0
 13959  0121  3000               	movwf	((Key_Delay@k))+1
 13960  0122  00F1               	fcall	_Key_Delay
 13961  0123  160A  118A  2111  120A  118A  	line	35
 13962                           ;KeyMatrix.c: 35:         while(RC1 == 1)
 13963                           	goto	l429
 13964  0128  292F               	
 13965                           l430:	
 13966  0129                     	line	36
 13967                           	
 13968                           l3231:	
 13969  0129                     ;KeyMatrix.c: 36:             return 3;
 13970                           	movlw	03h
 13971  0129  3003               	movwf	(?_Keypad_Scan)
 13972  012A  00F6               	movlw	0
 13973  012B  3000               	movwf	((?_Keypad_Scan))+1
 13974  012C  00F7               	goto	l422
 13975  012D  2AA5               	
 13976                           l3233:	
 13977  012E                     	goto	l422
 13978  012E  2AA5               	
 13979                           l429:	
 13980  012F                     	line	35
 13981                           ;KeyMatrix.c: 35:         while(RC1 == 1)
 13982                           	bcf	status, 5	;RP0=0, select bank0
 13983  012F  1283               	bcf	status, 6	;RP1=0, select bank0
 13984  0130  1303               	btfsc	(57/8),(57)&7	;volatile
 13985  0131  1887               	goto	u2491
 13986  0132  2934               	goto	u2490
 13987  0133  2935               u2491:
 13988  0134                     	goto	l3231
 13989  0134  2929               u2490:
 13990  0135                     	goto	l428
 13991  0135  2936               	
 13992                           l431:	
 13993  0136                     	line	37
 13994                           ;KeyMatrix.c: 37:     }
 13995                           	
 13996                           l428:	
 13997  0136                     	line	38
 13998                           ;KeyMatrix.c: 38:     if(RC0 == 1)
 13999                           	btfss	(56/8),(56)&7	;volatile
 14000  0136  1C07               	goto	u2501
 14001  0137  2939               	goto	u2500
 14002  0138  293A               u2501:
 14003  0139                     	goto	l432
 14004  0139  2951               u2500:
 14005  013A                     	line	40
 14006                           	
 14007                           l3235:	
 14008  013A                     ;KeyMatrix.c: 39:     {;KeyMatrix.c: 40:         Key_Delay(50);
 14009                           	movlw	032h
 14010  013A  3032               	movwf	(Key_Delay@k)
 14011  013B  00F0               	movlw	0
 14012  013C  3000               	movwf	((Key_Delay@k))+1
 14013  013D  00F1               	fcall	_Key_Delay
 14014  013E  160A  118A  2111  120A  118A  	line	41
 14015                           ;KeyMatrix.c: 41:         while(RC0 == 1)
 14016                           	goto	l433
 14017  0143  294A               	
 14018                           l434:	
 14019  0144                     	line	42
 14020                           	
 14021                           l3237:	
 14022  0144                     ;KeyMatrix.c: 42:             return 4;
 14023                           	movlw	04h
 14024  0144  3004               	movwf	(?_Keypad_Scan)
 14025  0145  00F6               	movlw	0
 14026  0146  3000               	movwf	((?_Keypad_Scan))+1
 14027  0147  00F7               	goto	l422
 14028  0148  2AA5               	
 14029                           l3239:	
 14030  0149                     	goto	l422
 14031  0149  2AA5               	
 14032                           l433:	
 14033  014A                     	line	41
 14034                           ;KeyMatrix.c: 41:         while(RC0 == 1)
 14035                           	bcf	status, 5	;RP0=0, select bank0
 14036  014A  1283               	bcf	status, 6	;RP1=0, select bank0
 14037  014B  1303               	btfsc	(56/8),(56)&7	;volatile
 14038  014C  1807               	goto	u2511
 14039  014D  294F               	goto	u2510
 14040  014E  2950               u2511:
 14041  014F                     	goto	l3237
 14042  014F  2944               u2510:
 14043  0150                     	goto	l432
 14044  0150  2951               	
 14045                           l435:	
 14046  0151                     	line	43
 14047                           ;KeyMatrix.c: 43:     }
 14048                           	
 14049                           l432:	
 14050  0151                     	line	44
 14051                           ;KeyMatrix.c: 44:     RC4 = 0; RC5 = 1; RC6 = 0; RC7 = 0;
 14052                           	bcf	(60/8),(60)&7	;volatile
 14053  0151  1207               	bsf	(61/8),(61)&7	;volatile
 14054  0152  1687               	bcf	(62/8),(62)&7	;volatile
 14055  0153  1307               	bcf	(63/8),(63)&7	;volatile
 14056  0154  1387               	line	45
 14057                           ;KeyMatrix.c: 45:     if(RC3 == 1)
 14058                           	btfss	(59/8),(59)&7	;volatile
 14059  0155  1D87               	goto	u2521
 14060  0156  2958               	goto	u2520
 14061  0157  2959               u2521:
 14062  0158                     	goto	l436
 14063  0158  2970               u2520:
 14064  0159                     	line	47
 14065                           	
 14066                           l3241:	
 14067  0159                     ;KeyMatrix.c: 46:     {;KeyMatrix.c: 47:         Key_Delay(50);
 14068                           	movlw	032h
 14069  0159  3032               	movwf	(Key_Delay@k)
 14070  015A  00F0               	movlw	0
 14071  015B  3000               	movwf	((Key_Delay@k))+1
 14072  015C  00F1               	fcall	_Key_Delay
 14073  015D  160A  118A  2111  120A  118A  	line	48
 14074                           ;KeyMatrix.c: 48:         while(RC3 == 1)
 14075                           	goto	l437
 14076  0162  2969               	
 14077                           l438:	
 14078  0163                     	line	49
 14079                           	
 14080                           l3243:	
 14081  0163                     ;KeyMatrix.c: 49:             return 5;
 14082                           	movlw	05h
 14083  0163  3005               	movwf	(?_Keypad_Scan)
 14084  0164  00F6               	movlw	0
 14085  0165  3000               	movwf	((?_Keypad_Scan))+1
 14086  0166  00F7               	goto	l422
 14087  0167  2AA5               	
 14088                           l3245:	
 14089  0168                     	goto	l422
 14090  0168  2AA5               	
 14091                           l437:	
 14092  0169                     	line	48
 14093                           ;KeyMatrix.c: 48:         while(RC3 == 1)
 14094                           	bcf	status, 5	;RP0=0, select bank0
 14095  0169  1283               	bcf	status, 6	;RP1=0, select bank0
 14096  016A  1303               	btfsc	(59/8),(59)&7	;volatile
 14097  016B  1987               	goto	u2531
 14098  016C  296E               	goto	u2530
 14099  016D  296F               u2531:
 14100  016E                     	goto	l3243
 14101  016E  2963               u2530:
 14102  016F                     	goto	l436
 14103  016F  2970               	
 14104                           l439:	
 14105  0170                     	line	50
 14106                           ;KeyMatrix.c: 50:     }
 14107                           	
 14108                           l436:	
 14109  0170                     	line	51
 14110                           ;KeyMatrix.c: 51:     if(RC2 == 1)
 14111                           	btfss	(58/8),(58)&7	;volatile
 14112  0170  1D07               	goto	u2541
 14113  0171  2973               	goto	u2540
 14114  0172  2974               u2541:
 14115  0173                     	goto	l440
 14116  0173  298B               u2540:
 14117  0174                     	line	53
 14118                           	
 14119                           l3247:	
 14120  0174                     ;KeyMatrix.c: 52:     {;KeyMatrix.c: 53:         Key_Delay(50);
 14121                           	movlw	032h
 14122  0174  3032               	movwf	(Key_Delay@k)
 14123  0175  00F0               	movlw	0
 14124  0176  3000               	movwf	((Key_Delay@k))+1
 14125  0177  00F1               	fcall	_Key_Delay
 14126  0178  160A  118A  2111  120A  118A  	line	54
 14127                           ;KeyMatrix.c: 54:         while(RC2 == 1)
 14128                           	goto	l441
 14129  017D  2984               	
 14130                           l442:	
 14131  017E                     	line	55
 14132                           	
 14133                           l3249:	
 14134  017E                     ;KeyMatrix.c: 55:             return 6;
 14135                           	movlw	06h
 14136  017E  3006               	movwf	(?_Keypad_Scan)
 14137  017F  00F6               	movlw	0
 14138  0180  3000               	movwf	((?_Keypad_Scan))+1
 14139  0181  00F7               	goto	l422
 14140  0182  2AA5               	
 14141                           l3251:	
 14142  0183                     	goto	l422
 14143  0183  2AA5               	
 14144                           l441:	
 14145  0184                     	line	54
 14146                           ;KeyMatrix.c: 54:         while(RC2 == 1)
 14147                           	bcf	status, 5	;RP0=0, select bank0
 14148  0184  1283               	bcf	status, 6	;RP1=0, select bank0
 14149  0185  1303               	btfsc	(58/8),(58)&7	;volatile
 14150  0186  1907               	goto	u2551
 14151  0187  2989               	goto	u2550
 14152  0188  298A               u2551:
 14153  0189                     	goto	l3249
 14154  0189  297E               u2550:
 14155  018A                     	goto	l440
 14156  018A  298B               	
 14157                           l443:	
 14158  018B                     	line	56
 14159                           ;KeyMatrix.c: 56:     }
 14160                           	
 14161                           l440:	
 14162  018B                     	line	57
 14163                           ;KeyMatrix.c: 57:     if(RC1 == 1)
 14164                           	btfss	(57/8),(57)&7	;volatile
 14165  018B  1C87               	goto	u2561
 14166  018C  298E               	goto	u2560
 14167  018D  298F               u2561:
 14168  018E                     	goto	l444
 14169  018E  29A6               u2560:
 14170  018F                     	line	59
 14171                           	
 14172                           l3253:	
 14173  018F                     ;KeyMatrix.c: 58:     {;KeyMatrix.c: 59:         Key_Delay(50);
 14174                           	movlw	032h
 14175  018F  3032               	movwf	(Key_Delay@k)
 14176  0190  00F0               	movlw	0
 14177  0191  3000               	movwf	((Key_Delay@k))+1
 14178  0192  00F1               	fcall	_Key_Delay
 14179  0193  160A  118A  2111  120A  118A  	line	60
 14180                           ;KeyMatrix.c: 60:         while(RC1 == 1)
 14181                           	goto	l445
 14182  0198  299F               	
 14183                           l446:	
 14184  0199                     	line	61
 14185                           	
 14186                           l3255:	
 14187  0199                     ;KeyMatrix.c: 61:             return 7;
 14188                           	movlw	07h
 14189  0199  3007               	movwf	(?_Keypad_Scan)
 14190  019A  00F6               	movlw	0
 14191  019B  3000               	movwf	((?_Keypad_Scan))+1
 14192  019C  00F7               	goto	l422
 14193  019D  2AA5               	
 14194                           l3257:	
 14195  019E                     	goto	l422
 14196  019E  2AA5               	
 14197                           l445:	
 14198  019F                     	line	60
 14199                           ;KeyMatrix.c: 60:         while(RC1 == 1)
 14200                           	bcf	status, 5	;RP0=0, select bank0
 14201  019F  1283               	bcf	status, 6	;RP1=0, select bank0
 14202  01A0  1303               	btfsc	(57/8),(57)&7	;volatile
 14203  01A1  1887               	goto	u2571
 14204  01A2  29A4               	goto	u2570
 14205  01A3  29A5               u2571:
 14206  01A4                     	goto	l3255
 14207  01A4  2999               u2570:
 14208  01A5                     	goto	l444
 14209  01A5  29A6               	
 14210                           l447:	
 14211  01A6                     	line	62
 14212                           ;KeyMatrix.c: 62:     }
 14213                           	
 14214                           l444:	
 14215  01A6                     	line	63
 14216                           ;KeyMatrix.c: 63:     if(RC0 == 1)
 14217                           	btfss	(56/8),(56)&7	;volatile
 14218  01A6  1C07               	goto	u2581
 14219  01A7  29A9               	goto	u2580
 14220  01A8  29AA               u2581:
 14221  01A9                     	goto	l448
 14222  01A9  29C1               u2580:
 14223  01AA                     	line	65
 14224                           	
 14225                           l3259:	
 14226  01AA                     ;KeyMatrix.c: 64:     {;KeyMatrix.c: 65:         Key_Delay(50);
 14227                           	movlw	032h
 14228  01AA  3032               	movwf	(Key_Delay@k)
 14229  01AB  00F0               	movlw	0
 14230  01AC  3000               	movwf	((Key_Delay@k))+1
 14231  01AD  00F1               	fcall	_Key_Delay
 14232  01AE  160A  118A  2111  120A  118A  	line	66
 14233                           ;KeyMatrix.c: 66:         while(RC0 == 1)
 14234                           	goto	l449
 14235  01B3  29BA               	
 14236                           l450:	
 14237  01B4                     	line	67
 14238                           	
 14239                           l3261:	
 14240  01B4                     ;KeyMatrix.c: 67:             return 8;
 14241                           	movlw	08h
 14242  01B4  3008               	movwf	(?_Keypad_Scan)
 14243  01B5  00F6               	movlw	0
 14244  01B6  3000               	movwf	((?_Keypad_Scan))+1
 14245  01B7  00F7               	goto	l422
 14246  01B8  2AA5               	
 14247                           l3263:	
 14248  01B9                     	goto	l422
 14249  01B9  2AA5               	
 14250                           l449:	
 14251  01BA                     	line	66
 14252                           ;KeyMatrix.c: 66:         while(RC0 == 1)
 14253                           	bcf	status, 5	;RP0=0, select bank0
 14254  01BA  1283               	bcf	status, 6	;RP1=0, select bank0
 14255  01BB  1303               	btfsc	(56/8),(56)&7	;volatile
 14256  01BC  1807               	goto	u2591
 14257  01BD  29BF               	goto	u2590
 14258  01BE  29C0               u2591:
 14259  01BF                     	goto	l3261
 14260  01BF  29B4               u2590:
 14261  01C0                     	goto	l448
 14262  01C0  29C1               	
 14263                           l451:	
 14264  01C1                     	line	68
 14265                           ;KeyMatrix.c: 68:     }
 14266                           	
 14267                           l448:	
 14268  01C1                     	line	69
 14269                           ;KeyMatrix.c: 69:     RC4 = 0; RC5 = 0; RC6 = 1; RC7 = 0;
 14270                           	bcf	(60/8),(60)&7	;volatile
 14271  01C1  1207               	bcf	(61/8),(61)&7	;volatile
 14272  01C2  1287               	bsf	(62/8),(62)&7	;volatile
 14273  01C3  1707               	bcf	(63/8),(63)&7	;volatile
 14274  01C4  1387               	line	70
 14275                           ;KeyMatrix.c: 70:     if(RC3 == 1)
 14276                           	btfss	(59/8),(59)&7	;volatile
 14277  01C5  1D87               	goto	u2601
 14278  01C6  29C8               	goto	u2600
 14279  01C7  29C9               u2601:
 14280  01C8                     	goto	l452
 14281  01C8  29E0               u2600:
 14282  01C9                     	line	72
 14283                           	
 14284                           l3265:	
 14285  01C9                     ;KeyMatrix.c: 71:     {;KeyMatrix.c: 72:         Key_Delay(50);
 14286                           	movlw	032h
 14287  01C9  3032               	movwf	(Key_Delay@k)
 14288  01CA  00F0               	movlw	0
 14289  01CB  3000               	movwf	((Key_Delay@k))+1
 14290  01CC  00F1               	fcall	_Key_Delay
 14291  01CD  160A  118A  2111  120A  118A  	line	73
 14292                           ;KeyMatrix.c: 73:         while(RC3 == 1)
 14293                           	goto	l453
 14294  01D2  29D9               	
 14295                           l454:	
 14296  01D3                     	line	74
 14297                           	
 14298                           l3267:	
 14299  01D3                     ;KeyMatrix.c: 74:             return 9;
 14300                           	movlw	09h
 14301  01D3  3009               	movwf	(?_Keypad_Scan)
 14302  01D4  00F6               	movlw	0
 14303  01D5  3000               	movwf	((?_Keypad_Scan))+1
 14304  01D6  00F7               	goto	l422
 14305  01D7  2AA5               	
 14306                           l3269:	
 14307  01D8                     	goto	l422
 14308  01D8  2AA5               	
 14309                           l453:	
 14310  01D9                     	line	73
 14311                           ;KeyMatrix.c: 73:         while(RC3 == 1)
 14312                           	bcf	status, 5	;RP0=0, select bank0
 14313  01D9  1283               	bcf	status, 6	;RP1=0, select bank0
 14314  01DA  1303               	btfsc	(59/8),(59)&7	;volatile
 14315  01DB  1987               	goto	u2611
 14316  01DC  29DE               	goto	u2610
 14317  01DD  29DF               u2611:
 14318  01DE                     	goto	l3267
 14319  01DE  29D3               u2610:
 14320  01DF                     	goto	l452
 14321  01DF  29E0               	
 14322                           l455:	
 14323  01E0                     	line	75
 14324                           ;KeyMatrix.c: 75:     }
 14325                           	
 14326                           l452:	
 14327  01E0                     	line	76
 14328                           ;KeyMatrix.c: 76:     if(RC2 == 1)
 14329                           	btfss	(58/8),(58)&7	;volatile
 14330  01E0  1D07               	goto	u2621
 14331  01E1  29E3               	goto	u2620
 14332  01E2  29E4               u2621:
 14333  01E3                     	goto	l456
 14334  01E3  29FB               u2620:
 14335  01E4                     	line	78
 14336                           	
 14337                           l3271:	
 14338  01E4                     ;KeyMatrix.c: 77:     {;KeyMatrix.c: 78:         Key_Delay(50);
 14339                           	movlw	032h
 14340  01E4  3032               	movwf	(Key_Delay@k)
 14341  01E5  00F0               	movlw	0
 14342  01E6  3000               	movwf	((Key_Delay@k))+1
 14343  01E7  00F1               	fcall	_Key_Delay
 14344  01E8  160A  118A  2111  120A  118A  	line	79
 14345                           ;KeyMatrix.c: 79:         while(RC2 == 1)
 14346                           	goto	l457
 14347  01ED  29F4               	
 14348                           l458:	
 14349  01EE                     	line	80
 14350                           	
 14351                           l3273:	
 14352  01EE                     ;KeyMatrix.c: 80:             return 10;
 14353                           	movlw	0Ah
 14354  01EE  300A               	movwf	(?_Keypad_Scan)
 14355  01EF  00F6               	movlw	0
 14356  01F0  3000               	movwf	((?_Keypad_Scan))+1
 14357  01F1  00F7               	goto	l422
 14358  01F2  2AA5               	
 14359                           l3275:	
 14360  01F3                     	goto	l422
 14361  01F3  2AA5               	
 14362                           l457:	
 14363  01F4                     	line	79
 14364                           ;KeyMatrix.c: 79:         while(RC2 == 1)
 14365                           	bcf	status, 5	;RP0=0, select bank0
 14366  01F4  1283               	bcf	status, 6	;RP1=0, select bank0
 14367  01F5  1303               	btfsc	(58/8),(58)&7	;volatile
 14368  01F6  1907               	goto	u2631
 14369  01F7  29F9               	goto	u2630
 14370  01F8  29FA               u2631:
 14371  01F9                     	goto	l3273
 14372  01F9  29EE               u2630:
 14373  01FA                     	goto	l456
 14374  01FA  29FB               	
 14375                           l459:	
 14376  01FB                     	line	81
 14377                           ;KeyMatrix.c: 81:     }
 14378                           	
 14379                           l456:	
 14380  01FB                     	line	82
 14381                           ;KeyMatrix.c: 82:     if(RC1 == 1)
 14382                           	btfss	(57/8),(57)&7	;volatile
 14383  01FB  1C87               	goto	u2641
 14384  01FC  29FE               	goto	u2640
 14385  01FD  29FF               u2641:
 14386  01FE                     	goto	l460
 14387  01FE  2A16               u2640:
 14388  01FF                     	line	84
 14389                           	
 14390                           l3277:	
 14391  01FF                     ;KeyMatrix.c: 83:     {;KeyMatrix.c: 84:         Key_Delay(50);
 14392                           	movlw	032h
 14393  01FF  3032               	movwf	(Key_Delay@k)
 14394  0200  00F0               	movlw	0
 14395  0201  3000               	movwf	((Key_Delay@k))+1
 14396  0202  00F1               	fcall	_Key_Delay
 14397  0203  160A  118A  2111  120A  118A  	line	85
 14398                           ;KeyMatrix.c: 85:         while(RC1 == 1)
 14399                           	goto	l461
 14400  0208  2A0F               	
 14401                           l462:	
 14402  0209                     	line	86
 14403                           	
 14404                           l3279:	
 14405  0209                     ;KeyMatrix.c: 86:             return 11;
 14406                           	movlw	0Bh
 14407  0209  300B               	movwf	(?_Keypad_Scan)
 14408  020A  00F6               	movlw	0
 14409  020B  3000               	movwf	((?_Keypad_Scan))+1
 14410  020C  00F7               	goto	l422
 14411  020D  2AA5               	
 14412                           l3281:	
 14413  020E                     	goto	l422
 14414  020E  2AA5               	
 14415                           l461:	
 14416  020F                     	line	85
 14417                           ;KeyMatrix.c: 85:         while(RC1 == 1)
 14418                           	bcf	status, 5	;RP0=0, select bank0
 14419  020F  1283               	bcf	status, 6	;RP1=0, select bank0
 14420  0210  1303               	btfsc	(57/8),(57)&7	;volatile
 14421  0211  1887               	goto	u2651
 14422  0212  2A14               	goto	u2650
 14423  0213  2A15               u2651:
 14424  0214                     	goto	l3279
 14425  0214  2A09               u2650:
 14426  0215                     	goto	l460
 14427  0215  2A16               	
 14428                           l463:	
 14429  0216                     	line	87
 14430                           ;KeyMatrix.c: 87:     }
 14431                           	
 14432                           l460:	
 14433  0216                     	line	88
 14434                           ;KeyMatrix.c: 88:     if(RC0 == 1)
 14435                           	btfss	(56/8),(56)&7	;volatile
 14436  0216  1C07               	goto	u2661
 14437  0217  2A19               	goto	u2660
 14438  0218  2A1A               u2661:
 14439  0219                     	goto	l464
 14440  0219  2A31               u2660:
 14441  021A                     	line	90
 14442                           	
 14443                           l3283:	
 14444  021A                     ;KeyMatrix.c: 89:     {;KeyMatrix.c: 90:         Key_Delay(50);
 14445                           	movlw	032h
 14446  021A  3032               	movwf	(Key_Delay@k)
 14447  021B  00F0               	movlw	0
 14448  021C  3000               	movwf	((Key_Delay@k))+1
 14449  021D  00F1               	fcall	_Key_Delay
 14450  021E  160A  118A  2111  120A  118A  	line	91
 14451                           ;KeyMatrix.c: 91:         while(RC0 == 1)
 14452                           	goto	l465
 14453  0223  2A2A               	
 14454                           l466:	
 14455  0224                     	line	92
 14456                           	
 14457                           l3285:	
 14458  0224                     ;KeyMatrix.c: 92:             return 12;
 14459                           	movlw	0Ch
 14460  0224  300C               	movwf	(?_Keypad_Scan)
 14461  0225  00F6               	movlw	0
 14462  0226  3000               	movwf	((?_Keypad_Scan))+1
 14463  0227  00F7               	goto	l422
 14464  0228  2AA5               	
 14465                           l3287:	
 14466  0229                     	goto	l422
 14467  0229  2AA5               	
 14468                           l465:	
 14469  022A                     	line	91
 14470                           ;KeyMatrix.c: 91:         while(RC0 == 1)
 14471                           	bcf	status, 5	;RP0=0, select bank0
 14472  022A  1283               	bcf	status, 6	;RP1=0, select bank0
 14473  022B  1303               	btfsc	(56/8),(56)&7	;volatile
 14474  022C  1807               	goto	u2671
 14475  022D  2A2F               	goto	u2670
 14476  022E  2A30               u2671:
 14477  022F                     	goto	l3285
 14478  022F  2A24               u2670:
 14479  0230                     	goto	l464
 14480  0230  2A31               	
 14481                           l467:	
 14482  0231                     	line	93
 14483                           ;KeyMatrix.c: 93:     }
 14484                           	
 14485                           l464:	
 14486  0231                     	line	94
 14487                           ;KeyMatrix.c: 94:     RC4 = 0; RC5 = 0; RC6 = 0; RC7 = 1;
 14488                           	bcf	(60/8),(60)&7	;volatile
 14489  0231  1207               	bcf	(61/8),(61)&7	;volatile
 14490  0232  1287               	bcf	(62/8),(62)&7	;volatile
 14491  0233  1307               	bsf	(63/8),(63)&7	;volatile
 14492  0234  1787               	line	95
 14493                           ;KeyMatrix.c: 95:     if(RC3 == 1)
 14494                           	btfss	(59/8),(59)&7	;volatile
 14495  0235  1D87               	goto	u2681
 14496  0236  2A38               	goto	u2680
 14497  0237  2A39               u2681:
 14498  0238                     	goto	l468
 14499  0238  2A50               u2680:
 14500  0239                     	line	97
 14501                           	
 14502                           l3289:	
 14503  0239                     ;KeyMatrix.c: 96:     {;KeyMatrix.c: 97:         Key_Delay(50);
 14504                           	movlw	032h
 14505  0239  3032               	movwf	(Key_Delay@k)
 14506  023A  00F0               	movlw	0
 14507  023B  3000               	movwf	((Key_Delay@k))+1
 14508  023C  00F1               	fcall	_Key_Delay
 14509  023D  160A  118A  2111  120A  118A  	line	98
 14510                           ;KeyMatrix.c: 98:         while(RC3 == 1)
 14511                           	goto	l469
 14512  0242  2A49               	
 14513                           l470:	
 14514  0243                     	line	99
 14515                           	
 14516                           l3291:	
 14517  0243                     ;KeyMatrix.c: 99:             return 13;
 14518                           	movlw	0Dh
 14519  0243  300D               	movwf	(?_Keypad_Scan)
 14520  0244  00F6               	movlw	0
 14521  0245  3000               	movwf	((?_Keypad_Scan))+1
 14522  0246  00F7               	goto	l422
 14523  0247  2AA5               	
 14524                           l3293:	
 14525  0248                     	goto	l422
 14526  0248  2AA5               	
 14527                           l469:	
 14528  0249                     	line	98
 14529                           ;KeyMatrix.c: 98:         while(RC3 == 1)
 14530                           	bcf	status, 5	;RP0=0, select bank0
 14531  0249  1283               	bcf	status, 6	;RP1=0, select bank0
 14532  024A  1303               	btfsc	(59/8),(59)&7	;volatile
 14533  024B  1987               	goto	u2691
 14534  024C  2A4E               	goto	u2690
 14535  024D  2A4F               u2691:
 14536  024E                     	goto	l3291
 14537  024E  2A43               u2690:
 14538  024F                     	goto	l468
 14539  024F  2A50               	
 14540                           l471:	
 14541  0250                     	line	100
 14542                           ;KeyMatrix.c: 100:     }
 14543                           	
 14544                           l468:	
 14545  0250                     	line	101
 14546                           ;KeyMatrix.c: 101:     if(RC2 == 1)
 14547                           	btfss	(58/8),(58)&7	;volatile
 14548  0250  1D07               	goto	u2701
 14549  0251  2A53               	goto	u2700
 14550  0252  2A54               u2701:
 14551  0253                     	goto	l472
 14552  0253  2A6B               u2700:
 14553  0254                     	line	103
 14554                           	
 14555                           l3295:	
 14556  0254                     ;KeyMatrix.c: 102:     {;KeyMatrix.c: 103:         Key_Delay(50);
 14557                           	movlw	032h
 14558  0254  3032               	movwf	(Key_Delay@k)
 14559  0255  00F0               	movlw	0
 14560  0256  3000               	movwf	((Key_Delay@k))+1
 14561  0257  00F1               	fcall	_Key_Delay
 14562  0258  160A  118A  2111  120A  118A  	line	104
 14563                           ;KeyMatrix.c: 104:         while(RC2 == 1)
 14564                           	goto	l473
 14565  025D  2A64               	
 14566                           l474:	
 14567  025E                     	line	105
 14568                           	
 14569                           l3297:	
 14570  025E                     ;KeyMatrix.c: 105:             return 14;
 14571                           	movlw	0Eh
 14572  025E  300E               	movwf	(?_Keypad_Scan)
 14573  025F  00F6               	movlw	0
 14574  0260  3000               	movwf	((?_Keypad_Scan))+1
 14575  0261  00F7               	goto	l422
 14576  0262  2AA5               	
 14577                           l3299:	
 14578  0263                     	goto	l422
 14579  0263  2AA5               	
 14580                           l473:	
 14581  0264                     	line	104
 14582                           ;KeyMatrix.c: 104:         while(RC2 == 1)
 14583                           	bcf	status, 5	;RP0=0, select bank0
 14584  0264  1283               	bcf	status, 6	;RP1=0, select bank0
 14585  0265  1303               	btfsc	(58/8),(58)&7	;volatile
 14586  0266  1907               	goto	u2711
 14587  0267  2A69               	goto	u2710
 14588  0268  2A6A               u2711:
 14589  0269                     	goto	l3297
 14590  0269  2A5E               u2710:
 14591  026A                     	goto	l472
 14592  026A  2A6B               	
 14593                           l475:	
 14594  026B                     	line	106
 14595                           ;KeyMatrix.c: 106:     }
 14596                           	
 14597                           l472:	
 14598  026B                     	line	107
 14599                           ;KeyMatrix.c: 107:     if(RC1 == 1)
 14600                           	btfss	(57/8),(57)&7	;volatile
 14601  026B  1C87               	goto	u2721
 14602  026C  2A6E               	goto	u2720
 14603  026D  2A6F               u2721:
 14604  026E                     	goto	l476
 14605  026E  2A86               u2720:
 14606  026F                     	line	109
 14607                           	
 14608                           l3301:	
 14609  026F                     ;KeyMatrix.c: 108:     {;KeyMatrix.c: 109:         Key_Delay(50);
 14610                           	movlw	032h
 14611  026F  3032               	movwf	(Key_Delay@k)
 14612  0270  00F0               	movlw	0
 14613  0271  3000               	movwf	((Key_Delay@k))+1
 14614  0272  00F1               	fcall	_Key_Delay
 14615  0273  160A  118A  2111  120A  118A  	line	110
 14616                           ;KeyMatrix.c: 110:         while(RC1 == 1)
 14617                           	goto	l477
 14618  0278  2A7F               	
 14619                           l478:	
 14620  0279                     	line	111
 14621                           	
 14622                           l3303:	
 14623  0279                     ;KeyMatrix.c: 111:             return 15;
 14624                           	movlw	0Fh
 14625  0279  300F               	movwf	(?_Keypad_Scan)
 14626  027A  00F6               	movlw	0
 14627  027B  3000               	movwf	((?_Keypad_Scan))+1
 14628  027C  00F7               	goto	l422
 14629  027D  2AA5               	
 14630                           l3305:	
 14631  027E                     	goto	l422
 14632  027E  2AA5               	
 14633                           l477:	
 14634  027F                     	line	110
 14635                           ;KeyMatrix.c: 110:         while(RC1 == 1)
 14636                           	bcf	status, 5	;RP0=0, select bank0
 14637  027F  1283               	bcf	status, 6	;RP1=0, select bank0
 14638  0280  1303               	btfsc	(57/8),(57)&7	;volatile
 14639  0281  1887               	goto	u2731
 14640  0282  2A84               	goto	u2730
 14641  0283  2A85               u2731:
 14642  0284                     	goto	l3303
 14643  0284  2A79               u2730:
 14644  0285                     	goto	l476
 14645  0285  2A86               	
 14646                           l479:	
 14647  0286                     	line	112
 14648                           ;KeyMatrix.c: 112:     }
 14649                           	
 14650                           l476:	
 14651  0286                     	line	113
 14652                           ;KeyMatrix.c: 113:     if(RC0 == 1)
 14653                           	btfss	(56/8),(56)&7	;volatile
 14654  0286  1C07               	goto	u2741
 14655  0287  2A89               	goto	u2740
 14656  0288  2A8A               u2741:
 14657  0289                     	goto	l3313
 14658  0289  2AA2               u2740:
 14659  028A                     	line	115
 14660                           	
 14661                           l3307:	
 14662  028A                     ;KeyMatrix.c: 114:     {;KeyMatrix.c: 115:         Key_Delay(50);
 14663                           	movlw	032h
 14664  028A  3032               	movwf	(Key_Delay@k)
 14665  028B  00F0               	movlw	0
 14666  028C  3000               	movwf	((Key_Delay@k))+1
 14667  028D  00F1               	fcall	_Key_Delay
 14668  028E  160A  118A  2111  120A  118A  	line	116
 14669                           ;KeyMatrix.c: 116:         while(RC0 == 1)
 14670                           	goto	l481
 14671  0293  2A9A               	
 14672                           l482:	
 14673  0294                     	line	117
 14674                           	
 14675                           l3309:	
 14676  0294                     ;KeyMatrix.c: 117:             return 16;
 14677                           	movlw	010h
 14678  0294  3010               	movwf	(?_Keypad_Scan)
 14679  0295  00F6               	movlw	0
 14680  0296  3000               	movwf	((?_Keypad_Scan))+1
 14681  0297  00F7               	goto	l422
 14682  0298  2AA5               	
 14683                           l3311:	
 14684  0299                     	goto	l422
 14685  0299  2AA5               	
 14686                           l481:	
 14687  029A                     	line	116
 14688                           ;KeyMatrix.c: 116:         while(RC0 == 1)
 14689                           	bcf	status, 5	;RP0=0, select bank0
 14690  029A  1283               	bcf	status, 6	;RP1=0, select bank0
 14691  029B  1303               	btfsc	(56/8),(56)&7	;volatile
 14692  029C  1807               	goto	u2751
 14693  029D  2A9F               	goto	u2750
 14694  029E  2AA0               u2751:
 14695  029F                     	goto	l3309
 14696  029F  2A94               u2750:
 14697  02A0                     	goto	l3313
 14698  02A0  2AA2               	
 14699                           l483:	
 14700  02A1                     	goto	l3313
 14701  02A1  2AA2               	line	118
 14702                           ;KeyMatrix.c: 118:     }
 14703                           	
 14704                           l480:	
 14705  02A2                     	line	120
 14706                           	
 14707                           l3313:	
 14708  02A2                     ;KeyMatrix.c: 120:         return 0;
 14709                           	clrf	(?_Keypad_Scan)
 14710  02A2  01F6               	clrf	(?_Keypad_Scan+1)
 14711  02A3  01F7               	goto	l422
 14712  02A4  2AA5               	
 14713                           l3315:	
 14714  02A5                     	line	121
 14715                           	
 14716                           l422:	
 14717  02A5                     	return
 14718  02A5  0008               	opt stack 0
 14719                           GLOBAL	__end_of_Keypad_Scan
 14720                           	__end_of_Keypad_Scan:
 14721  02A6                     	signat	_Keypad_Scan,90
 14722                           	global	_Key_Delay
 14723                           
 14724 ;; *************** function _Key_Delay *****************
 14725 ;; Defined at:
 14726 ;;		line 5 in file "KeyMatrix.c"
 14727 ;; Parameters:    Size  Location     Type
 14728 ;;  k               2    0[COMMON] int 
 14729 ;; Auto vars:     Size  Location     Type
 14730 ;;  j               2    4[COMMON] unsigned int 
 14731 ;;  i               2    2[COMMON] unsigned int 
 14732 ;; Return value:  Size  Location     Type
 14733 ;;                  1    wreg      void 
 14734 ;; Registers used:
 14735 ;;		wreg, status,2
 14736 ;; Tracked objects:
 14737 ;;		On entry : 0/0
 14738 ;;		On exit  : 0/0
 14739 ;;		Unchanged: 0/0
 14740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14741 ;;      Params:         2       0       0       0       0
 14742 ;;      Locals:         4       0       0       0       0
 14743 ;;      Temps:          0       0       0       0       0
 14744 ;;      Totals:         6       0       0       0       0
 14745 ;;Total ram usage:        6 bytes
 14746 ;; Hardware stack levels used:    1
 14747 ;; This function calls:
 14748 ;;		Nothing
 14749 ;; This function is called by:
 14750 ;;		_Keypad_Scan
 14751 ;; This function uses a non-reentrant model
 14752 ;;
 14753                           psect	text48,local,class=CODE,delta=2,merge=1,group=0
 14754                           	line	5
 14755                           global __ptext48
 14756                           __ptext48:	;psect for function _Key_Delay
 14757  1111                     psect	text48
 14758                           	file	"KeyMatrix.c"
 14759                           	line	5
 14760                           	global	__size_of_Key_Delay
 14761                           	__size_of_Key_Delay	equ	__end_of_Key_Delay-_Key_Delay
 14762  0032                     	
 14763                           _Key_Delay:	
 14764  1111                     ;incstack = 0
 14765                           	opt	stack 5
 14766                           ; Regs used in _Key_Delay: [wreg+status,2]
 14767                           	line	7
 14768                           	
 14769                           l3157:	
 14770  1111                     ;KeyMatrix.c: 6:     unsigned int i,j;;KeyMatrix.c: 7:     for (i= 0; i < k; i++)
 14771                           	clrf	(Key_Delay@i)
 14772  1111  01F2               	clrf	(Key_Delay@i+1)
 14773  1112  01F3               	goto	l408
 14774  1113  2937               	
 14775                           l409:	
 14776  1114                     	line	8
 14777                           	
 14778                           l3159:	
 14779  1114                     ;KeyMatrix.c: 8:         for(j = 0; j < 100; j++);
 14780                           	clrf	(Key_Delay@j)
 14781  1114  01F4               	clrf	(Key_Delay@j+1)
 14782  1115  01F5               	
 14783                           l3161:	
 14784  1116                     	movlw	0
 14785  1116  3000               	subwf	(Key_Delay@j+1),w
 14786  1117  0275               	movlw	064h
 14787  1118  3064               	skipnz
 14788  1119  1903               	subwf	(Key_Delay@j),w
 14789  111A  0274               	skipc
 14790  111B  1C03               	goto	u2381
 14791  111C  291E               	goto	u2380
 14792  111D  291F               u2381:
 14793  111E                     	goto	l3165
 14794  111E  2921               u2380:
 14795  111F                     	goto	l3167
 14796  111F  2931               	
 14797                           l3163:	
 14798  1120                     	goto	l3167
 14799  1120  2931               	
 14800                           l410:	
 14801  1121                     	
 14802                           l3165:	
 14803  1121                     	movlw	01h
 14804  1121  3001               	addwf	(Key_Delay@j),f
 14805  1122  07F4               	skipnc
 14806  1123  1803               	incf	(Key_Delay@j+1),f
 14807  1124  0AF5               	movlw	0
 14808  1125  3000               	addwf	(Key_Delay@j+1),f
 14809  1126  07F5               	movlw	0
 14810  1127  3000               	subwf	(Key_Delay@j+1),w
 14811  1128  0275               	movlw	064h
 14812  1129  3064               	skipnz
 14813  112A  1903               	subwf	(Key_Delay@j),w
 14814  112B  0274               	skipc
 14815  112C  1C03               	goto	u2391
 14816  112D  292F               	goto	u2390
 14817  112E  2930               u2391:
 14818  112F                     	goto	l3165
 14819  112F  2921               u2390:
 14820  1130                     	goto	l3167
 14821  1130  2931               	
 14822                           l411:	
 14823  1131                     	
 14824                           l3167:	
 14825  1131                     	movlw	01h
 14826  1131  3001               	addwf	(Key_Delay@i),f
 14827  1132  07F2               	skipnc
 14828  1133  1803               	incf	(Key_Delay@i+1),f
 14829  1134  0AF3               	movlw	0
 14830  1135  3000               	addwf	(Key_Delay@i+1),f
 14831  1136  07F3               	
 14832                           l408:	
 14833  1137                     	movf	(Key_Delay@k+1),w
 14834  1137  0871               	subwf	(Key_Delay@i+1),w
 14835  1138  0273               	skipz
 14836  1139  1D03               	goto	u2405
 14837  113A  293D               	movf	(Key_Delay@k),w
 14838  113B  0870               	subwf	(Key_Delay@i),w
 14839  113C  0272               u2405:
 14840  113D                     	skipc
 14841  113D  1C03               	goto	u2401
 14842  113E  2940               	goto	u2400
 14843  113F  2941               u2401:
 14844  1140                     	goto	l3159
 14845  1140  2914               u2400:
 14846  1141                     	goto	l413
 14847  1141  2942               	
 14848                           l412:	
 14849  1142                     	line	9
 14850                           	
 14851                           l413:	
 14852  1142                     	return
 14853  1142  0008               	opt stack 0
 14854                           GLOBAL	__end_of_Key_Delay
 14855                           	__end_of_Key_Delay:
 14856  1143                     	signat	_Key_Delay,4217
 14857                           	global	_CheckTime
 14858                           
 14859 ;; *************** function _CheckTime *****************
 14860 ;; Defined at:
 14861 ;;		line 710 in file "main.c"
 14862 ;; Parameters:    Size  Location     Type
 14863 ;;		None
 14864 ;; Auto vars:     Size  Location     Type
 14865 ;;		None
 14866 ;; Return value:  Size  Location     Type
 14867 ;;                  1    wreg      void 
 14868 ;; Registers used:
 14869 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 14870 ;; Tracked objects:
 14871 ;;		On entry : 0/0
 14872 ;;		On exit  : 0/0
 14873 ;;		Unchanged: 0/0
 14874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14875 ;;      Params:         0       0       0       0       0
 14876 ;;      Locals:         0       0       0       0       0
 14877 ;;      Temps:          1       0       0       0       0
 14878 ;;      Totals:         1       0       0       0       0
 14879 ;;Total ram usage:        1 bytes
 14880 ;; Hardware stack levels used:    1
 14881 ;; Hardware stack levels required when called:    3
 14882 ;; This function calls:
 14883 ;;		_RealTimeClock_get_hours
 14884 ;;		_RealTimeClock_get_minutes
 14885 ;; This function is called by:
 14886 ;;		_main
 14887 ;; This function uses a non-reentrant model
 14888 ;;
 14889                           psect	text49,local,class=CODE,delta=2,merge=1,group=0
 14890                           	file	"main.c"
 14891                           	line	710
 14892                           global __ptext49
 14893                           __ptext49:	;psect for function _CheckTime
 14894  09A2                     psect	text49
 14895                           	file	"main.c"
 14896                           	line	710
 14897                           	global	__size_of_CheckTime
 14898                           	__size_of_CheckTime	equ	__end_of_CheckTime-_CheckTime
 14899  00E8                     	
 14900                           _CheckTime:	
 14901  09A2                     ;incstack = 0
 14902                           	opt	stack 4
 14903                           ; Regs used in _CheckTime: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 14904                           	line	714
 14905                           	
 14906                           l3959:	
 14907  09A2                     ;main.c: 714: 
 14908                           	bsf	status, 5	;RP0=1, select bank1
 14909  09A2  1683               	bcf	status, 6	;RP1=0, select bank1
 14910  09A3  1303               		decf	((_isWeekDay)^080h),w
 14911  09A4  036A               iorwf	((_isWeekDay+1)^080h),w
 14912  09A5  046B               	btfss	status,2
 14913  09A6  1D03               	goto	u3201
 14914  09A7  29A9               	goto	u3200
 14915  09A8  29AA               u3201:
 14916  09A9                     	goto	l3981
 14917  09A9  2A31               u3200:
 14918  09AA                     	line	716
 14919                           	
 14920                           l3961:	
 14921  09AA                     ;main.c: 715:     else if (isWeekDay == 0);main.c: 716:     {
 14922                           	fcall	_RealTimeClock_get_minutes
 14923  09AA  160A  158A  270E  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 14924  09AF  1283               	bcf	status, 6	;RP1=0, select bank0
 14925  09B0  1303               	movf	(1+(?_RealTimeClock_get_minutes)),w
 14926  09B1  0826               	movwf	(_timeMins+1)
 14927  09B2  00DB               	movf	(0+(?_RealTimeClock_get_minutes)),w
 14928  09B3  0825               	movwf	(_timeMins)
 14929  09B4  00DA               	line	717
 14930                           ;main.c: 717: 
 14931                           	fcall	_RealTimeClock_get_hours
 14932  09B5  160A  158A  26EC  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 14933  09BA  1283               	bcf	status, 6	;RP1=0, select bank0
 14934  09BB  1303               	movf	(1+(?_RealTimeClock_get_hours)),w
 14935  09BC  0826               	movwf	(_timeHours+1)
 14936  09BD  00DD               	movf	(0+(?_RealTimeClock_get_hours)),w
 14937  09BE  0825               	movwf	(_timeHours)
 14938  09BF  00DC               	line	718
 14939                           	
 14940                           l3963:	
 14941  09C0                     ;main.c: 718:         timeMins = RealTimeClock_get_minutes();
 14942                           	movf	(_timeHours+1),w
 14943  09C0  085D               	xorlw	80h
 14944  09C1  3A80               	movwf	(??_CheckTime+0)+0
 14945  09C2  00FC               	bsf	status, 5	;RP0=1, select bank1
 14946  09C3  1683               	bcf	status, 6	;RP1=0, select bank1
 14947  09C4  1303               	movf	(_weekDayStart+1)^080h,w
 14948  09C5  0849               	xorlw	80h
 14949  09C6  3A80               	subwf	(??_CheckTime+0)+0,w
 14950  09C7  027C               	skipz
 14951  09C8  1D03               	goto	u3215
 14952  09C9  29CE               	movf	(_weekDayStart)^080h,w
 14953  09CA  0848               	bcf	status, 5	;RP0=0, select bank0
 14954  09CB  1283               	bcf	status, 6	;RP1=0, select bank0
 14955  09CC  1303               	subwf	(_timeHours),w
 14956  09CD  025C               u3215:
 14957  09CE                     
 14958                           	skipnc
 14959  09CE  1803               	goto	u3211
 14960  09CF  29D1               	goto	u3210
 14961  09D0  29D2               u3211:
 14962  09D1                     	goto	l3971
 14963  09D1  29F3               u3210:
 14964  09D2                     	line	720
 14965                           	
 14966                           l3965:	
 14967  09D2                     ;main.c: 719:         timeHours = RealTimeClock_get_hours();;main.c: 720:         if (ti
                                 meHours < weekEndStart[0])
 14968                           	bcf	status, 5	;RP0=0, select bank0
 14969  09D2  1283               	bcf	status, 6	;RP1=0, select bank0
 14970  09D3  1303               	movf	(_timeMins+1),w
 14971  09D4  085B               	xorlw	80h
 14972  09D5  3A80               	movwf	(??_CheckTime+0)+0
 14973  09D6  00FC               	bsf	status, 5	;RP0=1, select bank1
 14974  09D7  1683               	bcf	status, 6	;RP1=0, select bank1
 14975  09D8  1303               	movf	1+(_weekDayStart)^080h+02h,w
 14976  09D9  084B               	xorlw	80h
 14977  09DA  3A80               	subwf	(??_CheckTime+0)+0,w
 14978  09DB  027C               	skipz
 14979  09DC  1D03               	goto	u3225
 14980  09DD  29E2               	movf	0+(_weekDayStart)^080h+02h,w
 14981  09DE  084A               	bcf	status, 5	;RP0=0, select bank0
 14982  09DF  1283               	bcf	status, 6	;RP1=0, select bank0
 14983  09E0  1303               	subwf	(_timeMins),w
 14984  09E1  025A               u3225:
 14985  09E2                     
 14986                           	skipnc
 14987  09E2  1803               	goto	u3221
 14988  09E3  29E5               	goto	u3220
 14989  09E4  29E6               u3221:
 14990  09E5                     	goto	l3969
 14991  09E5  29EB               u3220:
 14992  09E6                     	line	721
 14993                           	
 14994                           l3967:	
 14995  09E6                     ;main.c: 721:         {
 14996                           	bcf	status, 5	;RP0=0, select bank0
 14997  09E6  1283               	bcf	status, 6	;RP1=0, select bank0
 14998  09E7  1303               	clrf	(_IsHeatingOn)
 14999  09E8  01E0               	clrf	(_IsHeatingOn+1)
 15000  09E9  01E1               	goto	l281
 15001  09EA  2A89               	line	722
 15002                           ;main.c: 722:             IsHeatingOn = 0;
 15003                           	
 15004                           l268:	
 15005  09EB                     	line	723
 15006                           	
 15007                           l3969:	
 15008  09EB                     ;main.c: 723:         }
 15009                           	movlw	01h
 15010  09EB  3001               	bcf	status, 5	;RP0=0, select bank0
 15011  09EC  1283               	bcf	status, 6	;RP1=0, select bank0
 15012  09ED  1303               	movwf	(_IsHeatingOn)
 15013  09EE  00E0               	movlw	0
 15014  09EF  3000               	movwf	((_IsHeatingOn))+1
 15015  09F0  00E1               	goto	l281
 15016  09F1  2A89               	
 15017                           l269:	
 15018  09F2                     	line	724
 15019                           ;main.c: 724:         else if(timeHours > weekEndEnd[0])
 15020                           	goto	l281
 15021  09F2  2A89               	line	725
 15022                           ;main.c: 725:         {
 15023                           	
 15024                           l267:	
 15025  09F3                     	
 15026                           l3971:	
 15027  09F3                     	bsf	status, 5	;RP0=1, select bank1
 15028  09F3  1683               	bcf	status, 6	;RP1=0, select bank1
 15029  09F4  1303               	movf	(_weekDayEnd+1)^080h,w
 15030  09F5  0845               	xorlw	80h
 15031  09F6  3A80               	movwf	(??_CheckTime+0)+0
 15032  09F7  00FC               	bcf	status, 5	;RP0=0, select bank0
 15033  09F8  1283               	bcf	status, 6	;RP1=0, select bank0
 15034  09F9  1303               	movf	(_timeHours+1),w
 15035  09FA  085D               	xorlw	80h
 15036  09FB  3A80               	subwf	(??_CheckTime+0)+0,w
 15037  09FC  027C               	skipz
 15038  09FD  1D03               	goto	u3235
 15039  09FE  2A03               	movf	(_timeHours),w
 15040  09FF  085C               	bsf	status, 5	;RP0=1, select bank1
 15041  0A00  1683               	bcf	status, 6	;RP1=0, select bank1
 15042  0A01  1303               	subwf	(_weekDayEnd)^080h,w
 15043  0A02  0244               u3235:
 15044  0A03                     
 15045                           	skipnc
 15046  0A03  1803               	goto	u3231
 15047  0A04  2A06               	goto	u3230
 15048  0A05  2A07               u3231:
 15049  0A06                     	goto	l3979
 15050  0A06  2A28               u3230:
 15051  0A07                     	line	727
 15052                           	
 15053                           l3973:	
 15054  0A07                     ;main.c: 726:             IsHeatingOn = 0;;main.c: 727:         }
 15055                           	bsf	status, 5	;RP0=1, select bank1
 15056  0A07  1683               	bcf	status, 6	;RP1=0, select bank1
 15057  0A08  1303               	movf	1+(_weekDayEnd)^080h+02h,w
 15058  0A09  0847               	xorlw	80h
 15059  0A0A  3A80               	movwf	(??_CheckTime+0)+0
 15060  0A0B  00FC               	bcf	status, 5	;RP0=0, select bank0
 15061  0A0C  1283               	bcf	status, 6	;RP1=0, select bank0
 15062  0A0D  1303               	movf	(_timeMins+1),w
 15063  0A0E  085B               	xorlw	80h
 15064  0A0F  3A80               	subwf	(??_CheckTime+0)+0,w
 15065  0A10  027C               	skipz
 15066  0A11  1D03               	goto	u3245
 15067  0A12  2A17               	movf	(_timeMins),w
 15068  0A13  085A               	bsf	status, 5	;RP0=1, select bank1
 15069  0A14  1683               	bcf	status, 6	;RP1=0, select bank1
 15070  0A15  1303               	subwf	0+(_weekDayEnd)^080h+02h,w
 15071  0A16  0246               u3245:
 15072  0A17                     
 15073                           	skipnc
 15074  0A17  1803               	goto	u3241
 15075  0A18  2A1A               	goto	u3240
 15076  0A19  2A1B               u3241:
 15077  0A1A                     	goto	l3977
 15078  0A1A  2A20               u3240:
 15079  0A1B                     	line	728
 15080                           	
 15081                           l3975:	
 15082  0A1B                     ;main.c: 728:         else
 15083                           	bcf	status, 5	;RP0=0, select bank0
 15084  0A1B  1283               	bcf	status, 6	;RP1=0, select bank0
 15085  0A1C  1303               	clrf	(_IsHeatingOn)
 15086  0A1D  01E0               	clrf	(_IsHeatingOn+1)
 15087  0A1E  01E1               	goto	l281
 15088  0A1F  2A89               	line	729
 15089                           ;main.c: 729:             IsHeatingOn = 1;
 15090                           	
 15091                           l272:	
 15092  0A20                     	line	730
 15093                           	
 15094                           l3977:	
 15095  0A20                     ;main.c: 730:     }
 15096                           	movlw	01h
 15097  0A20  3001               	bcf	status, 5	;RP0=0, select bank0
 15098  0A21  1283               	bcf	status, 6	;RP1=0, select bank0
 15099  0A22  1303               	movwf	(_IsHeatingOn)
 15100  0A23  00E0               	movlw	0
 15101  0A24  3000               	movwf	((_IsHeatingOn))+1
 15102  0A25  00E1               	goto	l281
 15103  0A26  2A89               	
 15104                           l273:	
 15105  0A27                     	line	731
 15106                           ;main.c: 731: }
 15107                           	goto	l281
 15108  0A27  2A89               	line	732
 15109                           ;main.c: 732: 
 15110                           	
 15111                           l271:	
 15112  0A28                     	line	733
 15113                           	
 15114                           l3979:	
 15115  0A28                     ;main.c: 733: 
 15116                           	movlw	01h
 15117  0A28  3001               	bcf	status, 5	;RP0=0, select bank0
 15118  0A29  1283               	bcf	status, 6	;RP1=0, select bank0
 15119  0A2A  1303               	movwf	(_IsHeatingOn)
 15120  0A2B  00E0               	movlw	0
 15121  0A2C  3000               	movwf	((_IsHeatingOn))+1
 15122  0A2D  00E1               	goto	l281
 15123  0A2E  2A89               	
 15124                           l274:	
 15125  0A2F                     	goto	l281
 15126  0A2F  2A89               	
 15127                           l270:	
 15128  0A30                     	line	734
 15129                           ;main.c: 734: 
 15130                           	goto	l281
 15131  0A30  2A89               	line	737
 15132                           ;main.c: 737: 
 15133                           	
 15134                           l266:	
 15135  0A31                     	
 15136                           l3981:	
 15137  0A31                     	bsf	status, 5	;RP0=1, select bank1
 15138  0A31  1683               	bcf	status, 6	;RP1=0, select bank1
 15139  0A32  1303               	movf	((_isWeekDay)^080h),w
 15140  0A33  086A               iorwf	((_isWeekDay+1)^080h),w
 15141  0A34  046B               	btfss	status,2
 15142  0A35  1D03               	goto	u3251
 15143  0A36  2A38               	goto	u3250
 15144  0A37  2A39               u3251:
 15145  0A38                     	goto	l281
 15146  0A38  2A89               u3250:
 15147  0A39                     	line	740
 15148                           	
 15149                           l3983:	
 15150  0A39                     ;main.c: 738: void main() {;main.c: 740: 
 15151                           	fcall	_RealTimeClock_get_minutes
 15152  0A39  160A  158A  270E  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 15153  0A3E  1283               	bcf	status, 6	;RP1=0, select bank0
 15154  0A3F  1303               	movf	(1+(?_RealTimeClock_get_minutes)),w
 15155  0A40  0826               	movwf	(_timeMins+1)
 15156  0A41  00DB               	movf	(0+(?_RealTimeClock_get_minutes)),w
 15157  0A42  0825               	movwf	(_timeMins)
 15158  0A43  00DA               	line	741
 15159                           ;main.c: 741:     LCD_Init();
 15160                           	fcall	_RealTimeClock_get_hours
 15161  0A44  160A  158A  26EC  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 15162  0A49  1283               	bcf	status, 6	;RP1=0, select bank0
 15163  0A4A  1303               	movf	(1+(?_RealTimeClock_get_hours)),w
 15164  0A4B  0826               	movwf	(_timeHours+1)
 15165  0A4C  00DD               	movf	(0+(?_RealTimeClock_get_hours)),w
 15166  0A4D  0825               	movwf	(_timeHours)
 15167  0A4E  00DC               	line	742
 15168                           	
 15169                           l3985:	
 15170  0A4F                     ;main.c: 742:     Init_Keypad();
 15171                           	movf	(_timeHours+1),w
 15172  0A4F  085D               	xorlw	80h
 15173  0A50  3A80               	movwf	(??_CheckTime+0)+0
 15174  0A51  00FC               	bsf	status, 5	;RP0=1, select bank1
 15175  0A52  1683               	bcf	status, 6	;RP1=0, select bank1
 15176  0A53  1303               	movf	(_weekEndStart+1)^080h,w
 15177  0A54  0841               	xorlw	80h
 15178  0A55  3A80               	subwf	(??_CheckTime+0)+0,w
 15179  0A56  027C               	skipz
 15180  0A57  1D03               	goto	u3265
 15181  0A58  2A5D               	movf	(_weekEndStart)^080h,w
 15182  0A59  0840               	bcf	status, 5	;RP0=0, select bank0
 15183  0A5A  1283               	bcf	status, 6	;RP1=0, select bank0
 15184  0A5B  1303               	subwf	(_timeHours),w
 15185  0A5C  025C               u3265:
 15186  0A5D                     
 15187                           	skipnc
 15188  0A5D  1803               	goto	u3261
 15189  0A5E  2A60               	goto	u3260
 15190  0A5F  2A61               u3261:
 15191  0A60                     	goto	l3989
 15192  0A60  2A66               u3260:
 15193  0A61                     	line	744
 15194                           	
 15195                           l3987:	
 15196  0A61                     ;main.c: 743:     Thermometer_Init();;main.c: 744:     RealTimeClock_init();
 15197                           	bcf	status, 5	;RP0=0, select bank0
 15198  0A61  1283               	bcf	status, 6	;RP1=0, select bank0
 15199  0A62  1303               	clrf	(_IsHeatingOn)
 15200  0A63  01E0               	clrf	(_IsHeatingOn+1)
 15201  0A64  01E1               	line	745
 15202                           ;main.c: 745:     RealTimeClock_set_burst_time(start_date);
 15203                           	goto	l281
 15204  0A65  2A89               	line	746
 15205                           ;main.c: 746: 
 15206                           	
 15207                           l277:	
 15208  0A66                     	
 15209                           l3989:	
 15210  0A66                     	bsf	status, 5	;RP0=1, select bank1
 15211  0A66  1683               	bcf	status, 6	;RP1=0, select bank1
 15212  0A67  1303               	movf	(_weekEndEnd+1)^080h,w
 15213  0A68  083D               	xorlw	80h
 15214  0A69  3A80               	movwf	(??_CheckTime+0)+0
 15215  0A6A  00FC               	bcf	status, 5	;RP0=0, select bank0
 15216  0A6B  1283               	bcf	status, 6	;RP1=0, select bank0
 15217  0A6C  1303               	movf	(_timeHours+1),w
 15218  0A6D  085D               	xorlw	80h
 15219  0A6E  3A80               	subwf	(??_CheckTime+0)+0,w
 15220  0A6F  027C               	skipz
 15221  0A70  1D03               	goto	u3275
 15222  0A71  2A76               	movf	(_timeHours),w
 15223  0A72  085C               	bsf	status, 5	;RP0=1, select bank1
 15224  0A73  1683               	bcf	status, 6	;RP1=0, select bank1
 15225  0A74  1303               	subwf	(_weekEndEnd)^080h,w
 15226  0A75  023C               u3275:
 15227  0A76                     
 15228                           	skipnc
 15229  0A76  1803               	goto	u3271
 15230  0A77  2A79               	goto	u3270
 15231  0A78  2A7A               u3271:
 15232  0A79                     	goto	l3993
 15233  0A79  2A7F               u3270:
 15234  0A7A                     	line	748
 15235                           	
 15236                           l3991:	
 15237  0A7A                     ;main.c: 747: ;main.c: 748:     Buzzer_Init();
 15238                           	bcf	status, 5	;RP0=0, select bank0
 15239  0A7A  1283               	bcf	status, 6	;RP1=0, select bank0
 15240  0A7B  1303               	clrf	(_IsHeatingOn)
 15241  0A7C  01E0               	clrf	(_IsHeatingOn+1)
 15242  0A7D  01E1               	line	749
 15243                           ;main.c: 749:     int Key = 0;
 15244                           	goto	l281
 15245  0A7E  2A89               	line	750
 15246                           ;main.c: 750:     DisableAlarm = 0;
 15247                           	
 15248                           l279:	
 15249  0A7F                     	line	751
 15250                           	
 15251                           l3993:	
 15252  0A7F                     ;main.c: 751:     isWeekDay = 1;
 15253                           	movlw	01h
 15254  0A7F  3001               	bcf	status, 5	;RP0=0, select bank0
 15255  0A80  1283               	bcf	status, 6	;RP1=0, select bank0
 15256  0A81  1303               	movwf	(_IsHeatingOn)
 15257  0A82  00E0               	movlw	0
 15258  0A83  3000               	movwf	((_IsHeatingOn))+1
 15259  0A84  00E1               	goto	l281
 15260  0A85  2A89               	
 15261                           l280:	
 15262  0A86                     	goto	l281
 15263  0A86  2A89               	
 15264                           l278:	
 15265  0A87                     	goto	l281
 15266  0A87  2A89               	line	752
 15267                           ;main.c: 752:     int temp, temp2, temp3, tempdec, tempdectenth;
 15268                           	
 15269                           l276:	
 15270  0A88                     	goto	l281
 15271  0A88  2A89               	
 15272                           l275:	
 15273  0A89                     	line	753
 15274                           	
 15275                           l281:	
 15276  0A89                     	return
 15277  0A89  0008               	opt stack 0
 15278                           GLOBAL	__end_of_CheckTime
 15279                           	__end_of_CheckTime:
 15280  0A8A                     	signat	_CheckTime,89
 15281                           	global	_RealTimeClock_get_minutes
 15282                           
 15283 ;; *************** function _RealTimeClock_get_minutes *****************
 15284 ;; Defined at:
 15285 ;;		line 96 in file "realtimeclock.c"
 15286 ;; Parameters:    Size  Location     Type
 15287 ;;		None
 15288 ;; Auto vars:     Size  Location     Type
 15289 ;;  c               1   11[COMMON] unsigned char 
 15290 ;; Return value:  Size  Location     Type
 15291 ;;                  2    5[BANK0 ] int 
 15292 ;; Registers used:
 15293 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 15294 ;; Tracked objects:
 15295 ;;		On entry : 0/0
 15296 ;;		On exit  : 0/0
 15297 ;;		Unchanged: 0/0
 15298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15299 ;;      Params:         0       2       0       0       0
 15300 ;;      Locals:         1       0       0       0       0
 15301 ;;      Temps:          1       0       0       0       0
 15302 ;;      Totals:         2       2       0       0       0
 15303 ;;Total ram usage:        4 bytes
 15304 ;; Hardware stack levels used:    1
 15305 ;; Hardware stack levels required when called:    2
 15306 ;; This function calls:
 15307 ;;		_RealTimeClock_read_byte
 15308 ;;		_RealTimeClock_write_byte
 15309 ;;		___hex_to_int
 15310 ;; This function is called by:
 15311 ;;		_DisplayTime
 15312 ;;		_SetTime
 15313 ;;		_CheckTime
 15314 ;; This function uses a non-reentrant model
 15315 ;;
 15316                           psect	text50,local,class=CODE,delta=2,merge=1,group=0
 15317                           	file	"realtimeclock.c"
 15318                           	line	96
 15319                           global __ptext50
 15320                           __ptext50:	;psect for function _RealTimeClock_get_minutes
 15321  1F0E                     psect	text50
 15322                           	file	"realtimeclock.c"
 15323                           	line	96
 15324                           	global	__size_of_RealTimeClock_get_minutes
 15325                           	__size_of_RealTimeClock_get_minutes	equ	__end_of_RealTimeClock_get_minutes-_RealTimeClo
                                 ck_get_minutes
 15326  0022                     	
 15327                           _RealTimeClock_get_minutes:	
 15328  1F0E                     ;incstack = 0
 15329                           	opt	stack 1
 15330                           ; Regs used in _RealTimeClock_get_minutes: [wreg+status,2+status,0+btemp+1+pclath+cstack
                                 ]
 15331                           	line	97
 15332                           	
 15333                           l3059:	
 15334  1F0E                     ;realtimeclock.c: 97:     RB5 = 1;
 15335                           	bcf	status, 5	;RP0=0, select bank0
 15336  1F0E  1283               	bcf	status, 6	;RP1=0, select bank0
 15337  1F0F  1303               	bsf	(53/8),(53)&7	;volatile
 15338  1F10  1686               	line	98
 15339                           	
 15340                           l3061:	
 15341  1F11                     ;realtimeclock.c: 98:     RealTimeClock_write_byte(0x83);
 15342                           	movlw	low(083h)
 15343  1F11  3083               	fcall	_RealTimeClock_write_byte
 15344  1F12  160A  118A  21AC  160A  158A  	line	99
 15345                           ;realtimeclock.c: 99:     unsigned char c = RealTimeClock_read_byte();
 15346                           	fcall	_RealTimeClock_read_byte
 15347  1F17  160A  118A  242D  160A  158A  	movwf	(??_RealTimeClock_get_minutes+0)+0
 15348  1F1C  00FA               	movf	(??_RealTimeClock_get_minutes+0)+0,w
 15349  1F1D  087A               	movwf	(RealTimeClock_get_minutes@c)
 15350  1F1E  00FB               	line	100
 15351                           	
 15352                           l3063:	
 15353  1F1F                     ;realtimeclock.c: 100:     RB5 = 0;
 15354                           	bcf	status, 5	;RP0=0, select bank0
 15355  1F1F  1283               	bcf	status, 6	;RP1=0, select bank0
 15356  1F20  1303               	bcf	(53/8),(53)&7	;volatile
 15357  1F21  1286               	line	101
 15358                           	
 15359                           l3065:	
 15360  1F22                     ;realtimeclock.c: 101:     return __hex_to_int(c);
 15361                           	movf	(RealTimeClock_get_minutes@c),w
 15362  1F22  087B               	fcall	___hex_to_int
 15363  1F23  160A  118A  24BF  160A  158A  	movf	(1+(?___hex_to_int)),w
 15364  1F28  0878               	bcf	status, 5	;RP0=0, select bank0
 15365  1F29  1283               	bcf	status, 6	;RP1=0, select bank0
 15366  1F2A  1303               	movwf	(?_RealTimeClock_get_minutes+1)
 15367  1F2B  00A6               	movf	(0+(?___hex_to_int)),w
 15368  1F2C  0877               	movwf	(?_RealTimeClock_get_minutes)
 15369  1F2D  00A5               	goto	l358
 15370  1F2E  2F2F               	
 15371                           l3067:	
 15372  1F2F                     	line	102
 15373                           	
 15374                           l358:	
 15375  1F2F                     	return
 15376  1F2F  0008               	opt stack 0
 15377                           GLOBAL	__end_of_RealTimeClock_get_minutes
 15378                           	__end_of_RealTimeClock_get_minutes:
 15379  1F30                     	signat	_RealTimeClock_get_minutes,90
 15380                           	global	_RealTimeClock_get_hours
 15381                           
 15382 ;; *************** function _RealTimeClock_get_hours *****************
 15383 ;; Defined at:
 15384 ;;		line 104 in file "realtimeclock.c"
 15385 ;; Parameters:    Size  Location     Type
 15386 ;;		None
 15387 ;; Auto vars:     Size  Location     Type
 15388 ;;  c               1   11[COMMON] unsigned char 
 15389 ;; Return value:  Size  Location     Type
 15390 ;;                  2    5[BANK0 ] int 
 15391 ;; Registers used:
 15392 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 15393 ;; Tracked objects:
 15394 ;;		On entry : 0/0
 15395 ;;		On exit  : 0/0
 15396 ;;		Unchanged: 0/0
 15397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15398 ;;      Params:         0       2       0       0       0
 15399 ;;      Locals:         1       0       0       0       0
 15400 ;;      Temps:          1       0       0       0       0
 15401 ;;      Totals:         2       2       0       0       0
 15402 ;;Total ram usage:        4 bytes
 15403 ;; Hardware stack levels used:    1
 15404 ;; Hardware stack levels required when called:    2
 15405 ;; This function calls:
 15406 ;;		_RealTimeClock_read_byte
 15407 ;;		_RealTimeClock_write_byte
 15408 ;;		___hex_to_int
 15409 ;; This function is called by:
 15410 ;;		_DisplayTime
 15411 ;;		_SetTime
 15412 ;;		_CheckTime
 15413 ;; This function uses a non-reentrant model
 15414 ;;
 15415                           psect	text51,local,class=CODE,delta=2,merge=1,group=0
 15416                           	line	104
 15417                           global __ptext51
 15418                           __ptext51:	;psect for function _RealTimeClock_get_hours
 15419  1EEC                     psect	text51
 15420                           	file	"realtimeclock.c"
 15421                           	line	104
 15422                           	global	__size_of_RealTimeClock_get_hours
 15423                           	__size_of_RealTimeClock_get_hours	equ	__end_of_RealTimeClock_get_hours-_RealTimeClock_g
                                 et_hours
 15424  0022                     	
 15425                           _RealTimeClock_get_hours:	
 15426  1EEC                     ;incstack = 0
 15427                           	opt	stack 1
 15428                           ; Regs used in _RealTimeClock_get_hours: [wreg+status,2+status,0+btemp+1+pclath+cstack]

 15429                           	line	105
 15430                           	
 15431                           l3069:	
 15432  1EEC                     ;realtimeclock.c: 105:     RB5 = 1;
 15433                           	bcf	status, 5	;RP0=0, select bank0
 15434  1EEC  1283               	bcf	status, 6	;RP1=0, select bank0
 15435  1EED  1303               	bsf	(53/8),(53)&7	;volatile
 15436  1EEE  1686               	line	106
 15437                           	
 15438                           l3071:	
 15439  1EEF                     ;realtimeclock.c: 106:     RealTimeClock_write_byte(0x85);
 15440                           	movlw	low(085h)
 15441  1EEF  3085               	fcall	_RealTimeClock_write_byte
 15442  1EF0  160A  118A  21AC  160A  158A  	line	107
 15443                           ;realtimeclock.c: 107:     unsigned char c = RealTimeClock_read_byte();
 15444                           	fcall	_RealTimeClock_read_byte
 15445  1EF5  160A  118A  242D  160A  158A  	movwf	(??_RealTimeClock_get_hours+0)+0
 15446  1EFA  00FA               	movf	(??_RealTimeClock_get_hours+0)+0,w
 15447  1EFB  087A               	movwf	(RealTimeClock_get_hours@c)
 15448  1EFC  00FB               	line	108
 15449                           	
 15450                           l3073:	
 15451  1EFD                     ;realtimeclock.c: 108:     RB5 = 0;
 15452                           	bcf	status, 5	;RP0=0, select bank0
 15453  1EFD  1283               	bcf	status, 6	;RP1=0, select bank0
 15454  1EFE  1303               	bcf	(53/8),(53)&7	;volatile
 15455  1EFF  1286               	line	109
 15456                           	
 15457                           l3075:	
 15458  1F00                     ;realtimeclock.c: 109:     return __hex_to_int(c);
 15459                           	movf	(RealTimeClock_get_hours@c),w
 15460  1F00  087B               	fcall	___hex_to_int
 15461  1F01  160A  118A  24BF  160A  158A  	movf	(1+(?___hex_to_int)),w
 15462  1F06  0878               	bcf	status, 5	;RP0=0, select bank0
 15463  1F07  1283               	bcf	status, 6	;RP1=0, select bank0
 15464  1F08  1303               	movwf	(?_RealTimeClock_get_hours+1)
 15465  1F09  00A6               	movf	(0+(?___hex_to_int)),w
 15466  1F0A  0877               	movwf	(?_RealTimeClock_get_hours)
 15467  1F0B  00A5               	goto	l361
 15468  1F0C  2F0D               	
 15469                           l3077:	
 15470  1F0D                     	line	110
 15471                           	
 15472                           l361:	
 15473  1F0D                     	return
 15474  1F0D  0008               	opt stack 0
 15475                           GLOBAL	__end_of_RealTimeClock_get_hours
 15476                           	__end_of_RealTimeClock_get_hours:
 15477  1F0E                     	signat	_RealTimeClock_get_hours,90
 15478                           	global	___hex_to_int
 15479                           
 15480 ;; *************** function ___hex_to_int *****************
 15481 ;; Defined at:
 15482 ;;		line 5 in file "realtimeclock.c"
 15483 ;; Parameters:    Size  Location     Type
 15484 ;;  hex             1    wreg     unsigned char 
 15485 ;; Auto vars:     Size  Location     Type
 15486 ;;  hex             1    0[BANK0 ] unsigned char 
 15487 ;;  i               2    1[BANK0 ] int 
 15488 ;;  t               2    3[BANK0 ] int 
 15489 ;; Return value:  Size  Location     Type
 15490 ;;                  2    7[COMMON] int 
 15491 ;; Registers used:
 15492 ;;		wreg, status,2, status,0, pclath, cstack
 15493 ;; Tracked objects:
 15494 ;;		On entry : 0/0
 15495 ;;		On exit  : 0/0
 15496 ;;		Unchanged: 0/0
 15497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15498 ;;      Params:         2       0       0       0       0
 15499 ;;      Locals:         0       5       0       0       0
 15500 ;;      Temps:          1       0       0       0       0
 15501 ;;      Totals:         3       5       0       0       0
 15502 ;;Total ram usage:        8 bytes
 15503 ;; Hardware stack levels used:    1
 15504 ;; Hardware stack levels required when called:    1
 15505 ;; This function calls:
 15506 ;;		___awmod
 15507 ;; This function is called by:
 15508 ;;		_RealTimeClock_get_seconds
 15509 ;;		_RealTimeClock_get_minutes
 15510 ;;		_RealTimeClock_get_hours
 15511 ;;		_RealTimeClock_get_day_of_month
 15512 ;;		_RealTimeClock_get_month
 15513 ;;		_RealTimeClock_get_day_of_week
 15514 ;;		_RealTimeClock_get_year
 15515 ;;		_RealTimeClock_get_burst_time
 15516 ;; This function uses a non-reentrant model
 15517 ;;
 15518                           psect	text52,local,class=CODE,delta=2,merge=1,group=0
 15519                           	line	5
 15520                           global __ptext52
 15521                           __ptext52:	;psect for function ___hex_to_int
 15522  14BF                     psect	text52
 15523                           	file	"realtimeclock.c"
 15524                           	line	5
 15525                           	global	__size_of___hex_to_int
 15526                           	__size_of___hex_to_int	equ	__end_of___hex_to_int-___hex_to_int
 15527  004F                     	
 15528                           ___hex_to_int:	
 15529  14BF                     ;incstack = 0
 15530                           	opt	stack 1
 15531                           ; Regs used in ___hex_to_int: [wreg+status,2+status,0+pclath+cstack]
 15532                           ;___hex_to_int@hex stored from wreg
 15533                           	bcf	status, 5	;RP0=0, select bank0
 15534  14BF  1283               	bcf	status, 6	;RP1=0, select bank0
 15535  14C0  1303               	movwf	(___hex_to_int@hex)
 15536  14C1  00A0               	line	6
 15537                           	
 15538                           l2797:	
 15539  14C2                     ;realtimeclock.c: 6:     int t = 0;
 15540                           	clrf	(___hex_to_int@t)
 15541  14C2  01A3               	clrf	(___hex_to_int@t+1)
 15542  14C3  01A4               	line	7
 15543                           ;realtimeclock.c: 7:     for(int i = 0; i < hex; ++i) {
 15544                           	clrf	(___hex_to_int@i)
 15545  14C4  01A1               	clrf	(___hex_to_int@i+1)
 15546  14C5  01A2               	goto	l316
 15547  14C6  2CF8               	
 15548                           l317:	
 15549  14C7                     	line	8
 15550                           	
 15551                           l2799:	
 15552  14C7                     ;realtimeclock.c: 8:         ++t;
 15553                           	movlw	01h
 15554  14C7  3001               	bcf	status, 5	;RP0=0, select bank0
 15555  14C8  1283               	bcf	status, 6	;RP1=0, select bank0
 15556  14C9  1303               	addwf	(___hex_to_int@t),f
 15557  14CA  07A3               	skipnc
 15558  14CB  1803               	incf	(___hex_to_int@t+1),f
 15559  14CC  0AA4               	movlw	0
 15560  14CD  3000               	addwf	(___hex_to_int@t+1),f
 15561  14CE  07A4               	line	9
 15562                           	
 15563                           l2801:	
 15564  14CF                     ;realtimeclock.c: 9:         if(t && t % 10 == 0)
 15565                           	movf	((___hex_to_int@t)),w
 15566  14CF  0823               iorwf	((___hex_to_int@t+1)),w
 15567  14D0  0424               	btfsc	status,2
 15568  14D1  1903               	goto	u1841
 15569  14D2  2CD4               	goto	u1840
 15570  14D3  2CD5               u1841:
 15571  14D4                     	goto	l318
 15572  14D4  2CF0               u1840:
 15573  14D5                     	
 15574                           l2803:	
 15575  14D5                     	movlw	0Ah
 15576  14D5  300A               	movwf	(___awmod@divisor)
 15577  14D6  00F0               	movlw	0
 15578  14D7  3000               	movwf	((___awmod@divisor))+1
 15579  14D8  00F1               	movf	(___hex_to_int@t+1),w
 15580  14D9  0824               	movwf	(___awmod@dividend+1)
 15581  14DA  00F3               	movf	(___hex_to_int@t),w
 15582  14DB  0823               	movwf	(___awmod@dividend)
 15583  14DC  00F2               	fcall	___awmod
 15584  14DD  160A  118A  255D  160A  118A  	movf	((0+(?___awmod))),w
 15585  14E2  0870               iorwf	((1+(?___awmod))),w
 15586  14E3  0471               	btfss	status,2
 15587  14E4  1D03               	goto	u1851
 15588  14E5  2CE7               	goto	u1850
 15589  14E6  2CE8               u1851:
 15590  14E7                     	goto	l318
 15591  14E7  2CF0               u1850:
 15592  14E8                     	line	10
 15593                           	
 15594                           l2805:	
 15595  14E8                     ;realtimeclock.c: 10:             i+=6;
 15596                           	movlw	06h
 15597  14E8  3006               	bcf	status, 5	;RP0=0, select bank0
 15598  14E9  1283               	bcf	status, 6	;RP1=0, select bank0
 15599  14EA  1303               	addwf	(___hex_to_int@i),f
 15600  14EB  07A1               	skipnc
 15601  14EC  1803               	incf	(___hex_to_int@i+1),f
 15602  14ED  0AA2               	movlw	0
 15603  14EE  3000               	addwf	(___hex_to_int@i+1),f
 15604  14EF  07A2               	
 15605                           l318:	
 15606  14F0                     	line	11
 15607                           ;realtimeclock.c: 11:     }
 15608                           	movlw	01h
 15609  14F0  3001               	bcf	status, 5	;RP0=0, select bank0
 15610  14F1  1283               	bcf	status, 6	;RP1=0, select bank0
 15611  14F2  1303               	addwf	(___hex_to_int@i),f
 15612  14F3  07A1               	skipnc
 15613  14F4  1803               	incf	(___hex_to_int@i+1),f
 15614  14F5  0AA2               	movlw	0
 15615  14F6  3000               	addwf	(___hex_to_int@i+1),f
 15616  14F7  07A2               	
 15617                           l316:	
 15618  14F8                     	movf	(___hex_to_int@i+1),w
 15619  14F8  0822               	xorlw	80h
 15620  14F9  3A80               	movwf	(??___hex_to_int+0)+0
 15621  14FA  00F9               	movlw	80h
 15622  14FB  3080               	subwf	(??___hex_to_int+0)+0,w
 15623  14FC  0279               	skipz
 15624  14FD  1D03               	goto	u1865
 15625  14FE  2D01               	movf	(___hex_to_int@hex),w
 15626  14FF  0820               	subwf	(___hex_to_int@i),w
 15627  1500  0221               u1865:
 15628  1501                     
 15629                           	skipc
 15630  1501  1C03               	goto	u1861
 15631  1502  2D04               	goto	u1860
 15632  1503  2D05               u1861:
 15633  1504                     	goto	l2799
 15634  1504  2CC7               u1860:
 15635  1505                     	goto	l2807
 15636  1505  2D06               	
 15637                           l319:	
 15638  1506                     	line	12
 15639                           	
 15640                           l2807:	
 15641  1506                     ;realtimeclock.c: 12:     return t;
 15642                           	bcf	status, 5	;RP0=0, select bank0
 15643  1506  1283               	bcf	status, 6	;RP1=0, select bank0
 15644  1507  1303               	movf	(___hex_to_int@t+1),w
 15645  1508  0824               	movwf	(?___hex_to_int+1)
 15646  1509  00F8               	movf	(___hex_to_int@t),w
 15647  150A  0823               	movwf	(?___hex_to_int)
 15648  150B  00F7               	goto	l320
 15649  150C  2D0D               	
 15650                           l2809:	
 15651  150D                     	line	13
 15652                           	
 15653                           l320:	
 15654  150D                     	return
 15655  150D  0008               	opt stack 0
 15656                           GLOBAL	__end_of___hex_to_int
 15657                           	__end_of___hex_to_int:
 15658  150E                     	signat	___hex_to_int,4218
 15659                           	global	___awmod
 15660                           
 15661 ;; *************** function ___awmod *****************
 15662 ;; Defined at:
 15663 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 15664 ;; Parameters:    Size  Location     Type
 15665 ;;  divisor         2    0[COMMON] int 
 15666 ;;  dividend        2    2[COMMON] int 
 15667 ;; Auto vars:     Size  Location     Type
 15668 ;;  sign            1    6[COMMON] unsigned char 
 15669 ;;  counter         1    5[COMMON] unsigned char 
 15670 ;; Return value:  Size  Location     Type
 15671 ;;                  2    0[COMMON] int 
 15672 ;; Registers used:
 15673 ;;		wreg, status,2, status,0
 15674 ;; Tracked objects:
 15675 ;;		On entry : 0/0
 15676 ;;		On exit  : 0/0
 15677 ;;		Unchanged: 0/0
 15678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15679 ;;      Params:         4       0       0       0       0
 15680 ;;      Locals:         2       0       0       0       0
 15681 ;;      Temps:          1       0       0       0       0
 15682 ;;      Totals:         7       0       0       0       0
 15683 ;;Total ram usage:        7 bytes
 15684 ;; Hardware stack levels used:    1
 15685 ;; This function calls:
 15686 ;;		Nothing
 15687 ;; This function is called by:
 15688 ;;		_DisplayTime
 15689 ;;		_DisplayDate
 15690 ;;		_ChangeTrigger
 15691 ;;		_Switch24Hour
 15692 ;;		_SetTime
 15693 ;;		___hex_to_int
 15694 ;;		___int_to_hex
 15695 ;;		_Get_Temp
 15696 ;; This function uses a non-reentrant model
 15697 ;;
 15698                           psect	text53,local,class=CODE,delta=2,merge=1,group=1
 15699                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 15700                           	line	5
 15701                           global __ptext53
 15702                           __ptext53:	;psect for function ___awmod
 15703  155D                     psect	text53
 15704                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 15705                           	line	5
 15706                           	global	__size_of___awmod
 15707                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 15708  0063                     	
 15709                           ___awmod:	
 15710  155D                     ;incstack = 0
 15711                           	opt	stack 6
 15712                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 15713                           	line	12
 15714                           	
 15715                           l2751:	
 15716  155D                     	clrf	(___awmod@sign)
 15717  155D  01F6               	line	13
 15718                           	
 15719                           l2753:	
 15720  155E                     	btfss	(___awmod@dividend+1),7
 15721  155E  1FF3               	goto	u1751
 15722  155F  2D61               	goto	u1750
 15723  1560  2D62               u1751:
 15724  1561                     	goto	l2759
 15725  1561  2D6A               u1750:
 15726  1562                     	line	14
 15727                           	
 15728                           l2755:	
 15729  1562                     	comf	(___awmod@dividend),f
 15730  1562  09F2               	comf	(___awmod@dividend+1),f
 15731  1563  09F3               	incf	(___awmod@dividend),f
 15732  1564  0AF2               	skipnz
 15733  1565  1903               	incf	(___awmod@dividend+1),f
 15734  1566  0AF3               	line	15
 15735                           	
 15736                           l2757:	
 15737  1567                     	clrf	(___awmod@sign)
 15738  1567  01F6               	incf	(___awmod@sign),f
 15739  1568  0AF6               	goto	l2759
 15740  1569  2D6A               	line	16
 15741                           	
 15742                           l854:	
 15743  156A                     	line	17
 15744                           	
 15745                           l2759:	
 15746  156A                     	btfss	(___awmod@divisor+1),7
 15747  156A  1FF1               	goto	u1761
 15748  156B  2D6D               	goto	u1760
 15749  156C  2D6E               u1761:
 15750  156D                     	goto	l2763
 15751  156D  2D74               u1760:
 15752  156E                     	line	18
 15753                           	
 15754                           l2761:	
 15755  156E                     	comf	(___awmod@divisor),f
 15756  156E  09F0               	comf	(___awmod@divisor+1),f
 15757  156F  09F1               	incf	(___awmod@divisor),f
 15758  1570  0AF0               	skipnz
 15759  1571  1903               	incf	(___awmod@divisor+1),f
 15760  1572  0AF1               	goto	l2763
 15761  1573  2D74               	
 15762                           l855:	
 15763  1574                     	line	19
 15764                           	
 15765                           l2763:	
 15766  1574                     	movf	((___awmod@divisor)),w
 15767  1574  0870               iorwf	((___awmod@divisor+1)),w
 15768  1575  0471               	btfsc	status,2
 15769  1576  1903               	goto	u1771
 15770  1577  2D79               	goto	u1770
 15771  1578  2D7A               u1771:
 15772  1579                     	goto	l2781
 15773  1579  2DAF               u1770:
 15774  157A                     	line	20
 15775                           	
 15776                           l2765:	
 15777  157A                     	clrf	(___awmod@counter)
 15778  157A  01F5               	incf	(___awmod@counter),f
 15779  157B  0AF5               	line	21
 15780                           	goto	l2771
 15781  157C  2D89               	
 15782                           l858:	
 15783  157D                     	line	22
 15784                           	
 15785                           l2767:	
 15786  157D                     	movlw	01h
 15787  157D  3001               	
 15788                           u1785:
 15789  157E                     	clrc
 15790  157E  1003               	rlf	(___awmod@divisor),f
 15791  157F  0DF0               	rlf	(___awmod@divisor+1),f
 15792  1580  0DF1               	addlw	-1
 15793  1581  3EFF               	skipz
 15794  1582  1D03               	goto	u1785
 15795  1583  2D7E               	line	23
 15796                           	
 15797                           l2769:	
 15798  1584                     	movlw	low(01h)
 15799  1584  3001               	movwf	(??___awmod+0)+0
 15800  1585  00F4               	movf	(??___awmod+0)+0,w
 15801  1586  0874               	addwf	(___awmod@counter),f
 15802  1587  07F5               	goto	l2771
 15803  1588  2D89               	line	24
 15804                           	
 15805                           l857:	
 15806  1589                     	line	21
 15807                           	
 15808                           l2771:	
 15809  1589                     	btfss	(___awmod@divisor+1),(15)&7
 15810  1589  1FF1               	goto	u1791
 15811  158A  2D8C               	goto	u1790
 15812  158B  2D8D               u1791:
 15813  158C                     	goto	l2767
 15814  158C  2D7D               u1790:
 15815  158D                     	goto	l2773
 15816  158D  2D8F               	
 15817                           l859:	
 15818  158E                     	goto	l2773
 15819  158E  2D8F               	line	25
 15820                           	
 15821                           l860:	
 15822  158F                     	line	26
 15823                           	
 15824                           l2773:	
 15825  158F                     	movf	(___awmod@divisor+1),w
 15826  158F  0871               	subwf	(___awmod@dividend+1),w
 15827  1590  0273               	skipz
 15828  1591  1D03               	goto	u1805
 15829  1592  2D95               	movf	(___awmod@divisor),w
 15830  1593  0870               	subwf	(___awmod@dividend),w
 15831  1594  0272               u1805:
 15832  1595                     	skipc
 15833  1595  1C03               	goto	u1801
 15834  1596  2D98               	goto	u1800
 15835  1597  2D99               u1801:
 15836  1598                     	goto	l2777
 15837  1598  2DA0               u1800:
 15838  1599                     	line	27
 15839                           	
 15840                           l2775:	
 15841  1599                     	movf	(___awmod@divisor),w
 15842  1599  0870               	subwf	(___awmod@dividend),f
 15843  159A  02F2               	movf	(___awmod@divisor+1),w
 15844  159B  0871               	skipc
 15845  159C  1C03               	decf	(___awmod@dividend+1),f
 15846  159D  03F3               	subwf	(___awmod@dividend+1),f
 15847  159E  02F3               	goto	l2777
 15848  159F  2DA0               	
 15849                           l861:	
 15850  15A0                     	line	28
 15851                           	
 15852                           l2777:	
 15853  15A0                     	movlw	01h
 15854  15A0  3001               	
 15855                           u1815:
 15856  15A1                     	clrc
 15857  15A1  1003               	rrf	(___awmod@divisor+1),f
 15858  15A2  0CF1               	rrf	(___awmod@divisor),f
 15859  15A3  0CF0               	addlw	-1
 15860  15A4  3EFF               	skipz
 15861  15A5  1D03               	goto	u1815
 15862  15A6  2DA1               	line	29
 15863                           	
 15864                           l2779:	
 15865  15A7                     	movlw	01h
 15866  15A7  3001               	subwf	(___awmod@counter),f
 15867  15A8  02F5               	btfss	status,2
 15868  15A9  1D03               	goto	u1821
 15869  15AA  2DAC               	goto	u1820
 15870  15AB  2DAD               u1821:
 15871  15AC                     	goto	l2773
 15872  15AC  2D8F               u1820:
 15873  15AD                     	goto	l2781
 15874  15AD  2DAF               	
 15875                           l862:	
 15876  15AE                     	goto	l2781
 15877  15AE  2DAF               	line	30
 15878                           	
 15879                           l856:	
 15880  15AF                     	line	31
 15881                           	
 15882                           l2781:	
 15883  15AF                     	movf	((___awmod@sign)),w
 15884  15AF  0876               	btfsc	status,2
 15885  15B0  1903               	goto	u1831
 15886  15B1  2DB3               	goto	u1830
 15887  15B2  2DB4               u1831:
 15888  15B3                     	goto	l2785
 15889  15B3  2DBA               u1830:
 15890  15B4                     	line	32
 15891                           	
 15892                           l2783:	
 15893  15B4                     	comf	(___awmod@dividend),f
 15894  15B4  09F2               	comf	(___awmod@dividend+1),f
 15895  15B5  09F3               	incf	(___awmod@dividend),f
 15896  15B6  0AF2               	skipnz
 15897  15B7  1903               	incf	(___awmod@dividend+1),f
 15898  15B8  0AF3               	goto	l2785
 15899  15B9  2DBA               	
 15900                           l863:	
 15901  15BA                     	line	33
 15902                           	
 15903                           l2785:	
 15904  15BA                     	movf	(___awmod@dividend+1),w
 15905  15BA  0873               	movwf	(?___awmod+1)
 15906  15BB  00F1               	movf	(___awmod@dividend),w
 15907  15BC  0872               	movwf	(?___awmod)
 15908  15BD  00F0               	goto	l864
 15909  15BE  2DBF               	
 15910                           l2787:	
 15911  15BF                     	line	34
 15912                           	
 15913                           l864:	
 15914  15BF                     	return
 15915  15BF  0008               	opt stack 0
 15916                           GLOBAL	__end_of___awmod
 15917                           	__end_of___awmod:
 15918  15C0                     	signat	___awmod,8314
 15919                           	global	_RealTimeClock_write_byte
 15920                           
 15921 ;; *************** function _RealTimeClock_write_byte *****************
 15922 ;; Defined at:
 15923 ;;		line 26 in file "realtimeclock.c"
 15924 ;; Parameters:    Size  Location     Type
 15925 ;;  time_tx         1    wreg     unsigned char 
 15926 ;; Auto vars:     Size  Location     Type
 15927 ;;  time_tx         1    4[COMMON] unsigned char 
 15928 ;;  i               2    2[COMMON] int 
 15929 ;; Return value:  Size  Location     Type
 15930 ;;                  1    wreg      void 
 15931 ;; Registers used:
 15932 ;;		wreg, status,2, status,0, btemp+1
 15933 ;; Tracked objects:
 15934 ;;		On entry : 0/0
 15935 ;;		On exit  : 0/0
 15936 ;;		Unchanged: 0/0
 15937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15938 ;;      Params:         0       0       0       0       0
 15939 ;;      Locals:         3       0       0       0       0
 15940 ;;      Temps:          2       0       0       0       0
 15941 ;;      Totals:         5       0       0       0       0
 15942 ;;Total ram usage:        5 bytes
 15943 ;; Hardware stack levels used:    1
 15944 ;; This function calls:
 15945 ;;		Nothing
 15946 ;; This function is called by:
 15947 ;;		_RealTimeClock_set_burst_time
 15948 ;;		_RealTimeClock_init
 15949 ;;		_RealTimeClock_get_seconds
 15950 ;;		_RealTimeClock_get_minutes
 15951 ;;		_RealTimeClock_get_hours
 15952 ;;		_RealTimeClock_get_day_of_month
 15953 ;;		_RealTimeClock_get_month
 15954 ;;		_RealTimeClock_get_day_of_week
 15955 ;;		_RealTimeClock_get_year
 15956 ;;		_RealTimeClock_set_seconds
 15957 ;;		_RealTimeClock_set_minutes
 15958 ;;		_RealTimeClock_set_hours
 15959 ;;		_RealTimeClock_set_day_of_week
 15960 ;;		_RealTimeClock_get_burst_time
 15961 ;; This function uses a non-reentrant model
 15962 ;;
 15963                           psect	text54,local,class=CODE,delta=2,merge=1,group=0
 15964                           	file	"realtimeclock.c"
 15965                           	line	26
 15966                           global __ptext54
 15967                           __ptext54:	;psect for function _RealTimeClock_write_byte
 15968  11AC                     psect	text54
 15969                           	file	"realtimeclock.c"
 15970                           	line	26
 15971                           	global	__size_of_RealTimeClock_write_byte
 15972                           	__size_of_RealTimeClock_write_byte	equ	__end_of_RealTimeClock_write_byte-_RealTimeClock
                                 _write_byte
 15973  003B                     	
 15974                           _RealTimeClock_write_byte:	
 15975  11AC                     ;incstack = 0
 15976                           	opt	stack 2
 15977                           ; Regs used in _RealTimeClock_write_byte: [wreg+status,2+status,0+btemp+1]
 15978                           ;RealTimeClock_write_byte@time_tx stored from wreg
 15979                           	movwf	(RealTimeClock_write_byte@time_tx)
 15980  11AC  00F4               	line	27
 15981                           	
 15982                           l2811:	
 15983  11AD                     ;realtimeclock.c: 27:     for(int i = 0; i < 8; ++i) {
 15984                           	clrf	(RealTimeClock_write_byte@i)
 15985  11AD  01F2               	clrf	(RealTimeClock_write_byte@i+1)
 15986  11AE  01F3               	
 15987                           l2813:	
 15988  11AF                     	movf	(RealTimeClock_write_byte@i+1),w
 15989  11AF  0873               	xorlw	80h
 15990  11B0  3A80               	movwf	btemp+1
 15991  11B1  00FF               	movlw	(0)^80h
 15992  11B2  3080               	subwf	btemp+1,w
 15993  11B3  027F               	skipz
 15994  11B4  1D03               	goto	u1875
 15995  11B5  29B8               	movlw	08h
 15996  11B6  3008               	subwf	(RealTimeClock_write_byte@i),w
 15997  11B7  0272               u1875:
 15998  11B8                     
 15999                           	skipc
 16000  11B8  1C03               	goto	u1871
 16001  11B9  29BB               	goto	u1870
 16002  11BA  29BC               u1871:
 16003  11BB                     	goto	l330
 16004  11BB  29BE               u1870:
 16005  11BC                     	goto	l331
 16006  11BC  29E3               	
 16007                           l2815:	
 16008  11BD                     	goto	l331
 16009  11BD  29E3               	
 16010                           l330:	
 16011  11BE                     	line	28
 16012                           ;realtimeclock.c: 28:         RB4 = 0;
 16013                           	bcf	status, 5	;RP0=0, select bank0
 16014  11BE  1283               	bcf	status, 6	;RP1=0, select bank0
 16015  11BF  1303               	bcf	(52/8),(52)&7	;volatile
 16016  11C0  1206               	line	29
 16017                           ;realtimeclock.c: 29:         RB0 = 0;
 16018                           	bcf	(48/8),(48)&7	;volatile
 16019  11C1  1006               	line	30
 16020                           ;realtimeclock.c: 30:         if (time_tx&0x01) {
 16021                           	btfss	(RealTimeClock_write_byte@time_tx),(0)&7
 16022  11C2  1C74               	goto	u1881
 16023  11C3  29C5               	goto	u1880
 16024  11C4  29C6               u1881:
 16025  11C5                     	goto	l2819
 16026  11C5  29C8               u1880:
 16027  11C6                     	line	31
 16028                           	
 16029                           l2817:	
 16030  11C6                     ;realtimeclock.c: 31:             RB4 = 1;
 16031                           	bsf	(52/8),(52)&7	;volatile
 16032  11C6  1606               	goto	l2819
 16033  11C7  29C8               	line	32
 16034                           ;realtimeclock.c: 32:         }
 16035                           	
 16036                           l332:	
 16037  11C8                     	line	33
 16038                           	
 16039                           l2819:	
 16040  11C8                     ;realtimeclock.c: 33:         time_tx = time_tx >> 1;
 16041                           	movf	(RealTimeClock_write_byte@time_tx),w
 16042  11C8  0874               	movwf	(??_RealTimeClock_write_byte+0)+0
 16043  11C9  00F0               	clrc
 16044  11CA  1003               	rrf	(??_RealTimeClock_write_byte+0)+0,w
 16045  11CB  0C70               	movwf	(??_RealTimeClock_write_byte+1)+0
 16046  11CC  00F1               	movf	(??_RealTimeClock_write_byte+1)+0,w
 16047  11CD  0871               	movwf	(RealTimeClock_write_byte@time_tx)
 16048  11CE  00F4               	line	34
 16049                           	
 16050                           l2821:	
 16051  11CF                     ;realtimeclock.c: 34:         RB0 = 1;
 16052                           	bsf	(48/8),(48)&7	;volatile
 16053  11CF  1406               	line	35
 16054                           	
 16055                           l2823:	
 16056  11D0                     ;realtimeclock.c: 35:     }
 16057                           	movlw	01h
 16058  11D0  3001               	addwf	(RealTimeClock_write_byte@i),f
 16059  11D1  07F2               	skipnc
 16060  11D2  1803               	incf	(RealTimeClock_write_byte@i+1),f
 16061  11D3  0AF3               	movlw	0
 16062  11D4  3000               	addwf	(RealTimeClock_write_byte@i+1),f
 16063  11D5  07F3               	
 16064                           l2825:	
 16065  11D6                     	movf	(RealTimeClock_write_byte@i+1),w
 16066  11D6  0873               	xorlw	80h
 16067  11D7  3A80               	movwf	btemp+1
 16068  11D8  00FF               	movlw	(0)^80h
 16069  11D9  3080               	subwf	btemp+1,w
 16070  11DA  027F               	skipz
 16071  11DB  1D03               	goto	u1895
 16072  11DC  29DF               	movlw	08h
 16073  11DD  3008               	subwf	(RealTimeClock_write_byte@i),w
 16074  11DE  0272               u1895:
 16075  11DF                     
 16076                           	skipc
 16077  11DF  1C03               	goto	u1891
 16078  11E0  29E2               	goto	u1890
 16079  11E1  29E3               u1891:
 16080  11E2                     	goto	l330
 16081  11E2  29BE               u1890:
 16082  11E3                     	
 16083                           l331:	
 16084  11E3                     	line	36
 16085                           ;realtimeclock.c: 36:     RB0 = 0;
 16086                           	bcf	status, 5	;RP0=0, select bank0
 16087  11E3  1283               	bcf	status, 6	;RP1=0, select bank0
 16088  11E4  1303               	bcf	(48/8),(48)&7	;volatile
 16089  11E5  1006               	line	37
 16090                           	
 16091                           l333:	
 16092  11E6                     	return
 16093  11E6  0008               	opt stack 0
 16094                           GLOBAL	__end_of_RealTimeClock_write_byte
 16095                           	__end_of_RealTimeClock_write_byte:
 16096  11E7                     	signat	_RealTimeClock_write_byte,4217
 16097                           	global	_RealTimeClock_read_byte
 16098                           
 16099 ;; *************** function _RealTimeClock_read_byte *****************
 16100 ;; Defined at:
 16101 ;;		line 39 in file "realtimeclock.c"
 16102 ;; Parameters:    Size  Location     Type
 16103 ;;		None
 16104 ;; Auto vars:     Size  Location     Type
 16105 ;;  i               2    3[COMMON] int 
 16106 ;;  time_rx         1    2[COMMON] unsigned char 
 16107 ;; Return value:  Size  Location     Type
 16108 ;;                  1    wreg      unsigned char 
 16109 ;; Registers used:
 16110 ;;		wreg, status,2, status,0, btemp+1
 16111 ;; Tracked objects:
 16112 ;;		On entry : 0/0
 16113 ;;		On exit  : 0/0
 16114 ;;		Unchanged: 0/0
 16115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 16116 ;;      Params:         0       0       0       0       0
 16117 ;;      Locals:         3       0       0       0       0
 16118 ;;      Temps:          2       0       0       0       0
 16119 ;;      Totals:         5       0       0       0       0
 16120 ;;Total ram usage:        5 bytes
 16121 ;; Hardware stack levels used:    1
 16122 ;; This function calls:
 16123 ;;		Nothing
 16124 ;; This function is called by:
 16125 ;;		_RealTimeClock_get_seconds
 16126 ;;		_RealTimeClock_get_minutes
 16127 ;;		_RealTimeClock_get_hours
 16128 ;;		_RealTimeClock_get_day_of_month
 16129 ;;		_RealTimeClock_get_month
 16130 ;;		_RealTimeClock_get_day_of_week
 16131 ;;		_RealTimeClock_get_year
 16132 ;;		_RealTimeClock_get_burst_time
 16133 ;; This function uses a non-reentrant model
 16134 ;;
 16135                           psect	text55,local,class=CODE,delta=2,merge=1,group=0
 16136                           	line	39
 16137                           global __ptext55
 16138                           __ptext55:	;psect for function _RealTimeClock_read_byte
 16139  142D                     psect	text55
 16140                           	file	"realtimeclock.c"
 16141                           	line	39
 16142                           	global	__size_of_RealTimeClock_read_byte
 16143                           	__size_of_RealTimeClock_read_byte	equ	__end_of_RealTimeClock_read_byte-_RealTimeClock_r
                                 ead_byte
 16144  0047                     	
 16145                           _RealTimeClock_read_byte:	
 16146  142D                     ;incstack = 0
 16147                           	opt	stack 2
 16148                           ; Regs used in _RealTimeClock_read_byte: [wreg+status,2+status,0+btemp+1]
 16149                           	line	41
 16150                           	
 16151                           l2827:	
 16152  142D                     ;realtimeclock.c: 41:     unsigned char time_rx = 0;
 16153                           	clrf	(RealTimeClock_read_byte@time_rx)
 16154  142D  01F2               	line	42
 16155                           	
 16156                           l2829:	
 16157  142E                     ;realtimeclock.c: 42:     TRISB4 = 1;
 16158                           	bsf	status, 5	;RP0=1, select bank1
 16159  142E  1683               	bcf	status, 6	;RP1=0, select bank1
 16160  142F  1303               	bsf	(1076/8)^080h,(1076)&7	;volatile
 16161  1430  1606               	line	43
 16162                           ;realtimeclock.c: 43:     for(int i = 0; i < 8; ++i) {
 16163                           	clrf	(RealTimeClock_read_byte@i)
 16164  1431  01F3               	clrf	(RealTimeClock_read_byte@i+1)
 16165  1432  01F4               	
 16166                           l2831:	
 16167  1433                     	movf	(RealTimeClock_read_byte@i+1),w
 16168  1433  0874               	xorlw	80h
 16169  1434  3A80               	movwf	btemp+1
 16170  1435  00FF               	movlw	(0)^80h
 16171  1436  3080               	subwf	btemp+1,w
 16172  1437  027F               	skipz
 16173  1438  1D03               	goto	u1905
 16174  1439  2C3C               	movlw	08h
 16175  143A  3008               	subwf	(RealTimeClock_read_byte@i),w
 16176  143B  0273               u1905:
 16177  143C                     
 16178                           	skipc
 16179  143C  1C03               	goto	u1901
 16180  143D  2C3F               	goto	u1900
 16181  143E  2C40               u1901:
 16182  143F                     	goto	l336
 16183  143F  2C42               u1900:
 16184  1440                     	goto	l337
 16185  1440  2C6B               	
 16186                           l2833:	
 16187  1441                     	goto	l337
 16188  1441  2C6B               	
 16189                           l336:	
 16190  1442                     	line	44
 16191                           ;realtimeclock.c: 44:         RB0 = 1;
 16192                           	bcf	status, 5	;RP0=0, select bank0
 16193  1442  1283               	bcf	status, 6	;RP1=0, select bank0
 16194  1443  1303               	bsf	(48/8),(48)&7	;volatile
 16195  1444  1406               	line	47
 16196                           ;realtimeclock.c: 47:         if(RB4) time_rx += 1 << i;
 16197                           	btfss	(52/8),(52)&7	;volatile
 16198  1445  1E06               	goto	u1911
 16199  1446  2C48               	goto	u1910
 16200  1447  2C49               u1911:
 16201  1448                     	goto	l2837
 16202  1448  2C57               u1910:
 16203  1449                     	
 16204                           l2835:	
 16205  1449                     	movlw	low(01h)
 16206  1449  3001               	movwf	(??_RealTimeClock_read_byte+0)+0
 16207  144A  00F0               	incf	(RealTimeClock_read_byte@i),w
 16208  144B  0A73               	goto	u1924
 16209  144C  2C4F               u1925:
 16210  144D                     	clrc
 16211  144D  1003               	rlf	(??_RealTimeClock_read_byte+0)+0,f
 16212  144E  0DF0               u1924:
 16213  144F                     	addlw	-1
 16214  144F  3EFF               	skipz
 16215  1450  1D03               	goto	u1925
 16216  1451  2C4D               	movf	0+(??_RealTimeClock_read_byte+0)+0,w
 16217  1452  0870               	movwf	(??_RealTimeClock_read_byte+1)+0
 16218  1453  00F1               	movf	(??_RealTimeClock_read_byte+1)+0,w
 16219  1454  0871               	addwf	(RealTimeClock_read_byte@time_rx),f
 16220  1455  07F2               	goto	l2837
 16221  1456  2C57               	
 16222                           l338:	
 16223  1457                     	line	48
 16224                           	
 16225                           l2837:	
 16226  1457                     ;realtimeclock.c: 48:         RB0 = 0;
 16227                           	bcf	(48/8),(48)&7	;volatile
 16228  1457  1006               	line	49
 16229                           	
 16230                           l2839:	
 16231  1458                     ;realtimeclock.c: 49:     }
 16232                           	movlw	01h
 16233  1458  3001               	addwf	(RealTimeClock_read_byte@i),f
 16234  1459  07F3               	skipnc
 16235  145A  1803               	incf	(RealTimeClock_read_byte@i+1),f
 16236  145B  0AF4               	movlw	0
 16237  145C  3000               	addwf	(RealTimeClock_read_byte@i+1),f
 16238  145D  07F4               	
 16239                           l2841:	
 16240  145E                     	movf	(RealTimeClock_read_byte@i+1),w
 16241  145E  0874               	xorlw	80h
 16242  145F  3A80               	movwf	btemp+1
 16243  1460  00FF               	movlw	(0)^80h
 16244  1461  3080               	subwf	btemp+1,w
 16245  1462  027F               	skipz
 16246  1463  1D03               	goto	u1935
 16247  1464  2C67               	movlw	08h
 16248  1465  3008               	subwf	(RealTimeClock_read_byte@i),w
 16249  1466  0273               u1935:
 16250  1467                     
 16251                           	skipc
 16252  1467  1C03               	goto	u1931
 16253  1468  2C6A               	goto	u1930
 16254  1469  2C6B               u1931:
 16255  146A                     	goto	l336
 16256  146A  2C42               u1930:
 16257  146B                     	
 16258                           l337:	
 16259  146B                     	line	50
 16260                           ;realtimeclock.c: 50:     RB0 = 0;
 16261                           	bcf	status, 5	;RP0=0, select bank0
 16262  146B  1283               	bcf	status, 6	;RP1=0, select bank0
 16263  146C  1303               	bcf	(48/8),(48)&7	;volatile
 16264  146D  1006               	line	51
 16265                           ;realtimeclock.c: 51:     TRISB4 = 0;
 16266                           	bsf	status, 5	;RP0=1, select bank1
 16267  146E  1683               	bcf	status, 6	;RP1=0, select bank1
 16268  146F  1303               	bcf	(1076/8)^080h,(1076)&7	;volatile
 16269  1470  1206               	line	52
 16270                           	
 16271                           l2843:	
 16272  1471                     ;realtimeclock.c: 52:     return time_rx;
 16273                           	movf	(RealTimeClock_read_byte@time_rx),w
 16274  1471  0872               	goto	l339
 16275  1472  2C73               	
 16276                           l2845:	
 16277  1473                     	line	53
 16278                           	
 16279                           l339:	
 16280  1473                     	return
 16281  1473  0008               	opt stack 0
 16282                           GLOBAL	__end_of_RealTimeClock_read_byte
 16283                           	__end_of_RealTimeClock_read_byte:
 16284  1474                     	signat	_RealTimeClock_read_byte,89
 16285                           	global	_Buzzer_Init
 16286                           
 16287 ;; *************** function _Buzzer_Init *****************
 16288 ;; Defined at:
 16289 ;;		line 6 in file "Buzzer.c"
 16290 ;; Parameters:    Size  Location     Type
 16291 ;;		None
 16292 ;; Auto vars:     Size  Location     Type
 16293 ;;		None
 16294 ;; Return value:  Size  Location     Type
 16295 ;;                  1    wreg      void 
 16296 ;; Registers used:
 16297 ;;		None
 16298 ;; Tracked objects:
 16299 ;;		On entry : 0/0
 16300 ;;		On exit  : 0/0
 16301 ;;		Unchanged: 0/0
 16302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 16303 ;;      Params:         0       0       0       0       0
 16304 ;;      Locals:         0       0       0       0       0
 16305 ;;      Temps:          0       0       0       0       0
 16306 ;;      Totals:         0       0       0       0       0
 16307 ;;Total ram usage:        0 bytes
 16308 ;; Hardware stack levels used:    1
 16309 ;; This function calls:
 16310 ;;		Nothing
 16311 ;; This function is called by:
 16312 ;;		_main
 16313 ;; This function uses a non-reentrant model
 16314 ;;
 16315                           psect	text56,local,class=CODE,delta=2,merge=1,group=0
 16316                           	file	"Buzzer.c"
 16317                           	line	6
 16318                           global __ptext56
 16319                           __ptext56:	;psect for function _Buzzer_Init
 16320  1DCE                     psect	text56
 16321                           	file	"Buzzer.c"
 16322                           	line	6
 16323                           	global	__size_of_Buzzer_Init
 16324                           	__size_of_Buzzer_Init	equ	__end_of_Buzzer_Init-_Buzzer_Init
 16325  0004                     	
 16326                           _Buzzer_Init:	
 16327  1DCE                     ;incstack = 0
 16328                           	opt	stack 7
 16329                           ; Regs used in _Buzzer_Init: []
 16330                           	line	8
 16331                           	
 16332                           l4045:	
 16333  1DCE                     ;Buzzer.c: 8:     TRISB1 = 0;
 16334                           	bsf	status, 5	;RP0=1, select bank1
 16335  1DCE  1683               	bcf	status, 6	;RP1=0, select bank1
 16336  1DCF  1303               	bcf	(1073/8)^080h,(1073)&7	;volatile
 16337  1DD0  1086               	line	9
 16338                           	
 16339                           l530:	
 16340  1DD1                     	return
 16341  1DD1  0008               	opt stack 0
 16342                           GLOBAL	__end_of_Buzzer_Init
 16343                           	__end_of_Buzzer_Init:
 16344  1DD2                     	signat	_Buzzer_Init,89
 16345                           global	___latbits
 16346                           ___latbits	equ	2
 16347  0002                     	global	btemp
 16348                           	btemp set 07Eh
 16349  007E                     
 16350                           	DABS	1,126,2	;btemp
 16351                           	global	wtemp0
 16352                           	wtemp0 set btemp+0
 16353  007E                     	end


Data Sizes:
    Strings     212
    Constant    0
    Data        79
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     54      80
    BANK1            80      0      80
    BANK3            96      0      30
    BANK2            96      0       0

Pointer List with Targets:

    timeBuffer	PTR int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Get_Temp@buffer	PTR unsigned char  size(1) Largest target is 6
		 -> tempBuffer(BANK1[6]), 

    LCD_SendString@string	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_31(CODE[4]), STR_30(CODE[4]), STR_29(CODE[4]), STR_28(CODE[4]), 
		 -> STR_27(CODE[4]), STR_26(CODE[4]), STR_25(CODE[4]), STR_24(CODE[13]), 
		 -> STR_23(CODE[6]), STR_22(CODE[5]), SetTime@digits(BANK0[9]), STR_21(CODE[9]), 
		 -> STR_20(CODE[6]), STR_19(CODE[6]), STR_18(CODE[7]), STR_17(CODE[16]), 
		 -> STR_16(CODE[11]), STR_15(CODE[12]), STR_14(CODE[4]), STR_13(CODE[3]), 
		 -> STR_12(CODE[9]), ChangeTrigger@digits(BANK0[3]), STR_11(CODE[12]), STR_10(CODE[9]), 
		 -> tempBuffer(BANK1[6]), STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[7]), 
		 -> STR_6(CODE[9]), STR_5(CODE[7]), STR_4(CODE[9]), STR_3(CODE[10]), 
		 -> STR_2(CODE[8]), STR_1(CODE[7]), timeDisplayer(BANK1[9]), 

    sp__RealTimeClock_get_burst_time	PTR int  size(1) Largest target is 14
		 -> __RealTimeClock_buff(BANK3[14]), 

    RealTimeClock_set_burst_time@time	PTR int  size(1) Largest target is 16
		 -> start_date(BANK3[16]), 

    SetDate@Sunday	PTR unsigned char  size(1) Largest target is 4
		 -> STR_31(CODE[4]), 

    SetDate@Saturday	PTR unsigned char  size(1) Largest target is 4
		 -> STR_30(CODE[4]), 

    SetDate@Friday	PTR unsigned char  size(1) Largest target is 4
		 -> STR_29(CODE[4]), 

    SetDate@Thursday	PTR unsigned char  size(1) Largest target is 4
		 -> STR_28(CODE[4]), 

    SetDate@Wednesday	PTR unsigned char  size(1) Largest target is 4
		 -> STR_27(CODE[4]), 

    SetDate@Tuesday	PTR unsigned char  size(1) Largest target is 4
		 -> STR_26(CODE[4]), 

    SetDate@Monday	PTR unsigned char  size(1) Largest target is 4
		 -> STR_25(CODE[4]), 

    SetDate@DateSet	PTR unsigned char  size(1) Largest target is 13
		 -> STR_24(CODE[13]), 

    SetDate@Date	PTR unsigned char  size(1) Largest target is 6
		 -> STR_23(CODE[6]), 

    SetDate@Day	PTR unsigned char  size(1) Largest target is 5
		 -> STR_22(CODE[5]), 

    SetTime@TimeSet	PTR unsigned char  size(1) Largest target is 9
		 -> STR_21(CODE[9]), 

    SetTime@Time	PTR unsigned char  size(1) Largest target is 6
		 -> STR_20(CODE[6]), 

    DateDayScreen@day	PTR unsigned char  size(1) Largest target is 6
		 -> STR_19(CODE[6]), 

    DateDayScreen@date	PTR unsigned char  size(1) Largest target is 7
		 -> STR_18(CODE[7]), 

    SoundAlarm@Alarm	PTR unsigned char  size(1) Largest target is 16
		 -> STR_17(CODE[16]), 

    HeatingControlOff@On	PTR unsigned char  size(1) Largest target is 11
		 -> STR_16(CODE[11]), 

    HeatingControlOff@Off	PTR unsigned char  size(1) Largest target is 12
		 -> STR_15(CODE[12]), 

    SwapToHeatingDisplay@Off	PTR unsigned char  size(1) Largest target is 4
		 -> STR_14(CODE[4]), 

    SwapToHeatingDisplay@On	PTR unsigned char  size(1) Largest target is 3
		 -> STR_13(CODE[3]), 

    SwapToHeatingDisplay@Heat	PTR unsigned char  size(1) Largest target is 9
		 -> STR_12(CODE[9]), 

    ChangeTrigger@TriggerSet	PTR unsigned char  size(1) Largest target is 12
		 -> STR_11(CODE[12]), 

    ChangeTrigger@Trigger	PTR unsigned char  size(1) Largest target is 9
		 -> STR_10(CODE[9]), 

    MainScreen@Temp	PTR unsigned char  size(1) Largest target is 6
		 -> STR_9(CODE[6]), 

    MainScreen@Time	PTR unsigned char  size(1) Largest target is 6
		 -> STR_8(CODE[6]), 

    DisplayTemp@tempBuffer	PTR unsigned char  size(1) Largest target is 6
		 -> tempBuffer(BANK1[6]), 

    DisplayDay@Sunday	PTR unsigned char  size(1) Largest target is 7
		 -> STR_7(CODE[7]), 

    DisplayDay@Saturday	PTR unsigned char  size(1) Largest target is 9
		 -> STR_6(CODE[9]), 

    DisplayDay@Friday	PTR unsigned char  size(1) Largest target is 7
		 -> STR_5(CODE[7]), 

    DisplayDay@Thursday	PTR unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[9]), 

    DisplayDay@Wednesday	PTR unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[10]), 

    DisplayDay@Tuesday	PTR unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), 

    DisplayDay@Monday	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_SwapToHeatingDisplay
    _Switch24Hour->___awmod
    _SoundAlarm->_SwapToHeatingDisplay
    _HeatingControlOff->_SwapToHeatingDisplay
    _DisplayTime->_RealTimeClock_get_hours
    _DisplayTime->_RealTimeClock_get_minutes
    _DisplayTime->_RealTimeClock_get_seconds
    _Get_Temp->___lwdiv
    ___lwdiv->___lwmod
    _Write_Byte->_Delay
    _Reset->_Delay
    _Read_Byte->_Delay
    _RealTimeClock_set_seconds->___int_to_hex
    _RealTimeClock_set_minutes->___int_to_hex
    _RealTimeClock_set_hours->___int_to_hex
    _RealTimeClock_get_seconds->___hex_to_int
    _RealTimeClock_set_day_of_week->___int_to_hex
    _RealTimeClock_set_burst_time->___int_to_hex
    ___int_to_hex->___awmod
    _RealTimeClock_init->_RealTimeClock_write_byte
    _DateDayScreen->_SwapToHeatingDisplay
    _SwapToHeatingDisplay->_Keypad_Scan
    _SwapToHeatingDisplay->_LCD_SendString
    _LCD_SecondLine->_LCD_Command
    _DisplayDay->_RealTimeClock_get_day_of_week
    _RealTimeClock_get_day_of_week->___hex_to_int
    _DisplayDate->_RealTimeClock_get_day_of_month
    _DisplayDate->_RealTimeClock_get_month
    _DisplayDate->_RealTimeClock_get_year
    _RealTimeClock_get_year->___hex_to_int
    _RealTimeClock_get_month->___hex_to_int
    _RealTimeClock_get_day_of_month->___hex_to_int
    _ChangeTrigger->___awdiv
    _LCD_SendString->_LCD_SendData
    _Keypad_Scan->_Key_Delay
    _CheckTime->_RealTimeClock_get_hours
    _CheckTime->_RealTimeClock_get_minutes
    _RealTimeClock_get_minutes->___hex_to_int
    _RealTimeClock_get_hours->___hex_to_int
    ___hex_to_int->___awmod

Critical Paths under _main in BANK0

    _main->_SetTime
    _SoundAlarm->_HeatingControlOff
    _HeatingControlOff->_ChangeTrigger
    _MainScreen->_DisplayTemp
    _DisplayTime->_RealTimeClock_get_hours
    _DisplayTime->_RealTimeClock_get_minutes
    _DisplayTime->_RealTimeClock_get_seconds
    _DisplayTemp->_Get_Temp
    _SetTime->_RealTimeClock_get_hours
    _SetTime->_RealTimeClock_get_minutes
    _SetTime->_RealTimeClock_get_seconds
    _RealTimeClock_get_seconds->___hex_to_int
    _SetDate->_RealTimeClock_get_day_of_week
    _DateDayScreen->_ChangeTrigger
    _DisplayDay->_RealTimeClock_get_day_of_week
    _RealTimeClock_get_day_of_week->___hex_to_int
    _DisplayDate->_RealTimeClock_get_day_of_month
    _DisplayDate->_RealTimeClock_get_month
    _DisplayDate->_RealTimeClock_get_year
    _RealTimeClock_get_year->___hex_to_int
    _RealTimeClock_get_month->___hex_to_int
    _RealTimeClock_get_day_of_month->___hex_to_int
    _CheckTime->_RealTimeClock_get_hours
    _CheckTime->_RealTimeClock_get_minutes
    _RealTimeClock_get_minutes->___hex_to_int
    _RealTimeClock_get_hours->___hex_to_int

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  342784
                                             40 BANK0     14    14      0
                        _Buzzer_Init
                      _ChangeTrigger
                           _CheckDay
                          _CheckTime
                      _DateDayScreen
                  _HeatingControlOff
                        _Init_Keypad
                        _Keypad_Scan
                        _LCD_Command
                           _LCD_Init
                         _MainScreen
                         _Main_Delay
      _RealTimeClock_get_day_of_week
                 _RealTimeClock_init
       _RealTimeClock_set_burst_time
                            _SetDate
                            _SetTime
                         _SoundAlarm
                           _SoundOff
               _SwapToHeatingDisplay
                       _Switch24Hour
                   _Thermometer_Init
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Thermometer_Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch24Hour                                         4     2      2    4109
                                              7 COMMON     4     2      2
                        _LCD_Command
                       _LCD_SendData
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _SoundAlarm                                          10     2      8   98279
                                             28 BANK0     10     2      8
                      _ChangeTrigger
                           _Get_Temp
                  _HeatingControlOff
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SendString
                           _SoundOff
                            _SoundOn
               _SwapToHeatingDisplay
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _SoundOn                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HeatingControlOff                                   11     3      8   67874
                                             17 BANK0     11     3      8
                      _ChangeTrigger
                           _Get_Temp
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SendString
                         _MainScreen
                         _Main_Delay
                           _SoundOff
               _SwapToHeatingDisplay
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SoundOff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MainScreen                                           3     3      0   36704
                                              8 BANK0      3     3      0
                        _DisplayTemp
                        _DisplayTime
                     _LCD_SecondLine
                     _LCD_SendString
 ---------------------------------------------------------------------------------
 (4) _DisplayTime                                          1     1      0   21635
                                             12 COMMON     1     1      0
                     _LCD_SendString
            _RealTimeClock_get_hours
          _RealTimeClock_get_minutes
          _RealTimeClock_get_seconds
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) _DisplayTemp                                          1     1      0   12229
                                              7 BANK0      1     1      0
                           _Get_Temp
                           _LCD_Busy
                       _LCD_SendData
                     _LCD_SendString
 ---------------------------------------------------------------------------------
 (5) _Get_Temp                                             7     7      0    9358
                                              0 BANK0      7     7      0
                              _Delay
                          _Read_Byte
                              _Reset
                         _Write_Byte
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     466
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _Write_Byte                                           5     5      0     637
                                              4 COMMON     5     5      0
                              _Delay
 ---------------------------------------------------------------------------------
 (6) _Reset                                                2     2      0     548
                                              4 COMMON     2     2      0
                              _Delay
 ---------------------------------------------------------------------------------
 (6) _Read_Byte                                            3     3      0     594
                                              4 COMMON     3     3      0
                              _Delay
 ---------------------------------------------------------------------------------
 (7) _Delay                                                4     3      1     523
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetTime                                             33    31      2   38987
                                              7 BANK0     33    31      2
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SendString
                         _Main_Delay
            _RealTimeClock_get_hours
          _RealTimeClock_get_minutes
          _RealTimeClock_get_seconds
            _RealTimeClock_set_hours
          _RealTimeClock_set_minutes
          _RealTimeClock_set_seconds
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _RealTimeClock_set_seconds                            2     0      2    4628
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (2) _RealTimeClock_set_minutes                            2     0      2    4628
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (2) _RealTimeClock_set_hours                              2     0      2    4628
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (5) _RealTimeClock_get_seconds                            4     2      2    4265
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (1) _SetDate                                             17    15      2   14120
                                              7 BANK0     17    15      2
                           _CheckDay
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SecondLine
                     _LCD_SendString
                         _Main_Delay
      _RealTimeClock_get_day_of_week
      _RealTimeClock_set_day_of_week
 ---------------------------------------------------------------------------------
 (2) _RealTimeClock_set_day_of_week                        2     0      2    4628
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (2) _CheckDay                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RealTimeClock_set_burst_time                         5     5      0    4653
                                              0 BANK0      5     5      0
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (3) ___int_to_hex                                         7     5      2    4439
                                              7 COMMON     7     5      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _RealTimeClock_init                                   0     0      0      91
           _RealTimeClock_write_byte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Keypad                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DateDayScreen                                        5     3      2   46272
                                             17 BANK0      5     3      2
                      _ChangeTrigger
                        _DisplayDate
                         _DisplayDay
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SecondLine
                     _LCD_SendString
               _SwapToHeatingDisplay
 ---------------------------------------------------------------------------------
 (1) _SwapToHeatingDisplay                                 6     4      2    4498
                                              8 COMMON     6     4      2
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SendString
 ---------------------------------------------------------------------------------
 (4) _LCD_SecondLine                                       0     0      0      22
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _DisplayDay                                           8     8      0    7198
                                             12 COMMON     1     1      0
                                              7 BANK0      7     7      0
                     _LCD_SendString
      _RealTimeClock_get_day_of_week
 ---------------------------------------------------------------------------------
 (2) _RealTimeClock_get_day_of_week                        4     2      2    4265
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (2) _DisplayDate                                          7     7      0   19067
                                             12 COMMON     1     1      0
                                              7 BANK0      6     6      0
     _RealTimeClock_get_day_of_month
            _RealTimeClock_get_month
             _RealTimeClock_get_year
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_get_year                               4     2      2    4265
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_get_month                              4     2      2    4265
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_get_day_of_month                       4     2      2    4265
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (3) _ChangeTrigger                                       17    17      0   11152
                                              0 BANK0     17    17      0
                        _Keypad_Scan
                           _LCD_Busy
                        _LCD_Command
                       _LCD_SendData
                     _LCD_SendString
                         _Main_Delay
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    2124
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _Main_Delay                                           7     5      2     548
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (2) _LCD_SendString                                       7     5      2    2772
                                              1 COMMON     7     5      2
                       _LCD_SendData
 ---------------------------------------------------------------------------------
 (2) _LCD_SendData                                         1     1      0      22
                                              0 COMMON     1     1      0
                           _LCD_Busy
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0      22
                                              0 COMMON     1     1      0
                           _LCD_Busy
 ---------------------------------------------------------------------------------
 (3) _LCD_Busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Keypad_Scan                                          2     0      2    1308
                                              6 COMMON     2     0      2
                          _Key_Delay
 ---------------------------------------------------------------------------------
 (3) _Key_Delay                                            6     4      2    1308
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _CheckTime                                            1     1      0    8530
                                             12 COMMON     1     1      0
            _RealTimeClock_get_hours
          _RealTimeClock_get_minutes
 ---------------------------------------------------------------------------------
 (5) _RealTimeClock_get_minutes                            4     2      2    4265
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (5) _RealTimeClock_get_hours                              4     2      2    4265
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (6) ___hex_to_int                                         8     6      2    4059
                                              7 COMMON     3     1      2
                                              0 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    3944
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) _RealTimeClock_write_byte                             5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _RealTimeClock_read_byte                              5     5      0      92
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Init
   _ChangeTrigger
     _Keypad_Scan
       _Key_Delay
     _LCD_Busy
     _LCD_Command
       _LCD_Busy
     _LCD_SendData
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _Main_Delay
     ___awdiv
     ___awmod
   _CheckDay
   _CheckTime
     _RealTimeClock_get_hours
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_get_minutes
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
   _DateDayScreen
     _ChangeTrigger
       _Keypad_Scan
         _Key_Delay
       _LCD_Busy
       _LCD_Command
         _LCD_Busy
       _LCD_SendData
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _Main_Delay
       ___awdiv
       ___awmod
     _DisplayDate
       _RealTimeClock_get_day_of_month
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_month
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_year
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       ___awdiv
       ___awmod
     _DisplayDay
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _RealTimeClock_get_day_of_week
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SecondLine
       _LCD_Command
         _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _SwapToHeatingDisplay
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
   _HeatingControlOff
     _ChangeTrigger
       _Keypad_Scan
         _Key_Delay
       _LCD_Busy
       _LCD_Command
         _LCD_Busy
       _LCD_SendData
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _Main_Delay
       ___awdiv
       ___awmod
     _Get_Temp
       _Delay
       _Read_Byte
         _Delay
       _Reset
         _Delay
       _Write_Byte
         _Delay
       ___awdiv
       ___awmod
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _MainScreen
       _DisplayTemp
         _Get_Temp
           _Delay
           _Read_Byte
             _Delay
           _Reset
             _Delay
           _Write_Byte
             _Delay
           ___awdiv
           ___awmod
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _LCD_Busy
         _LCD_SendData
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
       _DisplayTime
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _RealTimeClock_get_hours
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_get_minutes
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_get_seconds
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         ___awdiv
         ___awmod
       _LCD_SecondLine
         _LCD_Command
           _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
     _Main_Delay
     _SoundOff
     _SwapToHeatingDisplay
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
     ___wmul
   _Init_Keypad
   _Keypad_Scan
     _Key_Delay
   _LCD_Command
     _LCD_Busy
   _LCD_Init
   _MainScreen
     _DisplayTemp
       _Get_Temp
         _Delay
         _Read_Byte
           _Delay
         _Reset
           _Delay
         _Write_Byte
           _Delay
         ___awdiv
         ___awmod
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _LCD_Busy
       _LCD_SendData
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
     _DisplayTime
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _RealTimeClock_get_hours
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_minutes
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_seconds
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       ___awdiv
       ___awmod
     _LCD_SecondLine
       _LCD_Command
         _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
   _Main_Delay
   _RealTimeClock_get_day_of_week
     _RealTimeClock_read_byte
     _RealTimeClock_write_byte
     ___hex_to_int
       ___awmod
   _RealTimeClock_init
     _RealTimeClock_write_byte
   _RealTimeClock_set_burst_time
     _RealTimeClock_write_byte
     ___int_to_hex
       ___awmod
   _SetDate
     _CheckDay
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SecondLine
       _LCD_Command
         _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _Main_Delay
     _RealTimeClock_get_day_of_week
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_set_day_of_week
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
   _SetTime
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _Main_Delay
     _RealTimeClock_get_hours
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_get_minutes
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_get_seconds
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_set_hours
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
     _RealTimeClock_set_minutes
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
     _RealTimeClock_set_seconds
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
     ___awdiv
     ___awmod
   _SoundAlarm
     _ChangeTrigger
       _Keypad_Scan
         _Key_Delay
       _LCD_Busy
       _LCD_Command
         _LCD_Busy
       _LCD_SendData
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _Main_Delay
       ___awdiv
       ___awmod
     _Get_Temp
       _Delay
       _Read_Byte
         _Delay
       _Reset
         _Delay
       _Write_Byte
         _Delay
       ___awdiv
       ___awmod
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _HeatingControlOff
       _ChangeTrigger
         _Keypad_Scan
           _Key_Delay
         _LCD_Busy
         _LCD_Command
           _LCD_Busy
         _LCD_SendData
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _Main_Delay
         ___awdiv
         ___awmod
       _Get_Temp
         _Delay
         _Read_Byte
           _Delay
         _Reset
           _Delay
         _Write_Byte
           _Delay
         ___awdiv
         ___awmod
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _MainScreen
         _DisplayTemp
           _Get_Temp
             _Delay
             _Read_Byte
               _Delay
             _Reset
               _Delay
             _Write_Byte
               _Delay
             ___awdiv
             ___awmod
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _LCD_Busy
           _LCD_SendData
             _LCD_Busy
           _LCD_SendString
             _LCD_SendData
               _LCD_Busy
         _DisplayTime
           _LCD_SendString
             _LCD_SendData
               _LCD_Busy
           _RealTimeClock_get_hours
             _RealTimeClock_read_byte
             _RealTimeClock_write_byte
             ___hex_to_int
               ___awmod
           _RealTimeClock_get_minutes
             _RealTimeClock_read_byte
             _RealTimeClock_write_byte
             ___hex_to_int
               ___awmod
           _RealTimeClock_get_seconds
             _RealTimeClock_read_byte
             _RealTimeClock_write_byte
             ___hex_to_int
               ___awmod
           ___awdiv
           ___awmod
         _LCD_SecondLine
           _LCD_Command
             _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
       _Main_Delay
       _SoundOff
       _SwapToHeatingDisplay
         _Keypad_Scan
           _Key_Delay
         _LCD_Command
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
       ___wmul
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _SoundOff
     _SoundOn
     _SwapToHeatingDisplay
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
     ___wmul
   _SoundOff
   _SwapToHeatingDisplay
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
   _Switch24Hour
     _LCD_Command
       _LCD_Busy
     _LCD_SendData
       _LCD_Busy
     ___awmod
   _Thermometer_Init
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      1E       9       31.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     36      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CC      12        0.0%
ABS                  0      0      CC       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Jan 08 12:57:33 2019

        ??_RealTimeClock_get_day_of_week 007A          ?_RealTimeClock_get_day_of_month 0025  
       ??_RealTimeClock_get_day_of_month 007A                                        pc 0002  
                           ?_LCD_Command 0070                                       l97 128D  
                                     l98 1262                                       l99 1273  
                ?_RealTimeClock_get_year 0025                             ___awdiv@sign 0076  
                                     fsr 0004                      ___wmul@multiplicand 0072  
                             Key_Delay@i 0072                               Key_Delay@j 0074  
                             Key_Delay@k 0070                             _Switch24Hour 1176  
                                    l100 1287                                      l101 129C  
                                    l102 129C                                      l111 089D  
                                    l120 08BB                                      l112 083B  
                                    l200 05B0                                      l113 08BB  
                                    l201 06F0                                      l105 09A1  
                                    l130 0BD6                                      l114 0848  
                                    l210 0659                                      l202 05B1  
                                    l131 0CE0                                      l115 0856  
                                    l211 063B                                      l203 061F  
                                    l123 1FFF                                      l132 0C58  
                                    l140 0C20                                      l108 17FF  
                                    l116 0864                                      l220 06DC  
                                    l212 0658                                      l204 05F7  
                                    l141 0C38                                      l133 0BD7  
                                    l117 0872                                      l221 06BE  
                                    l213 065A                                      l205 05D9  
                                    l142 0C56                                      l134 0BE4  
                                    l118 0880                                      l150 1686  
                                    l230 12A5                                      l222 06DB  
                                    l214 06A3                                      l206 05F6  
                                    l126 1175                                      l143 0CDF  
                                    l135 0BE7                                      l119 088E  
                                    l151 16A1                                      l231 12AA  
                                    l223 07B7                                      l215 069F  
                                    l207 061E                                      l320 150D  
                                    l136 0C6D                                      l144 0CE0  
                                    l152 16A0                                      l232 12AF  
                                    l240 0D89                                      l216 0681  
                                    l208 05FF                                      l224 07B8  
                                    l160 0B71                                      l137 0BE8  
                                    l129 0B8A                                      l153 16A2  
                                    l233 12B4                                      l241 0E6F  
                                    l217 069E                                      l209 061D  
                                    l161 0B73                                      l330 11BE  
                                    l410 1121                                      l138 0C01  
                                    l154 16A3                                      l234 12B9  
                                    l242 0DC7                                      l250 0DC5  
                                    l218 06A2                                      l162 0B72  
                                    l170 00DE                                      l331 11E3  
                                    l411 1131                                      l139 0C1F  
                                    l147 1644                                      l323 134F  
                                    l227 12BF                                      l235 12BC  
                                    l251 0DBB                                      l243 0D8A  
                                    l219 06A1                                      l163 0B73  
                                    l171 00DC                                      l332 11C8  
                                    l316 14F8                                      l412 1142  
                                    l420 00F9                                      l148 165B  
                                    l324 1324                                      l236 12DD  
                                    l228 129E                                      l260 0E32  
                                    l244 0DD9                                      l252 0DC4  
                                    l172 00DD                                      l180 11AB  
                                    l333 11E6                                      l317 14C7  
                                    l413 1142                                      l421 00F3  
                                    l149 16A3                                      l325 1349  
                                    l229 12DD                                      l253 0E4F  
                                    l261 0E40                                      l245 0D8B  
                                    l157 0AC8                                      l173 00DE  
                                    l318 14F0                                      l270 0A30  
                                    l430 0129                                      l422 02A5  
                                    l502 1E3C                                      l326 135E  
                                    l342 152B                                      l262 0E6E  
                                    l254 0DEC                                      l246 0DA8  
                                    l158 0AEB                                      l166 001D  
                                    l319 1506                                      l271 0A28  
                                    l431 0136                                      l423 0100  
                                    l503 1E3A                                      l511 1DFD  
                                    l183 16B4                                      l327 1360  
                                    l343 1559                                      l255 0E6D  
                                    l247 0D9E                                      l263 0E6F  
                                    l239 0D1F                                      l159 0AFD  
                                    l167 0080                                      l336 1442  
                                    l280 0A86                                      l272 0A20  
                                    l408 1137                                      l440 018B  
                                    l432 0151                                      l424 011B  
                                    l504 1E41                                      l520 1387  
                                    l184 16FD                                      l416 080A  
                                    l352 1EEB                                      l344 155C  
                                    l256 0DFA                                      l248 0DA7  
                                    l192 0518                                      l600 13E6  
                                    l168 0093                                      l176 118F  
                                    l337 146B                                      l361 1F0D  
                                    l273 0A27                                      l281 0A89  
                                    l409 1114                                      l441 0184  
                                    l433 014A                                      l425 0114  
                                    l505 1E44                                      l521 1364  
                                    l185 170D                                      l257 0E08  
                                    l249 0DA9                                      l601 13D4  
                                    l169 00AE                                      l177 11A9  
                                    l530 1DD1                                      l338 1457  
                                    l266 0A31                                      l274 0A2F  
                                    l450 01B4                                      l442 017E  
                                    l434 0144                                      l426 010E  
                                    l522 13A4                                      l370 1FB7  
                                    l514 1DE0                                      l186 1722  
                                    l258 0E16                                      l602 13E8  
                                    l610 0FBE                                      l178 11AB  
                                    l290 042E                                      l339 1473  
                                    l275 0A89                                      l267 09F3  
                                    l451 01C1                                      l443 018B  
                                    l435 0151                                      l427 011B  
                                    l419 0100                                      l523 13A4  
                                    l187 1720                                      l259 0E24  
                                    l355 1FD9                                      l195 059C  
                                    l611 0FCB                                      l179 11AA  
                                    l291 0441                                      l276 0A88  
                                    l268 09EB                                      l460 0216  
                                    l452 01E0                                      l444 01A6  
                                    l436 0170                                      l428 0136  
                                    l364 1F51                                      l188 1721  
                                    l508 1DE7                                      l196 07B8  
                                    l612 0FFF                                      l700 1110  
                                    l292 0454                                      l277 0A66  
                                    l269 09F2                                      l461 020F  
                                    l453 01D9                                      l445 019F  
                                    l437 0169                                      l429 012F  
                                    l517 1E0C                                      l373 1F95  
                                    l189 1722                                      l197 06DE  
                                    l605 0ECF                                      l533 1DD9  
                                    l293 047E                                      l358 1F2F  
                                    l278 0A87                                      l470 0243  
                                    l462 0209                                      l454 01D3  
                                    l446 0199                                      l438 0163  
                                    l382 1E93                                      l198 059D  
                                    l606 0EF2                                      l294 04CE  
                                    l286 031D                                      l279 0A7F  
                                    l471 0250                                      l463 0216  
                                    l455 01E0                                      l447 01A6  
                                    l439 0170                                      l367 1F73  
                                    l199 05A9                                      l607 0F69  
                                    l295 04D4                                      l287 03F5  
                                    l480 02A2                                      l472 026B  
                                    l464 0231                                      l456 01FB  
                                    l448 01C1                                      l376 1ECD  
                                    l608 0FA4                                      l536 1DD5  
                                    l296 04D5                                      l288 0408  
                                    l481 029A                                      l473 0264  
                                    l465 022A                                      l457 01F4  
                                    l449 01BA                                      l385 1E76  
                                    l609 0FB1                                      l297 04D5  
                                    l289 041B                                      l482 0294  
                                    l474 025E                                      l466 0224  
                                    l458 01EE                                      l483 02A1  
                                    l475 026B                                      l467 0231  
                                    l459 01FB                                      l379 1EB0  
                                    l476 0286                                      l468 0250  
                                    l580 1DEE                                      l477 027F  
                                    l469 0249                                      l573 1E46  
                                    l478 0279                                      l574 1E4B  
                                    l479 0286                                      l575 1E52  
                                    l583 1258                                      l591 13F5  
                                    l576 1E59                                      l584 1225  
                                    l592 142C                                      l841 15CD  
                                    l577 1E59                                      l585 124B  
                                    l593 140E                                      l850 162B  
                                    l842 15DB                                      l586 124D  
                                    l594 142C                                      l851 1630  
                                    l843 1620                                      l587 125E  
                                    l860 158F                                      l844 15F2  
                                    l588 125E                                      l861 15A0  
                                    l845 15E6                                      l862 15AE  
                                    l854 156A                                      l846 15F7  
                                    l863 15BA                                      l855 1574  
                                    l847 15F8                                      l599 13B1  
                                    l864 15BF                                      l856 15AF  
                                    l848 1611                                      l857 1589  
                                    l849 161F                                      l697 10EC  
                                    l858 157D                                      l970 14BE  
                                    l698 10F6                                      l859 158E  
                                    l963 14B9                                      l699 110B  
                                    l964 148B                                      l980 131E  
                                    l965 147F                                      l973 1319  
                                    l966 1490                                      l974 12F3  
                                    l967 1491                                      l975 12E7  
                                    l968 14AA                                      l976 12F8  
                                    l969 14B8                                      l977 12F9  
                                    l978 130A                                      l979 1318  
                                    _RA0 0028                                      _RA1 0029  
                                    _RB0 0030                                      _RA2 002A  
                                    _RA3 002B                                      _RB1 0031  
                                    _RC0 0038                                      _RC1 0039  
                                    _RB4 0034                                      _RC2 003A  
                                    _RB5 0035                                      _RC3 003B  
                                    _RC4 003C                                      _RC5 003D  
                                    _RC6 003E                                      _RC7 003F  
                                    _RD7 0047                                      _THB 0069  
               ?_RealTimeClock_get_hours 0025                                      _TLB 006A  
               ?_RealTimeClock_get_month 0025                              _triggerTemp 006C  
                  __size_of___int_to_hex 0042                                      fsr0 0004  
                                    indf 0000                             ___awmod@sign 0076  
                           __CFG_FOSC$HS 0000                           _LCD_SecondLine 1DDA  
                           ___hex_to_int 14BF                            ?_LCD_SendData 0070  
                           __CFG_LVP$OFF 0000                           _LCD_SendString 1361  
                                   l3001 1474                                     l3011 148B  
                                   l3003 1476                                     l3021 14B1  
                                   l3013 1491                                     l3005 147C  
                                   l3101 0EBC                                     l3015 14A2  
                                   l3007 147F                                     l3023 14B9  
                                   l3031 12E7                                     l3111 0EE4  
                                   l3103 0EC0                                     l4001 0806  
                                   l3025 14BE                                     l3017 14A8  
                                   l3009 1486                                     l3041 130A  
                                   l3033 12EE                                     l3121 0F4D  
                                   l3105 0ECE                                     l3113 0EF2  
                                   l3201 0984                                     l4011 1ED1  
                                   l3051 1FBB                                     l3019 14AA  
                                   l3043 1311                                     l3035 12F3  
                                   l3027 12DE                                     l3131 0FA4  
                                   l3123 0F53                                     l3115 0F23  
                                   l3107 0ECF                                     l3211 1FF9  
                                   l3203 0998                                     l4003 1DE8  
                                   l3061 1F11                                     l3301 026F  
                                   l3221 00F8                                     l3213 1DDA  
                                   l4021 1EDB                                     l4013 1ED5  
                                   l3053 1FC9                                     l3037 12F9  
                                   l3029 12E4                                     l3045 1319  
                                   l3141 0FC2                                     l3133 0FA8  
                                   l3125 0F95                                     l3117 0F26  
                                   l3109 0EDE                                     l3205 1FDD  
                                   l4005 1DEC                                     l4101 03BB  
                                   l3071 1EEF                                     l3063 1F1F  
                                   l3311 0299                                     l3303 0279  
                                   l3231 0129                                     l3223 0104  
                                   l3215 00DF                                     l3151 1DF5  
                                   l4023 1EDC                                     l4015 1ED6  
                                   l4031 1512                                     l3055 1FCC  
                                   l3047 131E                                     l3039 1303  
                                   l3143 0FCB                                     l3135 0FB1  
                                   l3127 0F97                                     l3119 0F40  
                                   l3207 1FEE                                     l4007 1DED  
                                   l4111 03F5                                     l4103 03D2  
                                   l3073 1EFD                                     l3065 1F22  
                                   l3161 1116                                     l3313 02A2  
                                   l3305 027E                                     l3241 0159  
                                   l3233 012E                                     l3225 010E  
                                   l3217 00E9                                     l3153 1DF7  
                                   l3081 1364                                     l3401 0BEE  
                                   l3321 1F63                                     l4025 1EE2  
                                   l4017 1ED7                                     l4009 1ECE  
                                   l4041 1544                                     l4033 1518  
                                   l3057 1FD9                                     l3049 1FB8  
                                   l3145 0FDE                                     l3137 0FB5  
                                   l3129 0F9B                                     l3209 1FF4  
                                   l4121 0424                                     l4113 03FE  
                                   l4105 03DD                                     l3075 1F00  
                                   l3067 1F2F                                     l3059 1F0E  
                                   l3163 1120                                     l3315 02A5  
                                   l3307 028A                                     l3251 0183  
                                   l3243 0163                                     l3235 013A  
                                   l3227 0113                                     l3219 00F3  
                                   l3155 1DF8                                     l3083 1380  
                                   l3171 1262                                     l3411 0C26  
                                   l3403 0BF4                                     l3331 1F41  
                                   l3323 1F66                                     l4027 1EE8  
                                   l4019 1ED8                                     l4043 154C  
                                   l4035 151C                                     l3147 0FFE  
                                   l3139 0FBE                                     l3091 0E87  
                                   l4131 0454                                     l4123 042E  
                                   l4115 0408                                     l4107 03E8  
                                   l4051 02BA                                     l4045 1DCE  
                                   l3077 1F0D                                     l3069 1EEC  
                                   l3165 1121                                     l3157 1111  
                                   l3309 0294                                     l3261 01B4  
                                   l3253 018F                                     l3245 0168  
                                   l3237 0144                                     l3229 011F  
                                   l3149 1DF0                                     l3085 1387  
                                   l3181 1287                                     l3173 1264  
                                   l3413 0C2D                                     l3405 0BF8  
                                   l3421 0C58                                     l3333 1F44  
                                   l3325 1F73                                     l3317 1F52  
                                   l3341 1F85                                     l4037 152A  
                                   l4029 1511                                     l3093 0E93  
                                   l3501 10EC                                     l4141 04A6  
                                   l4133 0464                                     l4125 0437  
                                   l4117 0411                                     l4109 03EE  
                                   l4061 02D1                                     l4053 02C0  
                                   l3167 1131                                     l3159 1114  
                                   l3271 01E4                                     l3263 01B9  
                                   l3255 0199                                     l3247 0174  
                                   l3239 0149                                     l3079 1361  
                                   l3175 1272                                     l3431 0CAC  
                                   l3415 0C2F                                     l3407 0C01  
                                   l3423 0C6D                                     l3335 1F51  
                                   l3327 1F30                                     l3319 1F55  
                                   l3343 1F88                                     l3351 1FA7  
                                   l4039 152B                                     l3095 0E9E  
                                   l3087 0E73                                     l3191 091A  
                                   l3183 08BC                                     l3511 1110  
                                   l3503 10F0                                     l4143 04AE  
                                   l4135 0468                                     l4127 0441  
                                   l4119 041B                                     l4071 02ED  
                                   l4063 02D7                                     l4055 02C5  
                                   l4047 02A6                                     l2801 14CF  
                                   l3281 020E                                     l3273 01EE  
                                   l3265 01C9                                     l3257 019E  
                                   l3249 017E                                     l3177 1273  
                                   l3169 125F                                     l3441 0CC6  
                                   l3433 0CAD                                     l3425 0C71  
                                   l3417 0C38                                     l3409 0C20  
                                   l3329 1F33                                     l3345 1F95  
                                   l3337 1F74                                     l3521 1781  
                                   l3513 1723                                     l3353 1FAA  
                                   l3097 0EA6                                     l3089 0E76  
                                   l3193 0930                                     l3185 08DD  
                                   l3361 1158                                     l3505 10FD  
                                   l3601 0B0E                                     l4145 04B6  
                                   l4137 047E                                     l4129 044A  
                                   l4081 0313                                     l4073 02F3  
                                   l4065 02DB                                     l4057 02C9  
                                   l4049 02B5                                     l2811 11AD  
                                   l2803 14D5                                     l3291 0243  
                                   l3283 021A                                     l3275 01F3  
                                   l3267 01D3                                     l3259 01AA  
                                   l3179 1279                                     l3443 0CCB  
                                   l3435 0CB2                                     l3427 0C85  
                                   l3419 0C57                                     l3371 0B7D  
                                   l3339 1F77                                     l3531 17EB  
                                   l3523 1797                                     l3515 1744  
                                   l3355 1FB7                                     l3347 1F96  
                                   l3099 0EB1                                     l3195 0945  
                                   l3187 08F1                                     l3363 115D  
                                   l3507 1104                                     l3611 0B57  
                                   l3603 0B19                                     l4139 048E  
                                   l4147 04CE                                     l4091 034A  
                                   l4083 031D                                     l4075 02F8  
                                   l4067 02E1                                     l4059 02CD  
                                   l2821 11CF                                     l2813 11AF  
                                   l2805 14E8                                     l3293 0248  
                                   l3285 0224                                     l3277 01FF  
                                   l3269 01D8                                     l2741 1E38  
                                   l3445 0CD3                                     l3437 0CBB  
                                   l3429 0C98                                     l3381 0B9D  
                                   l3373 0B81                                     l3525 17AC  
                                   l3517 1758                                     l3349 1F99  
                                   l3541 082A                                     l3533 080B  
                                   l3461 1644                                     l3453 1631  
                                   l3621 1E77                                     l2901 1426  
                                   l3197 0959                                     l3189 0906  
                                   l3365 1162                                     l3357 1143  
                                   l3509 110B                                     l3613 0B60  
                                   l3605 0B30                                     l3701 00A2  
                                   l4093 0395                                     l4085 032E  
                                   l4077 0309                                     l4069 02E7  
                                   l2831 1433                                     l2823 11D0  
                                   l2815 11BD                                     l2751 155D  
                                   l2807 1506                                     l3295 0254  
                                   l3287 0229                                     l3279 0209  
                                   l2743 1E41                                     l2735 1E30  
                                   l3447 0CD8                                     l3439 0CC0  
                                   l3391 0BCF                                     l3383 0BA8  
                                   l3375 0B85                                     l3527 17C0  
                                   l3519 176D                                     l3551 0848  
                                   l3543 082E                                     l3535 081C  
                                   l3471 166C                                     l3463 164D  
                                   l3455 1635                                     l3623 1E7A  
                                   l3631 1EAD                                     l2911 13B1  
                                   l2903 13A5                                     l3199 096F  
                                   l3367 116F                                     l3359 114D  
                                   l3615 0B66                                     l3607 0B3E  
                                   l3703 00AE                                     l3711 119B  
                                   l4095 03A0                                     l4087 0334  
                                   l4079 030E                                     l2841 145E  
                                   l2833 1441                                     l2825 11D6  
                                   l2817 11C6                                     l2761 156E  
                                   l2753 155E                                     l2809 150D  
                                   l3297 025E                                     l3289 0239  
                                   l2737 1E34                                     l3393 0BD7  
                                   l3385 0BAD                                     l3377 0B8A  
                                   l3369 0B77                                     l3529 17D6  
                                   l3561 088E                                     l3553 0856  
                                   l3545 0832                                     l3537 0822  
                                   l3481 1694                                     l3473 1674  
                                   l3465 1654                                     l3457 163B  
                                   l3721 16C5                                     l3641 129E  
                                   l3625 1E90                                     l3633 1EB1  
                                   l3801 05F7                                     l2745 1E46  
                                   l2921 13BB                                     l2913 13B3  
                                   l2905 13A6                                     l3617 0B6C  
                                   l3609 0B4A                                     l3705 00BE  
                                   l3713 11A2                                     l4097 03A5  
                                   l4089 033F                                     l2843 1471  
                                   l2835 1449                                     l2827 142D  
                                   l2819 11C8                                     l2771 1589  
                                   l2763 1574                                     l2755 1562  
                                   l3299 0263                                     l2739 1E37  
                                   l3395 0BDF                                     l3387 0BB9  
                                   l3379 0B90                                     l3563 089C  
                                   l3555 0864                                     l3547 0836  
                                   l3539 0826                                     l3475 167A  
                                   l3467 165B                                     l3459 163F  
                                   l3731 16EE                                     l3723 16D2  
                                   l3715 16A4                                     l3491 1330  
                                   l4291 12C6                                     l3651 12B9  
                                   l3643 12A5                                     l3627 1E94  
                                   l3635 1EB4                                     l3811 063B  
                                   l3803 05FE                                     l2747 1E4B  
                                   l2931 13C2                                     l2923 13BC  
                                   l2915 13B6                                     l2907 13AA  
                                   l2851 1235                                     l3483 1DD2  
                                   l3571 0A8A                                     l3619 1DD6  
                                   l3707 00C4                                     l4099 03B0  
                                   l2845 1473                                     l2837 1457  
                                   l2829 142E                                     l2773 158F  
                                   l2765 157A                                     l2781 15AF  
                                   l2757 1567                                     l3397 0BE4  
                                   l3389 0BC6                                     l4293 08A4  
                                   l3557 0872                                     l3549 083B  
                                   l3565 089D                                     l3477 1686  
                                   l3469 1661                                     l3741 1716  
                                   l3733 16F6                                     l3725 16D7  
                                   l3717 16AA                                     l3493 1343  
                                   l3485 131F                                     l3653 12BC  
                                   l3645 12AA                                     l3661 1E5A  
                                   l3901 0D61                                     l3629 1E97  
                                   l3637 1ECA                                     l4285 06E5  
                                   l3821 0681                                     l3813 065A  
                                   l3805 05FF                                     l2749 1E52  
                                   l2941 13C7                                     l2933 13C3  
                                   l2925 13BD                                     l2917 13B9  
                                   l2909 13B0                                     l2853 1242  
                                   l2861 1258                                     l3581 0AB8  
                                   l3573 0A90                                     l3709 1176  
                                   l2839 1458                                     l2783 15B4  
                                   l2775 1599                                     l2767 157D  
                                   l2759 156A                                     l2791 1E04  
                                   l4295 0C62                                     l3399 0BE8  
                                   l3559 0880                                     l3479 168E  
                                   l3735 16FD                                     l3727 16DC  
                                   l3719 16B0                                     l3495 135E  
                                   l3487 1324                                     l3647 12AF  
                                   l3655 12BF                                     l3639 129D  
                                   l3663 1E5D                                     l4287 0DCE  
                                   l3911 0D93                                     l3903 0D6C  
                                   l3831 06DD                                     l3823 06A0  
                                   l3815 0660                                     l3807 061F  
                                   l3751 04EA                                     l3743 04D8  
                                   l2951 13E0                                     l2943 13CD  
                                   l2935 13C4                                     l2927 13BE  
                                   l2919 13BA                                     l2855 1248  
                                   l2847 1222                                     l2871 13FA  
                                   l2863 13EA                                     l3591 0ADE  
                                   l3583 0AC1                                     l3575 0A95  
                                   l3671 0016                                     l2785 15BA  
                                   l2777 15A0                                     l2769 1584  
                                   l2793 1E06                                     l2961 15C5  
                                   l3737 1706                                     l3729 16E9  
                                   l3497 1360                                     l3489 132A  
                                   l3649 12B4                                     l3665 1E73  
                                   l4289 0E56                                     l3921 0DB6  
                                   l3913 0D99                                     l3905 0D79  
                                   l3841 0723                                     l3817 0666  
                                   l3825 06A3                                     l3809 0630  
                                   l3833 06DE                                     l3761 0513  
                                   l3753 04F5                                     l3745 04DE  
                                   l2945 13D2                                     l2937 13C5  
                                   l2929 13BF                                     l2953 13E6  
                                   l2857 124B                                     l2849 122B  
                                   l2881 1403                                     l2873 13FD  
                                   l2865 13EE                                     l3593 0AE4  
                                   l3585 0AC8                                     l3577 0A9B  
                                   l3681 003B                                     l3673 001D  
                                   l2787 15BF                                     l2779 15A7  
                                   l2795 1E07                                     l2971 15DB  
                                   l2963 15CA                                     l3739 170D  
                                   l3931 0DDE                                     l3923 0DBB  
                                   l3915 0D9E                                     l3907 0D82  
                                   l3851 0786                                     l3843 0737  
                                   l3827 06B5                                     l3819 0678  
                                   l3835 06F0                                     l3771 054D  
                                   l3763 0518                                     l3755 0500  
                                   l3747 04E2                                     l2955 13E8  
                                   l2947 13D4                                     l2939 13C6  
                                   l2859 124D                                     l2891 1418  
                                   l2883 1404                                     l2875 1400  
                                   l2867 13F4                                     l3499 10E9  
                                   l3595 0AEB                                     l3587 0ACE  
                                   l3579 0AAB                                     l3691 0079  
                                   l3683 0046                                     l3675 0023  
                                   l3667 000C                                     l2797 14C2  
                                   l2789 1DFF                                     l2981 15F2  
                                   l2973 15DD                                     l2965 15CD  
                                   l2957 15C0                                     l3941 0E24  
                                   l3933 0DEC                                     l3925 0DC6  
                                   l3917 0DA9                                     l3909 0D8B  
                                   l3861 0CE1                                     l3853 0799  
                                   l3845 074B                                     l3837 06FC  
                                   l3829 06BE                                     l3781 058C  
                                   l3773 0554                                     l3765 052F  
                                   l3757 050B                                     l3749 04E6  
                                   l2949 13DE                                     l2893 141B  
                                   l2885 1405                                     l2877 1401  
                                   l2869 13F5                                     l3597 0AF4  
                                   l3589 0AD3                                     l3693 0080  
                                   l3685 0051                                     l3677 0030  
                                   l3669 0012                                     l2799 14C7  
                                   l2991 1618                                     l2983 15F8  
                                   l2975 15E3                                     l2967 15D1  
                                   l2959 15C1                                     l3943 0E32  
                                   l3935 0DFA                                     l3919 0DAF  
                                   l3927 0DC7                                     l3871 0CF7  
                                   l3863 0CE7                                     l3855 07AD  
                                   l3847 075E                                     l3839 0710  
                                   l3791 05B1                                     l3783 0595  
                                   l3775 0573                                     l3767 0535  
                                   l3759 050F                                     l2895 141C  
                                   l2887 140A                                     l2879 1402  
                                   l3599 0B03                                     l3695 0089  
                                   l3687 0068                                     l3679 0035  
                                   l3961 09AA                                     l2985 1609  
                                   l2977 15E6                                     l2993 1620  
                                   l2969 15D6                                     l3945 0E40  
                                   l3937 0E08                                     l3929 0DD9  
                                   l3881 0D0B                                     l3873 0CFB  
                                   l3865 0CEB                                     l3849 0772  
                                   l3793 05B7                                     l3785 059D  
                                   l3777 0579                                     l3769 0542  
                                   l2897 141D                                     l2889 140E  
                                   l3697 0093                                     l3689 0073  
                                   l3971 09F3                                     l3963 09C0  
                                   l2995 1625                                     l2987 160F  
                                   l2979 15ED                                     l3947 0E4E  
                                   l3939 0E16                                     l3891 0D32  
                                   l3883 0D0F                                     l3875 0CFF  
                                   l3867 0CEF                                     l3795 05BD  
                                   l3787 05A6                                     l3779 057F  
                                   l2899 1424                                     l3699 009C  
                                   l3973 0A07                                     l3965 09D2  
                                   l3981 0A31                                     l2997 162B  
                                   l2989 1611                                     l3949 0E4F  
                                   l3893 0D3D                                     l3885 0D13  
                                   l3877 0D03                                     l3869 0CF3  
                                   l3797 05CE                                     l3789 05A9  
                                   l3991 0A7A                                     l3983 0A39  
                                   l3975 0A1B                                     l3967 09E6  
                                   l3959 09A2                                     l2999 1630  
                                   l3895 0D44                                     l3887 0D1F  
                                   l3879 0D07                                     l3799 05D9  
                                   l3993 0A7F                                     l3985 0A4F  
                                   l3977 0A20                                     l3969 09EB  
                                   l3897 0D50                                     l3889 0D25  
                                   l3987 0A61                                     l3979 0A28  
                                   l3995 1DE1                                     l3899 0D55  
                                   l3989 0A66                                     l3997 1DE5  
                                   l3999 0803                                     STR_1 109D  
                                   STR_2 1087                                     STR_3 1050  
                                   STR_4 107E                                     STR_5 1096  
                                   STR_6 1075                                     STR_7 10A4  
                                   STR_8 10B1                                     STR_9 10BD  
                                   u2000 13D2                                     u2001 13D1  
                                   u2010 13E5                                     u2011 13E4  
                                   u2100 161E                                     u2020 15C5  
                                   u2101 161D                                     u2021 15C4  
                                   u2110 1625                                     u2030 15D1  
                                   u2111 1624                                     u2031 15D0  
                                   u2040 15E3                                     u3000 16F6  
                                   u2120 147C                                     u2041 15E2  
                                   u3001 16F5                                     u2121 147B  
                                   u3010 1706                                     u2210 12F7  
                                   u3011 1705                                     u2211 12F6  
                                   u2060 15F6                                     u3020 1716  
                                   u3100 0630                                     u2140 148F  
                                   u2220 1303                                     u2061 15F5  
                                   u3021 1715                                     u3101 062F  
                                   u2141 148E                                     u2221 1302  
                                   u2205 12E8                                     u3110 0660  
                                   u3030 0522                                     u2055 15E7  
                                   u3111 065F                                     u2135 1480  
                                   u3200 09AA                                     u2400 1141  
                                   u2080 1609                                     u3120 0666  
                                   u3040 0554                                     u2160 14A2  
                                   u2240 1317                                     u3201 09A9  
                                   u2401 1140                                     u2081 1608  
                                   u3121 0665                                     u3041 0553  
                                   u2161 14A1                                     u2241 1316  
                                   u2225 12FF                                     u2305 0F2B  
                                   u3210 09D2                                     u2250 136E  
                                   u2410 1271                                     u3130 0678  
                                   u3050 05A6                                     u2330 0F53  
                                   u3211 09D1                                     u2411 1270  
                                   u2075 15F9                                     u3131 0677  
                                   u3051 05A5                                     u2155 1492  
                                   u2235 130B                                     u2331 0F52  
                                   u2315 0F36                                     u3220 09E6  
                                   u2500 013A                                     u2260 1391  
                                   u2420 1286                                     u3140 06B5  
                                   u3060 05B7                                     u2180 14B7  
                                   u2340 0F9B                                     u3300 03EE  
                                   u3221 09E5                                     u2405 113D  
                                   u2501 0139                                     u2421 1285  
                                   u2085 1605                                     u3141 06B4  
                                   u3061 05B6                                     u2181 14B6  
                                   u2165 149E                                     u2341 0F9A  
                                   u2325 0F43                                     u3301 03ED  
                                   u3230 0A07                                     u2510 0150  
                                   u2270 13A3                                     u2430 129B  
                                   u3150 0D44                                     u3070 05BD  
                                   u2190 12E4                                     u2350 0FA8  
                                   u3310 03FE                                     u3231 0A06  
                                   u3215 09CE                                     u2511 014F  
                                   u2271 13A2                                     u2431 129A  
                                   u2415 126D                                     u2095 1612  
                                   u3151 0D43                                     u3071 05BC  
                                   u2175 14AB                                     u2191 12E3  
                                   u2351 0FA7                                     u3311 03FD  
                                   u1800 1599                                     u3240 0A1B  
                                   u2600 01C9                                     u2520 0159  
                                   u2440 00E9                                     u1720 1E40  
                                   u3160 0D93                                     u3080 05CE  
                                   u2360 0FB5                                     u2280 0ECD  
                                   u3400 04B6                                     u3320 0411  
                                   u1801 1598                                     u3241 0A1A  
                                   u3225 09E2                                     u2601 01C8  
                                   u2521 0158                                     u2441 00E8  
                                   u1721 1E3F                                     u2425 1282  
                                   u3161 0D92                                     u3081 05CD  
                                   u2361 0FB4                                     u2281 0ECC  
                                   u3401 04B5                                     u3321 0410  
                                   u3250 0A39                                     u2610 01DF  
                                   u2530 016F                                     u2450 00FF  
                                   u3170 0D99                                     u3090 05FD  
                                   u1730 1E51                                     u2370 0FC2  
                                   u2290 0EF1                                     u3330 0424  
                                   u3251 0A38                                     u3235 0A03  
                                   u2611 01DE                                     u2531 016E  
                                   u2451 00FE                                     u2435 1297  
                                   u3171 0D98                                     u3091 05FC  
                                   u1731 1E50                                     u2371 0FC1  
                                   u2291 0EF0                                     u3331 0423  
                                   u1900 1440                                     u1820 15AD  
                                   u3260 0A61                                     u2380 111F  
                                   u2700 0254                                     u2620 01E4  
                                   u2540 0174                                     u2460 0104  
                                   u3180 0DAF                                     u1740 1E58  
                                   u3340 0437                                     u1901 143F  
                                   u1821 15AC                                     u1805 1595  
                                   u3261 0A60                                     u3245 0A17  
                                   u2381 111E                                     u2701 0253  
                                   u2621 01E3                                     u2541 0173  
                                   u2461 0103                                     u3181 0DAE  
                                   u1741 1E57                                     u2285 0EC9  
                                   u3341 0436                                     u1910 1449  
                                   u1830 15B4                                     u1750 1562  
                                   u3270 0A7A                                     u2390 1130  
                                   u2710 026A                                     u2630 01FA  
                                   u2550 018A                                     u2470 011A  
                                   u3190 0DB6                                     u3350 044A  
                                   u1911 1448                                     u1831 15B3  
                                   u1815 15A1                                     u1751 1561  
                                   u3271 0A79                                     u2391 112F  
                                   u2711 0269                                     u2631 01F9  
                                   u2551 0189                                     u2471 0119  
                                   u3191 0DB5                                     u2295 0EED  
                                   u3351 0449                                     u1760 156E  
                                   u1840 14D5                                     u2720 026F  
                                   u2640 01FF                                     u2560 018F  
                                   u2480 011F                                     u2800 0C26  
                                   u3280 1529                                     u3360 0464  
                                   u1905 143C                                     u1761 156D  
                                   u1841 14D4                                     u3265 0A5D  
                                   u2721 026E                                     u2641 01FE  
                                   u2561 018E                                     u2481 011E  
                                   u2801 0C25                                     u3281 1528  
                                   u3361 0463                                     u1930 146B  
                                   u1770 157A                                     u1850 14E8  
                                   u2730 0285                                     u2650 0215  
                                   u2570 01A5                                     u2490 0135  
                                   u2810 0C2D                                     u3290 1559  
                                   u3370 048E                                     u1931 146A  
                                   u1771 1579                                     u1851 14E7  
                                   u3275 0A76                                     u2731 0284  
                                   u2651 0214                                     u2571 01A4  
                                   u2491 0134                                     u2811 0C2C  
                                   u3291 1558                                     u3371 048D  
                                   u1924 144F                                     u1860 1505  
                                   u2740 028A                                     u2660 021A  
                                   u2580 01AA                                     u2820 1654  
                                   u1940 1248                                     u3380 04A6  
                                   u1925 144D                                     u1861 1504  
                                   u2741 0289                                     u2661 0219  
                                   u2581 01A9                                     u2821 1653  
                                   u3285 1525                                     u1941 1247  
                                   u3381 04A5                                     u3365 0460  
                                   u1870 11BC                                     u1790 158D  
                                   u2750 02A0                                     u2670 0230  
                                   u2590 01C0                                     u2830 1674  
                                   u1950 125D                                     u2910 110A  
                                   u3390 04AE                                     u1935 1467  
                                   u1871 11BB                                     u1791 158C  
                                   u2751 029F                                     u2671 022F  
                                   u2591 01BF                                     u2831 1673  
                                   u3295 1555                                     u1951 125C  
                                   u2911 1109                                     u3391 04AD  
                                   u3375 048A                                     u1880 11C6  
                                   u2680 0239                                     u2760 0BAD  
                                   u2840 168E                                     u1960 13F3  
                                   u2920 0AE4                                     u1881 11C5  
                                   u1785 157E                                     u1865 1501  
                                   u2681 0238                                     u2761 0BAC  
                                   u2841 168D                                     u1961 13F2  
                                   u2905 10FE                                     u2921 0AE3  
                                   u3385 04A2                                     u1890 11E3  
                                   u2690 024F                                     u2770 0BDF  
                                   u2850 1330                                     u1970 140A  
                                   u2930 0AF4                                     u1891 11E2  
                                   u1875 11B8                                     u2691 024E  
                                   u2771 0BDE                                     u2851 132F  
                                   u1971 1409                                     u2931 0AF3  
                                   u2780 0BEE                                     u2860 1343  
                                   u1980 142B                                     u2940 0B3E  
                                   u2781 0BED                                     u2861 1342  
                                   u1981 142A                                     u2941 0B3D  
                                   u2790 0BF4                                     u2870 135D  
                                   u1990 13AF                                     u2950 0079  
                                   u1895 11DF                                     u2791 0BF3  
                                   u2871 135C                                     u1991 13AE  
                                   u2951 0078                                     u2880 10F0  
                                   u2960 0089                                     u2881 10EF  
                                   u2945 0B3A                                     u2961 0088  
                                   u2970 009C                                     u2875 1359  
                                   u2971 009B                                     u2980 00BE  
                                   u2981 00BD                                     u2990 11A2  
                                   u2895 10F7                                     u2991 11A1  
                                   u2985 00BA                 ?_RealTimeClock_read_byte 0070  
                                   _Temp 00E1                                     _main 02A6  
                            main@tempdec 004A                                     btemp 007E  
       __end_of_RealTimeClock_write_byte 11E7                                     start 0000  
                             Read_Byte@i 0076                               Read_Byte@j 0062  
     __size_of_RealTimeClock_set_minutes 001D       __size_of_RealTimeClock_set_seconds 001D  
                          ??_Init_Keypad 0070           __end_of_RealTimeClock_get_year 1F96  
               ?_RealTimeClock_set_hours 0020                             ___int_to_hex 131F  
                        __end_of_SetDate 0E70                          __end_of_SetTime 07B9  
                       __end_of_LCD_Busy 1E45                         __end_of_LCD_Init 1DE8  
                    __end_of_DisplayDate 1800                      __end_of_DisplayTemp 2000  
                    __end_of_DisplayTime 09A2                          __end_of_SoundOn 1DDA  
                                  ?_main 0070                          __end_of___awdiv 1631  
                                  STR_10 1063                                    STR_11 1039  
                                  STR_20 10B1                                    STR_12 105A  
                                  STR_13 104D                                    STR_21 106C  
                                  STR_14 1035                                    STR_30 10DC  
                                  STR_22 10C3                                    STR_31 10D8  
                                  STR_23 10B7                                    STR_15 102D  
                                  STR_16 1045                                    STR_24 1020  
                                  STR_25 10D4                                    STR_17 1010  
                          __CFG_WDTE$OFF 0000                                    STR_26 10CC  
                                  STR_18 108F                                    STR_27 10C8  
                                  STR_19 10AB                                    STR_28 10E0  
                        __end_of___awmod 15C0                                    STR_29 10D0  
                        ___awdiv@divisor 0070                          __end_of___lwdiv 14BF  
                        __end_of___lwmod 131F                          ___awdiv@counter 0075  
                          ??_Keypad_Scan 0078                   __end_of_LCD_SecondLine 1DE1  
                                  _PORTC 0007                                    _PORTD 0008  
                                  _TRISA 0085                                    _TRISC 0087  
                                  _TRISD 0088                                    _Delay 1E45  
                          __CFG_PWRTE$ON 0000                   __end_of_LCD_SendString 13A5  
                                  _Reset 1222                               _DisplayDay 080B  
                         ??_LCD_SendData 0070                               _Main_Delay 125F  
                             SetDate@Day 002A                               SetDate@Key 0027  
                             _MainScreen 1143                            ??_Buzzer_Init 0070  
         RealTimeClock_read_byte@time_rx 0072                           __CFG_BOREN$OFF 0000  
                           LCD_Command@c 0070                                    pclath 000A  
                       __end_of_CheckDay 12DE                                    status 0003  
                                  wtemp0 007E                           Get_Temp@buffer 0024  
                       __end_of_Get_Temp 1000                          __initialization 07B9  
                           __end_of_main 04D8                       __size_of_CheckTime 00E8  
                          SoundAlarm@Key 003C          __end_of_RealTimeClock_get_hours 1F0E  
        __end_of_RealTimeClock_get_month 1F74                           ___hex_to_int@i 0021  
                             SetTime@Key 0027                           ___hex_to_int@t 0023  
                             SetTime@min 003C                               SetTime@sec 003E  
  __end_of_RealTimeClock_get_day_of_week 1FB8   __size_of_RealTimeClock_get_day_of_week 0022  
          _RealTimeClock_get_day_of_week 1F96                      __end_of_Init_Keypad 080B  
                                 ??_main 0048                          ?_LCD_SecondLine 0070  
                                 ?_Delay 0070                              _IsHeatingOn 0060  
                                 ?_Reset 0070                __size_of_Thermometer_Init 0007  
                        ?_LCD_SendString 0071                            SetTime@digits 002F  
        __end_of_RealTimeClock_read_byte 1474                         __end_of_SoundOff 1DD6  
                                 _ADCON1 009F         RealTimeClock_set_day_of_week@day 0020  
               RealTimeClock_get_hours@c 007B                         ___awdiv@dividend 0072  
               RealTimeClock_get_month@c 007B                      __end_of_Keypad_Scan 02A6  
                     __size_of_Key_Delay 0032                                   Delay@x 0072  
                                 Delay@y 0070                                   Delay@z 0073  
                                 _TRISA0 0428                                   _TRISB0 0430  
                                 _TRISB1 0431                                   _TRISB4 0434  
                                 _TRISB5 0435                       __size_of_Read_Byte 0044  
                 __size_of_DateDayScreen 007F          __end_of_RealTimeClock_set_hours 1E94  
                              ??_SetDate 0029                      __end_of_Buzzer_Init 1DD2  
                              ??_SetTime 0029                              _DisplayDate 1723  
                            _DisplayTemp 1FDA                              _DisplayTime 08BC  
                              ??_SoundOn 0070                 _RealTimeClock_write_byte 11AC  
                                 ___wmul 10E9                                ??___awdiv 0074  
                              ??___awmod 0074                                ??___lwdiv 007A  
                              ??___lwmod 0074                              SetDate@Date 002B  
                                 _intent 0065                         ___awdiv@quotient 0077  
                        ___awmod@divisor 0070                                   _tenbit 0066  
                        ___awmod@counter 0075                     __size_of_LCD_Command 000F  
                    HeatingControlOff@On 003B                              ?_DisplayDay 0070  
                            ?_Main_Delay 0070                              ?_MainScreen 0070  
                      __end_of_CheckTime 0A8A                               _SoundAlarm 000C  
                        LCD_SendString@i 0076             __end_of_SwapToHeatingDisplay 16A4  
                 __size_of_ChangeTrigger 016D                  __end_of__initialization 07FC  
                              ?_LCD_Busy 0070                                ?_LCD_Init 0070  
        ??_RealTimeClock_set_day_of_week 007E                            __end_of_Delay 1E5A  
                          Reset@presence 0075                           __pcstackCOMMON 0070  
                            _Init_Keypad 0803                            __end_of_Reset 125F  
                   __end_of_LCD_SendData 1E0D                             __pidataBANK0 10E5  
                           __pidataBANK1 11E7                             __pidataBANK3 1E0D  
               RealTimeClock_read_byte@i 0073                               _Write_Byte 13E9  
             ?_RealTimeClock_get_minutes 0025               ?_RealTimeClock_get_seconds 0025  
                      __end_of_Key_Delay 1143                              SetTime@F993 00AA  
                         SoundAlarm@temp 003E                  SwapToHeatingDisplay@Off 007D  
                SwapToHeatingDisplay@Key 0078                              SetTime@Time 0038  
                      __end_of_Read_Byte 13E9                            _DateDayScreen 16A4  
                              ?_CheckDay 0070                              SetTime@hour 003A  
                            _Keypad_Scan 00DF                           ___int_to_hex@i 007C  
                                ??_Delay 0071                           ___int_to_hex@t 007A  
                          LCD_SendData@c 0070                                  ??_Reset 0074  
 __end_of_RealTimeClock_get_day_of_month 1F52  __size_of_RealTimeClock_get_day_of_month 0022  
         _RealTimeClock_get_day_of_month 1F30                                ?_Get_Temp 0070  
            __size_of_RealTimeClock_init 001E                           Write_Byte@temp 0076  
                             __pbssBANK0 0056                               __pbssBANK1 00DB  
                             __pbssBANK3 01A0                      DisplayDay@Wednesday 0029  
                            _Buzzer_Init 1DCE                             _DisableAlarm 00EE  
                         SetTime@TimeSet 0039         __size_of_RealTimeClock_get_hours 0022  
       __size_of_RealTimeClock_get_month 0022                               ??_LCD_Busy 0070  
                             ??_LCD_Init 0070                  ChangeTrigger@TriggerSet 002A  
                             __pmaintext 02A6                      __size_of_DisplayDay 00B1  
                                ?___wmul 0070                      __size_of_Main_Delay 003E  
       __size_of_RealTimeClock_read_byte 0047                                ?_SoundOff 0070  
                    __size_of_MainScreen 0033        __end_of_RealTimeClock_get_minutes 1F30  
      __end_of_RealTimeClock_get_seconds 1FDA                           SetTime@setTime 0040  
                          _ChangeTrigger 0B74                            Switch24Hour@c 007A  
                         ?_DateDayScreen 0031                               ??_CheckDay 0070  
                       _Thermometer_Init 1DE8         __size_of_RealTimeClock_set_hours 001D  
                             ??_Get_Temp 0020                              ?_SoundAlarm 003C  
                             __stringtab 1000                                  _SetDate 0CE1  
                                _TempBCD 0056                                  _SetTime 04D8  
                                _TempDec 0067                                  _TempInt 0068  
                        SetDate@Saturday 0032    __end_of_RealTimeClock_set_day_of_week 1E77  
 __size_of_RealTimeClock_set_day_of_week 001D            _RealTimeClock_set_day_of_week 1E5A  
                        Switch24Hour@Key 0077                                  _SoundOn 1DD6  
                                ___awdiv 15C0                              ?_Write_Byte 0070  
                                ___awmod 155D                          __size_of___wmul 0028  
                        SetDate@Thursday 0030                                  ___lwdiv 1474  
                                ___lwmod 12DE                               ??_SoundOff 0070  
                       ??_LCD_SecondLine 0071                           ?_ChangeTrigger 0070  
                       ??_LCD_SendString 0073                                  __ptext1 1DE8  
                                __ptext2 1176                                  __ptext3 000C  
                                __ptext4 1DD6                                  __ptext5 0A8A  
                                __ptext6 10E9                                  __ptext7 1DD2  
                                __ptext8 1143                                  __ptext9 08BC  
                   _SwapToHeatingDisplay 1631                         ___awmod@dividend 0072  
                                main@Key 0054                                  clrloop0 0005  
                   HeatingControlOff@Off 003A                     HeatingControlOff@Key 0031  
                   end_of_initialization 07FC               ??_RealTimeClock_write_byte 0070  
                  __size_of_LCD_SendData 000F                               _weekDayEnd 00C4  
                             _tempBuffer 00D5                               _weekEndEnd 00BC  
                             _timeBuffer 006B                             ?_DisplayDate 0070  
                        DisplayDate@year 002B                             ?_DisplayTemp 0070  
                           ?_DisplayTime 0070                                Get_Temp@i 0025  
             ?_RealTimeClock_set_minutes 0020               ?_RealTimeClock_set_seconds 0020  
                    __size_of_SoundAlarm 00D3                          ??_DateDayScreen 0033  
   __end_of_RealTimeClock_set_burst_time 155D    __size_of_RealTimeClock_set_burst_time 004F  
           _RealTimeClock_set_burst_time 150E                    ?_SwapToHeatingDisplay 0078  
                          _dateDisplayer 00B3                             ??_DisplayDay 007C  
                           ??_Main_Delay 0072                             ??_MainScreen 0028  
                           _LCD_SendData 1DFE                               _start_date 0190  
                    __size_of_Write_Byte 0044                  _RealTimeClock_get_hours 1EEC  
                _RealTimeClock_get_month 1F52                                _CheckTime 09A2  
           RealTimeClock_set_hours@hours 0020                 ??_RealTimeClock_get_year 007A  
                      __size_of_LCD_Busy 0015                        __size_of_LCD_Init 0007  
                           ?_Init_Keypad 0070                  _RealTimeClock_read_byte 142D  
                        ??_ChangeTrigger 0020                       __end_of_DisplayDay 08BC  
                          ??_LCD_Command 0070              ??_RealTimeClock_get_minutes 007A  
            ??_RealTimeClock_get_seconds 007A                       __end_of_Main_Delay 129D  
                         __end_of___wmul 1111        __end_of_RealTimeClock_set_minutes 1EB1  
      __end_of_RealTimeClock_set_seconds 1ECE                       __end_of_MainScreen 1176  
                      _triggerTempChange 00E6                            ?_Switch24Hour 0077  
          ?_RealTimeClock_set_burst_time 0070                                _Key_Delay 1111  
                           ?_Keypad_Scan 0076                          SoundAlarm@Alarm 0045  
                    start_initialization 07B9                  _RealTimeClock_set_hours 1E77  
                          ?___hex_to_int 0077                        __size_of_CheckDay 0041  
                              _Read_Byte 13A5                          SoundAlarm@temp2 0040  
                        SoundAlarm@temp3 0042                         ___hex_to_int@hex 0020  
               SwapToHeatingDisplay@Heat 007B                        __size_of_Get_Temp 0190  
                           ?_Buzzer_Init 0070                               ?_CheckTime 0070  
                RealTimeClock_get_year@c 007B                 __end_of_Thermometer_Init 1DEF  
                          ?___int_to_hex 0077                                 ??___wmul 0074  
                             init_fetch0 1E1D                              __pdataBANK0 006C  
                            __pdataBANK1 00A0                              __pdataBANK3 0190  
                 ??_SwapToHeatingDisplay 007A                           ??_Switch24Hour 0079  
                      _HeatingControlOff 0A8A                        __size_of_SoundOff 0004  
                             ?_Key_Delay 0070                       ?_HeatingControlOff 0031  
                    __end_of_LCD_Command 1DFE               __end_of_RealTimeClock_init 1EEC  
                              ___latbits 0002                           ??___hex_to_int 0079  
                          __pcstackBANK0 0020         RealTimeClock_set_burst_time@time 0022  
                      DateDayScreen@date 0034                ??_RealTimeClock_get_hours 007A  
                             ?_Read_Byte 0070                ??_RealTimeClock_get_month 007A  
              _RealTimeClock_get_minutes 1F0E                _RealTimeClock_get_seconds 1FB8  
                           ??_SoundAlarm 0044                      ??_HeatingControlOff 0039  
                 SwapToHeatingDisplay@On 007C                            Write_Byte@val 0077  
                     DisplayDay@Saturday 002C          __size_of_RealTimeClock_get_year 0022  
              ??_RealTimeClock_read_byte 0070                                 ?_SetDate 0027  
                            Write_Byte@i 0078                                 ?_SetTime 0027  
                     DisplayDay@Thursday 002A                         ___lwdiv@dividend 0078  
              RealTimeClock_write_byte@i 0072                           ??___int_to_hex 0079  
                            _day_of_week 00EC                    DisplayTemp@tempBuffer 0027  
                               ?_SoundOn 0070                             ??_Write_Byte 0074  
                               ?___awdiv 0070                                 ?___awmod 0070  
                   __size_of_DisplayDate 00DD                __end_of_HeatingControlOff 0B74  
                               ?___lwdiv 0076                                 ?___lwmod 0070  
                   __size_of_DisplayTemp 0026                     __size_of_DisplayTime 00E6  
                         SetDate@DateSet 002C                       __end_of_SoundAlarm 00DF  
                              __pstrings 1000                ??_RealTimeClock_set_hours 007E  
                              _isWeekDay 00EA                           __size_of_Delay 0015  
                         __size_of_Reset 003D           ??_RealTimeClock_set_burst_time 0020  
                       ___lwdiv@quotient 007B                           SetDate@Tuesday 002E  
         ?_RealTimeClock_get_day_of_week 0025                       __end_of_Write_Byte 142D  
                               _LCD_Busy 1E30                                 _LCD_Init 1DE1  
                            ??_CheckTime 007C                           ___wmul@product 0074  
                          _timeDisplayer 00CC                                clear_ram0 0004  
                         DisplayDate@day 0029                                _timeHours 005C  
                       ChangeTrigger@Key 002C                              _LCD_Command 1DEF  
                   __size_of_Init_Keypad 0008              ??_RealTimeClock_set_minutes 007E  
            ??_RealTimeClock_set_seconds 007E                             _hundredthbit 0063  
                            __stringbase 100F                        ___wmul@multiplier 0070  
                 _RealTimeClock_get_year 1F74         RealTimeClock_set_minutes@minutes 0020  
                            ??_Key_Delay 0072                                 _CheckDay 129D  
                       main@tempdectenth 004C                                main@temp2 0050  
                              main@temp3 0052                              ??_Read_Byte 0074  
                   __size_of_Keypad_Scan 01C7                                 _Get_Temp 0E70  
                   LCD_SendString@string 0071                   HeatingControlOff@temp2 0035  
                 HeatingControlOff@temp3 0037                                 SetDate@i 0034  
       RealTimeClock_set_seconds@seconds 0020                     __end_of_Switch24Hour 11AC  
                               SetTime@i 0046                     __size_of_Buzzer_Init 0004  
        RealTimeClock_get_day_of_month@c 007B                         __size_of_SetDate 018F  
                   __end_of___hex_to_int 150E                         __size_of_SetTime 02E1  
                       SetDate@Wednesday 002F               __size_of_HeatingControlOff 00EA  
                               _is24Hour 005E                         __size_of_SoundOn 0004  
                               _SoundOff 1DD2                         __size_of___awdiv 0071  
                       __size_of___awmod 0063                         __size_of___lwdiv 004B  
                       __size_of___lwmod 0041                         DateDayScreen@Key 0031  
      __size_of_RealTimeClock_write_byte 003B                         DateDayScreen@day 0035  
              ?_RealTimeClock_write_byte 0070                       __end_of__stringtab 1010  
                  __end_of_DateDayScreen 1723                          ___lwdiv@divisor 0076  
                      DisplayDay@Tuesday 0028                          ___lwdiv@counter 007D  
                __size_of_LCD_SecondLine 0007                                 __ptext10 1FDA  
                               __ptext11 0E70                                 __ptext20 1E94  
                               __ptext12 12DE                                 __ptext21 1E77  
                               __ptext13 1474                                 __ptext30 0803  
                               __ptext22 1FB8                                 __ptext14 13E9  
                               __ptext31 16A4                                 __ptext23 0CE1  
                               __ptext15 1222                                 __ptext40 0B74  
                               __ptext32 1631                                 __ptext24 1E5A  
                               __ptext16 13A5                                 __ptext41 15C0  
                               __ptext33 1DDA                                 __ptext25 129D  
                               __ptext17 1E45                                 __ptext50 1F0E  
                               __ptext42 125F                                 __ptext34 080B  
                               __ptext26 150E                                 __ptext18 04D8  
                               __ptext51 1EEC                                 __ptext43 1361  
                               __ptext35 1F96                                 __ptext27 131F  
                               __ptext19 1EB1                                 __ptext52 14BF  
                               __ptext44 1DFE                                 __ptext36 1723  
                               __ptext28 1ECE                                 __ptext53 155D  
                               __ptext45 1DEF                                 __ptext37 1F74  
                               __ptext29 1DE1                                 __ptext54 11AC  
                               __ptext46 1E30                                 __ptext38 1F52  
                               __ptext55 142D                                 __ptext47 00DF  
                               __ptext39 1F30                                 __ptext56 1DCE  
                               __ptext48 1111                                 __ptext49 09A2  
                   __end_of___int_to_hex 1361                             _weekDayStart 00C8  
                __size_of_LCD_SendString 0044                _RealTimeClock_set_minutes 1E94  
              _RealTimeClock_set_seconds 1EB1                            SetDate@Friday 0031  
                           _weekEndStart 00C0                            SetDate@Monday 002D  
                          SetDate@Sunday 0033                            __size_of_main 0232  
                          SetDate@dayInt 0036       __size_of_RealTimeClock_get_minutes 0022  
     __size_of_RealTimeClock_get_seconds 0022                                 _timeMins 005A  
                               _timeSecs 0058                        ?_Thermometer_Init 0070  
                               _tenthbit 0064                       ??_Thermometer_Init 0070  
                  __end_of_ChangeTrigger 0CE1                                 main@temp 004E  
             RealTimeClock_get_minutes@c 007B               RealTimeClock_get_seconds@c 007B  
                  HeatingControlOff@temp 0033           RealTimeClock_get_day_of_week@c 007B  
                               init_ram0 1E21          RealTimeClock_write_byte@time_tx 0074  
                       DisplayDay@Friday 002B                         DisplayDay@Monday 0027  
                   ChangeTrigger@Trigger 0029                         DisplayDay@Sunday 002D  
                       ___lwmod@dividend 0072                     ___int_to_hex@integer 0077  
                     _RealTimeClock_init 1ECE                     ChangeTrigger@decimal 002B  
                              stringcode 100A                         DisplayDate@month 0027  
                         ChangeTrigger@i 002F                      ?_RealTimeClock_init 0070  
                            _numberTable 00A0            __size_of_SwapToHeatingDisplay 0073  
         ?_RealTimeClock_set_day_of_week 0020            RealTimeClock_set_burst_time@i 0023  
                        ___lwmod@divisor 0070                          ___lwmod@counter 0075  
                         Read_Byte@value 0075                      ChangeTrigger@digits 0026  
                               stringdir 100A                             _previousTemp 00DB  
                               stringtab 1000                           MainScreen@Temp 002A  
                         MainScreen@Time 0029                     ??_RealTimeClock_init 0075  
                  __size_of_Switch24Hour 0036                       ChangeTrigger@i_199 002D  
                            Main_Delay@i 0073                              Main_Delay@j 0075  
                            Main_Delay@k 0070                    __size_of___hex_to_int 004F  
                   ___RealTimeClock_buff 01A0                            ??_DisplayDate 007C  
                          ??_DisplayTemp 007E                            ??_DisplayTime 007C  
