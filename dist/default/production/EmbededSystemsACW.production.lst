

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Jan 08 19:58:32 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F877A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   176                           SSPCON2 equ 091h ;# 
   177  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   178                           PR2 equ 092h ;# 
   179  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   180                           SSPADD equ 093h ;# 
   181  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   182                           SSPSTAT equ 094h ;# 
   183  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   184                           TXSTA equ 098h ;# 
   185  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   186                           SPBRG equ 099h ;# 
   187  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   188                           CMCON equ 09Ch ;# 
   189  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   190                           CVRCON equ 09Dh ;# 
   191  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   192                           ADRESL equ 09Eh ;# 
   193  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   194                           ADCON1 equ 09Fh ;# 
   195  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   196                           EEDATA equ 010Ch ;# 
   197  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   198                           EEADR equ 010Dh ;# 
   199  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   200                           EEDATH equ 010Eh ;# 
   201  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   202                           EEADRH equ 010Fh ;# 
   203  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   204                           EECON1 equ 018Ch ;# 
   205  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   206                           EECON2 equ 018Dh ;# 
   207  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   208                           INDF equ 00h ;# 
   209  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   210                           TMR0 equ 01h ;# 
   211  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   212                           PCL equ 02h ;# 
   213  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   214                           STATUS equ 03h ;# 
   215  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   216                           FSR equ 04h ;# 
   217  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   218                           PORTA equ 05h ;# 
   219  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   220                           PORTB equ 06h ;# 
   221  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   222                           PORTC equ 07h ;# 
   223  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   224                           PORTD equ 08h ;# 
   225  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   226                           PORTE equ 09h ;# 
   227  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   228                           PCLATH equ 0Ah ;# 
   229  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   230                           INTCON equ 0Bh ;# 
   231  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   232                           PIR1 equ 0Ch ;# 
   233  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   234                           PIR2 equ 0Dh ;# 
   235  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   236                           TMR1 equ 0Eh ;# 
   237  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   238                           TMR1L equ 0Eh ;# 
   239  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   240                           TMR1H equ 0Fh ;# 
   241  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   242                           T1CON equ 010h ;# 
   243  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   244                           TMR2 equ 011h ;# 
   245  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   246                           T2CON equ 012h ;# 
   247  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   248                           SSPBUF equ 013h ;# 
   249  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   250                           SSPCON equ 014h ;# 
   251  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   252                           CCPR1 equ 015h ;# 
   253  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   254                           CCPR1L equ 015h ;# 
   255  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   256                           CCPR1H equ 016h ;# 
   257  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   258                           CCP1CON equ 017h ;# 
   259  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   260                           RCSTA equ 018h ;# 
   261  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   262                           TXREG equ 019h ;# 
   263  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   264                           RCREG equ 01Ah ;# 
   265  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   266                           CCPR2 equ 01Bh ;# 
   267  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   268                           CCPR2L equ 01Bh ;# 
   269  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   270                           CCPR2H equ 01Ch ;# 
   271  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   272                           CCP2CON equ 01Dh ;# 
   273  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   274                           ADRESH equ 01Eh ;# 
   275  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   276                           ADCON0 equ 01Fh ;# 
   277  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   278                           OPTION_REG equ 081h ;# 
   279  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   280                           TRISA equ 085h ;# 
   281  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   282                           TRISB equ 086h ;# 
   283  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   284                           TRISC equ 087h ;# 
   285  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   286                           TRISD equ 088h ;# 
   287  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   288                           TRISE equ 089h ;# 
   289  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   290                           PIE1 equ 08Ch ;# 
   291  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   292                           PIE2 equ 08Dh ;# 
   293  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   294                           PCON equ 08Eh ;# 
   295  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   296                           SSPCON2 equ 091h ;# 
   297  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   298                           PR2 equ 092h ;# 
   299  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   300                           SSPADD equ 093h ;# 
   301  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   302                           SSPSTAT equ 094h ;# 
   303  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   304                           TXSTA equ 098h ;# 
   305  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   306                           SPBRG equ 099h ;# 
   307  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   308                           CMCON equ 09Ch ;# 
   309  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   310                           CVRCON equ 09Dh ;# 
   311  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   312                           ADRESL equ 09Eh ;# 
   313  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   314                           ADCON1 equ 09Fh ;# 
   315  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   316                           EEDATA equ 010Ch ;# 
   317  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   318                           EEADR equ 010Dh ;# 
   319  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   320                           EEDATH equ 010Eh ;# 
   321  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   322                           EEADRH equ 010Fh ;# 
   323  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   324                           EECON1 equ 018Ch ;# 
   325  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   326                           EECON2 equ 018Dh ;# 
   327  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   328                           INDF equ 00h ;# 
   329  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   330                           TMR0 equ 01h ;# 
   331  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   332                           PCL equ 02h ;# 
   333  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   334                           STATUS equ 03h ;# 
   335  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   336                           FSR equ 04h ;# 
   337  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   338                           PORTA equ 05h ;# 
   339  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   340                           PORTB equ 06h ;# 
   341  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   342                           PORTC equ 07h ;# 
   343  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   344                           PORTD equ 08h ;# 
   345  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   346                           PORTE equ 09h ;# 
   347  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   348                           PCLATH equ 0Ah ;# 
   349  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   350                           INTCON equ 0Bh ;# 
   351  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   352                           PIR1 equ 0Ch ;# 
   353  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   354                           PIR2 equ 0Dh ;# 
   355  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   356                           TMR1 equ 0Eh ;# 
   357  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   358                           TMR1L equ 0Eh ;# 
   359  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   360                           TMR1H equ 0Fh ;# 
   361  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   362                           T1CON equ 010h ;# 
   363  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   364                           TMR2 equ 011h ;# 
   365  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   366                           T2CON equ 012h ;# 
   367  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   368                           SSPBUF equ 013h ;# 
   369  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   370                           SSPCON equ 014h ;# 
   371  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   372                           CCPR1 equ 015h ;# 
   373  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   374                           CCPR1L equ 015h ;# 
   375  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   376                           CCPR1H equ 016h ;# 
   377  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   378                           CCP1CON equ 017h ;# 
   379  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   380                           RCSTA equ 018h ;# 
   381  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   382                           TXREG equ 019h ;# 
   383  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   384                           RCREG equ 01Ah ;# 
   385  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   386                           CCPR2 equ 01Bh ;# 
   387  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   388                           CCPR2L equ 01Bh ;# 
   389  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   390                           CCPR2H equ 01Ch ;# 
   391  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   392                           CCP2CON equ 01Dh ;# 
   393  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   394                           ADRESH equ 01Eh ;# 
   395  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   396                           ADCON0 equ 01Fh ;# 
   397  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   398                           OPTION_REG equ 081h ;# 
   399  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   400                           TRISA equ 085h ;# 
   401  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   402                           TRISB equ 086h ;# 
   403  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   404                           TRISC equ 087h ;# 
   405  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   406                           TRISD equ 088h ;# 
   407  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   408                           TRISE equ 089h ;# 
   409  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   410                           PIE1 equ 08Ch ;# 
   411  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   412                           PIE2 equ 08Dh ;# 
   413  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   414                           PCON equ 08Eh ;# 
   415  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   416                           SSPCON2 equ 091h ;# 
   417  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   418                           PR2 equ 092h ;# 
   419  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   420                           SSPADD equ 093h ;# 
   421  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   422                           SSPSTAT equ 094h ;# 
   423  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   424                           TXSTA equ 098h ;# 
   425  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   426                           SPBRG equ 099h ;# 
   427  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   428                           CMCON equ 09Ch ;# 
   429  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   430                           CVRCON equ 09Dh ;# 
   431  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   432                           ADRESL equ 09Eh ;# 
   433  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   434                           ADCON1 equ 09Fh ;# 
   435  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   436                           EEDATA equ 010Ch ;# 
   437  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   438                           EEADR equ 010Dh ;# 
   439  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   440                           EEDATH equ 010Eh ;# 
   441  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   442                           EEADRH equ 010Fh ;# 
   443  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   444                           EECON1 equ 018Ch ;# 
   445  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   446                           EECON2 equ 018Dh ;# 
   447  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   448                           INDF equ 00h ;# 
   449  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   450                           TMR0 equ 01h ;# 
   451  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   452                           PCL equ 02h ;# 
   453  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   454                           STATUS equ 03h ;# 
   455  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   456                           FSR equ 04h ;# 
   457  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   458                           PORTA equ 05h ;# 
   459  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   460                           PORTB equ 06h ;# 
   461  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   462                           PORTC equ 07h ;# 
   463  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   464                           PORTD equ 08h ;# 
   465  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   466                           PORTE equ 09h ;# 
   467  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   468                           PCLATH equ 0Ah ;# 
   469  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   470                           INTCON equ 0Bh ;# 
   471  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   472                           PIR1 equ 0Ch ;# 
   473  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   474                           PIR2 equ 0Dh ;# 
   475  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   476                           TMR1 equ 0Eh ;# 
   477  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   478                           TMR1L equ 0Eh ;# 
   479  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   480                           TMR1H equ 0Fh ;# 
   481  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   482                           T1CON equ 010h ;# 
   483  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   484                           TMR2 equ 011h ;# 
   485  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   486                           T2CON equ 012h ;# 
   487  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   488                           SSPBUF equ 013h ;# 
   489  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   490                           SSPCON equ 014h ;# 
   491  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   492                           CCPR1 equ 015h ;# 
   493  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   494                           CCPR1L equ 015h ;# 
   495  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   496                           CCPR1H equ 016h ;# 
   497  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   498                           CCP1CON equ 017h ;# 
   499  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   500                           RCSTA equ 018h ;# 
   501  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   502                           TXREG equ 019h ;# 
   503  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   504                           RCREG equ 01Ah ;# 
   505  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   506                           CCPR2 equ 01Bh ;# 
   507  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   508                           CCPR2L equ 01Bh ;# 
   509  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   510                           CCPR2H equ 01Ch ;# 
   511  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   512                           CCP2CON equ 01Dh ;# 
   513  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   514                           ADRESH equ 01Eh ;# 
   515  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   516                           ADCON0 equ 01Fh ;# 
   517  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   518                           OPTION_REG equ 081h ;# 
   519  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   520                           TRISA equ 085h ;# 
   521  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   522                           TRISB equ 086h ;# 
   523  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   524                           TRISC equ 087h ;# 
   525  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   526                           TRISD equ 088h ;# 
   527  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   528                           TRISE equ 089h ;# 
   529  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   530                           PIE1 equ 08Ch ;# 
   531  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   532                           PIE2 equ 08Dh ;# 
   533  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   534                           PCON equ 08Eh ;# 
   535  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   536                           SSPCON2 equ 091h ;# 
   537  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   538                           PR2 equ 092h ;# 
   539  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   540                           SSPADD equ 093h ;# 
   541  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   542                           SSPSTAT equ 094h ;# 
   543  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   544                           TXSTA equ 098h ;# 
   545  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   546                           SPBRG equ 099h ;# 
   547  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   548                           CMCON equ 09Ch ;# 
   549  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   550                           CVRCON equ 09Dh ;# 
   551  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   552                           ADRESL equ 09Eh ;# 
   553  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   554                           ADCON1 equ 09Fh ;# 
   555  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   556                           EEDATA equ 010Ch ;# 
   557  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   558                           EEADR equ 010Dh ;# 
   559  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   560                           EEDATH equ 010Eh ;# 
   561  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   562                           EEADRH equ 010Fh ;# 
   563  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   564                           EECON1 equ 018Ch ;# 
   565  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   566                           EECON2 equ 018Dh ;# 
   567  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   568                           INDF equ 00h ;# 
   569  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   570                           TMR0 equ 01h ;# 
   571  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   572                           PCL equ 02h ;# 
   573  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   574                           STATUS equ 03h ;# 
   575  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   576                           FSR equ 04h ;# 
   577  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   578                           PORTA equ 05h ;# 
   579  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   580                           PORTB equ 06h ;# 
   581  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   582                           PORTC equ 07h ;# 
   583  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   584                           PORTD equ 08h ;# 
   585  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   586                           PORTE equ 09h ;# 
   587  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   588                           PCLATH equ 0Ah ;# 
   589  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   590                           INTCON equ 0Bh ;# 
   591  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   592                           PIR1 equ 0Ch ;# 
   593  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   594                           PIR2 equ 0Dh ;# 
   595  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   596                           TMR1 equ 0Eh ;# 
   597  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   598                           TMR1L equ 0Eh ;# 
   599  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   600                           TMR1H equ 0Fh ;# 
   601  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   602                           T1CON equ 010h ;# 
   603  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   604                           TMR2 equ 011h ;# 
   605  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   606                           T2CON equ 012h ;# 
   607  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   608                           SSPBUF equ 013h ;# 
   609  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   610                           SSPCON equ 014h ;# 
   611  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   612                           CCPR1 equ 015h ;# 
   613  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   614                           CCPR1L equ 015h ;# 
   615  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   616                           CCPR1H equ 016h ;# 
   617  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   618                           CCP1CON equ 017h ;# 
   619  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   620                           RCSTA equ 018h ;# 
   621  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   622                           TXREG equ 019h ;# 
   623  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   624                           RCREG equ 01Ah ;# 
   625  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   626                           CCPR2 equ 01Bh ;# 
   627  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   628                           CCPR2L equ 01Bh ;# 
   629  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   630                           CCPR2H equ 01Ch ;# 
   631  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   632                           CCP2CON equ 01Dh ;# 
   633  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   634                           ADRESH equ 01Eh ;# 
   635  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   636                           ADCON0 equ 01Fh ;# 
   637  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   638                           OPTION_REG equ 081h ;# 
   639  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   640                           TRISA equ 085h ;# 
   641  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   642                           TRISB equ 086h ;# 
   643  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   644                           TRISC equ 087h ;# 
   645  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   646                           TRISD equ 088h ;# 
   647  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   648                           TRISE equ 089h ;# 
   649  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   650                           PIE1 equ 08Ch ;# 
   651  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   652                           PIE2 equ 08Dh ;# 
   653  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   654                           PCON equ 08Eh ;# 
   655  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   656                           SSPCON2 equ 091h ;# 
   657  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   658                           PR2 equ 092h ;# 
   659  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   660                           SSPADD equ 093h ;# 
   661  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   662                           SSPSTAT equ 094h ;# 
   663  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   664                           TXSTA equ 098h ;# 
   665  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   666                           SPBRG equ 099h ;# 
   667  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   668                           CMCON equ 09Ch ;# 
   669  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   670                           CVRCON equ 09Dh ;# 
   671  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   672                           ADRESL equ 09Eh ;# 
   673  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   674                           ADCON1 equ 09Fh ;# 
   675  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   676                           EEDATA equ 010Ch ;# 
   677  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   678                           EEADR equ 010Dh ;# 
   679  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   680                           EEDATH equ 010Eh ;# 
   681  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   682                           EEADRH equ 010Fh ;# 
   683  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   684                           EECON1 equ 018Ch ;# 
   685  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   686                           EECON2 equ 018Dh ;# 
   687  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   688                           INDF equ 00h ;# 
   689  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   690                           TMR0 equ 01h ;# 
   691  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   692                           PCL equ 02h ;# 
   693  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   694                           STATUS equ 03h ;# 
   695  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   696                           FSR equ 04h ;# 
   697  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   698                           PORTA equ 05h ;# 
   699  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   700                           PORTB equ 06h ;# 
   701  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   702                           PORTC equ 07h ;# 
   703  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   704                           PORTD equ 08h ;# 
   705  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   706                           PORTE equ 09h ;# 
   707  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   708                           PCLATH equ 0Ah ;# 
   709  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   710                           INTCON equ 0Bh ;# 
   711  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   712                           PIR1 equ 0Ch ;# 
   713  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   714                           PIR2 equ 0Dh ;# 
   715  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   716                           TMR1 equ 0Eh ;# 
   717  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   718                           TMR1L equ 0Eh ;# 
   719  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   720                           TMR1H equ 0Fh ;# 
   721  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   722                           T1CON equ 010h ;# 
   723  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   724                           TMR2 equ 011h ;# 
   725  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   726                           T2CON equ 012h ;# 
   727  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   728                           SSPBUF equ 013h ;# 
   729  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   730                           SSPCON equ 014h ;# 
   731  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   732                           CCPR1 equ 015h ;# 
   733  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   734                           CCPR1L equ 015h ;# 
   735  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   736                           CCPR1H equ 016h ;# 
   737  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   738                           CCP1CON equ 017h ;# 
   739  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   740                           RCSTA equ 018h ;# 
   741  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   742                           TXREG equ 019h ;# 
   743  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   744                           RCREG equ 01Ah ;# 
   745  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   746                           CCPR2 equ 01Bh ;# 
   747  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   748                           CCPR2L equ 01Bh ;# 
   749  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   750                           CCPR2H equ 01Ch ;# 
   751  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   752                           CCP2CON equ 01Dh ;# 
   753  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   754                           ADRESH equ 01Eh ;# 
   755  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   756                           ADCON0 equ 01Fh ;# 
   757  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   758                           OPTION_REG equ 081h ;# 
   759  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   760                           TRISA equ 085h ;# 
   761  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   762                           TRISB equ 086h ;# 
   763  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   764                           TRISC equ 087h ;# 
   765  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   766                           TRISD equ 088h ;# 
   767  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   768                           TRISE equ 089h ;# 
   769  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   770                           PIE1 equ 08Ch ;# 
   771  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   772                           PIE2 equ 08Dh ;# 
   773  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   774                           PCON equ 08Eh ;# 
   775  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   776                           SSPCON2 equ 091h ;# 
   777  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   778                           PR2 equ 092h ;# 
   779  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   780                           SSPADD equ 093h ;# 
   781  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   782                           SSPSTAT equ 094h ;# 
   783  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   784                           TXSTA equ 098h ;# 
   785  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   786                           SPBRG equ 099h ;# 
   787  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   788                           CMCON equ 09Ch ;# 
   789  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   790                           CVRCON equ 09Dh ;# 
   791  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   792                           ADRESL equ 09Eh ;# 
   793  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   794                           ADCON1 equ 09Fh ;# 
   795  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   796                           EEDATA equ 010Ch ;# 
   797  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   798                           EEADR equ 010Dh ;# 
   799  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   800                           EEDATH equ 010Eh ;# 
   801  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   802                           EEADRH equ 010Fh ;# 
   803  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   804                           EECON1 equ 018Ch ;# 
   805  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   806                           EECON2 equ 018Dh ;# 
   807  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   808                           INDF equ 00h ;# 
   809  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   810                           TMR0 equ 01h ;# 
   811  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   812                           PCL equ 02h ;# 
   813  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   814                           STATUS equ 03h ;# 
   815  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   816                           FSR equ 04h ;# 
   817  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   818                           PORTA equ 05h ;# 
   819  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   820                           PORTB equ 06h ;# 
   821  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   822                           PORTC equ 07h ;# 
   823  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   824                           PORTD equ 08h ;# 
   825  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   826                           PORTE equ 09h ;# 
   827  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   828                           PCLATH equ 0Ah ;# 
   829  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   830                           INTCON equ 0Bh ;# 
   831  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   832                           PIR1 equ 0Ch ;# 
   833  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   834                           PIR2 equ 0Dh ;# 
   835  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   836                           TMR1 equ 0Eh ;# 
   837  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   838                           TMR1L equ 0Eh ;# 
   839  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   840                           TMR1H equ 0Fh ;# 
   841  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   842                           T1CON equ 010h ;# 
   843  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   844                           TMR2 equ 011h ;# 
   845  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   846                           T2CON equ 012h ;# 
   847  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   848                           SSPBUF equ 013h ;# 
   849  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   850                           SSPCON equ 014h ;# 
   851  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   852                           CCPR1 equ 015h ;# 
   853  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   854                           CCPR1L equ 015h ;# 
   855  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   856                           CCPR1H equ 016h ;# 
   857  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   858                           CCP1CON equ 017h ;# 
   859  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   860                           RCSTA equ 018h ;# 
   861  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   862                           TXREG equ 019h ;# 
   863  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   864                           RCREG equ 01Ah ;# 
   865  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   866                           CCPR2 equ 01Bh ;# 
   867  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   868                           CCPR2L equ 01Bh ;# 
   869  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   870                           CCPR2H equ 01Ch ;# 
   871  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   872                           CCP2CON equ 01Dh ;# 
   873  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   874                           ADRESH equ 01Eh ;# 
   875  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   876                           ADCON0 equ 01Fh ;# 
   877  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   878                           OPTION_REG equ 081h ;# 
   879  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   880                           TRISA equ 085h ;# 
   881  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   882                           TRISB equ 086h ;# 
   883  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   884                           TRISC equ 087h ;# 
   885  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   886                           TRISD equ 088h ;# 
   887  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   888                           TRISE equ 089h ;# 
   889  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   890                           PIE1 equ 08Ch ;# 
   891  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   892                           PIE2 equ 08Dh ;# 
   893  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   894                           PCON equ 08Eh ;# 
   895  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   896                           SSPCON2 equ 091h ;# 
   897  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   898                           PR2 equ 092h ;# 
   899  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   900                           SSPADD equ 093h ;# 
   901  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   902                           SSPSTAT equ 094h ;# 
   903  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   904                           TXSTA equ 098h ;# 
   905  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   906                           SPBRG equ 099h ;# 
   907  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   908                           CMCON equ 09Ch ;# 
   909  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   910                           CVRCON equ 09Dh ;# 
   911  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   912                           ADRESL equ 09Eh ;# 
   913  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   914                           ADCON1 equ 09Fh ;# 
   915  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   916                           EEDATA equ 010Ch ;# 
   917  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   918                           EEADR equ 010Dh ;# 
   919  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   920                           EEDATH equ 010Eh ;# 
   921  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   922                           EEADRH equ 010Fh ;# 
   923  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   924                           EECON1 equ 018Ch ;# 
   925  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   926                           EECON2 equ 018Dh ;# 
   927  018D                     	FNCALL	_main,_Buzzer_Init
   928                           	FNCALL	_main,_ChangeTrigger
   929                           	FNCALL	_main,_CheckDay
   930                           	FNCALL	_main,_CheckTime
   931                           	FNCALL	_main,_DateDayScreen
   932                           	FNCALL	_main,_HeatingControlOff
   933                           	FNCALL	_main,_Init_Keypad
   934                           	FNCALL	_main,_Keypad_Scan
   935                           	FNCALL	_main,_LCD_Command
   936                           	FNCALL	_main,_LCD_Init
   937                           	FNCALL	_main,_MainScreen
   938                           	FNCALL	_main,_Main_Delay
   939                           	FNCALL	_main,_RealTimeClock_get_day_of_week
   940                           	FNCALL	_main,_RealTimeClock_init
   941                           	FNCALL	_main,_RealTimeClock_set_burst_time
   942                           	FNCALL	_main,_SetDate
   943                           	FNCALL	_main,_SetTime
   944                           	FNCALL	_main,_SoundAlarm
   945                           	FNCALL	_main,_SoundOff
   946                           	FNCALL	_main,_SwapToHeatingDisplay
   947                           	FNCALL	_main,_Switch24Hour
   948                           	FNCALL	_main,_Thermometer_Init
   949                           	FNCALL	_main,___wmul
   950                           	FNCALL	_SoundAlarm,_ChangeTrigger
   951                           	FNCALL	_SoundAlarm,_DateDayScreen
   952                           	FNCALL	_SoundAlarm,_Get_Temp
   953                           	FNCALL	_SoundAlarm,_HeatingControlOff
   954                           	FNCALL	_SoundAlarm,_Keypad_Scan
   955                           	FNCALL	_SoundAlarm,_LCD_Command
   956                           	FNCALL	_SoundAlarm,_LCD_SendString
   957                           	FNCALL	_SoundAlarm,_SetDate
   958                           	FNCALL	_SoundAlarm,_SetTime
   959                           	FNCALL	_SoundAlarm,_SoundOff
   960                           	FNCALL	_SoundAlarm,_SoundOn
   961                           	FNCALL	_SoundAlarm,_SwapToHeatingDisplay
   962                           	FNCALL	_SoundAlarm,_Switch24Hour
   963                           	FNCALL	_SoundAlarm,___wmul
   964                           	FNCALL	_HeatingControlOff,_ChangeTrigger
   965                           	FNCALL	_HeatingControlOff,_DateDayScreen
   966                           	FNCALL	_HeatingControlOff,_Get_Temp
   967                           	FNCALL	_HeatingControlOff,_Keypad_Scan
   968                           	FNCALL	_HeatingControlOff,_LCD_Command
   969                           	FNCALL	_HeatingControlOff,_LCD_SendString
   970                           	FNCALL	_HeatingControlOff,_MainScreen
   971                           	FNCALL	_HeatingControlOff,_Main_Delay
   972                           	FNCALL	_HeatingControlOff,_SetDate
   973                           	FNCALL	_HeatingControlOff,_SetTime
   974                           	FNCALL	_HeatingControlOff,_SoundOff
   975                           	FNCALL	_HeatingControlOff,_SwapToHeatingDisplay
   976                           	FNCALL	_HeatingControlOff,_Switch24Hour
   977                           	FNCALL	_HeatingControlOff,___wmul
   978                           	FNCALL	_Switch24Hour,_LCD_Command
   979                           	FNCALL	_Switch24Hour,_LCD_SendString
   980                           	FNCALL	_SetTime,_Keypad_Scan
   981                           	FNCALL	_SetTime,_LCD_Command
   982                           	FNCALL	_SetTime,_LCD_SendString
   983                           	FNCALL	_SetTime,_Main_Delay
   984                           	FNCALL	_SetTime,_RealTimeClock_get_hours
   985                           	FNCALL	_SetTime,_RealTimeClock_get_minutes
   986                           	FNCALL	_SetTime,_RealTimeClock_get_seconds
   987                           	FNCALL	_SetTime,_RealTimeClock_set_hours
   988                           	FNCALL	_SetTime,_RealTimeClock_set_minutes
   989                           	FNCALL	_SetTime,_RealTimeClock_set_seconds
   990                           	FNCALL	_SetTime,___awdiv
   991                           	FNCALL	_SetTime,___awmod
   992                           	FNCALL	_RealTimeClock_set_seconds,_RealTimeClock_write_byte
   993                           	FNCALL	_RealTimeClock_set_seconds,___int_to_hex
   994                           	FNCALL	_RealTimeClock_set_minutes,_RealTimeClock_write_byte
   995                           	FNCALL	_RealTimeClock_set_minutes,___int_to_hex
   996                           	FNCALL	_RealTimeClock_set_hours,_RealTimeClock_write_byte
   997                           	FNCALL	_RealTimeClock_set_hours,___int_to_hex
   998                           	FNCALL	_SetDate,_CheckDay
   999                           	FNCALL	_SetDate,_Keypad_Scan
  1000                           	FNCALL	_SetDate,_LCD_Command
  1001                           	FNCALL	_SetDate,_LCD_SendString
  1002                           	FNCALL	_SetDate,_Main_Delay
  1003                           	FNCALL	_SetDate,_RealTimeClock_get_day_of_month
  1004                           	FNCALL	_SetDate,_RealTimeClock_get_month
  1005                           	FNCALL	_SetDate,_RealTimeClock_get_year
  1006                           	FNCALL	_SetDate,_RealTimeClock_set_day_of_month
  1007                           	FNCALL	_SetDate,_RealTimeClock_set_day_of_week
  1008                           	FNCALL	_SetDate,_RealTimeClock_set_month
  1009                           	FNCALL	_SetDate,_RealTimeClock_set_year
  1010                           	FNCALL	_SetDate,___awdiv
  1011                           	FNCALL	_SetDate,___awmod
  1012                           	FNCALL	_RealTimeClock_set_year,_RealTimeClock_write_byte
  1013                           	FNCALL	_RealTimeClock_set_year,___int_to_hex
  1014                           	FNCALL	_RealTimeClock_set_month,_RealTimeClock_write_byte
  1015                           	FNCALL	_RealTimeClock_set_month,___int_to_hex
  1016                           	FNCALL	_RealTimeClock_set_day_of_week,_RealTimeClock_write_byte
  1017                           	FNCALL	_RealTimeClock_set_day_of_week,___int_to_hex
  1018                           	FNCALL	_RealTimeClock_set_day_of_month,_RealTimeClock_write_byte
  1019                           	FNCALL	_RealTimeClock_set_day_of_month,___int_to_hex
  1020                           	FNCALL	_MainScreen,_DisplayTemp
  1021                           	FNCALL	_MainScreen,_DisplayTime
  1022                           	FNCALL	_MainScreen,_LCD_SecondLine
  1023                           	FNCALL	_MainScreen,_LCD_SendString
  1024                           	FNCALL	_DisplayTime,_LCD_SendString
  1025                           	FNCALL	_DisplayTime,_RealTimeClock_get_hours
  1026                           	FNCALL	_DisplayTime,_RealTimeClock_get_minutes
  1027                           	FNCALL	_DisplayTime,_RealTimeClock_get_seconds
  1028                           	FNCALL	_DisplayTime,___awdiv
  1029                           	FNCALL	_DisplayTime,___awmod
  1030                           	FNCALL	_RealTimeClock_get_seconds,_RealTimeClock_read_byte
  1031                           	FNCALL	_RealTimeClock_get_seconds,_RealTimeClock_write_byte
  1032                           	FNCALL	_RealTimeClock_get_seconds,___hex_to_int
  1033                           	FNCALL	_DisplayTemp,_Get_Temp
  1034                           	FNCALL	_DisplayTemp,_LCD_Busy
  1035                           	FNCALL	_DisplayTemp,_LCD_SendData
  1036                           	FNCALL	_DisplayTemp,_LCD_SendString
  1037                           	FNCALL	_Get_Temp,_Delay
  1038                           	FNCALL	_Get_Temp,_Read_Byte
  1039                           	FNCALL	_Get_Temp,_Reset
  1040                           	FNCALL	_Get_Temp,_Write_Byte
  1041                           	FNCALL	_Get_Temp,___awdiv
  1042                           	FNCALL	_Get_Temp,___awmod
  1043                           	FNCALL	_Get_Temp,___lwdiv
  1044                           	FNCALL	_Get_Temp,___lwmod
  1045                           	FNCALL	_Write_Byte,_Delay
  1046                           	FNCALL	_Reset,_Delay
  1047                           	FNCALL	_Read_Byte,_Delay
  1048                           	FNCALL	_DateDayScreen,_ChangeTrigger
  1049                           	FNCALL	_DateDayScreen,_DisplayDate
  1050                           	FNCALL	_DateDayScreen,_DisplayDay
  1051                           	FNCALL	_DateDayScreen,_Keypad_Scan
  1052                           	FNCALL	_DateDayScreen,_LCD_Command
  1053                           	FNCALL	_DateDayScreen,_LCD_SecondLine
  1054                           	FNCALL	_DateDayScreen,_LCD_SendString
  1055                           	FNCALL	_DateDayScreen,_SwapToHeatingDisplay
  1056                           	FNCALL	_SwapToHeatingDisplay,_Keypad_Scan
  1057                           	FNCALL	_SwapToHeatingDisplay,_LCD_Command
  1058                           	FNCALL	_SwapToHeatingDisplay,_LCD_SendString
  1059                           	FNCALL	_LCD_SecondLine,_LCD_Command
  1060                           	FNCALL	_DisplayDay,_LCD_SendString
  1061                           	FNCALL	_DisplayDay,_RealTimeClock_get_day_of_week
  1062                           	FNCALL	_RealTimeClock_get_day_of_week,_RealTimeClock_read_byte
  1063                           	FNCALL	_RealTimeClock_get_day_of_week,_RealTimeClock_write_byte
  1064                           	FNCALL	_RealTimeClock_get_day_of_week,___hex_to_int
  1065                           	FNCALL	_DisplayDate,_LCD_SendString
  1066                           	FNCALL	_DisplayDate,_RealTimeClock_get_day_of_month
  1067                           	FNCALL	_DisplayDate,_RealTimeClock_get_month
  1068                           	FNCALL	_DisplayDate,_RealTimeClock_get_year
  1069                           	FNCALL	_DisplayDate,___awdiv
  1070                           	FNCALL	_DisplayDate,___awmod
  1071                           	FNCALL	_RealTimeClock_get_year,_RealTimeClock_read_byte
  1072                           	FNCALL	_RealTimeClock_get_year,_RealTimeClock_write_byte
  1073                           	FNCALL	_RealTimeClock_get_year,___hex_to_int
  1074                           	FNCALL	_RealTimeClock_get_month,_RealTimeClock_read_byte
  1075                           	FNCALL	_RealTimeClock_get_month,_RealTimeClock_write_byte
  1076                           	FNCALL	_RealTimeClock_get_month,___hex_to_int
  1077                           	FNCALL	_RealTimeClock_get_day_of_month,_RealTimeClock_read_byte
  1078                           	FNCALL	_RealTimeClock_get_day_of_month,_RealTimeClock_write_byte
  1079                           	FNCALL	_RealTimeClock_get_day_of_month,___hex_to_int
  1080                           	FNCALL	_ChangeTrigger,_Keypad_Scan
  1081                           	FNCALL	_ChangeTrigger,_LCD_Busy
  1082                           	FNCALL	_ChangeTrigger,_LCD_Command
  1083                           	FNCALL	_ChangeTrigger,_LCD_SendData
  1084                           	FNCALL	_ChangeTrigger,_LCD_SendString
  1085                           	FNCALL	_ChangeTrigger,_Main_Delay
  1086                           	FNCALL	_ChangeTrigger,___awdiv
  1087                           	FNCALL	_ChangeTrigger,___awmod
  1088                           	FNCALL	_LCD_SendString,_LCD_SendData
  1089                           	FNCALL	_LCD_SendData,_LCD_Busy
  1090                           	FNCALL	_LCD_Command,_LCD_Busy
  1091                           	FNCALL	_Keypad_Scan,_Key_Delay
  1092                           	FNCALL	_RealTimeClock_set_burst_time,_RealTimeClock_write_byte
  1093                           	FNCALL	_RealTimeClock_set_burst_time,___int_to_hex
  1094                           	FNCALL	___int_to_hex,___awmod
  1095                           	FNCALL	_RealTimeClock_init,_RealTimeClock_write_byte
  1096                           	FNCALL	_CheckTime,_RealTimeClock_get_hours
  1097                           	FNCALL	_CheckTime,_RealTimeClock_get_minutes
  1098                           	FNCALL	_RealTimeClock_get_minutes,_RealTimeClock_read_byte
  1099                           	FNCALL	_RealTimeClock_get_minutes,_RealTimeClock_write_byte
  1100                           	FNCALL	_RealTimeClock_get_minutes,___hex_to_int
  1101                           	FNCALL	_RealTimeClock_get_hours,_RealTimeClock_read_byte
  1102                           	FNCALL	_RealTimeClock_get_hours,_RealTimeClock_write_byte
  1103                           	FNCALL	_RealTimeClock_get_hours,___hex_to_int
  1104                           	FNCALL	___hex_to_int,___awmod
  1105                           	FNROOT	_main
  1106                           	global	_triggerTemp
  1107                           	global	_weekEndStart
  1108                           	global	_weekDayEnd
  1109                           	global	_weekDayStart
  1110                           	global	_tempBuffer
  1111                           	global	main@F1009
  1112                           	global	_numberTable
  1113                           	global	SetDate@F991
  1114                           	global	SetTime@F980
  1115                           	global	_weekEndEnd
  1116                           	global	_dateDisplayer
  1117                           	global	_timeDisplayer
  1118                           psect	idataBANK1,class=CODE,space=0,delta=2,noexec
  1119                           global __pidataBANK1
  1120                           __pidataBANK1:
  1121  187A                     	file	"main.c"
  1122                           	line	49
  1123                           
  1124                           ;initializer for _triggerTemp
  1125                           	retlw	014h
  1126  187A  3414               	retlw	0
  1127  187B  3400               
  1128                           	retlw	low(0)
  1129  187C  3400               	retlw	high(0)
  1130  187D  3400               
  1131                           	line	34
  1132                           
  1133                           ;initializer for _weekEndStart
  1134                           	retlw	07h
  1135  187E  3407               	retlw	0
  1136  187F  3400               
  1137                           	retlw	low(0)
  1138  1880  3400               	retlw	high(0)
  1139  1881  3400               
  1140                           	line	33
  1141                           
  1142                           ;initializer for _weekDayEnd
  1143                           	retlw	016h
  1144  1882  3416               	retlw	0
  1145  1883  3400               
  1146                           	retlw	01Eh
  1147  1884  341E               	retlw	0
  1148  1885  3400               
  1149                           	line	32
  1150                           
  1151                           ;initializer for _weekDayStart
  1152                           	retlw	06h
  1153  1886  3406               	retlw	0
  1154  1887  3400               
  1155                           	retlw	01Eh
  1156  1888  341E               	retlw	0
  1157  1889  3400               
  1158                           	line	38
  1159                           
  1160                           ;initializer for _tempBuffer
  1161                           	retlw	030h
  1162  188A  3430               	retlw	030h
  1163  188B  3430               	retlw	030h
  1164  188C  3430               	retlw	030h
  1165  188D  3430               	retlw	030h
  1166  188E  3430               	retlw	low(0)
  1167  188F  3400               psect	idataBANK3,class=CODE,space=0,delta=2,noexec
  1168                           global __pidataBANK3
  1169                           __pidataBANK3:
  1170  1C24                     	line	955
  1171                           
  1172                           ;initializer for main@F1009
  1173                           	retlw	low(0)
  1174  1C24  3400               	retlw	high(0)
  1175  1C25  3400               
  1176                           	retlw	low(0)
  1177  1C26  3400               	retlw	high(0)
  1178  1C27  3400               
  1179                           	retlw	0Ch
  1180  1C28  340C               	retlw	0
  1181  1C29  3400               
  1182                           	retlw	01h
  1183  1C2A  3401               	retlw	0
  1184  1C2B  3400               
  1185                           	retlw	01h
  1186  1C2C  3401               	retlw	0
  1187  1C2D  3400               
  1188                           	retlw	05h
  1189  1C2E  3405               	retlw	0
  1190  1C2F  3400               
  1191                           	retlw	0Ah
  1192  1C30  340A               	retlw	0
  1193  1C31  3400               
  1194                           	retlw	low(0)
  1195  1C32  3400               	retlw	high(0)
  1196  1C33  3400               
  1197                           	file	"Thermometer.c"
  1198                           	line	23
  1199                           
  1200                           ;initializer for _numberTable
  1201                           	retlw	030h
  1202  1C34  3430               	retlw	031h
  1203  1C35  3431               	retlw	032h
  1204  1C36  3432               	retlw	033h
  1205  1C37  3433               	retlw	034h
  1206  1C38  3434               	retlw	035h
  1207  1C39  3435               	retlw	036h
  1208  1C3A  3436               	retlw	037h
  1209  1C3B  3437               	retlw	038h
  1210  1C3C  3438               	retlw	039h
  1211  1C3D  3439               	file	"main.c"
  1212                           	line	525
  1213                           
  1214                           ;initializer for SetDate@F991
  1215                           	retlw	030h
  1216  1C3E  3430               	retlw	030h
  1217  1C3F  3430               	retlw	02Fh
  1218  1C40  342F               	retlw	030h
  1219  1C41  3430               	retlw	030h
  1220  1C42  3430               	retlw	02Fh
  1221  1C43  342F               	retlw	030h
  1222  1C44  3430               	retlw	030h
  1223  1C45  3430               	retlw	low(0)
  1224  1C46  3400               	line	367
  1225                           
  1226                           ;initializer for SetTime@F980
  1227                           	retlw	030h
  1228  1C47  3430               	retlw	030h
  1229  1C48  3430               	retlw	03Ah
  1230  1C49  343A               	retlw	030h
  1231  1C4A  3430               	retlw	030h
  1232  1C4B  3430               	retlw	02Eh
  1233  1C4C  342E               	retlw	030h
  1234  1C4D  3430               	retlw	030h
  1235  1C4E  3430               	retlw	low(0)
  1236  1C4F  3400               	line	35
  1237                           
  1238                           ;initializer for _weekEndEnd
  1239                           	retlw	017h
  1240  1C50  3417               	retlw	0
  1241  1C51  3400               
  1242                           	retlw	low(0)
  1243  1C52  3400               	retlw	high(0)
  1244  1C53  3400               
  1245                           	line	41
  1246                           
  1247                           ;initializer for _dateDisplayer
  1248                           	retlw	030h
  1249  1C54  3430               	retlw	030h
  1250  1C55  3430               	retlw	02Fh
  1251  1C56  342F               	retlw	030h
  1252  1C57  3430               	retlw	030h
  1253  1C58  3430               	retlw	02Fh
  1254  1C59  342F               	retlw	030h
  1255  1C5A  3430               	retlw	030h
  1256  1C5B  3430               	retlw	low(0)
  1257  1C5C  3400               	line	40
  1258                           
  1259                           ;initializer for _timeDisplayer
  1260                           	retlw	030h
  1261  1C5D  3430               	retlw	030h
  1262  1C5E  3430               	retlw	03Ah
  1263  1C5F  343A               	retlw	030h
  1264  1C60  3430               	retlw	030h
  1265  1C61  3430               	retlw	02Eh
  1266  1C62  342E               	retlw	030h
  1267  1C63  3430               	retlw	030h
  1268  1C64  3430               	retlw	low(0)
  1269  1C65  3400               	global	_year
  1270                           	global	_day
  1271                           	global	_month
  1272                           	global	_timeSecs
  1273                           	global	_timeMins
  1274                           	global	_timeHours
  1275                           	global	_day_of_week
  1276                           	global	_TempInt
  1277                           	global	_previousTemp
  1278                           	global	_Temp
  1279                           	global	_TempBCD
  1280                           	global	_is24Hour
  1281                           	global	_isWeekDay
  1282                           	global	_DisableAlarm
  1283                           	global	_IsHeatingOn
  1284                           	global	Read_Byte@j
  1285                           	global	_hundredthbit
  1286                           	global	_tenthbit
  1287                           	global	_intent
  1288                           	global	_tenbit
  1289                           	global	_TempDec
  1290                           	global	_THB
  1291                           	global	_TLB
  1292                           	global	ChangeTrigger@F955
  1293                           	global	___RealTimeClock_buff
  1294                           	global	_PORTD
  1295                           _PORTD	set	0x8
  1296  0008                     	global	_PORTC
  1297                           _PORTC	set	0x7
  1298  0007                     	global	_RA0
  1299                           _RA0	set	0x28
  1300  0028                     	global	_RB1
  1301                           _RB1	set	0x31
  1302  0031                     	global	_RD7
  1303                           _RD7	set	0x47
  1304  0047                     	global	_RA2
  1305                           _RA2	set	0x2A
  1306  002A                     	global	_RA1
  1307                           _RA1	set	0x29
  1308  0029                     	global	_RA3
  1309                           _RA3	set	0x2B
  1310  002B                     	global	_RC0
  1311                           _RC0	set	0x38
  1312  0038                     	global	_RC1
  1313                           _RC1	set	0x39
  1314  0039                     	global	_RC2
  1315                           _RC2	set	0x3A
  1316  003A                     	global	_RC3
  1317                           _RC3	set	0x3B
  1318  003B                     	global	_RC7
  1319                           _RC7	set	0x3F
  1320  003F                     	global	_RC6
  1321                           _RC6	set	0x3E
  1322  003E                     	global	_RC5
  1323                           _RC5	set	0x3D
  1324  003D                     	global	_RC4
  1325                           _RC4	set	0x3C
  1326  003C                     	global	_RB5
  1327                           _RB5	set	0x35
  1328  0035                     	global	_RB0
  1329                           _RB0	set	0x30
  1330  0030                     	global	_RB4
  1331                           _RB4	set	0x34
  1332  0034                     	global	_TRISA
  1333                           _TRISA	set	0x85
  1334  0085                     	global	_TRISD
  1335                           _TRISD	set	0x88
  1336  0088                     	global	_TRISC
  1337                           _TRISC	set	0x87
  1338  0087                     	global	_ADCON1
  1339                           _ADCON1	set	0x9F
  1340  009F                     	global	_TRISA0
  1341                           _TRISA0	set	0x428
  1342  0428                     	global	_TRISB1
  1343                           _TRISB1	set	0x431
  1344  0431                     	global	_TRISB5
  1345                           _TRISB5	set	0x435
  1346  0435                     	global	_TRISB0
  1347                           _TRISB0	set	0x430
  1348  0430                     	global	_TRISB4
  1349                           _TRISB4	set	0x434
  1350  0434                     psect	strings,class=STRING,delta=2,noexec
  1351                           global __pstrings
  1352                           __pstrings:
  1353  0800                     stringtab:
  1354  0800                     	global    __stringtab
  1355                           __stringtab:
  1356  0800                     ;	String table - string pointers are 1 byte each
  1357                           	btfsc	(btemp+1),7
  1358  0800  1BFF               	ljmp	stringcode
  1359  0801  280A               	bcf	status,7
  1360  0802  1383               	btfsc	(btemp+1),0
  1361  0803  187F               	bsf	status,7
  1362  0804  1783               	movf	indf,w
  1363  0805  0800               	incf fsr
  1364  0806  0A84               skipnz
  1365  0807  1903               incf btemp+1
  1366  0808  0AFF               	return
  1367  0809  0008               stringcode:stringdir:
  1368  080A                     movlw high(stringdir)
      + 080A                     stringdir:	
  1369  080A  3008               movwf pclath
  1370  080B  008A               movf fsr,w
  1371  080C  0804               incf fsr
  1372  080D  0A84               	addwf pc
  1373  080E  0782               	global __stringbase
  1374                           __stringbase:
  1375  080F                     	retlw	0
  1376  080F  3400               psect	strings
  1377                           	global    __end_of__stringtab
  1378                           __end_of__stringtab:
  1379  0810                     	
  1380                           STR_24:	
  1381  0810                     	retlw	72	;'H'
  1382  0810  3448               	retlw	101	;'e'
  1383  0811  3465               	retlw	97	;'a'
  1384  0812  3461               	retlw	116	;'t'
  1385  0813  3474               	retlw	105	;'i'
  1386  0814  3469               	retlw	110	;'n'
  1387  0815  346E               	retlw	103	;'g'
  1388  0816  3467               	retlw	32	;' '
  1389  0817  3420               	retlw	70	;'F'
  1390  0818  3446               	retlw	97	;'a'
  1391  0819  3461               	retlw	105	;'i'
  1392  081A  3469               	retlw	108	;'l'
  1393  081B  346C               	retlw	117	;'u'
  1394  081C  3475               	retlw	114	;'r'
  1395  081D  3472               	retlw	101	;'e'
  1396  081E  3465               	retlw	0
  1397  081F  3400               psect	strings
  1398                           	
  1399                           STR_15:	
  1400  0820                     	retlw	50	;'2'
  1401  0820  3432               	retlw	52	;'4'
  1402  0821  3434               	retlw	32	;' '
  1403  0822  3420               	retlw	72	;'H'
  1404  0823  3448               	retlw	111	;'o'
  1405  0824  346F               	retlw	117	;'u'
  1406  0825  3475               	retlw	114	;'r'
  1407  0826  3472               	retlw	32	;' '
  1408  0827  3420               	retlw	105	;'i'
  1409  0828  3469               	retlw	115	;'s'
  1410  0829  3473               	retlw	32	;' '
  1411  082A  3420               	retlw	111	;'o'
  1412  082B  346F               	retlw	110	;'n'
  1413  082C  346E               	retlw	0
  1414  082D  3400               psect	strings
  1415                           	
  1416                           STR_21:	
  1417  082E                     	retlw	68	;'D'
  1418  082E  3444               	retlw	97	;'a'
  1419  082F  3461               	retlw	116	;'t'
  1420  0830  3474               	retlw	101	;'e'
  1421  0831  3465               	retlw	47	;'/'
  1422  0832  342F               	retlw	68	;'D'
  1423  0833  3444               	retlw	97	;'a'
  1424  0834  3461               	retlw	121	;'y'
  1425  0835  3479               	retlw	32	;' '
  1426  0836  3420               	retlw	83	;'S'
  1427  0837  3453               	retlw	101	;'e'
  1428  0838  3465               	retlw	116	;'t'
  1429  0839  3474               	retlw	0
  1430  083A  3400               psect	strings
  1431                           	
  1432                           STR_22:	
  1433  083B                     	retlw	72	;'H'
  1434  083B  3448               	retlw	101	;'e'
  1435  083C  3465               	retlw	97	;'a'
  1436  083D  3461               	retlw	116	;'t'
  1437  083E  3474               	retlw	105	;'i'
  1438  083F  3469               	retlw	110	;'n'
  1439  0840  346E               	retlw	103	;'g'
  1440  0841  3467               	retlw	32	;' '
  1441  0842  3420               	retlw	79	;'O'
  1442  0843  344F               	retlw	102	;'f'
  1443  0844  3466               	retlw	102	;'f'
  1444  0845  3466               	retlw	0
  1445  0846  3400               psect	strings
  1446                           	
  1447                           STR_11:	
  1448  0847                     	retlw	84	;'T'
  1449  0847  3454               	retlw	114	;'r'
  1450  0848  3472               	retlw	105	;'i'
  1451  0849  3469               	retlw	103	;'g'
  1452  084A  3467               	retlw	103	;'g'
  1453  084B  3467               	retlw	101	;'e'
  1454  084C  3465               	retlw	114	;'r'
  1455  084D  3472               	retlw	32	;' '
  1456  084E  3420               	retlw	83	;'S'
  1457  084F  3453               	retlw	101	;'e'
  1458  0850  3465               	retlw	116	;'t'
  1459  0851  3474               	retlw	0
  1460  0852  3400               psect	strings
  1461                           	
  1462                           STR_23:	
  1463  0853                     	retlw	72	;'H'
  1464  0853  3448               	retlw	101	;'e'
  1465  0854  3465               	retlw	97	;'a'
  1466  0855  3461               	retlw	116	;'t'
  1467  0856  3474               	retlw	105	;'i'
  1468  0857  3469               	retlw	110	;'n'
  1469  0858  346E               	retlw	103	;'g'
  1470  0859  3467               	retlw	32	;' '
  1471  085A  3420               	retlw	79	;'O'
  1472  085B  344F               	retlw	110	;'n'
  1473  085C  346E               	retlw	0
  1474  085D  3400               psect	strings
  1475                           	
  1476                           STR_3:	
  1477  085E                     	retlw	87	;'W'
  1478  085E  3457               	retlw	101	;'e'
  1479  085F  3465               	retlw	100	;'d'
  1480  0860  3464               	retlw	110	;'n'
  1481  0861  346E               	retlw	101	;'e'
  1482  0862  3465               	retlw	115	;'s'
  1483  0863  3473               	retlw	100	;'d'
  1484  0864  3464               	retlw	97	;'a'
  1485  0865  3461               	retlw	121	;'y'
  1486  0866  3479               	retlw	0
  1487  0867  3400               psect	strings
  1488                           	
  1489                           STR_12:	
  1490  0868                     	retlw	72	;'H'
  1491  0868  3448               	retlw	101	;'e'
  1492  0869  3465               	retlw	97	;'a'
  1493  086A  3461               	retlw	116	;'t'
  1494  086B  3474               	retlw	105	;'i'
  1495  086C  3469               	retlw	110	;'n'
  1496  086D  346E               	retlw	103	;'g'
  1497  086E  3467               	retlw	58	;':'
  1498  086F  343A               	retlw	0
  1499  0870  3400               psect	strings
  1500                           	
  1501                           STR_10:	
  1502  0871                     	retlw	84	;'T'
  1503  0871  3454               	retlw	114	;'r'
  1504  0872  3472               	retlw	105	;'i'
  1505  0873  3469               	retlw	103	;'g'
  1506  0874  3467               	retlw	103	;'g'
  1507  0875  3467               	retlw	101	;'e'
  1508  0876  3465               	retlw	114	;'r'
  1509  0877  3472               	retlw	58	;':'
  1510  0878  343A               	retlw	0
  1511  0879  3400               psect	strings
  1512                           	
  1513                           STR_19:	
  1514  087A                     	retlw	84	;'T'
  1515  087A  3454               	retlw	105	;'i'
  1516  087B  3469               	retlw	109	;'m'
  1517  087C  346D               	retlw	101	;'e'
  1518  087D  3465               	retlw	32	;' '
  1519  087E  3420               	retlw	83	;'S'
  1520  087F  3453               	retlw	101	;'e'
  1521  0880  3465               	retlw	116	;'t'
  1522  0881  3474               	retlw	0
  1523  0882  3400               psect	strings
  1524                           	
  1525                           STR_6:	
  1526  0883                     	retlw	83	;'S'
  1527  0883  3453               	retlw	97	;'a'
  1528  0884  3461               	retlw	116	;'t'
  1529  0885  3474               	retlw	117	;'u'
  1530  0886  3475               	retlw	114	;'r'
  1531  0887  3472               	retlw	100	;'d'
  1532  0888  3464               	retlw	97	;'a'
  1533  0889  3461               	retlw	121	;'y'
  1534  088A  3479               	retlw	0
  1535  088B  3400               psect	strings
  1536                           	
  1537                           STR_4:	
  1538  088C                     	retlw	84	;'T'
  1539  088C  3454               	retlw	104	;'h'
  1540  088D  3468               	retlw	117	;'u'
  1541  088E  3475               	retlw	114	;'r'
  1542  088F  3472               	retlw	115	;'s'
  1543  0890  3473               	retlw	100	;'d'
  1544  0891  3464               	retlw	97	;'a'
  1545  0892  3461               	retlw	121	;'y'
  1546  0893  3479               	retlw	0
  1547  0894  3400               psect	strings
  1548                           	
  1549                           STR_2:	
  1550  0895                     	retlw	84	;'T'
  1551  0895  3454               	retlw	117	;'u'
  1552  0896  3475               	retlw	101	;'e'
  1553  0897  3465               	retlw	115	;'s'
  1554  0898  3473               	retlw	100	;'d'
  1555  0899  3464               	retlw	97	;'a'
  1556  089A  3461               	retlw	121	;'y'
  1557  089B  3479               	retlw	0
  1558  089C  3400               psect	strings
  1559                           	
  1560                           STR_16:	
  1561  089D                     	retlw	68	;'D'
  1562  089D  3444               	retlw	97	;'a'
  1563  089E  3461               	retlw	116	;'t'
  1564  089F  3474               	retlw	101	;'e'
  1565  08A0  3465               	retlw	58	;':'
  1566  08A1  343A               	retlw	32	;' '
  1567  08A2  3420               	retlw	0
  1568  08A3  3400               psect	strings
  1569                           	
  1570                           STR_5:	
  1571  08A4                     	retlw	70	;'F'
  1572  08A4  3446               	retlw	114	;'r'
  1573  08A5  3472               	retlw	105	;'i'
  1574  08A6  3469               	retlw	100	;'d'
  1575  08A7  3464               	retlw	97	;'a'
  1576  08A8  3461               	retlw	121	;'y'
  1577  08A9  3479               	retlw	0
  1578  08AA  3400               psect	strings
  1579                           	
  1580                           STR_1:	
  1581  08AB                     	retlw	77	;'M'
  1582  08AB  344D               	retlw	111	;'o'
  1583  08AC  346F               	retlw	110	;'n'
  1584  08AD  346E               	retlw	100	;'d'
  1585  08AE  3464               	retlw	97	;'a'
  1586  08AF  3461               	retlw	121	;'y'
  1587  08B0  3479               	retlw	0
  1588  08B1  3400               psect	strings
  1589                           	
  1590                           STR_7:	
  1591  08B2                     	retlw	83	;'S'
  1592  08B2  3453               	retlw	117	;'u'
  1593  08B3  3475               	retlw	110	;'n'
  1594  08B4  346E               	retlw	100	;'d'
  1595  08B5  3464               	retlw	97	;'a'
  1596  08B6  3461               	retlw	121	;'y'
  1597  08B7  3479               	retlw	0
  1598  08B8  3400               psect	strings
  1599                           	
  1600                           STR_17:	
  1601  08B9                     	retlw	68	;'D'
  1602  08B9  3444               	retlw	97	;'a'
  1603  08BA  3461               	retlw	121	;'y'
  1604  08BB  3479               	retlw	58	;':'
  1605  08BC  343A               	retlw	32	;' '
  1606  08BD  3420               	retlw	0
  1607  08BE  3400               psect	strings
  1608                           	
  1609                           STR_8:	
  1610  08BF                     	retlw	84	;'T'
  1611  08BF  3454               	retlw	105	;'i'
  1612  08C0  3469               	retlw	109	;'m'
  1613  08C1  346D               	retlw	101	;'e'
  1614  08C2  3465               	retlw	58	;':'
  1615  08C3  343A               	retlw	0
  1616  08C4  3400               psect	strings
  1617                           	
  1618                           STR_20:	
  1619  08C5                     	retlw	68	;'D'
  1620  08C5  3444               	retlw	97	;'a'
  1621  08C6  3461               	retlw	116	;'t'
  1622  08C7  3474               	retlw	101	;'e'
  1623  08C8  3465               	retlw	58	;':'
  1624  08C9  343A               	retlw	0
  1625  08CA  3400               psect	strings
  1626                           	
  1627                           STR_9:	
  1628  08CB                     	retlw	84	;'T'
  1629  08CB  3454               	retlw	101	;'e'
  1630  08CC  3465               	retlw	109	;'m'
  1631  08CD  346D               	retlw	112	;'p'
  1632  08CE  3470               	retlw	58	;':'
  1633  08CF  343A               	retlw	0
  1634  08D0  3400               psect	strings
  1635                           STR_13	equ	STR_23+8
  1636  085B                     STR_14	equ	STR_22+8
  1637  0843                     STR_18	equ	STR_8+0
  1638  08BF                     ; #config settings
  1639                           global __CFG_FOSC$HS
  1640                           __CFG_FOSC$HS equ 0x0
  1641  0000                     global __CFG_WDTE$OFF
  1642                           __CFG_WDTE$OFF equ 0x0
  1643  0000                     global __CFG_PWRTE$ON
  1644                           __CFG_PWRTE$ON equ 0x0
  1645  0000                     global __CFG_BOREN$OFF
  1646                           __CFG_BOREN$OFF equ 0x0
  1647  0000                     global __CFG_LVP$OFF
  1648                           __CFG_LVP$OFF equ 0x0
  1649  0000                     	file	"C:\Users\515817\AppData\Local\Temp\s7ok."
  1650                           	line	#
  1651                           psect cinit,class=CODE,delta=2
  1652                           global start_initialization
  1653                           start_initialization:
  1654  07C6                     
  1655                           global __initialization
  1656                           __initialization:
  1657  07C6                     psect	bssBANK0,class=BANK0,space=1,noexec
  1658                           global __pbssBANK0
  1659                           __pbssBANK0:
  1660  0061                     _year:
  1661  0061                            ds      2
  1662  0061                     
  1663                           _day:
  1664  0063                            ds      2
  1665  0063                     
  1666                           _month:
  1667  0065                            ds      2
  1668  0065                     
  1669                           _timeSecs:
  1670  0067                            ds      2
  1671  0067                     
  1672                           _timeMins:
  1673  0069                            ds      2
  1674  0069                     
  1675                           _timeHours:
  1676  006B                            ds      2
  1677  006B                     
  1678                           _day_of_week:
  1679  006D                            ds      2
  1680  006D                     
  1681                           _TempInt:
  1682  006F                            ds      1
  1683  006F                     
  1684                           psect	bssBANK1,class=BANK1,space=1,noexec
  1685                           global __pbssBANK1
  1686                           __pbssBANK1:
  1687  00A0                     _previousTemp:
  1688  00A0                            ds      6
  1689  00A0                     
  1690                           _Temp:
  1691  00A6                            ds      5
  1692  00A6                     
  1693                           _TempBCD:
  1694  00AB                            ds      2
  1695  00AB                     
  1696                           _is24Hour:
  1697  00AD                            ds      2
  1698  00AD                     
  1699                           _isWeekDay:
  1700  00AF                            ds      2
  1701  00AF                     
  1702                           _DisableAlarm:
  1703  00B1                            ds      2
  1704  00B1                     
  1705                           _IsHeatingOn:
  1706  00B3                            ds      2
  1707  00B3                     
  1708                           Read_Byte@j:
  1709  00B5                            ds      1
  1710  00B5                     
  1711                           _hundredthbit:
  1712  00B6                            ds      1
  1713  00B6                     
  1714                           _tenthbit:
  1715  00B7                            ds      1
  1716  00B7                     
  1717                           _intent:
  1718  00B8                            ds      1
  1719  00B8                     
  1720                           _tenbit:
  1721  00B9                            ds      1
  1722  00B9                     
  1723                           _TempDec:
  1724  00BA                            ds      1
  1725  00BA                     
  1726                           _THB:
  1727  00BB                            ds      1
  1728  00BB                     
  1729                           _TLB:
  1730  00BC                            ds      1
  1731  00BC                     
  1732                           _timeBuffer:
  1733  00BD                            ds      1
  1734  00BD                     
  1735                           psect	dataBANK1,class=BANK1,space=1,noexec
  1736                           global __pdataBANK1
  1737                           __pdataBANK1:
  1738  00DA                     	file	"main.c"
  1739                           	line	49
  1740                           _triggerTemp:
  1741  00DA                            ds      4
  1742  00DA                     
  1743                           psect	dataBANK1
  1744                           	file	"main.c"
  1745                           	line	34
  1746                           _weekEndStart:
  1747  00DE                            ds      4
  1748  00DE                     
  1749                           psect	dataBANK1
  1750                           	file	"main.c"
  1751                           	line	33
  1752                           _weekDayEnd:
  1753  00E2                            ds      4
  1754  00E2                     
  1755                           psect	dataBANK1
  1756                           	file	"main.c"
  1757                           	line	32
  1758                           _weekDayStart:
  1759  00E6                            ds      4
  1760  00E6                     
  1761                           psect	dataBANK1
  1762                           	file	"main.c"
  1763                           	line	38
  1764                           _tempBuffer:
  1765  00EA                            ds      6
  1766  00EA                     
  1767                           psect	bssBANK3,class=BANK3,space=1,noexec
  1768                           global __pbssBANK3
  1769                           __pbssBANK3:
  1770  01D2                     ChangeTrigger@F955:
  1771  01D2                            ds      4
  1772  01D2                     
  1773                           ___RealTimeClock_buff:
  1774  01D6                            ds      14
  1775  01D6                     
  1776                           psect	dataBANK3,class=BANK3,space=1,noexec
  1777                           global __pdataBANK3
  1778                           __pdataBANK3:
  1779  0190                     	file	"main.c"
  1780                           	line	955
  1781                           main@F1009:
  1782  0190                            ds      16
  1783  0190                     
  1784                           psect	dataBANK3
  1785                           	file	"Thermometer.c"
  1786                           	line	23
  1787                           _numberTable:
  1788  01A0                            ds      10
  1789  01A0                     
  1790                           psect	dataBANK3
  1791                           	file	"main.c"
  1792                           	line	525
  1793                           SetDate@F991:
  1794  01AA                            ds      9
  1795  01AA                     
  1796                           psect	dataBANK3
  1797                           	file	"main.c"
  1798                           	line	367
  1799                           SetTime@F980:
  1800  01B3                            ds      9
  1801  01B3                     
  1802                           psect	dataBANK3
  1803                           	file	"main.c"
  1804                           	line	35
  1805                           _weekEndEnd:
  1806  01BC                            ds      4
  1807  01BC                     
  1808                           psect	dataBANK3
  1809                           	file	"main.c"
  1810                           	line	41
  1811                           _dateDisplayer:
  1812  01C0                            ds      9
  1813  01C0                     
  1814                           psect	dataBANK3
  1815                           	file	"main.c"
  1816                           	line	40
  1817                           _timeDisplayer:
  1818  01C9                            ds      9
  1819  01C9                     
  1820                           	file	"C:\Users\515817\AppData\Local\Temp\s7ok."
  1821                           	line	#
  1822                           global btemp
  1823                           psect inittext,class=CODE,delta=2
  1824                           global init_fetch0,btemp
  1825                           ;	Called with low address in FSR and high address in W
  1826                           init_fetch0:
  1827  183D                     	movf btemp,w
  1828  183D  087E               	movwf pclath
  1829  183E  008A               	movf btemp+1,w
  1830  183F  087F               	movwf pc
  1831  1840  0082               global init_ram0
  1832                           ;Called with:
  1833                           ;	high address of idata address in btemp 
  1834                           ;	low address of idata address in btemp+1 
  1835                           ;	low address of data in FSR
  1836                           ;	high address + 1 of data in btemp-1
  1837                           init_ram0:
  1838  1841                     	fcall init_fetch0
  1839  1841  160A  158A  203D  160A  158A  	movwf indf,f
  1840  1846  0080               	incf fsr,f
  1841  1847  0A84               	movf fsr,w
  1842  1848  0804               	xorwf btemp-1,w
  1843  1849  067D               	btfsc status,2
  1844  184A  1903               	retlw 0
  1845  184B  3400               	incf btemp+1,f
  1846  184C  0AFF               	btfsc status,2
  1847  184D  1903               	incf btemp,f
  1848  184E  0AFE               	goto init_ram0
  1849  184F  2841               ; Initialize objects allocated to BANK3
  1850                           psect cinit,class=CODE,delta=2,merge=1
  1851                           global init_ram0, __pidataBANK3
  1852                           	bsf	status, 7	;select IRP bank2
  1853  07C6  1783               	movlw low(__pdataBANK3+66)
  1854  07C7  30D2               	movwf btemp-1,f
  1855  07C8  00FD               	movlw high(__pidataBANK3)
  1856  07C9  301C               	movwf btemp,f
  1857  07CA  00FE               	movlw low(__pidataBANK3)
  1858  07CB  3024               	movwf btemp+1,f
  1859  07CC  00FF               	movlw low(__pdataBANK3)
  1860  07CD  3090               	movwf fsr,f
  1861  07CE  0084               	fcall init_ram0
  1862  07CF  160A  158A  2041  120A  118A  ; Initialize objects allocated to BANK1
  1863                           psect cinit,class=CODE,delta=2,merge=1
  1864                           global init_ram0, __pidataBANK1
  1865                           	bcf	status, 7	;select IRP bank0
  1866  07D4  1383               	movlw low(__pdataBANK1+22)
  1867  07D5  30F0               	movwf btemp-1,f
  1868  07D6  00FD               	movlw high(__pidataBANK1)
  1869  07D7  3018               	movwf btemp,f
  1870  07D8  00FE               	movlw low(__pidataBANK1)
  1871  07D9  307A               	movwf btemp+1,f
  1872  07DA  00FF               	movlw low(__pdataBANK1)
  1873  07DB  30DA               	movwf fsr,f
  1874  07DC  0084               	fcall init_ram0
  1875  07DD  160A  158A  2041  120A  118A  	line	#
  1876                           psect clrtext,class=CODE,delta=2
  1877                           global clear_ram0
  1878                           ;	Called with FSR containing the base address, and
  1879                           ;	W with the last address+1
  1880                           clear_ram0:
  1881  1001                     	clrwdt			;clear the watchdog before getting into this loop
  1882  1001  0064               clrloop0:
  1883  1002                     	clrf	indf		;clear RAM location pointed to by FSR
  1884  1002  0180               	incf	fsr,f		;increment pointer
  1885  1003  0A84               	xorwf	fsr,w		;XOR with final address
  1886  1004  0604               	btfsc	status,2	;have we reached the end yet?
  1887  1005  1903               	retlw	0		;all done for this memory range, return
  1888  1006  3400               	xorwf	fsr,w		;XOR again to restore value
  1889  1007  0604               	goto	clrloop0		;do the next byte
  1890  1008  2802               
  1891                           ; Clear objects allocated to BANK3
  1892                           psect cinit,class=CODE,delta=2,merge=1
  1893                           	bsf	status, 7	;select IRP bank2
  1894  07E2  1783               	movlw	low(__pbssBANK3)
  1895  07E3  30D2               	movwf	fsr
  1896  07E4  0084               	movlw	low((__pbssBANK3)+012h)
  1897  07E5  30E4               	fcall	clear_ram0
  1898  07E6  160A  118A  2001  120A  118A  ; Clear objects allocated to BANK1
  1899                           psect cinit,class=CODE,delta=2,merge=1
  1900                           	bcf	status, 7	;select IRP bank0
  1901  07EB  1383               	movlw	low(__pbssBANK1)
  1902  07EC  30A0               	movwf	fsr
  1903  07ED  0084               	movlw	low((__pbssBANK1)+01Eh)
  1904  07EE  30BE               	fcall	clear_ram0
  1905  07EF  160A  118A  2001  120A  118A  ; Clear objects allocated to BANK0
  1906                           psect cinit,class=CODE,delta=2,merge=1
  1907                           	movlw	low(__pbssBANK0)
  1908  07F4  3061               	movwf	fsr
  1909  07F5  0084               	movlw	low((__pbssBANK0)+0Fh)
  1910  07F6  3070               	fcall	clear_ram0
  1911  07F7  160A  118A  2001  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1912                           global end_of_initialization,__end_of__initialization
  1913                           
  1914                           ;End of C runtime variable initialization code
  1915                           
  1916                           end_of_initialization:
  1917  07FC                     __end_of__initialization:
  1918  07FC                     clrf status
  1919  07FC  0183               ljmp _main	;jump to C main() function
  1920  07FD  120A  158A  2A8B   psect	cstackBANK1,class=BANK1,space=1,noexec
  1921                           global __pcstackBANK1
  1922                           __pcstackBANK1:
  1923  00BE                     	global	main@start_date
  1924                           main@start_date:	; 16 bytes @ 0x0
  1925  00BE                     	ds	16
  1926  00BE                     	global	main@tempdec
  1927                           main@tempdec:	; 2 bytes @ 0x10
  1928  00CE                     	ds	2
  1929  00CE                     	global	main@tempdectenth
  1930                           main@tempdectenth:	; 2 bytes @ 0x12
  1931  00D0                     	ds	2
  1932  00D0                     	global	main@temp
  1933                           main@temp:	; 2 bytes @ 0x14
  1934  00D2                     	ds	2
  1935  00D2                     	global	main@temp2
  1936                           main@temp2:	; 2 bytes @ 0x16
  1937  00D4                     	ds	2
  1938  00D4                     	global	main@temp3
  1939                           main@temp3:	; 2 bytes @ 0x18
  1940  00D6                     	ds	2
  1941  00D6                     	global	main@Key
  1942                           main@Key:	; 2 bytes @ 0x1A
  1943  00D8                     	ds	2
  1944  00D8                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1945                           global __pcstackCOMMON
  1946                           __pcstackCOMMON:
  1947  0070                     ?_Get_Temp:	; 1 bytes @ 0x0
  1948  0070                     ?_LCD_SendData:	; 1 bytes @ 0x0
  1949  0070                     ??_LCD_SendData:	; 1 bytes @ 0x0
  1950  0070                     ?_LCD_Busy:	; 1 bytes @ 0x0
  1951  0070                     ??_LCD_Busy:	; 1 bytes @ 0x0
  1952  0070                     ?_LCD_SecondLine:	; 1 bytes @ 0x0
  1953  0070                     ?_LCD_Command:	; 1 bytes @ 0x0
  1954  0070                     ??_LCD_Command:	; 1 bytes @ 0x0
  1955  0070                     ?_SoundOff:	; 1 bytes @ 0x0
  1956  0070                     ??_SoundOff:	; 1 bytes @ 0x0
  1957  0070                     ?_SoundOn:	; 1 bytes @ 0x0
  1958  0070                     ??_SoundOn:	; 1 bytes @ 0x0
  1959  0070                     ?_LCD_Init:	; 1 bytes @ 0x0
  1960  0070                     ??_LCD_Init:	; 1 bytes @ 0x0
  1961  0070                     ?_Init_Keypad:	; 1 bytes @ 0x0
  1962  0070                     ??_Init_Keypad:	; 1 bytes @ 0x0
  1963  0070                     ?_Thermometer_Init:	; 1 bytes @ 0x0
  1964  0070                     ??_Thermometer_Init:	; 1 bytes @ 0x0
  1965  0070                     ?_RealTimeClock_init:	; 1 bytes @ 0x0
  1966  0070                     ?_RealTimeClock_set_burst_time:	; 1 bytes @ 0x0
  1967  0070                     ?_Buzzer_Init:	; 1 bytes @ 0x0
  1968  0070                     ??_Buzzer_Init:	; 1 bytes @ 0x0
  1969  0070                     ?_Main_Delay:	; 1 bytes @ 0x0
  1970  0070                     ?_DisplayTime:	; 1 bytes @ 0x0
  1971  0070                     ?_DisplayDate:	; 1 bytes @ 0x0
  1972  0070                     ?_DisplayDay:	; 1 bytes @ 0x0
  1973  0070                     ?_DisplayTemp:	; 1 bytes @ 0x0
  1974  0070                     ?_MainScreen:	; 1 bytes @ 0x0
  1975  0070                     ?_ChangeTrigger:	; 1 bytes @ 0x0
  1976  0070                     ?_CheckDay:	; 1 bytes @ 0x0
  1977  0070                     ??_CheckDay:	; 1 bytes @ 0x0
  1978  0070                     ?_CheckTime:	; 1 bytes @ 0x0
  1979  0070                     ?_main:	; 1 bytes @ 0x0
  1980  0070                     ?_RealTimeClock_write_byte:	; 1 bytes @ 0x0
  1981  0070                     ??_RealTimeClock_write_byte:	; 1 bytes @ 0x0
  1982  0070                     ?_RealTimeClock_read_byte:	; 1 bytes @ 0x0
  1983  0070                     ??_RealTimeClock_read_byte:	; 1 bytes @ 0x0
  1984  0070                     ?_Key_Delay:	; 1 bytes @ 0x0
  1985  0070                     ?_Delay:	; 1 bytes @ 0x0
  1986  0070                     ?_Reset:	; 1 bytes @ 0x0
  1987  0070                     ?_Write_Byte:	; 1 bytes @ 0x0
  1988  0070                     ?_Read_Byte:	; 1 bytes @ 0x0
  1989  0070                     	global	?___wmul
  1990                           ?___wmul:	; 2 bytes @ 0x0
  1991  0070                     	global	?___awdiv
  1992                           ?___awdiv:	; 2 bytes @ 0x0
  1993  0070                     	global	?___awmod
  1994                           ?___awmod:	; 2 bytes @ 0x0
  1995  0070                     	global	?___lwmod
  1996                           ?___lwmod:	; 2 bytes @ 0x0
  1997  0070                     	global	LCD_Command@c
  1998                           LCD_Command@c:	; 1 bytes @ 0x0
  1999  0070                     	global	LCD_SendData@c
  2000                           LCD_SendData@c:	; 1 bytes @ 0x0
  2001  0070                     	global	Delay@y
  2002                           Delay@y:	; 1 bytes @ 0x0
  2003  0070                     	global	Main_Delay@k
  2004                           Main_Delay@k:	; 2 bytes @ 0x0
  2005  0070                     	global	Key_Delay@k
  2006                           Key_Delay@k:	; 2 bytes @ 0x0
  2007  0070                     	global	___wmul@multiplier
  2008                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2009  0070                     	global	___awdiv@divisor
  2010                           ___awdiv@divisor:	; 2 bytes @ 0x0
  2011  0070                     	global	___awmod@divisor
  2012                           ___awmod@divisor:	; 2 bytes @ 0x0
  2013  0070                     	global	___lwmod@divisor
  2014                           ___lwmod@divisor:	; 2 bytes @ 0x0
  2015  0070                     	ds	1
  2016  0070                     ?_LCD_SendString:	; 1 bytes @ 0x1
  2017  0071                     ??_LCD_SecondLine:	; 1 bytes @ 0x1
  2018  0071                     ??_Delay:	; 1 bytes @ 0x1
  2019  0071                     	global	LCD_SendString@string
  2020                           LCD_SendString@string:	; 2 bytes @ 0x1
  2021  0071                     	ds	1
  2022  0071                     ??_Main_Delay:	; 1 bytes @ 0x2
  2023  0072                     ??_Key_Delay:	; 1 bytes @ 0x2
  2024  0072                     	global	RealTimeClock_read_byte@time_rx
  2025                           RealTimeClock_read_byte@time_rx:	; 1 bytes @ 0x2
  2026  0072                     	global	Delay@x
  2027                           Delay@x:	; 1 bytes @ 0x2
  2028  0072                     	global	RealTimeClock_write_byte@i
  2029                           RealTimeClock_write_byte@i:	; 2 bytes @ 0x2
  2030  0072                     	global	Key_Delay@i
  2031                           Key_Delay@i:	; 2 bytes @ 0x2
  2032  0072                     	global	___wmul@multiplicand
  2033                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2034  0072                     	global	___awdiv@dividend
  2035                           ___awdiv@dividend:	; 2 bytes @ 0x2
  2036  0072                     	global	___awmod@dividend
  2037                           ___awmod@dividend:	; 2 bytes @ 0x2
  2038  0072                     	global	___lwmod@dividend
  2039                           ___lwmod@dividend:	; 2 bytes @ 0x2
  2040  0072                     	ds	1
  2041  0072                     ??_LCD_SendString:	; 1 bytes @ 0x3
  2042  0073                     	global	Delay@z
  2043                           Delay@z:	; 1 bytes @ 0x3
  2044  0073                     	global	Main_Delay@i
  2045                           Main_Delay@i:	; 2 bytes @ 0x3
  2046  0073                     	global	RealTimeClock_read_byte@i
  2047                           RealTimeClock_read_byte@i:	; 2 bytes @ 0x3
  2048  0073                     	ds	1
  2049  0073                     ??_Reset:	; 1 bytes @ 0x4
  2050  0074                     ??_Write_Byte:	; 1 bytes @ 0x4
  2051  0074                     ??_Read_Byte:	; 1 bytes @ 0x4
  2052  0074                     ??___wmul:	; 1 bytes @ 0x4
  2053  0074                     ??___awdiv:	; 1 bytes @ 0x4
  2054  0074                     ??___awmod:	; 1 bytes @ 0x4
  2055  0074                     ??___lwmod:	; 1 bytes @ 0x4
  2056  0074                     	global	RealTimeClock_write_byte@time_tx
  2057                           RealTimeClock_write_byte@time_tx:	; 1 bytes @ 0x4
  2058  0074                     	global	Key_Delay@j
  2059                           Key_Delay@j:	; 2 bytes @ 0x4
  2060  0074                     	global	___wmul@product
  2061                           ___wmul@product:	; 2 bytes @ 0x4
  2062  0074                     	ds	1
  2063  0074                     ??_RealTimeClock_init:	; 1 bytes @ 0x5
  2064  0075                     	global	Read_Byte@value
  2065                           Read_Byte@value:	; 1 bytes @ 0x5
  2066  0075                     	global	___awdiv@counter
  2067                           ___awdiv@counter:	; 1 bytes @ 0x5
  2068  0075                     	global	___awmod@counter
  2069                           ___awmod@counter:	; 1 bytes @ 0x5
  2070  0075                     	global	___lwmod@counter
  2071                           ___lwmod@counter:	; 1 bytes @ 0x5
  2072  0075                     	global	Main_Delay@j
  2073                           Main_Delay@j:	; 2 bytes @ 0x5
  2074  0075                     	global	Reset@i
  2075                           Reset@i:	; 2 bytes @ 0x5
  2076  0075                     	ds	1
  2077  0075                     	global	?_Keypad_Scan
  2078                           ?_Keypad_Scan:	; 2 bytes @ 0x6
  2079  0076                     	global	?___lwdiv
  2080                           ?___lwdiv:	; 2 bytes @ 0x6
  2081  0076                     	global	Write_Byte@temp
  2082                           Write_Byte@temp:	; 1 bytes @ 0x6
  2083  0076                     	global	Read_Byte@i
  2084                           Read_Byte@i:	; 1 bytes @ 0x6
  2085  0076                     	global	___awdiv@sign
  2086                           ___awdiv@sign:	; 1 bytes @ 0x6
  2087  0076                     	global	___awmod@sign
  2088                           ___awmod@sign:	; 1 bytes @ 0x6
  2089  0076                     	global	LCD_SendString@i
  2090                           LCD_SendString@i:	; 2 bytes @ 0x6
  2091  0076                     	global	___lwdiv@divisor
  2092                           ___lwdiv@divisor:	; 2 bytes @ 0x6
  2093  0076                     	ds	1
  2094  0076                     ?___int_to_hex:	; 1 bytes @ 0x7
  2095  0077                     	global	?___hex_to_int
  2096                           ?___hex_to_int:	; 2 bytes @ 0x7
  2097  0077                     	global	Write_Byte@val
  2098                           Write_Byte@val:	; 1 bytes @ 0x7
  2099  0077                     	global	___int_to_hex@integer
  2100                           ___int_to_hex@integer:	; 2 bytes @ 0x7
  2101  0077                     	global	___awdiv@quotient
  2102                           ___awdiv@quotient:	; 2 bytes @ 0x7
  2103  0077                     	ds	1
  2104  0077                     ??_Keypad_Scan:	; 1 bytes @ 0x8
  2105  0078                     ?_SwapToHeatingDisplay:	; 1 bytes @ 0x8
  2106  0078                     ?_Switch24Hour:	; 1 bytes @ 0x8
  2107  0078                     	global	Write_Byte@i
  2108                           Write_Byte@i:	; 1 bytes @ 0x8
  2109  0078                     	global	SwapToHeatingDisplay@Key
  2110                           SwapToHeatingDisplay@Key:	; 2 bytes @ 0x8
  2111  0078                     	global	Switch24Hour@Key
  2112                           Switch24Hour@Key:	; 2 bytes @ 0x8
  2113  0078                     	global	___lwdiv@dividend
  2114                           ___lwdiv@dividend:	; 2 bytes @ 0x8
  2115  0078                     	ds	1
  2116  0078                     ??___hex_to_int:	; 1 bytes @ 0x9
  2117  0079                     ??___int_to_hex:	; 1 bytes @ 0x9
  2118  0079                     	ds	1
  2119  0079                     ??_RealTimeClock_get_seconds:	; 1 bytes @ 0xA
  2120  007A                     ??_RealTimeClock_get_minutes:	; 1 bytes @ 0xA
  2121  007A                     ??_RealTimeClock_get_hours:	; 1 bytes @ 0xA
  2122  007A                     ??_RealTimeClock_get_month:	; 1 bytes @ 0xA
  2123  007A                     ??_RealTimeClock_get_day_of_month:	; 1 bytes @ 0xA
  2124  007A                     ??_RealTimeClock_get_year:	; 1 bytes @ 0xA
  2125  007A                     ??_RealTimeClock_get_day_of_week:	; 1 bytes @ 0xA
  2126  007A                     ??_SwapToHeatingDisplay:	; 1 bytes @ 0xA
  2127  007A                     ??_Switch24Hour:	; 1 bytes @ 0xA
  2128  007A                     ??___lwdiv:	; 1 bytes @ 0xA
  2129  007A                     	global	___int_to_hex@t
  2130                           ___int_to_hex@t:	; 2 bytes @ 0xA
  2131  007A                     	ds	1
  2132  007A                     	global	SwapToHeatingDisplay@Heat
  2133                           SwapToHeatingDisplay@Heat:	; 1 bytes @ 0xB
  2134  007B                     	global	Switch24Hour@c
  2135                           Switch24Hour@c:	; 1 bytes @ 0xB
  2136  007B                     	global	RealTimeClock_get_seconds@c
  2137                           RealTimeClock_get_seconds@c:	; 1 bytes @ 0xB
  2138  007B                     	global	RealTimeClock_get_minutes@c
  2139                           RealTimeClock_get_minutes@c:	; 1 bytes @ 0xB
  2140  007B                     	global	RealTimeClock_get_hours@c
  2141                           RealTimeClock_get_hours@c:	; 1 bytes @ 0xB
  2142  007B                     	global	RealTimeClock_get_day_of_month@c
  2143                           RealTimeClock_get_day_of_month@c:	; 1 bytes @ 0xB
  2144  007B                     	global	RealTimeClock_get_month@c
  2145                           RealTimeClock_get_month@c:	; 1 bytes @ 0xB
  2146  007B                     	global	RealTimeClock_get_day_of_week@c
  2147                           RealTimeClock_get_day_of_week@c:	; 1 bytes @ 0xB
  2148  007B                     	global	RealTimeClock_get_year@c
  2149                           RealTimeClock_get_year@c:	; 1 bytes @ 0xB
  2150  007B                     	global	___lwdiv@quotient
  2151                           ___lwdiv@quotient:	; 2 bytes @ 0xB
  2152  007B                     	ds	1
  2153  007B                     ??_DisplayTime:	; 1 bytes @ 0xC
  2154  007C                     ??_DisplayDate:	; 1 bytes @ 0xC
  2155  007C                     ??_DisplayDay:	; 1 bytes @ 0xC
  2156  007C                     ??_CheckTime:	; 1 bytes @ 0xC
  2157  007C                     	global	SwapToHeatingDisplay@On
  2158                           SwapToHeatingDisplay@On:	; 1 bytes @ 0xC
  2159  007C                     	global	___int_to_hex@i
  2160                           ___int_to_hex@i:	; 2 bytes @ 0xC
  2161  007C                     	ds	1
  2162  007C                     	global	SwapToHeatingDisplay@Off
  2163                           SwapToHeatingDisplay@Off:	; 1 bytes @ 0xD
  2164  007D                     	global	___lwdiv@counter
  2165                           ___lwdiv@counter:	; 1 bytes @ 0xD
  2166  007D                     	ds	1
  2167  007D                     ??_RealTimeClock_set_hours:	; 1 bytes @ 0xE
  2168  007E                     ??_RealTimeClock_set_minutes:	; 1 bytes @ 0xE
  2169  007E                     ??_RealTimeClock_set_seconds:	; 1 bytes @ 0xE
  2170  007E                     ??_RealTimeClock_set_year:	; 1 bytes @ 0xE
  2171  007E                     ??_RealTimeClock_set_month:	; 1 bytes @ 0xE
  2172  007E                     ??_RealTimeClock_set_day_of_month:	; 1 bytes @ 0xE
  2173  007E                     ??_RealTimeClock_set_day_of_week:	; 1 bytes @ 0xE
  2174  007E                     ??_DisplayTemp:	; 1 bytes @ 0xE
  2175  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2176                           global __pcstackBANK0
  2177                           __pcstackBANK0:
  2178  0020                     ??_Get_Temp:	; 1 bytes @ 0x0
  2179  0020                     ?_RealTimeClock_set_hours:	; 1 bytes @ 0x0
  2180  0020                     ?_RealTimeClock_set_minutes:	; 1 bytes @ 0x0
  2181  0020                     ?_RealTimeClock_set_seconds:	; 1 bytes @ 0x0
  2182  0020                     ?_RealTimeClock_set_year:	; 1 bytes @ 0x0
  2183  0020                     ?_RealTimeClock_set_month:	; 1 bytes @ 0x0
  2184  0020                     ?_RealTimeClock_set_day_of_month:	; 1 bytes @ 0x0
  2185  0020                     ?_RealTimeClock_set_day_of_week:	; 1 bytes @ 0x0
  2186  0020                     ??_RealTimeClock_set_burst_time:	; 1 bytes @ 0x0
  2187  0020                     ??_ChangeTrigger:	; 1 bytes @ 0x0
  2188  0020                     	global	___hex_to_int@hex
  2189                           ___hex_to_int@hex:	; 1 bytes @ 0x0
  2190  0020                     	global	RealTimeClock_set_seconds@seconds
  2191                           RealTimeClock_set_seconds@seconds:	; 2 bytes @ 0x0
  2192  0020                     	global	RealTimeClock_set_minutes@minutes
  2193                           RealTimeClock_set_minutes@minutes:	; 2 bytes @ 0x0
  2194  0020                     	global	RealTimeClock_set_hours@hours
  2195                           RealTimeClock_set_hours@hours:	; 2 bytes @ 0x0
  2196  0020                     	global	RealTimeClock_set_day_of_month@month
  2197                           RealTimeClock_set_day_of_month@month:	; 2 bytes @ 0x0
  2198  0020                     	global	RealTimeClock_set_month@month
  2199                           RealTimeClock_set_month@month:	; 2 bytes @ 0x0
  2200  0020                     	global	RealTimeClock_set_day_of_week@day
  2201                           RealTimeClock_set_day_of_week@day:	; 2 bytes @ 0x0
  2202  0020                     	global	RealTimeClock_set_year@year
  2203                           RealTimeClock_set_year@year:	; 2 bytes @ 0x0
  2204  0020                     	ds	1
  2205  0020                     	global	___hex_to_int@i
  2206                           ___hex_to_int@i:	; 2 bytes @ 0x1
  2207  0021                     	ds	1
  2208  0021                     	global	RealTimeClock_set_burst_time@time
  2209                           RealTimeClock_set_burst_time@time:	; 1 bytes @ 0x2
  2210  0022                     	ds	1
  2211  0022                     	global	___hex_to_int@t
  2212                           ___hex_to_int@t:	; 2 bytes @ 0x3
  2213  0023                     	global	RealTimeClock_set_burst_time@i
  2214                           RealTimeClock_set_burst_time@i:	; 2 bytes @ 0x3
  2215  0023                     	ds	1
  2216  0023                     	global	Get_Temp@buffer
  2217                           Get_Temp@buffer:	; 1 bytes @ 0x4
  2218  0024                     	ds	1
  2219  0024                     	global	?_RealTimeClock_get_seconds
  2220                           ?_RealTimeClock_get_seconds:	; 2 bytes @ 0x5
  2221  0025                     	global	?_RealTimeClock_get_minutes
  2222                           ?_RealTimeClock_get_minutes:	; 2 bytes @ 0x5
  2223  0025                     	global	?_RealTimeClock_get_hours
  2224                           ?_RealTimeClock_get_hours:	; 2 bytes @ 0x5
  2225  0025                     	global	?_RealTimeClock_get_month
  2226                           ?_RealTimeClock_get_month:	; 2 bytes @ 0x5
  2227  0025                     	global	?_RealTimeClock_get_day_of_month
  2228                           ?_RealTimeClock_get_day_of_month:	; 2 bytes @ 0x5
  2229  0025                     	global	?_RealTimeClock_get_year
  2230                           ?_RealTimeClock_get_year:	; 2 bytes @ 0x5
  2231  0025                     	global	?_RealTimeClock_get_day_of_week
  2232                           ?_RealTimeClock_get_day_of_week:	; 2 bytes @ 0x5
  2233  0025                     	global	Get_Temp@i
  2234                           Get_Temp@i:	; 2 bytes @ 0x5
  2235  0025                     	ds	1
  2236  0025                     	global	ChangeTrigger@triggerTempChange
  2237                           ChangeTrigger@triggerTempChange:	; 4 bytes @ 0x6
  2238  0026                     	ds	1
  2239  0026                     ?_SetTime:	; 1 bytes @ 0x7
  2240  0027                     ?_SetDate:	; 1 bytes @ 0x7
  2241  0027                     	global	DisplayDay@Monday
  2242                           DisplayDay@Monday:	; 1 bytes @ 0x7
  2243  0027                     	global	DisplayTemp@tempBuffer
  2244                           DisplayTemp@tempBuffer:	; 1 bytes @ 0x7
  2245  0027                     	global	SetTime@Key
  2246                           SetTime@Key:	; 2 bytes @ 0x7
  2247  0027                     	global	SetDate@Key
  2248                           SetDate@Key:	; 2 bytes @ 0x7
  2249  0027                     	ds	1
  2250  0027                     ??_MainScreen:	; 1 bytes @ 0x8
  2251  0028                     	global	DisplayDay@Tuesday
  2252                           DisplayDay@Tuesday:	; 1 bytes @ 0x8
  2253  0028                     	ds	1
  2254  0028                     ??_SetTime:	; 1 bytes @ 0x9
  2255  0029                     ??_SetDate:	; 1 bytes @ 0x9
  2256  0029                     	global	DisplayDay@Wednesday
  2257                           DisplayDay@Wednesday:	; 1 bytes @ 0x9
  2258  0029                     	global	MainScreen@Time
  2259                           MainScreen@Time:	; 1 bytes @ 0x9
  2260  0029                     	ds	1
  2261  0029                     	global	DisplayDay@Thursday
  2262                           DisplayDay@Thursday:	; 1 bytes @ 0xA
  2263  002A                     	global	MainScreen@Temp
  2264                           MainScreen@Temp:	; 1 bytes @ 0xA
  2265  002A                     	global	ChangeTrigger@digits
  2266                           ChangeTrigger@digits:	; 3 bytes @ 0xA
  2267  002A                     	ds	1
  2268  002A                     	global	DisplayDay@Friday
  2269                           DisplayDay@Friday:	; 1 bytes @ 0xB
  2270  002B                     	ds	1
  2271  002B                     	global	DisplayDay@Saturday
  2272                           DisplayDay@Saturday:	; 1 bytes @ 0xC
  2273  002C                     	ds	1
  2274  002C                     	global	DisplayDay@Sunday
  2275                           DisplayDay@Sunday:	; 1 bytes @ 0xD
  2276  002D                     	global	ChangeTrigger@Trigger
  2277                           ChangeTrigger@Trigger:	; 1 bytes @ 0xD
  2278  002D                     	ds	1
  2279  002D                     	global	ChangeTrigger@TriggerSet
  2280                           ChangeTrigger@TriggerSet:	; 1 bytes @ 0xE
  2281  002E                     	ds	1
  2282  002E                     	global	ChangeTrigger@decimal
  2283                           ChangeTrigger@decimal:	; 1 bytes @ 0xF
  2284  002F                     	global	SetTime@digits
  2285                           SetTime@digits:	; 9 bytes @ 0xF
  2286  002F                     	global	SetDate@Date
  2287                           SetDate@Date:	; 9 bytes @ 0xF
  2288  002F                     	ds	1
  2289  002F                     	global	ChangeTrigger@Key
  2290                           ChangeTrigger@Key:	; 1 bytes @ 0x10
  2291  0030                     	ds	1
  2292  0030                     	global	ChangeTrigger@i_214
  2293                           ChangeTrigger@i_214:	; 2 bytes @ 0x11
  2294  0031                     	ds	2
  2295  0031                     	global	ChangeTrigger@i
  2296                           ChangeTrigger@i:	; 2 bytes @ 0x13
  2297  0033                     	ds	2
  2298  0033                     ?_DateDayScreen:	; 1 bytes @ 0x15
  2299  0035                     	global	DateDayScreen@Key
  2300                           DateDayScreen@Key:	; 2 bytes @ 0x15
  2301  0035                     	ds	2
  2302  0035                     ??_DateDayScreen:	; 1 bytes @ 0x17
  2303  0037                     	ds	1
  2304  0037                     	global	DateDayScreen@date
  2305                           DateDayScreen@date:	; 1 bytes @ 0x18
  2306  0038                     	global	SetTime@Time
  2307                           SetTime@Time:	; 1 bytes @ 0x18
  2308  0038                     	global	SetDate@feb
  2309                           SetDate@feb:	; 2 bytes @ 0x18
  2310  0038                     	ds	1
  2311  0038                     	global	DateDayScreen@DayDis
  2312                           DateDayScreen@DayDis:	; 1 bytes @ 0x19
  2313  0039                     	global	SetTime@TimeSet
  2314                           SetTime@TimeSet:	; 1 bytes @ 0x19
  2315  0039                     	ds	1
  2316  0039                     	global	SetDate@DateDis
  2317                           SetDate@DateDis:	; 1 bytes @ 0x1A
  2318  003A                     	global	SetTime@setTime
  2319                           SetTime@setTime:	; 6 bytes @ 0x1A
  2320  003A                     	ds	1
  2321  003A                     	global	SetDate@DateSet
  2322                           SetDate@DateSet:	; 1 bytes @ 0x1B
  2323  003B                     	ds	1
  2324  003B                     	global	SetDate@thirty
  2325                           SetDate@thirty:	; 2 bytes @ 0x1C
  2326  003C                     	ds	2
  2327  003C                     	global	SetDate@thirtyOne
  2328                           SetDate@thirtyOne:	; 2 bytes @ 0x1E
  2329  003E                     	ds	2
  2330  003E                     	global	SetTime@i
  2331                           SetTime@i:	; 2 bytes @ 0x20
  2332  0040                     	global	SetDate@dateArray
  2333                           SetDate@dateArray:	; 6 bytes @ 0x20
  2334  0040                     	ds	6
  2335  0040                     	global	SetDate@i
  2336                           SetDate@i:	; 2 bytes @ 0x26
  2337  0046                     	ds	2
  2338  0046                     ?_HeatingControlOff:	; 1 bytes @ 0x28
  2339  0048                     	global	HeatingControlOff@Key
  2340                           HeatingControlOff@Key:	; 2 bytes @ 0x28
  2341  0048                     	ds	2
  2342  0048                     	global	HeatingControlOff@temp
  2343                           HeatingControlOff@temp:	; 2 bytes @ 0x2A
  2344  004A                     	ds	2
  2345  004A                     	global	HeatingControlOff@temp2
  2346                           HeatingControlOff@temp2:	; 2 bytes @ 0x2C
  2347  004C                     	ds	2
  2348  004C                     	global	HeatingControlOff@temp3
  2349                           HeatingControlOff@temp3:	; 2 bytes @ 0x2E
  2350  004E                     	ds	2
  2351  004E                     ??_HeatingControlOff:	; 1 bytes @ 0x30
  2352  0050                     	ds	1
  2353  0050                     	global	HeatingControlOff@Off
  2354                           HeatingControlOff@Off:	; 1 bytes @ 0x31
  2355  0051                     	ds	1
  2356  0051                     	global	HeatingControlOff@On
  2357                           HeatingControlOff@On:	; 1 bytes @ 0x32
  2358  0052                     	ds	1
  2359  0052                     ?_SoundAlarm:	; 1 bytes @ 0x33
  2360  0053                     	global	SoundAlarm@Key
  2361                           SoundAlarm@Key:	; 2 bytes @ 0x33
  2362  0053                     	ds	2
  2363  0053                     	global	SoundAlarm@temp
  2364                           SoundAlarm@temp:	; 2 bytes @ 0x35
  2365  0055                     	ds	2
  2366  0055                     	global	SoundAlarm@temp2
  2367                           SoundAlarm@temp2:	; 2 bytes @ 0x37
  2368  0057                     	ds	2
  2369  0057                     	global	SoundAlarm@temp3
  2370                           SoundAlarm@temp3:	; 2 bytes @ 0x39
  2371  0059                     	ds	2
  2372  0059                     ??_SoundAlarm:	; 1 bytes @ 0x3B
  2373  005B                     	ds	1
  2374  005B                     	global	SoundAlarm@Alarm
  2375                           SoundAlarm@Alarm:	; 1 bytes @ 0x3C
  2376  005C                     	ds	1
  2377  005C                     ??_main:	; 1 bytes @ 0x3D
  2378  005D                     	ds	4
  2379  005D                     ;!
  2380                           ;!Data Sizes:
  2381                           ;!    Strings     193
  2382                           ;!    Constant    0
  2383                           ;!    Data        88
  2384                           ;!    BSS         63
  2385                           ;!    Persistent  0
  2386                           ;!    Stack       0
  2387                           ;!
  2388                           ;!Auto Spaces:
  2389                           ;!    Space          Size  Autos    Used
  2390                           ;!    COMMON           14     14      14
  2391                           ;!    BANK0            80     65      80
  2392                           ;!    BANK1            80     28      80
  2393                           ;!    BANK3            96      0      84
  2394                           ;!    BANK2            96      0       0
  2395                           
  2396                           ;!
  2397                           ;!Pointer List with Targets:
  2398                           ;!
  2399                           ;!    timeBuffer	PTR int  size(1) Largest target is 0
  2400                           ;!		 -> NULL(NULL[0]), 
  2401                           ;!
  2402                           ;!    Get_Temp@buffer	PTR unsigned char  size(1) Largest target is 6
  2403                           ;!		 -> tempBuffer(BANK1[6]), 
  2404                           ;!
  2405                           ;!    LCD_SendString@string	PTR const unsigned char  size(2) Largest target is 16
  2406                           ;!		 -> STR_24(CODE[16]), STR_23(CODE[11]), STR_22(CODE[12]), SetDate@Date(BANK0[9]), 
  2407                           ;!		 -> STR_21(CODE[13]), STR_20(CODE[6]), SetTime@digits(BANK0[9]), STR_19(CODE[9]), 
  2408                           ;!		 -> STR_18(CODE[6]), STR_17(CODE[6]), STR_16(CODE[7]), STR_15(CODE[14]), 
  2409                           ;!		 -> STR_14(CODE[4]), STR_13(CODE[3]), STR_12(CODE[9]), ChangeTrigger@digits(BANK0[3]
                                 ), 
  2410                           ;!		 -> STR_11(CODE[12]), STR_10(CODE[9]), tempBuffer(BANK1[6]), STR_9(CODE[6]), 
  2411                           ;!		 -> STR_8(CODE[6]), STR_7(CODE[7]), STR_6(CODE[9]), STR_5(CODE[7]), 
  2412                           ;!		 -> STR_4(CODE[9]), STR_3(CODE[10]), STR_2(CODE[8]), STR_1(CODE[7]), 
  2413                           ;!		 -> dateDisplayer(BANK3[9]), timeDisplayer(BANK3[9]), 
  2414                           ;!
  2415                           ;!    sp__RealTimeClock_get_burst_time	PTR int  size(1) Largest target is 14
  2416                           ;!		 -> __RealTimeClock_buff(BANK3[14]), 
  2417                           ;!
  2418                           ;!    RealTimeClock_set_burst_time@time	PTR int  size(1) Largest target is 16
  2419                           ;!		 -> main@start_date(BANK1[16]), 
  2420                           ;!
  2421                           ;!    SoundAlarm@Alarm	PTR unsigned char  size(1) Largest target is 16
  2422                           ;!		 -> STR_24(CODE[16]), 
  2423                           ;!
  2424                           ;!    HeatingControlOff@On	PTR unsigned char  size(1) Largest target is 11
  2425                           ;!		 -> STR_23(CODE[11]), 
  2426                           ;!
  2427                           ;!    HeatingControlOff@Off	PTR unsigned char  size(1) Largest target is 12
  2428                           ;!		 -> STR_22(CODE[12]), 
  2429                           ;!
  2430                           ;!    SetDate@DateSet	PTR unsigned char  size(1) Largest target is 13
  2431                           ;!		 -> STR_21(CODE[13]), 
  2432                           ;!
  2433                           ;!    SetDate@DateDis	PTR unsigned char  size(1) Largest target is 6
  2434                           ;!		 -> STR_20(CODE[6]), 
  2435                           ;!
  2436                           ;!    SetTime@TimeSet	PTR unsigned char  size(1) Largest target is 9
  2437                           ;!		 -> STR_19(CODE[9]), 
  2438                           ;!
  2439                           ;!    SetTime@Time	PTR unsigned char  size(1) Largest target is 6
  2440                           ;!		 -> STR_18(CODE[6]), 
  2441                           ;!
  2442                           ;!    DateDayScreen@DayDis	PTR unsigned char  size(1) Largest target is 6
  2443                           ;!		 -> STR_17(CODE[6]), 
  2444                           ;!
  2445                           ;!    DateDayScreen@date	PTR unsigned char  size(1) Largest target is 7
  2446                           ;!		 -> STR_16(CODE[7]), 
  2447                           ;!
  2448                           ;!    Switch24Hour@c	PTR unsigned char  size(1) Largest target is 14
  2449                           ;!		 -> STR_15(CODE[14]), 
  2450                           ;!
  2451                           ;!    SwapToHeatingDisplay@Off	PTR unsigned char  size(1) Largest target is 4
  2452                           ;!		 -> STR_14(CODE[4]), 
  2453                           ;!
  2454                           ;!    SwapToHeatingDisplay@On	PTR unsigned char  size(1) Largest target is 3
  2455                           ;!		 -> STR_13(CODE[3]), 
  2456                           ;!
  2457                           ;!    SwapToHeatingDisplay@Heat	PTR unsigned char  size(1) Largest target is 9
  2458                           ;!		 -> STR_12(CODE[9]), 
  2459                           ;!
  2460                           ;!    ChangeTrigger@TriggerSet	PTR unsigned char  size(1) Largest target is 12
  2461                           ;!		 -> STR_11(CODE[12]), 
  2462                           ;!
  2463                           ;!    ChangeTrigger@Trigger	PTR unsigned char  size(1) Largest target is 9
  2464                           ;!		 -> STR_10(CODE[9]), 
  2465                           ;!
  2466                           ;!    MainScreen@Temp	PTR unsigned char  size(1) Largest target is 6
  2467                           ;!		 -> STR_9(CODE[6]), 
  2468                           ;!
  2469                           ;!    MainScreen@Time	PTR unsigned char  size(1) Largest target is 6
  2470                           ;!		 -> STR_8(CODE[6]), 
  2471                           ;!
  2472                           ;!    DisplayTemp@tempBuffer	PTR unsigned char  size(1) Largest target is 6
  2473                           ;!		 -> tempBuffer(BANK1[6]), 
  2474                           ;!
  2475                           ;!    DisplayDay@Sunday	PTR unsigned char  size(1) Largest target is 7
  2476                           ;!		 -> STR_7(CODE[7]), 
  2477                           ;!
  2478                           ;!    DisplayDay@Saturday	PTR unsigned char  size(1) Largest target is 9
  2479                           ;!		 -> STR_6(CODE[9]), 
  2480                           ;!
  2481                           ;!    DisplayDay@Friday	PTR unsigned char  size(1) Largest target is 7
  2482                           ;!		 -> STR_5(CODE[7]), 
  2483                           ;!
  2484                           ;!    DisplayDay@Thursday	PTR unsigned char  size(1) Largest target is 9
  2485                           ;!		 -> STR_4(CODE[9]), 
  2486                           ;!
  2487                           ;!    DisplayDay@Wednesday	PTR unsigned char  size(1) Largest target is 10
  2488                           ;!		 -> STR_3(CODE[10]), 
  2489                           ;!
  2490                           ;!    DisplayDay@Tuesday	PTR unsigned char  size(1) Largest target is 8
  2491                           ;!		 -> STR_2(CODE[8]), 
  2492                           ;!
  2493                           ;!    DisplayDay@Monday	PTR unsigned char  size(1) Largest target is 7
  2494                           ;!		 -> STR_1(CODE[7]), 
  2495                           ;!
  2496                           
  2497                           
  2498                           ;!
  2499                           ;!Critical Paths under _main in COMMON
  2500                           ;!
  2501                           ;!    _main->_SwapToHeatingDisplay
  2502                           ;!    _SoundAlarm->_SwapToHeatingDisplay
  2503                           ;!    _HeatingControlOff->_SwapToHeatingDisplay
  2504                           ;!    _Switch24Hour->_LCD_SendString
  2505                           ;!    _RealTimeClock_set_seconds->___int_to_hex
  2506                           ;!    _RealTimeClock_set_minutes->___int_to_hex
  2507                           ;!    _RealTimeClock_set_hours->___int_to_hex
  2508                           ;!    _RealTimeClock_set_year->___int_to_hex
  2509                           ;!    _RealTimeClock_set_month->___int_to_hex
  2510                           ;!    _RealTimeClock_set_day_of_week->___int_to_hex
  2511                           ;!    _RealTimeClock_set_day_of_month->___int_to_hex
  2512                           ;!    _DisplayTime->_RealTimeClock_get_hours
  2513                           ;!    _DisplayTime->_RealTimeClock_get_minutes
  2514                           ;!    _DisplayTime->_RealTimeClock_get_seconds
  2515                           ;!    _RealTimeClock_get_seconds->___hex_to_int
  2516                           ;!    _Get_Temp->___lwdiv
  2517                           ;!    ___lwdiv->___lwmod
  2518                           ;!    _Write_Byte->_Delay
  2519                           ;!    _Reset->_Delay
  2520                           ;!    _Read_Byte->_Delay
  2521                           ;!    _DateDayScreen->_SwapToHeatingDisplay
  2522                           ;!    _SwapToHeatingDisplay->_Keypad_Scan
  2523                           ;!    _SwapToHeatingDisplay->_LCD_SendString
  2524                           ;!    _LCD_SecondLine->_LCD_Command
  2525                           ;!    _DisplayDay->_RealTimeClock_get_day_of_week
  2526                           ;!    _RealTimeClock_get_day_of_week->___hex_to_int
  2527                           ;!    _DisplayDate->_RealTimeClock_get_day_of_month
  2528                           ;!    _DisplayDate->_RealTimeClock_get_month
  2529                           ;!    _DisplayDate->_RealTimeClock_get_year
  2530                           ;!    _RealTimeClock_get_year->___hex_to_int
  2531                           ;!    _RealTimeClock_get_month->___hex_to_int
  2532                           ;!    _RealTimeClock_get_day_of_month->___hex_to_int
  2533                           ;!    _ChangeTrigger->___awdiv
  2534                           ;!    _LCD_SendString->_LCD_SendData
  2535                           ;!    _Keypad_Scan->_Key_Delay
  2536                           ;!    _RealTimeClock_set_burst_time->___int_to_hex
  2537                           ;!    ___int_to_hex->___awmod
  2538                           ;!    _RealTimeClock_init->_RealTimeClock_write_byte
  2539                           ;!    _CheckTime->_RealTimeClock_get_hours
  2540                           ;!    _CheckTime->_RealTimeClock_get_minutes
  2541                           ;!    _RealTimeClock_get_minutes->___hex_to_int
  2542                           ;!    _RealTimeClock_get_hours->___hex_to_int
  2543                           ;!    ___hex_to_int->___awmod
  2544                           ;!
  2545                           ;!Critical Paths under _main in BANK0
  2546                           ;!
  2547                           ;!    _main->_SoundAlarm
  2548                           ;!    _SoundAlarm->_HeatingControlOff
  2549                           ;!    _HeatingControlOff->_SetDate
  2550                           ;!    _SetTime->_RealTimeClock_get_hours
  2551                           ;!    _SetTime->_RealTimeClock_get_minutes
  2552                           ;!    _SetTime->_RealTimeClock_get_seconds
  2553                           ;!    _SetDate->_RealTimeClock_get_day_of_month
  2554                           ;!    _SetDate->_RealTimeClock_get_month
  2555                           ;!    _SetDate->_RealTimeClock_get_year
  2556                           ;!    _MainScreen->_DisplayTemp
  2557                           ;!    _DisplayTime->_RealTimeClock_get_hours
  2558                           ;!    _DisplayTime->_RealTimeClock_get_minutes
  2559                           ;!    _DisplayTime->_RealTimeClock_get_seconds
  2560                           ;!    _RealTimeClock_get_seconds->___hex_to_int
  2561                           ;!    _DisplayTemp->_Get_Temp
  2562                           ;!    _DateDayScreen->_ChangeTrigger
  2563                           ;!    _DisplayDay->_RealTimeClock_get_day_of_week
  2564                           ;!    _RealTimeClock_get_day_of_week->___hex_to_int
  2565                           ;!    _DisplayDate->_RealTimeClock_get_day_of_month
  2566                           ;!    _DisplayDate->_RealTimeClock_get_month
  2567                           ;!    _DisplayDate->_RealTimeClock_get_year
  2568                           ;!    _RealTimeClock_get_year->___hex_to_int
  2569                           ;!    _RealTimeClock_get_month->___hex_to_int
  2570                           ;!    _RealTimeClock_get_day_of_month->___hex_to_int
  2571                           ;!    _CheckTime->_RealTimeClock_get_hours
  2572                           ;!    _CheckTime->_RealTimeClock_get_minutes
  2573                           ;!    _RealTimeClock_get_minutes->___hex_to_int
  2574                           ;!    _RealTimeClock_get_hours->___hex_to_int
  2575                           ;!
  2576                           ;!Critical Paths under _main in BANK1
  2577                           ;!
  2578                           ;!    None.
  2579                           ;!
  2580                           ;!Critical Paths under _main in BANK3
  2581                           ;!
  2582                           ;!    None.
  2583                           ;!
  2584                           ;!Critical Paths under _main in BANK2
  2585                           ;!
  2586                           ;!    None.
  2587                           
  2588 ;;
  2589 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2590 ;;
  2591                           
  2592                           ;!
  2593                           ;!Call Graph Tables:
  2594                           ;!
  2595                           ;! ---------------------------------------------------------------------------------
  2596                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2597                           ;! ---------------------------------------------------------------------------------
  2598                           ;! (0) _main                                                32    32      0  867550
  2599                           ;!                                             61 BANK0      4     4      0
  2600                           ;!                                              0 BANK1     28    28      0
  2601                           ;!                        _Buzzer_Init
  2602                           ;!                      _ChangeTrigger
  2603                           ;!                           _CheckDay
  2604                           ;!                          _CheckTime
  2605                           ;!                      _DateDayScreen
  2606                           ;!                  _HeatingControlOff
  2607                           ;!                        _Init_Keypad
  2608                           ;!                        _Keypad_Scan
  2609                           ;!                        _LCD_Command
  2610                           ;!                           _LCD_Init
  2611                           ;!                         _MainScreen
  2612                           ;!                         _Main_Delay
  2613                           ;!      _RealTimeClock_get_day_of_week
  2614                           ;!                 _RealTimeClock_init
  2615                           ;!       _RealTimeClock_set_burst_time
  2616                           ;!                            _SetDate
  2617                           ;!                            _SetTime
  2618                           ;!                         _SoundAlarm
  2619                           ;!                           _SoundOff
  2620                           ;!               _SwapToHeatingDisplay
  2621                           ;!                       _Switch24Hour
  2622                           ;!                   _Thermometer_Init
  2623                           ;!                             ___wmul
  2624                           ;! ---------------------------------------------------------------------------------
  2625                           ;! (1) _Thermometer_Init                                     0     0      0       0
  2626                           ;! ---------------------------------------------------------------------------------
  2627                           ;! (1) _SoundAlarm                                          10     2      8  409480
  2628                           ;!                                             51 BANK0     10     2      8
  2629                           ;!                      _ChangeTrigger
  2630                           ;!                      _DateDayScreen
  2631                           ;!                           _Get_Temp
  2632                           ;!                  _HeatingControlOff
  2633                           ;!                        _Keypad_Scan
  2634                           ;!                        _LCD_Command
  2635                           ;!                     _LCD_SendString
  2636                           ;!                            _SetDate
  2637                           ;!                            _SetTime
  2638                           ;!                           _SoundOff
  2639                           ;!                            _SoundOn
  2640                           ;!               _SwapToHeatingDisplay
  2641                           ;!                       _Switch24Hour
  2642                           ;!                             ___wmul
  2643                           ;! ---------------------------------------------------------------------------------
  2644                           ;! (2) _SoundOn                                              0     0      0       0
  2645                           ;! ---------------------------------------------------------------------------------
  2646                           ;! (2) _HeatingControlOff                                   11     3      8  225271
  2647                           ;!                                             40 BANK0     11     3      8
  2648                           ;!                      _ChangeTrigger
  2649                           ;!                      _DateDayScreen
  2650                           ;!                           _Get_Temp
  2651                           ;!                        _Keypad_Scan
  2652                           ;!                        _LCD_Command
  2653                           ;!                     _LCD_SendString
  2654                           ;!                         _MainScreen
  2655                           ;!                         _Main_Delay
  2656                           ;!                            _SetDate
  2657                           ;!                            _SetTime
  2658                           ;!                           _SoundOff
  2659                           ;!               _SwapToHeatingDisplay
  2660                           ;!                       _Switch24Hour
  2661                           ;!                             ___wmul
  2662                           ;! ---------------------------------------------------------------------------------
  2663                           ;! (1) ___wmul                                               6     2      4     700
  2664                           ;!                                              0 COMMON     6     2      4
  2665                           ;! ---------------------------------------------------------------------------------
  2666                           ;! (1) _Switch24Hour                                         4     2      2    2687
  2667                           ;!                                              8 COMMON     4     2      2
  2668                           ;!                        _LCD_Command
  2669                           ;!                     _LCD_SendString
  2670                           ;! ---------------------------------------------------------------------------------
  2671                           ;! (1) _SoundOff                                             0     0      0       0
  2672                           ;! ---------------------------------------------------------------------------------
  2673                           ;! (2) _SetTime                                             27    25      2   45015
  2674                           ;!                                              7 BANK0     27    25      2
  2675                           ;!                        _Keypad_Scan
  2676                           ;!                        _LCD_Command
  2677                           ;!                     _LCD_SendString
  2678                           ;!                         _Main_Delay
  2679                           ;!            _RealTimeClock_get_hours
  2680                           ;!          _RealTimeClock_get_minutes
  2681                           ;!          _RealTimeClock_get_seconds
  2682                           ;!            _RealTimeClock_set_hours
  2683                           ;!          _RealTimeClock_set_minutes
  2684                           ;!          _RealTimeClock_set_seconds
  2685                           ;!                            ___awdiv
  2686                           ;!                            ___awmod
  2687                           ;! ---------------------------------------------------------------------------------
  2688                           ;! (3) _RealTimeClock_set_seconds                            2     0      2    5616
  2689                           ;!                                              0 BANK0      2     0      2
  2690                           ;!           _RealTimeClock_write_byte
  2691                           ;!                       ___int_to_hex
  2692                           ;! ---------------------------------------------------------------------------------
  2693                           ;! (3) _RealTimeClock_set_minutes                            2     0      2    5616
  2694                           ;!                                              0 BANK0      2     0      2
  2695                           ;!           _RealTimeClock_write_byte
  2696                           ;!                       ___int_to_hex
  2697                           ;! ---------------------------------------------------------------------------------
  2698                           ;! (3) _RealTimeClock_set_hours                              2     0      2    5616
  2699                           ;!                                              0 BANK0      2     0      2
  2700                           ;!           _RealTimeClock_write_byte
  2701                           ;!                       ___int_to_hex
  2702                           ;! ---------------------------------------------------------------------------------
  2703                           ;! (2) _SetDate                                             33    31      2   52047
  2704                           ;!                                              7 BANK0     33    31      2
  2705                           ;!                           _CheckDay
  2706                           ;!                        _Keypad_Scan
  2707                           ;!                        _LCD_Command
  2708                           ;!                     _LCD_SendString
  2709                           ;!                         _Main_Delay
  2710                           ;!     _RealTimeClock_get_day_of_month
  2711                           ;!            _RealTimeClock_get_month
  2712                           ;!             _RealTimeClock_get_year
  2713                           ;!     _RealTimeClock_set_day_of_month
  2714                           ;!      _RealTimeClock_set_day_of_week
  2715                           ;!            _RealTimeClock_set_month
  2716                           ;!             _RealTimeClock_set_year
  2717                           ;!                            ___awdiv
  2718                           ;!                            ___awmod
  2719                           ;! ---------------------------------------------------------------------------------
  2720                           ;! (3) _RealTimeClock_set_year                               2     0      2    5616
  2721                           ;!                                              0 BANK0      2     0      2
  2722                           ;!           _RealTimeClock_write_byte
  2723                           ;!                       ___int_to_hex
  2724                           ;! ---------------------------------------------------------------------------------
  2725                           ;! (3) _RealTimeClock_set_month                              2     0      2    5616
  2726                           ;!                                              0 BANK0      2     0      2
  2727                           ;!           _RealTimeClock_write_byte
  2728                           ;!                       ___int_to_hex
  2729                           ;! ---------------------------------------------------------------------------------
  2730                           ;! (3) _RealTimeClock_set_day_of_week                        2     0      2    5616
  2731                           ;!                                              0 BANK0      2     0      2
  2732                           ;!           _RealTimeClock_write_byte
  2733                           ;!                       ___int_to_hex
  2734                           ;! ---------------------------------------------------------------------------------
  2735                           ;! (3) _RealTimeClock_set_day_of_month                       2     0      2    5616
  2736                           ;!                                              0 BANK0      2     0      2
  2737                           ;!           _RealTimeClock_write_byte
  2738                           ;!                       ___int_to_hex
  2739                           ;! ---------------------------------------------------------------------------------
  2740                           ;! (3) _CheckDay                                             0     0      0       0
  2741                           ;! ---------------------------------------------------------------------------------
  2742                           ;! (3) _MainScreen                                           3     3      0   40297
  2743                           ;!                                              8 BANK0      3     3      0
  2744                           ;!                        _DisplayTemp
  2745                           ;!                        _DisplayTime
  2746                           ;!                     _LCD_SecondLine
  2747                           ;!                     _LCD_SendString
  2748                           ;! ---------------------------------------------------------------------------------
  2749                           ;! (4) _DisplayTime                                          1     1      0   24751
  2750                           ;!                                             12 COMMON     1     1      0
  2751                           ;!                     _LCD_SendString
  2752                           ;!            _RealTimeClock_get_hours
  2753                           ;!          _RealTimeClock_get_minutes
  2754                           ;!          _RealTimeClock_get_seconds
  2755                           ;!                            ___awdiv
  2756                           ;!                            ___awmod
  2757                           ;! ---------------------------------------------------------------------------------
  2758                           ;! (3) _RealTimeClock_get_seconds                            4     2      2    5025
  2759                           ;!                                             10 COMMON     2     2      0
  2760                           ;!                                              5 BANK0      2     0      2
  2761                           ;!            _RealTimeClock_read_byte
  2762                           ;!           _RealTimeClock_write_byte
  2763                           ;!                       ___hex_to_int
  2764                           ;! ---------------------------------------------------------------------------------
  2765                           ;! (4) _DisplayTemp                                          1     1      0   13086
  2766                           ;!                                              7 BANK0      1     1      0
  2767                           ;!                           _Get_Temp
  2768                           ;!                           _LCD_Busy
  2769                           ;!                       _LCD_SendData
  2770                           ;!                     _LCD_SendString
  2771                           ;! ---------------------------------------------------------------------------------
  2772                           ;! (5) _Get_Temp                                             7     7      0   10595
  2773                           ;!                                              0 BANK0      7     7      0
  2774                           ;!                              _Delay
  2775                           ;!                          _Read_Byte
  2776                           ;!                              _Reset
  2777                           ;!                         _Write_Byte
  2778                           ;!                            ___awdiv
  2779                           ;!                            ___awmod
  2780                           ;!                            ___lwdiv
  2781                           ;!                            ___lwmod
  2782                           ;! ---------------------------------------------------------------------------------
  2783                           ;! (6) ___lwmod                                              6     2      4     311
  2784                           ;!                                              0 COMMON     6     2      4
  2785                           ;! ---------------------------------------------------------------------------------
  2786                           ;! (6) ___lwdiv                                              8     4      4     466
  2787                           ;!                                              6 COMMON     8     4      4
  2788                           ;!                            ___lwmod (ARG)
  2789                           ;! ---------------------------------------------------------------------------------
  2790                           ;! (6) _Write_Byte                                           5     5      0     637
  2791                           ;!                                              4 COMMON     5     5      0
  2792                           ;!                              _Delay
  2793                           ;! ---------------------------------------------------------------------------------
  2794                           ;! (6) _Reset                                                3     3      0     569
  2795                           ;!                                              4 COMMON     3     3      0
  2796                           ;!                              _Delay
  2797                           ;! ---------------------------------------------------------------------------------
  2798                           ;! (6) _Read_Byte                                            3     3      0     594
  2799                           ;!                                              4 COMMON     3     3      0
  2800                           ;!                              _Delay
  2801                           ;! ---------------------------------------------------------------------------------
  2802                           ;! (7) _Delay                                                4     3      1     523
  2803                           ;!                                              0 COMMON     4     3      1
  2804                           ;! ---------------------------------------------------------------------------------
  2805                           ;! (3) _DateDayScreen                                        5     3      2   52565
  2806                           ;!                                             21 BANK0      5     3      2
  2807                           ;!                      _ChangeTrigger
  2808                           ;!                        _DisplayDate
  2809                           ;!                         _DisplayDay
  2810                           ;!                        _Keypad_Scan
  2811                           ;!                        _LCD_Command
  2812                           ;!                     _LCD_SecondLine
  2813                           ;!                     _LCD_SendString
  2814                           ;!               _SwapToHeatingDisplay
  2815                           ;! ---------------------------------------------------------------------------------
  2816                           ;! (1) _SwapToHeatingDisplay                                 6     4      2    4118
  2817                           ;!                                              8 COMMON     6     4      2
  2818                           ;!                        _Keypad_Scan
  2819                           ;!                        _LCD_Command
  2820                           ;!                     _LCD_SendString
  2821                           ;! ---------------------------------------------------------------------------------
  2822                           ;! (4) _LCD_SecondLine                                       0     0      0      22
  2823                           ;!                        _LCD_Command
  2824                           ;! ---------------------------------------------------------------------------------
  2825                           ;! (4) _DisplayDay                                           8     8      0    7578
  2826                           ;!                                             12 COMMON     1     1      0
  2827                           ;!                                              7 BANK0      7     7      0
  2828                           ;!                     _LCD_SendString
  2829                           ;!      _RealTimeClock_get_day_of_week
  2830                           ;! ---------------------------------------------------------------------------------
  2831                           ;! (5) _RealTimeClock_get_day_of_week                        4     2      2    5025
  2832                           ;!                                             10 COMMON     2     2      0
  2833                           ;!                                              5 BANK0      2     0      2
  2834                           ;!            _RealTimeClock_read_byte
  2835                           ;!           _RealTimeClock_write_byte
  2836                           ;!                       ___hex_to_int
  2837                           ;! ---------------------------------------------------------------------------------
  2838                           ;! (4) _DisplayDate                                          1     1      0   24751
  2839                           ;!                                             12 COMMON     1     1      0
  2840                           ;!                     _LCD_SendString
  2841                           ;!     _RealTimeClock_get_day_of_month
  2842                           ;!            _RealTimeClock_get_month
  2843                           ;!             _RealTimeClock_get_year
  2844                           ;!                            ___awdiv
  2845                           ;!                            ___awmod
  2846                           ;! ---------------------------------------------------------------------------------
  2847                           ;! (3) _RealTimeClock_get_year                               4     2      2    5025
  2848                           ;!                                             10 COMMON     2     2      0
  2849                           ;!                                              5 BANK0      2     0      2
  2850                           ;!            _RealTimeClock_read_byte
  2851                           ;!           _RealTimeClock_write_byte
  2852                           ;!                       ___hex_to_int
  2853                           ;! ---------------------------------------------------------------------------------
  2854                           ;! (3) _RealTimeClock_get_month                              4     2      2    5025
  2855                           ;!                                             10 COMMON     2     2      0
  2856                           ;!                                              5 BANK0      2     0      2
  2857                           ;!            _RealTimeClock_read_byte
  2858                           ;!           _RealTimeClock_write_byte
  2859                           ;!                       ___hex_to_int
  2860                           ;! ---------------------------------------------------------------------------------
  2861                           ;! (3) _RealTimeClock_get_day_of_month                       4     2      2    5025
  2862                           ;!                                             10 COMMON     2     2      0
  2863                           ;!                                              5 BANK0      2     0      2
  2864                           ;!            _RealTimeClock_read_byte
  2865                           ;!           _RealTimeClock_write_byte
  2866                           ;!                       ___hex_to_int
  2867                           ;! ---------------------------------------------------------------------------------
  2868                           ;! (4) _ChangeTrigger                                       21    21      0   11989
  2869                           ;!                                              0 BANK0     21    21      0
  2870                           ;!                        _Keypad_Scan
  2871                           ;!                           _LCD_Busy
  2872                           ;!                        _LCD_Command
  2873                           ;!                       _LCD_SendData
  2874                           ;!                     _LCD_SendString
  2875                           ;!                         _Main_Delay
  2876                           ;!                            ___awdiv
  2877                           ;!                            ___awmod
  2878                           ;! ---------------------------------------------------------------------------------
  2879                           ;! (3) ___awdiv                                              9     5      4    2580
  2880                           ;!                                              0 COMMON     9     5      4
  2881                           ;! ---------------------------------------------------------------------------------
  2882                           ;! (3) _Main_Delay                                           7     5      2     548
  2883                           ;!                                              0 COMMON     7     5      2
  2884                           ;! ---------------------------------------------------------------------------------
  2885                           ;! (2) _LCD_SendString                                       7     5      2    2392
  2886                           ;!                                              1 COMMON     7     5      2
  2887                           ;!                       _LCD_SendData
  2888                           ;! ---------------------------------------------------------------------------------
  2889                           ;! (3) _LCD_SendData                                         1     1      0      22
  2890                           ;!                                              0 COMMON     1     1      0
  2891                           ;!                           _LCD_Busy
  2892                           ;! ---------------------------------------------------------------------------------
  2893                           ;! (2) _LCD_Command                                          1     1      0      22
  2894                           ;!                                              0 COMMON     1     1      0
  2895                           ;!                           _LCD_Busy
  2896                           ;! ---------------------------------------------------------------------------------
  2897                           ;! (4) _LCD_Busy                                             0     0      0       0
  2898                           ;! ---------------------------------------------------------------------------------
  2899                           ;! (2) _Keypad_Scan                                          2     0      2    1308
  2900                           ;!                                              6 COMMON     2     0      2
  2901                           ;!                          _Key_Delay
  2902                           ;! ---------------------------------------------------------------------------------
  2903                           ;! (3) _Key_Delay                                            6     4      2    1308
  2904                           ;!                                              0 COMMON     6     4      2
  2905                           ;! ---------------------------------------------------------------------------------
  2906                           ;! (1) _RealTimeClock_set_burst_time                         5     5      0    5641
  2907                           ;!                                              0 BANK0      5     5      0
  2908                           ;!           _RealTimeClock_write_byte
  2909                           ;!                       ___int_to_hex
  2910                           ;! ---------------------------------------------------------------------------------
  2911                           ;! (4) ___int_to_hex                                         7     5      2    5427
  2912                           ;!                                              7 COMMON     7     5      2
  2913                           ;!                            ___awmod
  2914                           ;! ---------------------------------------------------------------------------------
  2915                           ;! (1) _RealTimeClock_init                                   0     0      0      91
  2916                           ;!           _RealTimeClock_write_byte
  2917                           ;! ---------------------------------------------------------------------------------
  2918                           ;! (1) _LCD_Init                                             0     0      0       0
  2919                           ;! ---------------------------------------------------------------------------------
  2920                           ;! (1) _Init_Keypad                                          0     0      0       0
  2921                           ;! ---------------------------------------------------------------------------------
  2922                           ;! (1) _CheckTime                                            1     1      0   10050
  2923                           ;!                                             12 COMMON     1     1      0
  2924                           ;!            _RealTimeClock_get_hours
  2925                           ;!          _RealTimeClock_get_minutes
  2926                           ;! ---------------------------------------------------------------------------------
  2927                           ;! (3) _RealTimeClock_get_minutes                            4     2      2    5025
  2928                           ;!                                             10 COMMON     2     2      0
  2929                           ;!                                              5 BANK0      2     0      2
  2930                           ;!            _RealTimeClock_read_byte
  2931                           ;!           _RealTimeClock_write_byte
  2932                           ;!                       ___hex_to_int
  2933                           ;! ---------------------------------------------------------------------------------
  2934                           ;! (3) _RealTimeClock_get_hours                              4     2      2    5025
  2935                           ;!                                             10 COMMON     2     2      0
  2936                           ;!                                              5 BANK0      2     0      2
  2937                           ;!            _RealTimeClock_read_byte
  2938                           ;!           _RealTimeClock_write_byte
  2939                           ;!                       ___hex_to_int
  2940                           ;! ---------------------------------------------------------------------------------
  2941                           ;! (4) ___hex_to_int                                         8     6      2    4819
  2942                           ;!                                              7 COMMON     3     1      2
  2943                           ;!                                              0 BANK0      5     5      0
  2944                           ;!                            ___awmod
  2945                           ;! ---------------------------------------------------------------------------------
  2946                           ;! (3) ___awmod                                              7     3      4    4704
  2947                           ;!                                              0 COMMON     7     3      4
  2948                           ;! ---------------------------------------------------------------------------------
  2949                           ;! (4) _RealTimeClock_write_byte                             5     5      0      91
  2950                           ;!                                              0 COMMON     5     5      0
  2951                           ;! ---------------------------------------------------------------------------------
  2952                           ;! (4) _RealTimeClock_read_byte                              5     5      0      92
  2953                           ;!                                              0 COMMON     5     5      0
  2954                           ;! ---------------------------------------------------------------------------------
  2955                           ;! (1) _Buzzer_Init                                          0     0      0       0
  2956                           ;! ---------------------------------------------------------------------------------
  2957                           ;! Estimated maximum stack depth 7
  2958                           ;! ---------------------------------------------------------------------------------
  2959                           ;!
  2960                           ;! Call Graph Graphs:
  2961                           ;!
  2962                           ;! _main (ROOT)
  2963                           ;!   _Buzzer_Init
  2964                           ;!   _ChangeTrigger
  2965                           ;!     _Keypad_Scan
  2966                           ;!       _Key_Delay
  2967                           ;!     _LCD_Busy
  2968                           ;!     _LCD_Command
  2969                           ;!       _LCD_Busy
  2970                           ;!     _LCD_SendData
  2971                           ;!       _LCD_Busy
  2972                           ;!     _LCD_SendString
  2973                           ;!       _LCD_SendData
  2974                           ;!         _LCD_Busy
  2975                           ;!     _Main_Delay
  2976                           ;!     ___awdiv
  2977                           ;!     ___awmod
  2978                           ;!   _CheckDay
  2979                           ;!   _CheckTime
  2980                           ;!     _RealTimeClock_get_hours
  2981                           ;!       _RealTimeClock_read_byte
  2982                           ;!       _RealTimeClock_write_byte
  2983                           ;!       ___hex_to_int
  2984                           ;!         ___awmod
  2985                           ;!     _RealTimeClock_get_minutes
  2986                           ;!       _RealTimeClock_read_byte
  2987                           ;!       _RealTimeClock_write_byte
  2988                           ;!       ___hex_to_int
  2989                           ;!         ___awmod
  2990                           ;!   _DateDayScreen
  2991                           ;!     _ChangeTrigger
  2992                           ;!       _Keypad_Scan
  2993                           ;!         _Key_Delay
  2994                           ;!       _LCD_Busy
  2995                           ;!       _LCD_Command
  2996                           ;!         _LCD_Busy
  2997                           ;!       _LCD_SendData
  2998                           ;!         _LCD_Busy
  2999                           ;!       _LCD_SendString
  3000                           ;!         _LCD_SendData
  3001                           ;!           _LCD_Busy
  3002                           ;!       _Main_Delay
  3003                           ;!       ___awdiv
  3004                           ;!       ___awmod
  3005                           ;!     _DisplayDate
  3006                           ;!       _LCD_SendString
  3007                           ;!         _LCD_SendData
  3008                           ;!           _LCD_Busy
  3009                           ;!       _RealTimeClock_get_day_of_month
  3010                           ;!         _RealTimeClock_read_byte
  3011                           ;!         _RealTimeClock_write_byte
  3012                           ;!         ___hex_to_int
  3013                           ;!           ___awmod
  3014                           ;!       _RealTimeClock_get_month
  3015                           ;!         _RealTimeClock_read_byte
  3016                           ;!         _RealTimeClock_write_byte
  3017                           ;!         ___hex_to_int
  3018                           ;!           ___awmod
  3019                           ;!       _RealTimeClock_get_year
  3020                           ;!         _RealTimeClock_read_byte
  3021                           ;!         _RealTimeClock_write_byte
  3022                           ;!         ___hex_to_int
  3023                           ;!           ___awmod
  3024                           ;!       ___awdiv
  3025                           ;!       ___awmod
  3026                           ;!     _DisplayDay
  3027                           ;!       _LCD_SendString
  3028                           ;!         _LCD_SendData
  3029                           ;!           _LCD_Busy
  3030                           ;!       _RealTimeClock_get_day_of_week
  3031                           ;!         _RealTimeClock_read_byte
  3032                           ;!         _RealTimeClock_write_byte
  3033                           ;!         ___hex_to_int
  3034                           ;!           ___awmod
  3035                           ;!     _Keypad_Scan
  3036                           ;!       _Key_Delay
  3037                           ;!     _LCD_Command
  3038                           ;!       _LCD_Busy
  3039                           ;!     _LCD_SecondLine
  3040                           ;!       _LCD_Command
  3041                           ;!         _LCD_Busy
  3042                           ;!     _LCD_SendString
  3043                           ;!       _LCD_SendData
  3044                           ;!         _LCD_Busy
  3045                           ;!     _SwapToHeatingDisplay
  3046                           ;!       _Keypad_Scan
  3047                           ;!         _Key_Delay
  3048                           ;!       _LCD_Command
  3049                           ;!         _LCD_Busy
  3050                           ;!       _LCD_SendString
  3051                           ;!         _LCD_SendData
  3052                           ;!           _LCD_Busy
  3053                           ;!   _HeatingControlOff
  3054                           ;!     _ChangeTrigger
  3055                           ;!       _Keypad_Scan
  3056                           ;!         _Key_Delay
  3057                           ;!       _LCD_Busy
  3058                           ;!       _LCD_Command
  3059                           ;!         _LCD_Busy
  3060                           ;!       _LCD_SendData
  3061                           ;!         _LCD_Busy
  3062                           ;!       _LCD_SendString
  3063                           ;!         _LCD_SendData
  3064                           ;!           _LCD_Busy
  3065                           ;!       _Main_Delay
  3066                           ;!       ___awdiv
  3067                           ;!       ___awmod
  3068                           ;!     _DateDayScreen
  3069                           ;!       _ChangeTrigger
  3070                           ;!         _Keypad_Scan
  3071                           ;!           _Key_Delay
  3072                           ;!         _LCD_Busy
  3073                           ;!         _LCD_Command
  3074                           ;!           _LCD_Busy
  3075                           ;!         _LCD_SendData
  3076                           ;!           _LCD_Busy
  3077                           ;!         _LCD_SendString
  3078                           ;!           _LCD_SendData
  3079                           ;!             _LCD_Busy
  3080                           ;!         _Main_Delay
  3081                           ;!         ___awdiv
  3082                           ;!         ___awmod
  3083                           ;!       _DisplayDate
  3084                           ;!         _LCD_SendString
  3085                           ;!           _LCD_SendData
  3086                           ;!             _LCD_Busy
  3087                           ;!         _RealTimeClock_get_day_of_month
  3088                           ;!           _RealTimeClock_read_byte
  3089                           ;!           _RealTimeClock_write_byte
  3090                           ;!           ___hex_to_int
  3091                           ;!             ___awmod
  3092                           ;!         _RealTimeClock_get_month
  3093                           ;!           _RealTimeClock_read_byte
  3094                           ;!           _RealTimeClock_write_byte
  3095                           ;!           ___hex_to_int
  3096                           ;!             ___awmod
  3097                           ;!         _RealTimeClock_get_year
  3098                           ;!           _RealTimeClock_read_byte
  3099                           ;!           _RealTimeClock_write_byte
  3100                           ;!           ___hex_to_int
  3101                           ;!             ___awmod
  3102                           ;!         ___awdiv
  3103                           ;!         ___awmod
  3104                           ;!       _DisplayDay
  3105                           ;!         _LCD_SendString
  3106                           ;!           _LCD_SendData
  3107                           ;!             _LCD_Busy
  3108                           ;!         _RealTimeClock_get_day_of_week
  3109                           ;!           _RealTimeClock_read_byte
  3110                           ;!           _RealTimeClock_write_byte
  3111                           ;!           ___hex_to_int
  3112                           ;!             ___awmod
  3113                           ;!       _Keypad_Scan
  3114                           ;!         _Key_Delay
  3115                           ;!       _LCD_Command
  3116                           ;!         _LCD_Busy
  3117                           ;!       _LCD_SecondLine
  3118                           ;!         _LCD_Command
  3119                           ;!           _LCD_Busy
  3120                           ;!       _LCD_SendString
  3121                           ;!         _LCD_SendData
  3122                           ;!           _LCD_Busy
  3123                           ;!       _SwapToHeatingDisplay
  3124                           ;!         _Keypad_Scan
  3125                           ;!           _Key_Delay
  3126                           ;!         _LCD_Command
  3127                           ;!           _LCD_Busy
  3128                           ;!         _LCD_SendString
  3129                           ;!           _LCD_SendData
  3130                           ;!             _LCD_Busy
  3131                           ;!     _Get_Temp
  3132                           ;!       _Delay
  3133                           ;!       _Read_Byte
  3134                           ;!         _Delay
  3135                           ;!       _Reset
  3136                           ;!         _Delay
  3137                           ;!       _Write_Byte
  3138                           ;!         _Delay
  3139                           ;!       ___awdiv
  3140                           ;!       ___awmod
  3141                           ;!       ___lwdiv
  3142                           ;!         ___lwmod (ARG)
  3143                           ;!       ___lwmod
  3144                           ;!     _Keypad_Scan
  3145                           ;!       _Key_Delay
  3146                           ;!     _LCD_Command
  3147                           ;!       _LCD_Busy
  3148                           ;!     _LCD_SendString
  3149                           ;!       _LCD_SendData
  3150                           ;!         _LCD_Busy
  3151                           ;!     _MainScreen
  3152                           ;!       _DisplayTemp
  3153                           ;!         _Get_Temp
  3154                           ;!           _Delay
  3155                           ;!           _Read_Byte
  3156                           ;!             _Delay
  3157                           ;!           _Reset
  3158                           ;!             _Delay
  3159                           ;!           _Write_Byte
  3160                           ;!             _Delay
  3161                           ;!           ___awdiv
  3162                           ;!           ___awmod
  3163                           ;!           ___lwdiv
  3164                           ;!             ___lwmod (ARG)
  3165                           ;!           ___lwmod
  3166                           ;!         _LCD_Busy
  3167                           ;!         _LCD_SendData
  3168                           ;!           _LCD_Busy
  3169                           ;!         _LCD_SendString
  3170                           ;!           _LCD_SendData
  3171                           ;!             _LCD_Busy
  3172                           ;!       _DisplayTime
  3173                           ;!         _LCD_SendString
  3174                           ;!           _LCD_SendData
  3175                           ;!             _LCD_Busy
  3176                           ;!         _RealTimeClock_get_hours
  3177                           ;!           _RealTimeClock_read_byte
  3178                           ;!           _RealTimeClock_write_byte
  3179                           ;!           ___hex_to_int
  3180                           ;!             ___awmod
  3181                           ;!         _RealTimeClock_get_minutes
  3182                           ;!           _RealTimeClock_read_byte
  3183                           ;!           _RealTimeClock_write_byte
  3184                           ;!           ___hex_to_int
  3185                           ;!             ___awmod
  3186                           ;!         _RealTimeClock_get_seconds
  3187                           ;!           _RealTimeClock_read_byte
  3188                           ;!           _RealTimeClock_write_byte
  3189                           ;!           ___hex_to_int
  3190                           ;!             ___awmod
  3191                           ;!         ___awdiv
  3192                           ;!         ___awmod
  3193                           ;!       _LCD_SecondLine
  3194                           ;!         _LCD_Command
  3195                           ;!           _LCD_Busy
  3196                           ;!       _LCD_SendString
  3197                           ;!         _LCD_SendData
  3198                           ;!           _LCD_Busy
  3199                           ;!     _Main_Delay
  3200                           ;!     _SetDate
  3201                           ;!       _CheckDay
  3202                           ;!       _Keypad_Scan
  3203                           ;!         _Key_Delay
  3204                           ;!       _LCD_Command
  3205                           ;!         _LCD_Busy
  3206                           ;!       _LCD_SendString
  3207                           ;!         _LCD_SendData
  3208                           ;!           _LCD_Busy
  3209                           ;!       _Main_Delay
  3210                           ;!       _RealTimeClock_get_day_of_month
  3211                           ;!         _RealTimeClock_read_byte
  3212                           ;!         _RealTimeClock_write_byte
  3213                           ;!         ___hex_to_int
  3214                           ;!           ___awmod
  3215                           ;!       _RealTimeClock_get_month
  3216                           ;!         _RealTimeClock_read_byte
  3217                           ;!         _RealTimeClock_write_byte
  3218                           ;!         ___hex_to_int
  3219                           ;!           ___awmod
  3220                           ;!       _RealTimeClock_get_year
  3221                           ;!         _RealTimeClock_read_byte
  3222                           ;!         _RealTimeClock_write_byte
  3223                           ;!         ___hex_to_int
  3224                           ;!           ___awmod
  3225                           ;!       _RealTimeClock_set_day_of_month
  3226                           ;!         _RealTimeClock_write_byte
  3227                           ;!         ___int_to_hex
  3228                           ;!           ___awmod
  3229                           ;!       _RealTimeClock_set_day_of_week
  3230                           ;!         _RealTimeClock_write_byte
  3231                           ;!         ___int_to_hex
  3232                           ;!           ___awmod
  3233                           ;!       _RealTimeClock_set_month
  3234                           ;!         _RealTimeClock_write_byte
  3235                           ;!         ___int_to_hex
  3236                           ;!           ___awmod
  3237                           ;!       _RealTimeClock_set_year
  3238                           ;!         _RealTimeClock_write_byte
  3239                           ;!         ___int_to_hex
  3240                           ;!           ___awmod
  3241                           ;!       ___awdiv
  3242                           ;!       ___awmod
  3243                           ;!     _SetTime
  3244                           ;!       _Keypad_Scan
  3245                           ;!         _Key_Delay
  3246                           ;!       _LCD_Command
  3247                           ;!         _LCD_Busy
  3248                           ;!       _LCD_SendString
  3249                           ;!         _LCD_SendData
  3250                           ;!           _LCD_Busy
  3251                           ;!       _Main_Delay
  3252                           ;!       _RealTimeClock_get_hours
  3253                           ;!         _RealTimeClock_read_byte
  3254                           ;!         _RealTimeClock_write_byte
  3255                           ;!         ___hex_to_int
  3256                           ;!           ___awmod
  3257                           ;!       _RealTimeClock_get_minutes
  3258                           ;!         _RealTimeClock_read_byte
  3259                           ;!         _RealTimeClock_write_byte
  3260                           ;!         ___hex_to_int
  3261                           ;!           ___awmod
  3262                           ;!       _RealTimeClock_get_seconds
  3263                           ;!         _RealTimeClock_read_byte
  3264                           ;!         _RealTimeClock_write_byte
  3265                           ;!         ___hex_to_int
  3266                           ;!           ___awmod
  3267                           ;!       _RealTimeClock_set_hours
  3268                           ;!         _RealTimeClock_write_byte
  3269                           ;!         ___int_to_hex
  3270                           ;!           ___awmod
  3271                           ;!       _RealTimeClock_set_minutes
  3272                           ;!         _RealTimeClock_write_byte
  3273                           ;!         ___int_to_hex
  3274                           ;!           ___awmod
  3275                           ;!       _RealTimeClock_set_seconds
  3276                           ;!         _RealTimeClock_write_byte
  3277                           ;!         ___int_to_hex
  3278                           ;!           ___awmod
  3279                           ;!       ___awdiv
  3280                           ;!       ___awmod
  3281                           ;!     _SoundOff
  3282                           ;!     _SwapToHeatingDisplay
  3283                           ;!       _Keypad_Scan
  3284                           ;!         _Key_Delay
  3285                           ;!       _LCD_Command
  3286                           ;!         _LCD_Busy
  3287                           ;!       _LCD_SendString
  3288                           ;!         _LCD_SendData
  3289                           ;!           _LCD_Busy
  3290                           ;!     _Switch24Hour
  3291                           ;!       _LCD_Command
  3292                           ;!         _LCD_Busy
  3293                           ;!       _LCD_SendString
  3294                           ;!         _LCD_SendData
  3295                           ;!           _LCD_Busy
  3296                           ;!     ___wmul
  3297                           ;!   _Init_Keypad
  3298                           ;!   _Keypad_Scan
  3299                           ;!     _Key_Delay
  3300                           ;!   _LCD_Command
  3301                           ;!     _LCD_Busy
  3302                           ;!   _LCD_Init
  3303                           ;!   _MainScreen
  3304                           ;!     _DisplayTemp
  3305                           ;!       _Get_Temp
  3306                           ;!         _Delay
  3307                           ;!         _Read_Byte
  3308                           ;!           _Delay
  3309                           ;!         _Reset
  3310                           ;!           _Delay
  3311                           ;!         _Write_Byte
  3312                           ;!           _Delay
  3313                           ;!         ___awdiv
  3314                           ;!         ___awmod
  3315                           ;!         ___lwdiv
  3316                           ;!           ___lwmod (ARG)
  3317                           ;!         ___lwmod
  3318                           ;!       _LCD_Busy
  3319                           ;!       _LCD_SendData
  3320                           ;!         _LCD_Busy
  3321                           ;!       _LCD_SendString
  3322                           ;!         _LCD_SendData
  3323                           ;!           _LCD_Busy
  3324                           ;!     _DisplayTime
  3325                           ;!       _LCD_SendString
  3326                           ;!         _LCD_SendData
  3327                           ;!           _LCD_Busy
  3328                           ;!       _RealTimeClock_get_hours
  3329                           ;!         _RealTimeClock_read_byte
  3330                           ;!         _RealTimeClock_write_byte
  3331                           ;!         ___hex_to_int
  3332                           ;!           ___awmod
  3333                           ;!       _RealTimeClock_get_minutes
  3334                           ;!         _RealTimeClock_read_byte
  3335                           ;!         _RealTimeClock_write_byte
  3336                           ;!         ___hex_to_int
  3337                           ;!           ___awmod
  3338                           ;!       _RealTimeClock_get_seconds
  3339                           ;!         _RealTimeClock_read_byte
  3340                           ;!         _RealTimeClock_write_byte
  3341                           ;!         ___hex_to_int
  3342                           ;!           ___awmod
  3343                           ;!       ___awdiv
  3344                           ;!       ___awmod
  3345                           ;!     _LCD_SecondLine
  3346                           ;!       _LCD_Command
  3347                           ;!         _LCD_Busy
  3348                           ;!     _LCD_SendString
  3349                           ;!       _LCD_SendData
  3350                           ;!         _LCD_Busy
  3351                           ;!   _Main_Delay
  3352                           ;!   _RealTimeClock_get_day_of_week
  3353                           ;!     _RealTimeClock_read_byte
  3354                           ;!     _RealTimeClock_write_byte
  3355                           ;!     ___hex_to_int
  3356                           ;!       ___awmod
  3357                           ;!   _RealTimeClock_init
  3358                           ;!     _RealTimeClock_write_byte
  3359                           ;!   _RealTimeClock_set_burst_time
  3360                           ;!     _RealTimeClock_write_byte
  3361                           ;!     ___int_to_hex
  3362                           ;!       ___awmod
  3363                           ;!   _SetDate
  3364                           ;!     _CheckDay
  3365                           ;!     _Keypad_Scan
  3366                           ;!       _Key_Delay
  3367                           ;!     _LCD_Command
  3368                           ;!       _LCD_Busy
  3369                           ;!     _LCD_SendString
  3370                           ;!       _LCD_SendData
  3371                           ;!         _LCD_Busy
  3372                           ;!     _Main_Delay
  3373                           ;!     _RealTimeClock_get_day_of_month
  3374                           ;!       _RealTimeClock_read_byte
  3375                           ;!       _RealTimeClock_write_byte
  3376                           ;!       ___hex_to_int
  3377                           ;!         ___awmod
  3378                           ;!     _RealTimeClock_get_month
  3379                           ;!       _RealTimeClock_read_byte
  3380                           ;!       _RealTimeClock_write_byte
  3381                           ;!       ___hex_to_int
  3382                           ;!         ___awmod
  3383                           ;!     _RealTimeClock_get_year
  3384                           ;!       _RealTimeClock_read_byte
  3385                           ;!       _RealTimeClock_write_byte
  3386                           ;!       ___hex_to_int
  3387                           ;!         ___awmod
  3388                           ;!     _RealTimeClock_set_day_of_month
  3389                           ;!       _RealTimeClock_write_byte
  3390                           ;!       ___int_to_hex
  3391                           ;!         ___awmod
  3392                           ;!     _RealTimeClock_set_day_of_week
  3393                           ;!       _RealTimeClock_write_byte
  3394                           ;!       ___int_to_hex
  3395                           ;!         ___awmod
  3396                           ;!     _RealTimeClock_set_month
  3397                           ;!       _RealTimeClock_write_byte
  3398                           ;!       ___int_to_hex
  3399                           ;!         ___awmod
  3400                           ;!     _RealTimeClock_set_year
  3401                           ;!       _RealTimeClock_write_byte
  3402                           ;!       ___int_to_hex
  3403                           ;!         ___awmod
  3404                           ;!     ___awdiv
  3405                           ;!     ___awmod
  3406                           ;!   _SetTime
  3407                           ;!     _Keypad_Scan
  3408                           ;!       _Key_Delay
  3409                           ;!     _LCD_Command
  3410                           ;!       _LCD_Busy
  3411                           ;!     _LCD_SendString
  3412                           ;!       _LCD_SendData
  3413                           ;!         _LCD_Busy
  3414                           ;!     _Main_Delay
  3415                           ;!     _RealTimeClock_get_hours
  3416                           ;!       _RealTimeClock_read_byte
  3417                           ;!       _RealTimeClock_write_byte
  3418                           ;!       ___hex_to_int
  3419                           ;!         ___awmod
  3420                           ;!     _RealTimeClock_get_minutes
  3421                           ;!       _RealTimeClock_read_byte
  3422                           ;!       _RealTimeClock_write_byte
  3423                           ;!       ___hex_to_int
  3424                           ;!         ___awmod
  3425                           ;!     _RealTimeClock_get_seconds
  3426                           ;!       _RealTimeClock_read_byte
  3427                           ;!       _RealTimeClock_write_byte
  3428                           ;!       ___hex_to_int
  3429                           ;!         ___awmod
  3430                           ;!     _RealTimeClock_set_hours
  3431                           ;!       _RealTimeClock_write_byte
  3432                           ;!       ___int_to_hex
  3433                           ;!         ___awmod
  3434                           ;!     _RealTimeClock_set_minutes
  3435                           ;!       _RealTimeClock_write_byte
  3436                           ;!       ___int_to_hex
  3437                           ;!         ___awmod
  3438                           ;!     _RealTimeClock_set_seconds
  3439                           ;!       _RealTimeClock_write_byte
  3440                           ;!       ___int_to_hex
  3441                           ;!         ___awmod
  3442                           ;!     ___awdiv
  3443                           ;!     ___awmod
  3444                           ;!   _SoundAlarm
  3445                           ;!     _ChangeTrigger
  3446                           ;!       _Keypad_Scan
  3447                           ;!         _Key_Delay
  3448                           ;!       _LCD_Busy
  3449                           ;!       _LCD_Command
  3450                           ;!         _LCD_Busy
  3451                           ;!       _LCD_SendData
  3452                           ;!         _LCD_Busy
  3453                           ;!       _LCD_SendString
  3454                           ;!         _LCD_SendData
  3455                           ;!           _LCD_Busy
  3456                           ;!       _Main_Delay
  3457                           ;!       ___awdiv
  3458                           ;!       ___awmod
  3459                           ;!     _DateDayScreen
  3460                           ;!       _ChangeTrigger
  3461                           ;!         _Keypad_Scan
  3462                           ;!           _Key_Delay
  3463                           ;!         _LCD_Busy
  3464                           ;!         _LCD_Command
  3465                           ;!           _LCD_Busy
  3466                           ;!         _LCD_SendData
  3467                           ;!           _LCD_Busy
  3468                           ;!         _LCD_SendString
  3469                           ;!           _LCD_SendData
  3470                           ;!             _LCD_Busy
  3471                           ;!         _Main_Delay
  3472                           ;!         ___awdiv
  3473                           ;!         ___awmod
  3474                           ;!       _DisplayDate
  3475                           ;!         _LCD_SendString
  3476                           ;!           _LCD_SendData
  3477                           ;!             _LCD_Busy
  3478                           ;!         _RealTimeClock_get_day_of_month
  3479                           ;!           _RealTimeClock_read_byte
  3480                           ;!           _RealTimeClock_write_byte
  3481                           ;!           ___hex_to_int
  3482                           ;!             ___awmod
  3483                           ;!         _RealTimeClock_get_month
  3484                           ;!           _RealTimeClock_read_byte
  3485                           ;!           _RealTimeClock_write_byte
  3486                           ;!           ___hex_to_int
  3487                           ;!             ___awmod
  3488                           ;!         _RealTimeClock_get_year
  3489                           ;!           _RealTimeClock_read_byte
  3490                           ;!           _RealTimeClock_write_byte
  3491                           ;!           ___hex_to_int
  3492                           ;!             ___awmod
  3493                           ;!         ___awdiv
  3494                           ;!         ___awmod
  3495                           ;!       _DisplayDay
  3496                           ;!         _LCD_SendString
  3497                           ;!           _LCD_SendData
  3498                           ;!             _LCD_Busy
  3499                           ;!         _RealTimeClock_get_day_of_week
  3500                           ;!           _RealTimeClock_read_byte
  3501                           ;!           _RealTimeClock_write_byte
  3502                           ;!           ___hex_to_int
  3503                           ;!             ___awmod
  3504                           ;!       _Keypad_Scan
  3505                           ;!         _Key_Delay
  3506                           ;!       _LCD_Command
  3507                           ;!         _LCD_Busy
  3508                           ;!       _LCD_SecondLine
  3509                           ;!         _LCD_Command
  3510                           ;!           _LCD_Busy
  3511                           ;!       _LCD_SendString
  3512                           ;!         _LCD_SendData
  3513                           ;!           _LCD_Busy
  3514                           ;!       _SwapToHeatingDisplay
  3515                           ;!         _Keypad_Scan
  3516                           ;!           _Key_Delay
  3517                           ;!         _LCD_Command
  3518                           ;!           _LCD_Busy
  3519                           ;!         _LCD_SendString
  3520                           ;!           _LCD_SendData
  3521                           ;!             _LCD_Busy
  3522                           ;!     _Get_Temp
  3523                           ;!       _Delay
  3524                           ;!       _Read_Byte
  3525                           ;!         _Delay
  3526                           ;!       _Reset
  3527                           ;!         _Delay
  3528                           ;!       _Write_Byte
  3529                           ;!         _Delay
  3530                           ;!       ___awdiv
  3531                           ;!       ___awmod
  3532                           ;!       ___lwdiv
  3533                           ;!         ___lwmod (ARG)
  3534                           ;!       ___lwmod
  3535                           ;!     _HeatingControlOff
  3536                           ;!       _ChangeTrigger
  3537                           ;!         _Keypad_Scan
  3538                           ;!           _Key_Delay
  3539                           ;!         _LCD_Busy
  3540                           ;!         _LCD_Command
  3541                           ;!           _LCD_Busy
  3542                           ;!         _LCD_SendData
  3543                           ;!           _LCD_Busy
  3544                           ;!         _LCD_SendString
  3545                           ;!           _LCD_SendData
  3546                           ;!             _LCD_Busy
  3547                           ;!         _Main_Delay
  3548                           ;!         ___awdiv
  3549                           ;!         ___awmod
  3550                           ;!       _DateDayScreen
  3551                           ;!         _ChangeTrigger
  3552                           ;!           _Keypad_Scan
  3553                           ;!             _Key_Delay
  3554                           ;!           _LCD_Busy
  3555                           ;!           _LCD_Command
  3556                           ;!             _LCD_Busy
  3557                           ;!           _LCD_SendData
  3558                           ;!             _LCD_Busy
  3559                           ;!           _LCD_SendString
  3560                           ;!             _LCD_SendData
  3561                           ;!               _LCD_Busy
  3562                           ;!           _Main_Delay
  3563                           ;!           ___awdiv
  3564                           ;!           ___awmod
  3565                           ;!         _DisplayDate
  3566                           ;!           _LCD_SendString
  3567                           ;!             _LCD_SendData
  3568                           ;!               _LCD_Busy
  3569                           ;!           _RealTimeClock_get_day_of_month
  3570                           ;!             _RealTimeClock_read_byte
  3571                           ;!             _RealTimeClock_write_byte
  3572                           ;!             ___hex_to_int
  3573                           ;!               ___awmod
  3574                           ;!           _RealTimeClock_get_month
  3575                           ;!             _RealTimeClock_read_byte
  3576                           ;!             _RealTimeClock_write_byte
  3577                           ;!             ___hex_to_int
  3578                           ;!               ___awmod
  3579                           ;!           _RealTimeClock_get_year
  3580                           ;!             _RealTimeClock_read_byte
  3581                           ;!             _RealTimeClock_write_byte
  3582                           ;!             ___hex_to_int
  3583                           ;!               ___awmod
  3584                           ;!           ___awdiv
  3585                           ;!           ___awmod
  3586                           ;!         _DisplayDay
  3587                           ;!           _LCD_SendString
  3588                           ;!             _LCD_SendData
  3589                           ;!               _LCD_Busy
  3590                           ;!           _RealTimeClock_get_day_of_week
  3591                           ;!             _RealTimeClock_read_byte
  3592                           ;!             _RealTimeClock_write_byte
  3593                           ;!             ___hex_to_int
  3594                           ;!               ___awmod
  3595                           ;!         _Keypad_Scan
  3596                           ;!           _Key_Delay
  3597                           ;!         _LCD_Command
  3598                           ;!           _LCD_Busy
  3599                           ;!         _LCD_SecondLine
  3600                           ;!           _LCD_Command
  3601                           ;!             _LCD_Busy
  3602                           ;!         _LCD_SendString
  3603                           ;!           _LCD_SendData
  3604                           ;!             _LCD_Busy
  3605                           ;!         _SwapToHeatingDisplay
  3606                           ;!           _Keypad_Scan
  3607                           ;!             _Key_Delay
  3608                           ;!           _LCD_Command
  3609                           ;!             _LCD_Busy
  3610                           ;!           _LCD_SendString
  3611                           ;!             _LCD_SendData
  3612                           ;!               _LCD_Busy
  3613                           ;!       _Get_Temp
  3614                           ;!         _Delay
  3615                           ;!         _Read_Byte
  3616                           ;!           _Delay
  3617                           ;!         _Reset
  3618                           ;!           _Delay
  3619                           ;!         _Write_Byte
  3620                           ;!           _Delay
  3621                           ;!         ___awdiv
  3622                           ;!         ___awmod
  3623                           ;!         ___lwdiv
  3624                           ;!           ___lwmod (ARG)
  3625                           ;!         ___lwmod
  3626                           ;!       _Keypad_Scan
  3627                           ;!         _Key_Delay
  3628                           ;!       _LCD_Command
  3629                           ;!         _LCD_Busy
  3630                           ;!       _LCD_SendString
  3631                           ;!         _LCD_SendData
  3632                           ;!           _LCD_Busy
  3633                           ;!       _MainScreen
  3634                           ;!         _DisplayTemp
  3635                           ;!           _Get_Temp
  3636                           ;!             _Delay
  3637                           ;!             _Read_Byte
  3638                           ;!               _Delay
  3639                           ;!             _Reset
  3640                           ;!               _Delay
  3641                           ;!             _Write_Byte
  3642                           ;!               _Delay
  3643                           ;!             ___awdiv
  3644                           ;!             ___awmod
  3645                           ;!             ___lwdiv
  3646                           ;!               ___lwmod (ARG)
  3647                           ;!             ___lwmod
  3648                           ;!           _LCD_Busy
  3649                           ;!           _LCD_SendData
  3650                           ;!             _LCD_Busy
  3651                           ;!           _LCD_SendString
  3652                           ;!             _LCD_SendData
  3653                           ;!               _LCD_Busy
  3654                           ;!         _DisplayTime
  3655                           ;!           _LCD_SendString
  3656                           ;!             _LCD_SendData
  3657                           ;!               _LCD_Busy
  3658                           ;!           _RealTimeClock_get_hours
  3659                           ;!             _RealTimeClock_read_byte
  3660                           ;!             _RealTimeClock_write_byte
  3661                           ;!             ___hex_to_int
  3662                           ;!               ___awmod
  3663                           ;!           _RealTimeClock_get_minutes
  3664                           ;!             _RealTimeClock_read_byte
  3665                           ;!             _RealTimeClock_write_byte
  3666                           ;!             ___hex_to_int
  3667                           ;!               ___awmod
  3668                           ;!           _RealTimeClock_get_seconds
  3669                           ;!             _RealTimeClock_read_byte
  3670                           ;!             _RealTimeClock_write_byte
  3671                           ;!             ___hex_to_int
  3672                           ;!               ___awmod
  3673                           ;!           ___awdiv
  3674                           ;!           ___awmod
  3675                           ;!         _LCD_SecondLine
  3676                           ;!           _LCD_Command
  3677                           ;!             _LCD_Busy
  3678                           ;!         _LCD_SendString
  3679                           ;!           _LCD_SendData
  3680                           ;!             _LCD_Busy
  3681                           ;!       _Main_Delay
  3682                           ;!       _SetDate
  3683                           ;!         _CheckDay
  3684                           ;!         _Keypad_Scan
  3685                           ;!           _Key_Delay
  3686                           ;!         _LCD_Command
  3687                           ;!           _LCD_Busy
  3688                           ;!         _LCD_SendString
  3689                           ;!           _LCD_SendData
  3690                           ;!             _LCD_Busy
  3691                           ;!         _Main_Delay
  3692                           ;!         _RealTimeClock_get_day_of_month
  3693                           ;!           _RealTimeClock_read_byte
  3694                           ;!           _RealTimeClock_write_byte
  3695                           ;!           ___hex_to_int
  3696                           ;!             ___awmod
  3697                           ;!         _RealTimeClock_get_month
  3698                           ;!           _RealTimeClock_read_byte
  3699                           ;!           _RealTimeClock_write_byte
  3700                           ;!           ___hex_to_int
  3701                           ;!             ___awmod
  3702                           ;!         _RealTimeClock_get_year
  3703                           ;!           _RealTimeClock_read_byte
  3704                           ;!           _RealTimeClock_write_byte
  3705                           ;!           ___hex_to_int
  3706                           ;!             ___awmod
  3707                           ;!         _RealTimeClock_set_day_of_month
  3708                           ;!           _RealTimeClock_write_byte
  3709                           ;!           ___int_to_hex
  3710                           ;!             ___awmod
  3711                           ;!         _RealTimeClock_set_day_of_week
  3712                           ;!           _RealTimeClock_write_byte
  3713                           ;!           ___int_to_hex
  3714                           ;!             ___awmod
  3715                           ;!         _RealTimeClock_set_month
  3716                           ;!           _RealTimeClock_write_byte
  3717                           ;!           ___int_to_hex
  3718                           ;!             ___awmod
  3719                           ;!         _RealTimeClock_set_year
  3720                           ;!           _RealTimeClock_write_byte
  3721                           ;!           ___int_to_hex
  3722                           ;!             ___awmod
  3723                           ;!         ___awdiv
  3724                           ;!         ___awmod
  3725                           ;!       _SetTime
  3726                           ;!         _Keypad_Scan
  3727                           ;!           _Key_Delay
  3728                           ;!         _LCD_Command
  3729                           ;!           _LCD_Busy
  3730                           ;!         _LCD_SendString
  3731                           ;!           _LCD_SendData
  3732                           ;!             _LCD_Busy
  3733                           ;!         _Main_Delay
  3734                           ;!         _RealTimeClock_get_hours
  3735                           ;!           _RealTimeClock_read_byte
  3736                           ;!           _RealTimeClock_write_byte
  3737                           ;!           ___hex_to_int
  3738                           ;!             ___awmod
  3739                           ;!         _RealTimeClock_get_minutes
  3740                           ;!           _RealTimeClock_read_byte
  3741                           ;!           _RealTimeClock_write_byte
  3742                           ;!           ___hex_to_int
  3743                           ;!             ___awmod
  3744                           ;!         _RealTimeClock_get_seconds
  3745                           ;!           _RealTimeClock_read_byte
  3746                           ;!           _RealTimeClock_write_byte
  3747                           ;!           ___hex_to_int
  3748                           ;!             ___awmod
  3749                           ;!         _RealTimeClock_set_hours
  3750                           ;!           _RealTimeClock_write_byte
  3751                           ;!           ___int_to_hex
  3752                           ;!             ___awmod
  3753                           ;!         _RealTimeClock_set_minutes
  3754                           ;!           _RealTimeClock_write_byte
  3755                           ;!           ___int_to_hex
  3756                           ;!             ___awmod
  3757                           ;!         _RealTimeClock_set_seconds
  3758                           ;!           _RealTimeClock_write_byte
  3759                           ;!           ___int_to_hex
  3760                           ;!             ___awmod
  3761                           ;!         ___awdiv
  3762                           ;!         ___awmod
  3763                           ;!       _SoundOff
  3764                           ;!       _SwapToHeatingDisplay
  3765                           ;!         _Keypad_Scan
  3766                           ;!           _Key_Delay
  3767                           ;!         _LCD_Command
  3768                           ;!           _LCD_Busy
  3769                           ;!         _LCD_SendString
  3770                           ;!           _LCD_SendData
  3771                           ;!             _LCD_Busy
  3772                           ;!       _Switch24Hour
  3773                           ;!         _LCD_Command
  3774                           ;!           _LCD_Busy
  3775                           ;!         _LCD_SendString
  3776                           ;!           _LCD_SendData
  3777                           ;!             _LCD_Busy
  3778                           ;!       ___wmul
  3779                           ;!     _Keypad_Scan
  3780                           ;!       _Key_Delay
  3781                           ;!     _LCD_Command
  3782                           ;!       _LCD_Busy
  3783                           ;!     _LCD_SendString
  3784                           ;!       _LCD_SendData
  3785                           ;!         _LCD_Busy
  3786                           ;!     _SetDate
  3787                           ;!       _CheckDay
  3788                           ;!       _Keypad_Scan
  3789                           ;!         _Key_Delay
  3790                           ;!       _LCD_Command
  3791                           ;!         _LCD_Busy
  3792                           ;!       _LCD_SendString
  3793                           ;!         _LCD_SendData
  3794                           ;!           _LCD_Busy
  3795                           ;!       _Main_Delay
  3796                           ;!       _RealTimeClock_get_day_of_month
  3797                           ;!         _RealTimeClock_read_byte
  3798                           ;!         _RealTimeClock_write_byte
  3799                           ;!         ___hex_to_int
  3800                           ;!           ___awmod
  3801                           ;!       _RealTimeClock_get_month
  3802                           ;!         _RealTimeClock_read_byte
  3803                           ;!         _RealTimeClock_write_byte
  3804                           ;!         ___hex_to_int
  3805                           ;!           ___awmod
  3806                           ;!       _RealTimeClock_get_year
  3807                           ;!         _RealTimeClock_read_byte
  3808                           ;!         _RealTimeClock_write_byte
  3809                           ;!         ___hex_to_int
  3810                           ;!           ___awmod
  3811                           ;!       _RealTimeClock_set_day_of_month
  3812                           ;!         _RealTimeClock_write_byte
  3813                           ;!         ___int_to_hex
  3814                           ;!           ___awmod
  3815                           ;!       _RealTimeClock_set_day_of_week
  3816                           ;!         _RealTimeClock_write_byte
  3817                           ;!         ___int_to_hex
  3818                           ;!           ___awmod
  3819                           ;!       _RealTimeClock_set_month
  3820                           ;!         _RealTimeClock_write_byte
  3821                           ;!         ___int_to_hex
  3822                           ;!           ___awmod
  3823                           ;!       _RealTimeClock_set_year
  3824                           ;!         _RealTimeClock_write_byte
  3825                           ;!         ___int_to_hex
  3826                           ;!           ___awmod
  3827                           ;!       ___awdiv
  3828                           ;!       ___awmod
  3829                           ;!     _SetTime
  3830                           ;!       _Keypad_Scan
  3831                           ;!         _Key_Delay
  3832                           ;!       _LCD_Command
  3833                           ;!         _LCD_Busy
  3834                           ;!       _LCD_SendString
  3835                           ;!         _LCD_SendData
  3836                           ;!           _LCD_Busy
  3837                           ;!       _Main_Delay
  3838                           ;!       _RealTimeClock_get_hours
  3839                           ;!         _RealTimeClock_read_byte
  3840                           ;!         _RealTimeClock_write_byte
  3841                           ;!         ___hex_to_int
  3842                           ;!           ___awmod
  3843                           ;!       _RealTimeClock_get_minutes
  3844                           ;!         _RealTimeClock_read_byte
  3845                           ;!         _RealTimeClock_write_byte
  3846                           ;!         ___hex_to_int
  3847                           ;!           ___awmod
  3848                           ;!       _RealTimeClock_get_seconds
  3849                           ;!         _RealTimeClock_read_byte
  3850                           ;!         _RealTimeClock_write_byte
  3851                           ;!         ___hex_to_int
  3852                           ;!           ___awmod
  3853                           ;!       _RealTimeClock_set_hours
  3854                           ;!         _RealTimeClock_write_byte
  3855                           ;!         ___int_to_hex
  3856                           ;!           ___awmod
  3857                           ;!       _RealTimeClock_set_minutes
  3858                           ;!         _RealTimeClock_write_byte
  3859                           ;!         ___int_to_hex
  3860                           ;!           ___awmod
  3861                           ;!       _RealTimeClock_set_seconds
  3862                           ;!         _RealTimeClock_write_byte
  3863                           ;!         ___int_to_hex
  3864                           ;!           ___awmod
  3865                           ;!       ___awdiv
  3866                           ;!       ___awmod
  3867                           ;!     _SoundOff
  3868                           ;!     _SoundOn
  3869                           ;!     _SwapToHeatingDisplay
  3870                           ;!       _Keypad_Scan
  3871                           ;!         _Key_Delay
  3872                           ;!       _LCD_Command
  3873                           ;!         _LCD_Busy
  3874                           ;!       _LCD_SendString
  3875                           ;!         _LCD_SendData
  3876                           ;!           _LCD_Busy
  3877                           ;!     _Switch24Hour
  3878                           ;!       _LCD_Command
  3879                           ;!         _LCD_Busy
  3880                           ;!       _LCD_SendString
  3881                           ;!         _LCD_SendData
  3882                           ;!           _LCD_Busy
  3883                           ;!     ___wmul
  3884                           ;!   _SoundOff
  3885                           ;!   _SwapToHeatingDisplay
  3886                           ;!     _Keypad_Scan
  3887                           ;!       _Key_Delay
  3888                           ;!     _LCD_Command
  3889                           ;!       _LCD_Busy
  3890                           ;!     _LCD_SendString
  3891                           ;!       _LCD_SendData
  3892                           ;!         _LCD_Busy
  3893                           ;!   _Switch24Hour
  3894                           ;!     _LCD_Command
  3895                           ;!       _LCD_Busy
  3896                           ;!     _LCD_SendString
  3897                           ;!       _LCD_SendData
  3898                           ;!         _LCD_Busy
  3899                           ;!   _Thermometer_Init
  3900                           ;!   ___wmul
  3901                           ;!
  3902                           
  3903                           ;! Address spaces:
  3904                           
  3905                           ;!Name               Size   Autos  Total    Cost      Usage
  3906                           ;!BANK3               60      0      54       9       87.5%
  3907                           ;!BITBANK3            60      0       0       8        0.0%
  3908                           ;!SFR3                 0      0       0       4        0.0%
  3909                           ;!BITSFR3              0      0       0       4        0.0%
  3910                           ;!BANK2               60      0       0      11        0.0%
  3911                           ;!BITBANK2            60      0       0      10        0.0%
  3912                           ;!SFR2                 0      0       0       5        0.0%
  3913                           ;!BITSFR2              0      0       0       5        0.0%
  3914                           ;!BANK1               50     1C      50       7      100.0%
  3915                           ;!BITBANK1            50      0       0       6        0.0%
  3916                           ;!SFR1                 0      0       0       2        0.0%
  3917                           ;!BITSFR1              0      0       0       2        0.0%
  3918                           ;!BANK0               50     41      50       5      100.0%
  3919                           ;!BITBANK0            50      0       0       4        0.0%
  3920                           ;!SFR0                 0      0       0       1        0.0%
  3921                           ;!BITSFR0              0      0       0       1        0.0%
  3922                           ;!COMMON               E      E       E       1      100.0%
  3923                           ;!BITCOMMON            E      0       0       0        0.0%
  3924                           ;!CODE                 0      0       0       0        0.0%
  3925                           ;!DATA                 0      0     102      12        0.0%
  3926                           ;!ABS                  0      0     102       3        0.0%
  3927                           ;!NULL                 0      0       0       0        0.0%
  3928                           ;!STACK                0      0       0       2        0.0%
  3929                           ;!EEDATA             100      0       0       0        0.0%
  3930                           
  3931                           	global	_main
  3932                           
  3933 ;; *************** function _main *****************
  3934 ;; Defined at:
  3935 ;;		line 949 in file "main.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;		None
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  start_date     16    0[BANK1 ] int [8]
  3940 ;;  Key             2   26[BANK1 ] int 
  3941 ;;  temp3           2   24[BANK1 ] int 
  3942 ;;  temp2           2   22[BANK1 ] int 
  3943 ;;  temp            2   20[BANK1 ] int 
  3944 ;;  tempdectenth    2   18[BANK1 ] int 
  3945 ;;  tempdec         2   16[BANK1 ] int 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : B00/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3955 ;;      Params:         0       0       0       0       0
  3956 ;;      Locals:         0       0      28       0       0
  3957 ;;      Temps:          0       4       0       0       0
  3958 ;;      Totals:         0       4      28       0       0
  3959 ;;Total ram usage:       32 bytes
  3960 ;; Hardware stack levels required when called:    7
  3961 ;; This function calls:
  3962 ;;		_Buzzer_Init
  3963 ;;		_ChangeTrigger
  3964 ;;		_CheckDay
  3965 ;;		_CheckTime
  3966 ;;		_DateDayScreen
  3967 ;;		_HeatingControlOff
  3968 ;;		_Init_Keypad
  3969 ;;		_Keypad_Scan
  3970 ;;		_LCD_Command
  3971 ;;		_LCD_Init
  3972 ;;		_MainScreen
  3973 ;;		_Main_Delay
  3974 ;;		_RealTimeClock_get_day_of_week
  3975 ;;		_RealTimeClock_init
  3976 ;;		_RealTimeClock_set_burst_time
  3977 ;;		_SetDate
  3978 ;;		_SetTime
  3979 ;;		_SoundAlarm
  3980 ;;		_SoundOff
  3981 ;;		_SwapToHeatingDisplay
  3982 ;;		_Switch24Hour
  3983 ;;		_Thermometer_Init
  3984 ;;		___wmul
  3985 ;; This function is called by:
  3986 ;;		Startup code after reset
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  3990                           	file	"main.c"
  3991                           	line	949
  3992                           global __pmaintext
  3993                           __pmaintext:	;psect for function _main
  3994  0A8B                     psect	maintext
  3995                           	file	"main.c"
  3996                           	line	949
  3997                           	global	__size_of_main
  3998                           	__size_of_main	equ	__end_of_main-_main
  3999  0286                     	
  4000                           _main:	
  4001  0A8B                     ;incstack = 0
  4002                           	opt	stack 1
  4003                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4004                           	line	952
  4005                           	
  4006                           l4668:	
  4007  0A8B                     ;main.c: 952: 
  4008                           	fcall	_LCD_Init
  4009  0A8B  160A  158A  2011  120A  158A  	line	953
  4010                           ;main.c: 953:     LCD_Command(0x38);
  4011                           	fcall	_Init_Keypad
  4012  0A90  160A  158A  2026  120A  158A  	line	954
  4013                           ;main.c: 954:     SoundOff();
  4014                           	fcall	_Thermometer_Init
  4015  0A95  160A  158A  201F  120A  158A  	line	955
  4016                           	
  4017                           l4670:	
  4018  0A9A                     ;main.c: 955: 
  4019                           	fcall	_RealTimeClock_init
  4020  0A9A  160A  158A  215B  120A  158A  	line	957
  4021                           	
  4022                           l4672:	
  4023  0A9F                     ;main.c: 957:     CheckDay();
  4024                           	movlw	(main@start_date)&0ffh
  4025  0A9F  30BE               	movwf	fsr0
  4026  0AA0  0084               	movlw	low(main@F1009)
  4027  0AA1  3090               	bcf	status, 5	;RP0=0, select bank0
  4028  0AA2  1283               	bcf	status, 6	;RP1=0, select bank0
  4029  0AA3  1303               	movwf	(??_main+0)+0
  4030  0AA4  00DD               	movf	fsr0,w
  4031  0AA5  0804               	movwf	((??_main+0)+0+1)
  4032  0AA6  00DE               	movlw	16
  4033  0AA7  3010               	movwf	((??_main+0)+0+2)
  4034  0AA8  00DF               u4410:
  4035  0AA9                     	movf	(??_main+0)+0,w
  4036  0AA9  085D               	movwf	fsr0
  4037  0AAA  0084               	bsf	status, 7	;select IRP bank3
  4038  0AAB  1783               	
  4039                           	movf	indf,w
  4040  0AAC  0800               	movwf	((??_main+0)+0+3)
  4041  0AAD  00E0               	incf	(??_main+0)+0,f
  4042  0AAE  0ADD               	movf	((??_main+0)+0+1),w
  4043  0AAF  085E               	movwf	fsr0
  4044  0AB0  0084               	bcf	status, 7	;select IRP bank1
  4045  0AB1  1383               	
  4046                           	movf	((??_main+0)+0+3),w
  4047  0AB2  0860               	movwf	indf
  4048  0AB3  0080               	incf	((??_main+0)+0+1),f
  4049  0AB4  0ADE               	decfsz	((??_main+0)+0+2),f
  4050  0AB5  0BDF               	goto	u4410
  4051  0AB6  2AA9               	
  4052                           	line	958
  4053                           	
  4054                           l4674:	
  4055  0AB7                     ;main.c: 958:     CheckTime();
  4056                           	movlw	(low(main@start_date|((0x0)<<8)))&0ffh
  4057  0AB7  30BE               	fcall	_RealTimeClock_set_burst_time
  4058  0AB8  160A  158A  2615  120A  158A  	line	961
  4059                           ;main.c: 961:     {
  4060                           	fcall	_Buzzer_Init
  4061  0ABD  160A  158A  2005  120A  158A  	line	962
  4062                           	
  4063                           l4676:	
  4064  0AC2                     ;main.c: 962:         day_of_week = RealTimeClock_get_day_of_week();
  4065                           	bsf	status, 5	;RP0=1, select bank1
  4066  0AC2  1683               	bcf	status, 6	;RP1=0, select bank1
  4067  0AC3  1303               	clrf	(main@Key)^080h
  4068  0AC4  01D8               	clrf	(main@Key+1)^080h
  4069  0AC5  01D9               	line	963
  4070                           	
  4071                           l4678:	
  4072  0AC6                     ;main.c: 963: 
  4073                           	clrf	(_DisableAlarm)^080h
  4074  0AC6  01B1               	clrf	(_DisableAlarm+1)^080h
  4075  0AC7  01B2               	line	964
  4076                           	
  4077                           l4680:	
  4078  0AC8                     ;main.c: 964:         LCD_Command(0x03);
  4079                           	movlw	01h
  4080  0AC8  3001               	movwf	(_isWeekDay)^080h
  4081  0AC9  00AF               	movlw	0
  4082  0ACA  3000               	movwf	((_isWeekDay)^080h)+1
  4083  0ACB  00B0               	line	966
  4084                           	
  4085                           l4682:	
  4086  0ACC                     ;main.c: 965: ;main.c: 966: 
  4087                           	movlw	01h
  4088  0ACC  3001               	movwf	(_IsHeatingOn)^080h
  4089  0ACD  00B3               	movlw	0
  4090  0ACE  3000               	movwf	((_IsHeatingOn)^080h)+1
  4091  0ACF  00B4               	line	967
  4092                           	
  4093                           l4684:	
  4094  0AD0                     ;main.c: 967:         temp = tempBuffer[0] - 48;
  4095                           	movlw	01h
  4096  0AD0  3001               	movwf	(_is24Hour)^080h
  4097  0AD1  00AD               	movlw	0
  4098  0AD2  3000               	movwf	((_is24Hour)^080h)+1
  4099  0AD3  00AE               	line	969
  4100                           ;main.c: 969:         temp3 = (temp * 10) + temp2;
  4101                           	movlw	low(0Ch)
  4102  0AD4  300C               	fcall	_LCD_Command
  4103  0AD5  160A  158A  202E  120A  158A  	line	971
  4104                           ;main.c: 971: 
  4105                           	movlw	low(01h)
  4106  0ADA  3001               	fcall	_LCD_Command
  4107  0ADB  160A  158A  202E  120A  158A  	line	973
  4108                           ;main.c: 973:         tempdec = tempBuffer[2];
  4109                           	movlw	low(03h)
  4110  0AE0  3003               	fcall	_LCD_Command
  4111  0AE1  160A  158A  202E  120A  158A  	line	975
  4112                           ;main.c: 975:         previousTemp[1] = tempdec;
  4113                           	movlw	low(038h)
  4114  0AE6  3038               	fcall	_LCD_Command
  4115  0AE7  160A  158A  202E  120A  158A  	line	976
  4116                           	
  4117                           l4686:	
  4118  0AEC                     ;main.c: 976:         previousTemp[2] = tempdectenth;
  4119                           	fcall	_SoundOff
  4120  0AEC  160A  158A  2009  120A  158A  	line	978
  4121                           	
  4122                           l4688:	
  4123  0AF1                     ;main.c: 978:         Key = Keypad_Scan();
  4124                           	fcall	_RealTimeClock_get_day_of_week
  4125  0AF1  160A  158A  2223  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  4126  0AF6  1283               	bcf	status, 6	;RP1=0, select bank0
  4127  0AF7  1303               	movf	(1+(?_RealTimeClock_get_day_of_week)),w
  4128  0AF8  0826               	movwf	(_day_of_week+1)
  4129  0AF9  00EE               	movf	(0+(?_RealTimeClock_get_day_of_week)),w
  4130  0AFA  0825               	movwf	(_day_of_week)
  4131  0AFB  00ED               	line	979
  4132                           	
  4133                           l4690:	
  4134  0AFC                     ;main.c: 979:         MainScreen();
  4135                           	fcall	_CheckDay
  4136  0AFC  120A  118A  2004  120A  158A  	line	980
  4137                           	
  4138                           l4692:	
  4139  0B01                     ;main.c: 980: 
  4140                           	fcall	_CheckTime
  4141  0B01  160A  118A  2158  120A  158A  	line	981
  4142                           	
  4143                           l4694:	
  4144  0B06                     ;main.c: 981: 
  4145                           	movlw	032h
  4146  0B06  3032               	movwf	(Main_Delay@k)
  4147  0B07  00F0               	movlw	0
  4148  0B08  3000               	movwf	((Main_Delay@k))+1
  4149  0B09  00F1               	fcall	_Main_Delay
  4150  0B0A  160A  158A  2363  120A  158A  	goto	l4696
  4151  0B0F  2B10               	line	982
  4152                           ;main.c: 982:         temp = tempBuffer[0] - 48;
  4153                           	
  4154                           l362:	
  4155  0B10                     	line	984
  4156                           	
  4157                           l4696:	
  4158  0B10                     ;main.c: 983:         temp2 = tempBuffer[1] - 48;;main.c: 984:         temp3 = (temp * 1
                                 0) + temp2;
  4159                           	fcall	_RealTimeClock_get_day_of_week
  4160  0B10  160A  158A  2223  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  4161  0B15  1283               	bcf	status, 6	;RP1=0, select bank0
  4162  0B16  1303               	movf	(1+(?_RealTimeClock_get_day_of_week)),w
  4163  0B17  0826               	movwf	(_day_of_week+1)
  4164  0B18  00EE               	movf	(0+(?_RealTimeClock_get_day_of_week)),w
  4165  0B19  0825               	movwf	(_day_of_week)
  4166  0B1A  00ED               	line	986
  4167                           	
  4168                           l4698:	
  4169  0B1B                     ;main.c: 986: 
  4170                           	movlw	low(03h)
  4171  0B1B  3003               	fcall	_LCD_Command
  4172  0B1C  160A  158A  202E  120A  158A  	line	989
  4173                           	
  4174                           l4700:	
  4175  0B21                     ;main.c: 989: 
  4176                           	bsf	status, 5	;RP0=1, select bank1
  4177  0B21  1683               	bcf	status, 6	;RP1=0, select bank1
  4178  0B22  1303               	movf	(_tempBuffer)^080h,w
  4179  0B23  086A               	addlw	low(-48)
  4180  0B24  3ED0               	movwf	(main@temp)^080h
  4181  0B25  00D2               	movlw	high(-48)
  4182  0B26  30FF               	skipnc
  4183  0B27  1803               	movlw	(high(-48)+1)&0ffh
  4184  0B28  3000               	movwf	((main@temp)^080h)+1
  4185  0B29  00D3               	line	990
  4186                           	
  4187                           l4702:	
  4188  0B2A                     ;main.c: 990:         if (Key == 1) {
  4189                           	movf	0+(_tempBuffer)^080h+01h,w
  4190  0B2A  086B               	addlw	low(-48)
  4191  0B2B  3ED0               	movwf	(main@temp2)^080h
  4192  0B2C  00D4               	movlw	high(-48)
  4193  0B2D  30FF               	skipnc
  4194  0B2E  1803               	movlw	(high(-48)+1)&0ffh
  4195  0B2F  3000               	movwf	((main@temp2)^080h)+1
  4196  0B30  00D5               	line	991
  4197                           	
  4198                           l4704:	
  4199  0B31                     ;main.c: 991:             ChangeTrigger(Key);
  4200                           	movf	(main@temp+1)^080h,w
  4201  0B31  0853               	movwf	(___wmul@multiplier+1)
  4202  0B32  00F1               	movf	(main@temp)^080h,w
  4203  0B33  0852               	movwf	(___wmul@multiplier)
  4204  0B34  00F0               	movlw	0Ah
  4205  0B35  300A               	movwf	(___wmul@multiplicand)
  4206  0B36  00F2               	movlw	0
  4207  0B37  3000               	movwf	((___wmul@multiplicand))+1
  4208  0B38  00F3               	fcall	___wmul
  4209  0B39  160A  118A  2009  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  4210  0B3E  1683               	bcf	status, 6	;RP1=0, select bank1
  4211  0B3F  1303               	movf	(main@temp2)^080h,w
  4212  0B40  0854               	addwf	(0+(?___wmul)),w
  4213  0B41  0770               	movwf	(main@temp3)^080h
  4214  0B42  00D6               	movf	(main@temp2+1)^080h,w
  4215  0B43  0855               	skipnc
  4216  0B44  1803               	incf	(main@temp2+1)^080h,w
  4217  0B45  0A55               	addwf	(1+(?___wmul)),w
  4218  0B46  0771               	movwf	1+(main@temp3)^080h
  4219  0B47  00D7               	line	992
  4220                           	
  4221                           l4706:	
  4222  0B48                     ;main.c: 992:         }
  4223                           	movf	(main@temp3+1)^080h,w
  4224  0B48  0857               	movwf	(_previousTemp+1)^080h
  4225  0B49  00A1               	movf	(main@temp3)^080h,w
  4226  0B4A  0856               	movwf	(_previousTemp)^080h
  4227  0B4B  00A0               	line	995
  4228                           	
  4229                           l4708:	
  4230  0B4C                     ;main.c: 995:             DateDayScreen(Key);
  4231                           	movf	0+(_tempBuffer)^080h+02h,w
  4232  0B4C  086C               	bcf	status, 5	;RP0=0, select bank0
  4233  0B4D  1283               	bcf	status, 6	;RP1=0, select bank0
  4234  0B4E  1303               	movwf	(??_main+0)+0
  4235  0B4F  00DD               	clrf	(??_main+0)+0+1
  4236  0B50  01DE               	movf	0+(??_main+0)+0,w
  4237  0B51  085D               	bsf	status, 5	;RP0=1, select bank1
  4238  0B52  1683               	bcf	status, 6	;RP1=0, select bank1
  4239  0B53  1303               	movwf	(main@tempdec)^080h
  4240  0B54  00CE               	bcf	status, 5	;RP0=0, select bank0
  4241  0B55  1283               	bcf	status, 6	;RP1=0, select bank0
  4242  0B56  1303               	movf	1+(??_main+0)+0,w
  4243  0B57  085E               	bsf	status, 5	;RP0=1, select bank1
  4244  0B58  1683               	bcf	status, 6	;RP1=0, select bank1
  4245  0B59  1303               	movwf	(main@tempdec+1)^080h
  4246  0B5A  00CF               	line	996
  4247                           	
  4248                           l4710:	
  4249  0B5B                     ;main.c: 996:         }
  4250                           	movf	0+(_tempBuffer)^080h+03h,w
  4251  0B5B  086D               	bcf	status, 5	;RP0=0, select bank0
  4252  0B5C  1283               	bcf	status, 6	;RP1=0, select bank0
  4253  0B5D  1303               	movwf	(??_main+0)+0
  4254  0B5E  00DD               	clrf	(??_main+0)+0+1
  4255  0B5F  01DE               	movf	0+(??_main+0)+0,w
  4256  0B60  085D               	bsf	status, 5	;RP0=1, select bank1
  4257  0B61  1683               	bcf	status, 6	;RP1=0, select bank1
  4258  0B62  1303               	movwf	(main@tempdectenth)^080h
  4259  0B63  00D0               	bcf	status, 5	;RP0=0, select bank0
  4260  0B64  1283               	bcf	status, 6	;RP1=0, select bank0
  4261  0B65  1303               	movf	1+(??_main+0)+0,w
  4262  0B66  085E               	bsf	status, 5	;RP0=1, select bank1
  4263  0B67  1683               	bcf	status, 6	;RP1=0, select bank1
  4264  0B68  1303               	movwf	(main@tempdectenth+1)^080h
  4265  0B69  00D1               	line	997
  4266                           	
  4267                           l4712:	
  4268  0B6A                     ;main.c: 997: 
  4269                           	movf	(main@tempdec+1)^080h,w
  4270  0B6A  084F               	movwf	1+(_previousTemp)^080h+02h
  4271  0B6B  00A3               	movf	(main@tempdec)^080h,w
  4272  0B6C  084E               	movwf	0+(_previousTemp)^080h+02h
  4273  0B6D  00A2               	line	998
  4274                           	
  4275                           l4714:	
  4276  0B6E                     ;main.c: 998:         if (Key == 7) {
  4277                           	movf	(main@tempdectenth+1)^080h,w
  4278  0B6E  0851               	movwf	1+(_previousTemp)^080h+04h
  4279  0B6F  00A5               	movf	(main@tempdectenth)^080h,w
  4280  0B70  0850               	movwf	0+(_previousTemp)^080h+04h
  4281  0B71  00A4               	line	1000
  4282                           	
  4283                           l4716:	
  4284  0B72                     ;main.c: 1000:         }
  4285                           	fcall	_Keypad_Scan
  4286  0B72  120A  118A  2051  120A  158A  	movf	(1+(?_Keypad_Scan)),w
  4287  0B77  0877               	bsf	status, 5	;RP0=1, select bank1
  4288  0B78  1683               	bcf	status, 6	;RP1=0, select bank1
  4289  0B79  1303               	movwf	(main@Key+1)^080h
  4290  0B7A  00D9               	movf	(0+(?_Keypad_Scan)),w
  4291  0B7B  0876               	movwf	(main@Key)^080h
  4292  0B7C  00D8               	line	1001
  4293                           	
  4294                           l4718:	
  4295  0B7D                     ;main.c: 1001: 
  4296                           	fcall	_MainScreen
  4297  0B7D  160A  158A  22BF  120A  158A  	line	1004
  4298                           	
  4299                           l4720:	
  4300  0B82                     ;main.c: 1004:         }
  4301                           	bsf	status, 5	;RP0=1, select bank1
  4302  0B82  1683               	bcf	status, 6	;RP1=0, select bank1
  4303  0B83  1303               	movf	(_tempBuffer)^080h,w
  4304  0B84  086A               	addlw	low(-48)
  4305  0B85  3ED0               	movwf	(main@temp)^080h
  4306  0B86  00D2               	movlw	high(-48)
  4307  0B87  30FF               	skipnc
  4308  0B88  1803               	movlw	(high(-48)+1)&0ffh
  4309  0B89  3000               	movwf	((main@temp)^080h)+1
  4310  0B8A  00D3               	line	1005
  4311                           	
  4312                           l4722:	
  4313  0B8B                     ;main.c: 1005: 
  4314                           	movf	0+(_tempBuffer)^080h+01h,w
  4315  0B8B  086B               	addlw	low(-48)
  4316  0B8C  3ED0               	movwf	(main@temp2)^080h
  4317  0B8D  00D4               	movlw	high(-48)
  4318  0B8E  30FF               	skipnc
  4319  0B8F  1803               	movlw	(high(-48)+1)&0ffh
  4320  0B90  3000               	movwf	((main@temp2)^080h)+1
  4321  0B91  00D5               	line	1006
  4322                           	
  4323                           l4724:	
  4324  0B92                     ;main.c: 1006:         if(Key == 8)
  4325                           	movf	(main@temp+1)^080h,w
  4326  0B92  0853               	movwf	(___wmul@multiplier+1)
  4327  0B93  00F1               	movf	(main@temp)^080h,w
  4328  0B94  0852               	movwf	(___wmul@multiplier)
  4329  0B95  00F0               	movlw	0Ah
  4330  0B96  300A               	movwf	(___wmul@multiplicand)
  4331  0B97  00F2               	movlw	0
  4332  0B98  3000               	movwf	((___wmul@multiplicand))+1
  4333  0B99  00F3               	fcall	___wmul
  4334  0B9A  160A  118A  2009  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  4335  0B9F  1683               	bcf	status, 6	;RP1=0, select bank1
  4336  0BA0  1303               	movf	(main@temp2)^080h,w
  4337  0BA1  0854               	addwf	(0+(?___wmul)),w
  4338  0BA2  0770               	movwf	(main@temp3)^080h
  4339  0BA3  00D6               	movf	(main@temp2+1)^080h,w
  4340  0BA4  0855               	skipnc
  4341  0BA5  1803               	incf	(main@temp2+1)^080h,w
  4342  0BA6  0A55               	addwf	(1+(?___wmul)),w
  4343  0BA7  0771               	movwf	1+(main@temp3)^080h
  4344  0BA8  00D7               	line	1009
  4345                           	
  4346                           l4726:	
  4347  0BA9                     ;main.c: 1009:         }
  4348                           	movf	0+(_tempBuffer)^080h+03h,w
  4349  0BA9  086D               	bcf	status, 5	;RP0=0, select bank0
  4350  0BAA  1283               	bcf	status, 6	;RP1=0, select bank0
  4351  0BAB  1303               	movwf	(??_main+0)+0
  4352  0BAC  00DD               	clrf	(??_main+0)+0+1
  4353  0BAD  01DE               	movf	0+(??_main+0)+0,w
  4354  0BAE  085D               	bsf	status, 5	;RP0=1, select bank1
  4355  0BAF  1683               	bcf	status, 6	;RP1=0, select bank1
  4356  0BB0  1303               	movwf	(main@tempdec)^080h
  4357  0BB1  00CE               	bcf	status, 5	;RP0=0, select bank0
  4358  0BB2  1283               	bcf	status, 6	;RP1=0, select bank0
  4359  0BB3  1303               	movf	1+(??_main+0)+0,w
  4360  0BB4  085E               	bsf	status, 5	;RP0=1, select bank1
  4361  0BB5  1683               	bcf	status, 6	;RP1=0, select bank1
  4362  0BB6  1303               	movwf	(main@tempdec+1)^080h
  4363  0BB7  00CF               	line	1010
  4364                           	
  4365                           l4728:	
  4366  0BB8                     ;main.c: 1010: 
  4367                           	movf	0+(_tempBuffer)^080h+04h,w
  4368  0BB8  086E               	bcf	status, 5	;RP0=0, select bank0
  4369  0BB9  1283               	bcf	status, 6	;RP1=0, select bank0
  4370  0BBA  1303               	movwf	(??_main+0)+0
  4371  0BBB  00DD               	clrf	(??_main+0)+0+1
  4372  0BBC  01DE               	movf	0+(??_main+0)+0,w
  4373  0BBD  085D               	bsf	status, 5	;RP0=1, select bank1
  4374  0BBE  1683               	bcf	status, 6	;RP1=0, select bank1
  4375  0BBF  1303               	movwf	(main@tempdectenth)^080h
  4376  0BC0  00D0               	bcf	status, 5	;RP0=0, select bank0
  4377  0BC1  1283               	bcf	status, 6	;RP1=0, select bank0
  4378  0BC2  1303               	movf	1+(??_main+0)+0,w
  4379  0BC3  085E               	bsf	status, 5	;RP0=1, select bank1
  4380  0BC4  1683               	bcf	status, 6	;RP1=0, select bank1
  4381  0BC5  1303               	movwf	(main@tempdectenth+1)^080h
  4382  0BC6  00D1               	line	1012
  4383                           	
  4384                           l4730:	
  4385  0BC7                     ;main.c: 1012:         {
  4386                           		decf	((main@Key)^080h),w
  4387  0BC7  0358               iorwf	((main@Key+1)^080h),w
  4388  0BC8  0459               	btfss	status,2
  4389  0BC9  1D03               	goto	u4421
  4390  0BCA  2BCC               	goto	u4420
  4391  0BCB  2BCD               u4421:
  4392  0BCC                     	goto	l4734
  4393  0BCC  2BD4               u4420:
  4394  0BCD                     	line	1013
  4395                           	
  4396                           l4732:	
  4397  0BCD                     ;main.c: 1013:             SetDate(Key);
  4398                           	movf	(main@Key)^080h,w
  4399  0BCD  0858               	fcall	_ChangeTrigger
  4400  0BCE  160A  118A  2669  120A  158A  	goto	l4734
  4401  0BD3  2BD4               	line	1014
  4402                           ;main.c: 1014:         }
  4403                           	
  4404                           l363:	
  4405  0BD4                     	line	1016
  4406                           	
  4407                           l4734:	
  4408  0BD4                     ;main.c: 1016:         if (temp3 >= triggerTemp[0]) {
  4409                           		movlw	6
  4410  0BD4  3006               	bsf	status, 5	;RP0=1, select bank1
  4411  0BD5  1683               	bcf	status, 6	;RP1=0, select bank1
  4412  0BD6  1303               	xorwf	((main@Key)^080h),w
  4413  0BD7  0658               iorwf	((main@Key+1)^080h),w
  4414  0BD8  0459               	btfss	status,2
  4415  0BD9  1D03               	goto	u4431
  4416  0BDA  2BDC               	goto	u4430
  4417  0BDB  2BDD               u4431:
  4418  0BDC                     	goto	l4738
  4419  0BDC  2BED               u4430:
  4420  0BDD                     	line	1017
  4421                           	
  4422                           l4736:	
  4423  0BDD                     ;main.c: 1017:             IsHeatingOn = 0;
  4424                           	movf	(main@Key+1)^080h,w
  4425  0BDD  0859               	bcf	status, 5	;RP0=0, select bank0
  4426  0BDE  1283               	bcf	status, 6	;RP1=0, select bank0
  4427  0BDF  1303               	movwf	(DateDayScreen@Key+1)
  4428  0BE0  00B6               	bsf	status, 5	;RP0=1, select bank1
  4429  0BE1  1683               	bcf	status, 6	;RP1=0, select bank1
  4430  0BE2  1303               	movf	(main@Key)^080h,w
  4431  0BE3  0858               	bcf	status, 5	;RP0=0, select bank0
  4432  0BE4  1283               	bcf	status, 6	;RP1=0, select bank0
  4433  0BE5  1303               	movwf	(DateDayScreen@Key)
  4434  0BE6  00B5               	fcall	_DateDayScreen
  4435  0BE7  160A  118A  2031  120A  158A  	goto	l4738
  4436  0BEC  2BED               	line	1018
  4437                           ;main.c: 1018:             HeatingControlOff(Key, temp, temp2, temp3);
  4438                           	
  4439                           l364:	
  4440  0BED                     	line	1020
  4441                           	
  4442                           l4738:	
  4443  0BED                     ;main.c: 1020:         if (temp3 <= triggerTemp[0] && temp3 < previousTemp[0] && IsHeati
                                 ngOn == 1 && DisableAlarm == 0) {
  4444                           		movlw	7
  4445  0BED  3007               	bsf	status, 5	;RP0=1, select bank1
  4446  0BEE  1683               	bcf	status, 6	;RP1=0, select bank1
  4447  0BEF  1303               	xorwf	((main@Key)^080h),w
  4448  0BF0  0658               iorwf	((main@Key+1)^080h),w
  4449  0BF1  0459               	btfss	status,2
  4450  0BF2  1D03               	goto	u4441
  4451  0BF3  2BF5               	goto	u4440
  4452  0BF4  2BF6               u4441:
  4453  0BF5                     	goto	l4742
  4454  0BF5  2C00               u4440:
  4455  0BF6                     	line	1021
  4456                           	
  4457                           l4740:	
  4458  0BF6                     ;main.c: 1021:             SoundAlarm(Key, temp, temp2, temp3);
  4459                           	movf	(main@Key+1)^080h,w
  4460  0BF6  0859               	movwf	(SwapToHeatingDisplay@Key+1)
  4461  0BF7  00F9               	movf	(main@Key)^080h,w
  4462  0BF8  0858               	movwf	(SwapToHeatingDisplay@Key)
  4463  0BF9  00F8               	fcall	_SwapToHeatingDisplay
  4464  0BFA  160A  158A  278D  120A  158A  	goto	l4742
  4465  0BFF  2C00               	line	1022
  4466                           ;main.c: 1022:         }
  4467                           	
  4468                           l365:	
  4469  0C00                     	line	1024
  4470                           	
  4471                           l4742:	
  4472  0C00                     ;main.c: 1024:         CheckTime();
  4473                           		movlw	9
  4474  0C00  3009               	bsf	status, 5	;RP0=1, select bank1
  4475  0C01  1683               	bcf	status, 6	;RP1=0, select bank1
  4476  0C02  1303               	xorwf	((main@Key)^080h),w
  4477  0C03  0658               iorwf	((main@Key+1)^080h),w
  4478  0C04  0459               	btfss	status,2
  4479  0C05  1D03               	goto	u4451
  4480  0C06  2C08               	goto	u4450
  4481  0C07  2C09               u4451:
  4482  0C08                     	goto	l4746
  4483  0C08  2C19               u4450:
  4484  0C09                     	line	1025
  4485                           	
  4486                           l4744:	
  4487  0C09                     ;main.c: 1025:     }
  4488                           	movf	(main@Key+1)^080h,w
  4489  0C09  0859               	bcf	status, 5	;RP0=0, select bank0
  4490  0C0A  1283               	bcf	status, 6	;RP1=0, select bank0
  4491  0C0B  1303               	movwf	(SetTime@Key+1)
  4492  0C0C  00A8               	bsf	status, 5	;RP0=1, select bank1
  4493  0C0D  1683               	bcf	status, 6	;RP1=0, select bank1
  4494  0C0E  1303               	movf	(main@Key)^080h,w
  4495  0C0F  0858               	bcf	status, 5	;RP0=0, select bank0
  4496  0C10  1283               	bcf	status, 6	;RP1=0, select bank0
  4497  0C11  1303               	movwf	(SetTime@Key)
  4498  0C12  00A7               	fcall	_SetTime
  4499  0C13  120A  158A  2511  120A  158A  	goto	l4746
  4500  0C18  2C19               	line	1026
  4501                           ;main.c: 1026: }
  4502                           	
  4503                           l366:	
  4504  0C19                     	line	1028
  4505                           	
  4506                           l4746:	
  4507  0C19                     		movlw	8
  4508  0C19  3008               	bsf	status, 5	;RP0=1, select bank1
  4509  0C1A  1683               	bcf	status, 6	;RP1=0, select bank1
  4510  0C1B  1303               	xorwf	((main@Key)^080h),w
  4511  0C1C  0658               iorwf	((main@Key+1)^080h),w
  4512  0C1D  0459               	btfss	status,2
  4513  0C1E  1D03               	goto	u4461
  4514  0C1F  2C21               	goto	u4460
  4515  0C20  2C22               u4461:
  4516  0C21                     	goto	l4750
  4517  0C21  2C2C               u4460:
  4518  0C22                     	line	1030
  4519                           	
  4520                           l4748:	
  4521  0C22                     	movf	(main@Key+1)^080h,w
  4522  0C22  0859               	movwf	(Switch24Hour@Key+1)
  4523  0C23  00F9               	movf	(main@Key)^080h,w
  4524  0C24  0858               	movwf	(Switch24Hour@Key)
  4525  0C25  00F8               	fcall	_Switch24Hour
  4526  0C26  160A  158A  22F2  120A  158A  	goto	l4750
  4527  0C2B  2C2C               	line	1031
  4528                           	
  4529                           l367:	
  4530  0C2C                     	line	1033
  4531                           	
  4532                           l4750:	
  4533  0C2C                     		movlw	13
  4534  0C2C  300D               	bsf	status, 5	;RP0=1, select bank1
  4535  0C2D  1683               	bcf	status, 6	;RP1=0, select bank1
  4536  0C2E  1303               	xorwf	((main@Key)^080h),w
  4537  0C2F  0658               iorwf	((main@Key+1)^080h),w
  4538  0C30  0459               	btfss	status,2
  4539  0C31  1D03               	goto	u4471
  4540  0C32  2C34               	goto	u4470
  4541  0C33  2C35               u4471:
  4542  0C34                     	goto	l4754
  4543  0C34  2C45               u4470:
  4544  0C35                     	line	1035
  4545                           	
  4546                           l4752:	
  4547  0C35                     	movf	(main@Key+1)^080h,w
  4548  0C35  0859               	bcf	status, 5	;RP0=0, select bank0
  4549  0C36  1283               	bcf	status, 6	;RP1=0, select bank0
  4550  0C37  1303               	movwf	(SetDate@Key+1)
  4551  0C38  00A8               	bsf	status, 5	;RP0=1, select bank1
  4552  0C39  1683               	bcf	status, 6	;RP1=0, select bank1
  4553  0C3A  1303               	movf	(main@Key)^080h,w
  4554  0C3B  0858               	bcf	status, 5	;RP0=0, select bank0
  4555  0C3C  1283               	bcf	status, 6	;RP1=0, select bank0
  4556  0C3D  1303               	movwf	(SetDate@Key)
  4557  0C3E  00A7               	fcall	_SetDate
  4558  0C3F  120A  118A  2218  120A  158A  	goto	l4754
  4559  0C44  2C45               	line	1036
  4560                           	
  4561                           l368:	
  4562  0C45                     	line	1038
  4563                           	
  4564                           l4754:	
  4565  0C45                     	bsf	status, 5	;RP0=1, select bank1
  4566  0C45  1683               	bcf	status, 6	;RP1=0, select bank1
  4567  0C46  1303               	movf	(main@temp3+1)^080h,w
  4568  0C47  0857               	xorlw	80h
  4569  0C48  3A80               	bcf	status, 5	;RP0=0, select bank0
  4570  0C49  1283               	bcf	status, 6	;RP1=0, select bank0
  4571  0C4A  1303               	movwf	(??_main+0)+0
  4572  0C4B  00DD               	bsf	status, 5	;RP0=1, select bank1
  4573  0C4C  1683               	bcf	status, 6	;RP1=0, select bank1
  4574  0C4D  1303               	movf	(_triggerTemp+1)^080h,w
  4575  0C4E  085B               	xorlw	80h
  4576  0C4F  3A80               	bcf	status, 5	;RP0=0, select bank0
  4577  0C50  1283               	bcf	status, 6	;RP1=0, select bank0
  4578  0C51  1303               	subwf	(??_main+0)+0,w
  4579  0C52  025D               	skipz
  4580  0C53  1D03               	goto	u4485
  4581  0C54  2C59               	bsf	status, 5	;RP0=1, select bank1
  4582  0C55  1683               	bcf	status, 6	;RP1=0, select bank1
  4583  0C56  1303               	movf	(_triggerTemp)^080h,w
  4584  0C57  085A               	subwf	(main@temp3)^080h,w
  4585  0C58  0256               u4485:
  4586  0C59                     
  4587                           	skipc
  4588  0C59  1C03               	goto	u4481
  4589  0C5A  2C5C               	goto	u4480
  4590  0C5B  2C5D               u4481:
  4591  0C5C                     	goto	l4760
  4592  0C5C  2C95               u4480:
  4593  0C5D                     	line	1039
  4594                           	
  4595                           l4756:	
  4596  0C5D                     	bsf	status, 5	;RP0=1, select bank1
  4597  0C5D  1683               	bcf	status, 6	;RP1=0, select bank1
  4598  0C5E  1303               	clrf	(_IsHeatingOn)^080h
  4599  0C5F  01B3               	clrf	(_IsHeatingOn+1)^080h
  4600  0C60  01B4               	line	1040
  4601                           	
  4602                           l4758:	
  4603  0C61                     	movf	(main@Key+1)^080h,w
  4604  0C61  0859               	bcf	status, 5	;RP0=0, select bank0
  4605  0C62  1283               	bcf	status, 6	;RP1=0, select bank0
  4606  0C63  1303               	movwf	(HeatingControlOff@Key+1)
  4607  0C64  00C9               	bsf	status, 5	;RP0=1, select bank1
  4608  0C65  1683               	bcf	status, 6	;RP1=0, select bank1
  4609  0C66  1303               	movf	(main@Key)^080h,w
  4610  0C67  0858               	bcf	status, 5	;RP0=0, select bank0
  4611  0C68  1283               	bcf	status, 6	;RP1=0, select bank0
  4612  0C69  1303               	movwf	(HeatingControlOff@Key)
  4613  0C6A  00C8               	bsf	status, 5	;RP0=1, select bank1
  4614  0C6B  1683               	bcf	status, 6	;RP1=0, select bank1
  4615  0C6C  1303               	movf	(main@temp+1)^080h,w
  4616  0C6D  0853               	bcf	status, 5	;RP0=0, select bank0
  4617  0C6E  1283               	bcf	status, 6	;RP1=0, select bank0
  4618  0C6F  1303               	movwf	(HeatingControlOff@temp+1)
  4619  0C70  00CB               	bsf	status, 5	;RP0=1, select bank1
  4620  0C71  1683               	bcf	status, 6	;RP1=0, select bank1
  4621  0C72  1303               	movf	(main@temp)^080h,w
  4622  0C73  0852               	bcf	status, 5	;RP0=0, select bank0
  4623  0C74  1283               	bcf	status, 6	;RP1=0, select bank0
  4624  0C75  1303               	movwf	(HeatingControlOff@temp)
  4625  0C76  00CA               	bsf	status, 5	;RP0=1, select bank1
  4626  0C77  1683               	bcf	status, 6	;RP1=0, select bank1
  4627  0C78  1303               	movf	(main@temp2+1)^080h,w
  4628  0C79  0855               	bcf	status, 5	;RP0=0, select bank0
  4629  0C7A  1283               	bcf	status, 6	;RP1=0, select bank0
  4630  0C7B  1303               	movwf	(HeatingControlOff@temp2+1)
  4631  0C7C  00CD               	bsf	status, 5	;RP0=1, select bank1
  4632  0C7D  1683               	bcf	status, 6	;RP1=0, select bank1
  4633  0C7E  1303               	movf	(main@temp2)^080h,w
  4634  0C7F  0854               	bcf	status, 5	;RP0=0, select bank0
  4635  0C80  1283               	bcf	status, 6	;RP1=0, select bank0
  4636  0C81  1303               	movwf	(HeatingControlOff@temp2)
  4637  0C82  00CC               	bsf	status, 5	;RP0=1, select bank1
  4638  0C83  1683               	bcf	status, 6	;RP1=0, select bank1
  4639  0C84  1303               	movf	(main@temp3+1)^080h,w
  4640  0C85  0857               	bcf	status, 5	;RP0=0, select bank0
  4641  0C86  1283               	bcf	status, 6	;RP1=0, select bank0
  4642  0C87  1303               	movwf	(HeatingControlOff@temp3+1)
  4643  0C88  00CF               	bsf	status, 5	;RP0=1, select bank1
  4644  0C89  1683               	bcf	status, 6	;RP1=0, select bank1
  4645  0C8A  1303               	movf	(main@temp3)^080h,w
  4646  0C8B  0856               	bcf	status, 5	;RP0=0, select bank0
  4647  0C8C  1283               	bcf	status, 6	;RP1=0, select bank0
  4648  0C8D  1303               	movwf	(HeatingControlOff@temp3)
  4649  0C8E  00CE               	fcall	_HeatingControlOff
  4650  0C8F  160A  118A  252D  120A  158A  	goto	l4760
  4651  0C94  2C95               	line	1041
  4652                           	
  4653                           l369:	
  4654  0C95                     	line	1042
  4655                           	
  4656                           l4760:	
  4657  0C95                     	bsf	status, 5	;RP0=1, select bank1
  4658  0C95  1683               	bcf	status, 6	;RP1=0, select bank1
  4659  0C96  1303               	movf	(_triggerTemp+1)^080h,w
  4660  0C97  085B               	xorlw	80h
  4661  0C98  3A80               	bcf	status, 5	;RP0=0, select bank0
  4662  0C99  1283               	bcf	status, 6	;RP1=0, select bank0
  4663  0C9A  1303               	movwf	(??_main+0)+0
  4664  0C9B  00DD               	bsf	status, 5	;RP0=1, select bank1
  4665  0C9C  1683               	bcf	status, 6	;RP1=0, select bank1
  4666  0C9D  1303               	movf	(main@temp3+1)^080h,w
  4667  0C9E  0857               	xorlw	80h
  4668  0C9F  3A80               	bcf	status, 5	;RP0=0, select bank0
  4669  0CA0  1283               	bcf	status, 6	;RP1=0, select bank0
  4670  0CA1  1303               	subwf	(??_main+0)+0,w
  4671  0CA2  025D               	skipz
  4672  0CA3  1D03               	goto	u4495
  4673  0CA4  2CA9               	bsf	status, 5	;RP0=1, select bank1
  4674  0CA5  1683               	bcf	status, 6	;RP1=0, select bank1
  4675  0CA6  1303               	movf	(main@temp3)^080h,w
  4676  0CA7  0856               	subwf	(_triggerTemp)^080h,w
  4677  0CA8  025A               u4495:
  4678  0CA9                     
  4679                           	skipc
  4680  0CA9  1C03               	goto	u4491
  4681  0CAA  2CAC               	goto	u4490
  4682  0CAB  2CAD               u4491:
  4683  0CAC                     	goto	l4770
  4684  0CAC  2D07               u4490:
  4685  0CAD                     	
  4686                           l4762:	
  4687  0CAD                     	bsf	status, 5	;RP0=1, select bank1
  4688  0CAD  1683               	bcf	status, 6	;RP1=0, select bank1
  4689  0CAE  1303               	movf	(main@temp3+1)^080h,w
  4690  0CAF  0857               	xorlw	80h
  4691  0CB0  3A80               	bcf	status, 5	;RP0=0, select bank0
  4692  0CB1  1283               	bcf	status, 6	;RP1=0, select bank0
  4693  0CB2  1303               	movwf	(??_main+0)+0
  4694  0CB3  00DD               	bsf	status, 5	;RP0=1, select bank1
  4695  0CB4  1683               	bcf	status, 6	;RP1=0, select bank1
  4696  0CB5  1303               	movf	(_previousTemp+1)^080h,w
  4697  0CB6  0821               	xorlw	80h
  4698  0CB7  3A80               	bcf	status, 5	;RP0=0, select bank0
  4699  0CB8  1283               	bcf	status, 6	;RP1=0, select bank0
  4700  0CB9  1303               	subwf	(??_main+0)+0,w
  4701  0CBA  025D               	skipz
  4702  0CBB  1D03               	goto	u4505
  4703  0CBC  2CC1               	bsf	status, 5	;RP0=1, select bank1
  4704  0CBD  1683               	bcf	status, 6	;RP1=0, select bank1
  4705  0CBE  1303               	movf	(_previousTemp)^080h,w
  4706  0CBF  0820               	subwf	(main@temp3)^080h,w
  4707  0CC0  0256               u4505:
  4708  0CC1                     
  4709                           	skipnc
  4710  0CC1  1803               	goto	u4501
  4711  0CC2  2CC4               	goto	u4500
  4712  0CC3  2CC5               u4501:
  4713  0CC4                     	goto	l4770
  4714  0CC4  2D07               u4500:
  4715  0CC5                     	
  4716                           l4764:	
  4717  0CC5                     	bsf	status, 5	;RP0=1, select bank1
  4718  0CC5  1683               	bcf	status, 6	;RP1=0, select bank1
  4719  0CC6  1303               		decf	((_IsHeatingOn)^080h),w
  4720  0CC7  0333               iorwf	((_IsHeatingOn+1)^080h),w
  4721  0CC8  0434               	btfss	status,2
  4722  0CC9  1D03               	goto	u4511
  4723  0CCA  2CCC               	goto	u4510
  4724  0CCB  2CCD               u4511:
  4725  0CCC                     	goto	l4770
  4726  0CCC  2D07               u4510:
  4727  0CCD                     	
  4728                           l4766:	
  4729  0CCD                     	movf	((_DisableAlarm)^080h),w
  4730  0CCD  0831               iorwf	((_DisableAlarm+1)^080h),w
  4731  0CCE  0432               	btfss	status,2
  4732  0CCF  1D03               	goto	u4521
  4733  0CD0  2CD2               	goto	u4520
  4734  0CD1  2CD3               u4521:
  4735  0CD2                     	goto	l4770
  4736  0CD2  2D07               u4520:
  4737  0CD3                     	line	1043
  4738                           	
  4739                           l4768:	
  4740  0CD3                     	movf	(main@Key+1)^080h,w
  4741  0CD3  0859               	bcf	status, 5	;RP0=0, select bank0
  4742  0CD4  1283               	bcf	status, 6	;RP1=0, select bank0
  4743  0CD5  1303               	movwf	(SoundAlarm@Key+1)
  4744  0CD6  00D4               	bsf	status, 5	;RP0=1, select bank1
  4745  0CD7  1683               	bcf	status, 6	;RP1=0, select bank1
  4746  0CD8  1303               	movf	(main@Key)^080h,w
  4747  0CD9  0858               	bcf	status, 5	;RP0=0, select bank0
  4748  0CDA  1283               	bcf	status, 6	;RP1=0, select bank0
  4749  0CDB  1303               	movwf	(SoundAlarm@Key)
  4750  0CDC  00D3               	bsf	status, 5	;RP0=1, select bank1
  4751  0CDD  1683               	bcf	status, 6	;RP1=0, select bank1
  4752  0CDE  1303               	movf	(main@temp+1)^080h,w
  4753  0CDF  0853               	bcf	status, 5	;RP0=0, select bank0
  4754  0CE0  1283               	bcf	status, 6	;RP1=0, select bank0
  4755  0CE1  1303               	movwf	(SoundAlarm@temp+1)
  4756  0CE2  00D6               	bsf	status, 5	;RP0=1, select bank1
  4757  0CE3  1683               	bcf	status, 6	;RP1=0, select bank1
  4758  0CE4  1303               	movf	(main@temp)^080h,w
  4759  0CE5  0852               	bcf	status, 5	;RP0=0, select bank0
  4760  0CE6  1283               	bcf	status, 6	;RP1=0, select bank0
  4761  0CE7  1303               	movwf	(SoundAlarm@temp)
  4762  0CE8  00D5               	bsf	status, 5	;RP0=1, select bank1
  4763  0CE9  1683               	bcf	status, 6	;RP1=0, select bank1
  4764  0CEA  1303               	movf	(main@temp2+1)^080h,w
  4765  0CEB  0855               	bcf	status, 5	;RP0=0, select bank0
  4766  0CEC  1283               	bcf	status, 6	;RP1=0, select bank0
  4767  0CED  1303               	movwf	(SoundAlarm@temp2+1)
  4768  0CEE  00D8               	bsf	status, 5	;RP0=1, select bank1
  4769  0CEF  1683               	bcf	status, 6	;RP1=0, select bank1
  4770  0CF0  1303               	movf	(main@temp2)^080h,w
  4771  0CF1  0854               	bcf	status, 5	;RP0=0, select bank0
  4772  0CF2  1283               	bcf	status, 6	;RP1=0, select bank0
  4773  0CF3  1303               	movwf	(SoundAlarm@temp2)
  4774  0CF4  00D7               	bsf	status, 5	;RP0=1, select bank1
  4775  0CF5  1683               	bcf	status, 6	;RP1=0, select bank1
  4776  0CF6  1303               	movf	(main@temp3+1)^080h,w
  4777  0CF7  0857               	bcf	status, 5	;RP0=0, select bank0
  4778  0CF8  1283               	bcf	status, 6	;RP1=0, select bank0
  4779  0CF9  1303               	movwf	(SoundAlarm@temp3+1)
  4780  0CFA  00DA               	bsf	status, 5	;RP0=1, select bank1
  4781  0CFB  1683               	bcf	status, 6	;RP1=0, select bank1
  4782  0CFC  1303               	movf	(main@temp3)^080h,w
  4783  0CFD  0856               	bcf	status, 5	;RP0=0, select bank0
  4784  0CFE  1283               	bcf	status, 6	;RP1=0, select bank0
  4785  0CFF  1303               	movwf	(SoundAlarm@temp3)
  4786  0D00  00D9               	fcall	_SoundAlarm
  4787  0D01  160A  118A  240A  120A  158A  	goto	l4770
  4788  0D06  2D07               	line	1044
  4789                           	
  4790                           l370:	
  4791  0D07                     	line	1046
  4792                           	
  4793                           l4770:	
  4794  0D07                     	fcall	_CheckTime
  4795  0D07  160A  118A  2158  120A  158A  	goto	l4696
  4796  0D0C  2B10               	line	1047
  4797                           	
  4798                           l371:	
  4799  0D0D                     	goto	l4696
  4800  0D0D  2B10               	
  4801                           l372:	
  4802  0D0E                     	line	1048
  4803                           	
  4804                           l373:	
  4805  0D0E                     	global	start
  4806                           	ljmp	start
  4807  0D0E  120A  118A  2800   	opt stack 0
  4808                           GLOBAL	__end_of_main
  4809                           	__end_of_main:
  4810  0D11                     	signat	_main,89
  4811                           	global	_Thermometer_Init
  4812                           
  4813 ;; *************** function _Thermometer_Init *****************
  4814 ;; Defined at:
  4815 ;;		line 37 in file "Thermometer.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;		None
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;		None
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      void 
  4822 ;; Registers used:
  4823 ;;		wreg, status,2
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/0
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4829 ;;      Params:         0       0       0       0       0
  4830 ;;      Locals:         0       0       0       0       0
  4831 ;;      Temps:          0       0       0       0       0
  4832 ;;      Totals:         0       0       0       0       0
  4833 ;;Total ram usage:        0 bytes
  4834 ;; Hardware stack levels used:    1
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		_main
  4839 ;; This function uses a non-reentrant model
  4840 ;;
  4841                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4842                           	file	"Thermometer.c"
  4843                           	line	37
  4844                           global __ptext1
  4845                           __ptext1:	;psect for function _Thermometer_Init
  4846  181F                     psect	text1
  4847                           	file	"Thermometer.c"
  4848                           	line	37
  4849                           	global	__size_of_Thermometer_Init
  4850                           	__size_of_Thermometer_Init	equ	__end_of_Thermometer_Init-_Thermometer_Init
  4851  0007                     	
  4852                           _Thermometer_Init:	
  4853  181F                     ;incstack = 0
  4854                           	opt	stack 7
  4855                           ; Regs used in _Thermometer_Init: [wreg+status,2]
  4856                           	line	39
  4857                           	
  4858                           l4624:	
  4859  181F                     ;Thermometer.c: 39:   ADCON1=0X07;
  4860                           	movlw	low(07h)
  4861  181F  3007               	bsf	status, 5	;RP0=1, select bank1
  4862  1820  1683               	bcf	status, 6	;RP1=0, select bank1
  4863  1821  1303               	movwf	(159)^080h	;volatile
  4864  1822  009F               	line	40
  4865                           	
  4866                           l4626:	
  4867  1823                     ;Thermometer.c: 40:   TRISA=0X00;
  4868                           	clrf	(133)^080h	;volatile
  4869  1823  0185               	line	41
  4870                           	
  4871                           l4628:	
  4872  1824                     ;Thermometer.c: 41:   TRISD=0X00;
  4873                           	clrf	(136)^080h	;volatile
  4874  1824  0188               	line	42
  4875                           	
  4876                           l685:	
  4877  1825                     	return
  4878  1825  0008               	opt stack 0
  4879                           GLOBAL	__end_of_Thermometer_Init
  4880                           	__end_of_Thermometer_Init:
  4881  1826                     	signat	_Thermometer_Init,89
  4882                           	global	_SoundAlarm
  4883                           
  4884 ;; *************** function _SoundAlarm *****************
  4885 ;; Defined at:
  4886 ;;		line 882 in file "main.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;  Key             2   51[BANK0 ] int 
  4889 ;;  temp            2   53[BANK0 ] int 
  4890 ;;  temp2           2   55[BANK0 ] int 
  4891 ;;  temp3           2   57[BANK0 ] int 
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;  Alarm           1   60[BANK0 ] PTR unsigned char 
  4894 ;;		 -> STR_24(16), 
  4895 ;; Return value:  Size  Location     Type
  4896 ;;                  1    wreg      void 
  4897 ;; Registers used:
  4898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4904 ;;      Params:         0       8       0       0       0
  4905 ;;      Locals:         0       1       0       0       0
  4906 ;;      Temps:          0       1       0       0       0
  4907 ;;      Totals:         0      10       0       0       0
  4908 ;;Total ram usage:       10 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; Hardware stack levels required when called:    6
  4911 ;; This function calls:
  4912 ;;		_ChangeTrigger
  4913 ;;		_DateDayScreen
  4914 ;;		_Get_Temp
  4915 ;;		_HeatingControlOff
  4916 ;;		_Keypad_Scan
  4917 ;;		_LCD_Command
  4918 ;;		_LCD_SendString
  4919 ;;		_SetDate
  4920 ;;		_SetTime
  4921 ;;		_SoundOff
  4922 ;;		_SoundOn
  4923 ;;		_SwapToHeatingDisplay
  4924 ;;		_Switch24Hour
  4925 ;;		___wmul
  4926 ;; This function is called by:
  4927 ;;		_main
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4931                           	file	"main.c"
  4932                           	line	882
  4933                           global __ptext2
  4934                           __ptext2:	;psect for function _SoundAlarm
  4935  140A                     psect	text2
  4936                           	file	"main.c"
  4937                           	line	882
  4938                           	global	__size_of_SoundAlarm
  4939                           	__size_of_SoundAlarm	equ	__end_of_SoundAlarm-_SoundAlarm
  4940  0123                     	
  4941                           _SoundAlarm:	
  4942  140A                     ;incstack = 0
  4943                           	opt	stack 1
  4944                           ; Regs used in _SoundAlarm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4945                           	line	885
  4946                           	
  4947                           l4558:	
  4948  140A                     ;main.c: 882: ;main.c: 883:         if (Key == 6) {;main.c: 885:         }
  4949                           	movlw	(low((((STR_24)-__stringbase)|8000h)))&0ffh
  4950  140A  3001               	bcf	status, 5	;RP0=0, select bank0
  4951  140B  1283               	bcf	status, 6	;RP1=0, select bank0
  4952  140C  1303               	movwf	(??_SoundAlarm+0)+0
  4953  140D  00DB               	movf	(??_SoundAlarm+0)+0,w
  4954  140E  085B               	movwf	(SoundAlarm@Alarm)
  4955  140F  00DC               	line	886
  4956                           	
  4957                           l4560:	
  4958  1410                     ;main.c: 886: 
  4959                           	bsf	status, 5	;RP0=1, select bank1
  4960  1410  1683               	bcf	status, 6	;RP1=0, select bank1
  4961  1411  1303               	clrf	(_DisableAlarm)^080h
  4962  1412  01B1               	clrf	(_DisableAlarm+1)^080h
  4963  1413  01B2               	line	887
  4964                           	
  4965                           l4562:	
  4966  1414                     ;main.c: 887:         if (Key == 7) {
  4967                           	movlw	low(01h)
  4968  1414  3001               	fcall	_LCD_Command
  4969  1415  160A  158A  202E  160A  118A  	goto	l4564
  4970  141A  2C1B               	line	888
  4971                           ;main.c: 888:             SwapToHeatingDisplay(Key);
  4972                           	
  4973                           l344:	
  4974  141B                     	line	890
  4975                           	
  4976                           l4564:	
  4977  141B                     ;main.c: 889:         };main.c: 890: 
  4978                           	movlw	low(03h)
  4979  141B  3003               	fcall	_LCD_Command
  4980  141C  160A  158A  202E  160A  118A  	line	891
  4981                           	
  4982                           l4566:	
  4983  1421                     ;main.c: 891:         if (Key == 9) {
  4984                           	bcf	status, 5	;RP0=0, select bank0
  4985  1421  1283               	bcf	status, 6	;RP1=0, select bank0
  4986  1422  1303               		movf	(SoundAlarm@Alarm),w
  4987  1423  085C               	movwf	(LCD_SendString@string)
  4988  1424  00F1               	movlw	0
  4989  1425  3000               	btfss	status,2
  4990  1426  1D03               	movlw	080h
  4991  1427  3080               	movwf	(LCD_SendString@string+1)
  4992  1428  00F2               
  4993                           	fcall	_LCD_SendString
  4994  1429  160A  158A  2466  160A  118A  	line	893
  4995                           	
  4996                           l4568:	
  4997  142E                     ;main.c: 893:         }
  4998                           	fcall	_SoundOn
  4999  142E  160A  158A  200D  160A  118A  	line	895
  5000                           	
  5001                           l4570:	
  5002  1433                     ;main.c: 895:         if(Key == 8)
  5003                           	movlw	(low(_tempBuffer|((0x0)<<8)))&0ffh
  5004  1433  30EA               	fcall	_Get_Temp
  5005  1434  120A  158A  20E1  160A  118A  	line	896
  5006                           	
  5007                           l4572:	
  5008  1439                     ;main.c: 896:         {
  5009                           	bsf	status, 5	;RP0=1, select bank1
  5010  1439  1683               	bcf	status, 6	;RP1=0, select bank1
  5011  143A  1303               	movf	(_tempBuffer)^080h,w
  5012  143B  086A               	addlw	low(-48)
  5013  143C  3ED0               	bcf	status, 5	;RP0=0, select bank0
  5014  143D  1283               	bcf	status, 6	;RP1=0, select bank0
  5015  143E  1303               	movwf	(SoundAlarm@temp)
  5016  143F  00D5               	movlw	high(-48)
  5017  1440  30FF               	skipnc
  5018  1441  1803               	movlw	(high(-48)+1)&0ffh
  5019  1442  3000               	movwf	((SoundAlarm@temp))+1
  5020  1443  00D6               	line	897
  5021                           	
  5022                           l4574:	
  5023  1444                     ;main.c: 897:             Switch24Hour(Key);
  5024                           	bsf	status, 5	;RP0=1, select bank1
  5025  1444  1683               	bcf	status, 6	;RP1=0, select bank1
  5026  1445  1303               	movf	0+(_tempBuffer)^080h+01h,w
  5027  1446  086B               	addlw	low(-48)
  5028  1447  3ED0               	bcf	status, 5	;RP0=0, select bank0
  5029  1448  1283               	bcf	status, 6	;RP1=0, select bank0
  5030  1449  1303               	movwf	(SoundAlarm@temp2)
  5031  144A  00D7               	movlw	high(-48)
  5032  144B  30FF               	skipnc
  5033  144C  1803               	movlw	(high(-48)+1)&0ffh
  5034  144D  3000               	movwf	((SoundAlarm@temp2))+1
  5035  144E  00D8               	line	898
  5036                           	
  5037                           l4576:	
  5038  144F                     ;main.c: 898:         }
  5039                           	movf	(SoundAlarm@temp+1),w
  5040  144F  0856               	movwf	(___wmul@multiplier+1)
  5041  1450  00F1               	movf	(SoundAlarm@temp),w
  5042  1451  0855               	movwf	(___wmul@multiplier)
  5043  1452  00F0               	movlw	0Ah
  5044  1453  300A               	movwf	(___wmul@multiplicand)
  5045  1454  00F2               	movlw	0
  5046  1455  3000               	movwf	((___wmul@multiplicand))+1
  5047  1456  00F3               	fcall	___wmul
  5048  1457  160A  118A  2009  160A  118A  	bcf	status, 5	;RP0=0, select bank0
  5049  145C  1283               	bcf	status, 6	;RP1=0, select bank0
  5050  145D  1303               	movf	(SoundAlarm@temp2),w
  5051  145E  0857               	addwf	(0+(?___wmul)),w
  5052  145F  0770               	movwf	(SoundAlarm@temp3)
  5053  1460  00D9               	movf	(SoundAlarm@temp2+1),w
  5054  1461  0858               	skipnc
  5055  1462  1803               	incf	(SoundAlarm@temp2+1),w
  5056  1463  0A58               	addwf	(1+(?___wmul)),w
  5057  1464  0771               	movwf	1+(SoundAlarm@temp3)
  5058  1465  00DA               	line	899
  5059                           	
  5060                           l4578:	
  5061  1466                     ;main.c: 899: 
  5062                           	fcall	_Keypad_Scan
  5063  1466  120A  118A  2051  160A  118A  	movf	(1+(?_Keypad_Scan)),w
  5064  146B  0877               	bcf	status, 5	;RP0=0, select bank0
  5065  146C  1283               	bcf	status, 6	;RP1=0, select bank0
  5066  146D  1303               	movwf	(SoundAlarm@Key+1)
  5067  146E  00D4               	movf	(0+(?_Keypad_Scan)),w
  5068  146F  0876               	movwf	(SoundAlarm@Key)
  5069  1470  00D3               	line	901
  5070                           	
  5071                           l4580:	
  5072  1471                     ;main.c: 901:         {
  5073                           		decf	((SoundAlarm@Key)),w
  5074  1471  0353               iorwf	((SoundAlarm@Key+1)),w
  5075  1472  0454               	btfss	status,2
  5076  1473  1D03               	goto	u4311
  5077  1474  2C76               	goto	u4310
  5078  1475  2C77               u4311:
  5079  1476                     	goto	l4584
  5080  1476  2C7E               u4310:
  5081  1477                     	line	902
  5082                           	
  5083                           l4582:	
  5084  1477                     ;main.c: 902:             SetDate(Key);
  5085                           	movf	(SoundAlarm@Key),w
  5086  1477  0853               	fcall	_ChangeTrigger
  5087  1478  160A  118A  2669  160A  118A  	goto	l4584
  5088  147D  2C7E               	line	903
  5089                           ;main.c: 903:         }
  5090                           	
  5091                           l345:	
  5092  147E                     	line	905
  5093                           	
  5094                           l4584:	
  5095  147E                     ;main.c: 905:         if(Key == 5)
  5096                           		movlw	6
  5097  147E  3006               	bcf	status, 5	;RP0=0, select bank0
  5098  147F  1283               	bcf	status, 6	;RP1=0, select bank0
  5099  1480  1303               	xorwf	((SoundAlarm@Key)),w
  5100  1481  0653               iorwf	((SoundAlarm@Key+1)),w
  5101  1482  0454               	btfss	status,2
  5102  1483  1D03               	goto	u4321
  5103  1484  2C86               	goto	u4320
  5104  1485  2C87               u4321:
  5105  1486                     	goto	l4588
  5106  1486  2C91               u4320:
  5107  1487                     	line	906
  5108                           	
  5109                           l4586:	
  5110  1487                     ;main.c: 906:         {
  5111                           	movf	(SoundAlarm@Key+1),w
  5112  1487  0854               	movwf	(DateDayScreen@Key+1)
  5113  1488  00B6               	movf	(SoundAlarm@Key),w
  5114  1489  0853               	movwf	(DateDayScreen@Key)
  5115  148A  00B5               	fcall	_DateDayScreen
  5116  148B  160A  118A  2031  160A  118A  	goto	l4588
  5117  1490  2C91               	line	907
  5118                           ;main.c: 907:             DisableAlarm = 1;
  5119                           	
  5120                           l346:	
  5121  1491                     	line	909
  5122                           	
  5123                           l4588:	
  5124  1491                     ;main.c: 909:             LCD_Command(0x01);
  5125                           		movlw	7
  5126  1491  3007               	bcf	status, 5	;RP0=0, select bank0
  5127  1492  1283               	bcf	status, 6	;RP1=0, select bank0
  5128  1493  1303               	xorwf	((SoundAlarm@Key)),w
  5129  1494  0653               iorwf	((SoundAlarm@Key+1)),w
  5130  1495  0454               	btfss	status,2
  5131  1496  1D03               	goto	u4331
  5132  1497  2C99               	goto	u4330
  5133  1498  2C9A               u4331:
  5134  1499                     	goto	l4592
  5135  1499  2CA4               u4330:
  5136  149A                     	line	910
  5137                           	
  5138                           l4590:	
  5139  149A                     ;main.c: 910:             break;
  5140                           	movf	(SoundAlarm@Key+1),w
  5141  149A  0854               	movwf	(SwapToHeatingDisplay@Key+1)
  5142  149B  00F9               	movf	(SoundAlarm@Key),w
  5143  149C  0853               	movwf	(SwapToHeatingDisplay@Key)
  5144  149D  00F8               	fcall	_SwapToHeatingDisplay
  5145  149E  160A  158A  278D  160A  118A  	goto	l4592
  5146  14A3  2CA4               	line	911
  5147                           ;main.c: 911:         }
  5148                           	
  5149                           l347:	
  5150  14A4                     	line	913
  5151                           	
  5152                           l4592:	
  5153  14A4                     ;main.c: 913:         if(temp3 > triggerTemp[0])
  5154                           		movlw	9
  5155  14A4  3009               	bcf	status, 5	;RP0=0, select bank0
  5156  14A5  1283               	bcf	status, 6	;RP1=0, select bank0
  5157  14A6  1303               	xorwf	((SoundAlarm@Key)),w
  5158  14A7  0653               iorwf	((SoundAlarm@Key+1)),w
  5159  14A8  0454               	btfss	status,2
  5160  14A9  1D03               	goto	u4341
  5161  14AA  2CAC               	goto	u4340
  5162  14AB  2CAD               u4341:
  5163  14AC                     	goto	l4596
  5164  14AC  2CB7               u4340:
  5165  14AD                     	line	914
  5166                           	
  5167                           l4594:	
  5168  14AD                     ;main.c: 914:         {
  5169                           	movf	(SoundAlarm@Key+1),w
  5170  14AD  0854               	movwf	(SetTime@Key+1)
  5171  14AE  00A8               	movf	(SoundAlarm@Key),w
  5172  14AF  0853               	movwf	(SetTime@Key)
  5173  14B0  00A7               	fcall	_SetTime
  5174  14B1  120A  158A  2511  160A  118A  	goto	l4596
  5175  14B6  2CB7               	line	915
  5176                           ;main.c: 915:             LCD_Command(0x01);
  5177                           	
  5178                           l348:	
  5179  14B7                     	line	917
  5180                           	
  5181                           l4596:	
  5182  14B7                     ;main.c: 917:             break;
  5183                           		movlw	8
  5184  14B7  3008               	bcf	status, 5	;RP0=0, select bank0
  5185  14B8  1283               	bcf	status, 6	;RP1=0, select bank0
  5186  14B9  1303               	xorwf	((SoundAlarm@Key)),w
  5187  14BA  0653               iorwf	((SoundAlarm@Key+1)),w
  5188  14BB  0454               	btfss	status,2
  5189  14BC  1D03               	goto	u4351
  5190  14BD  2CBF               	goto	u4350
  5191  14BE  2CC0               u4351:
  5192  14BF                     	goto	l4600
  5193  14BF  2CCA               u4350:
  5194  14C0                     	line	919
  5195                           	
  5196                           l4598:	
  5197  14C0                     ;main.c: 918:         };main.c: 919:     }
  5198                           	movf	(SoundAlarm@Key+1),w
  5199  14C0  0854               	movwf	(Switch24Hour@Key+1)
  5200  14C1  00F9               	movf	(SoundAlarm@Key),w
  5201  14C2  0853               	movwf	(Switch24Hour@Key)
  5202  14C3  00F8               	fcall	_Switch24Hour
  5203  14C4  160A  158A  22F2  160A  118A  	goto	l4600
  5204  14C9  2CCA               	line	920
  5205                           ;main.c: 920: }
  5206                           	
  5207                           l349:	
  5208  14CA                     	line	922
  5209                           	
  5210                           l4600:	
  5211  14CA                     ;main.c: 922: 
  5212                           		movlw	13
  5213  14CA  300D               	bcf	status, 5	;RP0=0, select bank0
  5214  14CB  1283               	bcf	status, 6	;RP1=0, select bank0
  5215  14CC  1303               	xorwf	((SoundAlarm@Key)),w
  5216  14CD  0653               iorwf	((SoundAlarm@Key+1)),w
  5217  14CE  0454               	btfss	status,2
  5218  14CF  1D03               	goto	u4361
  5219  14D0  2CD2               	goto	u4360
  5220  14D1  2CD3               u4361:
  5221  14D2                     	goto	l4604
  5222  14D2  2CDD               u4360:
  5223  14D3                     	line	924
  5224                           	
  5225                           l4602:	
  5226  14D3                     ;main.c: 923: ;main.c: 924: 
  5227                           	movf	(SoundAlarm@Key+1),w
  5228  14D3  0854               	movwf	(SetDate@Key+1)
  5229  14D4  00A8               	movf	(SoundAlarm@Key),w
  5230  14D5  0853               	movwf	(SetDate@Key)
  5231  14D6  00A7               	fcall	_SetDate
  5232  14D7  120A  118A  2218  160A  118A  	goto	l4604
  5233  14DC  2CDD               	line	925
  5234                           ;main.c: 925: 
  5235                           	
  5236                           l350:	
  5237  14DD                     	line	927
  5238                           	
  5239                           l4604:	
  5240  14DD                     ;main.c: 927: void main() {
  5241                           		movlw	5
  5242  14DD  3005               	bcf	status, 5	;RP0=0, select bank0
  5243  14DE  1283               	bcf	status, 6	;RP1=0, select bank0
  5244  14DF  1303               	xorwf	((SoundAlarm@Key)),w
  5245  14E0  0653               iorwf	((SoundAlarm@Key+1)),w
  5246  14E1  0454               	btfss	status,2
  5247  14E2  1D03               	goto	u4371
  5248  14E3  2CE5               	goto	u4370
  5249  14E4  2CE6               u4371:
  5250  14E5                     	goto	l4610
  5251  14E5  2CF8               u4370:
  5252  14E6                     	line	929
  5253                           	
  5254                           l4606:	
  5255  14E6                     ;main.c: 928: ;main.c: 929: 
  5256                           	movlw	01h
  5257  14E6  3001               	bsf	status, 5	;RP0=1, select bank1
  5258  14E7  1683               	bcf	status, 6	;RP1=0, select bank1
  5259  14E8  1303               	movwf	(_DisableAlarm)^080h
  5260  14E9  00B1               	movlw	0
  5261  14EA  3000               	movwf	((_DisableAlarm)^080h)+1
  5262  14EB  00B2               	line	930
  5263                           	
  5264                           l4608:	
  5265  14EC                     ;main.c: 930:     LCD_Init();
  5266                           	fcall	_SoundOff
  5267  14EC  160A  158A  2009  160A  118A  	line	931
  5268                           ;main.c: 931:     Init_Keypad();
  5269                           	movlw	low(01h)
  5270  14F1  3001               	fcall	_LCD_Command
  5271  14F2  160A  158A  202E  160A  118A  	line	932
  5272                           ;main.c: 932:     Thermometer_Init();
  5273                           	goto	l355
  5274  14F7  2D2C               	line	933
  5275                           ;main.c: 933:     RealTimeClock_init();
  5276                           	
  5277                           l351:	
  5278  14F8                     	line	935
  5279                           	
  5280                           l4610:	
  5281  14F8                     ;main.c: 935:     int start_date[8] = {0,0,12,1,1,5,10,0};
  5282                           	bsf	status, 5	;RP0=1, select bank1
  5283  14F8  1683               	bcf	status, 6	;RP1=0, select bank1
  5284  14F9  1303               	movf	(_triggerTemp+1)^080h,w
  5285  14FA  085B               	xorlw	80h
  5286  14FB  3A80               	bcf	status, 5	;RP0=0, select bank0
  5287  14FC  1283               	bcf	status, 6	;RP1=0, select bank0
  5288  14FD  1303               	movwf	(??_SoundAlarm+0)+0
  5289  14FE  00DB               	movf	(SoundAlarm@temp3+1),w
  5290  14FF  085A               	xorlw	80h
  5291  1500  3A80               	subwf	(??_SoundAlarm+0)+0,w
  5292  1501  025B               	skipz
  5293  1502  1D03               	goto	u4385
  5294  1503  2D08               	movf	(SoundAlarm@temp3),w
  5295  1504  0859               	bsf	status, 5	;RP0=1, select bank1
  5296  1505  1683               	bcf	status, 6	;RP1=0, select bank1
  5297  1506  1303               	subwf	(_triggerTemp)^080h,w
  5298  1507  025A               u4385:
  5299  1508                     
  5300                           	skipnc
  5301  1508  1803               	goto	u4381
  5302  1509  2D0B               	goto	u4380
  5303  150A  2D0C               u4381:
  5304  150B                     	goto	l4564
  5305  150B  2C1B               u4380:
  5306  150C                     	line	937
  5307                           	
  5308                           l4612:	
  5309  150C                     ;main.c: 936:     RealTimeClock_set_burst_time(start_date);;main.c: 937: 
  5310                           	movlw	low(01h)
  5311  150C  3001               	fcall	_LCD_Command
  5312  150D  160A  158A  202E  160A  118A  	line	938
  5313                           	
  5314                           l4614:	
  5315  1512                     ;main.c: 938: 
  5316                           	bcf	status, 5	;RP0=0, select bank0
  5317  1512  1283               	bcf	status, 6	;RP1=0, select bank0
  5318  1513  1303               	movf	(SoundAlarm@Key+1),w
  5319  1514  0854               	movwf	(HeatingControlOff@Key+1)
  5320  1515  00C9               	movf	(SoundAlarm@Key),w
  5321  1516  0853               	movwf	(HeatingControlOff@Key)
  5322  1517  00C8               	movf	(SoundAlarm@temp+1),w
  5323  1518  0856               	movwf	(HeatingControlOff@temp+1)
  5324  1519  00CB               	movf	(SoundAlarm@temp),w
  5325  151A  0855               	movwf	(HeatingControlOff@temp)
  5326  151B  00CA               	movf	(SoundAlarm@temp2+1),w
  5327  151C  0858               	movwf	(HeatingControlOff@temp2+1)
  5328  151D  00CD               	movf	(SoundAlarm@temp2),w
  5329  151E  0857               	movwf	(HeatingControlOff@temp2)
  5330  151F  00CC               	movf	(SoundAlarm@temp3+1),w
  5331  1520  085A               	movwf	(HeatingControlOff@temp3+1)
  5332  1521  00CF               	movf	(SoundAlarm@temp3),w
  5333  1522  0859               	movwf	(HeatingControlOff@temp3)
  5334  1523  00CE               	fcall	_HeatingControlOff
  5335  1524  160A  118A  252D  160A  118A  	line	939
  5336                           ;main.c: 939:     Buzzer_Init();
  5337                           	goto	l355
  5338  1529  2D2C               	line	940
  5339                           ;main.c: 940:     int Key = 0;
  5340                           	
  5341                           l353:	
  5342  152A                     	goto	l4564
  5343  152A  2C1B               	line	941
  5344                           ;main.c: 941:     DisableAlarm = 0;
  5345                           	
  5346                           l354:	
  5347  152B                     	goto	l4564
  5348  152B  2C1B               	
  5349                           l352:	
  5350  152C                     	line	942
  5351                           	
  5352                           l355:	
  5353  152C                     	return
  5354  152C  0008               	opt stack 0
  5355                           GLOBAL	__end_of_SoundAlarm
  5356                           	__end_of_SoundAlarm:
  5357  152D                     	signat	_SoundAlarm,16505
  5358                           	global	_SoundOn
  5359                           
  5360 ;; *************** function _SoundOn *****************
  5361 ;; Defined at:
  5362 ;;		line 12 in file "Buzzer.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;		None
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      void 
  5369 ;; Registers used:
  5370 ;;		None
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5376 ;;      Params:         0       0       0       0       0
  5377 ;;      Locals:         0       0       0       0       0
  5378 ;;      Temps:          0       0       0       0       0
  5379 ;;      Totals:         0       0       0       0       0
  5380 ;;Total ram usage:        0 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_SoundAlarm
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  5389                           	file	"Buzzer.c"
  5390                           	line	12
  5391                           global __ptext3
  5392                           __ptext3:	;psect for function _SoundOn
  5393  180D                     psect	text3
  5394                           	file	"Buzzer.c"
  5395                           	line	12
  5396                           	global	__size_of_SoundOn
  5397                           	__size_of_SoundOn	equ	__end_of_SoundOn-_SoundOn
  5398  0004                     	
  5399                           _SoundOn:	
  5400  180D                     ;incstack = 0
  5401                           	opt	stack 6
  5402                           ; Regs used in _SoundOn: []
  5403                           	line	14
  5404                           	
  5405                           l4520:	
  5406  180D                     ;Buzzer.c: 14:     RB1 = 1;
  5407                           	bcf	status, 5	;RP0=0, select bank0
  5408  180D  1283               	bcf	status, 6	;RP1=0, select bank0
  5409  180E  1303               	bsf	(49/8),(49)&7	;volatile
  5410  180F  1486               	line	15
  5411                           	
  5412                           l638:	
  5413  1810                     	return
  5414  1810  0008               	opt stack 0
  5415                           GLOBAL	__end_of_SoundOn
  5416                           	__end_of_SoundOn:
  5417  1811                     	signat	_SoundOn,89
  5418                           	global	_HeatingControlOff
  5419                           
  5420 ;; *************** function _HeatingControlOff *****************
  5421 ;; Defined at:
  5422 ;;		line 807 in file "main.c"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;  Key             2   40[BANK0 ] int 
  5425 ;;  temp            2   42[BANK0 ] int 
  5426 ;;  temp2           2   44[BANK0 ] int 
  5427 ;;  temp3           2   46[BANK0 ] int 
  5428 ;; Auto vars:     Size  Location     Type
  5429 ;;  On              1   50[BANK0 ] PTR unsigned char 
  5430 ;;		 -> STR_23(11), 
  5431 ;;  Off             1   49[BANK0 ] PTR unsigned char 
  5432 ;;		 -> STR_22(12), 
  5433 ;; Return value:  Size  Location     Type
  5434 ;;                  1    wreg      void 
  5435 ;; Registers used:
  5436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5437 ;; Tracked objects:
  5438 ;;		On entry : 0/0
  5439 ;;		On exit  : 0/0
  5440 ;;		Unchanged: 0/0
  5441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5442 ;;      Params:         0       8       0       0       0
  5443 ;;      Locals:         0       2       0       0       0
  5444 ;;      Temps:          0       1       0       0       0
  5445 ;;      Totals:         0      11       0       0       0
  5446 ;;Total ram usage:       11 bytes
  5447 ;; Hardware stack levels used:    1
  5448 ;; Hardware stack levels required when called:    5
  5449 ;; This function calls:
  5450 ;;		_ChangeTrigger
  5451 ;;		_DateDayScreen
  5452 ;;		_Get_Temp
  5453 ;;		_Keypad_Scan
  5454 ;;		_LCD_Command
  5455 ;;		_LCD_SendString
  5456 ;;		_MainScreen
  5457 ;;		_Main_Delay
  5458 ;;		_SetDate
  5459 ;;		_SetTime
  5460 ;;		_SoundOff
  5461 ;;		_SwapToHeatingDisplay
  5462 ;;		_Switch24Hour
  5463 ;;		___wmul
  5464 ;; This function is called by:
  5465 ;;		_SoundAlarm
  5466 ;;		_main
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  5470                           	file	"main.c"
  5471                           	line	807
  5472                           global __ptext4
  5473                           __ptext4:	;psect for function _HeatingControlOff
  5474  152D                     psect	text4
  5475                           	file	"main.c"
  5476                           	line	807
  5477                           	global	__size_of_HeatingControlOff
  5478                           	__size_of_HeatingControlOff	equ	__end_of_HeatingControlOff-_HeatingControlOff
  5479  013C                     	
  5480                           _HeatingControlOff:	
  5481  152D                     ;incstack = 0
  5482                           	opt	stack 1
  5483                           ; Regs used in _HeatingControlOff: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]

  5484                           	line	810
  5485                           	
  5486                           l4456:	
  5487  152D                     ;main.c: 807:         Key = Keypad_Scan();;main.c: 808: ;main.c: 810:             Change
                                 Trigger(Key);
  5488                           	movlw	01h
  5489  152D  3001               	bsf	status, 5	;RP0=1, select bank1
  5490  152E  1683               	bcf	status, 6	;RP1=0, select bank1
  5491  152F  1303               	movwf	(_DisableAlarm)^080h
  5492  1530  00B1               	movlw	0
  5493  1531  3000               	movwf	((_DisableAlarm)^080h)+1
  5494  1532  00B2               	line	811
  5495                           	
  5496                           l4458:	
  5497  1533                     ;main.c: 811:         }
  5498                           	fcall	_SoundOff
  5499  1533  160A  158A  2009  160A  118A  	line	812
  5500                           	
  5501                           l4460:	
  5502  1538                     ;main.c: 812: 
  5503                           	movlw	(low((((STR_22)-__stringbase)|8000h)))&0ffh
  5504  1538  302C               	bcf	status, 5	;RP0=0, select bank0
  5505  1539  1283               	bcf	status, 6	;RP1=0, select bank0
  5506  153A  1303               	movwf	(??_HeatingControlOff+0)+0
  5507  153B  00D0               	movf	(??_HeatingControlOff+0)+0,w
  5508  153C  0850               	movwf	(HeatingControlOff@Off)
  5509  153D  00D1               	line	813
  5510                           	
  5511                           l4462:	
  5512  153E                     ;main.c: 813:         if (Key == 6) {
  5513                           	movlw	(low((((STR_23)-__stringbase)|8000h)))&0ffh
  5514  153E  3044               	movwf	(??_HeatingControlOff+0)+0
  5515  153F  00D0               	movf	(??_HeatingControlOff+0)+0,w
  5516  1540  0850               	movwf	(HeatingControlOff@On)
  5517  1541  00D2               	line	815
  5518                           ;main.c: 815:         }
  5519                           	movlw	low(01h)
  5520  1542  3001               	fcall	_LCD_Command
  5521  1543  160A  158A  202E  160A  118A  	line	817
  5522                           ;main.c: 817:         if (Key == 7) {
  5523                           	movlw	low(03h)
  5524  1548  3003               	fcall	_LCD_Command
  5525  1549  160A  158A  202E  160A  118A  	line	819
  5526                           	
  5527                           l4464:	
  5528  154E                     ;main.c: 819:         }
  5529                           	bcf	status, 5	;RP0=0, select bank0
  5530  154E  1283               	bcf	status, 6	;RP1=0, select bank0
  5531  154F  1303               		movf	(HeatingControlOff@Off),w
  5532  1550  0851               	movwf	(LCD_SendString@string)
  5533  1551  00F1               	movlw	0
  5534  1552  3000               	btfss	status,2
  5535  1553  1D03               	movlw	080h
  5536  1554  3080               	movwf	(LCD_SendString@string+1)
  5537  1555  00F2               
  5538                           	fcall	_LCD_SendString
  5539  1556  160A  158A  2466  160A  118A  	line	821
  5540                           	
  5541                           l4466:	
  5542  155B                     ;main.c: 821:         if (Key == 9) {
  5543                           	movlw	0C8h
  5544  155B  30C8               	movwf	(Main_Delay@k)
  5545  155C  00F0               	movlw	0
  5546  155D  3000               	movwf	((Main_Delay@k))+1
  5547  155E  00F1               	fcall	_Main_Delay
  5548  155F  160A  158A  2363  160A  118A  	line	823
  5549                           	
  5550                           l4468:	
  5551  1564                     ;main.c: 823:         }
  5552                           	movlw	low(01h)
  5553  1564  3001               	fcall	_LCD_Command
  5554  1565  160A  158A  202E  160A  118A  	goto	l4470
  5555  156A  2D6B               	line	824
  5556                           ;main.c: 824: 
  5557                           	
  5558                           l331:	
  5559  156B                     	line	826
  5560                           	
  5561                           l4470:	
  5562  156B                     ;main.c: 825:         if(Key == 8);main.c: 826:         {
  5563                           	movlw	low(03h)
  5564  156B  3003               	fcall	_LCD_Command
  5565  156C  160A  158A  202E  160A  118A  	line	828
  5566                           	
  5567                           l4472:	
  5568  1571                     ;main.c: 828:         }
  5569                           	fcall	_MainScreen
  5570  1571  160A  158A  22BF  160A  118A  	line	829
  5571                           	
  5572                           l4474:	
  5573  1576                     ;main.c: 829: 
  5574                           	fcall	_Keypad_Scan
  5575  1576  120A  118A  2051  160A  118A  	movf	(1+(?_Keypad_Scan)),w
  5576  157B  0877               	bcf	status, 5	;RP0=0, select bank0
  5577  157C  1283               	bcf	status, 6	;RP1=0, select bank0
  5578  157D  1303               	movwf	(HeatingControlOff@Key+1)
  5579  157E  00C9               	movf	(0+(?_Keypad_Scan)),w
  5580  157F  0876               	movwf	(HeatingControlOff@Key)
  5581  1580  00C8               	line	831
  5582                           	
  5583                           l4476:	
  5584  1581                     ;main.c: 831:         {
  5585                           		decf	((HeatingControlOff@Key)),w
  5586  1581  0348               iorwf	((HeatingControlOff@Key+1)),w
  5587  1582  0449               	btfss	status,2
  5588  1583  1D03               	goto	u4161
  5589  1584  2D86               	goto	u4160
  5590  1585  2D87               u4161:
  5591  1586                     	goto	l4480
  5592  1586  2D8E               u4160:
  5593  1587                     	line	832
  5594                           	
  5595                           l4478:	
  5596  1587                     ;main.c: 832:             SetDate(Key);
  5597                           	movf	(HeatingControlOff@Key),w
  5598  1587  0848               	fcall	_ChangeTrigger
  5599  1588  160A  118A  2669  160A  118A  	goto	l4480
  5600  158D  2D8E               	line	833
  5601                           ;main.c: 833:         }
  5602                           	
  5603                           l332:	
  5604  158E                     	line	835
  5605                           	
  5606                           l4480:	
  5607  158E                     ;main.c: 835:         Get_Temp(tempBuffer);
  5608                           		movlw	6
  5609  158E  3006               	bcf	status, 5	;RP0=0, select bank0
  5610  158F  1283               	bcf	status, 6	;RP1=0, select bank0
  5611  1590  1303               	xorwf	((HeatingControlOff@Key)),w
  5612  1591  0648               iorwf	((HeatingControlOff@Key+1)),w
  5613  1592  0449               	btfss	status,2
  5614  1593  1D03               	goto	u4171
  5615  1594  2D96               	goto	u4170
  5616  1595  2D97               u4171:
  5617  1596                     	goto	l4484
  5618  1596  2DA1               u4170:
  5619  1597                     	line	836
  5620                           	
  5621                           l4482:	
  5622  1597                     ;main.c: 836: 
  5623                           	movf	(HeatingControlOff@Key+1),w
  5624  1597  0849               	movwf	(DateDayScreen@Key+1)
  5625  1598  00B6               	movf	(HeatingControlOff@Key),w
  5626  1599  0848               	movwf	(DateDayScreen@Key)
  5627  159A  00B5               	fcall	_DateDayScreen
  5628  159B  160A  118A  2031  160A  118A  	goto	l4484
  5629  15A0  2DA1               	line	837
  5630                           ;main.c: 837:         temp = tempBuffer[0] - 48;
  5631                           	
  5632                           l333:	
  5633  15A1                     	line	839
  5634                           	
  5635                           l4484:	
  5636  15A1                     ;main.c: 839:         temp3 = (temp* 10) + temp2;
  5637                           		movlw	7
  5638  15A1  3007               	bcf	status, 5	;RP0=0, select bank0
  5639  15A2  1283               	bcf	status, 6	;RP1=0, select bank0
  5640  15A3  1303               	xorwf	((HeatingControlOff@Key)),w
  5641  15A4  0648               iorwf	((HeatingControlOff@Key+1)),w
  5642  15A5  0449               	btfss	status,2
  5643  15A6  1D03               	goto	u4181
  5644  15A7  2DA9               	goto	u4180
  5645  15A8  2DAA               u4181:
  5646  15A9                     	goto	l4488
  5647  15A9  2DB4               u4180:
  5648  15AA                     	line	840
  5649                           	
  5650                           l4486:	
  5651  15AA                     ;main.c: 840: 
  5652                           	movf	(HeatingControlOff@Key+1),w
  5653  15AA  0849               	movwf	(SwapToHeatingDisplay@Key+1)
  5654  15AB  00F9               	movf	(HeatingControlOff@Key),w
  5655  15AC  0848               	movwf	(SwapToHeatingDisplay@Key)
  5656  15AD  00F8               	fcall	_SwapToHeatingDisplay
  5657  15AE  160A  158A  278D  160A  118A  	goto	l4488
  5658  15B3  2DB4               	line	841
  5659                           ;main.c: 841:         if(triggerTemp[0] > temp3)
  5660                           	
  5661                           l334:	
  5662  15B4                     	line	843
  5663                           	
  5664                           l4488:	
  5665  15B4                     ;main.c: 843:             LCD_Command(0x01);
  5666                           		movlw	9
  5667  15B4  3009               	bcf	status, 5	;RP0=0, select bank0
  5668  15B5  1283               	bcf	status, 6	;RP1=0, select bank0
  5669  15B6  1303               	xorwf	((HeatingControlOff@Key)),w
  5670  15B7  0648               iorwf	((HeatingControlOff@Key+1)),w
  5671  15B8  0449               	btfss	status,2
  5672  15B9  1D03               	goto	u4191
  5673  15BA  2DBC               	goto	u4190
  5674  15BB  2DBD               u4191:
  5675  15BC                     	goto	l4492
  5676  15BC  2DC7               u4190:
  5677  15BD                     	line	844
  5678                           	
  5679                           l4490:	
  5680  15BD                     ;main.c: 844:             LCD_Command(0x03);
  5681                           	movf	(HeatingControlOff@Key+1),w
  5682  15BD  0849               	movwf	(SetTime@Key+1)
  5683  15BE  00A8               	movf	(HeatingControlOff@Key),w
  5684  15BF  0848               	movwf	(SetTime@Key)
  5685  15C0  00A7               	fcall	_SetTime
  5686  15C1  120A  158A  2511  160A  118A  	goto	l4492
  5687  15C6  2DC7               	line	845
  5688                           ;main.c: 845:             LCD_SendString(On);
  5689                           	
  5690                           l335:	
  5691  15C7                     	line	847
  5692                           	
  5693                           l4492:	
  5694  15C7                     ;main.c: 847: 
  5695                           		movlw	8
  5696  15C7  3008               	bcf	status, 5	;RP0=0, select bank0
  5697  15C8  1283               	bcf	status, 6	;RP1=0, select bank0
  5698  15C9  1303               	xorwf	((HeatingControlOff@Key)),w
  5699  15CA  0648               iorwf	((HeatingControlOff@Key+1)),w
  5700  15CB  0449               	btfss	status,2
  5701  15CC  1D03               	goto	u4201
  5702  15CD  2DCF               	goto	u4200
  5703  15CE  2DD0               u4201:
  5704  15CF                     	goto	l4496
  5705  15CF  2DDA               u4200:
  5706  15D0                     	line	849
  5707                           	
  5708                           l4494:	
  5709  15D0                     ;main.c: 848:             Main_Delay(200);;main.c: 849:             LCD_Command(0x01);
  5710                           	movf	(HeatingControlOff@Key+1),w
  5711  15D0  0849               	movwf	(Switch24Hour@Key+1)
  5712  15D1  00F9               	movf	(HeatingControlOff@Key),w
  5713  15D2  0848               	movwf	(Switch24Hour@Key)
  5714  15D3  00F8               	fcall	_Switch24Hour
  5715  15D4  160A  158A  22F2  160A  118A  	goto	l4496
  5716  15D9  2DDA               	line	850
  5717                           ;main.c: 850: 
  5718                           	
  5719                           l336:	
  5720  15DA                     	line	852
  5721                           	
  5722                           l4496:	
  5723  15DA                     ;main.c: 852: 
  5724                           		movlw	13
  5725  15DA  300D               	bcf	status, 5	;RP0=0, select bank0
  5726  15DB  1283               	bcf	status, 6	;RP1=0, select bank0
  5727  15DC  1303               	xorwf	((HeatingControlOff@Key)),w
  5728  15DD  0648               iorwf	((HeatingControlOff@Key+1)),w
  5729  15DE  0449               	btfss	status,2
  5730  15DF  1D03               	goto	u4211
  5731  15E0  2DE2               	goto	u4210
  5732  15E1  2DE3               u4211:
  5733  15E2                     	goto	l337
  5734  15E2  2DEC               u4210:
  5735  15E3                     	line	854
  5736                           	
  5737                           l4498:	
  5738  15E3                     ;main.c: 853:             DisableAlarm = 0;;main.c: 854:             break;
  5739                           	movf	(HeatingControlOff@Key+1),w
  5740  15E3  0849               	movwf	(SetDate@Key+1)
  5741  15E4  00A8               	movf	(HeatingControlOff@Key),w
  5742  15E5  0848               	movwf	(SetDate@Key)
  5743  15E6  00A7               	fcall	_SetDate
  5744  15E7  120A  118A  2218  160A  118A  	line	855
  5745                           ;main.c: 855:         }
  5746                           	
  5747                           l337:	
  5748  15EC                     	line	857
  5749                           ;main.c: 857: }
  5750                           	movlw	(low(_tempBuffer|((0x0)<<8)))&0ffh
  5751  15EC  30EA               	fcall	_Get_Temp
  5752  15ED  120A  158A  20E1  160A  118A  	line	859
  5753                           	
  5754                           l4500:	
  5755  15F2                     ;main.c: 859: 
  5756                           	bsf	status, 5	;RP0=1, select bank1
  5757  15F2  1683               	bcf	status, 6	;RP1=0, select bank1
  5758  15F3  1303               	movf	(_tempBuffer)^080h,w
  5759  15F4  086A               	addlw	low(-48)
  5760  15F5  3ED0               	bcf	status, 5	;RP0=0, select bank0
  5761  15F6  1283               	bcf	status, 6	;RP1=0, select bank0
  5762  15F7  1303               	movwf	(HeatingControlOff@temp)
  5763  15F8  00CA               	movlw	high(-48)
  5764  15F9  30FF               	skipnc
  5765  15FA  1803               	movlw	(high(-48)+1)&0ffh
  5766  15FB  3000               	movwf	((HeatingControlOff@temp))+1
  5767  15FC  00CB               	line	860
  5768                           	
  5769                           l4502:	
  5770  15FD                     ;main.c: 860: void SoundAlarm(int Key, int temp, int temp2, int temp3)
  5771                           	bsf	status, 5	;RP0=1, select bank1
  5772  15FD  1683               	bcf	status, 6	;RP1=0, select bank1
  5773  15FE  1303               	movf	0+(_tempBuffer)^080h+01h,w
  5774  15FF  086B               	addlw	low(-48)
  5775  1600  3ED0               	bcf	status, 5	;RP0=0, select bank0
  5776  1601  1283               	bcf	status, 6	;RP1=0, select bank0
  5777  1602  1303               	movwf	(HeatingControlOff@temp2)
  5778  1603  00CC               	movlw	high(-48)
  5779  1604  30FF               	skipnc
  5780  1605  1803               	movlw	(high(-48)+1)&0ffh
  5781  1606  3000               	movwf	((HeatingControlOff@temp2))+1
  5782  1607  00CD               	line	861
  5783                           	
  5784                           l4504:	
  5785  1608                     ;main.c: 861: {
  5786                           	movf	(HeatingControlOff@temp+1),w
  5787  1608  084B               	movwf	(___wmul@multiplier+1)
  5788  1609  00F1               	movf	(HeatingControlOff@temp),w
  5789  160A  084A               	movwf	(___wmul@multiplier)
  5790  160B  00F0               	movlw	0Ah
  5791  160C  300A               	movwf	(___wmul@multiplicand)
  5792  160D  00F2               	movlw	0
  5793  160E  3000               	movwf	((___wmul@multiplicand))+1
  5794  160F  00F3               	fcall	___wmul
  5795  1610  160A  118A  2009  160A  118A  	bcf	status, 5	;RP0=0, select bank0
  5796  1615  1283               	bcf	status, 6	;RP1=0, select bank0
  5797  1616  1303               	movf	(HeatingControlOff@temp2),w
  5798  1617  084C               	addwf	(0+(?___wmul)),w
  5799  1618  0770               	movwf	(HeatingControlOff@temp3)
  5800  1619  00CE               	movf	(HeatingControlOff@temp2+1),w
  5801  161A  084D               	skipnc
  5802  161B  1803               	incf	(HeatingControlOff@temp2+1),w
  5803  161C  0A4D               	addwf	(1+(?___wmul)),w
  5804  161D  0771               	movwf	1+(HeatingControlOff@temp3)
  5805  161E  00CF               	line	863
  5806                           	
  5807                           l4506:	
  5808  161F                     ;main.c: 863:     char* Alarm = "Heating Failure";
  5809                           	movf	(HeatingControlOff@temp3+1),w
  5810  161F  084F               	xorlw	80h
  5811  1620  3A80               	movwf	(??_HeatingControlOff+0)+0
  5812  1621  00D0               	bsf	status, 5	;RP0=1, select bank1
  5813  1622  1683               	bcf	status, 6	;RP1=0, select bank1
  5814  1623  1303               	movf	(_triggerTemp+1)^080h,w
  5815  1624  085B               	xorlw	80h
  5816  1625  3A80               	bcf	status, 5	;RP0=0, select bank0
  5817  1626  1283               	bcf	status, 6	;RP1=0, select bank0
  5818  1627  1303               	subwf	(??_HeatingControlOff+0)+0,w
  5819  1628  0250               	skipz
  5820  1629  1D03               	goto	u4225
  5821  162A  2E31               	bsf	status, 5	;RP0=1, select bank1
  5822  162B  1683               	bcf	status, 6	;RP1=0, select bank1
  5823  162C  1303               	movf	(_triggerTemp)^080h,w
  5824  162D  085A               	bcf	status, 5	;RP0=0, select bank0
  5825  162E  1283               	bcf	status, 6	;RP1=0, select bank0
  5826  162F  1303               	subwf	(HeatingControlOff@temp3),w
  5827  1630  024E               u4225:
  5828  1631                     
  5829                           	skipnc
  5830  1631  1803               	goto	u4221
  5831  1632  2E34               	goto	u4220
  5832  1633  2E35               u4221:
  5833  1634                     	goto	l4470
  5834  1634  2D6B               u4220:
  5835  1635                     	line	865
  5836                           	
  5837                           l4508:	
  5838  1635                     ;main.c: 864:     DisableAlarm = 0;;main.c: 865:     LCD_Command(0x01);
  5839                           	movlw	low(01h)
  5840  1635  3001               	fcall	_LCD_Command
  5841  1636  160A  158A  202E  160A  118A  	line	866
  5842                           ;main.c: 866:     while(1)
  5843                           	movlw	low(03h)
  5844  163B  3003               	fcall	_LCD_Command
  5845  163C  160A  158A  202E  160A  118A  	line	867
  5846                           	
  5847                           l4510:	
  5848  1641                     ;main.c: 867:     {
  5849                           	bcf	status, 5	;RP0=0, select bank0
  5850  1641  1283               	bcf	status, 6	;RP1=0, select bank0
  5851  1642  1303               		movf	(HeatingControlOff@On),w
  5852  1643  0852               	movwf	(LCD_SendString@string)
  5853  1644  00F1               	movlw	0
  5854  1645  3000               	btfss	status,2
  5855  1646  1D03               	movlw	080h
  5856  1647  3080               	movwf	(LCD_SendString@string+1)
  5857  1648  00F2               
  5858                           	fcall	_LCD_SendString
  5859  1649  160A  158A  2466  160A  118A  	line	870
  5860                           	
  5861                           l4512:	
  5862  164E                     ;main.c: 870: 
  5863                           	movlw	0C8h
  5864  164E  30C8               	movwf	(Main_Delay@k)
  5865  164F  00F0               	movlw	0
  5866  1650  3000               	movwf	((Main_Delay@k))+1
  5867  1651  00F1               	fcall	_Main_Delay
  5868  1652  160A  158A  2363  160A  118A  	line	871
  5869                           	
  5870                           l4514:	
  5871  1657                     ;main.c: 871:         SoundOn();
  5872                           	movlw	low(01h)
  5873  1657  3001               	fcall	_LCD_Command
  5874  1658  160A  158A  202E  160A  118A  	line	873
  5875                           	
  5876                           l4516:	
  5877  165D                     ;main.c: 873:         Get_Temp(tempBuffer);
  5878                           	movlw	01h
  5879  165D  3001               	bsf	status, 5	;RP0=1, select bank1
  5880  165E  1683               	bcf	status, 6	;RP1=0, select bank1
  5881  165F  1303               	movwf	(_IsHeatingOn)^080h
  5882  1660  00B3               	movlw	0
  5883  1661  3000               	movwf	((_IsHeatingOn)^080h)+1
  5884  1662  00B4               	line	875
  5885                           	
  5886                           l4518:	
  5887  1663                     ;main.c: 875:         temp2 = tempBuffer[1] - 48;
  5888                           	clrf	(_DisableAlarm)^080h
  5889  1663  01B1               	clrf	(_DisableAlarm+1)^080h
  5890  1664  01B2               	line	876
  5891                           ;main.c: 876:         temp3 = (temp* 10) + temp2;
  5892                           	goto	l341
  5893  1665  2E68               	line	877
  5894                           ;main.c: 877:         Key = Keypad_Scan();
  5895                           	
  5896                           l338:	
  5897  1666                     	goto	l4470
  5898  1666  2D6B               	line	878
  5899                           ;main.c: 878: 
  5900                           	
  5901                           l340:	
  5902  1667                     	goto	l4470
  5903  1667  2D6B               	
  5904                           l339:	
  5905  1668                     	line	879
  5906                           	
  5907                           l341:	
  5908  1668                     	return
  5909  1668  0008               	opt stack 0
  5910                           GLOBAL	__end_of_HeatingControlOff
  5911                           	__end_of_HeatingControlOff:
  5912  1669                     	signat	_HeatingControlOff,16505
  5913                           	global	___wmul
  5914                           
  5915 ;; *************** function ___wmul *****************
  5916 ;; Defined at:
  5917 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;  multiplier      2    0[COMMON] unsigned int 
  5920 ;;  multiplicand    2    2[COMMON] unsigned int 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  product         2    4[COMMON] unsigned int 
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  2    0[COMMON] unsigned int 
  5925 ;; Registers used:
  5926 ;;		wreg, status,2, status,0
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5932 ;;      Params:         4       0       0       0       0
  5933 ;;      Locals:         2       0       0       0       0
  5934 ;;      Temps:          0       0       0       0       0
  5935 ;;      Totals:         6       0       0       0       0
  5936 ;;Total ram usage:        6 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_HeatingControlOff
  5942 ;;		_SoundAlarm
  5943 ;;		_main
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  5947                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  5948                           	line	15
  5949                           global __ptext5
  5950                           __ptext5:	;psect for function ___wmul
  5951  1009                     psect	text5
  5952                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  5953                           	line	15
  5954                           	global	__size_of___wmul
  5955                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  5956  0028                     	
  5957                           ___wmul:	
  5958  1009                     ;incstack = 0
  5959                           	opt	stack 7
  5960                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5961                           	line	43
  5962                           	
  5963                           l4442:	
  5964  1009                     	clrf	(___wmul@product)
  5965  1009  01F4               	clrf	(___wmul@product+1)
  5966  100A  01F5               	goto	l4444
  5967  100B  280C               	line	44
  5968                           	
  5969                           l800:	
  5970  100C                     	line	45
  5971                           	
  5972                           l4444:	
  5973  100C                     	btfss	(___wmul@multiplier),(0)&7
  5974  100C  1C70               	goto	u4121
  5975  100D  280F               	goto	u4120
  5976  100E  2810               u4121:
  5977  100F                     	goto	l801
  5978  100F  2816               u4120:
  5979  1010                     	line	46
  5980                           	
  5981                           l4446:	
  5982  1010                     	movf	(___wmul@multiplicand),w
  5983  1010  0872               	addwf	(___wmul@product),f
  5984  1011  07F4               	skipnc
  5985  1012  1803               	incf	(___wmul@product+1),f
  5986  1013  0AF5               	movf	(___wmul@multiplicand+1),w
  5987  1014  0873               	addwf	(___wmul@product+1),f
  5988  1015  07F5               	
  5989                           l801:	
  5990  1016                     	line	47
  5991                           	movlw	01h
  5992  1016  3001               	
  5993                           u4135:
  5994  1017                     	clrc
  5995  1017  1003               	rlf	(___wmul@multiplicand),f
  5996  1018  0DF2               	rlf	(___wmul@multiplicand+1),f
  5997  1019  0DF3               	addlw	-1
  5998  101A  3EFF               	skipz
  5999  101B  1D03               	goto	u4135
  6000  101C  2817               	line	48
  6001                           	
  6002                           l4448:	
  6003  101D                     	movlw	01h
  6004  101D  3001               	
  6005                           u4145:
  6006  101E                     	clrc
  6007  101E  1003               	rrf	(___wmul@multiplier+1),f
  6008  101F  0CF1               	rrf	(___wmul@multiplier),f
  6009  1020  0CF0               	addlw	-1
  6010  1021  3EFF               	skipz
  6011  1022  1D03               	goto	u4145
  6012  1023  281E               	line	49
  6013                           	
  6014                           l4450:	
  6015  1024                     	movf	((___wmul@multiplier)),w
  6016  1024  0870               iorwf	((___wmul@multiplier+1)),w
  6017  1025  0471               	btfss	status,2
  6018  1026  1D03               	goto	u4151
  6019  1027  2829               	goto	u4150
  6020  1028  282A               u4151:
  6021  1029                     	goto	l4444
  6022  1029  280C               u4150:
  6023  102A                     	goto	l4452
  6024  102A  282B               	
  6025                           l802:	
  6026  102B                     	line	52
  6027                           	
  6028                           l4452:	
  6029  102B                     	movf	(___wmul@product+1),w
  6030  102B  0875               	movwf	(?___wmul+1)
  6031  102C  00F1               	movf	(___wmul@product),w
  6032  102D  0874               	movwf	(?___wmul)
  6033  102E  00F0               	goto	l803
  6034  102F  2830               	
  6035                           l4454:	
  6036  1030                     	line	53
  6037                           	
  6038                           l803:	
  6039  1030                     	return
  6040  1030  0008               	opt stack 0
  6041                           GLOBAL	__end_of___wmul
  6042                           	__end_of___wmul:
  6043  1031                     	signat	___wmul,8314
  6044                           	global	_Switch24Hour
  6045                           
  6046 ;; *************** function _Switch24Hour *****************
  6047 ;; Defined at:
  6048 ;;		line 297 in file "main.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  Key             2    8[COMMON] int 
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;  c               1   11[COMMON] PTR unsigned char 
  6053 ;;		 -> STR_15(14), 
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  1    wreg      void 
  6056 ;; Registers used:
  6057 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6063 ;;      Params:         2       0       0       0       0
  6064 ;;      Locals:         1       0       0       0       0
  6065 ;;      Temps:          1       0       0       0       0
  6066 ;;      Totals:         4       0       0       0       0
  6067 ;;Total ram usage:        4 bytes
  6068 ;; Hardware stack levels used:    1
  6069 ;; Hardware stack levels required when called:    3
  6070 ;; This function calls:
  6071 ;;		_LCD_Command
  6072 ;;		_LCD_SendString
  6073 ;; This function is called by:
  6074 ;;		_HeatingControlOff
  6075 ;;		_SoundAlarm
  6076 ;;		_main
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  6080                           	file	"main.c"
  6081                           	line	297
  6082                           global __ptext6
  6083                           __ptext6:	;psect for function _Switch24Hour
  6084  1AF2                     psect	text6
  6085                           	file	"main.c"
  6086                           	line	297
  6087                           	global	__size_of_Switch24Hour
  6088                           	__size_of_Switch24Hour	equ	__end_of_Switch24Hour-_Switch24Hour
  6089  0036                     	
  6090                           _Switch24Hour:	
  6091  1AF2                     ;incstack = 0
  6092                           	opt	stack 4
  6093                           ; Regs used in _Switch24Hour: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6094                           	line	299
  6095                           	
  6096                           l4010:	
  6097  1AF2                     ;main.c: 297: {;main.c: 298:     LCD_Command(0x01);;main.c: 299:     char* date = ("Date
                                 : ");
  6098                           	movlw	low(01h)
  6099  1AF2  3001               	fcall	_LCD_Command
  6100  1AF3  160A  158A  202E  160A  158A  	line	301
  6101                           	
  6102                           l4012:	
  6103  1AF8                     ;main.c: 300:     char* DayDis = ("Day: ");;main.c: 301:     while(1)
  6104                           	bsf	status, 5	;RP0=1, select bank1
  6105  1AF8  1683               	bcf	status, 6	;RP1=0, select bank1
  6106  1AF9  1303               		decf	((_is24Hour)^080h),w
  6107  1AFA  032D               iorwf	((_is24Hour+1)^080h),w
  6108  1AFB  042E               	btfss	status,2
  6109  1AFC  1D03               	goto	u3491
  6110  1AFD  2AFF               	goto	u3490
  6111  1AFE  2B00               u3491:
  6112  1AFF                     	goto	l4016
  6113  1AFF  2B06               u3490:
  6114  1B00                     	line	303
  6115                           	
  6116                           l4014:	
  6117  1B00                     ;main.c: 302:     {;main.c: 303:         Key = Keypad_Scan();
  6118                           	movlw	(low((((STR_15)-__stringbase)|8000h)))&0ffh
  6119  1B00  3011               	movwf	(??_Switch24Hour+0)+0
  6120  1B01  00FA               	movf	(??_Switch24Hour+0)+0,w
  6121  1B02  087A               	movwf	(Switch24Hour@c)
  6122  1B03  00FB               	goto	l4016
  6123  1B04  2B06               	line	304
  6124                           ;main.c: 304:         LCD_Command(0x03);
  6125                           	
  6126                           l167:	
  6127  1B05                     	goto	l4016
  6128  1B05  2B06               	line	305
  6129                           ;main.c: 305:         LCD_SendString(date);
  6130                           	
  6131                           l168:	
  6132  1B06                     	line	307
  6133                           	
  6134                           l4016:	
  6135  1B06                     ;main.c: 306:         DisplayDate();;main.c: 307:         LCD_SecondLine();
  6136                           	movlw	low(03h)
  6137  1B06  3003               	fcall	_LCD_Command
  6138  1B07  160A  158A  202E  160A  158A  	line	308
  6139                           	
  6140                           l4018:	
  6141  1B0C                     ;main.c: 308:         LCD_SendString(DayDis);
  6142                           		movf	(Switch24Hour@c),w
  6143  1B0C  087B               	movwf	(LCD_SendString@string)
  6144  1B0D  00F1               	movlw	0
  6145  1B0E  3000               	btfss	status,2
  6146  1B0F  1D03               	movlw	080h
  6147  1B10  3080               	movwf	(LCD_SendString@string+1)
  6148  1B11  00F2               
  6149                           	fcall	_LCD_SendString
  6150  1B12  160A  158A  2466  160A  158A  	line	309
  6151                           	
  6152                           l4020:	
  6153  1B17                     ;main.c: 309:         DisplayDay();
  6154                           		movlw	8
  6155  1B17  3008               	xorwf	((Switch24Hour@Key)),w
  6156  1B18  0678               iorwf	((Switch24Hour@Key+1)),w
  6157  1B19  0479               	btfss	status,2
  6158  1B1A  1D03               	goto	u3501
  6159  1B1B  2B1D               	goto	u3500
  6160  1B1C  2B1E               u3501:
  6161  1B1D                     	goto	l4016
  6162  1B1D  2B06               u3500:
  6163  1B1E                     	line	311
  6164                           	
  6165                           l4022:	
  6166  1B1E                     ;main.c: 310:         if (Key == 1);main.c: 311:         {
  6167                           	movlw	low(01h)
  6168  1B1E  3001               	fcall	_LCD_Command
  6169  1B1F  160A  158A  202E  160A  158A  	line	312
  6170                           ;main.c: 312:             ChangeTrigger(Key);
  6171                           	goto	l172
  6172  1B24  2B27               	line	313
  6173                           ;main.c: 313:         }
  6174                           	
  6175                           l169:	
  6176  1B25                     	goto	l4016
  6177  1B25  2B06               	line	314
  6178                           ;main.c: 314:         if (Key == 6)
  6179                           	
  6180                           l171:	
  6181  1B26                     	goto	l4016
  6182  1B26  2B06               	
  6183                           l170:	
  6184  1B27                     	line	315
  6185                           	
  6186                           l172:	
  6187  1B27                     	return
  6188  1B27  0008               	opt stack 0
  6189                           GLOBAL	__end_of_Switch24Hour
  6190                           	__end_of_Switch24Hour:
  6191  1B28                     	signat	_Switch24Hour,4217
  6192                           	global	_SoundOff
  6193                           
  6194 ;; *************** function _SoundOff *****************
  6195 ;; Defined at:
  6196 ;;		line 18 in file "Buzzer.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;		None
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      void 
  6203 ;; Registers used:
  6204 ;;		None
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6210 ;;      Params:         0       0       0       0       0
  6211 ;;      Locals:         0       0       0       0       0
  6212 ;;      Temps:          0       0       0       0       0
  6213 ;;      Totals:         0       0       0       0       0
  6214 ;;Total ram usage:        0 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; This function calls:
  6217 ;;		Nothing
  6218 ;; This function is called by:
  6219 ;;		_HeatingControlOff
  6220 ;;		_SoundAlarm
  6221 ;;		_main
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  6225                           	file	"Buzzer.c"
  6226                           	line	18
  6227                           global __ptext7
  6228                           __ptext7:	;psect for function _SoundOff
  6229  1809                     psect	text7
  6230                           	file	"Buzzer.c"
  6231                           	line	18
  6232                           	global	__size_of_SoundOff
  6233                           	__size_of_SoundOff	equ	__end_of_SoundOff-_SoundOff
  6234  0004                     	
  6235                           _SoundOff:	
  6236  1809                     ;incstack = 0
  6237                           	opt	stack 7
  6238                           ; Regs used in _SoundOff: []
  6239                           	line	20
  6240                           	
  6241                           l4440:	
  6242  1809                     ;Buzzer.c: 20:     RB1 = 0;
  6243                           	bcf	status, 5	;RP0=0, select bank0
  6244  1809  1283               	bcf	status, 6	;RP1=0, select bank0
  6245  180A  1303               	bcf	(49/8),(49)&7	;volatile
  6246  180B  1086               	line	21
  6247                           	
  6248                           l641:	
  6249  180C                     	return
  6250  180C  0008               	opt stack 0
  6251                           GLOBAL	__end_of_SoundOff
  6252                           	__end_of_SoundOff:
  6253  180D                     	signat	_SoundOff,89
  6254                           	global	_SetTime
  6255                           
  6256 ;; *************** function _SetTime *****************
  6257 ;; Defined at:
  6258 ;;		line 349 in file "main.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;  Key             2    7[BANK0 ] int 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  digits          9   15[BANK0 ] unsigned char [9]
  6263 ;;  setTime         6   26[BANK0 ] int [3]
  6264 ;;  i               2   32[BANK0 ] int 
  6265 ;;  TimeSet         1   25[BANK0 ] PTR unsigned char 
  6266 ;;		 -> STR_19(9), 
  6267 ;;  Time            1   24[BANK0 ] PTR unsigned char 
  6268 ;;		 -> STR_18(6), 
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  1    wreg      void 
  6271 ;; Registers used:
  6272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6278 ;;      Params:         0       2       0       0       0
  6279 ;;      Locals:         0      19       0       0       0
  6280 ;;      Temps:          0       6       0       0       0
  6281 ;;      Totals:         0      27       0       0       0
  6282 ;;Total ram usage:       27 bytes
  6283 ;; Hardware stack levels used:    1
  6284 ;; Hardware stack levels required when called:    3
  6285 ;; This function calls:
  6286 ;;		_Keypad_Scan
  6287 ;;		_LCD_Command
  6288 ;;		_LCD_SendString
  6289 ;;		_Main_Delay
  6290 ;;		_RealTimeClock_get_hours
  6291 ;;		_RealTimeClock_get_minutes
  6292 ;;		_RealTimeClock_get_seconds
  6293 ;;		_RealTimeClock_set_hours
  6294 ;;		_RealTimeClock_set_minutes
  6295 ;;		_RealTimeClock_set_seconds
  6296 ;;		___awdiv
  6297 ;;		___awmod
  6298 ;; This function is called by:
  6299 ;;		_HeatingControlOff
  6300 ;;		_SoundAlarm
  6301 ;;		_main
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  6305                           	file	"main.c"
  6306                           	line	349
  6307                           global __ptext8
  6308                           __ptext8:	;psect for function _SetTime
  6309  0D11                     psect	text8
  6310                           	file	"main.c"
  6311                           	line	349
  6312                           	global	__size_of_SetTime
  6313                           	__size_of_SetTime	equ	__end_of_SetTime-_SetTime
  6314  02EF                     	
  6315                           _SetTime:	
  6316  0D11                     ;incstack = 0
  6317                           	opt	stack 3
  6318                           ; Regs used in _SetTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6319                           	line	352
  6320                           	
  6321                           l4050:	
  6322  0D11                     ;main.c: 349:         LCD_Command(0x03);;main.c: 350:         LCD_SendString(Time);;main
                                 .c: 352:         Key = Keypad_Scan();
  6323                           	movlw	low(01h)
  6324  0D11  3001               	fcall	_LCD_Command
  6325  0D12  160A  158A  202E  120A  158A  	line	354
  6326                           	
  6327                           l4052:	
  6328  0D17                     ;main.c: 354:         if(Key == 9)
  6329                           	bcf	status, 5	;RP0=0, select bank0
  6330  0D17  1283               	bcf	status, 6	;RP1=0, select bank0
  6331  0D18  1303               	clrf	(SetTime@i)
  6332  0D19  01C0               	clrf	(SetTime@i+1)
  6333  0D1A  01C1               	line	355
  6334                           	
  6335                           l4054:	
  6336  0D1B                     ;main.c: 355:         {
  6337                           	movlw	(low((((STR_18)-__stringbase)|8000h)))&0ffh
  6338  0D1B  30B0               	movwf	(??_SetTime+0)+0
  6339  0D1C  00A9               	movf	(??_SetTime+0)+0,w
  6340  0D1D  0829               	movwf	(SetTime@Time)
  6341  0D1E  00B8               	line	356
  6342                           	
  6343                           l4056:	
  6344  0D1F                     ;main.c: 356: 
  6345                           	movlw	(low((((STR_19)-__stringbase)|8000h)))&0ffh
  6346  0D1F  306B               	movwf	(??_SetTime+0)+0
  6347  0D20  00A9               	movf	(??_SetTime+0)+0,w
  6348  0D21  0829               	movwf	(SetTime@TimeSet)
  6349  0D22  00B9               	line	358
  6350                           	
  6351                           l4058:	
  6352  0D23                     ;main.c: 358:             RealTimeClock_set_minutes(setTime[1]);
  6353                           	fcall	_RealTimeClock_get_seconds
  6354  0D23  160A  158A  2245  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  6355  0D28  1283               	bcf	status, 6	;RP1=0, select bank0
  6356  0D29  1303               	movf	(1+(?_RealTimeClock_get_seconds)),w
  6357  0D2A  0826               	movwf	(_timeSecs+1)
  6358  0D2B  00E8               	movf	(0+(?_RealTimeClock_get_seconds)),w
  6359  0D2C  0825               	movwf	(_timeSecs)
  6360  0D2D  00E7               	line	359
  6361                           	
  6362                           l4060:	
  6363  0D2E                     ;main.c: 359:             RealTimeClock_set_seconds(setTime[2]);
  6364                           	fcall	_RealTimeClock_get_minutes
  6365  0D2E  160A  158A  219B  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  6366  0D33  1283               	bcf	status, 6	;RP1=0, select bank0
  6367  0D34  1303               	movf	(1+(?_RealTimeClock_get_minutes)),w
  6368  0D35  0826               	movwf	(_timeMins+1)
  6369  0D36  00EA               	movf	(0+(?_RealTimeClock_get_minutes)),w
  6370  0D37  0825               	movwf	(_timeMins)
  6371  0D38  00E9               	line	360
  6372                           	
  6373                           l4062:	
  6374  0D39                     ;main.c: 360: 
  6375                           	fcall	_RealTimeClock_get_hours
  6376  0D39  160A  158A  2179  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  6377  0D3E  1283               	bcf	status, 6	;RP1=0, select bank0
  6378  0D3F  1303               	movf	(1+(?_RealTimeClock_get_hours)),w
  6379  0D40  0826               	movwf	(_timeHours+1)
  6380  0D41  00EC               	movf	(0+(?_RealTimeClock_get_hours)),w
  6381  0D42  0825               	movwf	(_timeHours)
  6382  0D43  00EB               	line	363
  6383                           	
  6384                           l4064:	
  6385  0D44                     ;main.c: 362:             LCD_Command(0x03);;main.c: 363: 
  6386                           	movf	(_timeHours+1),w
  6387  0D44  086C               	movwf	(SetTime@setTime+1)
  6388  0D45  00BB               	movf	(_timeHours),w
  6389  0D46  086B               	movwf	(SetTime@setTime)
  6390  0D47  00BA               	line	364
  6391                           	
  6392                           l4066:	
  6393  0D48                     ;main.c: 364:             LCD_SendString(TimeSet);
  6394                           	movf	(_timeMins+1),w
  6395  0D48  086A               	movwf	1+(SetTime@setTime)+02h
  6396  0D49  00BD               	movf	(_timeMins),w
  6397  0D4A  0869               	movwf	0+(SetTime@setTime)+02h
  6398  0D4B  00BC               	line	365
  6399                           	
  6400                           l4068:	
  6401  0D4C                     ;main.c: 365:             Main_Delay(200);
  6402                           	movf	(_timeSecs+1),w
  6403  0D4C  0868               	movwf	1+(SetTime@setTime)+04h
  6404  0D4D  00BF               	movf	(_timeSecs),w
  6405  0D4E  0867               	movwf	0+(SetTime@setTime)+04h
  6406  0D4F  00BE               	goto	l4070
  6407  0D50  2D51               	line	366
  6408                           ;main.c: 366:             LCD_Command(0x01);
  6409                           	
  6410                           l184:	
  6411  0D51                     	line	369
  6412                           	
  6413                           l4070:	
  6414  0D51                     ;main.c: 367:             break;;main.c: 369:         switch(Key)
  6415                           	movlw	(SetTime@digits)&0ffh
  6416  0D51  302F               	movwf	fsr0
  6417  0D52  0084               	movlw	low(SetTime@F980)
  6418  0D53  30B3               	bcf	status, 5	;RP0=0, select bank0
  6419  0D54  1283               	bcf	status, 6	;RP1=0, select bank0
  6420  0D55  1303               	movwf	(??_SetTime+0)+0
  6421  0D56  00A9               	movf	fsr0,w
  6422  0D57  0804               	movwf	((??_SetTime+0)+0+1)
  6423  0D58  00AA               	movlw	9
  6424  0D59  3009               	movwf	((??_SetTime+0)+0+2)
  6425  0D5A  00AB               u3540:
  6426  0D5B                     	movf	(??_SetTime+0)+0,w
  6427  0D5B  0829               	movwf	fsr0
  6428  0D5C  0084               	bsf	status, 7	;select IRP bank3
  6429  0D5D  1783               	
  6430                           	movf	indf,w
  6431  0D5E  0800               	movwf	((??_SetTime+0)+0+3)
  6432  0D5F  00AC               	incf	(??_SetTime+0)+0,f
  6433  0D60  0AA9               	movf	((??_SetTime+0)+0+1),w
  6434  0D61  082A               	movwf	fsr0
  6435  0D62  0084               	bcf	status, 7	;select IRP bank0
  6436  0D63  1383               	
  6437                           	movf	((??_SetTime+0)+0+3),w
  6438  0D64  082C               	movwf	indf
  6439  0D65  0080               	incf	((??_SetTime+0)+0+1),f
  6440  0D66  0AAA               	decfsz	((??_SetTime+0)+0+2),f
  6441  0D67  0BAB               	goto	u3540
  6442  0D68  2D5B               	
  6443                           	line	371
  6444                           	
  6445                           l4072:	
  6446  0D69                     ;main.c: 371: 
  6447                           	movlw	low(03h)
  6448  0D69  3003               	fcall	_LCD_Command
  6449  0D6A  160A  158A  202E  120A  158A  	line	372
  6450                           	
  6451                           l4074:	
  6452  0D6F                     ;main.c: 372:             case 10:
  6453                           	bcf	status, 5	;RP0=0, select bank0
  6454  0D6F  1283               	bcf	status, 6	;RP1=0, select bank0
  6455  0D70  1303               		movf	(SetTime@Time),w
  6456  0D71  0838               	movwf	(LCD_SendString@string)
  6457  0D72  00F1               	movlw	0
  6458  0D73  3000               	btfss	status,2
  6459  0D74  1D03               	movlw	080h
  6460  0D75  3080               	movwf	(LCD_SendString@string+1)
  6461  0D76  00F2               
  6462                           	fcall	_LCD_SendString
  6463  0D77  160A  158A  2466  120A  158A  	line	374
  6464                           	
  6465                           l4076:	
  6466  0D7C                     ;main.c: 374:             if(i == 2)
  6467                           	fcall	_Keypad_Scan
  6468  0D7C  120A  118A  2051  120A  158A  	movf	(1+(?_Keypad_Scan)),w
  6469  0D81  0877               	bcf	status, 5	;RP0=0, select bank0
  6470  0D82  1283               	bcf	status, 6	;RP1=0, select bank0
  6471  0D83  1303               	movwf	(SetTime@Key+1)
  6472  0D84  00A8               	movf	(0+(?_Keypad_Scan)),w
  6473  0D85  0876               	movwf	(SetTime@Key)
  6474  0D86  00A7               	line	376
  6475                           	
  6476                           l4078:	
  6477  0D87                     ;main.c: 376: 
  6478                           		movlw	9
  6479  0D87  3009               	xorwf	((SetTime@Key)),w
  6480  0D88  0627               iorwf	((SetTime@Key+1)),w
  6481  0D89  0428               	btfss	status,2
  6482  0D8A  1D03               	goto	u3551
  6483  0D8B  2D8D               	goto	u3550
  6484  0D8C  2D8E               u3551:
  6485  0D8D                     	goto	l4140
  6486  0D8D  2F24               u3550:
  6487  0D8E                     	line	379
  6488                           	
  6489                           l4080:	
  6490  0D8E                     ;main.c: 377:             else;main.c: 379:             break;
  6491                           	movf	(SetTime@setTime+1),w
  6492  0D8E  083B               	movwf	(RealTimeClock_set_hours@hours+1)
  6493  0D8F  00A1               	movf	(SetTime@setTime),w
  6494  0D90  083A               	movwf	(RealTimeClock_set_hours@hours)
  6495  0D91  00A0               	fcall	_RealTimeClock_set_hours
  6496  0D92  160A  158A  2104  120A  158A  	line	380
  6497                           ;main.c: 380: 
  6498                           	bcf	status, 5	;RP0=0, select bank0
  6499  0D97  1283               	bcf	status, 6	;RP1=0, select bank0
  6500  0D98  1303               	movf	1+(SetTime@setTime)+02h,w
  6501  0D99  083D               	movwf	(RealTimeClock_set_minutes@minutes+1)
  6502  0D9A  00A1               	movf	0+(SetTime@setTime)+02h,w
  6503  0D9B  083C               	movwf	(RealTimeClock_set_minutes@minutes)
  6504  0D9C  00A0               	fcall	_RealTimeClock_set_minutes
  6505  0D9D  160A  158A  2121  120A  158A  	line	381
  6506                           ;main.c: 381:             case 11:
  6507                           	bcf	status, 5	;RP0=0, select bank0
  6508  0DA2  1283               	bcf	status, 6	;RP1=0, select bank0
  6509  0DA3  1303               	movf	1+(SetTime@setTime)+04h,w
  6510  0DA4  083F               	movwf	(RealTimeClock_set_seconds@seconds+1)
  6511  0DA5  00A1               	movf	0+(SetTime@setTime)+04h,w
  6512  0DA6  083E               	movwf	(RealTimeClock_set_seconds@seconds)
  6513  0DA7  00A0               	fcall	_RealTimeClock_set_seconds
  6514  0DA8  160A  158A  213E  120A  158A  	line	383
  6515                           	
  6516                           l4082:	
  6517  0DAD                     ;main.c: 383:                 if(i == 0)
  6518                           	movlw	low(01h)
  6519  0DAD  3001               	fcall	_LCD_Command
  6520  0DAE  160A  158A  202E  120A  158A  	line	384
  6521                           	
  6522                           l4084:	
  6523  0DB3                     ;main.c: 384:                 {
  6524                           	movlw	low(03h)
  6525  0DB3  3003               	fcall	_LCD_Command
  6526  0DB4  160A  158A  202E  120A  158A  	line	386
  6527                           	
  6528                           l4086:	
  6529  0DB9                     ;main.c: 386:                     {
  6530                           	bcf	status, 5	;RP0=0, select bank0
  6531  0DB9  1283               	bcf	status, 6	;RP1=0, select bank0
  6532  0DBA  1303               		movf	(SetTime@TimeSet),w
  6533  0DBB  0839               	movwf	(LCD_SendString@string)
  6534  0DBC  00F1               	movlw	0
  6535  0DBD  3000               	btfss	status,2
  6536  0DBE  1D03               	movlw	080h
  6537  0DBF  3080               	movwf	(LCD_SendString@string+1)
  6538  0DC0  00F2               
  6539                           	fcall	_LCD_SendString
  6540  0DC1  160A  158A  2466  120A  158A  	line	387
  6541                           	
  6542                           l4088:	
  6543  0DC6                     ;main.c: 387:                         if(setTime[i] == 0)
  6544                           	movlw	0C8h
  6545  0DC6  30C8               	movwf	(Main_Delay@k)
  6546  0DC7  00F0               	movlw	0
  6547  0DC8  3000               	movwf	((Main_Delay@k))+1
  6548  0DC9  00F1               	fcall	_Main_Delay
  6549  0DCA  160A  158A  2363  120A  158A  	line	388
  6550                           	
  6551                           l4090:	
  6552  0DCF                     ;main.c: 388:                         {
  6553                           	movlw	low(01h)
  6554  0DCF  3001               	fcall	_LCD_Command
  6555  0DD0  160A  158A  202E  120A  158A  	line	389
  6556                           ;main.c: 389:                             setTime[i] = 23;
  6557                           	goto	l216
  6558  0DD5  2FFF               	line	390
  6559                           ;main.c: 390:                         }
  6560                           	
  6561                           l187:	
  6562  0DD6                     	line	391
  6563                           ;main.c: 391: 
  6564                           	goto	l4140
  6565  0DD6  2F24               	line	394
  6566                           ;main.c: 392:                         else;main.c: 394:                             setT
                                 ime[i] = setTime[i] - 1;
  6567                           	
  6568                           l190:	
  6569  0DD7                     	line	396
  6570                           	
  6571                           l4092:	
  6572  0DD7                     ;main.c: 396:                     }
  6573                           		movlw	2
  6574  0DD7  3002               	bcf	status, 5	;RP0=0, select bank0
  6575  0DD8  1283               	bcf	status, 6	;RP1=0, select bank0
  6576  0DD9  1303               	xorwf	((SetTime@i)),w
  6577  0DDA  0640               iorwf	((SetTime@i+1)),w
  6578  0DDB  0441               	btfss	status,2
  6579  0DDC  1D03               	goto	u3561
  6580  0DDD  2DDF               	goto	u3560
  6581  0DDE  2DE0               u3561:
  6582  0DDF                     	goto	l4096
  6583  0DDF  2DE3               u3560:
  6584  0DE0                     	line	397
  6585                           	
  6586                           l4094:	
  6587  0DE0                     ;main.c: 397:                     else if(is24Hour == 0)
  6588                           	clrf	(SetTime@i)
  6589  0DE0  01C0               	clrf	(SetTime@i+1)
  6590  0DE1  01C1               	goto	l4142
  6591  0DE2  2F36               	line	399
  6592                           ;main.c: 399: 
  6593                           	
  6594                           l191:	
  6595  0DE3                     	line	400
  6596                           	
  6597                           l4096:	
  6598  0DE3                     ;main.c: 400:                     }
  6599                           	movlw	01h
  6600  0DE3  3001               	addwf	(SetTime@i),f
  6601  0DE4  07C0               	skipnc
  6602  0DE5  1803               	incf	(SetTime@i+1),f
  6603  0DE6  0AC1               	movlw	0
  6604  0DE7  3000               	addwf	(SetTime@i+1),f
  6605  0DE8  07C1               	goto	l4142
  6606  0DE9  2F36               	
  6607                           l192:	
  6608  0DEA                     	line	401
  6609                           ;main.c: 401:                     else
  6610                           	goto	l4142
  6611  0DEA  2F36               	line	403
  6612                           ;main.c: 403:                 }
  6613                           	
  6614                           l194:	
  6615  0DEB                     	line	405
  6616                           	
  6617                           l4098:	
  6618  0DEB                     ;main.c: 405:                 else if(setTime[i] == 0)
  6619                           	movf	((SetTime@i)),w
  6620  0DEB  0840               iorwf	((SetTime@i+1)),w
  6621  0DEC  0441               	btfss	status,2
  6622  0DED  1D03               	goto	u3571
  6623  0DEE  2DF0               	goto	u3570
  6624  0DEF  2DF1               u3571:
  6625  0DF0                     	goto	l4114
  6626  0DF0  2E61               u3570:
  6627  0DF1                     	line	407
  6628                           	
  6629                           l4100:	
  6630  0DF1                     ;main.c: 406:                 {;main.c: 407:                     setTime[i] = 59;
  6631                           	bsf	status, 5	;RP0=1, select bank1
  6632  0DF1  1683               	bcf	status, 6	;RP1=0, select bank1
  6633  0DF2  1303               		decf	((_is24Hour)^080h),w
  6634  0DF3  032D               iorwf	((_is24Hour+1)^080h),w
  6635  0DF4  042E               	btfss	status,2
  6636  0DF5  1D03               	goto	u3581
  6637  0DF6  2DF8               	goto	u3580
  6638  0DF7  2DF9               u3581:
  6639  0DF8                     	goto	l4108
  6640  0DF8  2E35               u3580:
  6641  0DF9                     	line	409
  6642                           	
  6643                           l4102:	
  6644  0DF9                     ;main.c: 408:                 };main.c: 409: 
  6645                           	bcf	status, 5	;RP0=0, select bank0
  6646  0DF9  1283               	bcf	status, 6	;RP1=0, select bank0
  6647  0DFA  1303               	movf	(SetTime@i),w
  6648  0DFB  0840               	movwf	(??_SetTime+0)+0
  6649  0DFC  00A9               	addwf	(??_SetTime+0)+0,w
  6650  0DFD  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  6651  0DFE  3E3A               	movwf	fsr0
  6652  0DFF  0084               	bcf	status, 7	;select IRP bank0
  6653  0E00  1383               	movf	indf,w
  6654  0E01  0800               	movwf	(??_SetTime+1)+0+0
  6655  0E02  00AA               	incf	fsr0,f
  6656  0E03  0A84               	movf	indf,w
  6657  0E04  0800               	movwf	(??_SetTime+1)+0+1
  6658  0E05  00AB               	movf	((??_SetTime+1)+0),w
  6659  0E06  082A               iorwf	((??_SetTime+1)+1),w
  6660  0E07  042B               	btfss	status,2
  6661  0E08  1D03               	goto	u3591
  6662  0E09  2E0B               	goto	u3590
  6663  0E0A  2E0C               u3591:
  6664  0E0B                     	goto	l4106
  6665  0E0B  2E17               u3590:
  6666  0E0C                     	line	411
  6667                           	
  6668                           l4104:	
  6669  0E0C                     ;main.c: 410:                 else;main.c: 411:                     setTime[i] = setTime
                                 [i] - 1;
  6670                           	movf	(SetTime@i),w
  6671  0E0C  0840               	movwf	(??_SetTime+0)+0
  6672  0E0D  00A9               	addwf	(??_SetTime+0)+0,w
  6673  0E0E  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  6674  0E0F  3E3A               	movwf	fsr0
  6675  0E10  0084               	movlw	017h
  6676  0E11  3017               	movwf	indf
  6677  0E12  0080               	incf	fsr0,f
  6678  0E13  0A84               	movlw	0
  6679  0E14  3000               	movwf	indf
  6680  0E15  0080               	line	412
  6681                           ;main.c: 412:                 break;
  6682                           	goto	l4142
  6683  0E16  2F36               	line	414
  6684                           ;main.c: 414:             case 12:
  6685                           	
  6686                           l197:	
  6687  0E17                     	line	416
  6688                           	
  6689                           l4106:	
  6690  0E17                     ;main.c: 415: ;main.c: 416:                 if(i == 0)
  6691                           	movf	(SetTime@i),w
  6692  0E17  0840               	movwf	(??_SetTime+0)+0
  6693  0E18  00A9               	addwf	(??_SetTime+0)+0,w
  6694  0E19  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  6695  0E1A  3E3A               	movwf	fsr0
  6696  0E1B  0084               	movf	indf,w
  6697  0E1C  0800               	movwf	(??_SetTime+1)+0+0
  6698  0E1D  00AA               	incf	fsr0,f
  6699  0E1E  0A84               	movf	indf,w
  6700  0E1F  0800               	movwf	(??_SetTime+1)+0+1
  6701  0E20  00AB               	movf	0+(??_SetTime+1)+0,w
  6702  0E21  082A               	addlw	low(-1)
  6703  0E22  3EFF               	movwf	(??_SetTime+3)+0
  6704  0E23  00AC               	movf	1+(??_SetTime+1)+0,w
  6705  0E24  082B               	skipnc
  6706  0E25  1803               	addlw	1
  6707  0E26  3E01               	addlw	high(-1)
  6708  0E27  3EFF               	movwf	1+(??_SetTime+3)+0
  6709  0E28  00AD               	movf	(SetTime@i),w
  6710  0E29  0840               	movwf	(??_SetTime+5)+0
  6711  0E2A  00AE               	addwf	(??_SetTime+5)+0,w
  6712  0E2B  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  6713  0E2C  3E3A               	movwf	fsr0
  6714  0E2D  0084               	movf	0+(??_SetTime+3)+0,w
  6715  0E2E  082C               	movwf	indf
  6716  0E2F  0080               	incf	fsr0,f
  6717  0E30  0A84               	movf	1+(??_SetTime+3)+0,w
  6718  0E31  082D               	movwf	indf
  6719  0E32  0080               	goto	l4142
  6720  0E33  2F36               	line	417
  6721                           ;main.c: 417:                 {
  6722                           	
  6723                           l198:	
  6724  0E34                     	line	418
  6725                           ;main.c: 418: 
  6726                           	goto	l4142
  6727  0E34  2F36               	line	419
  6728                           ;main.c: 419:                     if(is24Hour == 1)
  6729                           	
  6730                           l196:	
  6731  0E35                     	
  6732                           l4108:	
  6733  0E35                     	bsf	status, 5	;RP0=1, select bank1
  6734  0E35  1683               	bcf	status, 6	;RP1=0, select bank1
  6735  0E36  1303               	movf	((_is24Hour)^080h),w
  6736  0E37  082D               iorwf	((_is24Hour+1)^080h),w
  6737  0E38  042E               	btfss	status,2
  6738  0E39  1D03               	goto	u3601
  6739  0E3A  2E3C               	goto	u3600
  6740  0E3B  2E3D               u3601:
  6741  0E3C                     	goto	l4112
  6742  0E3C  2E3F               u3600:
  6743  0E3D                     	goto	l4142
  6744  0E3D  2F36               	line	422
  6745                           	
  6746                           l4110:	
  6747  0E3E                     ;main.c: 420:                     {;main.c: 422:                         {
  6748                           	goto	l4142
  6749  0E3E  2F36               	line	423
  6750                           ;main.c: 423:                             setTime[i] = 0;
  6751                           	
  6752                           l200:	
  6753  0E3F                     	line	424
  6754                           	
  6755                           l4112:	
  6756  0E3F                     ;main.c: 424:                         }
  6757                           	bcf	status, 5	;RP0=0, select bank0
  6758  0E3F  1283               	bcf	status, 6	;RP1=0, select bank0
  6759  0E40  1303               	movf	(SetTime@i),w
  6760  0E41  0840               	movwf	(??_SetTime+0)+0
  6761  0E42  00A9               	addwf	(??_SetTime+0)+0,w
  6762  0E43  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  6763  0E44  3E3A               	movwf	fsr0
  6764  0E45  0084               	bcf	status, 7	;select IRP bank0
  6765  0E46  1383               	movf	indf,w
  6766  0E47  0800               	movwf	(??_SetTime+1)+0+0
  6767  0E48  00AA               	incf	fsr0,f
  6768  0E49  0A84               	movf	indf,w
  6769  0E4A  0800               	movwf	(??_SetTime+1)+0+1
  6770  0E4B  00AB               	movf	0+(??_SetTime+1)+0,w
  6771  0E4C  082A               	addlw	low(-1)
  6772  0E4D  3EFF               	movwf	(??_SetTime+3)+0
  6773  0E4E  00AC               	movf	1+(??_SetTime+1)+0,w
  6774  0E4F  082B               	skipnc
  6775  0E50  1803               	addlw	1
  6776  0E51  3E01               	addlw	high(-1)
  6777  0E52  3EFF               	movwf	1+(??_SetTime+3)+0
  6778  0E53  00AD               	movf	(SetTime@i),w
  6779  0E54  0840               	movwf	(??_SetTime+5)+0
  6780  0E55  00AE               	addwf	(??_SetTime+5)+0,w
  6781  0E56  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  6782  0E57  3E3A               	movwf	fsr0
  6783  0E58  0084               	movf	0+(??_SetTime+3)+0,w
  6784  0E59  082C               	movwf	indf
  6785  0E5A  0080               	incf	fsr0,f
  6786  0E5B  0A84               	movf	1+(??_SetTime+3)+0,w
  6787  0E5C  082D               	movwf	indf
  6788  0E5D  0080               	goto	l4142
  6789  0E5E  2F36               	
  6790                           l201:	
  6791  0E5F                     	goto	l4142
  6792  0E5F  2F36               	
  6793                           l199:	
  6794  0E60                     	line	425
  6795                           ;main.c: 425: 
  6796                           	goto	l4142
  6797  0E60  2F36               	line	427
  6798                           ;main.c: 427:                         {
  6799                           	
  6800                           l195:	
  6801  0E61                     	
  6802                           l4114:	
  6803  0E61                     	movf	(SetTime@i),w
  6804  0E61  0840               	movwf	(??_SetTime+0)+0
  6805  0E62  00A9               	addwf	(??_SetTime+0)+0,w
  6806  0E63  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  6807  0E64  3E3A               	movwf	fsr0
  6808  0E65  0084               	bcf	status, 7	;select IRP bank0
  6809  0E66  1383               	movf	indf,w
  6810  0E67  0800               	movwf	(??_SetTime+1)+0+0
  6811  0E68  00AA               	incf	fsr0,f
  6812  0E69  0A84               	movf	indf,w
  6813  0E6A  0800               	movwf	(??_SetTime+1)+0+1
  6814  0E6B  00AB               	movf	((??_SetTime+1)+0),w
  6815  0E6C  082A               iorwf	((??_SetTime+1)+1),w
  6816  0E6D  042B               	btfss	status,2
  6817  0E6E  1D03               	goto	u3611
  6818  0E6F  2E71               	goto	u3610
  6819  0E70  2E72               u3611:
  6820  0E71                     	goto	l4118
  6821  0E71  2E7D               u3610:
  6822  0E72                     	line	429
  6823                           	
  6824                           l4116:	
  6825  0E72                     ;main.c: 428:                             setTime[i] = setTime[i] + 1;;main.c: 429:     
                                                     }
  6826                           	movf	(SetTime@i),w
  6827  0E72  0840               	movwf	(??_SetTime+0)+0
  6828  0E73  00A9               	addwf	(??_SetTime+0)+0,w
  6829  0E74  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  6830  0E75  3E3A               	movwf	fsr0
  6831  0E76  0084               	movlw	03Bh
  6832  0E77  303B               	movwf	indf
  6833  0E78  0080               	incf	fsr0,f
  6834  0E79  0A84               	movlw	0
  6835  0E7A  3000               	movwf	indf
  6836  0E7B  0080               	line	430
  6837                           ;main.c: 430:                     }
  6838                           	goto	l4142
  6839  0E7C  2F36               	line	432
  6840                           ;main.c: 432:                     {
  6841                           	
  6842                           l203:	
  6843  0E7D                     	line	433
  6844                           	
  6845                           l4118:	
  6846  0E7D                     ;main.c: 433: 
  6847                           	movf	(SetTime@i),w
  6848  0E7D  0840               	movwf	(??_SetTime+0)+0
  6849  0E7E  00A9               	addwf	(??_SetTime+0)+0,w
  6850  0E7F  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  6851  0E80  3E3A               	movwf	fsr0
  6852  0E81  0084               	movf	indf,w
  6853  0E82  0800               	movwf	(??_SetTime+1)+0+0
  6854  0E83  00AA               	incf	fsr0,f
  6855  0E84  0A84               	movf	indf,w
  6856  0E85  0800               	movwf	(??_SetTime+1)+0+1
  6857  0E86  00AB               	movf	0+(??_SetTime+1)+0,w
  6858  0E87  082A               	addlw	low(-1)
  6859  0E88  3EFF               	movwf	(??_SetTime+3)+0
  6860  0E89  00AC               	movf	1+(??_SetTime+1)+0,w
  6861  0E8A  082B               	skipnc
  6862  0E8B  1803               	addlw	1
  6863  0E8C  3E01               	addlw	high(-1)
  6864  0E8D  3EFF               	movwf	1+(??_SetTime+3)+0
  6865  0E8E  00AD               	movf	(SetTime@i),w
  6866  0E8F  0840               	movwf	(??_SetTime+5)+0
  6867  0E90  00AE               	addwf	(??_SetTime+5)+0,w
  6868  0E91  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  6869  0E92  3E3A               	movwf	fsr0
  6870  0E93  0084               	movf	0+(??_SetTime+3)+0,w
  6871  0E94  082C               	movwf	indf
  6872  0E95  0080               	incf	fsr0,f
  6873  0E96  0A84               	movf	1+(??_SetTime+3)+0,w
  6874  0E97  082D               	movwf	indf
  6875  0E98  0080               	goto	l4142
  6876  0E99  2F36               	
  6877                           l204:	
  6878  0E9A                     	goto	l4142
  6879  0E9A  2F36               	
  6880                           l202:	
  6881  0E9B                     	line	434
  6882                           ;main.c: 434:                     }
  6883                           	goto	l4142
  6884  0E9B  2F36               	line	436
  6885                           ;main.c: 436: 
  6886                           	
  6887                           l205:	
  6888  0E9C                     	line	438
  6889                           	
  6890                           l4120:	
  6891  0E9C                     ;main.c: 438:                 {
  6892                           	movf	((SetTime@i)),w
  6893  0E9C  0840               iorwf	((SetTime@i+1)),w
  6894  0E9D  0441               	btfss	status,2
  6895  0E9E  1D03               	goto	u3621
  6896  0E9F  2EA1               	goto	u3620
  6897  0EA0  2EA2               u3621:
  6898  0EA1                     	goto	l4132
  6899  0EA1  2EE9               u3620:
  6900  0EA2                     	line	441
  6901                           	
  6902                           l4122:	
  6903  0EA2                     ;main.c: 439:                     setTime[i] = 0;;main.c: 441:                 else
  6904                           	bsf	status, 5	;RP0=1, select bank1
  6905  0EA2  1683               	bcf	status, 6	;RP1=0, select bank1
  6906  0EA3  1303               		decf	((_is24Hour)^080h),w
  6907  0EA4  032D               iorwf	((_is24Hour+1)^080h),w
  6908  0EA5  042E               	btfss	status,2
  6909  0EA6  1D03               	goto	u3631
  6910  0EA7  2EA9               	goto	u3630
  6911  0EA8  2EAA               u3631:
  6912  0EA9                     	goto	l4142
  6913  0EA9  2F36               u3630:
  6914  0EAA                     	line	443
  6915                           	
  6916                           l4124:	
  6917  0EAA                     ;main.c: 442:                     setTime[i] = setTime[i] + 1;;main.c: 443:             
                                     break;
  6918                           	bcf	status, 5	;RP0=0, select bank0
  6919  0EAA  1283               	bcf	status, 6	;RP1=0, select bank0
  6920  0EAB  1303               	movf	(SetTime@i),w
  6921  0EAC  0840               	movwf	(??_SetTime+0)+0
  6922  0EAD  00A9               	addwf	(??_SetTime+0)+0,w
  6923  0EAE  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  6924  0EAF  3E3A               	movwf	fsr0
  6925  0EB0  0084               	bcf	status, 7	;select IRP bank0
  6926  0EB1  1383               	movf	indf,w
  6927  0EB2  0800               	movwf	(??_SetTime+1)+0+0
  6928  0EB3  00AA               	incf	fsr0,f
  6929  0EB4  0A84               	movf	indf,w
  6930  0EB5  0800               	movwf	(??_SetTime+1)+0+1
  6931  0EB6  00AB               		movlw	23
  6932  0EB7  3017               	xorwf	((??_SetTime+1)+0),w
  6933  0EB8  062A               iorwf	((??_SetTime+1)+1),w
  6934  0EB9  042B               	btfss	status,2
  6935  0EBA  1D03               	goto	u3641
  6936  0EBB  2EBD               	goto	u3640
  6937  0EBC  2EBE               u3641:
  6938  0EBD                     	goto	l4128
  6939  0EBD  2EC7               u3640:
  6940  0EBE                     	line	445
  6941                           	
  6942                           l4126:	
  6943  0EBE                     ;main.c: 444:         };main.c: 445: 
  6944                           	movf	(SetTime@i),w
  6945  0EBE  0840               	movwf	(??_SetTime+0)+0
  6946  0EBF  00A9               	addwf	(??_SetTime+0)+0,w
  6947  0EC0  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  6948  0EC1  3E3A               	movwf	fsr0
  6949  0EC2  0084               	clrf	indf
  6950  0EC3  0180               	incf	fsr0,f
  6951  0EC4  0A84               	clrf	indf
  6952  0EC5  0180               	line	446
  6953                           ;main.c: 446: 
  6954                           	goto	l4142
  6955  0EC6  2F36               	line	448
  6956                           ;main.c: 448:         timeMins = setTime[1];
  6957                           	
  6958                           l208:	
  6959  0EC7                     	line	450
  6960                           	
  6961                           l4128:	
  6962  0EC7                     ;main.c: 449:         timeSecs = setTime[2];;main.c: 450:         digits[1] = timeHours 
                                 % 10 + 48;
  6963                           	movf	(SetTime@i),w
  6964  0EC7  0840               	movwf	(??_SetTime+0)+0
  6965  0EC8  00A9               	addwf	(??_SetTime+0)+0,w
  6966  0EC9  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  6967  0ECA  3E3A               	movwf	fsr0
  6968  0ECB  0084               	movf	indf,w
  6969  0ECC  0800               	movwf	(??_SetTime+1)+0+0
  6970  0ECD  00AA               	incf	fsr0,f
  6971  0ECE  0A84               	movf	indf,w
  6972  0ECF  0800               	movwf	(??_SetTime+1)+0+1
  6973  0ED0  00AB               	movf	0+(??_SetTime+1)+0,w
  6974  0ED1  082A               	addlw	low(01h)
  6975  0ED2  3E01               	movwf	(??_SetTime+3)+0
  6976  0ED3  00AC               	movf	1+(??_SetTime+1)+0,w
  6977  0ED4  082B               	skipnc
  6978  0ED5  1803               	addlw	1
  6979  0ED6  3E01               	addlw	high(01h)
  6980  0ED7  3E00               	movwf	1+(??_SetTime+3)+0
  6981  0ED8  00AD               	movf	(SetTime@i),w
  6982  0ED9  0840               	movwf	(??_SetTime+5)+0
  6983  0EDA  00AE               	addwf	(??_SetTime+5)+0,w
  6984  0EDB  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  6985  0EDC  3E3A               	movwf	fsr0
  6986  0EDD  0084               	movf	0+(??_SetTime+3)+0,w
  6987  0EDE  082C               	movwf	indf
  6988  0EDF  0080               	incf	fsr0,f
  6989  0EE0  0A84               	movf	1+(??_SetTime+3)+0,w
  6990  0EE1  082D               	movwf	indf
  6991  0EE2  0080               	goto	l4142
  6992  0EE3  2F36               	line	451
  6993                           ;main.c: 451:         timeHours /= 10;
  6994                           	
  6995                           l209:	
  6996  0EE4                     	line	452
  6997                           ;main.c: 452:         digits[0] = timeHours % 10 + 48;
  6998                           	goto	l4142
  6999  0EE4  2F36               	line	453
  7000                           ;main.c: 453:         digits[4] = timeMins % 10 + 48;
  7001                           	
  7002                           l207:	
  7003  0EE5                     	goto	l4142
  7004  0EE5  2F36               	
  7005                           l4130:	
  7006  0EE6                     	goto	l4142
  7007  0EE6  2F36               	line	456
  7008                           ;main.c: 454:         timeMins /= 10;;main.c: 456:         digits[7] = timeSecs % 10 + 4
                                 8;
  7009                           	
  7010                           l211:	
  7011  0EE7                     	goto	l4142
  7012  0EE7  2F36               	
  7013                           l210:	
  7014  0EE8                     	line	457
  7015                           ;main.c: 457:         timeSecs /= 10;
  7016                           	goto	l4142
  7017  0EE8  2F36               	line	459
  7018                           ;main.c: 459:         LCD_SendString(digits);
  7019                           	
  7020                           l206:	
  7021  0EE9                     	
  7022                           l4132:	
  7023  0EE9                     	movf	(SetTime@i),w
  7024  0EE9  0840               	movwf	(??_SetTime+0)+0
  7025  0EEA  00A9               	addwf	(??_SetTime+0)+0,w
  7026  0EEB  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  7027  0EEC  3E3A               	movwf	fsr0
  7028  0EED  0084               	bcf	status, 7	;select IRP bank0
  7029  0EEE  1383               	movf	indf,w
  7030  0EEF  0800               	movwf	(??_SetTime+1)+0+0
  7031  0EF0  00AA               	incf	fsr0,f
  7032  0EF1  0A84               	movf	indf,w
  7033  0EF2  0800               	movwf	(??_SetTime+1)+0+1
  7034  0EF3  00AB               		movlw	59
  7035  0EF4  303B               	xorwf	((??_SetTime+1)+0),w
  7036  0EF5  062A               iorwf	((??_SetTime+1)+1),w
  7037  0EF6  042B               	btfss	status,2
  7038  0EF7  1D03               	goto	u3651
  7039  0EF8  2EFA               	goto	u3650
  7040  0EF9  2EFB               u3651:
  7041  0EFA                     	goto	l4136
  7042  0EFA  2F04               u3650:
  7043  0EFB                     	line	461
  7044                           	
  7045                           l4134:	
  7046  0EFB                     ;main.c: 460:     };main.c: 461: }
  7047                           	movf	(SetTime@i),w
  7048  0EFB  0840               	movwf	(??_SetTime+0)+0
  7049  0EFC  00A9               	addwf	(??_SetTime+0)+0,w
  7050  0EFD  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  7051  0EFE  3E3A               	movwf	fsr0
  7052  0EFF  0084               	clrf	indf
  7053  0F00  0180               	incf	fsr0,f
  7054  0F01  0A84               	clrf	indf
  7055  0F02  0180               	line	462
  7056                           ;main.c: 462: 
  7057                           	goto	l4142
  7058  0F03  2F36               	line	463
  7059                           ;main.c: 463: 
  7060                           	
  7061                           l213:	
  7062  0F04                     	line	464
  7063                           	
  7064                           l4136:	
  7065  0F04                     ;main.c: 464: void CheckDay(void)
  7066                           	movf	(SetTime@i),w
  7067  0F04  0840               	movwf	(??_SetTime+0)+0
  7068  0F05  00A9               	addwf	(??_SetTime+0)+0,w
  7069  0F06  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  7070  0F07  3E3A               	movwf	fsr0
  7071  0F08  0084               	movf	indf,w
  7072  0F09  0800               	movwf	(??_SetTime+1)+0+0
  7073  0F0A  00AA               	incf	fsr0,f
  7074  0F0B  0A84               	movf	indf,w
  7075  0F0C  0800               	movwf	(??_SetTime+1)+0+1
  7076  0F0D  00AB               	movf	0+(??_SetTime+1)+0,w
  7077  0F0E  082A               	addlw	low(01h)
  7078  0F0F  3E01               	movwf	(??_SetTime+3)+0
  7079  0F10  00AC               	movf	1+(??_SetTime+1)+0,w
  7080  0F11  082B               	skipnc
  7081  0F12  1803               	addlw	1
  7082  0F13  3E01               	addlw	high(01h)
  7083  0F14  3E00               	movwf	1+(??_SetTime+3)+0
  7084  0F15  00AD               	movf	(SetTime@i),w
  7085  0F16  0840               	movwf	(??_SetTime+5)+0
  7086  0F17  00AE               	addwf	(??_SetTime+5)+0,w
  7087  0F18  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  7088  0F19  3E3A               	movwf	fsr0
  7089  0F1A  0084               	movf	0+(??_SetTime+3)+0,w
  7090  0F1B  082C               	movwf	indf
  7091  0F1C  0080               	incf	fsr0,f
  7092  0F1D  0A84               	movf	1+(??_SetTime+3)+0,w
  7093  0F1E  082D               	movwf	indf
  7094  0F1F  0080               	goto	l4142
  7095  0F20  2F36               	
  7096                           l214:	
  7097  0F21                     	goto	l4142
  7098  0F21  2F36               	
  7099                           l212:	
  7100  0F22                     	line	465
  7101                           ;main.c: 465: {
  7102                           	goto	l4142
  7103  0F22  2F36               	line	466
  7104                           	
  7105                           l4138:	
  7106  0F23                     ;main.c: 466:     switch(day_of_week)
  7107                           	goto	l4142
  7108  0F23  2F36               	
  7109                           l189:	
  7110  0F24                     	
  7111                           l4140:	
  7112  0F24                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7113                           ; Switch size 1, requested type "space"
  7114                           ; Number of cases is 1, Range of values is 0 to 0
  7115                           ; switch strategies available:
  7116                           ; Name         Instructions Cycles
  7117                           ; simple_byte            4     3 (average)
  7118                           ; direct_byte           11     8 (fixed)
  7119                           ; jumptable            260     6 (fixed)
  7120                           ;	Chosen strategy is simple_byte
  7121                           
  7122                           	bcf	status, 5	;RP0=0, select bank0
  7123  0F24  1283               	bcf	status, 6	;RP1=0, select bank0
  7124  0F25  1303               	movf (SetTime@Key+1),w
  7125  0F26  0828               	opt asmopt_push
  7126                           	opt asmopt_off
  7127                           	xorlw	0^0	; case 0
  7128  0F27  3A00               	skipnz
  7129  0F28  1903               	goto	l4920
  7130  0F29  2F2B               	goto	l4142
  7131  0F2A  2F36               	opt asmopt_pop
  7132                           	
  7133                           l4920:	
  7134  0F2B                     ; Switch size 1, requested type "space"
  7135                           ; Number of cases is 3, Range of values is 10 to 12
  7136                           ; switch strategies available:
  7137                           ; Name         Instructions Cycles
  7138                           ; simple_byte           10     6 (average)
  7139                           ; direct_byte           20    11 (fixed)
  7140                           ; jumptable            263     9 (fixed)
  7141                           ;	Chosen strategy is simple_byte
  7142                           
  7143                           	movf (SetTime@Key),w
  7144  0F2B  0827               	opt asmopt_push
  7145                           	opt asmopt_off
  7146                           	xorlw	10^0	; case 10
  7147  0F2C  3A0A               	skipnz
  7148  0F2D  1903               	goto	l4092
  7149  0F2E  2DD7               	xorlw	11^10	; case 11
  7150  0F2F  3A01               	skipnz
  7151  0F30  1903               	goto	l4098
  7152  0F31  2DEB               	xorlw	12^11	; case 12
  7153  0F32  3A07               	skipnz
  7154  0F33  1903               	goto	l4120
  7155  0F34  2E9C               	goto	l4142
  7156  0F35  2F36               	opt asmopt_pop
  7157                           
  7158                           	
  7159                           l193:	
  7160  0F36                     	line	469
  7161                           	
  7162                           l4142:	
  7163  0F36                     ;main.c: 469: 
  7164                           	bcf	status, 5	;RP0=0, select bank0
  7165  0F36  1283               	movf	(SetTime@setTime+1),w
  7166  0F37  083B               	movwf	(_timeHours+1)
  7167  0F38  00EC               	movf	(SetTime@setTime),w
  7168  0F39  083A               	movwf	(_timeHours)
  7169  0F3A  00EB               	line	470
  7170                           ;main.c: 470:         case 1:
  7171                           	movf	1+(SetTime@setTime)+02h,w
  7172  0F3B  083D               	movwf	(_timeMins+1)
  7173  0F3C  00EA               	movf	0+(SetTime@setTime)+02h,w
  7174  0F3D  083C               	movwf	(_timeMins)
  7175  0F3E  00E9               	line	471
  7176                           ;main.c: 471:             isWeekDay = 1;
  7177                           	movf	1+(SetTime@setTime)+04h,w
  7178  0F3F  083F               	movwf	(_timeSecs+1)
  7179  0F40  00E8               	movf	0+(SetTime@setTime)+04h,w
  7180  0F41  083E               	movwf	(_timeSecs)
  7181  0F42  00E7               	line	472
  7182                           	
  7183                           l4144:	
  7184  0F43                     ;main.c: 472:             break;
  7185                           	movlw	0Ah
  7186  0F43  300A               	movwf	(___awmod@divisor)
  7187  0F44  00F0               	movlw	0
  7188  0F45  3000               	movwf	((___awmod@divisor))+1
  7189  0F46  00F1               	movf	(_timeHours+1),w
  7190  0F47  086C               	movwf	(___awmod@dividend+1)
  7191  0F48  00F3               	movf	(_timeHours),w
  7192  0F49  086B               	movwf	(___awmod@dividend)
  7193  0F4A  00F2               	fcall	___awmod
  7194  0F4B  160A  158A  26B9  120A  158A  	movf	(0+(?___awmod)),w
  7195  0F50  0870               	addlw	030h
  7196  0F51  3E30               	bcf	status, 5	;RP0=0, select bank0
  7197  0F52  1283               	bcf	status, 6	;RP1=0, select bank0
  7198  0F53  1303               	movwf	(??_SetTime+0)+0
  7199  0F54  00A9               	movf	(??_SetTime+0)+0,w
  7200  0F55  0829               	movwf	0+(SetTime@digits)+01h
  7201  0F56  00B0               	line	473
  7202                           	
  7203                           l4146:	
  7204  0F57                     ;main.c: 473:         case 2:
  7205                           	movlw	0Ah
  7206  0F57  300A               	movwf	(___awdiv@divisor)
  7207  0F58  00F0               	movlw	0
  7208  0F59  3000               	movwf	((___awdiv@divisor))+1
  7209  0F5A  00F1               	movf	(_timeHours+1),w
  7210  0F5B  086C               	movwf	(___awdiv@dividend+1)
  7211  0F5C  00F3               	movf	(_timeHours),w
  7212  0F5D  086B               	movwf	(___awdiv@dividend)
  7213  0F5E  00F2               	fcall	___awdiv
  7214  0F5F  160A  158A  271C  120A  158A  	movf	(1+(?___awdiv)),w
  7215  0F64  0871               	bcf	status, 5	;RP0=0, select bank0
  7216  0F65  1283               	bcf	status, 6	;RP1=0, select bank0
  7217  0F66  1303               	movwf	(_timeHours+1)
  7218  0F67  00EC               	movf	(0+(?___awdiv)),w
  7219  0F68  0870               	movwf	(_timeHours)
  7220  0F69  00EB               	line	474
  7221                           	
  7222                           l4148:	
  7223  0F6A                     ;main.c: 474:             isWeekDay = 1;
  7224                           	movlw	0Ah
  7225  0F6A  300A               	movwf	(___awmod@divisor)
  7226  0F6B  00F0               	movlw	0
  7227  0F6C  3000               	movwf	((___awmod@divisor))+1
  7228  0F6D  00F1               	movf	(_timeHours+1),w
  7229  0F6E  086C               	movwf	(___awmod@dividend+1)
  7230  0F6F  00F3               	movf	(_timeHours),w
  7231  0F70  086B               	movwf	(___awmod@dividend)
  7232  0F71  00F2               	fcall	___awmod
  7233  0F72  160A  158A  26B9  120A  158A  	movf	(0+(?___awmod)),w
  7234  0F77  0870               	addlw	030h
  7235  0F78  3E30               	bcf	status, 5	;RP0=0, select bank0
  7236  0F79  1283               	bcf	status, 6	;RP1=0, select bank0
  7237  0F7A  1303               	movwf	(??_SetTime+0)+0
  7238  0F7B  00A9               	movf	(??_SetTime+0)+0,w
  7239  0F7C  0829               	movwf	(SetTime@digits)
  7240  0F7D  00AF               	line	475
  7241                           	
  7242                           l4150:	
  7243  0F7E                     ;main.c: 475:             break;
  7244                           	movlw	0Ah
  7245  0F7E  300A               	movwf	(___awmod@divisor)
  7246  0F7F  00F0               	movlw	0
  7247  0F80  3000               	movwf	((___awmod@divisor))+1
  7248  0F81  00F1               	movf	(_timeMins+1),w
  7249  0F82  086A               	movwf	(___awmod@dividend+1)
  7250  0F83  00F3               	movf	(_timeMins),w
  7251  0F84  0869               	movwf	(___awmod@dividend)
  7252  0F85  00F2               	fcall	___awmod
  7253  0F86  160A  158A  26B9  120A  158A  	movf	(0+(?___awmod)),w
  7254  0F8B  0870               	addlw	030h
  7255  0F8C  3E30               	bcf	status, 5	;RP0=0, select bank0
  7256  0F8D  1283               	bcf	status, 6	;RP1=0, select bank0
  7257  0F8E  1303               	movwf	(??_SetTime+0)+0
  7258  0F8F  00A9               	movf	(??_SetTime+0)+0,w
  7259  0F90  0829               	movwf	0+(SetTime@digits)+04h
  7260  0F91  00B3               	line	476
  7261                           	
  7262                           l4152:	
  7263  0F92                     ;main.c: 476:         case 3:
  7264                           	movlw	0Ah
  7265  0F92  300A               	movwf	(___awdiv@divisor)
  7266  0F93  00F0               	movlw	0
  7267  0F94  3000               	movwf	((___awdiv@divisor))+1
  7268  0F95  00F1               	movf	(_timeMins+1),w
  7269  0F96  086A               	movwf	(___awdiv@dividend+1)
  7270  0F97  00F3               	movf	(_timeMins),w
  7271  0F98  0869               	movwf	(___awdiv@dividend)
  7272  0F99  00F2               	fcall	___awdiv
  7273  0F9A  160A  158A  271C  120A  158A  	movf	(1+(?___awdiv)),w
  7274  0F9F  0871               	bcf	status, 5	;RP0=0, select bank0
  7275  0FA0  1283               	bcf	status, 6	;RP1=0, select bank0
  7276  0FA1  1303               	movwf	(_timeMins+1)
  7277  0FA2  00EA               	movf	(0+(?___awdiv)),w
  7278  0FA3  0870               	movwf	(_timeMins)
  7279  0FA4  00E9               	line	477
  7280                           	
  7281                           l4154:	
  7282  0FA5                     ;main.c: 477:             isWeekDay = 1;
  7283                           	movlw	0Ah
  7284  0FA5  300A               	movwf	(___awmod@divisor)
  7285  0FA6  00F0               	movlw	0
  7286  0FA7  3000               	movwf	((___awmod@divisor))+1
  7287  0FA8  00F1               	movf	(_timeMins+1),w
  7288  0FA9  086A               	movwf	(___awmod@dividend+1)
  7289  0FAA  00F3               	movf	(_timeMins),w
  7290  0FAB  0869               	movwf	(___awmod@dividend)
  7291  0FAC  00F2               	fcall	___awmod
  7292  0FAD  160A  158A  26B9  120A  158A  	movf	(0+(?___awmod)),w
  7293  0FB2  0870               	addlw	030h
  7294  0FB3  3E30               	bcf	status, 5	;RP0=0, select bank0
  7295  0FB4  1283               	bcf	status, 6	;RP1=0, select bank0
  7296  0FB5  1303               	movwf	(??_SetTime+0)+0
  7297  0FB6  00A9               	movf	(??_SetTime+0)+0,w
  7298  0FB7  0829               	movwf	0+(SetTime@digits)+03h
  7299  0FB8  00B2               	line	478
  7300                           	
  7301                           l4156:	
  7302  0FB9                     ;main.c: 478:             break;
  7303                           	movlw	0Ah
  7304  0FB9  300A               	movwf	(___awmod@divisor)
  7305  0FBA  00F0               	movlw	0
  7306  0FBB  3000               	movwf	((___awmod@divisor))+1
  7307  0FBC  00F1               	movf	(_timeSecs+1),w
  7308  0FBD  0868               	movwf	(___awmod@dividend+1)
  7309  0FBE  00F3               	movf	(_timeSecs),w
  7310  0FBF  0867               	movwf	(___awmod@dividend)
  7311  0FC0  00F2               	fcall	___awmod
  7312  0FC1  160A  158A  26B9  120A  158A  	movf	(0+(?___awmod)),w
  7313  0FC6  0870               	addlw	030h
  7314  0FC7  3E30               	bcf	status, 5	;RP0=0, select bank0
  7315  0FC8  1283               	bcf	status, 6	;RP1=0, select bank0
  7316  0FC9  1303               	movwf	(??_SetTime+0)+0
  7317  0FCA  00A9               	movf	(??_SetTime+0)+0,w
  7318  0FCB  0829               	movwf	0+(SetTime@digits)+07h
  7319  0FCC  00B6               	line	479
  7320                           	
  7321                           l4158:	
  7322  0FCD                     ;main.c: 479:         case 4:
  7323                           	movlw	0Ah
  7324  0FCD  300A               	movwf	(___awdiv@divisor)
  7325  0FCE  00F0               	movlw	0
  7326  0FCF  3000               	movwf	((___awdiv@divisor))+1
  7327  0FD0  00F1               	movf	(_timeSecs+1),w
  7328  0FD1  0868               	movwf	(___awdiv@dividend+1)
  7329  0FD2  00F3               	movf	(_timeSecs),w
  7330  0FD3  0867               	movwf	(___awdiv@dividend)
  7331  0FD4  00F2               	fcall	___awdiv
  7332  0FD5  160A  158A  271C  120A  158A  	movf	(1+(?___awdiv)),w
  7333  0FDA  0871               	bcf	status, 5	;RP0=0, select bank0
  7334  0FDB  1283               	bcf	status, 6	;RP1=0, select bank0
  7335  0FDC  1303               	movwf	(_timeSecs+1)
  7336  0FDD  00E8               	movf	(0+(?___awdiv)),w
  7337  0FDE  0870               	movwf	(_timeSecs)
  7338  0FDF  00E7               	line	480
  7339                           	
  7340                           l4160:	
  7341  0FE0                     ;main.c: 480:             isWeekDay = 1;
  7342                           	movlw	0Ah
  7343  0FE0  300A               	movwf	(___awmod@divisor)
  7344  0FE1  00F0               	movlw	0
  7345  0FE2  3000               	movwf	((___awmod@divisor))+1
  7346  0FE3  00F1               	movf	(_timeSecs+1),w
  7347  0FE4  0868               	movwf	(___awmod@dividend+1)
  7348  0FE5  00F3               	movf	(_timeSecs),w
  7349  0FE6  0867               	movwf	(___awmod@dividend)
  7350  0FE7  00F2               	fcall	___awmod
  7351  0FE8  160A  158A  26B9  120A  158A  	movf	(0+(?___awmod)),w
  7352  0FED  0870               	addlw	030h
  7353  0FEE  3E30               	bcf	status, 5	;RP0=0, select bank0
  7354  0FEF  1283               	bcf	status, 6	;RP1=0, select bank0
  7355  0FF0  1303               	movwf	(??_SetTime+0)+0
  7356  0FF1  00A9               	movf	(??_SetTime+0)+0,w
  7357  0FF2  0829               	movwf	0+(SetTime@digits)+06h
  7358  0FF3  00B5               	line	481
  7359                           	
  7360                           l4162:	
  7361  0FF4                     ;main.c: 481:             break;
  7362                           	movlw	(low(SetTime@digits|((0x0)<<8))&0ffh)
  7363  0FF4  302F               	movwf	(LCD_SendString@string)
  7364  0FF5  00F1               	movlw	(0x0)
  7365  0FF6  3000               	movwf	(LCD_SendString@string+1)
  7366  0FF7  00F2               	fcall	_LCD_SendString
  7367  0FF8  160A  158A  2466  120A  158A  	goto	l4070
  7368  0FFD  2D51               	line	482
  7369                           ;main.c: 482:         case 5:
  7370                           	
  7371                           l215:	
  7372  0FFE                     	goto	l4070
  7373  0FFE  2D51               	
  7374                           l188:	
  7375  0FFF                     	line	483
  7376                           	
  7377                           l216:	
  7378  0FFF                     	return
  7379  0FFF  0008               	opt stack 0
  7380                           GLOBAL	__end_of_SetTime
  7381                           	__end_of_SetTime:
  7382  1000                     	signat	_SetTime,4217
  7383                           	global	_RealTimeClock_set_seconds
  7384                           
  7385 ;; *************** function _RealTimeClock_set_seconds *****************
  7386 ;; Defined at:
  7387 ;;		line 144 in file "realtimeclock.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  seconds         2    0[BANK0 ] int 
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;		None
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  1    wreg      void 
  7394 ;; Registers used:
  7395 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7401 ;;      Params:         0       2       0       0       0
  7402 ;;      Locals:         0       0       0       0       0
  7403 ;;      Temps:          0       0       0       0       0
  7404 ;;      Totals:         0       2       0       0       0
  7405 ;;Total ram usage:        2 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; Hardware stack levels required when called:    2
  7408 ;; This function calls:
  7409 ;;		_RealTimeClock_write_byte
  7410 ;;		___int_to_hex
  7411 ;; This function is called by:
  7412 ;;		_SetTime
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  7416                           	file	"realtimeclock.c"
  7417                           	line	144
  7418                           global __ptext9
  7419                           __ptext9:	;psect for function _RealTimeClock_set_seconds
  7420  193E                     psect	text9
  7421                           	file	"realtimeclock.c"
  7422                           	line	144
  7423                           	global	__size_of_RealTimeClock_set_seconds
  7424                           	__size_of_RealTimeClock_set_seconds	equ	__end_of_RealTimeClock_set_seconds-_RealTimeClo
                                 ck_set_seconds
  7425  001D                     	
  7426                           _RealTimeClock_set_seconds:	
  7427  193E                     ;incstack = 0
  7428                           	opt	stack 3
  7429                           ; Regs used in _RealTimeClock_set_seconds: [wreg+status,2+status,0+btemp+1+pclath+cstack
                                 ]
  7430                           	line	145
  7431                           	
  7432                           l3946:	
  7433  193E                     ;realtimeclock.c: 145:     RB5 = 1;
  7434                           	bcf	status, 5	;RP0=0, select bank0
  7435  193E  1283               	bcf	status, 6	;RP1=0, select bank0
  7436  193F  1303               	bsf	(53/8),(53)&7	;volatile
  7437  1940  1686               	line	146
  7438                           	
  7439                           l3948:	
  7440  1941                     ;realtimeclock.c: 146:     RealTimeClock_write_byte(0x80);
  7441                           	movlw	low(080h)
  7442  1941  3080               	fcall	_RealTimeClock_write_byte
  7443  1942  160A  158A  2328  160A  158A  	line	147
  7444                           ;realtimeclock.c: 147:     RealTimeClock_write_byte(__int_to_hex(seconds));
  7445                           	bcf	status, 5	;RP0=0, select bank0
  7446  1947  1283               	bcf	status, 6	;RP1=0, select bank0
  7447  1948  1303               	movf	(RealTimeClock_set_seconds@seconds+1),w
  7448  1949  0821               	movwf	(___int_to_hex@integer+1)
  7449  194A  00F8               	movf	(RealTimeClock_set_seconds@seconds),w
  7450  194B  0820               	movwf	(___int_to_hex@integer)
  7451  194C  00F7               	fcall	___int_to_hex
  7452  194D  160A  158A  23E2  160A  158A  	fcall	_RealTimeClock_write_byte
  7453  1952  160A  158A  2328  160A  158A  	line	148
  7454                           	
  7455                           l3950:	
  7456  1957                     ;realtimeclock.c: 148:     RB5 = 0;
  7457                           	bcf	status, 5	;RP0=0, select bank0
  7458  1957  1283               	bcf	status, 6	;RP1=0, select bank0
  7459  1958  1303               	bcf	(53/8),(53)&7	;volatile
  7460  1959  1286               	line	149
  7461                           	
  7462                           l452:	
  7463  195A                     	return
  7464  195A  0008               	opt stack 0
  7465                           GLOBAL	__end_of_RealTimeClock_set_seconds
  7466                           	__end_of_RealTimeClock_set_seconds:
  7467  195B                     	signat	_RealTimeClock_set_seconds,4217
  7468                           	global	_RealTimeClock_set_minutes
  7469                           
  7470 ;; *************** function _RealTimeClock_set_minutes *****************
  7471 ;; Defined at:
  7472 ;;		line 151 in file "realtimeclock.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;  minutes         2    0[BANK0 ] int 
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;		None
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  1    wreg      void 
  7479 ;; Registers used:
  7480 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7486 ;;      Params:         0       2       0       0       0
  7487 ;;      Locals:         0       0       0       0       0
  7488 ;;      Temps:          0       0       0       0       0
  7489 ;;      Totals:         0       2       0       0       0
  7490 ;;Total ram usage:        2 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; Hardware stack levels required when called:    2
  7493 ;; This function calls:
  7494 ;;		_RealTimeClock_write_byte
  7495 ;;		___int_to_hex
  7496 ;; This function is called by:
  7497 ;;		_SetTime
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  7501                           	line	151
  7502                           global __ptext10
  7503                           __ptext10:	;psect for function _RealTimeClock_set_minutes
  7504  1921                     psect	text10
  7505                           	file	"realtimeclock.c"
  7506                           	line	151
  7507                           	global	__size_of_RealTimeClock_set_minutes
  7508                           	__size_of_RealTimeClock_set_minutes	equ	__end_of_RealTimeClock_set_minutes-_RealTimeClo
                                 ck_set_minutes
  7509  001D                     	
  7510                           _RealTimeClock_set_minutes:	
  7511  1921                     ;incstack = 0
  7512                           	opt	stack 3
  7513                           ; Regs used in _RealTimeClock_set_minutes: [wreg+status,2+status,0+btemp+1+pclath+cstack
                                 ]
  7514                           	line	152
  7515                           	
  7516                           l3940:	
  7517  1921                     ;realtimeclock.c: 152:     RB5 = 1;
  7518                           	bcf	status, 5	;RP0=0, select bank0
  7519  1921  1283               	bcf	status, 6	;RP1=0, select bank0
  7520  1922  1303               	bsf	(53/8),(53)&7	;volatile
  7521  1923  1686               	line	153
  7522                           	
  7523                           l3942:	
  7524  1924                     ;realtimeclock.c: 153:     RealTimeClock_write_byte(0x82);
  7525                           	movlw	low(082h)
  7526  1924  3082               	fcall	_RealTimeClock_write_byte
  7527  1925  160A  158A  2328  160A  158A  	line	154
  7528                           ;realtimeclock.c: 154:     RealTimeClock_write_byte(__int_to_hex(minutes));
  7529                           	bcf	status, 5	;RP0=0, select bank0
  7530  192A  1283               	bcf	status, 6	;RP1=0, select bank0
  7531  192B  1303               	movf	(RealTimeClock_set_minutes@minutes+1),w
  7532  192C  0821               	movwf	(___int_to_hex@integer+1)
  7533  192D  00F8               	movf	(RealTimeClock_set_minutes@minutes),w
  7534  192E  0820               	movwf	(___int_to_hex@integer)
  7535  192F  00F7               	fcall	___int_to_hex
  7536  1930  160A  158A  23E2  160A  158A  	fcall	_RealTimeClock_write_byte
  7537  1935  160A  158A  2328  160A  158A  	line	155
  7538                           	
  7539                           l3944:	
  7540  193A                     ;realtimeclock.c: 155:     RB5 = 0;
  7541                           	bcf	status, 5	;RP0=0, select bank0
  7542  193A  1283               	bcf	status, 6	;RP1=0, select bank0
  7543  193B  1303               	bcf	(53/8),(53)&7	;volatile
  7544  193C  1286               	line	156
  7545                           	
  7546                           l455:	
  7547  193D                     	return
  7548  193D  0008               	opt stack 0
  7549                           GLOBAL	__end_of_RealTimeClock_set_minutes
  7550                           	__end_of_RealTimeClock_set_minutes:
  7551  193E                     	signat	_RealTimeClock_set_minutes,4217
  7552                           	global	_RealTimeClock_set_hours
  7553                           
  7554 ;; *************** function _RealTimeClock_set_hours *****************
  7555 ;; Defined at:
  7556 ;;		line 158 in file "realtimeclock.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  hours           2    0[BANK0 ] int 
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;		None
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  1    wreg      void 
  7563 ;; Registers used:
  7564 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7570 ;;      Params:         0       2       0       0       0
  7571 ;;      Locals:         0       0       0       0       0
  7572 ;;      Temps:          0       0       0       0       0
  7573 ;;      Totals:         0       2       0       0       0
  7574 ;;Total ram usage:        2 bytes
  7575 ;; Hardware stack levels used:    1
  7576 ;; Hardware stack levels required when called:    2
  7577 ;; This function calls:
  7578 ;;		_RealTimeClock_write_byte
  7579 ;;		___int_to_hex
  7580 ;; This function is called by:
  7581 ;;		_SetTime
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  7585                           	line	158
  7586                           global __ptext11
  7587                           __ptext11:	;psect for function _RealTimeClock_set_hours
  7588  1904                     psect	text11
  7589                           	file	"realtimeclock.c"
  7590                           	line	158
  7591                           	global	__size_of_RealTimeClock_set_hours
  7592                           	__size_of_RealTimeClock_set_hours	equ	__end_of_RealTimeClock_set_hours-_RealTimeClock_s
                                 et_hours
  7593  001D                     	
  7594                           _RealTimeClock_set_hours:	
  7595  1904                     ;incstack = 0
  7596                           	opt	stack 3
  7597                           ; Regs used in _RealTimeClock_set_hours: [wreg+status,2+status,0+btemp+1+pclath+cstack]

  7598                           	line	159
  7599                           	
  7600                           l3934:	
  7601  1904                     ;realtimeclock.c: 159:     RB5 = 1;
  7602                           	bcf	status, 5	;RP0=0, select bank0
  7603  1904  1283               	bcf	status, 6	;RP1=0, select bank0
  7604  1905  1303               	bsf	(53/8),(53)&7	;volatile
  7605  1906  1686               	line	160
  7606                           	
  7607                           l3936:	
  7608  1907                     ;realtimeclock.c: 160:     RealTimeClock_write_byte(0x84);
  7609                           	movlw	low(084h)
  7610  1907  3084               	fcall	_RealTimeClock_write_byte
  7611  1908  160A  158A  2328  160A  158A  	line	161
  7612                           ;realtimeclock.c: 161:     RealTimeClock_write_byte(__int_to_hex(hours));
  7613                           	bcf	status, 5	;RP0=0, select bank0
  7614  190D  1283               	bcf	status, 6	;RP1=0, select bank0
  7615  190E  1303               	movf	(RealTimeClock_set_hours@hours+1),w
  7616  190F  0821               	movwf	(___int_to_hex@integer+1)
  7617  1910  00F8               	movf	(RealTimeClock_set_hours@hours),w
  7618  1911  0820               	movwf	(___int_to_hex@integer)
  7619  1912  00F7               	fcall	___int_to_hex
  7620  1913  160A  158A  23E2  160A  158A  	fcall	_RealTimeClock_write_byte
  7621  1918  160A  158A  2328  160A  158A  	line	162
  7622                           	
  7623                           l3938:	
  7624  191D                     ;realtimeclock.c: 162:     RB5 = 0;
  7625                           	bcf	status, 5	;RP0=0, select bank0
  7626  191D  1283               	bcf	status, 6	;RP1=0, select bank0
  7627  191E  1303               	bcf	(53/8),(53)&7	;volatile
  7628  191F  1286               	line	163
  7629                           	
  7630                           l458:	
  7631  1920                     	return
  7632  1920  0008               	opt stack 0
  7633                           GLOBAL	__end_of_RealTimeClock_set_hours
  7634                           	__end_of_RealTimeClock_set_hours:
  7635  1921                     	signat	_RealTimeClock_set_hours,4217
  7636                           	global	_SetDate
  7637                           
  7638 ;; *************** function _SetDate *****************
  7639 ;; Defined at:
  7640 ;;		line 516 in file "main.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;  Key             2    7[BANK0 ] int 
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;  Date            9   15[BANK0 ] unsigned char [9]
  7645 ;;  dateArray       6   32[BANK0 ] int [3]
  7646 ;;  i               2   38[BANK0 ] int 
  7647 ;;  thirtyOne       2   30[BANK0 ] int 
  7648 ;;  thirty          2   28[BANK0 ] int 
  7649 ;;  feb             2   24[BANK0 ] int 
  7650 ;;  DateSet         1   27[BANK0 ] PTR unsigned char 
  7651 ;;		 -> STR_21(13), 
  7652 ;;  DateDis         1   26[BANK0 ] PTR unsigned char 
  7653 ;;		 -> STR_20(6), 
  7654 ;; Return value:  Size  Location     Type
  7655 ;;                  1    wreg      void 
  7656 ;; Registers used:
  7657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 0/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7663 ;;      Params:         0       2       0       0       0
  7664 ;;      Locals:         0      25       0       0       0
  7665 ;;      Temps:          0       6       0       0       0
  7666 ;;      Totals:         0      33       0       0       0
  7667 ;;Total ram usage:       33 bytes
  7668 ;; Hardware stack levels used:    1
  7669 ;; Hardware stack levels required when called:    3
  7670 ;; This function calls:
  7671 ;;		_CheckDay
  7672 ;;		_Keypad_Scan
  7673 ;;		_LCD_Command
  7674 ;;		_LCD_SendString
  7675 ;;		_Main_Delay
  7676 ;;		_RealTimeClock_get_day_of_month
  7677 ;;		_RealTimeClock_get_month
  7678 ;;		_RealTimeClock_get_year
  7679 ;;		_RealTimeClock_set_day_of_month
  7680 ;;		_RealTimeClock_set_day_of_week
  7681 ;;		_RealTimeClock_set_month
  7682 ;;		_RealTimeClock_set_year
  7683 ;;		___awdiv
  7684 ;;		___awmod
  7685 ;; This function is called by:
  7686 ;;		_HeatingControlOff
  7687 ;;		_SoundAlarm
  7688 ;;		_main
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  7692                           	file	"main.c"
  7693                           	line	516
  7694                           global __ptext12
  7695                           __ptext12:	;psect for function _SetDate
  7696  0218                     psect	text12
  7697                           	file	"main.c"
  7698                           	line	516
  7699                           	global	__size_of_SetDate
  7700                           	__size_of_SetDate	equ	__end_of_SetDate-_SetDate
  7701  05AE                     	
  7702                           _SetDate:	
  7703  0218                     ;incstack = 0
  7704                           	opt	stack 3
  7705                           ; Regs used in _SetDate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7706                           	line	519
  7707                           	
  7708                           l4168:	
  7709  0218                     ;main.c: 516:         LCD_SendString(DateDis);;main.c: 517:         if(dateArray[1] == 2
                                 );main.c: 519:             feb = 1;
  7710                           	movlw	low(01h)
  7711  0218  3001               	fcall	_LCD_Command
  7712  0219  160A  158A  202E  120A  118A  	line	520
  7713                           	
  7714                           l4170:	
  7715  021E                     ;main.c: 520:             thirty = 0;
  7716                           	bcf	status, 5	;RP0=0, select bank0
  7717  021E  1283               	bcf	status, 6	;RP1=0, select bank0
  7718  021F  1303               	clrf	(SetDate@i)
  7719  0220  01C6               	clrf	(SetDate@i+1)
  7720  0221  01C7               	line	521
  7721                           	
  7722                           l4172:	
  7723  0222                     ;main.c: 521:             thirtyOne = 0;
  7724                           	clrf	(SetDate@thirty)
  7725  0222  01BC               	clrf	(SetDate@thirty+1)
  7726  0223  01BD               	line	522
  7727                           	
  7728                           l4174:	
  7729  0224                     ;main.c: 522:             if(dateArray[0] == 31 || dateArray[0] == 30)
  7730                           	clrf	(SetDate@thirtyOne)
  7731  0224  01BE               	clrf	(SetDate@thirtyOne+1)
  7732  0225  01BF               	line	523
  7733                           	
  7734                           l4176:	
  7735  0226                     ;main.c: 523:                 dateArray[0] = 28;
  7736                           	clrf	(SetDate@feb)
  7737  0226  01B8               	clrf	(SetDate@feb+1)
  7738  0227  01B9               	line	524
  7739                           	
  7740                           l4178:	
  7741  0228                     ;main.c: 524:         }
  7742                           	movlw	(low((((STR_20)-__stringbase)|8000h)))&0ffh
  7743  0228  30B6               	movwf	(??_SetDate+0)+0
  7744  0229  00A9               	movf	(??_SetDate+0)+0,w
  7745  022A  0829               	movwf	(SetDate@DateDis)
  7746  022B  00BA               	line	525
  7747                           	
  7748                           l4180:	
  7749  022C                     ;main.c: 525:         else if(dateArray[1] == 4 || dateArray[1] == 6 || dateArray[1] == 
                                 9 || dateArray[1] == 11)
  7750                           	movlw	(low((((STR_21)-__stringbase)|8000h)))&0ffh
  7751  022C  301F               	movwf	(??_SetDate+0)+0
  7752  022D  00A9               	movf	(??_SetDate+0)+0,w
  7753  022E  0829               	movwf	(SetDate@DateSet)
  7754  022F  00BB               	line	526
  7755                           	
  7756                           l4182:	
  7757  0230                     ;main.c: 526:         {
  7758                           	movlw	(SetDate@Date)&0ffh
  7759  0230  302F               	movwf	fsr0
  7760  0231  0084               	movlw	low(SetDate@F991)
  7761  0232  30AA               	movwf	(??_SetDate+0)+0
  7762  0233  00A9               	movf	fsr0,w
  7763  0234  0804               	movwf	((??_SetDate+0)+0+1)
  7764  0235  00AA               	movlw	9
  7765  0236  3009               	movwf	((??_SetDate+0)+0+2)
  7766  0237  00AB               u3660:
  7767  0238                     	movf	(??_SetDate+0)+0,w
  7768  0238  0829               	movwf	fsr0
  7769  0239  0084               	bsf	status, 7	;select IRP bank3
  7770  023A  1783               	
  7771                           	movf	indf,w
  7772  023B  0800               	movwf	((??_SetDate+0)+0+3)
  7773  023C  00AC               	incf	(??_SetDate+0)+0,f
  7774  023D  0AA9               	movf	((??_SetDate+0)+0+1),w
  7775  023E  082A               	movwf	fsr0
  7776  023F  0084               	bcf	status, 7	;select IRP bank0
  7777  0240  1383               	
  7778                           	movf	((??_SetDate+0)+0+3),w
  7779  0241  082C               	movwf	indf
  7780  0242  0080               	incf	((??_SetDate+0)+0+1),f
  7781  0243  0AAA               	decfsz	((??_SetDate+0)+0+2),f
  7782  0244  0BAB               	goto	u3660
  7783  0245  2A38               	
  7784                           	line	529
  7785                           	
  7786                           l4184:	
  7787  0246                     ;main.c: 527:             feb = 0;;main.c: 529:             thirtyOne = 0;
  7788                           	fcall	_RealTimeClock_get_month
  7789  0246  160A  158A  21DF  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7790  024B  1283               	bcf	status, 6	;RP1=0, select bank0
  7791  024C  1303               	movf	(1+(?_RealTimeClock_get_month)),w
  7792  024D  0826               	movwf	(_month+1)
  7793  024E  00E6               	movf	(0+(?_RealTimeClock_get_month)),w
  7794  024F  0825               	movwf	(_month)
  7795  0250  00E5               	line	530
  7796                           	
  7797                           l4186:	
  7798  0251                     ;main.c: 530:             if(dateArray[0] == 31)
  7799                           	fcall	_RealTimeClock_get_day_of_month
  7800  0251  160A  158A  21BD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7801  0256  1283               	bcf	status, 6	;RP1=0, select bank0
  7802  0257  1303               	movf	(1+(?_RealTimeClock_get_day_of_month)),w
  7803  0258  0826               	movwf	(_day+1)
  7804  0259  00E4               	movf	(0+(?_RealTimeClock_get_day_of_month)),w
  7805  025A  0825               	movwf	(_day)
  7806  025B  00E3               	line	531
  7807                           	
  7808                           l4188:	
  7809  025C                     ;main.c: 531:                 dateArray[0] = 30;
  7810                           	fcall	_RealTimeClock_get_year
  7811  025C  160A  158A  2201  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7812  0261  1283               	bcf	status, 6	;RP1=0, select bank0
  7813  0262  1303               	movf	(1+(?_RealTimeClock_get_year)),w
  7814  0263  0826               	movwf	(_year+1)
  7815  0264  00E2               	movf	(0+(?_RealTimeClock_get_year)),w
  7816  0265  0825               	movwf	(_year)
  7817  0266  00E1               	line	532
  7818                           	
  7819                           l4190:	
  7820  0267                     ;main.c: 532:         }
  7821                           	movf	(_day+1),w
  7822  0267  0864               	movwf	(SetDate@dateArray+1)
  7823  0268  00C1               	movf	(_day),w
  7824  0269  0863               	movwf	(SetDate@dateArray)
  7825  026A  00C0               	line	533
  7826                           	
  7827                           l4192:	
  7828  026B                     ;main.c: 533:         else
  7829                           	movf	(_month+1),w
  7830  026B  0866               	movwf	1+(SetDate@dateArray)+02h
  7831  026C  00C3               	movf	(_month),w
  7832  026D  0865               	movwf	0+(SetDate@dateArray)+02h
  7833  026E  00C2               	line	534
  7834                           	
  7835                           l4194:	
  7836  026F                     ;main.c: 534:         {
  7837                           	movf	(_year+1),w
  7838  026F  0862               	movwf	1+(SetDate@dateArray)+04h
  7839  0270  00C5               	movf	(_year),w
  7840  0271  0861               	movwf	0+(SetDate@dateArray)+04h
  7841  0272  00C4               	goto	l4196
  7842  0273  2A74               	line	535
  7843                           ;main.c: 535:             feb = 0;
  7844                           	
  7845                           l233:	
  7846  0274                     	line	537
  7847                           	
  7848                           l4196:	
  7849  0274                     ;main.c: 536:             thirty = 0;;main.c: 537:             thirtyOne = 1;
  7850                           	movlw	low(03h)
  7851  0274  3003               	fcall	_LCD_Command
  7852  0275  160A  158A  202E  120A  118A  	line	538
  7853                           ;main.c: 538:         }
  7854                           	bcf	status, 5	;RP0=0, select bank0
  7855  027A  1283               	bcf	status, 6	;RP1=0, select bank0
  7856  027B  1303               		movf	(SetDate@DateDis),w
  7857  027C  083A               	movwf	(LCD_SendString@string)
  7858  027D  00F1               	movlw	0
  7859  027E  3000               	btfss	status,2
  7860  027F  1D03               	movlw	080h
  7861  0280  3080               	movwf	(LCD_SendString@string+1)
  7862  0281  00F2               
  7863                           	fcall	_LCD_SendString
  7864  0282  160A  158A  2466  120A  118A  	line	539
  7865                           	
  7866                           l4198:	
  7867  0287                     ;main.c: 539: 
  7868                           		movlw	2
  7869  0287  3002               	bcf	status, 5	;RP0=0, select bank0
  7870  0288  1283               	bcf	status, 6	;RP1=0, select bank0
  7871  0289  1303               	xorwf	(0+(SetDate@dateArray)+02h),w
  7872  028A  0642               iorwf	(1+(SetDate@dateArray)+02h),w
  7873  028B  0443               	btfss	status,2
  7874  028C  1D03               	goto	u3671
  7875  028D  2A8F               	goto	u3670
  7876  028E  2A90               u3671:
  7877  028F                     	goto	l4212
  7878  028F  2AAD               u3670:
  7879  0290                     	line	541
  7880                           	
  7881                           l4200:	
  7882  0290                     ;main.c: 540:         Key = Keypad_Scan();;main.c: 541:         if(Key == 13)
  7883                           	movlw	01h
  7884  0290  3001               	movwf	(SetDate@feb)
  7885  0291  00B8               	movlw	0
  7886  0292  3000               	movwf	((SetDate@feb))+1
  7887  0293  00B9               	line	542
  7888                           	
  7889                           l4202:	
  7890  0294                     ;main.c: 542:         {
  7891                           	clrf	(SetDate@thirty)
  7892  0294  01BC               	clrf	(SetDate@thirty+1)
  7893  0295  01BD               	line	543
  7894                           	
  7895                           l4204:	
  7896  0296                     ;main.c: 543:             LCD_Command(0x01);
  7897                           	clrf	(SetDate@thirtyOne)
  7898  0296  01BE               	clrf	(SetDate@thirtyOne+1)
  7899  0297  01BF               	line	544
  7900                           	
  7901                           l4206:	
  7902  0298                     ;main.c: 544:             LCD_Command(0x03);
  7903                           		movlw	31
  7904  0298  301F               	xorwf	((SetDate@dateArray)),w
  7905  0299  0640               iorwf	((SetDate@dateArray+1)),w
  7906  029A  0441               	btfsc	status,2
  7907  029B  1903               	goto	u3681
  7908  029C  2A9E               	goto	u3680
  7909  029D  2A9F               u3681:
  7910  029E                     	goto	l4210
  7911  029E  2AA7               u3680:
  7912  029F                     	
  7913                           l4208:	
  7914  029F                     		movlw	30
  7915  029F  301E               	xorwf	((SetDate@dateArray)),w
  7916  02A0  0640               iorwf	((SetDate@dateArray+1)),w
  7917  02A1  0441               	btfss	status,2
  7918  02A2  1D03               	goto	u3691
  7919  02A3  2AA5               	goto	u3690
  7920  02A4  2AA6               u3691:
  7921  02A5                     	goto	l4234
  7922  02A5  2AE9               u3690:
  7923  02A6                     	goto	l4210
  7924  02A6  2AA7               	
  7925                           l237:	
  7926  02A7                     	line	545
  7927                           	
  7928                           l4210:	
  7929  02A7                     ;main.c: 545: 
  7930                           	movlw	01Ch
  7931  02A7  301C               	movwf	(SetDate@dateArray)
  7932  02A8  00C0               	movlw	0
  7933  02A9  3000               	movwf	((SetDate@dateArray))+1
  7934  02AA  00C1               	goto	l4234
  7935  02AB  2AE9               	
  7936                           l235:	
  7937  02AC                     	line	546
  7938                           ;main.c: 546:             RealTimeClock_set_year(dateArray[2]);
  7939                           	goto	l4234
  7940  02AC  2AE9               	line	547
  7941                           ;main.c: 547:             RealTimeClock_set_month(dateArray[1]);
  7942                           	
  7943                           l234:	
  7944  02AD                     	
  7945                           l4212:	
  7946  02AD                     		movlw	4
  7947  02AD  3004               	xorwf	(0+(SetDate@dateArray)+02h),w
  7948  02AE  0642               iorwf	(1+(SetDate@dateArray)+02h),w
  7949  02AF  0443               	btfsc	status,2
  7950  02B0  1903               	goto	u3701
  7951  02B1  2AB3               	goto	u3700
  7952  02B2  2AB4               u3701:
  7953  02B3                     	goto	l4220
  7954  02B3  2ACA               u3700:
  7955  02B4                     	
  7956                           l4214:	
  7957  02B4                     		movlw	6
  7958  02B4  3006               	xorwf	(0+(SetDate@dateArray)+02h),w
  7959  02B5  0642               iorwf	(1+(SetDate@dateArray)+02h),w
  7960  02B6  0443               	btfsc	status,2
  7961  02B7  1903               	goto	u3711
  7962  02B8  2ABA               	goto	u3710
  7963  02B9  2ABB               u3711:
  7964  02BA                     	goto	l4220
  7965  02BA  2ACA               u3710:
  7966  02BB                     	
  7967                           l4216:	
  7968  02BB                     		movlw	9
  7969  02BB  3009               	xorwf	(0+(SetDate@dateArray)+02h),w
  7970  02BC  0642               iorwf	(1+(SetDate@dateArray)+02h),w
  7971  02BD  0443               	btfsc	status,2
  7972  02BE  1903               	goto	u3721
  7973  02BF  2AC1               	goto	u3720
  7974  02C0  2AC2               u3721:
  7975  02C1                     	goto	l4220
  7976  02C1  2ACA               u3720:
  7977  02C2                     	
  7978                           l4218:	
  7979  02C2                     		movlw	11
  7980  02C2  300B               	xorwf	(0+(SetDate@dateArray)+02h),w
  7981  02C3  0642               iorwf	(1+(SetDate@dateArray)+02h),w
  7982  02C4  0443               	btfss	status,2
  7983  02C5  1D03               	goto	u3731
  7984  02C6  2AC8               	goto	u3730
  7985  02C7  2AC9               u3731:
  7986  02C8                     	goto	l4230
  7987  02C8  2ADF               u3730:
  7988  02C9                     	goto	l4220
  7989  02C9  2ACA               	
  7990                           l241:	
  7991  02CA                     	line	549
  7992                           	
  7993                           l4220:	
  7994  02CA                     ;main.c: 548:             RealTimeClock_set_day_of_month(dateArray[0]);;main.c: 549: 
  7995                           	clrf	(SetDate@feb)
  7996  02CA  01B8               	clrf	(SetDate@feb+1)
  7997  02CB  01B9               	line	550
  7998                           	
  7999                           l4222:	
  8000  02CC                     ;main.c: 550:             RealTimeClock_set_day_of_week(day_of_week);
  8001                           	movlw	01h
  8002  02CC  3001               	movwf	(SetDate@thirty)
  8003  02CD  00BC               	movlw	0
  8004  02CE  3000               	movwf	((SetDate@thirty))+1
  8005  02CF  00BD               	line	551
  8006                           	
  8007                           l4224:	
  8008  02D0                     ;main.c: 551: 
  8009                           	clrf	(SetDate@thirtyOne)
  8010  02D0  01BE               	clrf	(SetDate@thirtyOne+1)
  8011  02D1  01BF               	line	552
  8012                           	
  8013                           l4226:	
  8014  02D2                     ;main.c: 552:             CheckDay();
  8015                           		movlw	31
  8016  02D2  301F               	xorwf	((SetDate@dateArray)),w
  8017  02D3  0640               iorwf	((SetDate@dateArray+1)),w
  8018  02D4  0441               	btfss	status,2
  8019  02D5  1D03               	goto	u3741
  8020  02D6  2AD8               	goto	u3740
  8021  02D7  2AD9               u3741:
  8022  02D8                     	goto	l4234
  8023  02D8  2AE9               u3740:
  8024  02D9                     	line	553
  8025                           	
  8026                           l4228:	
  8027  02D9                     ;main.c: 553: 
  8028                           	movlw	01Eh
  8029  02D9  301E               	movwf	(SetDate@dateArray)
  8030  02DA  00C0               	movlw	0
  8031  02DB  3000               	movwf	((SetDate@dateArray))+1
  8032  02DC  00C1               	goto	l4234
  8033  02DD  2AE9               	
  8034                           l242:	
  8035  02DE                     	line	554
  8036                           ;main.c: 554:             LCD_SendString(DateSet);
  8037                           	goto	l4234
  8038  02DE  2AE9               	line	555
  8039                           ;main.c: 555:             Main_Delay(200);
  8040                           	
  8041                           l239:	
  8042  02DF                     	line	557
  8043                           	
  8044                           l4230:	
  8045  02DF                     ;main.c: 556:             LCD_Command(0x01);;main.c: 557:             break;
  8046                           	clrf	(SetDate@feb)
  8047  02DF  01B8               	clrf	(SetDate@feb+1)
  8048  02E0  01B9               	line	558
  8049                           ;main.c: 558:         }
  8050                           	clrf	(SetDate@thirty)
  8051  02E1  01BC               	clrf	(SetDate@thirty+1)
  8052  02E2  01BD               	line	559
  8053                           	
  8054                           l4232:	
  8055  02E3                     ;main.c: 559:         if(Key == 14)
  8056                           	movlw	01h
  8057  02E3  3001               	movwf	(SetDate@thirtyOne)
  8058  02E4  00BE               	movlw	0
  8059  02E5  3000               	movwf	((SetDate@thirtyOne))+1
  8060  02E6  00BF               	goto	l4234
  8061  02E7  2AE9               	line	560
  8062                           ;main.c: 560:         {
  8063                           	
  8064                           l243:	
  8065  02E8                     	goto	l4234
  8066  02E8  2AE9               	
  8067                           l238:	
  8068  02E9                     	line	562
  8069                           	
  8070                           l4234:	
  8071  02E9                     ;main.c: 562:                 i = 0;
  8072                           	fcall	_Keypad_Scan
  8073  02E9  120A  118A  2051  120A  118A  	movf	(1+(?_Keypad_Scan)),w
  8074  02EE  0877               	bcf	status, 5	;RP0=0, select bank0
  8075  02EF  1283               	bcf	status, 6	;RP1=0, select bank0
  8076  02F0  1303               	movwf	(SetDate@Key+1)
  8077  02F1  00A8               	movf	(0+(?_Keypad_Scan)),w
  8078  02F2  0876               	movwf	(SetDate@Key)
  8079  02F3  00A7               	line	563
  8080                           	
  8081                           l4236:	
  8082  02F4                     ;main.c: 563:             else
  8083                           		movlw	13
  8084  02F4  300D               	xorwf	((SetDate@Key)),w
  8085  02F5  0627               iorwf	((SetDate@Key+1)),w
  8086  02F6  0428               	btfss	status,2
  8087  02F7  1D03               	goto	u3751
  8088  02F8  2AFA               	goto	u3750
  8089  02F9  2AFB               u3751:
  8090  02FA                     	goto	l4254
  8091  02FA  2B55               u3750:
  8092  02FB                     	line	565
  8093                           	
  8094                           l4238:	
  8095  02FB                     ;main.c: 564:                 i++;;main.c: 565:         }
  8096                           	movlw	low(01h)
  8097  02FB  3001               	fcall	_LCD_Command
  8098  02FC  160A  158A  202E  120A  118A  	line	566
  8099                           ;main.c: 566:         if(Key == 15)
  8100                           	movlw	low(03h)
  8101  0301  3003               	fcall	_LCD_Command
  8102  0302  160A  158A  202E  120A  118A  	line	568
  8103                           	
  8104                           l4240:	
  8105  0307                     ;main.c: 568:             if (i == 0)
  8106                           	bcf	status, 5	;RP0=0, select bank0
  8107  0307  1283               	bcf	status, 6	;RP1=0, select bank0
  8108  0308  1303               	movf	1+(SetDate@dateArray)+04h,w
  8109  0309  0845               	movwf	(RealTimeClock_set_year@year+1)
  8110  030A  00A1               	movf	0+(SetDate@dateArray)+04h,w
  8111  030B  0844               	movwf	(RealTimeClock_set_year@year)
  8112  030C  00A0               	fcall	_RealTimeClock_set_year
  8113  030D  160A  158A  20E7  120A  118A  	line	569
  8114                           	
  8115                           l4242:	
  8116  0312                     ;main.c: 569:             {
  8117                           	bcf	status, 5	;RP0=0, select bank0
  8118  0312  1283               	bcf	status, 6	;RP1=0, select bank0
  8119  0313  1303               	movf	1+(SetDate@dateArray)+02h,w
  8120  0314  0843               	movwf	(RealTimeClock_set_month@month+1)
  8121  0315  00A1               	movf	0+(SetDate@dateArray)+02h,w
  8122  0316  0842               	movwf	(RealTimeClock_set_month@month)
  8123  0317  00A0               	fcall	_RealTimeClock_set_month
  8124  0318  160A  158A  20CA  120A  118A  	line	570
  8125                           	
  8126                           l4244:	
  8127  031D                     ;main.c: 570:                 if (thirtyOne == 1)
  8128                           	bcf	status, 5	;RP0=0, select bank0
  8129  031D  1283               	bcf	status, 6	;RP1=0, select bank0
  8130  031E  1303               	movf	(SetDate@dateArray+1),w
  8131  031F  0841               	movwf	(RealTimeClock_set_day_of_month@month+1)
  8132  0320  00A1               	movf	(SetDate@dateArray),w
  8133  0321  0840               	movwf	(RealTimeClock_set_day_of_month@month)
  8134  0322  00A0               	fcall	_RealTimeClock_set_day_of_month
  8135  0323  160A  158A  2090  120A  118A  	line	572
  8136                           	
  8137                           l4246:	
  8138  0328                     ;main.c: 572:                     if (dateArray[i] == 1)
  8139                           	bcf	status, 5	;RP0=0, select bank0
  8140  0328  1283               	bcf	status, 6	;RP1=0, select bank0
  8141  0329  1303               	movf	(_day_of_week+1),w
  8142  032A  086E               	movwf	(RealTimeClock_set_day_of_week@day+1)
  8143  032B  00A1               	movf	(_day_of_week),w
  8144  032C  086D               	movwf	(RealTimeClock_set_day_of_week@day)
  8145  032D  00A0               	fcall	_RealTimeClock_set_day_of_week
  8146  032E  160A  158A  20AD  120A  118A  	line	574
  8147                           	
  8148                           l4248:	
  8149  0333                     ;main.c: 574:                         dateArray[i] = 31;
  8150                           	fcall	_CheckDay
  8151  0333  120A  118A  2004  120A  118A  	line	576
  8152                           	
  8153                           l4250:	
  8154  0338                     ;main.c: 576:                             day_of_week = 7;
  8155                           	bcf	status, 5	;RP0=0, select bank0
  8156  0338  1283               	bcf	status, 6	;RP1=0, select bank0
  8157  0339  1303               		movf	(SetDate@DateSet),w
  8158  033A  083B               	movwf	(LCD_SendString@string)
  8159  033B  00F1               	movlw	0
  8160  033C  3000               	btfss	status,2
  8161  033D  1D03               	movlw	080h
  8162  033E  3080               	movwf	(LCD_SendString@string+1)
  8163  033F  00F2               
  8164                           	fcall	_LCD_SendString
  8165  0340  160A  158A  2466  120A  118A  	line	577
  8166                           ;main.c: 577:                         else
  8167                           	movlw	0C8h
  8168  0345  30C8               	movwf	(Main_Delay@k)
  8169  0346  00F0               	movlw	0
  8170  0347  3000               	movwf	((Main_Delay@k))+1
  8171  0348  00F1               	fcall	_Main_Delay
  8172  0349  160A  158A  2363  120A  118A  	line	578
  8173                           	
  8174                           l4252:	
  8175  034E                     ;main.c: 578:                             day_of_week = day_of_week - 1;
  8176                           	movlw	low(01h)
  8177  034E  3001               	fcall	_LCD_Command
  8178  034F  160A  158A  202E  120A  118A  	line	579
  8179                           ;main.c: 579:                     }
  8180                           	goto	l310
  8181  0354  2FC5               	line	580
  8182                           ;main.c: 580:                     else
  8183                           	
  8184                           l244:	
  8185  0355                     	line	581
  8186                           	
  8187                           l4254:	
  8188  0355                     ;main.c: 581:                     {
  8189                           		movlw	14
  8190  0355  300E               	bcf	status, 5	;RP0=0, select bank0
  8191  0356  1283               	bcf	status, 6	;RP1=0, select bank0
  8192  0357  1303               	xorwf	((SetDate@Key)),w
  8193  0358  0627               iorwf	((SetDate@Key+1)),w
  8194  0359  0428               	btfss	status,2
  8195  035A  1D03               	goto	u3761
  8196  035B  2B5D               	goto	u3760
  8197  035C  2B5E               u3761:
  8198  035D                     	goto	l4262
  8199  035D  2B70               u3760:
  8200  035E                     	line	583
  8201                           	
  8202                           l4256:	
  8203  035E                     ;main.c: 582:                         dateArray[i] = dateArray[i] - 1;;main.c: 583:     
                                                     if (day_of_week == 1)
  8204                           		movlw	2
  8205  035E  3002               	xorwf	((SetDate@i)),w
  8206  035F  0646               iorwf	((SetDate@i+1)),w
  8207  0360  0447               	btfss	status,2
  8208  0361  1D03               	goto	u3771
  8209  0362  2B64               	goto	u3770
  8210  0363  2B65               u3771:
  8211  0364                     	goto	l4260
  8212  0364  2B68               u3770:
  8213  0365                     	line	584
  8214                           	
  8215                           l4258:	
  8216  0365                     ;main.c: 584:                             day_of_week = 7;
  8217                           	clrf	(SetDate@i)
  8218  0365  01C6               	clrf	(SetDate@i+1)
  8219  0366  01C7               	goto	l4262
  8220  0367  2B70               	line	585
  8221                           ;main.c: 585:                         else
  8222                           	
  8223                           l247:	
  8224  0368                     	line	586
  8225                           	
  8226                           l4260:	
  8227  0368                     ;main.c: 586:                             day_of_week = day_of_week - 1;
  8228                           	movlw	01h
  8229  0368  3001               	addwf	(SetDate@i),f
  8230  0369  07C6               	skipnc
  8231  036A  1803               	incf	(SetDate@i+1),f
  8232  036B  0AC7               	movlw	0
  8233  036C  3000               	addwf	(SetDate@i+1),f
  8234  036D  07C7               	goto	l4262
  8235  036E  2B70               	
  8236                           l248:	
  8237  036F                     	goto	l4262
  8238  036F  2B70               	line	587
  8239                           ;main.c: 587:                     }
  8240                           	
  8241                           l246:	
  8242  0370                     	line	588
  8243                           	
  8244                           l4262:	
  8245  0370                     ;main.c: 588:                 }
  8246                           		movlw	15
  8247  0370  300F               	xorwf	((SetDate@Key)),w
  8248  0371  0627               iorwf	((SetDate@Key+1)),w
  8249  0372  0428               	btfss	status,2
  8250  0373  1D03               	goto	u3781
  8251  0374  2B76               	goto	u3780
  8252  0375  2B77               u3781:
  8253  0376                     	goto	l4338
  8254  0376  2D32               u3780:
  8255  0377                     	line	590
  8256                           	
  8257                           l4264:	
  8258  0377                     ;main.c: 589:                 else if (thirty == 1);main.c: 590:                 {
  8259                           	movf	((SetDate@i)),w
  8260  0377  0846               iorwf	((SetDate@i+1)),w
  8261  0378  0447               	btfss	status,2
  8262  0379  1D03               	goto	u3791
  8263  037A  2B7C               	goto	u3790
  8264  037B  2B7D               u3791:
  8265  037C                     	goto	l250
  8266  037C  2CB0               u3790:
  8267  037D                     	line	592
  8268                           	
  8269                           l4266:	
  8270  037D                     ;main.c: 591:                     if (dateArray[i] == 1) {;main.c: 592:                 
                                         dateArray[i] = 30;
  8271                           		decf	((SetDate@thirtyOne)),w
  8272  037D  033E               iorwf	((SetDate@thirtyOne+1)),w
  8273  037E  043F               	btfss	status,2
  8274  037F  1D03               	goto	u3801
  8275  0380  2B82               	goto	u3800
  8276  0381  2B83               u3801:
  8277  0382                     	goto	l4286
  8278  0382  2BE5               u3800:
  8279  0383                     	line	594
  8280                           	
  8281                           l4268:	
  8282  0383                     ;main.c: 593:                         if (day_of_week == 1);main.c: 594:                
                                              day_of_week = 7;
  8283                           	movf	(SetDate@i),w
  8284  0383  0846               	movwf	(??_SetDate+0)+0
  8285  0384  00A9               	addwf	(??_SetDate+0)+0,w
  8286  0385  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8287  0386  3E40               	movwf	fsr0
  8288  0387  0084               	bcf	status, 7	;select IRP bank0
  8289  0388  1383               	movf	indf,w
  8290  0389  0800               	movwf	(??_SetDate+1)+0+0
  8291  038A  00AA               	incf	fsr0,f
  8292  038B  0A84               	movf	indf,w
  8293  038C  0800               	movwf	(??_SetDate+1)+0+1
  8294  038D  00AB               		decf	((??_SetDate+1)+0),w
  8295  038E  032A               iorwf	((??_SetDate+1)+1),w
  8296  038F  042B               	btfss	status,2
  8297  0390  1D03               	goto	u3811
  8298  0391  2B93               	goto	u3810
  8299  0392  2B94               u3811:
  8300  0393                     	goto	l4278
  8301  0393  2BB3               u3810:
  8302  0394                     	line	596
  8303                           	
  8304                           l4270:	
  8305  0394                     ;main.c: 595:                         else;main.c: 596:                             day_
                                 of_week = day_of_week - 1;
  8306                           	movf	(SetDate@i),w
  8307  0394  0846               	movwf	(??_SetDate+0)+0
  8308  0395  00A9               	addwf	(??_SetDate+0)+0,w
  8309  0396  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8310  0397  3E40               	movwf	fsr0
  8311  0398  0084               	movlw	01Fh
  8312  0399  301F               	movwf	indf
  8313  039A  0080               	incf	fsr0,f
  8314  039B  0A84               	movlw	0
  8315  039C  3000               	movwf	indf
  8316  039D  0080               	line	597
  8317                           	
  8318                           l4272:	
  8319  039E                     ;main.c: 597:                     } else {
  8320                           		decf	((_day_of_week)),w
  8321  039E  036D               iorwf	((_day_of_week+1)),w
  8322  039F  046E               	btfss	status,2
  8323  03A0  1D03               	goto	u3821
  8324  03A1  2BA3               	goto	u3820
  8325  03A2  2BA4               u3821:
  8326  03A3                     	goto	l4276
  8327  03A3  2BA9               u3820:
  8328  03A4                     	line	598
  8329                           	
  8330                           l4274:	
  8331  03A4                     ;main.c: 598:                         dateArray[i] = dateArray[i] - 1;
  8332                           	movlw	07h
  8333  03A4  3007               	movwf	(_day_of_week)
  8334  03A5  00ED               	movlw	0
  8335  03A6  3000               	movwf	((_day_of_week))+1
  8336  03A7  00EE               	goto	l250
  8337  03A8  2CB0               	line	599
  8338                           ;main.c: 599:                         if (day_of_week == 1)
  8339                           	
  8340                           l253:	
  8341  03A9                     	line	600
  8342                           	
  8343                           l4276:	
  8344  03A9                     ;main.c: 600:                             day_of_week = 7;
  8345                           	movf	(_day_of_week),w
  8346  03A9  086D               	addlw	low(-1)
  8347  03AA  3EFF               	movwf	(_day_of_week)
  8348  03AB  00ED               	movf	(_day_of_week+1),w
  8349  03AC  086E               	skipnc
  8350  03AD  1803               	addlw	1
  8351  03AE  3E01               	addlw	high(-1)
  8352  03AF  3EFF               	movwf	1+(_day_of_week)
  8353  03B0  00EE               	goto	l250
  8354  03B1  2CB0               	
  8355                           l254:	
  8356  03B2                     	line	601
  8357                           ;main.c: 601:                         else
  8358                           	goto	l250
  8359  03B2  2CB0               	line	602
  8360                           ;main.c: 602:                             day_of_week = day_of_week - 1;
  8361                           	
  8362                           l252:	
  8363  03B3                     	line	604
  8364                           	
  8365                           l4278:	
  8366  03B3                     ;main.c: 603:                     };main.c: 604:                 }
  8367                           	movf	(SetDate@i),w
  8368  03B3  0846               	movwf	(??_SetDate+0)+0
  8369  03B4  00A9               	addwf	(??_SetDate+0)+0,w
  8370  03B5  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8371  03B6  3E40               	movwf	fsr0
  8372  03B7  0084               	movf	indf,w
  8373  03B8  0800               	movwf	(??_SetDate+1)+0+0
  8374  03B9  00AA               	incf	fsr0,f
  8375  03BA  0A84               	movf	indf,w
  8376  03BB  0800               	movwf	(??_SetDate+1)+0+1
  8377  03BC  00AB               	movf	0+(??_SetDate+1)+0,w
  8378  03BD  082A               	addlw	low(-1)
  8379  03BE  3EFF               	movwf	(??_SetDate+3)+0
  8380  03BF  00AC               	movf	1+(??_SetDate+1)+0,w
  8381  03C0  082B               	skipnc
  8382  03C1  1803               	addlw	1
  8383  03C2  3E01               	addlw	high(-1)
  8384  03C3  3EFF               	movwf	1+(??_SetDate+3)+0
  8385  03C4  00AD               	movf	(SetDate@i),w
  8386  03C5  0846               	movwf	(??_SetDate+5)+0
  8387  03C6  00AE               	addwf	(??_SetDate+5)+0,w
  8388  03C7  072E               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8389  03C8  3E40               	movwf	fsr0
  8390  03C9  0084               	movf	0+(??_SetDate+3)+0,w
  8391  03CA  082C               	movwf	indf
  8392  03CB  0080               	incf	fsr0,f
  8393  03CC  0A84               	movf	1+(??_SetDate+3)+0,w
  8394  03CD  082D               	movwf	indf
  8395  03CE  0080               	line	605
  8396                           	
  8397                           l4280:	
  8398  03CF                     ;main.c: 605:                 else
  8399                           		decf	((_day_of_week)),w
  8400  03CF  036D               iorwf	((_day_of_week+1)),w
  8401  03D0  046E               	btfss	status,2
  8402  03D1  1D03               	goto	u3831
  8403  03D2  2BD4               	goto	u3830
  8404  03D3  2BD5               u3831:
  8405  03D4                     	goto	l4284
  8406  03D4  2BDA               u3830:
  8407  03D5                     	line	606
  8408                           	
  8409                           l4282:	
  8410  03D5                     ;main.c: 606:                 {
  8411                           	movlw	07h
  8412  03D5  3007               	movwf	(_day_of_week)
  8413  03D6  00ED               	movlw	0
  8414  03D7  3000               	movwf	((_day_of_week))+1
  8415  03D8  00EE               	goto	l250
  8416  03D9  2CB0               	line	607
  8417                           ;main.c: 607:                     if (dateArray[i] == 1)
  8418                           	
  8419                           l256:	
  8420  03DA                     	line	608
  8421                           	
  8422                           l4284:	
  8423  03DA                     ;main.c: 608:                     {
  8424                           	movf	(_day_of_week),w
  8425  03DA  086D               	addlw	low(-1)
  8426  03DB  3EFF               	movwf	(_day_of_week)
  8427  03DC  00ED               	movf	(_day_of_week+1),w
  8428  03DD  086E               	skipnc
  8429  03DE  1803               	addlw	1
  8430  03DF  3E01               	addlw	high(-1)
  8431  03E0  3EFF               	movwf	1+(_day_of_week)
  8432  03E1  00EE               	goto	l250
  8433  03E2  2CB0               	
  8434                           l257:	
  8435  03E3                     	goto	l250
  8436  03E3  2CB0               	line	609
  8437                           ;main.c: 609:                         dateArray[i] = 28;
  8438                           	
  8439                           l255:	
  8440  03E4                     	line	610
  8441                           ;main.c: 610:                         if (day_of_week == 1)
  8442                           	goto	l250
  8443  03E4  2CB0               	line	611
  8444                           ;main.c: 611:                             day_of_week = 7;
  8445                           	
  8446                           l251:	
  8447  03E5                     	
  8448                           l4286:	
  8449  03E5                     		decf	((SetDate@thirty)),w
  8450  03E5  033C               iorwf	((SetDate@thirty+1)),w
  8451  03E6  043D               	btfss	status,2
  8452  03E7  1D03               	goto	u3841
  8453  03E8  2BEA               	goto	u3840
  8454  03E9  2BEB               u3841:
  8455  03EA                     	goto	l4306
  8456  03EA  2C4D               u3840:
  8457  03EB                     	line	613
  8458                           	
  8459                           l4288:	
  8460  03EB                     ;main.c: 612:                         else;main.c: 613:                             day_
                                 of_week = day_of_week - 1;
  8461                           	movf	(SetDate@i),w
  8462  03EB  0846               	movwf	(??_SetDate+0)+0
  8463  03EC  00A9               	addwf	(??_SetDate+0)+0,w
  8464  03ED  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8465  03EE  3E40               	movwf	fsr0
  8466  03EF  0084               	bcf	status, 7	;select IRP bank0
  8467  03F0  1383               	movf	indf,w
  8468  03F1  0800               	movwf	(??_SetDate+1)+0+0
  8469  03F2  00AA               	incf	fsr0,f
  8470  03F3  0A84               	movf	indf,w
  8471  03F4  0800               	movwf	(??_SetDate+1)+0+1
  8472  03F5  00AB               		decf	((??_SetDate+1)+0),w
  8473  03F6  032A               iorwf	((??_SetDate+1)+1),w
  8474  03F7  042B               	btfss	status,2
  8475  03F8  1D03               	goto	u3851
  8476  03F9  2BFB               	goto	u3850
  8477  03FA  2BFC               u3851:
  8478  03FB                     	goto	l4298
  8479  03FB  2C1B               u3850:
  8480  03FC                     	line	614
  8481                           	
  8482                           l4290:	
  8483  03FC                     ;main.c: 614:                     }
  8484                           	movf	(SetDate@i),w
  8485  03FC  0846               	movwf	(??_SetDate+0)+0
  8486  03FD  00A9               	addwf	(??_SetDate+0)+0,w
  8487  03FE  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8488  03FF  3E40               	movwf	fsr0
  8489  0400  0084               	movlw	01Eh
  8490  0401  301E               	movwf	indf
  8491  0402  0080               	incf	fsr0,f
  8492  0403  0A84               	movlw	0
  8493  0404  3000               	movwf	indf
  8494  0405  0080               	line	615
  8495                           	
  8496                           l4292:	
  8497  0406                     ;main.c: 615:                     else
  8498                           		decf	((_day_of_week)),w
  8499  0406  036D               iorwf	((_day_of_week+1)),w
  8500  0407  046E               	btfss	status,2
  8501  0408  1D03               	goto	u3861
  8502  0409  2C0B               	goto	u3860
  8503  040A  2C0C               u3861:
  8504  040B                     	goto	l4296
  8505  040B  2C11               u3860:
  8506  040C                     	line	616
  8507                           	
  8508                           l4294:	
  8509  040C                     ;main.c: 616:                     {
  8510                           	movlw	07h
  8511  040C  3007               	movwf	(_day_of_week)
  8512  040D  00ED               	movlw	0
  8513  040E  3000               	movwf	((_day_of_week))+1
  8514  040F  00EE               	goto	l250
  8515  0410  2CB0               	line	617
  8516                           ;main.c: 617:                         dateArray[i] = dateArray[i] - 1;
  8517                           	
  8518                           l261:	
  8519  0411                     	line	618
  8520                           	
  8521                           l4296:	
  8522  0411                     ;main.c: 618:                         if (day_of_week == 1)
  8523                           	movf	(_day_of_week),w
  8524  0411  086D               	addlw	low(-1)
  8525  0412  3EFF               	movwf	(_day_of_week)
  8526  0413  00ED               	movf	(_day_of_week+1),w
  8527  0414  086E               	skipnc
  8528  0415  1803               	addlw	1
  8529  0416  3E01               	addlw	high(-1)
  8530  0417  3EFF               	movwf	1+(_day_of_week)
  8531  0418  00EE               	goto	l250
  8532  0419  2CB0               	
  8533                           l262:	
  8534  041A                     	line	619
  8535                           ;main.c: 619:                             day_of_week = 7;
  8536                           	goto	l250
  8537  041A  2CB0               	
  8538                           l260:	
  8539  041B                     	line	620
  8540                           	
  8541                           l4298:	
  8542  041B                     ;main.c: 620:                         else
  8543                           	movf	(SetDate@i),w
  8544  041B  0846               	movwf	(??_SetDate+0)+0
  8545  041C  00A9               	addwf	(??_SetDate+0)+0,w
  8546  041D  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8547  041E  3E40               	movwf	fsr0
  8548  041F  0084               	movf	indf,w
  8549  0420  0800               	movwf	(??_SetDate+1)+0+0
  8550  0421  00AA               	incf	fsr0,f
  8551  0422  0A84               	movf	indf,w
  8552  0423  0800               	movwf	(??_SetDate+1)+0+1
  8553  0424  00AB               	movf	0+(??_SetDate+1)+0,w
  8554  0425  082A               	addlw	low(-1)
  8555  0426  3EFF               	movwf	(??_SetDate+3)+0
  8556  0427  00AC               	movf	1+(??_SetDate+1)+0,w
  8557  0428  082B               	skipnc
  8558  0429  1803               	addlw	1
  8559  042A  3E01               	addlw	high(-1)
  8560  042B  3EFF               	movwf	1+(??_SetDate+3)+0
  8561  042C  00AD               	movf	(SetDate@i),w
  8562  042D  0846               	movwf	(??_SetDate+5)+0
  8563  042E  00AE               	addwf	(??_SetDate+5)+0,w
  8564  042F  072E               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8565  0430  3E40               	movwf	fsr0
  8566  0431  0084               	movf	0+(??_SetDate+3)+0,w
  8567  0432  082C               	movwf	indf
  8568  0433  0080               	incf	fsr0,f
  8569  0434  0A84               	movf	1+(??_SetDate+3)+0,w
  8570  0435  082D               	movwf	indf
  8571  0436  0080               	line	621
  8572                           	
  8573                           l4300:	
  8574  0437                     ;main.c: 621:                             day_of_week = day_of_week - 1;
  8575                           		decf	((_day_of_week)),w
  8576  0437  036D               iorwf	((_day_of_week+1)),w
  8577  0438  046E               	btfss	status,2
  8578  0439  1D03               	goto	u3871
  8579  043A  2C3C               	goto	u3870
  8580  043B  2C3D               u3871:
  8581  043C                     	goto	l4304
  8582  043C  2C42               u3870:
  8583  043D                     	line	622
  8584                           	
  8585                           l4302:	
  8586  043D                     ;main.c: 622:                     }
  8587                           	movlw	07h
  8588  043D  3007               	movwf	(_day_of_week)
  8589  043E  00ED               	movlw	0
  8590  043F  3000               	movwf	((_day_of_week))+1
  8591  0440  00EE               	goto	l250
  8592  0441  2CB0               	line	623
  8593                           ;main.c: 623:                 }
  8594                           	
  8595                           l264:	
  8596  0442                     	line	624
  8597                           	
  8598                           l4304:	
  8599  0442                     ;main.c: 624:             }
  8600                           	movf	(_day_of_week),w
  8601  0442  086D               	addlw	low(-1)
  8602  0443  3EFF               	movwf	(_day_of_week)
  8603  0444  00ED               	movf	(_day_of_week+1),w
  8604  0445  086E               	skipnc
  8605  0446  1803               	addlw	1
  8606  0447  3E01               	addlw	high(-1)
  8607  0448  3EFF               	movwf	1+(_day_of_week)
  8608  0449  00EE               	goto	l250
  8609  044A  2CB0               	
  8610                           l265:	
  8611  044B                     	goto	l250
  8612  044B  2CB0               	line	625
  8613                           ;main.c: 625:             if (i == 1)
  8614                           	
  8615                           l263:	
  8616  044C                     	line	626
  8617                           ;main.c: 626:             {
  8618                           	goto	l250
  8619  044C  2CB0               	line	627
  8620                           ;main.c: 627:                 if (dateArray[i] == 1)
  8621                           	
  8622                           l259:	
  8623  044D                     	line	629
  8624                           	
  8625                           l4306:	
  8626  044D                     ;main.c: 628:                 {;main.c: 629:                     dateArray[i] = 12;
  8627                           	movf	(SetDate@i),w
  8628  044D  0846               	movwf	(??_SetDate+0)+0
  8629  044E  00A9               	addwf	(??_SetDate+0)+0,w
  8630  044F  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8631  0450  3E40               	movwf	fsr0
  8632  0451  0084               	bcf	status, 7	;select IRP bank0
  8633  0452  1383               	movf	indf,w
  8634  0453  0800               	movwf	(??_SetDate+1)+0+0
  8635  0454  00AA               	incf	fsr0,f
  8636  0455  0A84               	movf	indf,w
  8637  0456  0800               	movwf	(??_SetDate+1)+0+1
  8638  0457  00AB               		decf	((??_SetDate+1)+0),w
  8639  0458  032A               iorwf	((??_SetDate+1)+1),w
  8640  0459  042B               	btfss	status,2
  8641  045A  1D03               	goto	u3881
  8642  045B  2C5D               	goto	u3880
  8643  045C  2C5E               u3881:
  8644  045D                     	goto	l4316
  8645  045D  2C7D               u3880:
  8646  045E                     	line	631
  8647                           	
  8648                           l4308:	
  8649  045E                     ;main.c: 630:                 };main.c: 631:                 else
  8650                           	movf	(SetDate@i),w
  8651  045E  0846               	movwf	(??_SetDate+0)+0
  8652  045F  00A9               	addwf	(??_SetDate+0)+0,w
  8653  0460  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8654  0461  3E40               	movwf	fsr0
  8655  0462  0084               	movlw	01Ch
  8656  0463  301C               	movwf	indf
  8657  0464  0080               	incf	fsr0,f
  8658  0465  0A84               	movlw	0
  8659  0466  3000               	movwf	indf
  8660  0467  0080               	line	632
  8661                           	
  8662                           l4310:	
  8663  0468                     ;main.c: 632:                     dateArray[i] = dateArray[i] - 1;
  8664                           		decf	((_day_of_week)),w
  8665  0468  036D               iorwf	((_day_of_week+1)),w
  8666  0469  046E               	btfss	status,2
  8667  046A  1D03               	goto	u3891
  8668  046B  2C6D               	goto	u3890
  8669  046C  2C6E               u3891:
  8670  046D                     	goto	l4314
  8671  046D  2C73               u3890:
  8672  046E                     	line	633
  8673                           	
  8674                           l4312:	
  8675  046E                     ;main.c: 633:             }
  8676                           	movlw	07h
  8677  046E  3007               	movwf	(_day_of_week)
  8678  046F  00ED               	movlw	0
  8679  0470  3000               	movwf	((_day_of_week))+1
  8680  0471  00EE               	goto	l250
  8681  0472  2CB0               	line	634
  8682                           ;main.c: 634:             if (i == 2)
  8683                           	
  8684                           l268:	
  8685  0473                     	line	635
  8686                           	
  8687                           l4314:	
  8688  0473                     ;main.c: 635:             {
  8689                           	movf	(_day_of_week),w
  8690  0473  086D               	addlw	low(-1)
  8691  0474  3EFF               	movwf	(_day_of_week)
  8692  0475  00ED               	movf	(_day_of_week+1),w
  8693  0476  086E               	skipnc
  8694  0477  1803               	addlw	1
  8695  0478  3E01               	addlw	high(-1)
  8696  0479  3EFF               	movwf	1+(_day_of_week)
  8697  047A  00EE               	goto	l250
  8698  047B  2CB0               	
  8699                           l269:	
  8700  047C                     	line	636
  8701                           ;main.c: 636:                 if (dateArray[i] == 0)
  8702                           	goto	l250
  8703  047C  2CB0               	line	637
  8704                           ;main.c: 637:                 {
  8705                           	
  8706                           l267:	
  8707  047D                     	line	639
  8708                           	
  8709                           l4316:	
  8710  047D                     ;main.c: 638:                     dateArray[i] = 99;;main.c: 639:                 }
  8711                           	movf	(SetDate@i),w
  8712  047D  0846               	movwf	(??_SetDate+0)+0
  8713  047E  00A9               	addwf	(??_SetDate+0)+0,w
  8714  047F  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8715  0480  3E40               	movwf	fsr0
  8716  0481  0084               	movf	indf,w
  8717  0482  0800               	movwf	(??_SetDate+1)+0+0
  8718  0483  00AA               	incf	fsr0,f
  8719  0484  0A84               	movf	indf,w
  8720  0485  0800               	movwf	(??_SetDate+1)+0+1
  8721  0486  00AB               	movf	0+(??_SetDate+1)+0,w
  8722  0487  082A               	addlw	low(-1)
  8723  0488  3EFF               	movwf	(??_SetDate+3)+0
  8724  0489  00AC               	movf	1+(??_SetDate+1)+0,w
  8725  048A  082B               	skipnc
  8726  048B  1803               	addlw	1
  8727  048C  3E01               	addlw	high(-1)
  8728  048D  3EFF               	movwf	1+(??_SetDate+3)+0
  8729  048E  00AD               	movf	(SetDate@i),w
  8730  048F  0846               	movwf	(??_SetDate+5)+0
  8731  0490  00AE               	addwf	(??_SetDate+5)+0,w
  8732  0491  072E               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8733  0492  3E40               	movwf	fsr0
  8734  0493  0084               	movf	0+(??_SetDate+3)+0,w
  8735  0494  082C               	movwf	indf
  8736  0495  0080               	incf	fsr0,f
  8737  0496  0A84               	movf	1+(??_SetDate+3)+0,w
  8738  0497  082D               	movwf	indf
  8739  0498  0080               	line	640
  8740                           	
  8741                           l4318:	
  8742  0499                     ;main.c: 640:                 else
  8743                           		decf	((_day_of_week)),w
  8744  0499  036D               iorwf	((_day_of_week+1)),w
  8745  049A  046E               	btfss	status,2
  8746  049B  1D03               	goto	u3901
  8747  049C  2C9E               	goto	u3900
  8748  049D  2C9F               u3901:
  8749  049E                     	goto	l4322
  8750  049E  2CA4               u3900:
  8751  049F                     	line	641
  8752                           	
  8753                           l4320:	
  8754  049F                     ;main.c: 641:                     dateArray[i] = dateArray[i] - 1;
  8755                           	movlw	07h
  8756  049F  3007               	movwf	(_day_of_week)
  8757  04A0  00ED               	movlw	0
  8758  04A1  3000               	movwf	((_day_of_week))+1
  8759  04A2  00EE               	goto	l250
  8760  04A3  2CB0               	line	642
  8761                           ;main.c: 642:             }
  8762                           	
  8763                           l271:	
  8764  04A4                     	line	643
  8765                           	
  8766                           l4322:	
  8767  04A4                     ;main.c: 643:         }
  8768                           	movf	(_day_of_week),w
  8769  04A4  086D               	addlw	low(-1)
  8770  04A5  3EFF               	movwf	(_day_of_week)
  8771  04A6  00ED               	movf	(_day_of_week+1),w
  8772  04A7  086E               	skipnc
  8773  04A8  1803               	addlw	1
  8774  04A9  3E01               	addlw	high(-1)
  8775  04AA  3EFF               	movwf	1+(_day_of_week)
  8776  04AB  00EE               	goto	l250
  8777  04AC  2CB0               	
  8778                           l272:	
  8779  04AD                     	goto	l250
  8780  04AD  2CB0               	line	644
  8781                           ;main.c: 644:         if(Key == 16)
  8782                           	
  8783                           l270:	
  8784  04AE                     	goto	l250
  8785  04AE  2CB0               	line	645
  8786                           ;main.c: 645:         {
  8787                           	
  8788                           l266:	
  8789  04AF                     	goto	l250
  8790  04AF  2CB0               	
  8791                           l258:	
  8792  04B0                     	line	646
  8793                           ;main.c: 646:             if (i == 0)
  8794                           	
  8795                           l250:	
  8796  04B0                     	line	647
  8797                           ;main.c: 647:             {
  8798                           		decf	((SetDate@i)),w
  8799  04B0  0346               iorwf	((SetDate@i+1)),w
  8800  04B1  0447               	btfss	status,2
  8801  04B2  1D03               	goto	u3911
  8802  04B3  2CB5               	goto	u3910
  8803  04B4  2CB6               u3911:
  8804  04B5                     	goto	l4330
  8805  04B5  2CF0               u3910:
  8806  04B6                     	line	649
  8807                           	
  8808                           l4324:	
  8809  04B6                     ;main.c: 648:                 if (thirtyOne == 1);main.c: 649:                 {
  8810                           	movf	(SetDate@i),w
  8811  04B6  0846               	movwf	(??_SetDate+0)+0
  8812  04B7  00A9               	addwf	(??_SetDate+0)+0,w
  8813  04B8  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8814  04B9  3E40               	movwf	fsr0
  8815  04BA  0084               	bcf	status, 7	;select IRP bank0
  8816  04BB  1383               	movf	indf,w
  8817  04BC  0800               	movwf	(??_SetDate+1)+0+0
  8818  04BD  00AA               	incf	fsr0,f
  8819  04BE  0A84               	movf	indf,w
  8820  04BF  0800               	movwf	(??_SetDate+1)+0+1
  8821  04C0  00AB               		decf	((??_SetDate+1)+0),w
  8822  04C1  032A               iorwf	((??_SetDate+1)+1),w
  8823  04C2  042B               	btfss	status,2
  8824  04C3  1D03               	goto	u3921
  8825  04C4  2CC6               	goto	u3920
  8826  04C5  2CC7               u3921:
  8827  04C6                     	goto	l4328
  8828  04C6  2CD2               u3920:
  8829  04C7                     	line	651
  8830                           	
  8831                           l4326:	
  8832  04C7                     ;main.c: 650:                     if (dateArray[i] == 31);main.c: 651:                  
                                    {
  8833                           	movf	(SetDate@i),w
  8834  04C7  0846               	movwf	(??_SetDate+0)+0
  8835  04C8  00A9               	addwf	(??_SetDate+0)+0,w
  8836  04C9  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8837  04CA  3E40               	movwf	fsr0
  8838  04CB  0084               	movlw	0Ch
  8839  04CC  300C               	movwf	indf
  8840  04CD  0080               	incf	fsr0,f
  8841  04CE  0A84               	movlw	0
  8842  04CF  3000               	movwf	indf
  8843  04D0  0080               	line	652
  8844                           ;main.c: 652:                         dateArray[i] = 1;
  8845                           	goto	l4330
  8846  04D1  2CF0               	line	653
  8847                           ;main.c: 653:                         if (day_of_week == 7)
  8848                           	
  8849                           l274:	
  8850  04D2                     	line	654
  8851                           	
  8852                           l4328:	
  8853  04D2                     ;main.c: 654:                             day_of_week = 1;
  8854                           	movf	(SetDate@i),w
  8855  04D2  0846               	movwf	(??_SetDate+0)+0
  8856  04D3  00A9               	addwf	(??_SetDate+0)+0,w
  8857  04D4  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8858  04D5  3E40               	movwf	fsr0
  8859  04D6  0084               	movf	indf,w
  8860  04D7  0800               	movwf	(??_SetDate+1)+0+0
  8861  04D8  00AA               	incf	fsr0,f
  8862  04D9  0A84               	movf	indf,w
  8863  04DA  0800               	movwf	(??_SetDate+1)+0+1
  8864  04DB  00AB               	movf	0+(??_SetDate+1)+0,w
  8865  04DC  082A               	addlw	low(-1)
  8866  04DD  3EFF               	movwf	(??_SetDate+3)+0
  8867  04DE  00AC               	movf	1+(??_SetDate+1)+0,w
  8868  04DF  082B               	skipnc
  8869  04E0  1803               	addlw	1
  8870  04E1  3E01               	addlw	high(-1)
  8871  04E2  3EFF               	movwf	1+(??_SetDate+3)+0
  8872  04E3  00AD               	movf	(SetDate@i),w
  8873  04E4  0846               	movwf	(??_SetDate+5)+0
  8874  04E5  00AE               	addwf	(??_SetDate+5)+0,w
  8875  04E6  072E               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8876  04E7  3E40               	movwf	fsr0
  8877  04E8  0084               	movf	0+(??_SetDate+3)+0,w
  8878  04E9  082C               	movwf	indf
  8879  04EA  0080               	incf	fsr0,f
  8880  04EB  0A84               	movf	1+(??_SetDate+3)+0,w
  8881  04EC  082D               	movwf	indf
  8882  04ED  0080               	goto	l4330
  8883  04EE  2CF0               	
  8884                           l275:	
  8885  04EF                     	goto	l4330
  8886  04EF  2CF0               	line	655
  8887                           ;main.c: 655:                         else
  8888                           	
  8889                           l273:	
  8890  04F0                     	line	656
  8891                           	
  8892                           l4330:	
  8893  04F0                     ;main.c: 656:                             day_of_week = day_of_week + 1;
  8894                           		movlw	2
  8895  04F0  3002               	xorwf	((SetDate@i)),w
  8896  04F1  0646               iorwf	((SetDate@i+1)),w
  8897  04F2  0447               	btfss	status,2
  8898  04F3  1D03               	goto	u3931
  8899  04F4  2CF6               	goto	u3930
  8900  04F5  2CF7               u3931:
  8901  04F6                     	goto	l4338
  8902  04F6  2D32               u3930:
  8903  04F7                     	line	658
  8904                           	
  8905                           l4332:	
  8906  04F7                     ;main.c: 657:                     };main.c: 658:                     else
  8907                           	movf	(SetDate@i),w
  8908  04F7  0846               	movwf	(??_SetDate+0)+0
  8909  04F8  00A9               	addwf	(??_SetDate+0)+0,w
  8910  04F9  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8911  04FA  3E40               	movwf	fsr0
  8912  04FB  0084               	bcf	status, 7	;select IRP bank0
  8913  04FC  1383               	movf	indf,w
  8914  04FD  0800               	movwf	(??_SetDate+1)+0+0
  8915  04FE  00AA               	incf	fsr0,f
  8916  04FF  0A84               	movf	indf,w
  8917  0500  0800               	movwf	(??_SetDate+1)+0+1
  8918  0501  00AB               	movf	((??_SetDate+1)+0),w
  8919  0502  082A               iorwf	((??_SetDate+1)+1),w
  8920  0503  042B               	btfss	status,2
  8921  0504  1D03               	goto	u3941
  8922  0505  2D07               	goto	u3940
  8923  0506  2D08               u3941:
  8924  0507                     	goto	l4336
  8925  0507  2D13               u3940:
  8926  0508                     	line	660
  8927                           	
  8928                           l4334:	
  8929  0508                     ;main.c: 659:                     {;main.c: 660:                         dateArray[i] = 
                                 dateArray[i] + 1;
  8930                           	movf	(SetDate@i),w
  8931  0508  0846               	movwf	(??_SetDate+0)+0
  8932  0509  00A9               	addwf	(??_SetDate+0)+0,w
  8933  050A  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8934  050B  3E40               	movwf	fsr0
  8935  050C  0084               	movlw	063h
  8936  050D  3063               	movwf	indf
  8937  050E  0080               	incf	fsr0,f
  8938  050F  0A84               	movlw	0
  8939  0510  3000               	movwf	indf
  8940  0511  0080               	line	661
  8941                           ;main.c: 661:                         if (day_of_week == 7)
  8942                           	goto	l4338
  8943  0512  2D32               	line	662
  8944                           ;main.c: 662:                             day_of_week = 1;
  8945                           	
  8946                           l277:	
  8947  0513                     	line	663
  8948                           	
  8949                           l4336:	
  8950  0513                     ;main.c: 663:                         else
  8951                           	movf	(SetDate@i),w
  8952  0513  0846               	movwf	(??_SetDate+0)+0
  8953  0514  00A9               	addwf	(??_SetDate+0)+0,w
  8954  0515  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8955  0516  3E40               	movwf	fsr0
  8956  0517  0084               	movf	indf,w
  8957  0518  0800               	movwf	(??_SetDate+1)+0+0
  8958  0519  00AA               	incf	fsr0,f
  8959  051A  0A84               	movf	indf,w
  8960  051B  0800               	movwf	(??_SetDate+1)+0+1
  8961  051C  00AB               	movf	0+(??_SetDate+1)+0,w
  8962  051D  082A               	addlw	low(-1)
  8963  051E  3EFF               	movwf	(??_SetDate+3)+0
  8964  051F  00AC               	movf	1+(??_SetDate+1)+0,w
  8965  0520  082B               	skipnc
  8966  0521  1803               	addlw	1
  8967  0522  3E01               	addlw	high(-1)
  8968  0523  3EFF               	movwf	1+(??_SetDate+3)+0
  8969  0524  00AD               	movf	(SetDate@i),w
  8970  0525  0846               	movwf	(??_SetDate+5)+0
  8971  0526  00AE               	addwf	(??_SetDate+5)+0,w
  8972  0527  072E               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  8973  0528  3E40               	movwf	fsr0
  8974  0529  0084               	movf	0+(??_SetDate+3)+0,w
  8975  052A  082C               	movwf	indf
  8976  052B  0080               	incf	fsr0,f
  8977  052C  0A84               	movf	1+(??_SetDate+3)+0,w
  8978  052D  082D               	movwf	indf
  8979  052E  0080               	goto	l4338
  8980  052F  2D32               	
  8981                           l278:	
  8982  0530                     	goto	l4338
  8983  0530  2D32               	line	664
  8984                           ;main.c: 664:                             day_of_week = day_of_week + 1;
  8985                           	
  8986                           l276:	
  8987  0531                     	goto	l4338
  8988  0531  2D32               	line	665
  8989                           ;main.c: 665:                     }
  8990                           	
  8991                           l249:	
  8992  0532                     	line	666
  8993                           	
  8994                           l4338:	
  8995  0532                     ;main.c: 666:                 }
  8996                           		movlw	16
  8997  0532  3010               	xorwf	((SetDate@Key)),w
  8998  0533  0627               iorwf	((SetDate@Key+1)),w
  8999  0534  0428               	btfss	status,2
  9000  0535  1D03               	goto	u3951
  9001  0536  2D38               	goto	u3950
  9002  0537  2D39               u3951:
  9003  0538                     	goto	l4414
  9004  0538  2EFD               u3950:
  9005  0539                     	line	668
  9006                           	
  9007                           l4340:	
  9008  0539                     ;main.c: 667:                 else if (thirty == 1);main.c: 668:                 {
  9009                           	movf	((SetDate@i)),w
  9010  0539  0846               iorwf	((SetDate@i+1)),w
  9011  053A  0447               	btfss	status,2
  9012  053B  1D03               	goto	u3961
  9013  053C  2D3E               	goto	u3960
  9014  053D  2D3F               u3961:
  9015  053E                     	goto	l280
  9016  053E  2E7B               u3960:
  9017  053F                     	line	670
  9018                           	
  9019                           l4342:	
  9020  053F                     ;main.c: 669:                     if (dateArray[i] == 30);main.c: 670:                  
                                    {
  9021                           		decf	((SetDate@thirtyOne)),w
  9022  053F  033E               iorwf	((SetDate@thirtyOne+1)),w
  9023  0540  043F               	btfss	status,2
  9024  0541  1D03               	goto	u3971
  9025  0542  2D44               	goto	u3970
  9026  0543  2D45               u3971:
  9027  0544                     	goto	l4362
  9028  0544  2DAA               u3970:
  9029  0545                     	line	672
  9030                           	
  9031                           l4344:	
  9032  0545                     ;main.c: 671:                         dateArray[i] = 1;;main.c: 672:                    
                                      if (day_of_week == 7)
  9033                           	movf	(SetDate@i),w
  9034  0545  0846               	movwf	(??_SetDate+0)+0
  9035  0546  00A9               	addwf	(??_SetDate+0)+0,w
  9036  0547  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9037  0548  3E40               	movwf	fsr0
  9038  0549  0084               	bcf	status, 7	;select IRP bank0
  9039  054A  1383               	movf	indf,w
  9040  054B  0800               	movwf	(??_SetDate+1)+0+0
  9041  054C  00AA               	incf	fsr0,f
  9042  054D  0A84               	movf	indf,w
  9043  054E  0800               	movwf	(??_SetDate+1)+0+1
  9044  054F  00AB               		movlw	31
  9045  0550  301F               	xorwf	((??_SetDate+1)+0),w
  9046  0551  062A               iorwf	((??_SetDate+1)+1),w
  9047  0552  042B               	btfss	status,2
  9048  0553  1D03               	goto	u3981
  9049  0554  2D56               	goto	u3980
  9050  0555  2D57               u3981:
  9051  0556                     	goto	l4354
  9052  0556  2D77               u3980:
  9053  0557                     	line	674
  9054                           	
  9055                           l4346:	
  9056  0557                     ;main.c: 673:                             day_of_week = 1;;main.c: 674:                 
                                         else
  9057                           	movf	(SetDate@i),w
  9058  0557  0846               	movwf	(??_SetDate+0)+0
  9059  0558  00A9               	addwf	(??_SetDate+0)+0,w
  9060  0559  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9061  055A  3E40               	movwf	fsr0
  9062  055B  0084               	movlw	01h
  9063  055C  3001               	movwf	indf
  9064  055D  0080               	incf	fsr0,f
  9065  055E  0A84               	movlw	0
  9066  055F  3000               	movwf	indf
  9067  0560  0080               	line	675
  9068                           	
  9069                           l4348:	
  9070  0561                     ;main.c: 675:                             day_of_week = day_of_week + 1;
  9071                           		movlw	7
  9072  0561  3007               	xorwf	((_day_of_week)),w
  9073  0562  066D               iorwf	((_day_of_week+1)),w
  9074  0563  046E               	btfss	status,2
  9075  0564  1D03               	goto	u3991
  9076  0565  2D67               	goto	u3990
  9077  0566  2D68               u3991:
  9078  0567                     	goto	l4352
  9079  0567  2D6D               u3990:
  9080  0568                     	line	676
  9081                           	
  9082                           l4350:	
  9083  0568                     ;main.c: 676:                     }
  9084                           	movlw	01h
  9085  0568  3001               	movwf	(_day_of_week)
  9086  0569  00ED               	movlw	0
  9087  056A  3000               	movwf	((_day_of_week))+1
  9088  056B  00EE               	goto	l280
  9089  056C  2E7B               	line	677
  9090                           ;main.c: 677:                     else
  9091                           	
  9092                           l283:	
  9093  056D                     	line	678
  9094                           	
  9095                           l4352:	
  9096  056D                     ;main.c: 678:                     {
  9097                           	movf	(_day_of_week),w
  9098  056D  086D               	addlw	low(01h)
  9099  056E  3E01               	movwf	(_day_of_week)
  9100  056F  00ED               	movf	(_day_of_week+1),w
  9101  0570  086E               	skipnc
  9102  0571  1803               	addlw	1
  9103  0572  3E01               	addlw	high(01h)
  9104  0573  3E00               	movwf	1+(_day_of_week)
  9105  0574  00EE               	goto	l280
  9106  0575  2E7B               	
  9107                           l284:	
  9108  0576                     	line	679
  9109                           ;main.c: 679:                         dateArray[i] = dateArray[i] + 1;
  9110                           	goto	l280
  9111  0576  2E7B               	line	680
  9112                           ;main.c: 680:                         if (day_of_week == 7)
  9113                           	
  9114                           l282:	
  9115  0577                     	line	682
  9116                           	
  9117                           l4354:	
  9118  0577                     ;main.c: 681:                             day_of_week = 1;;main.c: 682:                 
                                         else
  9119                           	movf	(SetDate@i),w
  9120  0577  0846               	movwf	(??_SetDate+0)+0
  9121  0578  00A9               	addwf	(??_SetDate+0)+0,w
  9122  0579  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9123  057A  3E40               	movwf	fsr0
  9124  057B  0084               	movf	indf,w
  9125  057C  0800               	movwf	(??_SetDate+1)+0+0
  9126  057D  00AA               	incf	fsr0,f
  9127  057E  0A84               	movf	indf,w
  9128  057F  0800               	movwf	(??_SetDate+1)+0+1
  9129  0580  00AB               	movf	0+(??_SetDate+1)+0,w
  9130  0581  082A               	addlw	low(01h)
  9131  0582  3E01               	movwf	(??_SetDate+3)+0
  9132  0583  00AC               	movf	1+(??_SetDate+1)+0,w
  9133  0584  082B               	skipnc
  9134  0585  1803               	addlw	1
  9135  0586  3E01               	addlw	high(01h)
  9136  0587  3E00               	movwf	1+(??_SetDate+3)+0
  9137  0588  00AD               	movf	(SetDate@i),w
  9138  0589  0846               	movwf	(??_SetDate+5)+0
  9139  058A  00AE               	addwf	(??_SetDate+5)+0,w
  9140  058B  072E               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9141  058C  3E40               	movwf	fsr0
  9142  058D  0084               	movf	0+(??_SetDate+3)+0,w
  9143  058E  082C               	movwf	indf
  9144  058F  0080               	incf	fsr0,f
  9145  0590  0A84               	movf	1+(??_SetDate+3)+0,w
  9146  0591  082D               	movwf	indf
  9147  0592  0080               	line	683
  9148                           	
  9149                           l4356:	
  9150  0593                     ;main.c: 683:                             day_of_week = day_of_week + 1;
  9151                           		movlw	7
  9152  0593  3007               	xorwf	((_day_of_week)),w
  9153  0594  066D               iorwf	((_day_of_week+1)),w
  9154  0595  046E               	btfss	status,2
  9155  0596  1D03               	goto	u4001
  9156  0597  2D99               	goto	u4000
  9157  0598  2D9A               u4001:
  9158  0599                     	goto	l4360
  9159  0599  2D9F               u4000:
  9160  059A                     	line	684
  9161                           	
  9162                           l4358:	
  9163  059A                     ;main.c: 684:                     }
  9164                           	movlw	01h
  9165  059A  3001               	movwf	(_day_of_week)
  9166  059B  00ED               	movlw	0
  9167  059C  3000               	movwf	((_day_of_week))+1
  9168  059D  00EE               	goto	l280
  9169  059E  2E7B               	line	685
  9170                           ;main.c: 685:                 }
  9171                           	
  9172                           l286:	
  9173  059F                     	line	686
  9174                           	
  9175                           l4360:	
  9176  059F                     ;main.c: 686:                 else
  9177                           	movf	(_day_of_week),w
  9178  059F  086D               	addlw	low(01h)
  9179  05A0  3E01               	movwf	(_day_of_week)
  9180  05A1  00ED               	movf	(_day_of_week+1),w
  9181  05A2  086E               	skipnc
  9182  05A3  1803               	addlw	1
  9183  05A4  3E01               	addlw	high(01h)
  9184  05A5  3E00               	movwf	1+(_day_of_week)
  9185  05A6  00EE               	goto	l280
  9186  05A7  2E7B               	
  9187                           l287:	
  9188  05A8                     	goto	l280
  9189  05A8  2E7B               	line	687
  9190                           ;main.c: 687:                 {
  9191                           	
  9192                           l285:	
  9193  05A9                     	line	688
  9194                           ;main.c: 688:                     if (dateArray[i] == 28)
  9195                           	goto	l280
  9196  05A9  2E7B               	line	689
  9197                           ;main.c: 689:                     {
  9198                           	
  9199                           l281:	
  9200  05AA                     	
  9201                           l4362:	
  9202  05AA                     		decf	((SetDate@thirty)),w
  9203  05AA  033C               iorwf	((SetDate@thirty+1)),w
  9204  05AB  043D               	btfss	status,2
  9205  05AC  1D03               	goto	u4011
  9206  05AD  2DAF               	goto	u4010
  9207  05AE  2DB0               u4011:
  9208  05AF                     	goto	l4382
  9209  05AF  2E15               u4010:
  9210  05B0                     	line	691
  9211                           	
  9212                           l4364:	
  9213  05B0                     ;main.c: 690:                         dateArray[i] = 1;;main.c: 691:                    
                                      if (day_of_week == 7)
  9214                           	movf	(SetDate@i),w
  9215  05B0  0846               	movwf	(??_SetDate+0)+0
  9216  05B1  00A9               	addwf	(??_SetDate+0)+0,w
  9217  05B2  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9218  05B3  3E40               	movwf	fsr0
  9219  05B4  0084               	bcf	status, 7	;select IRP bank0
  9220  05B5  1383               	movf	indf,w
  9221  05B6  0800               	movwf	(??_SetDate+1)+0+0
  9222  05B7  00AA               	incf	fsr0,f
  9223  05B8  0A84               	movf	indf,w
  9224  05B9  0800               	movwf	(??_SetDate+1)+0+1
  9225  05BA  00AB               		movlw	30
  9226  05BB  301E               	xorwf	((??_SetDate+1)+0),w
  9227  05BC  062A               iorwf	((??_SetDate+1)+1),w
  9228  05BD  042B               	btfss	status,2
  9229  05BE  1D03               	goto	u4021
  9230  05BF  2DC1               	goto	u4020
  9231  05C0  2DC2               u4021:
  9232  05C1                     	goto	l4374
  9233  05C1  2DE2               u4020:
  9234  05C2                     	line	693
  9235                           	
  9236                           l4366:	
  9237  05C2                     ;main.c: 692:                             day_of_week = 1;;main.c: 693:                 
                                         else
  9238                           	movf	(SetDate@i),w
  9239  05C2  0846               	movwf	(??_SetDate+0)+0
  9240  05C3  00A9               	addwf	(??_SetDate+0)+0,w
  9241  05C4  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9242  05C5  3E40               	movwf	fsr0
  9243  05C6  0084               	movlw	01h
  9244  05C7  3001               	movwf	indf
  9245  05C8  0080               	incf	fsr0,f
  9246  05C9  0A84               	movlw	0
  9247  05CA  3000               	movwf	indf
  9248  05CB  0080               	line	694
  9249                           	
  9250                           l4368:	
  9251  05CC                     ;main.c: 694:                             day_of_week = day_of_week + 1;
  9252                           		movlw	7
  9253  05CC  3007               	xorwf	((_day_of_week)),w
  9254  05CD  066D               iorwf	((_day_of_week+1)),w
  9255  05CE  046E               	btfss	status,2
  9256  05CF  1D03               	goto	u4031
  9257  05D0  2DD2               	goto	u4030
  9258  05D1  2DD3               u4031:
  9259  05D2                     	goto	l4372
  9260  05D2  2DD8               u4030:
  9261  05D3                     	line	695
  9262                           	
  9263                           l4370:	
  9264  05D3                     ;main.c: 695:                     }
  9265                           	movlw	01h
  9266  05D3  3001               	movwf	(_day_of_week)
  9267  05D4  00ED               	movlw	0
  9268  05D5  3000               	movwf	((_day_of_week))+1
  9269  05D6  00EE               	goto	l280
  9270  05D7  2E7B               	line	696
  9271                           ;main.c: 696:                     else
  9272                           	
  9273                           l291:	
  9274  05D8                     	line	697
  9275                           	
  9276                           l4372:	
  9277  05D8                     ;main.c: 697:                     {
  9278                           	movf	(_day_of_week),w
  9279  05D8  086D               	addlw	low(01h)
  9280  05D9  3E01               	movwf	(_day_of_week)
  9281  05DA  00ED               	movf	(_day_of_week+1),w
  9282  05DB  086E               	skipnc
  9283  05DC  1803               	addlw	1
  9284  05DD  3E01               	addlw	high(01h)
  9285  05DE  3E00               	movwf	1+(_day_of_week)
  9286  05DF  00EE               	goto	l280
  9287  05E0  2E7B               	
  9288                           l292:	
  9289  05E1                     	line	698
  9290                           ;main.c: 698:                         dateArray[i] = dateArray[i] + 1;
  9291                           	goto	l280
  9292  05E1  2E7B               	line	699
  9293                           ;main.c: 699:                         if (day_of_week == 7)
  9294                           	
  9295                           l290:	
  9296  05E2                     	line	701
  9297                           	
  9298                           l4374:	
  9299  05E2                     ;main.c: 700:                             day_of_week = 1;;main.c: 701:                 
                                         else
  9300                           	movf	(SetDate@i),w
  9301  05E2  0846               	movwf	(??_SetDate+0)+0
  9302  05E3  00A9               	addwf	(??_SetDate+0)+0,w
  9303  05E4  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9304  05E5  3E40               	movwf	fsr0
  9305  05E6  0084               	movf	indf,w
  9306  05E7  0800               	movwf	(??_SetDate+1)+0+0
  9307  05E8  00AA               	incf	fsr0,f
  9308  05E9  0A84               	movf	indf,w
  9309  05EA  0800               	movwf	(??_SetDate+1)+0+1
  9310  05EB  00AB               	movf	0+(??_SetDate+1)+0,w
  9311  05EC  082A               	addlw	low(01h)
  9312  05ED  3E01               	movwf	(??_SetDate+3)+0
  9313  05EE  00AC               	movf	1+(??_SetDate+1)+0,w
  9314  05EF  082B               	skipnc
  9315  05F0  1803               	addlw	1
  9316  05F1  3E01               	addlw	high(01h)
  9317  05F2  3E00               	movwf	1+(??_SetDate+3)+0
  9318  05F3  00AD               	movf	(SetDate@i),w
  9319  05F4  0846               	movwf	(??_SetDate+5)+0
  9320  05F5  00AE               	addwf	(??_SetDate+5)+0,w
  9321  05F6  072E               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9322  05F7  3E40               	movwf	fsr0
  9323  05F8  0084               	movf	0+(??_SetDate+3)+0,w
  9324  05F9  082C               	movwf	indf
  9325  05FA  0080               	incf	fsr0,f
  9326  05FB  0A84               	movf	1+(??_SetDate+3)+0,w
  9327  05FC  082D               	movwf	indf
  9328  05FD  0080               	line	702
  9329                           	
  9330                           l4376:	
  9331  05FE                     ;main.c: 702:                             day_of_week = day_of_week + 1;
  9332                           		movlw	7
  9333  05FE  3007               	xorwf	((_day_of_week)),w
  9334  05FF  066D               iorwf	((_day_of_week+1)),w
  9335  0600  046E               	btfss	status,2
  9336  0601  1D03               	goto	u4041
  9337  0602  2E04               	goto	u4040
  9338  0603  2E05               u4041:
  9339  0604                     	goto	l4380
  9340  0604  2E0A               u4040:
  9341  0605                     	line	703
  9342                           	
  9343                           l4378:	
  9344  0605                     ;main.c: 703:                     }
  9345                           	movlw	01h
  9346  0605  3001               	movwf	(_day_of_week)
  9347  0606  00ED               	movlw	0
  9348  0607  3000               	movwf	((_day_of_week))+1
  9349  0608  00EE               	goto	l280
  9350  0609  2E7B               	line	704
  9351                           ;main.c: 704:                 }
  9352                           	
  9353                           l294:	
  9354  060A                     	line	705
  9355                           	
  9356                           l4380:	
  9357  060A                     ;main.c: 705:             }
  9358                           	movf	(_day_of_week),w
  9359  060A  086D               	addlw	low(01h)
  9360  060B  3E01               	movwf	(_day_of_week)
  9361  060C  00ED               	movf	(_day_of_week+1),w
  9362  060D  086E               	skipnc
  9363  060E  1803               	addlw	1
  9364  060F  3E01               	addlw	high(01h)
  9365  0610  3E00               	movwf	1+(_day_of_week)
  9366  0611  00EE               	goto	l280
  9367  0612  2E7B               	
  9368                           l295:	
  9369  0613                     	goto	l280
  9370  0613  2E7B               	line	706
  9371                           ;main.c: 706:             if (i == 1)
  9372                           	
  9373                           l293:	
  9374  0614                     	line	707
  9375                           ;main.c: 707:             {
  9376                           	goto	l280
  9377  0614  2E7B               	line	708
  9378                           ;main.c: 708:                 if (dateArray[i] == 12)
  9379                           	
  9380                           l289:	
  9381  0615                     	line	710
  9382                           	
  9383                           l4382:	
  9384  0615                     ;main.c: 709:                 {;main.c: 710:                     dateArray[i] = 1;
  9385                           	movf	(SetDate@i),w
  9386  0615  0846               	movwf	(??_SetDate+0)+0
  9387  0616  00A9               	addwf	(??_SetDate+0)+0,w
  9388  0617  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9389  0618  3E40               	movwf	fsr0
  9390  0619  0084               	bcf	status, 7	;select IRP bank0
  9391  061A  1383               	movf	indf,w
  9392  061B  0800               	movwf	(??_SetDate+1)+0+0
  9393  061C  00AA               	incf	fsr0,f
  9394  061D  0A84               	movf	indf,w
  9395  061E  0800               	movwf	(??_SetDate+1)+0+1
  9396  061F  00AB               		movlw	28
  9397  0620  301C               	xorwf	((??_SetDate+1)+0),w
  9398  0621  062A               iorwf	((??_SetDate+1)+1),w
  9399  0622  042B               	btfss	status,2
  9400  0623  1D03               	goto	u4051
  9401  0624  2E26               	goto	u4050
  9402  0625  2E27               u4051:
  9403  0626                     	goto	l4392
  9404  0626  2E47               u4050:
  9405  0627                     	line	712
  9406                           	
  9407                           l4384:	
  9408  0627                     ;main.c: 711:                 } else;main.c: 712:                     dateArray[i] = dat
                                 eArray[i] + 1;
  9409                           	movf	(SetDate@i),w
  9410  0627  0846               	movwf	(??_SetDate+0)+0
  9411  0628  00A9               	addwf	(??_SetDate+0)+0,w
  9412  0629  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9413  062A  3E40               	movwf	fsr0
  9414  062B  0084               	movlw	01h
  9415  062C  3001               	movwf	indf
  9416  062D  0080               	incf	fsr0,f
  9417  062E  0A84               	movlw	0
  9418  062F  3000               	movwf	indf
  9419  0630  0080               	line	713
  9420                           	
  9421                           l4386:	
  9422  0631                     ;main.c: 713:             }
  9423                           		movlw	7
  9424  0631  3007               	xorwf	((_day_of_week)),w
  9425  0632  066D               iorwf	((_day_of_week+1)),w
  9426  0633  046E               	btfss	status,2
  9427  0634  1D03               	goto	u4061
  9428  0635  2E37               	goto	u4060
  9429  0636  2E38               u4061:
  9430  0637                     	goto	l4390
  9431  0637  2E3D               u4060:
  9432  0638                     	line	714
  9433                           	
  9434                           l4388:	
  9435  0638                     ;main.c: 714:             if (i == 2) {
  9436                           	movlw	01h
  9437  0638  3001               	movwf	(_day_of_week)
  9438  0639  00ED               	movlw	0
  9439  063A  3000               	movwf	((_day_of_week))+1
  9440  063B  00EE               	goto	l280
  9441  063C  2E7B               	line	715
  9442                           ;main.c: 715:                 if (dateArray[i] == 99)
  9443                           	
  9444                           l298:	
  9445  063D                     	line	716
  9446                           	
  9447                           l4390:	
  9448  063D                     ;main.c: 716:                 {
  9449                           	movf	(_day_of_week),w
  9450  063D  086D               	addlw	low(01h)
  9451  063E  3E01               	movwf	(_day_of_week)
  9452  063F  00ED               	movf	(_day_of_week+1),w
  9453  0640  086E               	skipnc
  9454  0641  1803               	addlw	1
  9455  0642  3E01               	addlw	high(01h)
  9456  0643  3E00               	movwf	1+(_day_of_week)
  9457  0644  00EE               	goto	l280
  9458  0645  2E7B               	
  9459                           l299:	
  9460  0646                     	line	717
  9461                           ;main.c: 717:                     dateArray[i] = 0;
  9462                           	goto	l280
  9463  0646  2E7B               	line	718
  9464                           ;main.c: 718:                 } else
  9465                           	
  9466                           l297:	
  9467  0647                     	line	720
  9468                           	
  9469                           l4392:	
  9470  0647                     ;main.c: 719:                     dateArray[i] = dateArray[i] + 1;;main.c: 720:         
                                     }
  9471                           	movf	(SetDate@i),w
  9472  0647  0846               	movwf	(??_SetDate+0)+0
  9473  0648  00A9               	addwf	(??_SetDate+0)+0,w
  9474  0649  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9475  064A  3E40               	movwf	fsr0
  9476  064B  0084               	movf	indf,w
  9477  064C  0800               	movwf	(??_SetDate+1)+0+0
  9478  064D  00AA               	incf	fsr0,f
  9479  064E  0A84               	movf	indf,w
  9480  064F  0800               	movwf	(??_SetDate+1)+0+1
  9481  0650  00AB               	movf	0+(??_SetDate+1)+0,w
  9482  0651  082A               	addlw	low(01h)
  9483  0652  3E01               	movwf	(??_SetDate+3)+0
  9484  0653  00AC               	movf	1+(??_SetDate+1)+0,w
  9485  0654  082B               	skipnc
  9486  0655  1803               	addlw	1
  9487  0656  3E01               	addlw	high(01h)
  9488  0657  3E00               	movwf	1+(??_SetDate+3)+0
  9489  0658  00AD               	movf	(SetDate@i),w
  9490  0659  0846               	movwf	(??_SetDate+5)+0
  9491  065A  00AE               	addwf	(??_SetDate+5)+0,w
  9492  065B  072E               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9493  065C  3E40               	movwf	fsr0
  9494  065D  0084               	movf	0+(??_SetDate+3)+0,w
  9495  065E  082C               	movwf	indf
  9496  065F  0080               	incf	fsr0,f
  9497  0660  0A84               	movf	1+(??_SetDate+3)+0,w
  9498  0661  082D               	movwf	indf
  9499  0662  0080               	line	721
  9500                           	
  9501                           l4394:	
  9502  0663                     ;main.c: 721:         }
  9503                           		movlw	7
  9504  0663  3007               	xorwf	((_day_of_week)),w
  9505  0664  066D               iorwf	((_day_of_week+1)),w
  9506  0665  046E               	btfss	status,2
  9507  0666  1D03               	goto	u4071
  9508  0667  2E69               	goto	u4070
  9509  0668  2E6A               u4071:
  9510  0669                     	goto	l4398
  9511  0669  2E6F               u4070:
  9512  066A                     	line	722
  9513                           	
  9514                           l4396:	
  9515  066A                     ;main.c: 722:         month = dateArray[1];
  9516                           	movlw	01h
  9517  066A  3001               	movwf	(_day_of_week)
  9518  066B  00ED               	movlw	0
  9519  066C  3000               	movwf	((_day_of_week))+1
  9520  066D  00EE               	goto	l280
  9521  066E  2E7B               	line	723
  9522                           ;main.c: 723:         day = dateArray[0];
  9523                           	
  9524                           l301:	
  9525  066F                     	line	724
  9526                           	
  9527                           l4398:	
  9528  066F                     ;main.c: 724:         year = dateArray[2];
  9529                           	movf	(_day_of_week),w
  9530  066F  086D               	addlw	low(01h)
  9531  0670  3E01               	movwf	(_day_of_week)
  9532  0671  00ED               	movf	(_day_of_week+1),w
  9533  0672  086E               	skipnc
  9534  0673  1803               	addlw	1
  9535  0674  3E01               	addlw	high(01h)
  9536  0675  3E00               	movwf	1+(_day_of_week)
  9537  0676  00EE               	goto	l280
  9538  0677  2E7B               	
  9539                           l302:	
  9540  0678                     	goto	l280
  9541  0678  2E7B               	line	725
  9542                           ;main.c: 725:         Date[1] = day % 10 + 48;
  9543                           	
  9544                           l300:	
  9545  0679                     	goto	l280
  9546  0679  2E7B               	line	726
  9547                           ;main.c: 726:         day /= 10;
  9548                           	
  9549                           l296:	
  9550  067A                     	goto	l280
  9551  067A  2E7B               	
  9552                           l288:	
  9553  067B                     	line	727
  9554                           ;main.c: 727:         Date[0] = day % 10 + 48;
  9555                           	
  9556                           l280:	
  9557  067B                     	line	728
  9558                           ;main.c: 728:         Date[4] = month % 10 + 48;
  9559                           		decf	((SetDate@i)),w
  9560  067B  0346               iorwf	((SetDate@i+1)),w
  9561  067C  0447               	btfss	status,2
  9562  067D  1D03               	goto	u4081
  9563  067E  2E80               	goto	u4080
  9564  067F  2E81               u4081:
  9565  0680                     	goto	l4406
  9566  0680  2EBC               u4080:
  9567  0681                     	line	730
  9568                           	
  9569                           l4400:	
  9570  0681                     ;main.c: 729:         month /= 10;;main.c: 730:         Date[3] = month % 10 + 48;
  9571                           	movf	(SetDate@i),w
  9572  0681  0846               	movwf	(??_SetDate+0)+0
  9573  0682  00A9               	addwf	(??_SetDate+0)+0,w
  9574  0683  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9575  0684  3E40               	movwf	fsr0
  9576  0685  0084               	bcf	status, 7	;select IRP bank0
  9577  0686  1383               	movf	indf,w
  9578  0687  0800               	movwf	(??_SetDate+1)+0+0
  9579  0688  00AA               	incf	fsr0,f
  9580  0689  0A84               	movf	indf,w
  9581  068A  0800               	movwf	(??_SetDate+1)+0+1
  9582  068B  00AB               		movlw	12
  9583  068C  300C               	xorwf	((??_SetDate+1)+0),w
  9584  068D  062A               iorwf	((??_SetDate+1)+1),w
  9585  068E  042B               	btfss	status,2
  9586  068F  1D03               	goto	u4091
  9587  0690  2E92               	goto	u4090
  9588  0691  2E93               u4091:
  9589  0692                     	goto	l4404
  9590  0692  2E9E               u4090:
  9591  0693                     	line	732
  9592                           	
  9593                           l4402:	
  9594  0693                     ;main.c: 731:         Date[7] = year % 10 + 48;;main.c: 732:         year /= 10;
  9595                           	movf	(SetDate@i),w
  9596  0693  0846               	movwf	(??_SetDate+0)+0
  9597  0694  00A9               	addwf	(??_SetDate+0)+0,w
  9598  0695  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9599  0696  3E40               	movwf	fsr0
  9600  0697  0084               	movlw	01h
  9601  0698  3001               	movwf	indf
  9602  0699  0080               	incf	fsr0,f
  9603  069A  0A84               	movlw	0
  9604  069B  3000               	movwf	indf
  9605  069C  0080               	line	733
  9606                           ;main.c: 733:         Date[6] = year % 10 + 48;
  9607                           	goto	l4406
  9608  069D  2EBC               	
  9609                           l304:	
  9610  069E                     	line	734
  9611                           	
  9612                           l4404:	
  9613  069E                     ;main.c: 734:         LCD_SendString(Date);
  9614                           	movf	(SetDate@i),w
  9615  069E  0846               	movwf	(??_SetDate+0)+0
  9616  069F  00A9               	addwf	(??_SetDate+0)+0,w
  9617  06A0  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9618  06A1  3E40               	movwf	fsr0
  9619  06A2  0084               	movf	indf,w
  9620  06A3  0800               	movwf	(??_SetDate+1)+0+0
  9621  06A4  00AA               	incf	fsr0,f
  9622  06A5  0A84               	movf	indf,w
  9623  06A6  0800               	movwf	(??_SetDate+1)+0+1
  9624  06A7  00AB               	movf	0+(??_SetDate+1)+0,w
  9625  06A8  082A               	addlw	low(01h)
  9626  06A9  3E01               	movwf	(??_SetDate+3)+0
  9627  06AA  00AC               	movf	1+(??_SetDate+1)+0,w
  9628  06AB  082B               	skipnc
  9629  06AC  1803               	addlw	1
  9630  06AD  3E01               	addlw	high(01h)
  9631  06AE  3E00               	movwf	1+(??_SetDate+3)+0
  9632  06AF  00AD               	movf	(SetDate@i),w
  9633  06B0  0846               	movwf	(??_SetDate+5)+0
  9634  06B1  00AE               	addwf	(??_SetDate+5)+0,w
  9635  06B2  072E               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9636  06B3  3E40               	movwf	fsr0
  9637  06B4  0084               	movf	0+(??_SetDate+3)+0,w
  9638  06B5  082C               	movwf	indf
  9639  06B6  0080               	incf	fsr0,f
  9640  06B7  0A84               	movf	1+(??_SetDate+3)+0,w
  9641  06B8  082D               	movwf	indf
  9642  06B9  0080               	goto	l4406
  9643  06BA  2EBC               	
  9644                           l305:	
  9645  06BB                     	goto	l4406
  9646  06BB  2EBC               	line	735
  9647                           ;main.c: 735:     }
  9648                           	
  9649                           l303:	
  9650  06BC                     	line	736
  9651                           	
  9652                           l4406:	
  9653  06BC                     ;main.c: 736: }
  9654                           		movlw	2
  9655  06BC  3002               	xorwf	((SetDate@i)),w
  9656  06BD  0646               iorwf	((SetDate@i+1)),w
  9657  06BE  0447               	btfss	status,2
  9658  06BF  1D03               	goto	u4101
  9659  06C0  2EC2               	goto	u4100
  9660  06C1  2EC3               u4101:
  9661  06C2                     	goto	l4414
  9662  06C2  2EFD               u4100:
  9663  06C3                     	line	737
  9664                           	
  9665                           l4408:	
  9666  06C3                     ;main.c: 737: 
  9667                           	movf	(SetDate@i),w
  9668  06C3  0846               	movwf	(??_SetDate+0)+0
  9669  06C4  00A9               	addwf	(??_SetDate+0)+0,w
  9670  06C5  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9671  06C6  3E40               	movwf	fsr0
  9672  06C7  0084               	bcf	status, 7	;select IRP bank0
  9673  06C8  1383               	movf	indf,w
  9674  06C9  0800               	movwf	(??_SetDate+1)+0+0
  9675  06CA  00AA               	incf	fsr0,f
  9676  06CB  0A84               	movf	indf,w
  9677  06CC  0800               	movwf	(??_SetDate+1)+0+1
  9678  06CD  00AB               		movlw	99
  9679  06CE  3063               	xorwf	((??_SetDate+1)+0),w
  9680  06CF  062A               iorwf	((??_SetDate+1)+1),w
  9681  06D0  042B               	btfss	status,2
  9682  06D1  1D03               	goto	u4111
  9683  06D2  2ED4               	goto	u4110
  9684  06D3  2ED5               u4111:
  9685  06D4                     	goto	l4412
  9686  06D4  2EDE               u4110:
  9687  06D5                     	line	739
  9688                           	
  9689                           l4410:	
  9690  06D5                     ;main.c: 738: ;main.c: 739: void CheckTime(void)
  9691                           	movf	(SetDate@i),w
  9692  06D5  0846               	movwf	(??_SetDate+0)+0
  9693  06D6  00A9               	addwf	(??_SetDate+0)+0,w
  9694  06D7  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9695  06D8  3E40               	movwf	fsr0
  9696  06D9  0084               	clrf	indf
  9697  06DA  0180               	incf	fsr0,f
  9698  06DB  0A84               	clrf	indf
  9699  06DC  0180               	line	740
  9700                           ;main.c: 740: {
  9701                           	goto	l4414
  9702  06DD  2EFD               	
  9703                           l307:	
  9704  06DE                     	line	741
  9705                           	
  9706                           l4412:	
  9707  06DE                     ;main.c: 741: 
  9708                           	movf	(SetDate@i),w
  9709  06DE  0846               	movwf	(??_SetDate+0)+0
  9710  06DF  00A9               	addwf	(??_SetDate+0)+0,w
  9711  06E0  0729               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9712  06E1  3E40               	movwf	fsr0
  9713  06E2  0084               	movf	indf,w
  9714  06E3  0800               	movwf	(??_SetDate+1)+0+0
  9715  06E4  00AA               	incf	fsr0,f
  9716  06E5  0A84               	movf	indf,w
  9717  06E6  0800               	movwf	(??_SetDate+1)+0+1
  9718  06E7  00AB               	movf	0+(??_SetDate+1)+0,w
  9719  06E8  082A               	addlw	low(01h)
  9720  06E9  3E01               	movwf	(??_SetDate+3)+0
  9721  06EA  00AC               	movf	1+(??_SetDate+1)+0,w
  9722  06EB  082B               	skipnc
  9723  06EC  1803               	addlw	1
  9724  06ED  3E01               	addlw	high(01h)
  9725  06EE  3E00               	movwf	1+(??_SetDate+3)+0
  9726  06EF  00AD               	movf	(SetDate@i),w
  9727  06F0  0846               	movwf	(??_SetDate+5)+0
  9728  06F1  00AE               	addwf	(??_SetDate+5)+0,w
  9729  06F2  072E               	addlw	low(SetDate@dateArray|((0x0)<<8))&0ffh
  9730  06F3  3E40               	movwf	fsr0
  9731  06F4  0084               	movf	0+(??_SetDate+3)+0,w
  9732  06F5  082C               	movwf	indf
  9733  06F6  0080               	incf	fsr0,f
  9734  06F7  0A84               	movf	1+(??_SetDate+3)+0,w
  9735  06F8  082D               	movwf	indf
  9736  06F9  0080               	goto	l4414
  9737  06FA  2EFD               	
  9738                           l308:	
  9739  06FB                     	goto	l4414
  9740  06FB  2EFD               	line	742
  9741                           ;main.c: 742: 
  9742                           	
  9743                           l306:	
  9744  06FC                     	goto	l4414
  9745  06FC  2EFD               	line	743
  9746                           ;main.c: 743:     if (isWeekDay == 1)
  9747                           	
  9748                           l279:	
  9749  06FD                     	line	744
  9750                           	
  9751                           l4414:	
  9752  06FD                     ;main.c: 744:     {
  9753                           	movf	1+(SetDate@dateArray)+02h,w
  9754  06FD  0843               	movwf	(_month+1)
  9755  06FE  00E6               	movf	0+(SetDate@dateArray)+02h,w
  9756  06FF  0842               	movwf	(_month)
  9757  0700  00E5               	line	745
  9758                           	
  9759                           l4416:	
  9760  0701                     ;main.c: 745:         timeMins = RealTimeClock_get_minutes();
  9761                           	movf	(SetDate@dateArray+1),w
  9762  0701  0841               	movwf	(_day+1)
  9763  0702  00E4               	movf	(SetDate@dateArray),w
  9764  0703  0840               	movwf	(_day)
  9765  0704  00E3               	line	746
  9766                           	
  9767                           l4418:	
  9768  0705                     ;main.c: 746:         timeHours = RealTimeClock_get_hours();
  9769                           	movf	1+(SetDate@dateArray)+04h,w
  9770  0705  0845               	movwf	(_year+1)
  9771  0706  00E2               	movf	0+(SetDate@dateArray)+04h,w
  9772  0707  0844               	movwf	(_year)
  9773  0708  00E1               	line	747
  9774                           	
  9775                           l4420:	
  9776  0709                     ;main.c: 747:         if (timeHours < weekDayStart[0])
  9777                           	movlw	0Ah
  9778  0709  300A               	movwf	(___awmod@divisor)
  9779  070A  00F0               	movlw	0
  9780  070B  3000               	movwf	((___awmod@divisor))+1
  9781  070C  00F1               	movf	(_day+1),w
  9782  070D  0864               	movwf	(___awmod@dividend+1)
  9783  070E  00F3               	movf	(_day),w
  9784  070F  0863               	movwf	(___awmod@dividend)
  9785  0710  00F2               	fcall	___awmod
  9786  0711  160A  158A  26B9  120A  118A  	movf	(0+(?___awmod)),w
  9787  0716  0870               	addlw	030h
  9788  0717  3E30               	bcf	status, 5	;RP0=0, select bank0
  9789  0718  1283               	bcf	status, 6	;RP1=0, select bank0
  9790  0719  1303               	movwf	(??_SetDate+0)+0
  9791  071A  00A9               	movf	(??_SetDate+0)+0,w
  9792  071B  0829               	movwf	0+(SetDate@Date)+01h
  9793  071C  00B0               	line	748
  9794                           	
  9795                           l4422:	
  9796  071D                     ;main.c: 748:         {
  9797                           	movlw	0Ah
  9798  071D  300A               	movwf	(___awdiv@divisor)
  9799  071E  00F0               	movlw	0
  9800  071F  3000               	movwf	((___awdiv@divisor))+1
  9801  0720  00F1               	movf	(_day+1),w
  9802  0721  0864               	movwf	(___awdiv@dividend+1)
  9803  0722  00F3               	movf	(_day),w
  9804  0723  0863               	movwf	(___awdiv@dividend)
  9805  0724  00F2               	fcall	___awdiv
  9806  0725  160A  158A  271C  120A  118A  	movf	(1+(?___awdiv)),w
  9807  072A  0871               	bcf	status, 5	;RP0=0, select bank0
  9808  072B  1283               	bcf	status, 6	;RP1=0, select bank0
  9809  072C  1303               	movwf	(_day+1)
  9810  072D  00E4               	movf	(0+(?___awdiv)),w
  9811  072E  0870               	movwf	(_day)
  9812  072F  00E3               	line	749
  9813                           	
  9814                           l4424:	
  9815  0730                     ;main.c: 749:             if(timeMins < weekDayStart[1])
  9816                           	movlw	0Ah
  9817  0730  300A               	movwf	(___awmod@divisor)
  9818  0731  00F0               	movlw	0
  9819  0732  3000               	movwf	((___awmod@divisor))+1
  9820  0733  00F1               	movf	(_day+1),w
  9821  0734  0864               	movwf	(___awmod@dividend+1)
  9822  0735  00F3               	movf	(_day),w
  9823  0736  0863               	movwf	(___awmod@dividend)
  9824  0737  00F2               	fcall	___awmod
  9825  0738  160A  158A  26B9  120A  118A  	movf	(0+(?___awmod)),w
  9826  073D  0870               	addlw	030h
  9827  073E  3E30               	bcf	status, 5	;RP0=0, select bank0
  9828  073F  1283               	bcf	status, 6	;RP1=0, select bank0
  9829  0740  1303               	movwf	(??_SetDate+0)+0
  9830  0741  00A9               	movf	(??_SetDate+0)+0,w
  9831  0742  0829               	movwf	(SetDate@Date)
  9832  0743  00AF               	line	750
  9833                           	
  9834                           l4426:	
  9835  0744                     ;main.c: 750:                 IsHeatingOn = 0;
  9836                           	movlw	0Ah
  9837  0744  300A               	movwf	(___awmod@divisor)
  9838  0745  00F0               	movlw	0
  9839  0746  3000               	movwf	((___awmod@divisor))+1
  9840  0747  00F1               	movf	(_month+1),w
  9841  0748  0866               	movwf	(___awmod@dividend+1)
  9842  0749  00F3               	movf	(_month),w
  9843  074A  0865               	movwf	(___awmod@dividend)
  9844  074B  00F2               	fcall	___awmod
  9845  074C  160A  158A  26B9  120A  118A  	movf	(0+(?___awmod)),w
  9846  0751  0870               	addlw	030h
  9847  0752  3E30               	bcf	status, 5	;RP0=0, select bank0
  9848  0753  1283               	bcf	status, 6	;RP1=0, select bank0
  9849  0754  1303               	movwf	(??_SetDate+0)+0
  9850  0755  00A9               	movf	(??_SetDate+0)+0,w
  9851  0756  0829               	movwf	0+(SetDate@Date)+04h
  9852  0757  00B3               	line	751
  9853                           	
  9854                           l4428:	
  9855  0758                     ;main.c: 751:             else
  9856                           	movlw	0Ah
  9857  0758  300A               	movwf	(___awdiv@divisor)
  9858  0759  00F0               	movlw	0
  9859  075A  3000               	movwf	((___awdiv@divisor))+1
  9860  075B  00F1               	movf	(_month+1),w
  9861  075C  0866               	movwf	(___awdiv@dividend+1)
  9862  075D  00F3               	movf	(_month),w
  9863  075E  0865               	movwf	(___awdiv@dividend)
  9864  075F  00F2               	fcall	___awdiv
  9865  0760  160A  158A  271C  120A  118A  	movf	(1+(?___awdiv)),w
  9866  0765  0871               	bcf	status, 5	;RP0=0, select bank0
  9867  0766  1283               	bcf	status, 6	;RP1=0, select bank0
  9868  0767  1303               	movwf	(_month+1)
  9869  0768  00E6               	movf	(0+(?___awdiv)),w
  9870  0769  0870               	movwf	(_month)
  9871  076A  00E5               	line	752
  9872                           	
  9873                           l4430:	
  9874  076B                     ;main.c: 752:                 IsHeatingOn = 1;
  9875                           	movlw	0Ah
  9876  076B  300A               	movwf	(___awmod@divisor)
  9877  076C  00F0               	movlw	0
  9878  076D  3000               	movwf	((___awmod@divisor))+1
  9879  076E  00F1               	movf	(_month+1),w
  9880  076F  0866               	movwf	(___awmod@dividend+1)
  9881  0770  00F3               	movf	(_month),w
  9882  0771  0865               	movwf	(___awmod@dividend)
  9883  0772  00F2               	fcall	___awmod
  9884  0773  160A  158A  26B9  120A  118A  	movf	(0+(?___awmod)),w
  9885  0778  0870               	addlw	030h
  9886  0779  3E30               	bcf	status, 5	;RP0=0, select bank0
  9887  077A  1283               	bcf	status, 6	;RP1=0, select bank0
  9888  077B  1303               	movwf	(??_SetDate+0)+0
  9889  077C  00A9               	movf	(??_SetDate+0)+0,w
  9890  077D  0829               	movwf	0+(SetDate@Date)+03h
  9891  077E  00B2               	line	753
  9892                           	
  9893                           l4432:	
  9894  077F                     ;main.c: 753:         }
  9895                           	movlw	0Ah
  9896  077F  300A               	movwf	(___awmod@divisor)
  9897  0780  00F0               	movlw	0
  9898  0781  3000               	movwf	((___awmod@divisor))+1
  9899  0782  00F1               	movf	(_year+1),w
  9900  0783  0862               	movwf	(___awmod@dividend+1)
  9901  0784  00F3               	movf	(_year),w
  9902  0785  0861               	movwf	(___awmod@dividend)
  9903  0786  00F2               	fcall	___awmod
  9904  0787  160A  158A  26B9  120A  118A  	movf	(0+(?___awmod)),w
  9905  078C  0870               	addlw	030h
  9906  078D  3E30               	bcf	status, 5	;RP0=0, select bank0
  9907  078E  1283               	bcf	status, 6	;RP1=0, select bank0
  9908  078F  1303               	movwf	(??_SetDate+0)+0
  9909  0790  00A9               	movf	(??_SetDate+0)+0,w
  9910  0791  0829               	movwf	0+(SetDate@Date)+07h
  9911  0792  00B6               	line	754
  9912                           	
  9913                           l4434:	
  9914  0793                     ;main.c: 754:         else if(timeHours > weekDayEnd[0])
  9915                           	movlw	0Ah
  9916  0793  300A               	movwf	(___awdiv@divisor)
  9917  0794  00F0               	movlw	0
  9918  0795  3000               	movwf	((___awdiv@divisor))+1
  9919  0796  00F1               	movf	(_year+1),w
  9920  0797  0862               	movwf	(___awdiv@dividend+1)
  9921  0798  00F3               	movf	(_year),w
  9922  0799  0861               	movwf	(___awdiv@dividend)
  9923  079A  00F2               	fcall	___awdiv
  9924  079B  160A  158A  271C  120A  118A  	movf	(1+(?___awdiv)),w
  9925  07A0  0871               	bcf	status, 5	;RP0=0, select bank0
  9926  07A1  1283               	bcf	status, 6	;RP1=0, select bank0
  9927  07A2  1303               	movwf	(_year+1)
  9928  07A3  00E2               	movf	(0+(?___awdiv)),w
  9929  07A4  0870               	movwf	(_year)
  9930  07A5  00E1               	line	755
  9931                           	
  9932                           l4436:	
  9933  07A6                     ;main.c: 755:         {
  9934                           	movlw	0Ah
  9935  07A6  300A               	movwf	(___awmod@divisor)
  9936  07A7  00F0               	movlw	0
  9937  07A8  3000               	movwf	((___awmod@divisor))+1
  9938  07A9  00F1               	movf	(_year+1),w
  9939  07AA  0862               	movwf	(___awmod@dividend+1)
  9940  07AB  00F3               	movf	(_year),w
  9941  07AC  0861               	movwf	(___awmod@dividend)
  9942  07AD  00F2               	fcall	___awmod
  9943  07AE  160A  158A  26B9  120A  118A  	movf	(0+(?___awmod)),w
  9944  07B3  0870               	addlw	030h
  9945  07B4  3E30               	bcf	status, 5	;RP0=0, select bank0
  9946  07B5  1283               	bcf	status, 6	;RP1=0, select bank0
  9947  07B6  1303               	movwf	(??_SetDate+0)+0
  9948  07B7  00A9               	movf	(??_SetDate+0)+0,w
  9949  07B8  0829               	movwf	0+(SetDate@Date)+06h
  9950  07B9  00B5               	line	756
  9951                           	
  9952                           l4438:	
  9953  07BA                     ;main.c: 756:             if(timeMins > weekDayEnd[1])
  9954                           	movlw	(low(SetDate@Date|((0x0)<<8))&0ffh)
  9955  07BA  302F               	movwf	(LCD_SendString@string)
  9956  07BB  00F1               	movlw	(0x0)
  9957  07BC  3000               	movwf	(LCD_SendString@string+1)
  9958  07BD  00F2               	fcall	_LCD_SendString
  9959  07BE  160A  158A  2466  120A  118A  	goto	l4196
  9960  07C3  2A74               	line	757
  9961                           ;main.c: 757:                 IsHeatingOn = 0;
  9962                           	
  9963                           l309:	
  9964  07C4                     	goto	l4196
  9965  07C4  2A74               	
  9966                           l245:	
  9967  07C5                     	line	758
  9968                           	
  9969                           l310:	
  9970  07C5                     	return
  9971  07C5  0008               	opt stack 0
  9972                           GLOBAL	__end_of_SetDate
  9973                           	__end_of_SetDate:
  9974  07C6                     	signat	_SetDate,4217
  9975                           	global	_RealTimeClock_set_year
  9976                           
  9977 ;; *************** function _RealTimeClock_set_year *****************
  9978 ;; Defined at:
  9979 ;;		line 187 in file "realtimeclock.c"
  9980 ;; Parameters:    Size  Location     Type
  9981 ;;  year            2    0[BANK0 ] int 
  9982 ;; Auto vars:     Size  Location     Type
  9983 ;;		None
  9984 ;; Return value:  Size  Location     Type
  9985 ;;                  1    wreg      void 
  9986 ;; Registers used:
  9987 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9988 ;; Tracked objects:
  9989 ;;		On entry : 0/0
  9990 ;;		On exit  : 0/0
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9993 ;;      Params:         0       2       0       0       0
  9994 ;;      Locals:         0       0       0       0       0
  9995 ;;      Temps:          0       0       0       0       0
  9996 ;;      Totals:         0       2       0       0       0
  9997 ;;Total ram usage:        2 bytes
  9998 ;; Hardware stack levels used:    1
  9999 ;; Hardware stack levels required when called:    2
 10000 ;; This function calls:
 10001 ;;		_RealTimeClock_write_byte
 10002 ;;		___int_to_hex
 10003 ;; This function is called by:
 10004 ;;		_SetDate
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
 10008                           	file	"realtimeclock.c"
 10009                           	line	187
 10010                           global __ptext13
 10011                           __ptext13:	;psect for function _RealTimeClock_set_year
 10012  18E7                     psect	text13
 10013                           	file	"realtimeclock.c"
 10014                           	line	187
 10015                           	global	__size_of_RealTimeClock_set_year
 10016                           	__size_of_RealTimeClock_set_year	equ	__end_of_RealTimeClock_set_year-_RealTimeClock_set
                                 _year
 10017  001D                     	
 10018                           _RealTimeClock_set_year:	
 10019  18E7                     ;incstack = 0
 10020                           	opt	stack 3
 10021                           ; Regs used in _RealTimeClock_set_year: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10022                           	line	188
 10023                           	
 10024                           l3974:	
 10025  18E7                     ;realtimeclock.c: 188:     RB5 = 1;
 10026                           	bcf	status, 5	;RP0=0, select bank0
 10027  18E7  1283               	bcf	status, 6	;RP1=0, select bank0
 10028  18E8  1303               	bsf	(53/8),(53)&7	;volatile
 10029  18E9  1686               	line	189
 10030                           	
 10031                           l3976:	
 10032  18EA                     ;realtimeclock.c: 189:     RealTimeClock_write_byte(0x8c);
 10033                           	movlw	low(08Ch)
 10034  18EA  308C               	fcall	_RealTimeClock_write_byte
 10035  18EB  160A  158A  2328  160A  158A  	line	190
 10036                           ;realtimeclock.c: 190:     RealTimeClock_write_byte(__int_to_hex(year));
 10037                           	bcf	status, 5	;RP0=0, select bank0
 10038  18F0  1283               	bcf	status, 6	;RP1=0, select bank0
 10039  18F1  1303               	movf	(RealTimeClock_set_year@year+1),w
 10040  18F2  0821               	movwf	(___int_to_hex@integer+1)
 10041  18F3  00F8               	movf	(RealTimeClock_set_year@year),w
 10042  18F4  0820               	movwf	(___int_to_hex@integer)
 10043  18F5  00F7               	fcall	___int_to_hex
 10044  18F6  160A  158A  23E2  160A  158A  	fcall	_RealTimeClock_write_byte
 10045  18FB  160A  158A  2328  160A  158A  	line	191
 10046                           	
 10047                           l3978:	
 10048  1900                     ;realtimeclock.c: 191:     RB5 = 0;
 10049                           	bcf	status, 5	;RP0=0, select bank0
 10050  1900  1283               	bcf	status, 6	;RP1=0, select bank0
 10051  1901  1303               	bcf	(53/8),(53)&7	;volatile
 10052  1902  1286               	line	192
 10053                           	
 10054                           l470:	
 10055  1903                     	return
 10056  1903  0008               	opt stack 0
 10057                           GLOBAL	__end_of_RealTimeClock_set_year
 10058                           	__end_of_RealTimeClock_set_year:
 10059  1904                     	signat	_RealTimeClock_set_year,4217
 10060                           	global	_RealTimeClock_set_month
 10061                           
 10062 ;; *************** function _RealTimeClock_set_month *****************
 10063 ;; Defined at:
 10064 ;;		line 172 in file "realtimeclock.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;  month           2    0[BANK0 ] int 
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;		None
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1    wreg      void 
 10071 ;; Registers used:
 10072 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10078 ;;      Params:         0       2       0       0       0
 10079 ;;      Locals:         0       0       0       0       0
 10080 ;;      Temps:          0       0       0       0       0
 10081 ;;      Totals:         0       2       0       0       0
 10082 ;;Total ram usage:        2 bytes
 10083 ;; Hardware stack levels used:    1
 10084 ;; Hardware stack levels required when called:    2
 10085 ;; This function calls:
 10086 ;;		_RealTimeClock_write_byte
 10087 ;;		___int_to_hex
 10088 ;; This function is called by:
 10089 ;;		_SetDate
 10090 ;; This function uses a non-reentrant model
 10091 ;;
 10092                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
 10093                           	line	172
 10094                           global __ptext14
 10095                           __ptext14:	;psect for function _RealTimeClock_set_month
 10096  18CA                     psect	text14
 10097                           	file	"realtimeclock.c"
 10098                           	line	172
 10099                           	global	__size_of_RealTimeClock_set_month
 10100                           	__size_of_RealTimeClock_set_month	equ	__end_of_RealTimeClock_set_month-_RealTimeClock_s
                                 et_month
 10101  001D                     	
 10102                           _RealTimeClock_set_month:	
 10103  18CA                     ;incstack = 0
 10104                           	opt	stack 3
 10105                           ; Regs used in _RealTimeClock_set_month: [wreg+status,2+status,0+btemp+1+pclath+cstack]

 10106                           	line	173
 10107                           	
 10108                           l3980:	
 10109  18CA                     ;realtimeclock.c: 173:     RB5 = 1;
 10110                           	bcf	status, 5	;RP0=0, select bank0
 10111  18CA  1283               	bcf	status, 6	;RP1=0, select bank0
 10112  18CB  1303               	bsf	(53/8),(53)&7	;volatile
 10113  18CC  1686               	line	174
 10114                           	
 10115                           l3982:	
 10116  18CD                     ;realtimeclock.c: 174:     RealTimeClock_write_byte(0x88);
 10117                           	movlw	low(088h)
 10118  18CD  3088               	fcall	_RealTimeClock_write_byte
 10119  18CE  160A  158A  2328  160A  158A  	line	175
 10120                           ;realtimeclock.c: 175:     RealTimeClock_write_byte(__int_to_hex(month));
 10121                           	bcf	status, 5	;RP0=0, select bank0
 10122  18D3  1283               	bcf	status, 6	;RP1=0, select bank0
 10123  18D4  1303               	movf	(RealTimeClock_set_month@month+1),w
 10124  18D5  0821               	movwf	(___int_to_hex@integer+1)
 10125  18D6  00F8               	movf	(RealTimeClock_set_month@month),w
 10126  18D7  0820               	movwf	(___int_to_hex@integer)
 10127  18D8  00F7               	fcall	___int_to_hex
 10128  18D9  160A  158A  23E2  160A  158A  	fcall	_RealTimeClock_write_byte
 10129  18DE  160A  158A  2328  160A  158A  	line	176
 10130                           	
 10131                           l3984:	
 10132  18E3                     ;realtimeclock.c: 176:     RB5 = 0;
 10133                           	bcf	status, 5	;RP0=0, select bank0
 10134  18E3  1283               	bcf	status, 6	;RP1=0, select bank0
 10135  18E4  1303               	bcf	(53/8),(53)&7	;volatile
 10136  18E5  1286               	line	177
 10137                           	
 10138                           l464:	
 10139  18E6                     	return
 10140  18E6  0008               	opt stack 0
 10141                           GLOBAL	__end_of_RealTimeClock_set_month
 10142                           	__end_of_RealTimeClock_set_month:
 10143  18E7                     	signat	_RealTimeClock_set_month,4217
 10144                           	global	_RealTimeClock_set_day_of_week
 10145                           
 10146 ;; *************** function _RealTimeClock_set_day_of_week *****************
 10147 ;; Defined at:
 10148 ;;		line 180 in file "realtimeclock.c"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;  day             2    0[BANK0 ] int 
 10151 ;; Auto vars:     Size  Location     Type
 10152 ;;		None
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  1    wreg      void 
 10155 ;; Registers used:
 10156 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10162 ;;      Params:         0       2       0       0       0
 10163 ;;      Locals:         0       0       0       0       0
 10164 ;;      Temps:          0       0       0       0       0
 10165 ;;      Totals:         0       2       0       0       0
 10166 ;;Total ram usage:        2 bytes
 10167 ;; Hardware stack levels used:    1
 10168 ;; Hardware stack levels required when called:    2
 10169 ;; This function calls:
 10170 ;;		_RealTimeClock_write_byte
 10171 ;;		___int_to_hex
 10172 ;; This function is called by:
 10173 ;;		_SetDate
 10174 ;; This function uses a non-reentrant model
 10175 ;;
 10176                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
 10177                           	line	180
 10178                           global __ptext15
 10179                           __ptext15:	;psect for function _RealTimeClock_set_day_of_week
 10180  18AD                     psect	text15
 10181                           	file	"realtimeclock.c"
 10182                           	line	180
 10183                           	global	__size_of_RealTimeClock_set_day_of_week
 10184                           	__size_of_RealTimeClock_set_day_of_week	equ	__end_of_RealTimeClock_set_day_of_week-_Rea
                                 lTimeClock_set_day_of_week
 10185  001D                     	
 10186                           _RealTimeClock_set_day_of_week:	
 10187  18AD                     ;incstack = 0
 10188                           	opt	stack 3
 10189                           ; Regs used in _RealTimeClock_set_day_of_week: [wreg+status,2+status,0+btemp+1+pclath+cs
                                 tack]
 10190                           	line	181
 10191                           	
 10192                           l3992:	
 10193  18AD                     ;realtimeclock.c: 181:     RB5 = 1;
 10194                           	bcf	status, 5	;RP0=0, select bank0
 10195  18AD  1283               	bcf	status, 6	;RP1=0, select bank0
 10196  18AE  1303               	bsf	(53/8),(53)&7	;volatile
 10197  18AF  1686               	line	182
 10198                           	
 10199                           l3994:	
 10200  18B0                     ;realtimeclock.c: 182:     RealTimeClock_write_byte(0x8a);
 10201                           	movlw	low(08Ah)
 10202  18B0  308A               	fcall	_RealTimeClock_write_byte
 10203  18B1  160A  158A  2328  160A  158A  	line	183
 10204                           ;realtimeclock.c: 183:     RealTimeClock_write_byte(__int_to_hex(day));
 10205                           	bcf	status, 5	;RP0=0, select bank0
 10206  18B6  1283               	bcf	status, 6	;RP1=0, select bank0
 10207  18B7  1303               	movf	(RealTimeClock_set_day_of_week@day+1),w
 10208  18B8  0821               	movwf	(___int_to_hex@integer+1)
 10209  18B9  00F8               	movf	(RealTimeClock_set_day_of_week@day),w
 10210  18BA  0820               	movwf	(___int_to_hex@integer)
 10211  18BB  00F7               	fcall	___int_to_hex
 10212  18BC  160A  158A  23E2  160A  158A  	fcall	_RealTimeClock_write_byte
 10213  18C1  160A  158A  2328  160A  158A  	line	184
 10214                           	
 10215                           l3996:	
 10216  18C6                     ;realtimeclock.c: 184:     RB5 = 0;
 10217                           	bcf	status, 5	;RP0=0, select bank0
 10218  18C6  1283               	bcf	status, 6	;RP1=0, select bank0
 10219  18C7  1303               	bcf	(53/8),(53)&7	;volatile
 10220  18C8  1286               	line	185
 10221                           	
 10222                           l467:	
 10223  18C9                     	return
 10224  18C9  0008               	opt stack 0
 10225                           GLOBAL	__end_of_RealTimeClock_set_day_of_week
 10226                           	__end_of_RealTimeClock_set_day_of_week:
 10227  18CA                     	signat	_RealTimeClock_set_day_of_week,4217
 10228                           	global	_RealTimeClock_set_day_of_month
 10229                           
 10230 ;; *************** function _RealTimeClock_set_day_of_month *****************
 10231 ;; Defined at:
 10232 ;;		line 165 in file "realtimeclock.c"
 10233 ;; Parameters:    Size  Location     Type
 10234 ;;  month           2    0[BANK0 ] int 
 10235 ;; Auto vars:     Size  Location     Type
 10236 ;;		None
 10237 ;; Return value:  Size  Location     Type
 10238 ;;                  1    wreg      void 
 10239 ;; Registers used:
 10240 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10241 ;; Tracked objects:
 10242 ;;		On entry : 0/0
 10243 ;;		On exit  : 0/0
 10244 ;;		Unchanged: 0/0
 10245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10246 ;;      Params:         0       2       0       0       0
 10247 ;;      Locals:         0       0       0       0       0
 10248 ;;      Temps:          0       0       0       0       0
 10249 ;;      Totals:         0       2       0       0       0
 10250 ;;Total ram usage:        2 bytes
 10251 ;; Hardware stack levels used:    1
 10252 ;; Hardware stack levels required when called:    2
 10253 ;; This function calls:
 10254 ;;		_RealTimeClock_write_byte
 10255 ;;		___int_to_hex
 10256 ;; This function is called by:
 10257 ;;		_SetDate
 10258 ;; This function uses a non-reentrant model
 10259 ;;
 10260                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
 10261                           	line	165
 10262                           global __ptext16
 10263                           __ptext16:	;psect for function _RealTimeClock_set_day_of_month
 10264  1890                     psect	text16
 10265                           	file	"realtimeclock.c"
 10266                           	line	165
 10267                           	global	__size_of_RealTimeClock_set_day_of_month
 10268                           	__size_of_RealTimeClock_set_day_of_month	equ	__end_of_RealTimeClock_set_day_of_month-_R
                                 ealTimeClock_set_day_of_month
 10269  001D                     	
 10270                           _RealTimeClock_set_day_of_month:	
 10271  1890                     ;incstack = 0
 10272                           	opt	stack 3
 10273                           ; Regs used in _RealTimeClock_set_day_of_month: [wreg+status,2+status,0+btemp+1+pclath+c
                                 stack]
 10274                           	line	166
 10275                           	
 10276                           l3986:	
 10277  1890                     ;realtimeclock.c: 166:     RB5 = 1;
 10278                           	bcf	status, 5	;RP0=0, select bank0
 10279  1890  1283               	bcf	status, 6	;RP1=0, select bank0
 10280  1891  1303               	bsf	(53/8),(53)&7	;volatile
 10281  1892  1686               	line	167
 10282                           	
 10283                           l3988:	
 10284  1893                     ;realtimeclock.c: 167:     RealTimeClock_write_byte(0x86);
 10285                           	movlw	low(086h)
 10286  1893  3086               	fcall	_RealTimeClock_write_byte
 10287  1894  160A  158A  2328  160A  158A  	line	168
 10288                           ;realtimeclock.c: 168:     RealTimeClock_write_byte(__int_to_hex(month));
 10289                           	bcf	status, 5	;RP0=0, select bank0
 10290  1899  1283               	bcf	status, 6	;RP1=0, select bank0
 10291  189A  1303               	movf	(RealTimeClock_set_day_of_month@month+1),w
 10292  189B  0821               	movwf	(___int_to_hex@integer+1)
 10293  189C  00F8               	movf	(RealTimeClock_set_day_of_month@month),w
 10294  189D  0820               	movwf	(___int_to_hex@integer)
 10295  189E  00F7               	fcall	___int_to_hex
 10296  189F  160A  158A  23E2  160A  158A  	fcall	_RealTimeClock_write_byte
 10297  18A4  160A  158A  2328  160A  158A  	line	169
 10298                           	
 10299                           l3990:	
 10300  18A9                     ;realtimeclock.c: 169:     RB5 = 0;
 10301                           	bcf	status, 5	;RP0=0, select bank0
 10302  18A9  1283               	bcf	status, 6	;RP1=0, select bank0
 10303  18AA  1303               	bcf	(53/8),(53)&7	;volatile
 10304  18AB  1286               	line	170
 10305                           	
 10306                           l461:	
 10307  18AC                     	return
 10308  18AC  0008               	opt stack 0
 10309                           GLOBAL	__end_of_RealTimeClock_set_day_of_month
 10310                           	__end_of_RealTimeClock_set_day_of_month:
 10311  18AD                     	signat	_RealTimeClock_set_day_of_month,4217
 10312                           	global	_CheckDay
 10313                           
 10314 ;; *************** function _CheckDay *****************
 10315 ;; Defined at:
 10316 ;;		line 486 in file "main.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;		None
 10319 ;; Auto vars:     Size  Location     Type
 10320 ;;		None
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  1    wreg      void 
 10323 ;; Registers used:
 10324 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10325 ;; Tracked objects:
 10326 ;;		On entry : 0/0
 10327 ;;		On exit  : 0/0
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10330 ;;      Params:         0       0       0       0       0
 10331 ;;      Locals:         0       0       0       0       0
 10332 ;;      Temps:          0       0       0       0       0
 10333 ;;      Totals:         0       0       0       0       0
 10334 ;;Total ram usage:        0 bytes
 10335 ;; Hardware stack levels used:    1
 10336 ;; This function calls:
 10337 ;;		Nothing
 10338 ;; This function is called by:
 10339 ;;		_SetDate
 10340 ;;		_main
 10341 ;; This function uses a non-reentrant model
 10342 ;;
 10343                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
 10344                           	file	"main.c"
 10345                           	line	486
 10346                           global __ptext17
 10347                           __ptext17:	;psect for function _CheckDay
 10348  0004                     psect	text17
 10349                           	file	"main.c"
 10350                           	line	486
 10351                           	global	__size_of_CheckDay
 10352                           	__size_of_CheckDay	equ	__end_of_CheckDay-_CheckDay
 10353  004D                     	
 10354                           _CheckDay:	
 10355  0004                     ;incstack = 0
 10356                           	opt	stack 5
 10357                           ; Regs used in _CheckDay: [wreg-fsr0h+status,2+status,0]
 10358                           	line	488
 10359                           	
 10360                           l3952:	
 10361  0004                     ;main.c: 488:         case 7:
 10362                           	goto	l3968
 10363  0004  2832               	line	492
 10364                           ;main.c: 489:             isWeekDay = 0;;main.c: 492: 
 10365                           	
 10366                           l220:	
 10367  0005                     	line	493
 10368                           	
 10369                           l3954:	
 10370  0005                     ;main.c: 493: 
 10371                           	movlw	01h
 10372  0005  3001               	bsf	status, 5	;RP0=1, select bank1
 10373  0006  1683               	bcf	status, 6	;RP1=0, select bank1
 10374  0007  1303               	movwf	(_isWeekDay)^080h
 10375  0008  00AF               	movlw	0
 10376  0009  3000               	movwf	((_isWeekDay)^080h)+1
 10377  000A  00B0               	line	494
 10378                           ;main.c: 494: void SetDate(int Key)
 10379                           	goto	l228
 10380  000B  2850               	line	495
 10381                           ;main.c: 495: {
 10382                           	
 10383                           l222:	
 10384  000C                     	line	496
 10385                           	
 10386                           l3956:	
 10387  000C                     ;main.c: 496: 
 10388                           	movlw	01h
 10389  000C  3001               	bsf	status, 5	;RP0=1, select bank1
 10390  000D  1683               	bcf	status, 6	;RP1=0, select bank1
 10391  000E  1303               	movwf	(_isWeekDay)^080h
 10392  000F  00AF               	movlw	0
 10393  0010  3000               	movwf	((_isWeekDay)^080h)+1
 10394  0011  00B0               	line	497
 10395                           ;main.c: 497:     LCD_Command(0x01);
 10396                           	goto	l228
 10397  0012  2850               	line	498
 10398                           ;main.c: 498:     int i = 0;
 10399                           	
 10400                           l223:	
 10401  0013                     	line	499
 10402                           	
 10403                           l3958:	
 10404  0013                     ;main.c: 499:     int thirty = 0;
 10405                           	movlw	01h
 10406  0013  3001               	bsf	status, 5	;RP0=1, select bank1
 10407  0014  1683               	bcf	status, 6	;RP1=0, select bank1
 10408  0015  1303               	movwf	(_isWeekDay)^080h
 10409  0016  00AF               	movlw	0
 10410  0017  3000               	movwf	((_isWeekDay)^080h)+1
 10411  0018  00B0               	line	500
 10412                           ;main.c: 500:     int thirtyOne = 0;
 10413                           	goto	l228
 10414  0019  2850               	line	501
 10415                           ;main.c: 501:     int feb = 0;
 10416                           	
 10417                           l224:	
 10418  001A                     	line	502
 10419                           	
 10420                           l3960:	
 10421  001A                     ;main.c: 502:     char* DateDis = ("Date:");
 10422                           	movlw	01h
 10423  001A  3001               	bsf	status, 5	;RP0=1, select bank1
 10424  001B  1683               	bcf	status, 6	;RP1=0, select bank1
 10425  001C  1303               	movwf	(_isWeekDay)^080h
 10426  001D  00AF               	movlw	0
 10427  001E  3000               	movwf	((_isWeekDay)^080h)+1
 10428  001F  00B0               	line	503
 10429                           ;main.c: 503:     char* DateSet = ("Date/Day Set");
 10430                           	goto	l228
 10431  0020  2850               	line	504
 10432                           ;main.c: 504:     char Date[9] = {'0', '0', '/', '0', '0', '/', '0', '0', '\0'};
 10433                           	
 10434                           l225:	
 10435  0021                     	line	505
 10436                           	
 10437                           l3962:	
 10438  0021                     ;main.c: 505:     int dateArray[3];
 10439                           	movlw	01h
 10440  0021  3001               	bsf	status, 5	;RP0=1, select bank1
 10441  0022  1683               	bcf	status, 6	;RP1=0, select bank1
 10442  0023  1303               	movwf	(_isWeekDay)^080h
 10443  0024  00AF               	movlw	0
 10444  0025  3000               	movwf	((_isWeekDay)^080h)+1
 10445  0026  00B0               	line	506
 10446                           ;main.c: 506: 
 10447                           	goto	l228
 10448  0027  2850               	line	507
 10449                           ;main.c: 507:     month = RealTimeClock_get_month();
 10450                           	
 10451                           l226:	
 10452  0028                     	line	508
 10453                           	
 10454                           l3964:	
 10455  0028                     ;main.c: 508:     day = RealTimeClock_get_day_of_month();
 10456                           	bsf	status, 5	;RP0=1, select bank1
 10457  0028  1683               	bcf	status, 6	;RP1=0, select bank1
 10458  0029  1303               	clrf	(_isWeekDay)^080h
 10459  002A  01AF               	clrf	(_isWeekDay+1)^080h
 10460  002B  01B0               	line	509
 10461                           ;main.c: 509:     year = RealTimeClock_get_year();
 10462                           	goto	l228
 10463  002C  2850               	line	510
 10464                           ;main.c: 510:     dateArray[0] = day;
 10465                           	
 10466                           l227:	
 10467  002D                     	line	511
 10468                           	
 10469                           l3966:	
 10470  002D                     ;main.c: 511:     dateArray[1] = month;
 10471                           	bsf	status, 5	;RP0=1, select bank1
 10472  002D  1683               	bcf	status, 6	;RP1=0, select bank1
 10473  002E  1303               	clrf	(_isWeekDay)^080h
 10474  002F  01AF               	clrf	(_isWeekDay+1)^080h
 10475  0030  01B0               	line	512
 10476                           ;main.c: 512:     dateArray[2] = year;
 10477                           	goto	l228
 10478  0031  2850               	
 10479                           l219:	
 10480  0032                     	
 10481                           l3968:	
 10482  0032                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10483                           ; Switch size 1, requested type "space"
 10484                           ; Number of cases is 1, Range of values is 0 to 0
 10485                           ; switch strategies available:
 10486                           ; Name         Instructions Cycles
 10487                           ; simple_byte            4     3 (average)
 10488                           ; direct_byte           11     8 (fixed)
 10489                           ; jumptable            260     6 (fixed)
 10490                           ;	Chosen strategy is simple_byte
 10491                           
 10492                           	bcf	status, 5	;RP0=0, select bank0
 10493  0032  1283               	bcf	status, 6	;RP1=0, select bank0
 10494  0033  1303               	movf (_day_of_week+1),w
 10495  0034  086E               	opt asmopt_push
 10496                           	opt asmopt_off
 10497                           	xorlw	0^0	; case 0
 10498  0035  3A00               	skipnz
 10499  0036  1903               	goto	l4922
 10500  0037  2839               	goto	l228
 10501  0038  2850               	opt asmopt_pop
 10502                           	
 10503                           l4922:	
 10504  0039                     ; Switch size 1, requested type "space"
 10505                           ; Number of cases is 7, Range of values is 1 to 7
 10506                           ; switch strategies available:
 10507                           ; Name         Instructions Cycles
 10508                           ; simple_byte           22    12 (average)
 10509                           ; direct_byte           32    11 (fixed)
 10510                           ; jumptable            263     9 (fixed)
 10511                           ;	Chosen strategy is simple_byte
 10512                           
 10513                           	movf (_day_of_week),w
 10514  0039  086D               	opt asmopt_push
 10515                           	opt asmopt_off
 10516                           	xorlw	1^0	; case 1
 10517  003A  3A01               	skipnz
 10518  003B  1903               	goto	l3954
 10519  003C  2805               	xorlw	2^1	; case 2
 10520  003D  3A03               	skipnz
 10521  003E  1903               	goto	l3956
 10522  003F  280C               	xorlw	3^2	; case 3
 10523  0040  3A01               	skipnz
 10524  0041  1903               	goto	l3958
 10525  0042  2813               	xorlw	4^3	; case 4
 10526  0043  3A07               	skipnz
 10527  0044  1903               	goto	l3960
 10528  0045  281A               	xorlw	5^4	; case 5
 10529  0046  3A01               	skipnz
 10530  0047  1903               	goto	l3962
 10531  0048  2821               	xorlw	6^5	; case 6
 10532  0049  3A03               	skipnz
 10533  004A  1903               	goto	l3964
 10534  004B  2828               	xorlw	7^6	; case 7
 10535  004C  3A01               	skipnz
 10536  004D  1903               	goto	l3966
 10537  004E  282D               	goto	l228
 10538  004F  2850               	opt asmopt_pop
 10539                           
 10540                           	
 10541                           l221:	
 10542  0050                     	line	513
 10543                           	
 10544                           l228:	
 10545  0050                     	return
 10546  0050  0008               	opt stack 0
 10547                           GLOBAL	__end_of_CheckDay
 10548                           	__end_of_CheckDay:
 10549  0051                     	signat	_CheckDay,89
 10550                           	global	_MainScreen
 10551                           
 10552 ;; *************** function _MainScreen *****************
 10553 ;; Defined at:
 10554 ;;		line 156 in file "main.c"
 10555 ;; Parameters:    Size  Location     Type
 10556 ;;		None
 10557 ;; Auto vars:     Size  Location     Type
 10558 ;;  Temp            1   10[BANK0 ] PTR unsigned char 
 10559 ;;		 -> STR_9(6), 
 10560 ;;  Time            1    9[BANK0 ] PTR unsigned char 
 10561 ;;		 -> STR_8(6), 
 10562 ;; Return value:  Size  Location     Type
 10563 ;;                  1    wreg      void 
 10564 ;; Registers used:
 10565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10571 ;;      Params:         0       0       0       0       0
 10572 ;;      Locals:         0       2       0       0       0
 10573 ;;      Temps:          0       1       0       0       0
 10574 ;;      Totals:         0       3       0       0       0
 10575 ;;Total ram usage:        3 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; Hardware stack levels required when called:    4
 10578 ;; This function calls:
 10579 ;;		_DisplayTemp
 10580 ;;		_DisplayTime
 10581 ;;		_LCD_SecondLine
 10582 ;;		_LCD_SendString
 10583 ;; This function is called by:
 10584 ;;		_HeatingControlOff
 10585 ;;		_main
 10586 ;; This function uses a non-reentrant model
 10587 ;;
 10588                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
 10589                           	line	156
 10590                           global __ptext18
 10591                           __ptext18:	;psect for function _MainScreen
 10592  1ABF                     psect	text18
 10593                           	file	"main.c"
 10594                           	line	156
 10595                           	global	__size_of_MainScreen
 10596                           	__size_of_MainScreen	equ	__end_of_MainScreen-_MainScreen
 10597  0033                     	
 10598                           _MainScreen:	
 10599  1ABF                     ;incstack = 0
 10600                           	opt	stack 1
 10601                           ; Regs used in _MainScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10602                           	line	159
 10603                           	
 10604                           l3998:	
 10605  1ABF                     ;main.c: 159:     int i = 0;
 10606                           	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
 10607  1ABF  30B0               	bcf	status, 5	;RP0=0, select bank0
 10608  1AC0  1283               	bcf	status, 6	;RP1=0, select bank0
 10609  1AC1  1303               	movwf	(??_MainScreen+0)+0
 10610  1AC2  00A8               	movf	(??_MainScreen+0)+0,w
 10611  1AC3  0828               	movwf	(MainScreen@Time)
 10612  1AC4  00A9               	line	160
 10613                           ;main.c: 160: 
 10614                           	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
 10615  1AC5  30BC               	movwf	(??_MainScreen+0)+0
 10616  1AC6  00A8               	movf	(??_MainScreen+0)+0,w
 10617  1AC7  0828               	movwf	(MainScreen@Temp)
 10618  1AC8  00AA               	line	161
 10619                           	
 10620                           l4000:	
 10621  1AC9                     ;main.c: 161:     int triggerTempChange[2] = {0, 0};
 10622                           		movf	(MainScreen@Time),w
 10623  1AC9  0829               	movwf	(LCD_SendString@string)
 10624  1ACA  00F1               	movlw	0
 10625  1ACB  3000               	btfss	status,2
 10626  1ACC  1D03               	movlw	080h
 10627  1ACD  3080               	movwf	(LCD_SendString@string+1)
 10628  1ACE  00F2               
 10629                           	fcall	_LCD_SendString
 10630  1ACF  160A  158A  2466  160A  158A  	line	163
 10631                           	
 10632                           l4002:	
 10633  1AD4                     ;main.c: 163:     char* TriggerSet = "Trigger Set";
 10634                           	fcall	_DisplayTime
 10635  1AD4  160A  118A  2324  160A  158A  	line	165
 10636                           	
 10637                           l4004:	
 10638  1AD9                     ;main.c: 165:         {
 10639                           	fcall	_LCD_SecondLine
 10640  1AD9  160A  158A  2018  160A  158A  	line	168
 10641                           	
 10642                           l4006:	
 10643  1ADE                     ;main.c: 168: 
 10644                           	bcf	status, 5	;RP0=0, select bank0
 10645  1ADE  1283               	bcf	status, 6	;RP1=0, select bank0
 10646  1ADF  1303               		movf	(MainScreen@Temp),w
 10647  1AE0  082A               	movwf	(LCD_SendString@string)
 10648  1AE1  00F1               	movlw	0
 10649  1AE2  3000               	btfss	status,2
 10650  1AE3  1D03               	movlw	080h
 10651  1AE4  3080               	movwf	(LCD_SendString@string+1)
 10652  1AE5  00F2               
 10653                           	fcall	_LCD_SendString
 10654  1AE6  160A  158A  2466  160A  158A  	line	170
 10655                           	
 10656                           l4008:	
 10657  1AEB                     ;main.c: 170: 
 10658                           	movlw	(low(_tempBuffer|((0x0)<<8)))&0ffh
 10659  1AEB  30EA               	fcall	_DisplayTemp
 10660  1AEC  160A  158A  2267  160A  158A  	line	173
 10661                           	
 10662                           l134:	
 10663  1AF1                     	return
 10664  1AF1  0008               	opt stack 0
 10665                           GLOBAL	__end_of_MainScreen
 10666                           	__end_of_MainScreen:
 10667  1AF2                     	signat	_MainScreen,89
 10668                           	global	_DisplayTime
 10669                           
 10670 ;; *************** function _DisplayTime *****************
 10671 ;; Defined at:
 10672 ;;		line 60 in file "main.c"
 10673 ;; Parameters:    Size  Location     Type
 10674 ;;		None
 10675 ;; Auto vars:     Size  Location     Type
 10676 ;;		None
 10677 ;; Return value:  Size  Location     Type
 10678 ;;                  1    wreg      void 
 10679 ;; Registers used:
 10680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10681 ;; Tracked objects:
 10682 ;;		On entry : 0/0
 10683 ;;		On exit  : 0/0
 10684 ;;		Unchanged: 0/0
 10685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10686 ;;      Params:         0       0       0       0       0
 10687 ;;      Locals:         0       0       0       0       0
 10688 ;;      Temps:          1       0       0       0       0
 10689 ;;      Totals:         1       0       0       0       0
 10690 ;;Total ram usage:        1 bytes
 10691 ;; Hardware stack levels used:    1
 10692 ;; Hardware stack levels required when called:    3
 10693 ;; This function calls:
 10694 ;;		_LCD_SendString
 10695 ;;		_RealTimeClock_get_hours
 10696 ;;		_RealTimeClock_get_minutes
 10697 ;;		_RealTimeClock_get_seconds
 10698 ;;		___awdiv
 10699 ;;		___awmod
 10700 ;; This function is called by:
 10701 ;;		_MainScreen
 10702 ;; This function uses a non-reentrant model
 10703 ;;
 10704                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
 10705                           	line	60
 10706                           global __ptext19
 10707                           __ptext19:	;psect for function _DisplayTime
 10708  1324                     psect	text19
 10709                           	file	"main.c"
 10710                           	line	60
 10711                           	global	__size_of_DisplayTime
 10712                           	__size_of_DisplayTime	equ	__end_of_DisplayTime-_DisplayTime
 10713  00E6                     	
 10714                           _DisplayTime:	
 10715  1324                     ;incstack = 0
 10716                           	opt	stack 1
 10717                           ; Regs used in _DisplayTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10718                           	line	63
 10719                           	
 10720                           l3726:	
 10721  1324                     ;main.c: 63: 
 10722                           	fcall	_RealTimeClock_get_seconds
 10723  1324  160A  158A  2245  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 10724  1329  1283               	bcf	status, 6	;RP1=0, select bank0
 10725  132A  1303               	movf	(1+(?_RealTimeClock_get_seconds)),w
 10726  132B  0826               	movwf	(_timeSecs+1)
 10727  132C  00E8               	movf	(0+(?_RealTimeClock_get_seconds)),w
 10728  132D  0825               	movwf	(_timeSecs)
 10729  132E  00E7               	line	64
 10730                           ;main.c: 64:     month = RealTimeClock_get_month();
 10731                           	fcall	_RealTimeClock_get_minutes
 10732  132F  160A  158A  219B  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 10733  1334  1283               	bcf	status, 6	;RP1=0, select bank0
 10734  1335  1303               	movf	(1+(?_RealTimeClock_get_minutes)),w
 10735  1336  0826               	movwf	(_timeMins+1)
 10736  1337  00EA               	movf	(0+(?_RealTimeClock_get_minutes)),w
 10737  1338  0825               	movwf	(_timeMins)
 10738  1339  00E9               	line	65
 10739                           ;main.c: 65:     day = RealTimeClock_get_day_of_month();
 10740                           	fcall	_RealTimeClock_get_hours
 10741  133A  160A  158A  2179  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 10742  133F  1283               	bcf	status, 6	;RP1=0, select bank0
 10743  1340  1303               	movf	(1+(?_RealTimeClock_get_hours)),w
 10744  1341  0826               	movwf	(_timeHours+1)
 10745  1342  00EC               	movf	(0+(?_RealTimeClock_get_hours)),w
 10746  1343  0825               	movwf	(_timeHours)
 10747  1344  00EB               	line	67
 10748                           	
 10749                           l3728:	
 10750  1345                     ;main.c: 67: 
 10751                           	movlw	0Ah
 10752  1345  300A               	movwf	(___awmod@divisor)
 10753  1346  00F0               	movlw	0
 10754  1347  3000               	movwf	((___awmod@divisor))+1
 10755  1348  00F1               	movf	(_timeHours+1),w
 10756  1349  086C               	movwf	(___awmod@dividend+1)
 10757  134A  00F3               	movf	(_timeHours),w
 10758  134B  086B               	movwf	(___awmod@dividend)
 10759  134C  00F2               	fcall	___awmod
 10760  134D  160A  158A  26B9  160A  118A  	movf	(0+(?___awmod)),w
 10761  1352  0870               	addlw	030h
 10762  1353  3E30               	movwf	(??_DisplayTime+0)+0
 10763  1354  00FC               	movf	(??_DisplayTime+0)+0,w
 10764  1355  087C               	bsf	status, 5	;RP0=1, select bank3
 10765  1356  1683               	bsf	status, 6	;RP1=1, select bank3
 10766  1357  1703               	movwf	0+(_timeDisplayer)^0180h+01h
 10767  1358  00CA               	line	68
 10768                           	
 10769                           l3730:	
 10770  1359                     ;main.c: 68:     dateDisplayer[4] = month % 10 + 48;
 10771                           	movlw	0Ah
 10772  1359  300A               	movwf	(___awdiv@divisor)
 10773  135A  00F0               	movlw	0
 10774  135B  3000               	movwf	((___awdiv@divisor))+1
 10775  135C  00F1               	bcf	status, 5	;RP0=0, select bank0
 10776  135D  1283               	bcf	status, 6	;RP1=0, select bank0
 10777  135E  1303               	movf	(_timeHours+1),w
 10778  135F  086C               	movwf	(___awdiv@dividend+1)
 10779  1360  00F3               	movf	(_timeHours),w
 10780  1361  086B               	movwf	(___awdiv@dividend)
 10781  1362  00F2               	fcall	___awdiv
 10782  1363  160A  158A  271C  160A  118A  	movf	(1+(?___awdiv)),w
 10783  1368  0871               	bcf	status, 5	;RP0=0, select bank0
 10784  1369  1283               	bcf	status, 6	;RP1=0, select bank0
 10785  136A  1303               	movwf	(_timeHours+1)
 10786  136B  00EC               	movf	(0+(?___awdiv)),w
 10787  136C  0870               	movwf	(_timeHours)
 10788  136D  00EB               	line	69
 10789                           	
 10790                           l3732:	
 10791  136E                     ;main.c: 69:     month /= 10;
 10792                           	movlw	0Ah
 10793  136E  300A               	movwf	(___awmod@divisor)
 10794  136F  00F0               	movlw	0
 10795  1370  3000               	movwf	((___awmod@divisor))+1
 10796  1371  00F1               	movf	(_timeHours+1),w
 10797  1372  086C               	movwf	(___awmod@dividend+1)
 10798  1373  00F3               	movf	(_timeHours),w
 10799  1374  086B               	movwf	(___awmod@dividend)
 10800  1375  00F2               	fcall	___awmod
 10801  1376  160A  158A  26B9  160A  118A  	movf	(0+(?___awmod)),w
 10802  137B  0870               	addlw	030h
 10803  137C  3E30               	movwf	(??_DisplayTime+0)+0
 10804  137D  00FC               	movf	(??_DisplayTime+0)+0,w
 10805  137E  087C               	bsf	status, 5	;RP0=1, select bank3
 10806  137F  1683               	bsf	status, 6	;RP1=1, select bank3
 10807  1380  1703               	movwf	(_timeDisplayer)^0180h
 10808  1381  00C9               	line	71
 10809                           	
 10810                           l3734:	
 10811  1382                     ;main.c: 71:     dateDisplayer[1] = day % 10 + 48;
 10812                           	movlw	0Ah
 10813  1382  300A               	movwf	(___awmod@divisor)
 10814  1383  00F0               	movlw	0
 10815  1384  3000               	movwf	((___awmod@divisor))+1
 10816  1385  00F1               	bcf	status, 5	;RP0=0, select bank0
 10817  1386  1283               	bcf	status, 6	;RP1=0, select bank0
 10818  1387  1303               	movf	(_timeMins+1),w
 10819  1388  086A               	movwf	(___awmod@dividend+1)
 10820  1389  00F3               	movf	(_timeMins),w
 10821  138A  0869               	movwf	(___awmod@dividend)
 10822  138B  00F2               	fcall	___awmod
 10823  138C  160A  158A  26B9  160A  118A  	movf	(0+(?___awmod)),w
 10824  1391  0870               	addlw	030h
 10825  1392  3E30               	movwf	(??_DisplayTime+0)+0
 10826  1393  00FC               	movf	(??_DisplayTime+0)+0,w
 10827  1394  087C               	bsf	status, 5	;RP0=1, select bank3
 10828  1395  1683               	bsf	status, 6	;RP1=1, select bank3
 10829  1396  1703               	movwf	0+(_timeDisplayer)^0180h+04h
 10830  1397  00CD               	line	72
 10831                           	
 10832                           l3736:	
 10833  1398                     ;main.c: 72:     day /= 10;
 10834                           	movlw	0Ah
 10835  1398  300A               	movwf	(___awdiv@divisor)
 10836  1399  00F0               	movlw	0
 10837  139A  3000               	movwf	((___awdiv@divisor))+1
 10838  139B  00F1               	bcf	status, 5	;RP0=0, select bank0
 10839  139C  1283               	bcf	status, 6	;RP1=0, select bank0
 10840  139D  1303               	movf	(_timeMins+1),w
 10841  139E  086A               	movwf	(___awdiv@dividend+1)
 10842  139F  00F3               	movf	(_timeMins),w
 10843  13A0  0869               	movwf	(___awdiv@dividend)
 10844  13A1  00F2               	fcall	___awdiv
 10845  13A2  160A  158A  271C  160A  118A  	movf	(1+(?___awdiv)),w
 10846  13A7  0871               	bcf	status, 5	;RP0=0, select bank0
 10847  13A8  1283               	bcf	status, 6	;RP1=0, select bank0
 10848  13A9  1303               	movwf	(_timeMins+1)
 10849  13AA  00EA               	movf	(0+(?___awdiv)),w
 10850  13AB  0870               	movwf	(_timeMins)
 10851  13AC  00E9               	line	73
 10852                           	
 10853                           l3738:	
 10854  13AD                     ;main.c: 73:     dateDisplayer[0] = day % 10 + 48;
 10855                           	movlw	0Ah
 10856  13AD  300A               	movwf	(___awmod@divisor)
 10857  13AE  00F0               	movlw	0
 10858  13AF  3000               	movwf	((___awmod@divisor))+1
 10859  13B0  00F1               	movf	(_timeMins+1),w
 10860  13B1  086A               	movwf	(___awmod@dividend+1)
 10861  13B2  00F3               	movf	(_timeMins),w
 10862  13B3  0869               	movwf	(___awmod@dividend)
 10863  13B4  00F2               	fcall	___awmod
 10864  13B5  160A  158A  26B9  160A  118A  	movf	(0+(?___awmod)),w
 10865  13BA  0870               	addlw	030h
 10866  13BB  3E30               	movwf	(??_DisplayTime+0)+0
 10867  13BC  00FC               	movf	(??_DisplayTime+0)+0,w
 10868  13BD  087C               	bsf	status, 5	;RP0=1, select bank3
 10869  13BE  1683               	bsf	status, 6	;RP1=1, select bank3
 10870  13BF  1703               	movwf	0+(_timeDisplayer)^0180h+03h
 10871  13C0  00CC               	line	75
 10872                           	
 10873                           l3740:	
 10874  13C1                     ;main.c: 75:     year /= 10;
 10875                           	movlw	0Ah
 10876  13C1  300A               	movwf	(___awmod@divisor)
 10877  13C2  00F0               	movlw	0
 10878  13C3  3000               	movwf	((___awmod@divisor))+1
 10879  13C4  00F1               	bcf	status, 5	;RP0=0, select bank0
 10880  13C5  1283               	bcf	status, 6	;RP1=0, select bank0
 10881  13C6  1303               	movf	(_timeSecs+1),w
 10882  13C7  0868               	movwf	(___awmod@dividend+1)
 10883  13C8  00F3               	movf	(_timeSecs),w
 10884  13C9  0867               	movwf	(___awmod@dividend)
 10885  13CA  00F2               	fcall	___awmod
 10886  13CB  160A  158A  26B9  160A  118A  	movf	(0+(?___awmod)),w
 10887  13D0  0870               	addlw	030h
 10888  13D1  3E30               	movwf	(??_DisplayTime+0)+0
 10889  13D2  00FC               	movf	(??_DisplayTime+0)+0,w
 10890  13D3  087C               	bsf	status, 5	;RP0=1, select bank3
 10891  13D4  1683               	bsf	status, 6	;RP1=1, select bank3
 10892  13D5  1703               	movwf	0+(_timeDisplayer)^0180h+07h
 10893  13D6  00D0               	line	76
 10894                           	
 10895                           l3742:	
 10896  13D7                     ;main.c: 76:     dateDisplayer[6] = year % 10 + 48;
 10897                           	movlw	0Ah
 10898  13D7  300A               	movwf	(___awdiv@divisor)
 10899  13D8  00F0               	movlw	0
 10900  13D9  3000               	movwf	((___awdiv@divisor))+1
 10901  13DA  00F1               	bcf	status, 5	;RP0=0, select bank0
 10902  13DB  1283               	bcf	status, 6	;RP1=0, select bank0
 10903  13DC  1303               	movf	(_timeSecs+1),w
 10904  13DD  0868               	movwf	(___awdiv@dividend+1)
 10905  13DE  00F3               	movf	(_timeSecs),w
 10906  13DF  0867               	movwf	(___awdiv@dividend)
 10907  13E0  00F2               	fcall	___awdiv
 10908  13E1  160A  158A  271C  160A  118A  	movf	(1+(?___awdiv)),w
 10909  13E6  0871               	bcf	status, 5	;RP0=0, select bank0
 10910  13E7  1283               	bcf	status, 6	;RP1=0, select bank0
 10911  13E8  1303               	movwf	(_timeSecs+1)
 10912  13E9  00E8               	movf	(0+(?___awdiv)),w
 10913  13EA  0870               	movwf	(_timeSecs)
 10914  13EB  00E7               	line	77
 10915                           	
 10916                           l3744:	
 10917  13EC                     ;main.c: 77:     LCD_SendString(dateDisplayer);
 10918                           	movlw	0Ah
 10919  13EC  300A               	movwf	(___awmod@divisor)
 10920  13ED  00F0               	movlw	0
 10921  13EE  3000               	movwf	((___awmod@divisor))+1
 10922  13EF  00F1               	movf	(_timeSecs+1),w
 10923  13F0  0868               	movwf	(___awmod@dividend+1)
 10924  13F1  00F3               	movf	(_timeSecs),w
 10925  13F2  0867               	movwf	(___awmod@dividend)
 10926  13F3  00F2               	fcall	___awmod
 10927  13F4  160A  158A  26B9  160A  118A  	movf	(0+(?___awmod)),w
 10928  13F9  0870               	addlw	030h
 10929  13FA  3E30               	movwf	(??_DisplayTime+0)+0
 10930  13FB  00FC               	movf	(??_DisplayTime+0)+0,w
 10931  13FC  087C               	bsf	status, 5	;RP0=1, select bank3
 10932  13FD  1683               	bsf	status, 6	;RP1=1, select bank3
 10933  13FE  1703               	movwf	0+(_timeDisplayer)^0180h+06h
 10934  13FF  00CF               	line	79
 10935                           	
 10936                           l3746:	
 10937  1400                     ;main.c: 79: 
 10938                           	movlw	(low(_timeDisplayer|((0x1)<<8))&0ffh)
 10939  1400  30C9               	movwf	(LCD_SendString@string)
 10940  1401  00F1               	movlw	(0x1)
 10941  1402  3001               	movwf	(LCD_SendString@string+1)
 10942  1403  00F2               	fcall	_LCD_SendString
 10943  1404  160A  158A  2466  160A  118A  	line	80
 10944                           	
 10945                           l113:	
 10946  1409                     	return
 10947  1409  0008               	opt stack 0
 10948                           GLOBAL	__end_of_DisplayTime
 10949                           	__end_of_DisplayTime:
 10950  140A                     	signat	_DisplayTime,89
 10951                           	global	_RealTimeClock_get_seconds
 10952                           
 10953 ;; *************** function _RealTimeClock_get_seconds *****************
 10954 ;; Defined at:
 10955 ;;		line 88 in file "realtimeclock.c"
 10956 ;; Parameters:    Size  Location     Type
 10957 ;;		None
 10958 ;; Auto vars:     Size  Location     Type
 10959 ;;  c               1   11[COMMON] unsigned char 
 10960 ;; Return value:  Size  Location     Type
 10961 ;;                  2    5[BANK0 ] int 
 10962 ;; Registers used:
 10963 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10964 ;; Tracked objects:
 10965 ;;		On entry : 0/0
 10966 ;;		On exit  : 0/0
 10967 ;;		Unchanged: 0/0
 10968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10969 ;;      Params:         0       2       0       0       0
 10970 ;;      Locals:         1       0       0       0       0
 10971 ;;      Temps:          1       0       0       0       0
 10972 ;;      Totals:         2       2       0       0       0
 10973 ;;Total ram usage:        4 bytes
 10974 ;; Hardware stack levels used:    1
 10975 ;; Hardware stack levels required when called:    2
 10976 ;; This function calls:
 10977 ;;		_RealTimeClock_read_byte
 10978 ;;		_RealTimeClock_write_byte
 10979 ;;		___hex_to_int
 10980 ;; This function is called by:
 10981 ;;		_DisplayTime
 10982 ;;		_SetTime
 10983 ;; This function uses a non-reentrant model
 10984 ;;
 10985                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
 10986                           	file	"realtimeclock.c"
 10987                           	line	88
 10988                           global __ptext20
 10989                           __ptext20:	;psect for function _RealTimeClock_get_seconds
 10990  1A45                     psect	text20
 10991                           	file	"realtimeclock.c"
 10992                           	line	88
 10993                           	global	__size_of_RealTimeClock_get_seconds
 10994                           	__size_of_RealTimeClock_get_seconds	equ	__end_of_RealTimeClock_get_seconds-_RealTimeClo
                                 ck_get_seconds
 10995  0022                     	
 10996                           _RealTimeClock_get_seconds:	
 10997  1A45                     ;incstack = 0
 10998                           	opt	stack 3
 10999                           ; Regs used in _RealTimeClock_get_seconds: [wreg+status,2+status,0+btemp+1+pclath+cstack
                                 ]
 11000                           	line	89
 11001                           	
 11002                           l3448:	
 11003  1A45                     ;realtimeclock.c: 89:     RB5 = 1;
 11004                           	bcf	status, 5	;RP0=0, select bank0
 11005  1A45  1283               	bcf	status, 6	;RP1=0, select bank0
 11006  1A46  1303               	bsf	(53/8),(53)&7	;volatile
 11007  1A47  1686               	line	90
 11008                           	
 11009                           l3450:	
 11010  1A48                     ;realtimeclock.c: 90:     RealTimeClock_write_byte(0x81);
 11011                           	movlw	low(081h)
 11012  1A48  3081               	fcall	_RealTimeClock_write_byte
 11013  1A49  160A  158A  2328  160A  158A  	line	91
 11014                           ;realtimeclock.c: 91:     unsigned char c = RealTimeClock_read_byte();
 11015                           	fcall	_RealTimeClock_read_byte
 11016  1A4E  160A  158A  2534  160A  158A  	movwf	(??_RealTimeClock_get_seconds+0)+0
 11017  1A53  00FA               	movf	(??_RealTimeClock_get_seconds+0)+0,w
 11018  1A54  087A               	movwf	(RealTimeClock_get_seconds@c)
 11019  1A55  00FB               	line	92
 11020                           	
 11021                           l3452:	
 11022  1A56                     ;realtimeclock.c: 92:     RB5 = 0;
 11023                           	bcf	status, 5	;RP0=0, select bank0
 11024  1A56  1283               	bcf	status, 6	;RP1=0, select bank0
 11025  1A57  1303               	bcf	(53/8),(53)&7	;volatile
 11026  1A58  1286               	line	93
 11027                           	
 11028                           l3454:	
 11029  1A59                     ;realtimeclock.c: 93:     return __hex_to_int(c);
 11030                           	movf	(RealTimeClock_get_seconds@c),w
 11031  1A59  087B               	fcall	___hex_to_int
 11032  1A5A  160A  158A  25C6  160A  158A  	movf	(1+(?___hex_to_int)),w
 11033  1A5F  0878               	bcf	status, 5	;RP0=0, select bank0
 11034  1A60  1283               	bcf	status, 6	;RP1=0, select bank0
 11035  1A61  1303               	movwf	(?_RealTimeClock_get_seconds+1)
 11036  1A62  00A6               	movf	(0+(?___hex_to_int)),w
 11037  1A63  0877               	movwf	(?_RealTimeClock_get_seconds)
 11038  1A64  00A5               	goto	l431
 11039  1A65  2A66               	
 11040                           l3456:	
 11041  1A66                     	line	94
 11042                           	
 11043                           l431:	
 11044  1A66                     	return
 11045  1A66  0008               	opt stack 0
 11046                           GLOBAL	__end_of_RealTimeClock_get_seconds
 11047                           	__end_of_RealTimeClock_get_seconds:
 11048  1A67                     	signat	_RealTimeClock_get_seconds,90
 11049                           	global	_DisplayTemp
 11050                           
 11051 ;; *************** function _DisplayTemp *****************
 11052 ;; Defined at:
 11053 ;;		line 142 in file "main.c"
 11054 ;; Parameters:    Size  Location     Type
 11055 ;;  tempBuffer      1    wreg     PTR unsigned char 
 11056 ;;		 -> tempBuffer(6), 
 11057 ;; Auto vars:     Size  Location     Type
 11058 ;;  tempBuffer      1    7[BANK0 ] PTR unsigned char 
 11059 ;;		 -> tempBuffer(6), 
 11060 ;; Return value:  Size  Location     Type
 11061 ;;                  1    wreg      void 
 11062 ;; Registers used:
 11063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11064 ;; Tracked objects:
 11065 ;;		On entry : 0/0
 11066 ;;		On exit  : 0/0
 11067 ;;		Unchanged: 0/0
 11068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11069 ;;      Params:         0       0       0       0       0
 11070 ;;      Locals:         0       1       0       0       0
 11071 ;;      Temps:          0       0       0       0       0
 11072 ;;      Totals:         0       1       0       0       0
 11073 ;;Total ram usage:        1 bytes
 11074 ;; Hardware stack levels used:    1
 11075 ;; Hardware stack levels required when called:    3
 11076 ;; This function calls:
 11077 ;;		_Get_Temp
 11078 ;;		_LCD_Busy
 11079 ;;		_LCD_SendData
 11080 ;;		_LCD_SendString
 11081 ;; This function is called by:
 11082 ;;		_MainScreen
 11083 ;; This function uses a non-reentrant model
 11084 ;;
 11085                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
 11086                           	file	"main.c"
 11087                           	line	142
 11088                           global __ptext21
 11089                           __ptext21:	;psect for function _DisplayTemp
 11090  1A67                     psect	text21
 11091                           	file	"main.c"
 11092                           	line	142
 11093                           	global	__size_of_DisplayTemp
 11094                           	__size_of_DisplayTemp	equ	__end_of_DisplayTemp-_DisplayTemp
 11095  0026                     	
 11096                           _DisplayTemp:	
 11097  1A67                     ;incstack = 0
 11098                           	opt	stack 1
 11099                           ; Regs used in _DisplayTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11100                           ;DisplayTemp@tempBuffer stored from wreg
 11101                           	bcf	status, 5	;RP0=0, select bank0
 11102  1A67  1283               	bcf	status, 6	;RP1=0, select bank0
 11103  1A68  1303               	movwf	(DisplayTemp@tempBuffer)
 11104  1A69  00A7               	line	145
 11105                           	
 11106                           l3808:	
 11107  1A6A                     ;main.c: 142: ;main.c: 143:     LCD_SecondLine();;main.c: 145: 
 11108                           	movf	(DisplayTemp@tempBuffer),w
 11109  1A6A  0827               	fcall	_Get_Temp
 11110  1A6B  120A  158A  20E1  160A  158A  	line	147
 11111                           ;main.c: 147: 
 11112                           	bcf	status, 5	;RP0=0, select bank0
 11113  1A70  1283               	bcf	status, 6	;RP1=0, select bank0
 11114  1A71  1303               	movf	(DisplayTemp@tempBuffer),w
 11115  1A72  0827               	movwf	(LCD_SendString@string)
 11116  1A73  00F1               	movlw	(0x0)
 11117  1A74  3000               	movwf	(LCD_SendString@string+1)
 11118  1A75  00F2               	fcall	_LCD_SendString
 11119  1A76  160A  158A  2466  160A  158A  	line	149
 11120                           	
 11121                           l3810:	
 11122  1A7B                     ;main.c: 149: 
 11123                           	movlw	low(0DFh)
 11124  1A7B  30DF               	fcall	_LCD_SendData
 11125  1A7C  120A  158A  20D2  160A  158A  	line	150
 11126                           	
 11127                           l3812:	
 11128  1A81                     ;main.c: 150: 
 11129                           	fcall	_LCD_Busy
 11130  1A81  160A  158A  2050  160A  158A  	line	152
 11131                           	
 11132                           l3814:	
 11133  1A86                     ;main.c: 152: 
 11134                           	movlw	low(043h)
 11135  1A86  3043               	fcall	_LCD_SendData
 11136  1A87  120A  158A  20D2  160A  158A  	line	153
 11137                           	
 11138                           l131:	
 11139  1A8C                     	return
 11140  1A8C  0008               	opt stack 0
 11141                           GLOBAL	__end_of_DisplayTemp
 11142                           	__end_of_DisplayTemp:
 11143  1A8D                     	signat	_DisplayTemp,4217
 11144                           	global	_Get_Temp
 11145                           
 11146 ;; *************** function _Get_Temp *****************
 11147 ;; Defined at:
 11148 ;;		line 129 in file "Thermometer.c"
 11149 ;; Parameters:    Size  Location     Type
 11150 ;;  buffer          1    wreg     PTR unsigned char 
 11151 ;;		 -> tempBuffer(6), 
 11152 ;; Auto vars:     Size  Location     Type
 11153 ;;  buffer          1    4[BANK0 ] PTR unsigned char 
 11154 ;;		 -> tempBuffer(6), 
 11155 ;;  i               2    5[BANK0 ] int 
 11156 ;; Return value:  Size  Location     Type
 11157 ;;                  1    wreg      void 
 11158 ;; Registers used:
 11159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11160 ;; Tracked objects:
 11161 ;;		On entry : 0/0
 11162 ;;		On exit  : 0/0
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11165 ;;      Params:         0       0       0       0       0
 11166 ;;      Locals:         0       3       0       0       0
 11167 ;;      Temps:          0       4       0       0       0
 11168 ;;      Totals:         0       7       0       0       0
 11169 ;;Total ram usage:        7 bytes
 11170 ;; Hardware stack levels used:    1
 11171 ;; Hardware stack levels required when called:    2
 11172 ;; This function calls:
 11173 ;;		_Delay
 11174 ;;		_Read_Byte
 11175 ;;		_Reset
 11176 ;;		_Write_Byte
 11177 ;;		___awdiv
 11178 ;;		___awmod
 11179 ;;		___lwdiv
 11180 ;;		___lwmod
 11181 ;; This function is called by:
 11182 ;;		_DisplayTemp
 11183 ;;		_HeatingControlOff
 11184 ;;		_SoundAlarm
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
 11188                           	file	"Thermometer.c"
 11189                           	line	129
 11190                           global __ptext22
 11191                           __ptext22:	;psect for function _Get_Temp
 11192  08E1                     psect	text22
 11193                           	file	"Thermometer.c"
 11194                           	line	129
 11195                           	global	__size_of_Get_Temp
 11196                           	__size_of_Get_Temp	equ	__end_of_Get_Temp-_Get_Temp
 11197  01AA                     	
 11198                           _Get_Temp:	
 11199  08E1                     ;incstack = 0
 11200                           	opt	stack 1
 11201                           ; Regs used in _Get_Temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11202                           ;Get_Temp@buffer stored from wreg
 11203                           	bcf	status, 5	;RP0=0, select bank0
 11204  08E1  1283               	bcf	status, 6	;RP1=0, select bank0
 11205  08E2  1303               	movwf	(Get_Temp@buffer)
 11206  08E3  00A4               	line	132
 11207                           	
 11208                           l3526:	
 11209  08E4                     ;Thermometer.c: 129: void Get_Temp(char* buffer);Thermometer.c: 130: {;Thermometer.c: 13
                                 1: int i;;Thermometer.c: 132: TRISA0 =1;
 11210                           	bsf	status, 5	;RP0=1, select bank1
 11211  08E4  1683               	bcf	status, 6	;RP1=0, select bank1
 11212  08E5  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
 11213  08E6  1405               	line	134
 11214                           	
 11215                           l3528:	
 11216  08E7                     ;Thermometer.c: 134: Reset();
 11217                           	fcall	_Reset
 11218  08E7  160A  158A  2664  120A  158A  	line	136
 11219                           	
 11220                           l3530:	
 11221  08EC                     ;Thermometer.c: 136: Write_Byte(0XCC);
 11222                           	movlw	low(0CCh)
 11223  08EC  30CC               	fcall	_Write_Byte
 11224  08ED  160A  158A  24AA  120A  158A  	line	138
 11225                           	
 11226                           l3532:	
 11227  08F2                     ;Thermometer.c: 138: Write_Byte(0X44);
 11228                           	movlw	low(044h)
 11229  08F2  3044               	fcall	_Write_Byte
 11230  08F3  160A  158A  24AA  120A  158A  	line	140
 11231                           	
 11232                           l3534:	
 11233  08F8                     ;Thermometer.c: 140: Temp[0] = numberTable[tenbit];
 11234                           	bsf	status, 5	;RP0=1, select bank1
 11235  08F8  1683               	bcf	status, 6	;RP1=0, select bank1
 11236  08F9  1303               	movf	(_tenbit)^080h,w
 11237  08FA  0839               	addlw	low(_numberTable|((0x1)<<8))&0ffh
 11238  08FB  3EA0               	movwf	fsr0
 11239  08FC  0084               	bsf	status, 7	;select IRP bank3
 11240  08FD  1783               	movf	indf,w
 11241  08FE  0800               	bcf	status, 5	;RP0=0, select bank0
 11242  08FF  1283               	bcf	status, 6	;RP1=0, select bank0
 11243  0900  1303               	movwf	(??_Get_Temp+0)+0
 11244  0901  00A0               	movf	(??_Get_Temp+0)+0,w
 11245  0902  0820               	bsf	status, 5	;RP0=1, select bank1
 11246  0903  1683               	bcf	status, 6	;RP1=0, select bank1
 11247  0904  1303               	movwf	(_Temp)^080h
 11248  0905  00A6               	line	141
 11249                           	
 11250                           l3536:	
 11251  0906                     ;Thermometer.c: 141: Temp[1] = numberTable[intent];
 11252                           	movf	(_intent)^080h,w
 11253  0906  0838               	addlw	low(_numberTable|((0x1)<<8))&0ffh
 11254  0907  3EA0               	movwf	fsr0
 11255  0908  0084               	movf	indf,w
 11256  0909  0800               	bcf	status, 5	;RP0=0, select bank0
 11257  090A  1283               	bcf	status, 6	;RP1=0, select bank0
 11258  090B  1303               	movwf	(??_Get_Temp+0)+0
 11259  090C  00A0               	movf	(??_Get_Temp+0)+0,w
 11260  090D  0820               	bsf	status, 5	;RP0=1, select bank1
 11261  090E  1683               	bcf	status, 6	;RP1=0, select bank1
 11262  090F  1303               	movwf	0+(_Temp)^080h+01h
 11263  0910  00A7               	line	142
 11264                           	
 11265                           l3538:	
 11266  0911                     ;Thermometer.c: 142: Temp[2] = '.';
 11267                           	movlw	low(02Eh)
 11268  0911  302E               	bcf	status, 5	;RP0=0, select bank0
 11269  0912  1283               	bcf	status, 6	;RP1=0, select bank0
 11270  0913  1303               	movwf	(??_Get_Temp+0)+0
 11271  0914  00A0               	movf	(??_Get_Temp+0)+0,w
 11272  0915  0820               	bsf	status, 5	;RP0=1, select bank1
 11273  0916  1683               	bcf	status, 6	;RP1=0, select bank1
 11274  0917  1303               	movwf	0+(_Temp)^080h+02h
 11275  0918  00A8               	line	143
 11276                           	
 11277                           l3540:	
 11278  0919                     ;Thermometer.c: 143: Temp[3] = numberTable[tenthbit];
 11279                           	movf	(_tenthbit)^080h,w
 11280  0919  0837               	addlw	low(_numberTable|((0x1)<<8))&0ffh
 11281  091A  3EA0               	movwf	fsr0
 11282  091B  0084               	movf	indf,w
 11283  091C  0800               	bcf	status, 5	;RP0=0, select bank0
 11284  091D  1283               	bcf	status, 6	;RP1=0, select bank0
 11285  091E  1303               	movwf	(??_Get_Temp+0)+0
 11286  091F  00A0               	movf	(??_Get_Temp+0)+0,w
 11287  0920  0820               	bsf	status, 5	;RP0=1, select bank1
 11288  0921  1683               	bcf	status, 6	;RP1=0, select bank1
 11289  0922  1303               	movwf	0+(_Temp)^080h+03h
 11290  0923  00A9               	line	144
 11291                           	
 11292                           l3542:	
 11293  0924                     ;Thermometer.c: 144: Temp[4] = numberTable[hundredthbit];
 11294                           	movf	(_hundredthbit)^080h,w
 11295  0924  0836               	addlw	low(_numberTable|((0x1)<<8))&0ffh
 11296  0925  3EA0               	movwf	fsr0
 11297  0926  0084               	movf	indf,w
 11298  0927  0800               	bcf	status, 5	;RP0=0, select bank0
 11299  0928  1283               	bcf	status, 6	;RP1=0, select bank0
 11300  0929  1303               	movwf	(??_Get_Temp+0)+0
 11301  092A  00A0               	movf	(??_Get_Temp+0)+0,w
 11302  092B  0820               	bsf	status, 5	;RP0=1, select bank1
 11303  092C  1683               	bcf	status, 6	;RP1=0, select bank1
 11304  092D  1303               	movwf	0+(_Temp)^080h+04h
 11305  092E  00AA               	line	146
 11306                           	
 11307                           l3544:	
 11308  092F                     ;Thermometer.c: 146: for(i = 0; i < 5; i++)
 11309                           	bcf	status, 5	;RP0=0, select bank0
 11310  092F  1283               	bcf	status, 6	;RP1=0, select bank0
 11311  0930  1303               	clrf	(Get_Temp@i)
 11312  0931  01A5               	clrf	(Get_Temp@i+1)
 11313  0932  01A6               	
 11314                           l3546:	
 11315  0933                     	movf	(Get_Temp@i+1),w
 11316  0933  0826               	xorlw	80h
 11317  0934  3A80               	movwf	btemp+1
 11318  0935  00FF               	movlw	(0)^80h
 11319  0936  3080               	subwf	btemp+1,w
 11320  0937  027F               	skipz
 11321  0938  1D03               	goto	u2955
 11322  0939  293C               	movlw	05h
 11323  093A  3005               	subwf	(Get_Temp@i),w
 11324  093B  0225               u2955:
 11325  093C                     
 11326                           	skipc
 11327  093C  1C03               	goto	u2951
 11328  093D  293F               	goto	u2950
 11329  093E  2940               u2951:
 11330  093F                     	goto	l3550
 11331  093F  2942               u2950:
 11332  0940                     	goto	l3556
 11333  0940  2965               	
 11334                           l3548:	
 11335  0941                     	goto	l3556
 11336  0941  2965               	
 11337                           l708:	
 11338  0942                     	line	148
 11339                           	
 11340                           l3550:	
 11341  0942                     ;Thermometer.c: 147: {;Thermometer.c: 148:     buffer[i] = Temp[i];
 11342                           	bcf	status, 5	;RP0=0, select bank0
 11343  0942  1283               	bcf	status, 6	;RP1=0, select bank0
 11344  0943  1303               	movf	(Get_Temp@i),w
 11345  0944  0825               	addlw	low(_Temp|((0x0)<<8))&0ffh
 11346  0945  3EA6               	movwf	fsr0
 11347  0946  0084               	bcf	status, 7	;select IRP bank1
 11348  0947  1383               	movf	indf,w
 11349  0948  0800               	movwf	(??_Get_Temp+0)+0
 11350  0949  00A0               	movf	(Get_Temp@i),w
 11351  094A  0825               	addwf	(Get_Temp@buffer),w
 11352  094B  0724               	movwf	(??_Get_Temp+1)+0
 11353  094C  00A1               	movf	0+(??_Get_Temp+1)+0,w
 11354  094D  0821               	movwf	fsr0
 11355  094E  0084               	movf	(??_Get_Temp+0)+0,w
 11356  094F  0820               	movwf	indf
 11357  0950  0080               	line	149
 11358                           	
 11359                           l3552:	
 11360  0951                     ;Thermometer.c: 149: }
 11361                           	movlw	01h
 11362  0951  3001               	addwf	(Get_Temp@i),f
 11363  0952  07A5               	skipnc
 11364  0953  1803               	incf	(Get_Temp@i+1),f
 11365  0954  0AA6               	movlw	0
 11366  0955  3000               	addwf	(Get_Temp@i+1),f
 11367  0956  07A6               	
 11368                           l3554:	
 11369  0957                     	movf	(Get_Temp@i+1),w
 11370  0957  0826               	xorlw	80h
 11371  0958  3A80               	movwf	btemp+1
 11372  0959  00FF               	movlw	(0)^80h
 11373  095A  3080               	subwf	btemp+1,w
 11374  095B  027F               	skipz
 11375  095C  1D03               	goto	u2965
 11376  095D  2960               	movlw	05h
 11377  095E  3005               	subwf	(Get_Temp@i),w
 11378  095F  0225               u2965:
 11379  0960                     
 11380                           	skipc
 11381  0960  1C03               	goto	u2961
 11382  0961  2963               	goto	u2960
 11383  0962  2964               u2961:
 11384  0963                     	goto	l3550
 11385  0963  2942               u2960:
 11386  0964                     	goto	l3556
 11387  0964  2965               	
 11388                           l709:	
 11389  0965                     	line	150
 11390                           	
 11391                           l3556:	
 11392  0965                     ;Thermometer.c: 150: Delay(10,70);
 11393                           	movlw	low(046h)
 11394  0965  3046               	bcf	status, 5	;RP0=0, select bank0
 11395  0966  1283               	bcf	status, 6	;RP1=0, select bank0
 11396  0967  1303               	movwf	(??_Get_Temp+0)+0
 11397  0968  00A0               	movf	(??_Get_Temp+0)+0,w
 11398  0969  0820               	movwf	(Delay@y)
 11399  096A  00F0               	movlw	low(0Ah)
 11400  096B  300A               	fcall	_Delay
 11401  096C  160A  158A  2065  120A  158A  	line	152
 11402                           	
 11403                           l3558:	
 11404  0971                     ;Thermometer.c: 152: Reset();
 11405                           	fcall	_Reset
 11406  0971  160A  158A  2664  120A  158A  	line	154
 11407                           	
 11408                           l3560:	
 11409  0976                     ;Thermometer.c: 154: Write_Byte(0XCC);
 11410                           	movlw	low(0CCh)
 11411  0976  30CC               	fcall	_Write_Byte
 11412  0977  160A  158A  24AA  120A  158A  	line	156
 11413                           	
 11414                           l3562:	
 11415  097C                     ;Thermometer.c: 156: Write_Byte(0XBE);
 11416                           	movlw	low(0BEh)
 11417  097C  30BE               	fcall	_Write_Byte
 11418  097D  160A  158A  24AA  120A  158A  	line	158
 11419                           	
 11420                           l3564:	
 11421  0982                     ;Thermometer.c: 158: TLB = Read_Byte();
 11422                           	fcall	_Read_Byte
 11423  0982  160A  158A  24EE  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 11424  0987  1283               	bcf	status, 6	;RP1=0, select bank0
 11425  0988  1303               	movwf	(??_Get_Temp+0)+0
 11426  0989  00A0               	movf	(??_Get_Temp+0)+0,w
 11427  098A  0820               	bsf	status, 5	;RP0=1, select bank1
 11428  098B  1683               	bcf	status, 6	;RP1=0, select bank1
 11429  098C  1303               	movwf	(_TLB)^080h
 11430  098D  00BC               	line	160
 11431                           	
 11432                           l3566:	
 11433  098E                     ;Thermometer.c: 160: THB = Read_Byte();
 11434                           	fcall	_Read_Byte
 11435  098E  160A  158A  24EE  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 11436  0993  1283               	bcf	status, 6	;RP1=0, select bank0
 11437  0994  1303               	movwf	(??_Get_Temp+0)+0
 11438  0995  00A0               	movf	(??_Get_Temp+0)+0,w
 11439  0996  0820               	bsf	status, 5	;RP0=1, select bank1
 11440  0997  1683               	bcf	status, 6	;RP1=0, select bank1
 11441  0998  1303               	movwf	(_THB)^080h
 11442  0999  00BB               	line	162
 11443                           	
 11444                           l3568:	
 11445  099A                     ;Thermometer.c: 162: TRISA0 =1;
 11446                           	bsf	(1064/8)^080h,(1064)&7	;volatile
 11447  099A  1405               	line	164
 11448                           	
 11449                           l3570:	
 11450  099B                     ;Thermometer.c: 164: TempInt=(TLB>>4)|((THB<<4)&(0X3f));
 11451                           	movf	(_THB)^080h,w
 11452  099B  083B               	bcf	status, 5	;RP0=0, select bank0
 11453  099C  1283               	bcf	status, 6	;RP1=0, select bank0
 11454  099D  1303               	movwf	(??_Get_Temp+0)+0
 11455  099E  00A0               	movlw	04h
 11456  099F  3004               u2975:
 11457  09A0                     	clrc
 11458  09A0  1003               	rlf	(??_Get_Temp+0)+0,f
 11459  09A1  0DA0               	addlw	-1
 11460  09A2  3EFF               	skipz
 11461  09A3  1D03               	goto	u2975
 11462  09A4  29A0               	movlw	low(03Fh)
 11463  09A5  303F               	andwf	0+(??_Get_Temp+0)+0,w
 11464  09A6  0520               	movwf	(??_Get_Temp+1)+0
 11465  09A7  00A1               	bsf	status, 5	;RP0=1, select bank1
 11466  09A8  1683               	bcf	status, 6	;RP1=0, select bank1
 11467  09A9  1303               	movf	(_TLB)^080h,w
 11468  09AA  083C               	bcf	status, 5	;RP0=0, select bank0
 11469  09AB  1283               	bcf	status, 6	;RP1=0, select bank0
 11470  09AC  1303               	movwf	(??_Get_Temp+2)+0
 11471  09AD  00A2               	movlw	04h
 11472  09AE  3004               u2985:
 11473  09AF                     	clrc
 11474  09AF  1003               	rrf	(??_Get_Temp+2)+0,f
 11475  09B0  0CA2               	addlw	-1
 11476  09B1  3EFF               	skipz
 11477  09B2  1D03               	goto	u2985
 11478  09B3  29AF               	movf	0+(??_Get_Temp+2)+0,w
 11479  09B4  0822               	iorwf	0+(??_Get_Temp+1)+0,w
 11480  09B5  0421               	movwf	(??_Get_Temp+3)+0
 11481  09B6  00A3               	movf	(??_Get_Temp+3)+0,w
 11482  09B7  0823               	movwf	(_TempInt)
 11483  09B8  00EF               	line	166
 11484                           	
 11485                           l3572:	
 11486  09B9                     ;Thermometer.c: 166: TempDec=TLB<<4;
 11487                           	bsf	status, 5	;RP0=1, select bank1
 11488  09B9  1683               	bcf	status, 6	;RP1=0, select bank1
 11489  09BA  1303               	movf	(_TLB)^080h,w
 11490  09BB  083C               	bcf	status, 5	;RP0=0, select bank0
 11491  09BC  1283               	bcf	status, 6	;RP1=0, select bank0
 11492  09BD  1303               	movwf	(??_Get_Temp+0)+0
 11493  09BE  00A0               	movlw	(04h)-1
 11494  09BF  3003               u2995:
 11495  09C0                     	clrc
 11496  09C0  1003               	rlf	(??_Get_Temp+0)+0,f
 11497  09C1  0DA0               	addlw	-1
 11498  09C2  3EFF               	skipz
 11499  09C3  1D03               	goto	u2995
 11500  09C4  29C0               	clrc
 11501  09C5  1003               	rlf	(??_Get_Temp+0)+0,w
 11502  09C6  0D20               	movwf	(??_Get_Temp+1)+0
 11503  09C7  00A1               	movf	(??_Get_Temp+1)+0,w
 11504  09C8  0821               	bsf	status, 5	;RP0=1, select bank1
 11505  09C9  1683               	bcf	status, 6	;RP1=0, select bank1
 11506  09CA  1303               	movwf	(_TempDec)^080h
 11507  09CB  00BA               	line	168
 11508                           	
 11509                           l3574:	
 11510  09CC                     ;Thermometer.c: 168: if(TempInt>100) TempInt = TempInt/100;
 11511                           	movlw	low(065h)
 11512  09CC  3065               	bcf	status, 5	;RP0=0, select bank0
 11513  09CD  1283               	bcf	status, 6	;RP1=0, select bank0
 11514  09CE  1303               	subwf	(_TempInt),w
 11515  09CF  026F               	skipc
 11516  09D0  1C03               	goto	u3001
 11517  09D1  29D3               	goto	u3000
 11518  09D2  29D4               u3001:
 11519  09D3                     	goto	l710
 11520  09D3  29EA               u3000:
 11521  09D4                     	
 11522                           l3576:	
 11523  09D4                     	movlw	064h
 11524  09D4  3064               	movwf	(___awdiv@divisor)
 11525  09D5  00F0               	movlw	0
 11526  09D6  3000               	movwf	((___awdiv@divisor))+1
 11527  09D7  00F1               	movf	(_TempInt),w
 11528  09D8  086F               	movwf	(??_Get_Temp+0)+0
 11529  09D9  00A0               	clrf	(??_Get_Temp+0)+0+1
 11530  09DA  01A1               	movf	0+(??_Get_Temp+0)+0,w
 11531  09DB  0820               	movwf	(___awdiv@dividend)
 11532  09DC  00F2               	movf	1+(??_Get_Temp+0)+0,w
 11533  09DD  0821               	movwf	(___awdiv@dividend+1)
 11534  09DE  00F3               	fcall	___awdiv
 11535  09DF  160A  158A  271C  120A  158A  	movf	(0+(?___awdiv)),w
 11536  09E4  0870               	bcf	status, 5	;RP0=0, select bank0
 11537  09E5  1283               	bcf	status, 6	;RP1=0, select bank0
 11538  09E6  1303               	movwf	(??_Get_Temp+2)+0
 11539  09E7  00A2               	movf	(??_Get_Temp+2)+0,w
 11540  09E8  0822               	movwf	(_TempInt)
 11541  09E9  00EF               	
 11542                           l710:	
 11543  09EA                     	line	170
 11544                           ;Thermometer.c: 170: intent=TempInt%10;
 11545                           	movlw	0Ah
 11546  09EA  300A               	movwf	(___awmod@divisor)
 11547  09EB  00F0               	movlw	0
 11548  09EC  3000               	movwf	((___awmod@divisor))+1
 11549  09ED  00F1               	movf	(_TempInt),w
 11550  09EE  086F               	movwf	(??_Get_Temp+0)+0
 11551  09EF  00A0               	clrf	(??_Get_Temp+0)+0+1
 11552  09F0  01A1               	movf	0+(??_Get_Temp+0)+0,w
 11553  09F1  0820               	movwf	(___awmod@dividend)
 11554  09F2  00F2               	movf	1+(??_Get_Temp+0)+0,w
 11555  09F3  0821               	movwf	(___awmod@dividend+1)
 11556  09F4  00F3               	fcall	___awmod
 11557  09F5  160A  158A  26B9  120A  158A  	movf	(0+(?___awmod)),w
 11558  09FA  0870               	bcf	status, 5	;RP0=0, select bank0
 11559  09FB  1283               	bcf	status, 6	;RP1=0, select bank0
 11560  09FC  1303               	movwf	(??_Get_Temp+2)+0
 11561  09FD  00A2               	movf	(??_Get_Temp+2)+0,w
 11562  09FE  0822               	bsf	status, 5	;RP0=1, select bank1
 11563  09FF  1683               	bcf	status, 6	;RP1=0, select bank1
 11564  0A00  1303               	movwf	(_intent)^080h
 11565  0A01  00B8               	line	172
 11566                           ;Thermometer.c: 172: tenbit=TempInt/10;
 11567                           	movlw	0Ah
 11568  0A02  300A               	movwf	(___awdiv@divisor)
 11569  0A03  00F0               	movlw	0
 11570  0A04  3000               	movwf	((___awdiv@divisor))+1
 11571  0A05  00F1               	bcf	status, 5	;RP0=0, select bank0
 11572  0A06  1283               	bcf	status, 6	;RP1=0, select bank0
 11573  0A07  1303               	movf	(_TempInt),w
 11574  0A08  086F               	movwf	(??_Get_Temp+0)+0
 11575  0A09  00A0               	clrf	(??_Get_Temp+0)+0+1
 11576  0A0A  01A1               	movf	0+(??_Get_Temp+0)+0,w
 11577  0A0B  0820               	movwf	(___awdiv@dividend)
 11578  0A0C  00F2               	movf	1+(??_Get_Temp+0)+0,w
 11579  0A0D  0821               	movwf	(___awdiv@dividend+1)
 11580  0A0E  00F3               	fcall	___awdiv
 11581  0A0F  160A  158A  271C  120A  158A  	movf	(0+(?___awdiv)),w
 11582  0A14  0870               	bcf	status, 5	;RP0=0, select bank0
 11583  0A15  1283               	bcf	status, 6	;RP1=0, select bank0
 11584  0A16  1303               	movwf	(??_Get_Temp+2)+0
 11585  0A17  00A2               	movf	(??_Get_Temp+2)+0,w
 11586  0A18  0822               	bsf	status, 5	;RP0=1, select bank1
 11587  0A19  1683               	bcf	status, 6	;RP1=0, select bank1
 11588  0A1A  1303               	movwf	(_tenbit)^080h
 11589  0A1B  00B9               	line	174
 11590                           	
 11591                           l3578:	
 11592  0A1C                     ;Thermometer.c: 174: TempBCD=0;
 11593                           	clrf	(_TempBCD)^080h
 11594  0A1C  01AB               	clrf	(_TempBCD+1)^080h
 11595  0A1D  01AC               	line	176
 11596                           	
 11597                           l3580:	
 11598  0A1E                     ;Thermometer.c: 176: if (TempDec & 0x80) TempBCD=TempBCD+5000;
 11599                           	btfss	(_TempDec)^080h,(7)&7
 11600  0A1E  1FBA               	goto	u3011
 11601  0A1F  2A21               	goto	u3010
 11602  0A20  2A22               u3011:
 11603  0A21                     	goto	l3584
 11604  0A21  2A2B               u3010:
 11605  0A22                     	
 11606                           l3582:	
 11607  0A22                     	movf	(_TempBCD)^080h,w
 11608  0A22  082B               	addlw	low(01388h)
 11609  0A23  3E88               	movwf	(_TempBCD)^080h
 11610  0A24  00AB               	movf	(_TempBCD+1)^080h,w
 11611  0A25  082C               	skipnc
 11612  0A26  1803               	addlw	1
 11613  0A27  3E01               	addlw	high(01388h)
 11614  0A28  3E13               	movwf	1+(_TempBCD)^080h
 11615  0A29  00AC               	goto	l3584
 11616  0A2A  2A2B               	
 11617                           l711:	
 11618  0A2B                     	line	177
 11619                           	
 11620                           l3584:	
 11621  0A2B                     ;Thermometer.c: 177: if (TempDec & 0x40) TempBCD=TempBCD+2500;
 11622                           	btfss	(_TempDec)^080h,(6)&7
 11623  0A2B  1F3A               	goto	u3021
 11624  0A2C  2A2E               	goto	u3020
 11625  0A2D  2A2F               u3021:
 11626  0A2E                     	goto	l3588
 11627  0A2E  2A38               u3020:
 11628  0A2F                     	
 11629                           l3586:	
 11630  0A2F                     	movf	(_TempBCD)^080h,w
 11631  0A2F  082B               	addlw	low(09C4h)
 11632  0A30  3EC4               	movwf	(_TempBCD)^080h
 11633  0A31  00AB               	movf	(_TempBCD+1)^080h,w
 11634  0A32  082C               	skipnc
 11635  0A33  1803               	addlw	1
 11636  0A34  3E01               	addlw	high(09C4h)
 11637  0A35  3E09               	movwf	1+(_TempBCD)^080h
 11638  0A36  00AC               	goto	l3588
 11639  0A37  2A38               	
 11640                           l712:	
 11641  0A38                     	line	178
 11642                           	
 11643                           l3588:	
 11644  0A38                     ;Thermometer.c: 178: if (TempDec & 0x20) TempBCD=TempBCD+1250;
 11645                           	btfss	(_TempDec)^080h,(5)&7
 11646  0A38  1EBA               	goto	u3031
 11647  0A39  2A3B               	goto	u3030
 11648  0A3A  2A3C               u3031:
 11649  0A3B                     	goto	l3592
 11650  0A3B  2A45               u3030:
 11651  0A3C                     	
 11652                           l3590:	
 11653  0A3C                     	movf	(_TempBCD)^080h,w
 11654  0A3C  082B               	addlw	low(04E2h)
 11655  0A3D  3EE2               	movwf	(_TempBCD)^080h
 11656  0A3E  00AB               	movf	(_TempBCD+1)^080h,w
 11657  0A3F  082C               	skipnc
 11658  0A40  1803               	addlw	1
 11659  0A41  3E01               	addlw	high(04E2h)
 11660  0A42  3E04               	movwf	1+(_TempBCD)^080h
 11661  0A43  00AC               	goto	l3592
 11662  0A44  2A45               	
 11663                           l713:	
 11664  0A45                     	line	179
 11665                           	
 11666                           l3592:	
 11667  0A45                     ;Thermometer.c: 179: if (TempDec & 0x10) TempBCD=TempBCD+625;
 11668                           	btfss	(_TempDec)^080h,(4)&7
 11669  0A45  1E3A               	goto	u3041
 11670  0A46  2A48               	goto	u3040
 11671  0A47  2A49               u3041:
 11672  0A48                     	goto	l3596
 11673  0A48  2A52               u3040:
 11674  0A49                     	
 11675                           l3594:	
 11676  0A49                     	movf	(_TempBCD)^080h,w
 11677  0A49  082B               	addlw	low(0271h)
 11678  0A4A  3E71               	movwf	(_TempBCD)^080h
 11679  0A4B  00AB               	movf	(_TempBCD+1)^080h,w
 11680  0A4C  082C               	skipnc
 11681  0A4D  1803               	addlw	1
 11682  0A4E  3E01               	addlw	high(0271h)
 11683  0A4F  3E02               	movwf	1+(_TempBCD)^080h
 11684  0A50  00AC               	goto	l3596
 11685  0A51  2A52               	
 11686                           l714:	
 11687  0A52                     	line	181
 11688                           	
 11689                           l3596:	
 11690  0A52                     ;Thermometer.c: 181: tenthbit=TempBCD/1000;
 11691                           	movlw	0E8h
 11692  0A52  30E8               	movwf	(___lwdiv@divisor)
 11693  0A53  00F6               	movlw	03h
 11694  0A54  3003               	movwf	((___lwdiv@divisor))+1
 11695  0A55  00F7               	movf	(_TempBCD+1)^080h,w
 11696  0A56  082C               	movwf	(___lwdiv@dividend+1)
 11697  0A57  00F9               	movf	(_TempBCD)^080h,w
 11698  0A58  082B               	movwf	(___lwdiv@dividend)
 11699  0A59  00F8               	fcall	___lwdiv
 11700  0A5A  160A  158A  257B  120A  158A  	movf	(0+(?___lwdiv)),w
 11701  0A5F  0876               	bcf	status, 5	;RP0=0, select bank0
 11702  0A60  1283               	bcf	status, 6	;RP1=0, select bank0
 11703  0A61  1303               	movwf	(??_Get_Temp+0)+0
 11704  0A62  00A0               	movf	(??_Get_Temp+0)+0,w
 11705  0A63  0820               	bsf	status, 5	;RP0=1, select bank1
 11706  0A64  1683               	bcf	status, 6	;RP1=0, select bank1
 11707  0A65  1303               	movwf	(_tenthbit)^080h
 11708  0A66  00B7               	line	183
 11709                           	
 11710                           l3598:	
 11711  0A67                     ;Thermometer.c: 183: hundredthbit=(TempBCD%1000)/100;
 11712                           	movlw	064h
 11713  0A67  3064               	movwf	(___lwdiv@divisor)
 11714  0A68  00F6               	movlw	0
 11715  0A69  3000               	movwf	((___lwdiv@divisor))+1
 11716  0A6A  00F7               	movf	(_TempBCD+1)^080h,w
 11717  0A6B  082C               	movwf	(___lwmod@dividend+1)
 11718  0A6C  00F3               	movf	(_TempBCD)^080h,w
 11719  0A6D  082B               	movwf	(___lwmod@dividend)
 11720  0A6E  00F2               	movlw	0E8h
 11721  0A6F  30E8               	movwf	(___lwmod@divisor)
 11722  0A70  00F0               	movlw	03h
 11723  0A71  3003               	movwf	((___lwmod@divisor))+1
 11724  0A72  00F1               	fcall	___lwmod
 11725  0A73  160A  158A  23A1  120A  158A  	movf	(1+(?___lwmod)),w
 11726  0A78  0871               	movwf	(___lwdiv@dividend+1)
 11727  0A79  00F9               	movf	(0+(?___lwmod)),w
 11728  0A7A  0870               	movwf	(___lwdiv@dividend)
 11729  0A7B  00F8               	fcall	___lwdiv
 11730  0A7C  160A  158A  257B  120A  158A  	movf	(0+(?___lwdiv)),w
 11731  0A81  0876               	bcf	status, 5	;RP0=0, select bank0
 11732  0A82  1283               	bcf	status, 6	;RP1=0, select bank0
 11733  0A83  1303               	movwf	(??_Get_Temp+0)+0
 11734  0A84  00A0               	movf	(??_Get_Temp+0)+0,w
 11735  0A85  0820               	bsf	status, 5	;RP0=1, select bank1
 11736  0A86  1683               	bcf	status, 6	;RP1=0, select bank1
 11737  0A87  1303               	movwf	(_hundredthbit)^080h
 11738  0A88  00B6               	line	184
 11739                           	
 11740                           l3600:	
 11741  0A89                     ;Thermometer.c: 184: __nop();
 11742                           	opt	asmopt_push
 11743                           	opt	asmopt_off
 11744                           	nop
 11745  0A89  0000               	opt	asmopt_pop
 11746                           	line	185
 11747                           	
 11748                           l715:	
 11749  0A8A                     	return
 11750  0A8A  0008               	opt stack 0
 11751                           GLOBAL	__end_of_Get_Temp
 11752                           	__end_of_Get_Temp:
 11753  0A8B                     	signat	_Get_Temp,4217
 11754                           	global	___lwmod
 11755                           
 11756 ;; *************** function ___lwmod *****************
 11757 ;; Defined at:
 11758 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 11759 ;; Parameters:    Size  Location     Type
 11760 ;;  divisor         2    0[COMMON] unsigned int 
 11761 ;;  dividend        2    2[COMMON] unsigned int 
 11762 ;; Auto vars:     Size  Location     Type
 11763 ;;  counter         1    5[COMMON] unsigned char 
 11764 ;; Return value:  Size  Location     Type
 11765 ;;                  2    0[COMMON] unsigned int 
 11766 ;; Registers used:
 11767 ;;		wreg, status,2, status,0
 11768 ;; Tracked objects:
 11769 ;;		On entry : 0/0
 11770 ;;		On exit  : 0/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11773 ;;      Params:         4       0       0       0       0
 11774 ;;      Locals:         1       0       0       0       0
 11775 ;;      Temps:          1       0       0       0       0
 11776 ;;      Totals:         6       0       0       0       0
 11777 ;;Total ram usage:        6 bytes
 11778 ;; Hardware stack levels used:    1
 11779 ;; This function calls:
 11780 ;;		Nothing
 11781 ;; This function is called by:
 11782 ;;		_Get_Temp
 11783 ;; This function uses a non-reentrant model
 11784 ;;
 11785                           psect	text23,local,class=CODE,delta=2,merge=1,group=1
 11786                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 11787                           	line	5
 11788                           global __ptext23
 11789                           __ptext23:	;psect for function ___lwmod
 11790  1BA1                     psect	text23
 11791                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 11792                           	line	5
 11793                           	global	__size_of___lwmod
 11794                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
 11795  0041                     	
 11796                           ___lwmod:	
 11797  1BA1                     ;incstack = 0
 11798                           	opt	stack 2
 11799                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 11800                           	line	12
 11801                           	
 11802                           l3412:	
 11803  1BA1                     	movf	((___lwmod@divisor)),w
 11804  1BA1  0870               iorwf	((___lwmod@divisor+1)),w
 11805  1BA2  0471               	btfsc	status,2
 11806  1BA3  1903               	goto	u2831
 11807  1BA4  2BA6               	goto	u2830
 11808  1BA5  2BA7               u2831:
 11809  1BA6                     	goto	l3430
 11810  1BA6  2BDC               u2830:
 11811  1BA7                     	line	13
 11812                           	
 11813                           l3414:	
 11814  1BA7                     	clrf	(___lwmod@counter)
 11815  1BA7  01F5               	incf	(___lwmod@counter),f
 11816  1BA8  0AF5               	line	14
 11817                           	goto	l3420
 11818  1BA9  2BB6               	
 11819                           l1078:	
 11820  1BAA                     	line	15
 11821                           	
 11822                           l3416:	
 11823  1BAA                     	movlw	01h
 11824  1BAA  3001               	
 11825                           u2845:
 11826  1BAB                     	clrc
 11827  1BAB  1003               	rlf	(___lwmod@divisor),f
 11828  1BAC  0DF0               	rlf	(___lwmod@divisor+1),f
 11829  1BAD  0DF1               	addlw	-1
 11830  1BAE  3EFF               	skipz
 11831  1BAF  1D03               	goto	u2845
 11832  1BB0  2BAB               	line	16
 11833                           	
 11834                           l3418:	
 11835  1BB1                     	movlw	low(01h)
 11836  1BB1  3001               	movwf	(??___lwmod+0)+0
 11837  1BB2  00F4               	movf	(??___lwmod+0)+0,w
 11838  1BB3  0874               	addwf	(___lwmod@counter),f
 11839  1BB4  07F5               	goto	l3420
 11840  1BB5  2BB6               	line	17
 11841                           	
 11842                           l1077:	
 11843  1BB6                     	line	14
 11844                           	
 11845                           l3420:	
 11846  1BB6                     	btfss	(___lwmod@divisor+1),(15)&7
 11847  1BB6  1FF1               	goto	u2851
 11848  1BB7  2BB9               	goto	u2850
 11849  1BB8  2BBA               u2851:
 11850  1BB9                     	goto	l3416
 11851  1BB9  2BAA               u2850:
 11852  1BBA                     	goto	l3422
 11853  1BBA  2BBC               	
 11854                           l1079:	
 11855  1BBB                     	goto	l3422
 11856  1BBB  2BBC               	line	18
 11857                           	
 11858                           l1080:	
 11859  1BBC                     	line	19
 11860                           	
 11861                           l3422:	
 11862  1BBC                     	movf	(___lwmod@divisor+1),w
 11863  1BBC  0871               	subwf	(___lwmod@dividend+1),w
 11864  1BBD  0273               	skipz
 11865  1BBE  1D03               	goto	u2865
 11866  1BBF  2BC2               	movf	(___lwmod@divisor),w
 11867  1BC0  0870               	subwf	(___lwmod@dividend),w
 11868  1BC1  0272               u2865:
 11869  1BC2                     	skipc
 11870  1BC2  1C03               	goto	u2861
 11871  1BC3  2BC5               	goto	u2860
 11872  1BC4  2BC6               u2861:
 11873  1BC5                     	goto	l3426
 11874  1BC5  2BCD               u2860:
 11875  1BC6                     	line	20
 11876                           	
 11877                           l3424:	
 11878  1BC6                     	movf	(___lwmod@divisor),w
 11879  1BC6  0870               	subwf	(___lwmod@dividend),f
 11880  1BC7  02F2               	movf	(___lwmod@divisor+1),w
 11881  1BC8  0871               	skipc
 11882  1BC9  1C03               	decf	(___lwmod@dividend+1),f
 11883  1BCA  03F3               	subwf	(___lwmod@dividend+1),f
 11884  1BCB  02F3               	goto	l3426
 11885  1BCC  2BCD               	
 11886                           l1081:	
 11887  1BCD                     	line	21
 11888                           	
 11889                           l3426:	
 11890  1BCD                     	movlw	01h
 11891  1BCD  3001               	
 11892                           u2875:
 11893  1BCE                     	clrc
 11894  1BCE  1003               	rrf	(___lwmod@divisor+1),f
 11895  1BCF  0CF1               	rrf	(___lwmod@divisor),f
 11896  1BD0  0CF0               	addlw	-1
 11897  1BD1  3EFF               	skipz
 11898  1BD2  1D03               	goto	u2875
 11899  1BD3  2BCE               	line	22
 11900                           	
 11901                           l3428:	
 11902  1BD4                     	movlw	01h
 11903  1BD4  3001               	subwf	(___lwmod@counter),f
 11904  1BD5  02F5               	btfss	status,2
 11905  1BD6  1D03               	goto	u2881
 11906  1BD7  2BD9               	goto	u2880
 11907  1BD8  2BDA               u2881:
 11908  1BD9                     	goto	l3422
 11909  1BD9  2BBC               u2880:
 11910  1BDA                     	goto	l3430
 11911  1BDA  2BDC               	
 11912                           l1082:	
 11913  1BDB                     	goto	l3430
 11914  1BDB  2BDC               	line	23
 11915                           	
 11916                           l1076:	
 11917  1BDC                     	line	24
 11918                           	
 11919                           l3430:	
 11920  1BDC                     	movf	(___lwmod@dividend+1),w
 11921  1BDC  0873               	movwf	(?___lwmod+1)
 11922  1BDD  00F1               	movf	(___lwmod@dividend),w
 11923  1BDE  0872               	movwf	(?___lwmod)
 11924  1BDF  00F0               	goto	l1083
 11925  1BE0  2BE1               	
 11926                           l3432:	
 11927  1BE1                     	line	25
 11928                           	
 11929                           l1083:	
 11930  1BE1                     	return
 11931  1BE1  0008               	opt stack 0
 11932                           GLOBAL	__end_of___lwmod
 11933                           	__end_of___lwmod:
 11934  1BE2                     	signat	___lwmod,8314
 11935                           	global	___lwdiv
 11936                           
 11937 ;; *************** function ___lwdiv *****************
 11938 ;; Defined at:
 11939 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;  divisor         2    6[COMMON] unsigned int 
 11942 ;;  dividend        2    8[COMMON] unsigned int 
 11943 ;; Auto vars:     Size  Location     Type
 11944 ;;  quotient        2   11[COMMON] unsigned int 
 11945 ;;  counter         1   13[COMMON] unsigned char 
 11946 ;; Return value:  Size  Location     Type
 11947 ;;                  2    6[COMMON] unsigned int 
 11948 ;; Registers used:
 11949 ;;		wreg, status,2, status,0
 11950 ;; Tracked objects:
 11951 ;;		On entry : 0/0
 11952 ;;		On exit  : 0/0
 11953 ;;		Unchanged: 0/0
 11954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11955 ;;      Params:         4       0       0       0       0
 11956 ;;      Locals:         3       0       0       0       0
 11957 ;;      Temps:          1       0       0       0       0
 11958 ;;      Totals:         8       0       0       0       0
 11959 ;;Total ram usage:        8 bytes
 11960 ;; Hardware stack levels used:    1
 11961 ;; This function calls:
 11962 ;;		Nothing
 11963 ;; This function is called by:
 11964 ;;		_Get_Temp
 11965 ;; This function uses a non-reentrant model
 11966 ;;
 11967                           psect	text24,local,class=CODE,delta=2,merge=1,group=1
 11968                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 11969                           	line	5
 11970                           global __ptext24
 11971                           __ptext24:	;psect for function ___lwdiv
 11972  1D7B                     psect	text24
 11973                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 11974                           	line	5
 11975                           	global	__size_of___lwdiv
 11976                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
 11977  004B                     	
 11978                           ___lwdiv:	
 11979  1D7B                     ;incstack = 0
 11980                           	opt	stack 2
 11981                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11982                           	line	13
 11983                           	
 11984                           l3386:	
 11985  1D7B                     	clrf	(___lwdiv@quotient)
 11986  1D7B  01FB               	clrf	(___lwdiv@quotient+1)
 11987  1D7C  01FC               	line	14
 11988                           	
 11989                           l3388:	
 11990  1D7D                     	movf	((___lwdiv@divisor)),w
 11991  1D7D  0876               iorwf	((___lwdiv@divisor+1)),w
 11992  1D7E  0477               	btfsc	status,2
 11993  1D7F  1903               	goto	u2761
 11994  1D80  2D82               	goto	u2760
 11995  1D81  2D83               u2761:
 11996  1D82                     	goto	l3408
 11997  1D82  2DC0               u2760:
 11998  1D83                     	line	15
 11999                           	
 12000                           l3390:	
 12001  1D83                     	clrf	(___lwdiv@counter)
 12002  1D83  01FD               	incf	(___lwdiv@counter),f
 12003  1D84  0AFD               	line	16
 12004                           	goto	l3396
 12005  1D85  2D92               	
 12006                           l1068:	
 12007  1D86                     	line	17
 12008                           	
 12009                           l3392:	
 12010  1D86                     	movlw	01h
 12011  1D86  3001               	
 12012                           u2775:
 12013  1D87                     	clrc
 12014  1D87  1003               	rlf	(___lwdiv@divisor),f
 12015  1D88  0DF6               	rlf	(___lwdiv@divisor+1),f
 12016  1D89  0DF7               	addlw	-1
 12017  1D8A  3EFF               	skipz
 12018  1D8B  1D03               	goto	u2775
 12019  1D8C  2D87               	line	18
 12020                           	
 12021                           l3394:	
 12022  1D8D                     	movlw	low(01h)
 12023  1D8D  3001               	movwf	(??___lwdiv+0)+0
 12024  1D8E  00FA               	movf	(??___lwdiv+0)+0,w
 12025  1D8F  087A               	addwf	(___lwdiv@counter),f
 12026  1D90  07FD               	goto	l3396
 12027  1D91  2D92               	line	19
 12028                           	
 12029                           l1067:	
 12030  1D92                     	line	16
 12031                           	
 12032                           l3396:	
 12033  1D92                     	btfss	(___lwdiv@divisor+1),(15)&7
 12034  1D92  1FF7               	goto	u2781
 12035  1D93  2D95               	goto	u2780
 12036  1D94  2D96               u2781:
 12037  1D95                     	goto	l3392
 12038  1D95  2D86               u2780:
 12039  1D96                     	goto	l3398
 12040  1D96  2D98               	
 12041                           l1069:	
 12042  1D97                     	goto	l3398
 12043  1D97  2D98               	line	20
 12044                           	
 12045                           l1070:	
 12046  1D98                     	line	21
 12047                           	
 12048                           l3398:	
 12049  1D98                     	movlw	01h
 12050  1D98  3001               	
 12051                           u2795:
 12052  1D99                     	clrc
 12053  1D99  1003               	rlf	(___lwdiv@quotient),f
 12054  1D9A  0DFB               	rlf	(___lwdiv@quotient+1),f
 12055  1D9B  0DFC               	addlw	-1
 12056  1D9C  3EFF               	skipz
 12057  1D9D  1D03               	goto	u2795
 12058  1D9E  2D99               	line	22
 12059                           	movf	(___lwdiv@divisor+1),w
 12060  1D9F  0877               	subwf	(___lwdiv@dividend+1),w
 12061  1DA0  0279               	skipz
 12062  1DA1  1D03               	goto	u2805
 12063  1DA2  2DA5               	movf	(___lwdiv@divisor),w
 12064  1DA3  0876               	subwf	(___lwdiv@dividend),w
 12065  1DA4  0278               u2805:
 12066  1DA5                     	skipc
 12067  1DA5  1C03               	goto	u2801
 12068  1DA6  2DA8               	goto	u2800
 12069  1DA7  2DA9               u2801:
 12070  1DA8                     	goto	l3404
 12071  1DA8  2DB1               u2800:
 12072  1DA9                     	line	23
 12073                           	
 12074                           l3400:	
 12075  1DA9                     	movf	(___lwdiv@divisor),w
 12076  1DA9  0876               	subwf	(___lwdiv@dividend),f
 12077  1DAA  02F8               	movf	(___lwdiv@divisor+1),w
 12078  1DAB  0877               	skipc
 12079  1DAC  1C03               	decf	(___lwdiv@dividend+1),f
 12080  1DAD  03F9               	subwf	(___lwdiv@dividend+1),f
 12081  1DAE  02F9               	line	24
 12082                           	
 12083                           l3402:	
 12084  1DAF                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
 12085  1DAF  147B               	goto	l3404
 12086  1DB0  2DB1               	line	25
 12087                           	
 12088                           l1071:	
 12089  1DB1                     	line	26
 12090                           	
 12091                           l3404:	
 12092  1DB1                     	movlw	01h
 12093  1DB1  3001               	
 12094                           u2815:
 12095  1DB2                     	clrc
 12096  1DB2  1003               	rrf	(___lwdiv@divisor+1),f
 12097  1DB3  0CF7               	rrf	(___lwdiv@divisor),f
 12098  1DB4  0CF6               	addlw	-1
 12099  1DB5  3EFF               	skipz
 12100  1DB6  1D03               	goto	u2815
 12101  1DB7  2DB2               	line	27
 12102                           	
 12103                           l3406:	
 12104  1DB8                     	movlw	01h
 12105  1DB8  3001               	subwf	(___lwdiv@counter),f
 12106  1DB9  02FD               	btfss	status,2
 12107  1DBA  1D03               	goto	u2821
 12108  1DBB  2DBD               	goto	u2820
 12109  1DBC  2DBE               u2821:
 12110  1DBD                     	goto	l3398
 12111  1DBD  2D98               u2820:
 12112  1DBE                     	goto	l3408
 12113  1DBE  2DC0               	
 12114                           l1072:	
 12115  1DBF                     	goto	l3408
 12116  1DBF  2DC0               	line	28
 12117                           	
 12118                           l1066:	
 12119  1DC0                     	line	29
 12120                           	
 12121                           l3408:	
 12122  1DC0                     	movf	(___lwdiv@quotient+1),w
 12123  1DC0  087C               	movwf	(?___lwdiv+1)
 12124  1DC1  00F7               	movf	(___lwdiv@quotient),w
 12125  1DC2  087B               	movwf	(?___lwdiv)
 12126  1DC3  00F6               	goto	l1073
 12127  1DC4  2DC5               	
 12128                           l3410:	
 12129  1DC5                     	line	30
 12130                           	
 12131                           l1073:	
 12132  1DC5                     	return
 12133  1DC5  0008               	opt stack 0
 12134                           GLOBAL	__end_of___lwdiv
 12135                           	__end_of___lwdiv:
 12136  1DC6                     	signat	___lwdiv,8314
 12137                           	global	_Write_Byte
 12138                           
 12139 ;; *************** function _Write_Byte *****************
 12140 ;; Defined at:
 12141 ;;		line 67 in file "Thermometer.c"
 12142 ;; Parameters:    Size  Location     Type
 12143 ;;  val             1    wreg     unsigned char 
 12144 ;; Auto vars:     Size  Location     Type
 12145 ;;  val             1    7[COMMON] unsigned char 
 12146 ;;  i               1    8[COMMON] unsigned char 
 12147 ;;  temp            1    6[COMMON] unsigned char 
 12148 ;; Return value:  Size  Location     Type
 12149 ;;                  1    wreg      void 
 12150 ;; Registers used:
 12151 ;;		wreg, status,2, status,0, pclath, cstack
 12152 ;; Tracked objects:
 12153 ;;		On entry : 0/0
 12154 ;;		On exit  : 0/0
 12155 ;;		Unchanged: 0/0
 12156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12157 ;;      Params:         0       0       0       0       0
 12158 ;;      Locals:         3       0       0       0       0
 12159 ;;      Temps:          2       0       0       0       0
 12160 ;;      Totals:         5       0       0       0       0
 12161 ;;Total ram usage:        5 bytes
 12162 ;; Hardware stack levels used:    1
 12163 ;; Hardware stack levels required when called:    1
 12164 ;; This function calls:
 12165 ;;		_Delay
 12166 ;; This function is called by:
 12167 ;;		_Get_Temp
 12168 ;; This function uses a non-reentrant model
 12169 ;;
 12170                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
 12171                           	file	"Thermometer.c"
 12172                           	line	67
 12173                           global __ptext25
 12174                           __ptext25:	;psect for function _Write_Byte
 12175  1CAA                     psect	text25
 12176                           	file	"Thermometer.c"
 12177                           	line	67
 12178                           	global	__size_of_Write_Byte
 12179                           	__size_of_Write_Byte	equ	__end_of_Write_Byte-_Write_Byte
 12180  0044                     	
 12181                           _Write_Byte:	
 12182  1CAA                     ;incstack = 0
 12183                           	opt	stack 1
 12184                           ; Regs used in _Write_Byte: [wreg+status,2+status,0+pclath+cstack]
 12185                           ;Write_Byte@val stored from wreg
 12186                           	movwf	(Write_Byte@val)
 12187  1CAA  00F7               	line	71
 12188                           	
 12189                           l3248:	
 12190  1CAB                     ;Thermometer.c: 67: void Write_Byte(unsigned char val);Thermometer.c: 68: {;Thermometer.
                                 c: 69:  unsigned char i;;Thermometer.c: 70:  unsigned char temp;;Thermometer.c: 71:  for
                                 (i=8;i>0;i--)
 12191                           	movlw	low(08h)
 12192  1CAB  3008               	movwf	(??_Write_Byte+0)+0
 12193  1CAC  00F4               	movf	(??_Write_Byte+0)+0,w
 12194  1CAD  0874               	movwf	(Write_Byte@i)
 12195  1CAE  00F8               	
 12196                           l3250:	
 12197  1CAF                     	movf	((Write_Byte@i)),w
 12198  1CAF  0878               	btfss	status,2
 12199  1CB0  1D03               	goto	u2601
 12200  1CB1  2CB3               	goto	u2600
 12201  1CB2  2CB4               u2601:
 12202  1CB3                     	goto	l3254
 12203  1CB3  2CB6               u2600:
 12204  1CB4                     	goto	l697
 12205  1CB4  2CED               	
 12206                           l3252:	
 12207  1CB5                     	goto	l697
 12208  1CB5  2CED               	
 12209                           l694:	
 12210  1CB6                     	line	74
 12211                           	
 12212                           l3254:	
 12213  1CB6                     ;Thermometer.c: 72:  {;Thermometer.c: 74:    temp=val&0x01;
 12214                           	movf	(Write_Byte@val),w
 12215  1CB6  0877               	andlw	01h
 12216  1CB7  3901               	movwf	(??_Write_Byte+0)+0
 12217  1CB8  00F4               	movf	(??_Write_Byte+0)+0,w
 12218  1CB9  0874               	movwf	(Write_Byte@temp)
 12219  1CBA  00F6               	line	76
 12220                           	
 12221                           l3256:	
 12222  1CBB                     ;Thermometer.c: 76:    RA0 = 0; TRISA0 = 0;
 12223                           	bcf	status, 5	;RP0=0, select bank0
 12224  1CBB  1283               	bcf	status, 6	;RP1=0, select bank0
 12225  1CBC  1303               	bcf	(40/8),(40)&7	;volatile
 12226  1CBD  1005               	
 12227                           l3258:	
 12228  1CBE                     	bsf	status, 5	;RP0=1, select bank1
 12229  1CBE  1683               	bcf	status, 6	;RP1=0, select bank1
 12230  1CBF  1303               	bcf	(1064/8)^080h,(1064)&7	;volatile
 12231  1CC0  1005               	line	77
 12232                           	
 12233                           l3260:	
 12234  1CC1                     ;Thermometer.c: 77:    __nop();
 12235                           	opt	asmopt_push
 12236                           	opt	asmopt_off
 12237                           	nop
 12238  1CC1  0000               	opt	asmopt_pop
 12239                           	line	78
 12240                           	
 12241                           l3262:	
 12242  1CC2                     ;Thermometer.c: 78:    __nop();
 12243                           	opt	asmopt_push
 12244                           	opt	asmopt_off
 12245                           	nop
 12246  1CC2  0000               	opt	asmopt_pop
 12247                           	line	79
 12248                           	
 12249                           l3264:	
 12250  1CC3                     ;Thermometer.c: 79:    __nop();
 12251                           	opt	asmopt_push
 12252                           	opt	asmopt_off
 12253                           	nop
 12254  1CC3  0000               	opt	asmopt_pop
 12255                           	line	80
 12256                           	
 12257                           l3266:	
 12258  1CC4                     ;Thermometer.c: 80:    __nop();
 12259                           	opt	asmopt_push
 12260                           	opt	asmopt_off
 12261                           	nop
 12262  1CC4  0000               	opt	asmopt_pop
 12263                           	line	81
 12264                           	
 12265                           l3268:	
 12266  1CC5                     ;Thermometer.c: 81:    __nop();
 12267                           	opt	asmopt_push
 12268                           	opt	asmopt_off
 12269                           	nop
 12270  1CC5  0000               	opt	asmopt_pop
 12271                           	line	83
 12272                           	
 12273                           l3270:	
 12274  1CC6                     ;Thermometer.c: 83:    if(temp==1) TRISA0 =1;
 12275                           		decf	((Write_Byte@temp)),w
 12276  1CC6  0376               	btfss	status,2
 12277  1CC7  1D03               	goto	u2611
 12278  1CC8  2CCA               	goto	u2610
 12279  1CC9  2CCB               u2611:
 12280  1CCA                     	goto	l3274
 12281  1CCA  2CCF               u2610:
 12282  1CCB                     	
 12283                           l3272:	
 12284  1CCB                     	bsf	status, 5	;RP0=1, select bank1
 12285  1CCB  1683               	bcf	status, 6	;RP1=0, select bank1
 12286  1CCC  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
 12287  1CCD  1405               	goto	l3274
 12288  1CCE  2CCF               	
 12289                           l696:	
 12290  1CCF                     	line	85
 12291                           	
 12292                           l3274:	
 12293  1CCF                     ;Thermometer.c: 85:    Delay(2,7);
 12294                           	movlw	low(07h)
 12295  1CCF  3007               	movwf	(??_Write_Byte+0)+0
 12296  1CD0  00F4               	movf	(??_Write_Byte+0)+0,w
 12297  1CD1  0874               	movwf	(Delay@y)
 12298  1CD2  00F0               	movlw	low(02h)
 12299  1CD3  3002               	fcall	_Delay
 12300  1CD4  160A  158A  2065  160A  158A  	line	86
 12301                           	
 12302                           l3276:	
 12303  1CD9                     ;Thermometer.c: 86:    TRISA0 =1;
 12304                           	bsf	status, 5	;RP0=1, select bank1
 12305  1CD9  1683               	bcf	status, 6	;RP1=0, select bank1
 12306  1CDA  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
 12307  1CDB  1405               	line	87
 12308                           	
 12309                           l3278:	
 12310  1CDC                     ;Thermometer.c: 87:    __nop();
 12311                           	opt	asmopt_push
 12312                           	opt	asmopt_off
 12313                           	nop
 12314  1CDC  0000               	opt	asmopt_pop
 12315                           	line	88
 12316                           	
 12317                           l3280:	
 12318  1CDD                     ;Thermometer.c: 88:    __nop();
 12319                           	opt	asmopt_push
 12320                           	opt	asmopt_off
 12321                           	nop
 12322  1CDD  0000               	opt	asmopt_pop
 12323                           	line	90
 12324                           	
 12325                           l3282:	
 12326  1CDE                     ;Thermometer.c: 90:    val=val>>1;
 12327                           	movf	(Write_Byte@val),w
 12328  1CDE  0877               	movwf	(??_Write_Byte+0)+0
 12329  1CDF  00F4               	clrc
 12330  1CE0  1003               	rrf	(??_Write_Byte+0)+0,w
 12331  1CE1  0C74               	movwf	(??_Write_Byte+1)+0
 12332  1CE2  00F5               	movf	(??_Write_Byte+1)+0,w
 12333  1CE3  0875               	movwf	(Write_Byte@val)
 12334  1CE4  00F7               	line	91
 12335                           	
 12336                           l3284:	
 12337  1CE5                     ;Thermometer.c: 91:   }
 12338                           	movlw	01h
 12339  1CE5  3001               	subwf	(Write_Byte@i),f
 12340  1CE6  02F8               	
 12341                           l3286:	
 12342  1CE7                     	movf	((Write_Byte@i)),w
 12343  1CE7  0878               	btfss	status,2
 12344  1CE8  1D03               	goto	u2621
 12345  1CE9  2CEB               	goto	u2620
 12346  1CEA  2CEC               u2621:
 12347  1CEB                     	goto	l3254
 12348  1CEB  2CB6               u2620:
 12349  1CEC                     	goto	l697
 12350  1CEC  2CED               	
 12351                           l695:	
 12352  1CED                     	line	92
 12353                           	
 12354                           l697:	
 12355  1CED                     	return
 12356  1CED  0008               	opt stack 0
 12357                           GLOBAL	__end_of_Write_Byte
 12358                           	__end_of_Write_Byte:
 12359  1CEE                     	signat	_Write_Byte,4217
 12360                           	global	_Reset
 12361                           
 12362 ;; *************** function _Reset *****************
 12363 ;; Defined at:
 12364 ;;		line 45 in file "Thermometer.c"
 12365 ;; Parameters:    Size  Location     Type
 12366 ;;		None
 12367 ;; Auto vars:     Size  Location     Type
 12368 ;;  i               2    5[COMMON] int 
 12369 ;; Return value:  Size  Location     Type
 12370 ;;                  1    wreg      void 
 12371 ;; Registers used:
 12372 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12373 ;; Tracked objects:
 12374 ;;		On entry : 0/0
 12375 ;;		On exit  : 0/0
 12376 ;;		Unchanged: 0/0
 12377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12378 ;;      Params:         0       0       0       0       0
 12379 ;;      Locals:         2       0       0       0       0
 12380 ;;      Temps:          1       0       0       0       0
 12381 ;;      Totals:         3       0       0       0       0
 12382 ;;Total ram usage:        3 bytes
 12383 ;; Hardware stack levels used:    1
 12384 ;; Hardware stack levels required when called:    1
 12385 ;; This function calls:
 12386 ;;		_Delay
 12387 ;; This function is called by:
 12388 ;;		_Get_Temp
 12389 ;; This function uses a non-reentrant model
 12390 ;;
 12391                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
 12392                           	line	45
 12393                           global __ptext26
 12394                           __ptext26:	;psect for function _Reset
 12395  1E64                     psect	text26
 12396                           	file	"Thermometer.c"
 12397                           	line	45
 12398                           	global	__size_of_Reset
 12399                           	__size_of_Reset	equ	__end_of_Reset-_Reset
 12400  0055                     	
 12401                           _Reset:	
 12402  1E64                     ;incstack = 0
 12403                           	opt	stack 1
 12404                           ; Regs used in _Reset: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 12405                           	line	48
 12406                           	
 12407                           l3228:	
 12408  1E64                     ;Thermometer.c: 48:     for(int i = 0; i < 100; ++i)
 12409                           	clrf	(Reset@i)
 12410  1E64  01F5               	clrf	(Reset@i+1)
 12411  1E65  01F6               	
 12412                           l3230:	
 12413  1E66                     	movf	(Reset@i+1),w
 12414  1E66  0876               	xorlw	80h
 12415  1E67  3A80               	movwf	btemp+1
 12416  1E68  00FF               	movlw	(0)^80h
 12417  1E69  3080               	subwf	btemp+1,w
 12418  1E6A  027F               	skipz
 12419  1E6B  1D03               	goto	u2575
 12420  1E6C  2E6F               	movlw	064h
 12421  1E6D  3064               	subwf	(Reset@i),w
 12422  1E6E  0275               u2575:
 12423  1E6F                     
 12424                           	skipc
 12425  1E6F  1C03               	goto	u2571
 12426  1E70  2E72               	goto	u2570
 12427  1E71  2E73               u2571:
 12428  1E72                     	goto	l688
 12429  1E72  2E75               u2570:
 12430  1E73                     	goto	l691
 12431  1E73  2EB8               	
 12432                           l3232:	
 12433  1E74                     	goto	l691
 12434  1E74  2EB8               	
 12435                           l688:	
 12436  1E75                     	line	51
 12437                           ;Thermometer.c: 49:   {;Thermometer.c: 51:     RA0 = 0; TRISA0 = 0;
 12438                           	bcf	status, 5	;RP0=0, select bank0
 12439  1E75  1283               	bcf	status, 6	;RP1=0, select bank0
 12440  1E76  1303               	bcf	(40/8),(40)&7	;volatile
 12441  1E77  1005               	bsf	status, 5	;RP0=1, select bank1
 12442  1E78  1683               	bcf	status, 6	;RP1=0, select bank1
 12443  1E79  1303               	bcf	(1064/8)^080h,(1064)&7	;volatile
 12444  1E7A  1005               	line	53
 12445                           	
 12446                           l3234:	
 12447  1E7B                     ;Thermometer.c: 53:     Delay(2,70);
 12448                           	movlw	low(046h)
 12449  1E7B  3046               	movwf	(??_Reset+0)+0
 12450  1E7C  00F4               	movf	(??_Reset+0)+0,w
 12451  1E7D  0874               	movwf	(Delay@y)
 12452  1E7E  00F0               	movlw	low(02h)
 12453  1E7F  3002               	fcall	_Delay
 12454  1E80  160A  158A  2065  160A  158A  	line	55
 12455                           	
 12456                           l3236:	
 12457  1E85                     ;Thermometer.c: 55:     TRISA0 =1;
 12458                           	bsf	status, 5	;RP0=1, select bank1
 12459  1E85  1683               	bcf	status, 6	;RP1=0, select bank1
 12460  1E86  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
 12461  1E87  1405               	line	57
 12462                           ;Thermometer.c: 57:     Delay(2,8);
 12463                           	movlw	low(08h)
 12464  1E88  3008               	movwf	(??_Reset+0)+0
 12465  1E89  00F4               	movf	(??_Reset+0)+0,w
 12466  1E8A  0874               	movwf	(Delay@y)
 12467  1E8B  00F0               	movlw	low(02h)
 12468  1E8C  3002               	fcall	_Delay
 12469  1E8D  160A  158A  2065  160A  158A  	line	60
 12470                           	
 12471                           l3238:	
 12472  1E92                     ;Thermometer.c: 60:     if(!RA0) break;
 12473                           	bcf	status, 5	;RP0=0, select bank0
 12474  1E92  1283               	bcf	status, 6	;RP1=0, select bank0
 12475  1E93  1303               	btfsc	(40/8),(40)&7	;volatile
 12476  1E94  1805               	goto	u2581
 12477  1E95  2E97               	goto	u2580
 12478  1E96  2E98               u2581:
 12479  1E97                     	goto	l3242
 12480  1E97  2E9A               u2580:
 12481  1E98                     	goto	l691
 12482  1E98  2EB8               	
 12483                           l3240:	
 12484  1E99                     	goto	l691
 12485  1E99  2EB8               	
 12486                           l690:	
 12487  1E9A                     	line	62
 12488                           	
 12489                           l3242:	
 12490  1E9A                     ;Thermometer.c: 62:     Delay(2,60);
 12491                           	movlw	low(03Ch)
 12492  1E9A  303C               	movwf	(??_Reset+0)+0
 12493  1E9B  00F4               	movf	(??_Reset+0)+0,w
 12494  1E9C  0874               	movwf	(Delay@y)
 12495  1E9D  00F0               	movlw	low(02h)
 12496  1E9E  3002               	fcall	_Delay
 12497  1E9F  160A  158A  2065  160A  158A  	line	63
 12498                           	
 12499                           l3244:	
 12500  1EA4                     ;Thermometer.c: 63:    }
 12501                           	movlw	01h
 12502  1EA4  3001               	addwf	(Reset@i),f
 12503  1EA5  07F5               	skipnc
 12504  1EA6  1803               	incf	(Reset@i+1),f
 12505  1EA7  0AF6               	movlw	0
 12506  1EA8  3000               	addwf	(Reset@i+1),f
 12507  1EA9  07F6               	
 12508                           l3246:	
 12509  1EAA                     	movf	(Reset@i+1),w
 12510  1EAA  0876               	xorlw	80h
 12511  1EAB  3A80               	movwf	btemp+1
 12512  1EAC  00FF               	movlw	(0)^80h
 12513  1EAD  3080               	subwf	btemp+1,w
 12514  1EAE  027F               	skipz
 12515  1EAF  1D03               	goto	u2595
 12516  1EB0  2EB3               	movlw	064h
 12517  1EB1  3064               	subwf	(Reset@i),w
 12518  1EB2  0275               u2595:
 12519  1EB3                     
 12520                           	skipc
 12521  1EB3  1C03               	goto	u2591
 12522  1EB4  2EB6               	goto	u2590
 12523  1EB5  2EB7               u2591:
 12524  1EB6                     	goto	l688
 12525  1EB6  2E75               u2590:
 12526  1EB7                     	goto	l691
 12527  1EB7  2EB8               	
 12528                           l689:	
 12529  1EB8                     	line	64
 12530                           	
 12531                           l691:	
 12532  1EB8                     	return
 12533  1EB8  0008               	opt stack 0
 12534                           GLOBAL	__end_of_Reset
 12535                           	__end_of_Reset:
 12536  1EB9                     	signat	_Reset,89
 12537                           	global	_Read_Byte
 12538                           
 12539 ;; *************** function _Read_Byte *****************
 12540 ;; Defined at:
 12541 ;;		line 95 in file "Thermometer.c"
 12542 ;; Parameters:    Size  Location     Type
 12543 ;;		None
 12544 ;; Auto vars:     Size  Location     Type
 12545 ;;  i               1    6[COMMON] unsigned char 
 12546 ;;  value           1    5[COMMON] unsigned char 
 12547 ;; Return value:  Size  Location     Type
 12548 ;;                  1    wreg      unsigned char 
 12549 ;; Registers used:
 12550 ;;		wreg, status,2, status,0, pclath, cstack
 12551 ;; Tracked objects:
 12552 ;;		On entry : 0/0
 12553 ;;		On exit  : 0/0
 12554 ;;		Unchanged: 0/0
 12555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12556 ;;      Params:         0       0       0       0       0
 12557 ;;      Locals:         2       0       0       0       0
 12558 ;;      Temps:          1       0       0       0       0
 12559 ;;      Totals:         3       0       0       0       0
 12560 ;;Total ram usage:        3 bytes
 12561 ;; Hardware stack levels used:    1
 12562 ;; Hardware stack levels required when called:    1
 12563 ;; This function calls:
 12564 ;;		_Delay
 12565 ;; This function is called by:
 12566 ;;		_Get_Temp
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
 12570                           	line	95
 12571                           global __ptext27
 12572                           __ptext27:	;psect for function _Read_Byte
 12573  1CEE                     psect	text27
 12574                           	file	"Thermometer.c"
 12575                           	line	95
 12576                           	global	__size_of_Read_Byte
 12577                           	__size_of_Read_Byte	equ	__end_of_Read_Byte-_Read_Byte
 12578  0046                     	
 12579                           _Read_Byte:	
 12580  1CEE                     ;incstack = 0
 12581                           	opt	stack 1
 12582                           ; Regs used in _Read_Byte: [wreg+status,2+status,0+pclath+cstack]
 12583                           	line	98
 12584                           	
 12585                           l3288:	
 12586  1CEE                     ;Thermometer.c: 97:  unsigned char i;;Thermometer.c: 98:  unsigned char value=0;
 12587                           	clrf	(Read_Byte@value)
 12588  1CEE  01F5               	line	100
 12589                           	
 12590                           l3290:	
 12591  1CEF                     ;Thermometer.c: 99:  static char j;;Thermometer.c: 100:  for(i=8;i>0;i--)
 12592                           	movlw	low(08h)
 12593  1CEF  3008               	movwf	(??_Read_Byte+0)+0
 12594  1CF0  00F4               	movf	(??_Read_Byte+0)+0,w
 12595  1CF1  0874               	movwf	(Read_Byte@i)
 12596  1CF2  00F6               	
 12597                           l3292:	
 12598  1CF3                     	movf	((Read_Byte@i)),w
 12599  1CF3  0876               	btfss	status,2
 12600  1CF4  1D03               	goto	u2631
 12601  1CF5  2CF7               	goto	u2630
 12602  1CF6  2CF8               u2631:
 12603  1CF7                     	goto	l3296
 12604  1CF7  2CFA               u2630:
 12605  1CF8                     	goto	l3338
 12606  1CF8  2D31               	
 12607                           l3294:	
 12608  1CF9                     	goto	l3338
 12609  1CF9  2D31               	
 12610                           l702:	
 12611  1CFA                     	line	102
 12612                           	
 12613                           l3296:	
 12614  1CFA                     ;Thermometer.c: 101:  {;Thermometer.c: 102:    value>>=1;
 12615                           	clrc
 12616  1CFA  1003               	rrf	(Read_Byte@value),f
 12617  1CFB  0CF5               
 12618                           	line	104
 12619                           	
 12620                           l3298:	
 12621  1CFC                     ;Thermometer.c: 104:    RA0 = 0; TRISA0 = 0;
 12622                           	bcf	status, 5	;RP0=0, select bank0
 12623  1CFC  1283               	bcf	status, 6	;RP1=0, select bank0
 12624  1CFD  1303               	bcf	(40/8),(40)&7	;volatile
 12625  1CFE  1005               	
 12626                           l3300:	
 12627  1CFF                     	bsf	status, 5	;RP0=1, select bank1
 12628  1CFF  1683               	bcf	status, 6	;RP1=0, select bank1
 12629  1D00  1303               	bcf	(1064/8)^080h,(1064)&7	;volatile
 12630  1D01  1005               	line	106
 12631                           	
 12632                           l3302:	
 12633  1D02                     ;Thermometer.c: 106:    __nop();
 12634                           	opt	asmopt_push
 12635                           	opt	asmopt_off
 12636                           	nop
 12637  1D02  0000               	opt	asmopt_pop
 12638                           	line	107
 12639                           	
 12640                           l3304:	
 12641  1D03                     ;Thermometer.c: 107:    __nop();
 12642                           	opt	asmopt_push
 12643                           	opt	asmopt_off
 12644                           	nop
 12645  1D03  0000               	opt	asmopt_pop
 12646                           	line	108
 12647                           	
 12648                           l3306:	
 12649  1D04                     ;Thermometer.c: 108:    __nop();
 12650                           	opt	asmopt_push
 12651                           	opt	asmopt_off
 12652                           	nop
 12653  1D04  0000               	opt	asmopt_pop
 12654                           	line	109
 12655                           	
 12656                           l3308:	
 12657  1D05                     ;Thermometer.c: 109:    __nop();
 12658                           	opt	asmopt_push
 12659                           	opt	asmopt_off
 12660                           	nop
 12661  1D05  0000               	opt	asmopt_pop
 12662                           	line	110
 12663                           	
 12664                           l3310:	
 12665  1D06                     ;Thermometer.c: 110:    __nop();
 12666                           	opt	asmopt_push
 12667                           	opt	asmopt_off
 12668                           	nop
 12669  1D06  0000               	opt	asmopt_pop
 12670                           	line	111
 12671                           	
 12672                           l3312:	
 12673  1D07                     ;Thermometer.c: 111:    __nop();
 12674                           	opt	asmopt_push
 12675                           	opt	asmopt_off
 12676                           	nop
 12677  1D07  0000               	opt	asmopt_pop
 12678                           	line	113
 12679                           	
 12680                           l3314:	
 12681  1D08                     ;Thermometer.c: 113:    TRISA0 =1;
 12682                           	bsf	status, 5	;RP0=1, select bank1
 12683  1D08  1683               	bcf	status, 6	;RP1=0, select bank1
 12684  1D09  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
 12685  1D0A  1405               	line	115
 12686                           	
 12687                           l3316:	
 12688  1D0B                     ;Thermometer.c: 115:    __nop();
 12689                           	opt	asmopt_push
 12690                           	opt	asmopt_off
 12691                           	nop
 12692  1D0B  0000               	opt	asmopt_pop
 12693                           	line	116
 12694                           	
 12695                           l3318:	
 12696  1D0C                     ;Thermometer.c: 116:    __nop();
 12697                           	opt	asmopt_push
 12698                           	opt	asmopt_off
 12699                           	nop
 12700  1D0C  0000               	opt	asmopt_pop
 12701                           	line	117
 12702                           	
 12703                           l3320:	
 12704  1D0D                     ;Thermometer.c: 117:    __nop();
 12705                           	opt	asmopt_push
 12706                           	opt	asmopt_off
 12707                           	nop
 12708  1D0D  0000               	opt	asmopt_pop
 12709                           	line	118
 12710                           	
 12711                           l3322:	
 12712  1D0E                     ;Thermometer.c: 118:    __nop();
 12713                           	opt	asmopt_push
 12714                           	opt	asmopt_off
 12715                           	nop
 12716  1D0E  0000               	opt	asmopt_pop
 12717                           	line	119
 12718                           	
 12719                           l3324:	
 12720  1D0F                     ;Thermometer.c: 119:    __nop();
 12721                           	opt	asmopt_push
 12722                           	opt	asmopt_off
 12723                           	nop
 12724  1D0F  0000               	opt	asmopt_pop
 12725                           	line	120
 12726                           	
 12727                           l3326:	
 12728  1D10                     ;Thermometer.c: 120:    j=RA0;
 12729                           	movlw	0
 12730  1D10  3000               	bcf	status, 5	;RP0=0, select bank0
 12731  1D11  1283               	bcf	status, 6	;RP1=0, select bank0
 12732  1D12  1303               	btfsc	(40/8),(40)&7	;volatile
 12733  1D13  1805               	movlw	1
 12734  1D14  3001               	bsf	status, 5	;RP0=1, select bank1
 12735  1D15  1683               	bcf	status, 6	;RP1=0, select bank1
 12736  1D16  1303               	movwf	(Read_Byte@j)^080h
 12737  1D17  00B5               	line	121
 12738                           	
 12739                           l3328:	
 12740  1D18                     ;Thermometer.c: 121:    if(j) value|=0x80;
 12741                           	movf	((Read_Byte@j)^080h),w
 12742  1D18  0835               	btfsc	status,2
 12743  1D19  1903               	goto	u2641
 12744  1D1A  2D1C               	goto	u2640
 12745  1D1B  2D1D               u2641:
 12746  1D1C                     	goto	l3332
 12747  1D1C  2D1F               u2640:
 12748  1D1D                     	
 12749                           l3330:	
 12750  1D1D                     	bsf	(Read_Byte@value)+(7/8),(7)&7
 12751  1D1D  17F5               	goto	l3332
 12752  1D1E  2D1F               	
 12753                           l704:	
 12754  1D1F                     	line	123
 12755                           	
 12756                           l3332:	
 12757  1D1F                     ;Thermometer.c: 123:    Delay(2,7);
 12758                           	movlw	low(07h)
 12759  1D1F  3007               	movwf	(??_Read_Byte+0)+0
 12760  1D20  00F4               	movf	(??_Read_Byte+0)+0,w
 12761  1D21  0874               	movwf	(Delay@y)
 12762  1D22  00F0               	movlw	low(02h)
 12763  1D23  3002               	fcall	_Delay
 12764  1D24  160A  158A  2065  160A  158A  	line	124
 12765                           	
 12766                           l3334:	
 12767  1D29                     ;Thermometer.c: 124:   }
 12768                           	movlw	01h
 12769  1D29  3001               	subwf	(Read_Byte@i),f
 12770  1D2A  02F6               	
 12771                           l3336:	
 12772  1D2B                     	movf	((Read_Byte@i)),w
 12773  1D2B  0876               	btfss	status,2
 12774  1D2C  1D03               	goto	u2651
 12775  1D2D  2D2F               	goto	u2650
 12776  1D2E  2D30               u2651:
 12777  1D2F                     	goto	l3296
 12778  1D2F  2CFA               u2650:
 12779  1D30                     	goto	l3338
 12780  1D30  2D31               	
 12781                           l703:	
 12782  1D31                     	line	125
 12783                           	
 12784                           l3338:	
 12785  1D31                     ;Thermometer.c: 125:   return(value);
 12786                           	movf	(Read_Byte@value),w
 12787  1D31  0875               	goto	l705
 12788  1D32  2D33               	
 12789                           l3340:	
 12790  1D33                     	line	126
 12791                           	
 12792                           l705:	
 12793  1D33                     	return
 12794  1D33  0008               	opt stack 0
 12795                           GLOBAL	__end_of_Read_Byte
 12796                           	__end_of_Read_Byte:
 12797  1D34                     	signat	_Read_Byte,89
 12798                           	global	_Delay
 12799                           
 12800 ;; *************** function _Delay *****************
 12801 ;; Defined at:
 12802 ;;		line 28 in file "Thermometer.c"
 12803 ;; Parameters:    Size  Location     Type
 12804 ;;  x               1    wreg     unsigned char 
 12805 ;;  y               1    0[COMMON] unsigned char 
 12806 ;; Auto vars:     Size  Location     Type
 12807 ;;  x               1    2[COMMON] unsigned char 
 12808 ;;  z               1    3[COMMON] unsigned char 
 12809 ;; Return value:  Size  Location     Type
 12810 ;;                  1    wreg      void 
 12811 ;; Registers used:
 12812 ;;		wreg, status,2, status,0
 12813 ;; Tracked objects:
 12814 ;;		On entry : 0/0
 12815 ;;		On exit  : 0/0
 12816 ;;		Unchanged: 0/0
 12817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12818 ;;      Params:         1       0       0       0       0
 12819 ;;      Locals:         2       0       0       0       0
 12820 ;;      Temps:          1       0       0       0       0
 12821 ;;      Totals:         4       0       0       0       0
 12822 ;;Total ram usage:        4 bytes
 12823 ;; Hardware stack levels used:    1
 12824 ;; This function calls:
 12825 ;;		Nothing
 12826 ;; This function is called by:
 12827 ;;		_Reset
 12828 ;;		_Write_Byte
 12829 ;;		_Read_Byte
 12830 ;;		_Get_Temp
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
 12834                           	line	28
 12835                           global __ptext28
 12836                           __ptext28:	;psect for function _Delay
 12837  1865                     psect	text28
 12838                           	file	"Thermometer.c"
 12839                           	line	28
 12840                           	global	__size_of_Delay
 12841                           	__size_of_Delay	equ	__end_of_Delay-_Delay
 12842  0015                     	
 12843                           _Delay:	
 12844  1865                     ;incstack = 0
 12845                           	opt	stack 1
 12846                           ; Regs used in _Delay: [wreg+status,2+status,0]
 12847                           ;Delay@x stored from wreg
 12848                           	movwf	(Delay@x)
 12849  1865  00F2               	line	31
 12850                           ;Thermometer.c: 28: void Delay(char x,char y);Thermometer.c: 29: {;Thermometer.c: 30:   
                                 char z;;Thermometer.c: 31:   do{
 12851                           	
 12852                           l678:	
 12853  1866                     	line	32
 12854                           	
 12855                           l3114:	
 12856  1866                     ;Thermometer.c: 32:       z=y;
 12857                           	movf	(Delay@y),w
 12858  1866  0870               	movwf	(??_Delay+0)+0
 12859  1867  00F1               	movf	(??_Delay+0)+0,w
 12860  1868  0871               	movwf	(Delay@z)
 12861  1869  00F3               	goto	l3116
 12862  186A  286B               	line	33
 12863                           ;Thermometer.c: 33:       do{;}while(--z);
 12864                           	
 12865                           l679:	
 12866  186B                     	
 12867                           l3116:	
 12868  186B                     	movlw	01h
 12869  186B  3001               	subwf	(Delay@z),f
 12870  186C  02F3               	btfss	status,2
 12871  186D  1D03               	goto	u2331
 12872  186E  2870               	goto	u2330
 12873  186F  2871               u2331:
 12874  1870                     	goto	l3116
 12875  1870  286B               u2330:
 12876  1871                     	goto	l3118
 12877  1871  2872               	
 12878                           l680:	
 12879  1872                     	line	34
 12880                           	
 12881                           l3118:	
 12882  1872                     ;Thermometer.c: 34:      }while(--x);
 12883                           	movlw	01h
 12884  1872  3001               	subwf	(Delay@x),f
 12885  1873  02F2               	btfss	status,2
 12886  1874  1D03               	goto	u2341
 12887  1875  2877               	goto	u2340
 12888  1876  2878               u2341:
 12889  1877                     	goto	l678
 12890  1877  2866               u2340:
 12891  1878                     	goto	l682
 12892  1878  2879               	
 12893                           l681:	
 12894  1879                     	line	35
 12895                           	
 12896                           l682:	
 12897  1879                     	return
 12898  1879  0008               	opt stack 0
 12899                           GLOBAL	__end_of_Delay
 12900                           	__end_of_Delay:
 12901  187A                     	signat	_Delay,8313
 12902                           	global	_DateDayScreen
 12903                           
 12904 ;; *************** function _DateDayScreen *****************
 12905 ;; Defined at:
 12906 ;;		line 318 in file "main.c"
 12907 ;; Parameters:    Size  Location     Type
 12908 ;;  Key             2   21[BANK0 ] int 
 12909 ;; Auto vars:     Size  Location     Type
 12910 ;;  DayDis          1   25[BANK0 ] PTR unsigned char 
 12911 ;;		 -> STR_17(6), 
 12912 ;;  date            1   24[BANK0 ] PTR unsigned char 
 12913 ;;		 -> STR_16(7), 
 12914 ;; Return value:  Size  Location     Type
 12915 ;;                  1    wreg      void 
 12916 ;; Registers used:
 12917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12918 ;; Tracked objects:
 12919 ;;		On entry : 0/0
 12920 ;;		On exit  : 0/0
 12921 ;;		Unchanged: 0/0
 12922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12923 ;;      Params:         0       2       0       0       0
 12924 ;;      Locals:         0       2       0       0       0
 12925 ;;      Temps:          0       1       0       0       0
 12926 ;;      Totals:         0       5       0       0       0
 12927 ;;Total ram usage:        5 bytes
 12928 ;; Hardware stack levels used:    1
 12929 ;; Hardware stack levels required when called:    4
 12930 ;; This function calls:
 12931 ;;		_ChangeTrigger
 12932 ;;		_DisplayDate
 12933 ;;		_DisplayDay
 12934 ;;		_Keypad_Scan
 12935 ;;		_LCD_Command
 12936 ;;		_LCD_SecondLine
 12937 ;;		_LCD_SendString
 12938 ;;		_SwapToHeatingDisplay
 12939 ;; This function is called by:
 12940 ;;		_HeatingControlOff
 12941 ;;		_SoundAlarm
 12942 ;;		_main
 12943 ;; This function uses a non-reentrant model
 12944 ;;
 12945                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
 12946                           	file	"main.c"
 12947                           	line	318
 12948                           global __ptext29
 12949                           __ptext29:	;psect for function _DateDayScreen
 12950  1031                     psect	text29
 12951                           	file	"main.c"
 12952                           	line	318
 12953                           	global	__size_of_DateDayScreen
 12954                           	__size_of_DateDayScreen	equ	__end_of_DateDayScreen-_DateDayScreen
 12955  007F                     	
 12956                           _DateDayScreen:	
 12957  1031                     ;incstack = 0
 12958                           	opt	stack 1
 12959                           ; Regs used in _DateDayScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12960                           	line	320
 12961                           	
 12962                           l4024:	
 12963  1031                     ;main.c: 318:         };main.c: 319:         if (Key == 7);main.c: 320:         {
 12964                           	movlw	low(01h)
 12965  1031  3001               	fcall	_LCD_Command
 12966  1032  160A  158A  202E  160A  118A  	line	321
 12967                           	
 12968                           l4026:	
 12969  1037                     ;main.c: 321:             SwapToHeatingDisplay(Key);
 12970                           	movlw	(low((((STR_16)-__stringbase)|8000h)))&0ffh
 12971  1037  308E               	bcf	status, 5	;RP0=0, select bank0
 12972  1038  1283               	bcf	status, 6	;RP1=0, select bank0
 12973  1039  1303               	movwf	(??_DateDayScreen+0)+0
 12974  103A  00B7               	movf	(??_DateDayScreen+0)+0,w
 12975  103B  0837               	movwf	(DateDayScreen@date)
 12976  103C  00B8               	line	322
 12977                           	
 12978                           l4028:	
 12979  103D                     ;main.c: 322:         }
 12980                           	movlw	(low((((STR_17)-__stringbase)|8000h)))&0ffh
 12981  103D  30AA               	movwf	(??_DateDayScreen+0)+0
 12982  103E  00B7               	movf	(??_DateDayScreen+0)+0,w
 12983  103F  0837               	movwf	(DateDayScreen@DayDis)
 12984  1040  00B9               	line	323
 12985                           ;main.c: 323:     }
 12986                           	
 12987                           l175:	
 12988  1041                     	line	325
 12989                           ;main.c: 324: };main.c: 325: 
 12990                           	fcall	_Keypad_Scan
 12991  1041  120A  118A  2051  160A  118A  	movf	(1+(?_Keypad_Scan)),w
 12992  1046  0877               	bcf	status, 5	;RP0=0, select bank0
 12993  1047  1283               	bcf	status, 6	;RP1=0, select bank0
 12994  1048  1303               	movwf	(DateDayScreen@Key+1)
 12995  1049  00B6               	movf	(0+(?_Keypad_Scan)),w
 12996  104A  0876               	movwf	(DateDayScreen@Key)
 12997  104B  00B5               	line	326
 12998                           ;main.c: 326: 
 12999                           	movlw	low(03h)
 13000  104C  3003               	fcall	_LCD_Command
 13001  104D  160A  158A  202E  160A  118A  	line	327
 13002                           	
 13003                           l4030:	
 13004  1052                     ;main.c: 327: void SetTime(int Key)
 13005                           	bcf	status, 5	;RP0=0, select bank0
 13006  1052  1283               	bcf	status, 6	;RP1=0, select bank0
 13007  1053  1303               		movf	(DateDayScreen@date),w
 13008  1054  0838               	movwf	(LCD_SendString@string)
 13009  1055  00F1               	movlw	0
 13010  1056  3000               	btfss	status,2
 13011  1057  1D03               	movlw	080h
 13012  1058  3080               	movwf	(LCD_SendString@string+1)
 13013  1059  00F2               
 13014                           	fcall	_LCD_SendString
 13015  105A  160A  158A  2466  160A  118A  	line	328
 13016                           	
 13017                           l4032:	
 13018  105F                     ;main.c: 328: {
 13019                           	fcall	_DisplayDate
 13020  105F  160A  118A  223E  160A  118A  	line	329
 13021                           ;main.c: 329: 
 13022                           	fcall	_LCD_SecondLine
 13023  1064  160A  158A  2018  160A  118A  	line	330
 13024                           	
 13025                           l4034:	
 13026  1069                     ;main.c: 330:     LCD_Command(0x01);
 13027                           	bcf	status, 5	;RP0=0, select bank0
 13028  1069  1283               	bcf	status, 6	;RP1=0, select bank0
 13029  106A  1303               		movf	(DateDayScreen@DayDis),w
 13030  106B  0839               	movwf	(LCD_SendString@string)
 13031  106C  00F1               	movlw	0
 13032  106D  3000               	btfss	status,2
 13033  106E  1D03               	movlw	080h
 13034  106F  3080               	movwf	(LCD_SendString@string+1)
 13035  1070  00F2               
 13036                           	fcall	_LCD_SendString
 13037  1071  160A  158A  2466  160A  118A  	line	331
 13038                           	
 13039                           l4036:	
 13040  1076                     ;main.c: 331: 
 13041                           	fcall	_DisplayDay
 13042  1076  160A  118A  20B0  160A  118A  	line	332
 13043                           	
 13044                           l4038:	
 13045  107B                     ;main.c: 332:     int i = 0;
 13046                           	bcf	status, 5	;RP0=0, select bank0
 13047  107B  1283               	bcf	status, 6	;RP1=0, select bank0
 13048  107C  1303               		decf	((DateDayScreen@Key)),w
 13049  107D  0335               iorwf	((DateDayScreen@Key+1)),w
 13050  107E  0436               	btfss	status,2
 13051  107F  1D03               	goto	u3511
 13052  1080  2882               	goto	u3510
 13053  1081  2883               u3511:
 13054  1082                     	goto	l4042
 13055  1082  288A               u3510:
 13056  1083                     	line	334
 13057                           	
 13058                           l4040:	
 13059  1083                     ;main.c: 333:     char* Time = "Time:";;main.c: 334:     char* TimeSet = "Time Set";
 13060                           	movf	(DateDayScreen@Key),w
 13061  1083  0835               	fcall	_ChangeTrigger
 13062  1084  160A  118A  2669  160A  118A  	goto	l4042
 13063  1089  288A               	line	335
 13064                           ;main.c: 335: 
 13065                           	
 13066                           l176:	
 13067  108A                     	line	336
 13068                           	
 13069                           l4042:	
 13070  108A                     ;main.c: 336:     timeSecs = RealTimeClock_get_seconds();
 13071                           		movlw	6
 13072  108A  3006               	bcf	status, 5	;RP0=0, select bank0
 13073  108B  1283               	bcf	status, 6	;RP1=0, select bank0
 13074  108C  1303               	xorwf	((DateDayScreen@Key)),w
 13075  108D  0635               iorwf	((DateDayScreen@Key+1)),w
 13076  108E  0436               	btfss	status,2
 13077  108F  1D03               	goto	u3521
 13078  1090  2892               	goto	u3520
 13079  1091  2893               u3521:
 13080  1092                     	goto	l4046
 13081  1092  289A               u3520:
 13082  1093                     	line	338
 13083                           	
 13084                           l4044:	
 13085  1093                     ;main.c: 337:     timeMins = RealTimeClock_get_minutes();;main.c: 338:     timeHours = R
                                 ealTimeClock_get_hours();
 13086                           	movlw	low(01h)
 13087  1093  3001               	fcall	_LCD_Command
 13088  1094  160A  158A  202E  160A  118A  	line	339
 13089                           ;main.c: 339: 
 13090                           	goto	l181
 13091  1099  28AF               	line	340
 13092                           ;main.c: 340:     int setTime[3];
 13093                           	
 13094                           l177:	
 13095  109A                     	line	341
 13096                           	
 13097                           l4046:	
 13098  109A                     ;main.c: 341:     setTime[0] = timeHours;
 13099                           		movlw	7
 13100  109A  3007               	bcf	status, 5	;RP0=0, select bank0
 13101  109B  1283               	bcf	status, 6	;RP1=0, select bank0
 13102  109C  1303               	xorwf	((DateDayScreen@Key)),w
 13103  109D  0635               iorwf	((DateDayScreen@Key+1)),w
 13104  109E  0436               	btfss	status,2
 13105  109F  1D03               	goto	u3531
 13106  10A0  28A2               	goto	u3530
 13107  10A1  28A3               u3531:
 13108  10A2                     	goto	l175
 13109  10A2  2841               u3530:
 13110  10A3                     	line	343
 13111                           	
 13112                           l4048:	
 13113  10A3                     ;main.c: 342:     setTime[1] = timeMins;;main.c: 343:     setTime[2] = timeSecs;
 13114                           	movf	(DateDayScreen@Key+1),w
 13115  10A3  0836               	movwf	(SwapToHeatingDisplay@Key+1)
 13116  10A4  00F9               	movf	(DateDayScreen@Key),w
 13117  10A5  0835               	movwf	(SwapToHeatingDisplay@Key)
 13118  10A6  00F8               	fcall	_SwapToHeatingDisplay
 13119  10A7  160A  158A  278D  160A  118A  	goto	l175
 13120  10AC  2841               	line	344
 13121                           ;main.c: 344:     while(1)
 13122                           	
 13123                           l179:	
 13124  10AD                     	goto	l175
 13125  10AD  2841               	line	345
 13126                           ;main.c: 345:     {
 13127                           	
 13128                           l180:	
 13129  10AE                     	goto	l175
 13130  10AE  2841               	
 13131                           l178:	
 13132  10AF                     	line	346
 13133                           	
 13134                           l181:	
 13135  10AF                     	return
 13136  10AF  0008               	opt stack 0
 13137                           GLOBAL	__end_of_DateDayScreen
 13138                           	__end_of_DateDayScreen:
 13139  10B0                     	signat	_DateDayScreen,4217
 13140                           	global	_SwapToHeatingDisplay
 13141                           
 13142 ;; *************** function _SwapToHeatingDisplay *****************
 13143 ;; Defined at:
 13144 ;;		line 264 in file "main.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;  Key             2    8[COMMON] int 
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;  Off             1   13[COMMON] PTR unsigned char 
 13149 ;;		 -> STR_14(4), 
 13150 ;;  On              1   12[COMMON] PTR unsigned char 
 13151 ;;		 -> STR_13(3), 
 13152 ;;  Heat            1   11[COMMON] PTR unsigned char 
 13153 ;;		 -> STR_12(9), 
 13154 ;; Return value:  Size  Location     Type
 13155 ;;                  1    wreg      void 
 13156 ;; Registers used:
 13157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 13158 ;; Tracked objects:
 13159 ;;		On entry : 0/0
 13160 ;;		On exit  : 0/0
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13163 ;;      Params:         2       0       0       0       0
 13164 ;;      Locals:         3       0       0       0       0
 13165 ;;      Temps:          1       0       0       0       0
 13166 ;;      Totals:         6       0       0       0       0
 13167 ;;Total ram usage:        6 bytes
 13168 ;; Hardware stack levels used:    1
 13169 ;; Hardware stack levels required when called:    3
 13170 ;; This function calls:
 13171 ;;		_Keypad_Scan
 13172 ;;		_LCD_Command
 13173 ;;		_LCD_SendString
 13174 ;; This function is called by:
 13175 ;;		_DateDayScreen
 13176 ;;		_HeatingControlOff
 13177 ;;		_SoundAlarm
 13178 ;;		_main
 13179 ;; This function uses a non-reentrant model
 13180 ;;
 13181                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 13182                           	line	264
 13183                           global __ptext30
 13184                           __ptext30:	;psect for function _SwapToHeatingDisplay
 13185  1F8D                     psect	text30
 13186                           	file	"main.c"
 13187                           	line	264
 13188                           	global	__size_of_SwapToHeatingDisplay
 13189                           	__size_of_SwapToHeatingDisplay	equ	__end_of_SwapToHeatingDisplay-_SwapToHeatingDisplay

 13190  0073                     	
 13191                           _SwapToHeatingDisplay:	
 13192  1F8D                     ;incstack = 0
 13193                           	opt	stack 4
 13194                           ; Regs used in _SwapToHeatingDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
                                 k]
 13195                           	line	266
 13196                           	
 13197                           l3904:	
 13198  1F8D                     ;main.c: 264:             LCD_SendString(On);;main.c: 265:         };main.c: 266:       
                                   else if(IsHeatingOn == 0)
 13199                           	movlw	(low((((STR_12)-__stringbase)|8000h)))&0ffh
 13200  1F8D  3059               	movwf	(??_SwapToHeatingDisplay+0)+0
 13201  1F8E  00FA               	movf	(??_SwapToHeatingDisplay+0)+0,w
 13202  1F8F  087A               	movwf	(SwapToHeatingDisplay@Heat)
 13203  1F90  00FB               	line	268
 13204                           	
 13205                           l3906:	
 13206  1F91                     ;main.c: 268:             LCD_Command(0x14);
 13207                           	movlw	low(01h)
 13208  1F91  3001               	fcall	_LCD_Command
 13209  1F92  160A  158A  202E  160A  158A  	line	269
 13210                           	
 13211                           l3908:	
 13212  1F97                     ;main.c: 269:             LCD_SendString(Off);
 13213                           	movlw	(low((((STR_13)-__stringbase)|8000h)))&0ffh
 13214  1F97  304C               	movwf	(??_SwapToHeatingDisplay+0)+0
 13215  1F98  00FA               	movf	(??_SwapToHeatingDisplay+0)+0,w
 13216  1F99  087A               	movwf	(SwapToHeatingDisplay@On)
 13217  1F9A  00FC               	line	270
 13218                           	
 13219                           l3910:	
 13220  1F9B                     ;main.c: 270:         }
 13221                           	movlw	(low((((STR_14)-__stringbase)|8000h)))&0ffh
 13222  1F9B  3034               	movwf	(??_SwapToHeatingDisplay+0)+0
 13223  1F9C  00FA               	movf	(??_SwapToHeatingDisplay+0)+0,w
 13224  1F9D  087A               	movwf	(SwapToHeatingDisplay@Off)
 13225  1F9E  00FD               	goto	l3912
 13226  1F9F  2FA0               	line	271
 13227                           ;main.c: 271:     }
 13228                           	
 13229                           l157:	
 13230  1FA0                     	line	274
 13231                           	
 13232                           l3912:	
 13233  1FA0                     ;main.c: 272: };main.c: 274: 
 13234                           	fcall	_Keypad_Scan
 13235  1FA0  120A  118A  2051  160A  158A  	movf	(1+(?_Keypad_Scan)),w
 13236  1FA5  0877               	movwf	(SwapToHeatingDisplay@Key+1)
 13237  1FA6  00F9               	movf	(0+(?_Keypad_Scan)),w
 13238  1FA7  0876               	movwf	(SwapToHeatingDisplay@Key)
 13239  1FA8  00F8               	line	275
 13240                           	
 13241                           l3914:	
 13242  1FA9                     ;main.c: 275: void Switch24Hour(int Key)
 13243                           		movlw	7
 13244  1FA9  3007               	xorwf	((SwapToHeatingDisplay@Key)),w
 13245  1FAA  0678               iorwf	((SwapToHeatingDisplay@Key+1)),w
 13246  1FAB  0479               	btfss	status,2
 13247  1FAC  1D03               	goto	u3461
 13248  1FAD  2FAF               	goto	u3460
 13249  1FAE  2FB0               u3461:
 13250  1FAF                     	goto	l3918
 13251  1FAF  2FB7               u3460:
 13252  1FB0                     	line	277
 13253                           	
 13254                           l3916:	
 13255  1FB0                     ;main.c: 276: {;main.c: 277:     LCD_Command(0x01);
 13256                           	movlw	low(01h)
 13257  1FB0  3001               	fcall	_LCD_Command
 13258  1FB1  160A  158A  202E  160A  158A  	line	278
 13259                           ;main.c: 278:     char* c;
 13260                           	goto	l164
 13261  1FB6  2FFF               	line	279
 13262                           ;main.c: 279:     if(is24Hour == 1)
 13263                           	
 13264                           l158:	
 13265  1FB7                     	line	280
 13266                           	
 13267                           l3918:	
 13268  1FB7                     ;main.c: 280:     {
 13269                           	movlw	low(03h)
 13270  1FB7  3003               	fcall	_LCD_Command
 13271  1FB8  160A  158A  202E  160A  158A  	line	281
 13272                           	
 13273                           l3920:	
 13274  1FBD                     ;main.c: 281:         c = "24 Hour is on";
 13275                           		movf	(SwapToHeatingDisplay@Heat),w
 13276  1FBD  087B               	movwf	(LCD_SendString@string)
 13277  1FBE  00F1               	movlw	0
 13278  1FBF  3000               	btfss	status,2
 13279  1FC0  1D03               	movlw	080h
 13280  1FC1  3080               	movwf	(LCD_SendString@string+1)
 13281  1FC2  00F2               
 13282                           	fcall	_LCD_SendString
 13283  1FC3  160A  158A  2466  160A  158A  	line	283
 13284                           	
 13285                           l3922:	
 13286  1FC8                     ;main.c: 283:     while(1)
 13287                           	bsf	status, 5	;RP0=1, select bank1
 13288  1FC8  1683               	bcf	status, 6	;RP1=0, select bank1
 13289  1FC9  1303               		decf	((_IsHeatingOn)^080h),w
 13290  1FCA  0333               iorwf	((_IsHeatingOn+1)^080h),w
 13291  1FCB  0434               	btfss	status,2
 13292  1FCC  1D03               	goto	u3471
 13293  1FCD  2FCF               	goto	u3470
 13294  1FCE  2FD0               u3471:
 13295  1FCF                     	goto	l3928
 13296  1FCF  2FE2               u3470:
 13297  1FD0                     	line	285
 13298                           	
 13299                           l3924:	
 13300  1FD0                     ;main.c: 284:     {;main.c: 285:         LCD_Command(0x03);
 13301                           	movlw	low(014h)
 13302  1FD0  3014               	fcall	_LCD_Command
 13303  1FD1  160A  158A  202E  160A  158A  	line	286
 13304                           	
 13305                           l3926:	
 13306  1FD6                     ;main.c: 286:         LCD_SendString(c);
 13307                           		movf	(SwapToHeatingDisplay@On),w
 13308  1FD6  087C               	movwf	(LCD_SendString@string)
 13309  1FD7  00F1               	movlw	0
 13310  1FD8  3000               	btfss	status,2
 13311  1FD9  1D03               	movlw	080h
 13312  1FDA  3080               	movwf	(LCD_SendString@string+1)
 13313  1FDB  00F2               
 13314                           	fcall	_LCD_SendString
 13315  1FDC  160A  158A  2466  160A  158A  	line	287
 13316                           ;main.c: 287:         if (Key == 8)
 13317                           	goto	l3912
 13318  1FE1  2FA0               	line	288
 13319                           ;main.c: 288:         {
 13320                           	
 13321                           l160:	
 13322  1FE2                     	
 13323                           l3928:	
 13324  1FE2                     	bsf	status, 5	;RP0=1, select bank1
 13325  1FE2  1683               	bcf	status, 6	;RP1=0, select bank1
 13326  1FE3  1303               	movf	((_IsHeatingOn)^080h),w
 13327  1FE4  0833               iorwf	((_IsHeatingOn+1)^080h),w
 13328  1FE5  0434               	btfss	status,2
 13329  1FE6  1D03               	goto	u3481
 13330  1FE7  2FE9               	goto	u3480
 13331  1FE8  2FEA               u3481:
 13332  1FE9                     	goto	l3912
 13333  1FE9  2FA0               u3480:
 13334  1FEA                     	line	290
 13335                           	
 13336                           l3930:	
 13337  1FEA                     ;main.c: 289:             LCD_Command(0x01);;main.c: 290:             break;
 13338                           	movlw	low(014h)
 13339  1FEA  3014               	fcall	_LCD_Command
 13340  1FEB  160A  158A  202E  160A  158A  	line	291
 13341                           	
 13342                           l3932:	
 13343  1FF0                     ;main.c: 291:         }
 13344                           		movf	(SwapToHeatingDisplay@Off),w
 13345  1FF0  087D               	movwf	(LCD_SendString@string)
 13346  1FF1  00F1               	movlw	0
 13347  1FF2  3000               	btfss	status,2
 13348  1FF3  1D03               	movlw	080h
 13349  1FF4  3080               	movwf	(LCD_SendString@string+1)
 13350  1FF5  00F2               
 13351                           	fcall	_LCD_SendString
 13352  1FF6  160A  158A  2466  160A  158A  	goto	l3912
 13353  1FFB  2FA0               	line	292
 13354                           ;main.c: 292:     }
 13355                           	
 13356                           l162:	
 13357  1FFC                     	goto	l3912
 13358  1FFC  2FA0               	
 13359                           l161:	
 13360  1FFD                     	goto	l3912
 13361  1FFD  2FA0               	line	293
 13362                           ;main.c: 293: }
 13363                           	
 13364                           l163:	
 13365  1FFE                     	goto	l3912
 13366  1FFE  2FA0               	
 13367                           l159:	
 13368  1FFF                     	line	294
 13369                           	
 13370                           l164:	
 13371  1FFF                     	return
 13372  1FFF  0008               	opt stack 0
 13373                           GLOBAL	__end_of_SwapToHeatingDisplay
 13374                           	__end_of_SwapToHeatingDisplay:
 13375  2000                     	signat	_SwapToHeatingDisplay,4217
 13376                           	global	_LCD_SecondLine
 13377                           
 13378 ;; *************** function _LCD_SecondLine *****************
 13379 ;; Defined at:
 13380 ;;		line 49 in file "LCD.c"
 13381 ;; Parameters:    Size  Location     Type
 13382 ;;		None
 13383 ;; Auto vars:     Size  Location     Type
 13384 ;;		None
 13385 ;; Return value:  Size  Location     Type
 13386 ;;                  1    wreg      void 
 13387 ;; Registers used:
 13388 ;;		wreg, status,2, status,0, pclath, cstack
 13389 ;; Tracked objects:
 13390 ;;		On entry : 0/0
 13391 ;;		On exit  : 0/0
 13392 ;;		Unchanged: 0/0
 13393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13394 ;;      Params:         0       0       0       0       0
 13395 ;;      Locals:         0       0       0       0       0
 13396 ;;      Temps:          0       0       0       0       0
 13397 ;;      Totals:         0       0       0       0       0
 13398 ;;Total ram usage:        0 bytes
 13399 ;; Hardware stack levels used:    1
 13400 ;; Hardware stack levels required when called:    2
 13401 ;; This function calls:
 13402 ;;		_LCD_Command
 13403 ;; This function is called by:
 13404 ;;		_MainScreen
 13405 ;;		_DateDayScreen
 13406 ;; This function uses a non-reentrant model
 13407 ;;
 13408                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 13409                           	file	"LCD.c"
 13410                           	line	49
 13411                           global __ptext31
 13412                           __ptext31:	;psect for function _LCD_SecondLine
 13413  1818                     psect	text31
 13414                           	file	"LCD.c"
 13415                           	line	49
 13416                           	global	__size_of_LCD_SecondLine
 13417                           	__size_of_LCD_SecondLine	equ	__end_of_LCD_SecondLine-_LCD_SecondLine
 13418  0007                     	
 13419                           _LCD_SecondLine:	
 13420  1818                     ;incstack = 0
 13421                           	opt	stack 2
 13422                           ; Regs used in _LCD_SecondLine: [wreg+status,2+status,0+pclath+cstack]
 13423                           	line	51
 13424                           	
 13425                           l3816:	
 13426  1818                     ;LCD.c: 51:     LCD_Command(0xc0);
 13427                           	movlw	low(0C0h)
 13428  1818  30C0               	fcall	_LCD_Command
 13429  1819  160A  158A  202E  160A  158A  	line	52
 13430                           	
 13431                           l619:	
 13432  181E                     	return
 13433  181E  0008               	opt stack 0
 13434                           GLOBAL	__end_of_LCD_SecondLine
 13435                           	__end_of_LCD_SecondLine:
 13436  181F                     	signat	_LCD_SecondLine,89
 13437                           	global	_DisplayDay
 13438                           
 13439 ;; *************** function _DisplayDay *****************
 13440 ;; Defined at:
 13441 ;;		line 103 in file "main.c"
 13442 ;; Parameters:    Size  Location     Type
 13443 ;;		None
 13444 ;; Auto vars:     Size  Location     Type
 13445 ;;  Sunday          1   13[BANK0 ] PTR unsigned char 
 13446 ;;		 -> STR_7(7), 
 13447 ;;  Saturday        1   12[BANK0 ] PTR unsigned char 
 13448 ;;		 -> STR_6(9), 
 13449 ;;  Friday          1   11[BANK0 ] PTR unsigned char 
 13450 ;;		 -> STR_5(7), 
 13451 ;;  Thursday        1   10[BANK0 ] PTR unsigned char 
 13452 ;;		 -> STR_4(9), 
 13453 ;;  Wednesday       1    9[BANK0 ] PTR unsigned char 
 13454 ;;		 -> STR_3(10), 
 13455 ;;  Tuesday         1    8[BANK0 ] PTR unsigned char 
 13456 ;;		 -> STR_2(8), 
 13457 ;;  Monday          1    7[BANK0 ] PTR unsigned char 
 13458 ;;		 -> STR_1(7), 
 13459 ;; Return value:  Size  Location     Type
 13460 ;;                  1    wreg      void 
 13461 ;; Registers used:
 13462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 13463 ;; Tracked objects:
 13464 ;;		On entry : 0/0
 13465 ;;		On exit  : 0/0
 13466 ;;		Unchanged: 0/0
 13467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13468 ;;      Params:         0       0       0       0       0
 13469 ;;      Locals:         0       7       0       0       0
 13470 ;;      Temps:          1       0       0       0       0
 13471 ;;      Totals:         1       7       0       0       0
 13472 ;;Total ram usage:        8 bytes
 13473 ;; Hardware stack levels used:    1
 13474 ;; Hardware stack levels required when called:    3
 13475 ;; This function calls:
 13476 ;;		_LCD_SendString
 13477 ;;		_RealTimeClock_get_day_of_week
 13478 ;; This function is called by:
 13479 ;;		_DateDayScreen
 13480 ;; This function uses a non-reentrant model
 13481 ;;
 13482                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 13483                           	file	"main.c"
 13484                           	line	103
 13485                           global __ptext32
 13486                           __ptext32:	;psect for function _DisplayDay
 13487  10B0                     psect	text32
 13488                           	file	"main.c"
 13489                           	line	103
 13490                           	global	__size_of_DisplayDay
 13491                           	__size_of_DisplayDay	equ	__end_of_DisplayDay-_DisplayDay
 13492  00A8                     	
 13493                           _DisplayDay:	
 13494  10B0                     ;incstack = 0
 13495                           	opt	stack 1
 13496                           ; Regs used in _DisplayDay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 13497                           	line	106
 13498                           	
 13499                           l3770:	
 13500  10B0                     ;main.c: 106:             break;
 13501                           	fcall	_RealTimeClock_get_day_of_week
 13502  10B0  160A  158A  2223  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 13503  10B5  1283               	bcf	status, 6	;RP1=0, select bank0
 13504  10B6  1303               	movf	(1+(?_RealTimeClock_get_day_of_week)),w
 13505  10B7  0826               	movwf	(_day_of_week+1)
 13506  10B8  00EE               	movf	(0+(?_RealTimeClock_get_day_of_week)),w
 13507  10B9  0825               	movwf	(_day_of_week)
 13508  10BA  00ED               	line	107
 13509                           	
 13510                           l3772:	
 13511  10BB                     ;main.c: 107:         case 5:
 13512                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
 13513  10BB  309C               	movwf	(??_DisplayDay+0)+0
 13514  10BC  00FC               	movf	(??_DisplayDay+0)+0,w
 13515  10BD  087C               	movwf	(DisplayDay@Monday)
 13516  10BE  00A7               	line	108
 13517                           	
 13518                           l3774:	
 13519  10BF                     ;main.c: 108:             LCD_SendString(Friday);
 13520                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
 13521  10BF  3086               	movwf	(??_DisplayDay+0)+0
 13522  10C0  00FC               	movf	(??_DisplayDay+0)+0,w
 13523  10C1  087C               	movwf	(DisplayDay@Tuesday)
 13524  10C2  00A8               	line	109
 13525                           	
 13526                           l3776:	
 13527  10C3                     ;main.c: 109:             break;
 13528                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
 13529  10C3  304F               	movwf	(??_DisplayDay+0)+0
 13530  10C4  00FC               	movf	(??_DisplayDay+0)+0,w
 13531  10C5  087C               	movwf	(DisplayDay@Wednesday)
 13532  10C6  00A9               	line	110
 13533                           	
 13534                           l3778:	
 13535  10C7                     ;main.c: 110:         case 6:
 13536                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
 13537  10C7  307D               	movwf	(??_DisplayDay+0)+0
 13538  10C8  00FC               	movf	(??_DisplayDay+0)+0,w
 13539  10C9  087C               	movwf	(DisplayDay@Thursday)
 13540  10CA  00AA               	line	111
 13541                           	
 13542                           l3780:	
 13543  10CB                     ;main.c: 111:             LCD_SendString(Saturday);
 13544                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
 13545  10CB  3095               	movwf	(??_DisplayDay+0)+0
 13546  10CC  00FC               	movf	(??_DisplayDay+0)+0,w
 13547  10CD  087C               	movwf	(DisplayDay@Friday)
 13548  10CE  00AB               	line	112
 13549                           	
 13550                           l3782:	
 13551  10CF                     ;main.c: 112:             break;
 13552                           	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
 13553  10CF  3074               	movwf	(??_DisplayDay+0)+0
 13554  10D0  00FC               	movf	(??_DisplayDay+0)+0,w
 13555  10D1  087C               	movwf	(DisplayDay@Saturday)
 13556  10D2  00AC               	line	113
 13557                           	
 13558                           l3784:	
 13559  10D3                     ;main.c: 113:         case 7:
 13560                           	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
 13561  10D3  30A3               	movwf	(??_DisplayDay+0)+0
 13562  10D4  00FC               	movf	(??_DisplayDay+0)+0,w
 13563  10D5  087C               	movwf	(DisplayDay@Sunday)
 13564  10D6  00AD               	line	115
 13565                           ;main.c: 115:             break;
 13566                           	goto	l3802
 13567  10D7  2939               	line	117
 13568                           ;main.c: 116:     };main.c: 117: }
 13569                           	
 13570                           l120:	
 13571  10D8                     	line	118
 13572                           	
 13573                           l3786:	
 13574  10D8                     ;main.c: 118: 
 13575                           		movf	(DisplayDay@Monday),w
 13576  10D8  0827               	movwf	(LCD_SendString@string)
 13577  10D9  00F1               	movlw	0
 13578  10DA  3000               	btfss	status,2
 13579  10DB  1D03               	movlw	080h
 13580  10DC  3080               	movwf	(LCD_SendString@string+1)
 13581  10DD  00F2               
 13582                           	fcall	_LCD_SendString
 13583  10DE  160A  158A  2466  160A  118A  	line	119
 13584                           ;main.c: 119: 
 13585                           	goto	l128
 13586  10E3  2957               	line	120
 13587                           ;main.c: 120: void DisplayTemp(char* tempBuffer)
 13588                           	
 13589                           l122:	
 13590  10E4                     	line	121
 13591                           	
 13592                           l3788:	
 13593  10E4                     ;main.c: 121: {
 13594                           	bcf	status, 5	;RP0=0, select bank0
 13595  10E4  1283               	bcf	status, 6	;RP1=0, select bank0
 13596  10E5  1303               		movf	(DisplayDay@Tuesday),w
 13597  10E6  0828               	movwf	(LCD_SendString@string)
 13598  10E7  00F1               	movlw	0
 13599  10E8  3000               	btfss	status,2
 13600  10E9  1D03               	movlw	080h
 13601  10EA  3080               	movwf	(LCD_SendString@string+1)
 13602  10EB  00F2               
 13603                           	fcall	_LCD_SendString
 13604  10EC  160A  158A  2466  160A  118A  	line	122
 13605                           ;main.c: 122: 
 13606                           	goto	l128
 13607  10F1  2957               	line	123
 13608                           ;main.c: 123:     Get_Temp(tempBuffer);
 13609                           	
 13610                           l123:	
 13611  10F2                     	line	124
 13612                           	
 13613                           l3790:	
 13614  10F2                     ;main.c: 124: 
 13615                           	bcf	status, 5	;RP0=0, select bank0
 13616  10F2  1283               	bcf	status, 6	;RP1=0, select bank0
 13617  10F3  1303               		movf	(DisplayDay@Wednesday),w
 13618  10F4  0829               	movwf	(LCD_SendString@string)
 13619  10F5  00F1               	movlw	0
 13620  10F6  3000               	btfss	status,2
 13621  10F7  1D03               	movlw	080h
 13622  10F8  3080               	movwf	(LCD_SendString@string+1)
 13623  10F9  00F2               
 13624                           	fcall	_LCD_SendString
 13625  10FA  160A  158A  2466  160A  118A  	line	125
 13626                           ;main.c: 125:     LCD_SendString(tempBuffer);
 13627                           	goto	l128
 13628  10FF  2957               	line	126
 13629                           ;main.c: 126: 
 13630                           	
 13631                           l124:	
 13632  1100                     	line	127
 13633                           	
 13634                           l3792:	
 13635  1100                     ;main.c: 127:     LCD_SendData(0xDF);
 13636                           	bcf	status, 5	;RP0=0, select bank0
 13637  1100  1283               	bcf	status, 6	;RP1=0, select bank0
 13638  1101  1303               		movf	(DisplayDay@Thursday),w
 13639  1102  082A               	movwf	(LCD_SendString@string)
 13640  1103  00F1               	movlw	0
 13641  1104  3000               	btfss	status,2
 13642  1105  1D03               	movlw	080h
 13643  1106  3080               	movwf	(LCD_SendString@string+1)
 13644  1107  00F2               
 13645                           	fcall	_LCD_SendString
 13646  1108  160A  158A  2466  160A  118A  	line	128
 13647                           ;main.c: 128:     LCD_Busy();
 13648                           	goto	l128
 13649  110D  2957               	line	129
 13650                           ;main.c: 129: 
 13651                           	
 13652                           l125:	
 13653  110E                     	line	130
 13654                           	
 13655                           l3794:	
 13656  110E                     ;main.c: 130:     LCD_SendData('C');
 13657                           	bcf	status, 5	;RP0=0, select bank0
 13658  110E  1283               	bcf	status, 6	;RP1=0, select bank0
 13659  110F  1303               		movf	(DisplayDay@Friday),w
 13660  1110  082B               	movwf	(LCD_SendString@string)
 13661  1111  00F1               	movlw	0
 13662  1112  3000               	btfss	status,2
 13663  1113  1D03               	movlw	080h
 13664  1114  3080               	movwf	(LCD_SendString@string+1)
 13665  1115  00F2               
 13666                           	fcall	_LCD_SendString
 13667  1116  160A  158A  2466  160A  118A  	line	131
 13668                           ;main.c: 131: }
 13669                           	goto	l128
 13670  111B  2957               	line	132
 13671                           ;main.c: 132: 
 13672                           	
 13673                           l126:	
 13674  111C                     	line	133
 13675                           	
 13676                           l3796:	
 13677  111C                     ;main.c: 133: 
 13678                           	bcf	status, 5	;RP0=0, select bank0
 13679  111C  1283               	bcf	status, 6	;RP1=0, select bank0
 13680  111D  1303               		movf	(DisplayDay@Saturday),w
 13681  111E  082C               	movwf	(LCD_SendString@string)
 13682  111F  00F1               	movlw	0
 13683  1120  3000               	btfss	status,2
 13684  1121  1D03               	movlw	080h
 13685  1122  3080               	movwf	(LCD_SendString@string+1)
 13686  1123  00F2               
 13687                           	fcall	_LCD_SendString
 13688  1124  160A  158A  2466  160A  118A  	line	134
 13689                           ;main.c: 134: void MainScreen(void)
 13690                           	goto	l128
 13691  1129  2957               	line	135
 13692                           ;main.c: 135: {
 13693                           	
 13694                           l127:	
 13695  112A                     	line	136
 13696                           	
 13697                           l3798:	
 13698  112A                     ;main.c: 136: 
 13699                           	bcf	status, 5	;RP0=0, select bank0
 13700  112A  1283               	bcf	status, 6	;RP1=0, select bank0
 13701  112B  1303               		movf	(DisplayDay@Sunday),w
 13702  112C  082D               	movwf	(LCD_SendString@string)
 13703  112D  00F1               	movlw	0
 13704  112E  3000               	btfss	status,2
 13705  112F  1D03               	movlw	080h
 13706  1130  3080               	movwf	(LCD_SendString@string+1)
 13707  1131  00F2               
 13708                           	fcall	_LCD_SendString
 13709  1132  160A  158A  2466  160A  118A  	line	137
 13710                           ;main.c: 137:     char* Time = "Time:";
 13711                           	goto	l128
 13712  1137  2957               	line	138
 13713                           	
 13714                           l3800:	
 13715  1138                     ;main.c: 138:     char* Temp = "Temp:";
 13716                           	goto	l128
 13717  1138  2957               	
 13718                           l119:	
 13719  1139                     	
 13720                           l3802:	
 13721  1139                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 13722                           ; Switch size 1, requested type "space"
 13723                           ; Number of cases is 1, Range of values is 0 to 0
 13724                           ; switch strategies available:
 13725                           ; Name         Instructions Cycles
 13726                           ; simple_byte            4     3 (average)
 13727                           ; direct_byte           11     8 (fixed)
 13728                           ; jumptable            260     6 (fixed)
 13729                           ;	Chosen strategy is simple_byte
 13730                           
 13731                           	bcf	status, 5	;RP0=0, select bank0
 13732  1139  1283               	bcf	status, 6	;RP1=0, select bank0
 13733  113A  1303               	movf (_day_of_week+1),w
 13734  113B  086E               	opt asmopt_push
 13735                           	opt asmopt_off
 13736                           	xorlw	0^0	; case 0
 13737  113C  3A00               	skipnz
 13738  113D  1903               	goto	l4924
 13739  113E  2940               	goto	l128
 13740  113F  2957               	opt asmopt_pop
 13741                           	
 13742                           l4924:	
 13743  1140                     ; Switch size 1, requested type "space"
 13744                           ; Number of cases is 7, Range of values is 1 to 7
 13745                           ; switch strategies available:
 13746                           ; Name         Instructions Cycles
 13747                           ; simple_byte           22    12 (average)
 13748                           ; direct_byte           32    11 (fixed)
 13749                           ; jumptable            263     9 (fixed)
 13750                           ;	Chosen strategy is simple_byte
 13751                           
 13752                           	movf (_day_of_week),w
 13753  1140  086D               	opt asmopt_push
 13754                           	opt asmopt_off
 13755                           	xorlw	1^0	; case 1
 13756  1141  3A01               	skipnz
 13757  1142  1903               	goto	l3786
 13758  1143  28D8               	xorlw	2^1	; case 2
 13759  1144  3A03               	skipnz
 13760  1145  1903               	goto	l3788
 13761  1146  28E4               	xorlw	3^2	; case 3
 13762  1147  3A01               	skipnz
 13763  1148  1903               	goto	l3790
 13764  1149  28F2               	xorlw	4^3	; case 4
 13765  114A  3A07               	skipnz
 13766  114B  1903               	goto	l3792
 13767  114C  2900               	xorlw	5^4	; case 5
 13768  114D  3A01               	skipnz
 13769  114E  1903               	goto	l3794
 13770  114F  290E               	xorlw	6^5	; case 6
 13771  1150  3A03               	skipnz
 13772  1151  1903               	goto	l3796
 13773  1152  291C               	xorlw	7^6	; case 7
 13774  1153  3A01               	skipnz
 13775  1154  1903               	goto	l3798
 13776  1155  292A               	goto	l128
 13777  1156  2957               	opt asmopt_pop
 13778                           
 13779                           	
 13780                           l121:	
 13781  1157                     	line	139
 13782                           	
 13783                           l128:	
 13784  1157                     	return
 13785  1157  0008               	opt stack 0
 13786                           GLOBAL	__end_of_DisplayDay
 13787                           	__end_of_DisplayDay:
 13788  1158                     	signat	_DisplayDay,89
 13789                           	global	_RealTimeClock_get_day_of_week
 13790                           
 13791 ;; *************** function _RealTimeClock_get_day_of_week *****************
 13792 ;; Defined at:
 13793 ;;		line 128 in file "realtimeclock.c"
 13794 ;; Parameters:    Size  Location     Type
 13795 ;;		None
 13796 ;; Auto vars:     Size  Location     Type
 13797 ;;  c               1   11[COMMON] unsigned char 
 13798 ;; Return value:  Size  Location     Type
 13799 ;;                  2    5[BANK0 ] int 
 13800 ;; Registers used:
 13801 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 13802 ;; Tracked objects:
 13803 ;;		On entry : 0/0
 13804 ;;		On exit  : 0/0
 13805 ;;		Unchanged: 0/0
 13806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13807 ;;      Params:         0       2       0       0       0
 13808 ;;      Locals:         1       0       0       0       0
 13809 ;;      Temps:          1       0       0       0       0
 13810 ;;      Totals:         2       2       0       0       0
 13811 ;;Total ram usage:        4 bytes
 13812 ;; Hardware stack levels used:    1
 13813 ;; Hardware stack levels required when called:    2
 13814 ;; This function calls:
 13815 ;;		_RealTimeClock_read_byte
 13816 ;;		_RealTimeClock_write_byte
 13817 ;;		___hex_to_int
 13818 ;; This function is called by:
 13819 ;;		_DisplayDay
 13820 ;;		_main
 13821 ;; This function uses a non-reentrant model
 13822 ;;
 13823                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 13824                           	file	"realtimeclock.c"
 13825                           	line	128
 13826                           global __ptext33
 13827                           __ptext33:	;psect for function _RealTimeClock_get_day_of_week
 13828  1A23                     psect	text33
 13829                           	file	"realtimeclock.c"
 13830                           	line	128
 13831                           	global	__size_of_RealTimeClock_get_day_of_week
 13832                           	__size_of_RealTimeClock_get_day_of_week	equ	__end_of_RealTimeClock_get_day_of_week-_Rea
                                 lTimeClock_get_day_of_week
 13833  0022                     	
 13834                           _RealTimeClock_get_day_of_week:	
 13835  1A23                     ;incstack = 0
 13836                           	opt	stack 1
 13837                           ; Regs used in _RealTimeClock_get_day_of_week: [wreg+status,2+status,0+btemp+1+pclath+cs
                                 tack]
 13838                           	line	129
 13839                           	
 13840                           l3516:	
 13841  1A23                     ;realtimeclock.c: 129:     RB5 = 1;
 13842                           	bcf	status, 5	;RP0=0, select bank0
 13843  1A23  1283               	bcf	status, 6	;RP1=0, select bank0
 13844  1A24  1303               	bsf	(53/8),(53)&7	;volatile
 13845  1A25  1686               	line	130
 13846                           	
 13847                           l3518:	
 13848  1A26                     ;realtimeclock.c: 130:     RealTimeClock_write_byte(0x8b);
 13849                           	movlw	low(08Bh)
 13850  1A26  308B               	fcall	_RealTimeClock_write_byte
 13851  1A27  160A  158A  2328  160A  158A  	line	131
 13852                           ;realtimeclock.c: 131:     unsigned char c = RealTimeClock_read_byte();
 13853                           	fcall	_RealTimeClock_read_byte
 13854  1A2C  160A  158A  2534  160A  158A  	movwf	(??_RealTimeClock_get_day_of_week+0)+0
 13855  1A31  00FA               	movf	(??_RealTimeClock_get_day_of_week+0)+0,w
 13856  1A32  087A               	movwf	(RealTimeClock_get_day_of_week@c)
 13857  1A33  00FB               	line	132
 13858                           	
 13859                           l3520:	
 13860  1A34                     ;realtimeclock.c: 132:     RB5 = 0;
 13861                           	bcf	status, 5	;RP0=0, select bank0
 13862  1A34  1283               	bcf	status, 6	;RP1=0, select bank0
 13863  1A35  1303               	bcf	(53/8),(53)&7	;volatile
 13864  1A36  1286               	line	133
 13865                           	
 13866                           l3522:	
 13867  1A37                     ;realtimeclock.c: 133:     return __hex_to_int(c);
 13868                           	movf	(RealTimeClock_get_day_of_week@c),w
 13869  1A37  087B               	fcall	___hex_to_int
 13870  1A38  160A  158A  25C6  160A  158A  	movf	(1+(?___hex_to_int)),w
 13871  1A3D  0878               	bcf	status, 5	;RP0=0, select bank0
 13872  1A3E  1283               	bcf	status, 6	;RP1=0, select bank0
 13873  1A3F  1303               	movwf	(?_RealTimeClock_get_day_of_week+1)
 13874  1A40  00A6               	movf	(0+(?___hex_to_int)),w
 13875  1A41  0877               	movwf	(?_RealTimeClock_get_day_of_week)
 13876  1A42  00A5               	goto	l446
 13877  1A43  2A44               	
 13878                           l3524:	
 13879  1A44                     	line	134
 13880                           	
 13881                           l446:	
 13882  1A44                     	return
 13883  1A44  0008               	opt stack 0
 13884                           GLOBAL	__end_of_RealTimeClock_get_day_of_week
 13885                           	__end_of_RealTimeClock_get_day_of_week:
 13886  1A45                     	signat	_RealTimeClock_get_day_of_week,90
 13887                           	global	_DisplayDate
 13888                           
 13889 ;; *************** function _DisplayDate *****************
 13890 ;; Defined at:
 13891 ;;		line 83 in file "main.c"
 13892 ;; Parameters:    Size  Location     Type
 13893 ;;		None
 13894 ;; Auto vars:     Size  Location     Type
 13895 ;;		None
 13896 ;; Return value:  Size  Location     Type
 13897 ;;                  1    wreg      void 
 13898 ;; Registers used:
 13899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 13900 ;; Tracked objects:
 13901 ;;		On entry : 0/0
 13902 ;;		On exit  : 0/0
 13903 ;;		Unchanged: 0/0
 13904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13905 ;;      Params:         0       0       0       0       0
 13906 ;;      Locals:         0       0       0       0       0
 13907 ;;      Temps:          1       0       0       0       0
 13908 ;;      Totals:         1       0       0       0       0
 13909 ;;Total ram usage:        1 bytes
 13910 ;; Hardware stack levels used:    1
 13911 ;; Hardware stack levels required when called:    3
 13912 ;; This function calls:
 13913 ;;		_LCD_SendString
 13914 ;;		_RealTimeClock_get_day_of_month
 13915 ;;		_RealTimeClock_get_month
 13916 ;;		_RealTimeClock_get_year
 13917 ;;		___awdiv
 13918 ;;		___awmod
 13919 ;; This function is called by:
 13920 ;;		_DateDayScreen
 13921 ;; This function uses a non-reentrant model
 13922 ;;
 13923                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 13924                           	file	"main.c"
 13925                           	line	83
 13926                           global __ptext34
 13927                           __ptext34:	;psect for function _DisplayDate
 13928  123E                     psect	text34
 13929                           	file	"main.c"
 13930                           	line	83
 13931                           	global	__size_of_DisplayDate
 13932                           	__size_of_DisplayDate	equ	__end_of_DisplayDate-_DisplayDate
 13933  00E6                     	
 13934                           _DisplayDate:	
 13935  123E                     ;incstack = 0
 13936                           	opt	stack 1
 13937                           ; Regs used in _DisplayDate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 13938                           	line	86
 13939                           	
 13940                           l3748:	
 13941  123E                     ;main.c: 86:     char* Tuesday = ("Tuesday");
 13942                           	fcall	_RealTimeClock_get_month
 13943  123E  160A  158A  21DF  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 13944  1243  1283               	bcf	status, 6	;RP1=0, select bank0
 13945  1244  1303               	movf	(1+(?_RealTimeClock_get_month)),w
 13946  1245  0826               	movwf	(_month+1)
 13947  1246  00E6               	movf	(0+(?_RealTimeClock_get_month)),w
 13948  1247  0825               	movwf	(_month)
 13949  1248  00E5               	line	87
 13950                           ;main.c: 87:     char* Wednesday = ("Wednesday");
 13951                           	fcall	_RealTimeClock_get_day_of_month
 13952  1249  160A  158A  21BD  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 13953  124E  1283               	bcf	status, 6	;RP1=0, select bank0
 13954  124F  1303               	movf	(1+(?_RealTimeClock_get_day_of_month)),w
 13955  1250  0826               	movwf	(_day+1)
 13956  1251  00E4               	movf	(0+(?_RealTimeClock_get_day_of_month)),w
 13957  1252  0825               	movwf	(_day)
 13958  1253  00E3               	line	88
 13959                           ;main.c: 88:     char* Thursday = ("Thursday");
 13960                           	fcall	_RealTimeClock_get_year
 13961  1254  160A  158A  2201  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 13962  1259  1283               	bcf	status, 6	;RP1=0, select bank0
 13963  125A  1303               	movf	(1+(?_RealTimeClock_get_year)),w
 13964  125B  0826               	movwf	(_year+1)
 13965  125C  00E2               	movf	(0+(?_RealTimeClock_get_year)),w
 13966  125D  0825               	movwf	(_year)
 13967  125E  00E1               	line	90
 13968                           	
 13969                           l3750:	
 13970  125F                     ;main.c: 90:     char* Saturday = ("Saturday");
 13971                           	movlw	0Ah
 13972  125F  300A               	movwf	(___awmod@divisor)
 13973  1260  00F0               	movlw	0
 13974  1261  3000               	movwf	((___awmod@divisor))+1
 13975  1262  00F1               	movf	(_month+1),w
 13976  1263  0866               	movwf	(___awmod@dividend+1)
 13977  1264  00F3               	movf	(_month),w
 13978  1265  0865               	movwf	(___awmod@dividend)
 13979  1266  00F2               	fcall	___awmod
 13980  1267  160A  158A  26B9  160A  118A  	movf	(0+(?___awmod)),w
 13981  126C  0870               	addlw	030h
 13982  126D  3E30               	movwf	(??_DisplayDate+0)+0
 13983  126E  00FC               	movf	(??_DisplayDate+0)+0,w
 13984  126F  087C               	bsf	status, 5	;RP0=1, select bank3
 13985  1270  1683               	bsf	status, 6	;RP1=1, select bank3
 13986  1271  1703               	movwf	0+(_dateDisplayer)^0180h+04h
 13987  1272  00C4               	line	91
 13988                           	
 13989                           l3752:	
 13990  1273                     ;main.c: 91:     char* Sunday = ("Sunday");
 13991                           	movlw	0Ah
 13992  1273  300A               	movwf	(___awdiv@divisor)
 13993  1274  00F0               	movlw	0
 13994  1275  3000               	movwf	((___awdiv@divisor))+1
 13995  1276  00F1               	bcf	status, 5	;RP0=0, select bank0
 13996  1277  1283               	bcf	status, 6	;RP1=0, select bank0
 13997  1278  1303               	movf	(_month+1),w
 13998  1279  0866               	movwf	(___awdiv@dividend+1)
 13999  127A  00F3               	movf	(_month),w
 14000  127B  0865               	movwf	(___awdiv@dividend)
 14001  127C  00F2               	fcall	___awdiv
 14002  127D  160A  158A  271C  160A  118A  	movf	(1+(?___awdiv)),w
 14003  1282  0871               	bcf	status, 5	;RP0=0, select bank0
 14004  1283  1283               	bcf	status, 6	;RP1=0, select bank0
 14005  1284  1303               	movwf	(_month+1)
 14006  1285  00E6               	movf	(0+(?___awdiv)),w
 14007  1286  0870               	movwf	(_month)
 14008  1287  00E5               	line	92
 14009                           	
 14010                           l3754:	
 14011  1288                     ;main.c: 92: 
 14012                           	movlw	0Ah
 14013  1288  300A               	movwf	(___awmod@divisor)
 14014  1289  00F0               	movlw	0
 14015  128A  3000               	movwf	((___awmod@divisor))+1
 14016  128B  00F1               	movf	(_month+1),w
 14017  128C  0866               	movwf	(___awmod@dividend+1)
 14018  128D  00F3               	movf	(_month),w
 14019  128E  0865               	movwf	(___awmod@dividend)
 14020  128F  00F2               	fcall	___awmod
 14021  1290  160A  158A  26B9  160A  118A  	movf	(0+(?___awmod)),w
 14022  1295  0870               	addlw	030h
 14023  1296  3E30               	movwf	(??_DisplayDate+0)+0
 14024  1297  00FC               	movf	(??_DisplayDate+0)+0,w
 14025  1298  087C               	bsf	status, 5	;RP0=1, select bank3
 14026  1299  1683               	bsf	status, 6	;RP1=1, select bank3
 14027  129A  1703               	movwf	0+(_dateDisplayer)^0180h+03h
 14028  129B  00C3               	line	93
 14029                           	
 14030                           l3756:	
 14031  129C                     ;main.c: 93:     switch(day_of_week)
 14032                           	movlw	0Ah
 14033  129C  300A               	movwf	(___awmod@divisor)
 14034  129D  00F0               	movlw	0
 14035  129E  3000               	movwf	((___awmod@divisor))+1
 14036  129F  00F1               	bcf	status, 5	;RP0=0, select bank0
 14037  12A0  1283               	bcf	status, 6	;RP1=0, select bank0
 14038  12A1  1303               	movf	(_day+1),w
 14039  12A2  0864               	movwf	(___awmod@dividend+1)
 14040  12A3  00F3               	movf	(_day),w
 14041  12A4  0863               	movwf	(___awmod@dividend)
 14042  12A5  00F2               	fcall	___awmod
 14043  12A6  160A  158A  26B9  160A  118A  	movf	(0+(?___awmod)),w
 14044  12AB  0870               	addlw	030h
 14045  12AC  3E30               	movwf	(??_DisplayDate+0)+0
 14046  12AD  00FC               	movf	(??_DisplayDate+0)+0,w
 14047  12AE  087C               	bsf	status, 5	;RP0=1, select bank3
 14048  12AF  1683               	bsf	status, 6	;RP1=1, select bank3
 14049  12B0  1703               	movwf	0+(_dateDisplayer)^0180h+01h
 14050  12B1  00C1               	line	94
 14051                           	
 14052                           l3758:	
 14053  12B2                     ;main.c: 94:     {
 14054                           	movlw	0Ah
 14055  12B2  300A               	movwf	(___awdiv@divisor)
 14056  12B3  00F0               	movlw	0
 14057  12B4  3000               	movwf	((___awdiv@divisor))+1
 14058  12B5  00F1               	bcf	status, 5	;RP0=0, select bank0
 14059  12B6  1283               	bcf	status, 6	;RP1=0, select bank0
 14060  12B7  1303               	movf	(_day+1),w
 14061  12B8  0864               	movwf	(___awdiv@dividend+1)
 14062  12B9  00F3               	movf	(_day),w
 14063  12BA  0863               	movwf	(___awdiv@dividend)
 14064  12BB  00F2               	fcall	___awdiv
 14065  12BC  160A  158A  271C  160A  118A  	movf	(1+(?___awdiv)),w
 14066  12C1  0871               	bcf	status, 5	;RP0=0, select bank0
 14067  12C2  1283               	bcf	status, 6	;RP1=0, select bank0
 14068  12C3  1303               	movwf	(_day+1)
 14069  12C4  00E4               	movf	(0+(?___awdiv)),w
 14070  12C5  0870               	movwf	(_day)
 14071  12C6  00E3               	line	95
 14072                           	
 14073                           l3760:	
 14074  12C7                     ;main.c: 95:         case 1:
 14075                           	movlw	0Ah
 14076  12C7  300A               	movwf	(___awmod@divisor)
 14077  12C8  00F0               	movlw	0
 14078  12C9  3000               	movwf	((___awmod@divisor))+1
 14079  12CA  00F1               	movf	(_day+1),w
 14080  12CB  0864               	movwf	(___awmod@dividend+1)
 14081  12CC  00F3               	movf	(_day),w
 14082  12CD  0863               	movwf	(___awmod@dividend)
 14083  12CE  00F2               	fcall	___awmod
 14084  12CF  160A  158A  26B9  160A  118A  	movf	(0+(?___awmod)),w
 14085  12D4  0870               	addlw	030h
 14086  12D5  3E30               	movwf	(??_DisplayDate+0)+0
 14087  12D6  00FC               	movf	(??_DisplayDate+0)+0,w
 14088  12D7  087C               	bsf	status, 5	;RP0=1, select bank3
 14089  12D8  1683               	bsf	status, 6	;RP1=1, select bank3
 14090  12D9  1703               	movwf	(_dateDisplayer)^0180h
 14091  12DA  00C0               	line	96
 14092                           	
 14093                           l3762:	
 14094  12DB                     ;main.c: 96:             LCD_SendString(Monday);
 14095                           	movlw	0Ah
 14096  12DB  300A               	movwf	(___awmod@divisor)
 14097  12DC  00F0               	movlw	0
 14098  12DD  3000               	movwf	((___awmod@divisor))+1
 14099  12DE  00F1               	bcf	status, 5	;RP0=0, select bank0
 14100  12DF  1283               	bcf	status, 6	;RP1=0, select bank0
 14101  12E0  1303               	movf	(_year+1),w
 14102  12E1  0862               	movwf	(___awmod@dividend+1)
 14103  12E2  00F3               	movf	(_year),w
 14104  12E3  0861               	movwf	(___awmod@dividend)
 14105  12E4  00F2               	fcall	___awmod
 14106  12E5  160A  158A  26B9  160A  118A  	movf	(0+(?___awmod)),w
 14107  12EA  0870               	addlw	030h
 14108  12EB  3E30               	movwf	(??_DisplayDate+0)+0
 14109  12EC  00FC               	movf	(??_DisplayDate+0)+0,w
 14110  12ED  087C               	bsf	status, 5	;RP0=1, select bank3
 14111  12EE  1683               	bsf	status, 6	;RP1=1, select bank3
 14112  12EF  1703               	movwf	0+(_dateDisplayer)^0180h+07h
 14113  12F0  00C7               	line	97
 14114                           	
 14115                           l3764:	
 14116  12F1                     ;main.c: 97:             break;
 14117                           	movlw	0Ah
 14118  12F1  300A               	movwf	(___awdiv@divisor)
 14119  12F2  00F0               	movlw	0
 14120  12F3  3000               	movwf	((___awdiv@divisor))+1
 14121  12F4  00F1               	bcf	status, 5	;RP0=0, select bank0
 14122  12F5  1283               	bcf	status, 6	;RP1=0, select bank0
 14123  12F6  1303               	movf	(_year+1),w
 14124  12F7  0862               	movwf	(___awdiv@dividend+1)
 14125  12F8  00F3               	movf	(_year),w
 14126  12F9  0861               	movwf	(___awdiv@dividend)
 14127  12FA  00F2               	fcall	___awdiv
 14128  12FB  160A  158A  271C  160A  118A  	movf	(1+(?___awdiv)),w
 14129  1300  0871               	bcf	status, 5	;RP0=0, select bank0
 14130  1301  1283               	bcf	status, 6	;RP1=0, select bank0
 14131  1302  1303               	movwf	(_year+1)
 14132  1303  00E2               	movf	(0+(?___awdiv)),w
 14133  1304  0870               	movwf	(_year)
 14134  1305  00E1               	line	98
 14135                           	
 14136                           l3766:	
 14137  1306                     ;main.c: 98:         case 2:
 14138                           	movlw	0Ah
 14139  1306  300A               	movwf	(___awmod@divisor)
 14140  1307  00F0               	movlw	0
 14141  1308  3000               	movwf	((___awmod@divisor))+1
 14142  1309  00F1               	movf	(_year+1),w
 14143  130A  0862               	movwf	(___awmod@dividend+1)
 14144  130B  00F3               	movf	(_year),w
 14145  130C  0861               	movwf	(___awmod@dividend)
 14146  130D  00F2               	fcall	___awmod
 14147  130E  160A  158A  26B9  160A  118A  	movf	(0+(?___awmod)),w
 14148  1313  0870               	addlw	030h
 14149  1314  3E30               	movwf	(??_DisplayDate+0)+0
 14150  1315  00FC               	movf	(??_DisplayDate+0)+0,w
 14151  1316  087C               	bsf	status, 5	;RP0=1, select bank3
 14152  1317  1683               	bsf	status, 6	;RP1=1, select bank3
 14153  1318  1703               	movwf	0+(_dateDisplayer)^0180h+06h
 14154  1319  00C6               	line	99
 14155                           	
 14156                           l3768:	
 14157  131A                     ;main.c: 99:             LCD_SendString(Tuesday);
 14158                           	movlw	(low(_dateDisplayer|((0x1)<<8))&0ffh)
 14159  131A  30C0               	movwf	(LCD_SendString@string)
 14160  131B  00F1               	movlw	(0x1)
 14161  131C  3001               	movwf	(LCD_SendString@string+1)
 14162  131D  00F2               	fcall	_LCD_SendString
 14163  131E  160A  158A  2466  160A  118A  	line	100
 14164                           	
 14165                           l116:	
 14166  1323                     	return
 14167  1323  0008               	opt stack 0
 14168                           GLOBAL	__end_of_DisplayDate
 14169                           	__end_of_DisplayDate:
 14170  1324                     	signat	_DisplayDate,89
 14171                           	global	_RealTimeClock_get_year
 14172                           
 14173 ;; *************** function _RealTimeClock_get_year *****************
 14174 ;; Defined at:
 14175 ;;		line 136 in file "realtimeclock.c"
 14176 ;; Parameters:    Size  Location     Type
 14177 ;;		None
 14178 ;; Auto vars:     Size  Location     Type
 14179 ;;  c               1   11[COMMON] unsigned char 
 14180 ;; Return value:  Size  Location     Type
 14181 ;;                  2    5[BANK0 ] int 
 14182 ;; Registers used:
 14183 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 14184 ;; Tracked objects:
 14185 ;;		On entry : 0/0
 14186 ;;		On exit  : 0/0
 14187 ;;		Unchanged: 0/0
 14188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14189 ;;      Params:         0       2       0       0       0
 14190 ;;      Locals:         1       0       0       0       0
 14191 ;;      Temps:          1       0       0       0       0
 14192 ;;      Totals:         2       2       0       0       0
 14193 ;;Total ram usage:        4 bytes
 14194 ;; Hardware stack levels used:    1
 14195 ;; Hardware stack levels required when called:    2
 14196 ;; This function calls:
 14197 ;;		_RealTimeClock_read_byte
 14198 ;;		_RealTimeClock_write_byte
 14199 ;;		___hex_to_int
 14200 ;; This function is called by:
 14201 ;;		_DisplayDate
 14202 ;;		_SetDate
 14203 ;; This function uses a non-reentrant model
 14204 ;;
 14205                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
 14206                           	file	"realtimeclock.c"
 14207                           	line	136
 14208                           global __ptext35
 14209                           __ptext35:	;psect for function _RealTimeClock_get_year
 14210  1A01                     psect	text35
 14211                           	file	"realtimeclock.c"
 14212                           	line	136
 14213                           	global	__size_of_RealTimeClock_get_year
 14214                           	__size_of_RealTimeClock_get_year	equ	__end_of_RealTimeClock_get_year-_RealTimeClock_get
                                 _year
 14215  0022                     	
 14216                           _RealTimeClock_get_year:	
 14217  1A01                     ;incstack = 0
 14218                           	opt	stack 3
 14219                           ; Regs used in _RealTimeClock_get_year: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 14220                           	line	137
 14221                           	
 14222                           l3506:	
 14223  1A01                     ;realtimeclock.c: 137:     RB5 = 1;
 14224                           	bcf	status, 5	;RP0=0, select bank0
 14225  1A01  1283               	bcf	status, 6	;RP1=0, select bank0
 14226  1A02  1303               	bsf	(53/8),(53)&7	;volatile
 14227  1A03  1686               	line	138
 14228                           	
 14229                           l3508:	
 14230  1A04                     ;realtimeclock.c: 138:     RealTimeClock_write_byte(0x8d);
 14231                           	movlw	low(08Dh)
 14232  1A04  308D               	fcall	_RealTimeClock_write_byte
 14233  1A05  160A  158A  2328  160A  158A  	line	139
 14234                           ;realtimeclock.c: 139:     unsigned char c = RealTimeClock_read_byte();
 14235                           	fcall	_RealTimeClock_read_byte
 14236  1A0A  160A  158A  2534  160A  158A  	movwf	(??_RealTimeClock_get_year+0)+0
 14237  1A0F  00FA               	movf	(??_RealTimeClock_get_year+0)+0,w
 14238  1A10  087A               	movwf	(RealTimeClock_get_year@c)
 14239  1A11  00FB               	line	140
 14240                           	
 14241                           l3510:	
 14242  1A12                     ;realtimeclock.c: 140:     RB5 = 0;
 14243                           	bcf	status, 5	;RP0=0, select bank0
 14244  1A12  1283               	bcf	status, 6	;RP1=0, select bank0
 14245  1A13  1303               	bcf	(53/8),(53)&7	;volatile
 14246  1A14  1286               	line	141
 14247                           	
 14248                           l3512:	
 14249  1A15                     ;realtimeclock.c: 141:     return __hex_to_int(c);
 14250                           	movf	(RealTimeClock_get_year@c),w
 14251  1A15  087B               	fcall	___hex_to_int
 14252  1A16  160A  158A  25C6  160A  158A  	movf	(1+(?___hex_to_int)),w
 14253  1A1B  0878               	bcf	status, 5	;RP0=0, select bank0
 14254  1A1C  1283               	bcf	status, 6	;RP1=0, select bank0
 14255  1A1D  1303               	movwf	(?_RealTimeClock_get_year+1)
 14256  1A1E  00A6               	movf	(0+(?___hex_to_int)),w
 14257  1A1F  0877               	movwf	(?_RealTimeClock_get_year)
 14258  1A20  00A5               	goto	l449
 14259  1A21  2A22               	
 14260                           l3514:	
 14261  1A22                     	line	142
 14262                           	
 14263                           l449:	
 14264  1A22                     	return
 14265  1A22  0008               	opt stack 0
 14266                           GLOBAL	__end_of_RealTimeClock_get_year
 14267                           	__end_of_RealTimeClock_get_year:
 14268  1A23                     	signat	_RealTimeClock_get_year,90
 14269                           	global	_RealTimeClock_get_month
 14270                           
 14271 ;; *************** function _RealTimeClock_get_month *****************
 14272 ;; Defined at:
 14273 ;;		line 120 in file "realtimeclock.c"
 14274 ;; Parameters:    Size  Location     Type
 14275 ;;		None
 14276 ;; Auto vars:     Size  Location     Type
 14277 ;;  c               1   11[COMMON] unsigned char 
 14278 ;; Return value:  Size  Location     Type
 14279 ;;                  2    5[BANK0 ] int 
 14280 ;; Registers used:
 14281 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 14282 ;; Tracked objects:
 14283 ;;		On entry : 0/0
 14284 ;;		On exit  : 0/0
 14285 ;;		Unchanged: 0/0
 14286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14287 ;;      Params:         0       2       0       0       0
 14288 ;;      Locals:         1       0       0       0       0
 14289 ;;      Temps:          1       0       0       0       0
 14290 ;;      Totals:         2       2       0       0       0
 14291 ;;Total ram usage:        4 bytes
 14292 ;; Hardware stack levels used:    1
 14293 ;; Hardware stack levels required when called:    2
 14294 ;; This function calls:
 14295 ;;		_RealTimeClock_read_byte
 14296 ;;		_RealTimeClock_write_byte
 14297 ;;		___hex_to_int
 14298 ;; This function is called by:
 14299 ;;		_DisplayDate
 14300 ;;		_SetDate
 14301 ;; This function uses a non-reentrant model
 14302 ;;
 14303                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 14304                           	line	120
 14305                           global __ptext36
 14306                           __ptext36:	;psect for function _RealTimeClock_get_month
 14307  19DF                     psect	text36
 14308                           	file	"realtimeclock.c"
 14309                           	line	120
 14310                           	global	__size_of_RealTimeClock_get_month
 14311                           	__size_of_RealTimeClock_get_month	equ	__end_of_RealTimeClock_get_month-_RealTimeClock_g
                                 et_month
 14312  0022                     	
 14313                           _RealTimeClock_get_month:	
 14314  19DF                     ;incstack = 0
 14315                           	opt	stack 3
 14316                           ; Regs used in _RealTimeClock_get_month: [wreg+status,2+status,0+btemp+1+pclath+cstack]

 14317                           	line	121
 14318                           	
 14319                           l3486:	
 14320  19DF                     ;realtimeclock.c: 121:     RB5 = 1;
 14321                           	bcf	status, 5	;RP0=0, select bank0
 14322  19DF  1283               	bcf	status, 6	;RP1=0, select bank0
 14323  19E0  1303               	bsf	(53/8),(53)&7	;volatile
 14324  19E1  1686               	line	122
 14325                           	
 14326                           l3488:	
 14327  19E2                     ;realtimeclock.c: 122:     RealTimeClock_write_byte(0x89);
 14328                           	movlw	low(089h)
 14329  19E2  3089               	fcall	_RealTimeClock_write_byte
 14330  19E3  160A  158A  2328  160A  158A  	line	123
 14331                           ;realtimeclock.c: 123:     unsigned char c = RealTimeClock_read_byte();
 14332                           	fcall	_RealTimeClock_read_byte
 14333  19E8  160A  158A  2534  160A  158A  	movwf	(??_RealTimeClock_get_month+0)+0
 14334  19ED  00FA               	movf	(??_RealTimeClock_get_month+0)+0,w
 14335  19EE  087A               	movwf	(RealTimeClock_get_month@c)
 14336  19EF  00FB               	line	124
 14337                           	
 14338                           l3490:	
 14339  19F0                     ;realtimeclock.c: 124:     RB5 = 0;
 14340                           	bcf	status, 5	;RP0=0, select bank0
 14341  19F0  1283               	bcf	status, 6	;RP1=0, select bank0
 14342  19F1  1303               	bcf	(53/8),(53)&7	;volatile
 14343  19F2  1286               	line	125
 14344                           	
 14345                           l3492:	
 14346  19F3                     ;realtimeclock.c: 125:     return __hex_to_int(c);
 14347                           	movf	(RealTimeClock_get_month@c),w
 14348  19F3  087B               	fcall	___hex_to_int
 14349  19F4  160A  158A  25C6  160A  158A  	movf	(1+(?___hex_to_int)),w
 14350  19F9  0878               	bcf	status, 5	;RP0=0, select bank0
 14351  19FA  1283               	bcf	status, 6	;RP1=0, select bank0
 14352  19FB  1303               	movwf	(?_RealTimeClock_get_month+1)
 14353  19FC  00A6               	movf	(0+(?___hex_to_int)),w
 14354  19FD  0877               	movwf	(?_RealTimeClock_get_month)
 14355  19FE  00A5               	goto	l443
 14356  19FF  2A00               	
 14357                           l3494:	
 14358  1A00                     	line	126
 14359                           	
 14360                           l443:	
 14361  1A00                     	return
 14362  1A00  0008               	opt stack 0
 14363                           GLOBAL	__end_of_RealTimeClock_get_month
 14364                           	__end_of_RealTimeClock_get_month:
 14365  1A01                     	signat	_RealTimeClock_get_month,90
 14366                           	global	_RealTimeClock_get_day_of_month
 14367                           
 14368 ;; *************** function _RealTimeClock_get_day_of_month *****************
 14369 ;; Defined at:
 14370 ;;		line 112 in file "realtimeclock.c"
 14371 ;; Parameters:    Size  Location     Type
 14372 ;;		None
 14373 ;; Auto vars:     Size  Location     Type
 14374 ;;  c               1   11[COMMON] unsigned char 
 14375 ;; Return value:  Size  Location     Type
 14376 ;;                  2    5[BANK0 ] int 
 14377 ;; Registers used:
 14378 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 14379 ;; Tracked objects:
 14380 ;;		On entry : 0/0
 14381 ;;		On exit  : 0/0
 14382 ;;		Unchanged: 0/0
 14383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14384 ;;      Params:         0       2       0       0       0
 14385 ;;      Locals:         1       0       0       0       0
 14386 ;;      Temps:          1       0       0       0       0
 14387 ;;      Totals:         2       2       0       0       0
 14388 ;;Total ram usage:        4 bytes
 14389 ;; Hardware stack levels used:    1
 14390 ;; Hardware stack levels required when called:    2
 14391 ;; This function calls:
 14392 ;;		_RealTimeClock_read_byte
 14393 ;;		_RealTimeClock_write_byte
 14394 ;;		___hex_to_int
 14395 ;; This function is called by:
 14396 ;;		_DisplayDate
 14397 ;;		_SetDate
 14398 ;; This function uses a non-reentrant model
 14399 ;;
 14400                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
 14401                           	line	112
 14402                           global __ptext37
 14403                           __ptext37:	;psect for function _RealTimeClock_get_day_of_month
 14404  19BD                     psect	text37
 14405                           	file	"realtimeclock.c"
 14406                           	line	112
 14407                           	global	__size_of_RealTimeClock_get_day_of_month
 14408                           	__size_of_RealTimeClock_get_day_of_month	equ	__end_of_RealTimeClock_get_day_of_month-_R
                                 ealTimeClock_get_day_of_month
 14409  0022                     	
 14410                           _RealTimeClock_get_day_of_month:	
 14411  19BD                     ;incstack = 0
 14412                           	opt	stack 3
 14413                           ; Regs used in _RealTimeClock_get_day_of_month: [wreg+status,2+status,0+btemp+1+pclath+c
                                 stack]
 14414                           	line	113
 14415                           	
 14416                           l3496:	
 14417  19BD                     ;realtimeclock.c: 113:     RB5 = 1;
 14418                           	bcf	status, 5	;RP0=0, select bank0
 14419  19BD  1283               	bcf	status, 6	;RP1=0, select bank0
 14420  19BE  1303               	bsf	(53/8),(53)&7	;volatile
 14421  19BF  1686               	line	114
 14422                           	
 14423                           l3498:	
 14424  19C0                     ;realtimeclock.c: 114:     RealTimeClock_write_byte(0x87);
 14425                           	movlw	low(087h)
 14426  19C0  3087               	fcall	_RealTimeClock_write_byte
 14427  19C1  160A  158A  2328  160A  158A  	line	115
 14428                           ;realtimeclock.c: 115:     unsigned char c = RealTimeClock_read_byte();
 14429                           	fcall	_RealTimeClock_read_byte
 14430  19C6  160A  158A  2534  160A  158A  	movwf	(??_RealTimeClock_get_day_of_month+0)+0
 14431  19CB  00FA               	movf	(??_RealTimeClock_get_day_of_month+0)+0,w
 14432  19CC  087A               	movwf	(RealTimeClock_get_day_of_month@c)
 14433  19CD  00FB               	line	116
 14434                           	
 14435                           l3500:	
 14436  19CE                     ;realtimeclock.c: 116:     RB5 = 0;
 14437                           	bcf	status, 5	;RP0=0, select bank0
 14438  19CE  1283               	bcf	status, 6	;RP1=0, select bank0
 14439  19CF  1303               	bcf	(53/8),(53)&7	;volatile
 14440  19D0  1286               	line	117
 14441                           	
 14442                           l3502:	
 14443  19D1                     ;realtimeclock.c: 117:     return __hex_to_int(c);
 14444                           	movf	(RealTimeClock_get_day_of_month@c),w
 14445  19D1  087B               	fcall	___hex_to_int
 14446  19D2  160A  158A  25C6  160A  158A  	movf	(1+(?___hex_to_int)),w
 14447  19D7  0878               	bcf	status, 5	;RP0=0, select bank0
 14448  19D8  1283               	bcf	status, 6	;RP1=0, select bank0
 14449  19D9  1303               	movwf	(?_RealTimeClock_get_day_of_month+1)
 14450  19DA  00A6               	movf	(0+(?___hex_to_int)),w
 14451  19DB  0877               	movwf	(?_RealTimeClock_get_day_of_month)
 14452  19DC  00A5               	goto	l440
 14453  19DD  29DE               	
 14454                           l3504:	
 14455  19DE                     	line	118
 14456                           	
 14457                           l440:	
 14458  19DE                     	return
 14459  19DE  0008               	opt stack 0
 14460                           GLOBAL	__end_of_RealTimeClock_get_day_of_month
 14461                           	__end_of_RealTimeClock_get_day_of_month:
 14462  19DF                     	signat	_RealTimeClock_get_day_of_month,90
 14463                           	global	_ChangeTrigger
 14464                           
 14465 ;; *************** function _ChangeTrigger *****************
 14466 ;; Defined at:
 14467 ;;		line 176 in file "main.c"
 14468 ;; Parameters:    Size  Location     Type
 14469 ;;  Key             1    wreg     unsigned char 
 14470 ;; Auto vars:     Size  Location     Type
 14471 ;;  Key             1   16[BANK0 ] unsigned char 
 14472 ;;  digits          3   10[BANK0 ] unsigned char [3]
 14473 ;;  i               2   17[BANK0 ] int 
 14474 ;;  decimal         1   15[BANK0 ] unsigned char 
 14475 ;;  triggerTempC    4    6[BANK0 ] int [2]
 14476 ;;  i               2   19[BANK0 ] int 
 14477 ;;  TriggerSet      1   14[BANK0 ] PTR unsigned char 
 14478 ;;		 -> STR_11(12), 
 14479 ;;  Trigger         1   13[BANK0 ] PTR unsigned char 
 14480 ;;		 -> STR_10(9), 
 14481 ;; Return value:  Size  Location     Type
 14482 ;;                  1    wreg      void 
 14483 ;; Registers used:
 14484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 14485 ;; Tracked objects:
 14486 ;;		On entry : 0/0
 14487 ;;		On exit  : 0/0
 14488 ;;		Unchanged: 0/0
 14489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14490 ;;      Params:         0       0       0       0       0
 14491 ;;      Locals:         0      15       0       0       0
 14492 ;;      Temps:          0       6       0       0       0
 14493 ;;      Totals:         0      21       0       0       0
 14494 ;;Total ram usage:       21 bytes
 14495 ;; Hardware stack levels used:    1
 14496 ;; Hardware stack levels required when called:    3
 14497 ;; This function calls:
 14498 ;;		_Keypad_Scan
 14499 ;;		_LCD_Busy
 14500 ;;		_LCD_Command
 14501 ;;		_LCD_SendData
 14502 ;;		_LCD_SendString
 14503 ;;		_Main_Delay
 14504 ;;		___awdiv
 14505 ;;		___awmod
 14506 ;; This function is called by:
 14507 ;;		_DateDayScreen
 14508 ;;		_HeatingControlOff
 14509 ;;		_SoundAlarm
 14510 ;;		_main
 14511 ;; This function uses a non-reentrant model
 14512 ;;
 14513                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
 14514                           	file	"main.c"
 14515                           	line	176
 14516                           global __ptext38
 14517                           __ptext38:	;psect for function _ChangeTrigger
 14518  1669                     psect	text38
 14519                           	file	"main.c"
 14520                           	line	176
 14521                           	global	__size_of_ChangeTrigger
 14522                           	__size_of_ChangeTrigger	equ	__end_of_ChangeTrigger-_ChangeTrigger
 14523  0197                     	
 14524                           _ChangeTrigger:	
 14525  1669                     ;incstack = 0
 14526                           	opt	stack 1
 14527                           ; Regs used in _ChangeTrigger: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 14528                           ;ChangeTrigger@Key stored from wreg
 14529                           	bcf	status, 5	;RP0=0, select bank0
 14530  1669  1283               	bcf	status, 6	;RP1=0, select bank0
 14531  166A  1303               	movwf	(ChangeTrigger@Key)
 14532  166B  00B0               	line	179
 14533                           	
 14534                           l3818:	
 14535  166C                     ;main.c: 176: ;main.c: 177:             if(Key == 1);main.c: 179:                 LCD_Co
                                 mmand(0x01);
 14536                           	movlw	low(01h)
 14537  166C  3001               	fcall	_LCD_Command
 14538  166D  160A  158A  202E  160A  118A  	line	181
 14539                           	
 14540                           l3820:	
 14541  1672                     ;main.c: 181:                 LCD_SendString(TriggerSet);
 14542                           	bcf	status, 5	;RP0=0, select bank0
 14543  1672  1283               	bcf	status, 6	;RP1=0, select bank0
 14544  1673  1303               	clrf	(ChangeTrigger@i)
 14545  1674  01B3               	clrf	(ChangeTrigger@i+1)
 14546  1675  01B4               	line	183
 14547                           	
 14548                           l3822:	
 14549  1676                     ;main.c: 183:                 LCD_Command(0x01);
 14550                           	bsf	status, 5	;RP0=1, select bank3
 14551  1676  1683               	bsf	status, 6	;RP1=1, select bank3
 14552  1677  1703               	movf	(ChangeTrigger@F955+3)^0180h,w
 14553  1678  0855               	bcf	status, 5	;RP0=0, select bank0
 14554  1679  1283               	bcf	status, 6	;RP1=0, select bank0
 14555  167A  1303               	movwf	(ChangeTrigger@triggerTempChange+3)
 14556  167B  00A9               	bsf	status, 5	;RP0=1, select bank3
 14557  167C  1683               	bsf	status, 6	;RP1=1, select bank3
 14558  167D  1703               	movf	(ChangeTrigger@F955+2)^0180h,w
 14559  167E  0854               	bcf	status, 5	;RP0=0, select bank0
 14560  167F  1283               	bcf	status, 6	;RP1=0, select bank0
 14561  1680  1303               	movwf	(ChangeTrigger@triggerTempChange+2)
 14562  1681  00A8               	bsf	status, 5	;RP0=1, select bank3
 14563  1682  1683               	bsf	status, 6	;RP1=1, select bank3
 14564  1683  1703               	movf	(ChangeTrigger@F955+1)^0180h,w
 14565  1684  0853               	bcf	status, 5	;RP0=0, select bank0
 14566  1685  1283               	bcf	status, 6	;RP1=0, select bank0
 14567  1686  1303               	movwf	(ChangeTrigger@triggerTempChange+1)
 14568  1687  00A7               	bsf	status, 5	;RP0=1, select bank3
 14569  1688  1683               	bsf	status, 6	;RP1=1, select bank3
 14570  1689  1703               	movf	(ChangeTrigger@F955)^0180h,w
 14571  168A  0852               	bcf	status, 5	;RP0=0, select bank0
 14572  168B  1283               	bcf	status, 6	;RP1=0, select bank0
 14573  168C  1303               	movwf	(ChangeTrigger@triggerTempChange)
 14574  168D  00A6               
 14575                           	line	184
 14576                           	
 14577                           l3824:	
 14578  168E                     ;main.c: 184:                 break;
 14579                           	movlw	(low((((STR_10)-__stringbase)|8000h)))&0ffh
 14580  168E  3062               	movwf	(??_ChangeTrigger+0)+0
 14581  168F  00A0               	movf	(??_ChangeTrigger+0)+0,w
 14582  1690  0820               	movwf	(ChangeTrigger@Trigger)
 14583  1691  00AD               	line	185
 14584                           	
 14585                           l3826:	
 14586  1692                     ;main.c: 185:             }
 14587                           	movlw	(low((((STR_11)-__stringbase)|8000h)))&0ffh
 14588  1692  3038               	movwf	(??_ChangeTrigger+0)+0
 14589  1693  00A0               	movf	(??_ChangeTrigger+0)+0,w
 14590  1694  0820               	movwf	(ChangeTrigger@TriggerSet)
 14591  1695  00AE               	goto	l3828
 14592  1696  2E97               	line	186
 14593                           ;main.c: 186: 
 14594                           	
 14595                           l139:	
 14596  1697                     	line	193
 14597                           	
 14598                           l3828:	
 14599  1697                     ;main.c: 187:             switch(Key);main.c: 189: ;main.c: 191:                     if(
                                 i == 0);main.c: 193:                     else
 14600                           	movlw	low(03h)
 14601  1697  3003               	fcall	_LCD_Command
 14602  1698  160A  158A  202E  160A  118A  	line	195
 14603                           	
 14604                           l3830:	
 14605  169D                     ;main.c: 195:                     break;
 14606                           	bcf	status, 5	;RP0=0, select bank0
 14607  169D  1283               	bcf	status, 6	;RP1=0, select bank0
 14608  169E  1303               		movf	(ChangeTrigger@Trigger),w
 14609  169F  082D               	movwf	(LCD_SendString@string)
 14610  16A0  00F1               	movlw	0
 14611  16A1  3000               	btfss	status,2
 14612  16A2  1D03               	movlw	080h
 14613  16A3  3080               	movwf	(LCD_SendString@string+1)
 14614  16A4  00F2               
 14615                           	fcall	_LCD_SendString
 14616  16A5  160A  158A  2466  160A  118A  	line	197
 14617                           	
 14618                           l3832:	
 14619  16AA                     ;main.c: 197: 
 14620                           	fcall	_Keypad_Scan
 14621  16AA  120A  118A  2051  160A  118A  	movf	(0+(?_Keypad_Scan)),w
 14622  16AF  0876               	bcf	status, 5	;RP0=0, select bank0
 14623  16B0  1283               	bcf	status, 6	;RP1=0, select bank0
 14624  16B1  1303               	movwf	(??_ChangeTrigger+0)+0
 14625  16B2  00A0               	movf	(??_ChangeTrigger+0)+0,w
 14626  16B3  0820               	movwf	(ChangeTrigger@Key)
 14627  16B4  00B0               	line	199
 14628                           	
 14629                           l3834:	
 14630  16B5                     ;main.c: 199:                     {
 14631                           		decf	((ChangeTrigger@Key)),w
 14632  16B5  0330               	btfss	status,2
 14633  16B6  1D03               	goto	u3401
 14634  16B7  2EB9               	goto	u3400
 14635  16B8  2EBA               u3401:
 14636  16B9                     	goto	l3872
 14637  16B9  2F6B               u3400:
 14638  16BA                     	line	201
 14639                           	
 14640                           l3836:	
 14641  16BA                     ;main.c: 200:                         triggerTemp[1] = 9;;main.c: 201:                  
                                        triggerTemp[0] = triggerTemp[0] - 1;
 14642                           	movlw	low(01h)
 14643  16BA  3001               	fcall	_LCD_Command
 14644  16BB  160A  158A  202E  160A  118A  	line	202
 14645                           ;main.c: 202:                     }
 14646                           	movlw	low(03h)
 14647  16C0  3003               	fcall	_LCD_Command
 14648  16C1  160A  158A  202E  160A  118A  	line	203
 14649                           	
 14650                           l3838:	
 14651  16C6                     ;main.c: 203:                     else
 14652                           	bcf	status, 5	;RP0=0, select bank0
 14653  16C6  1283               	bcf	status, 6	;RP1=0, select bank0
 14654  16C7  1303               		movf	(ChangeTrigger@TriggerSet),w
 14655  16C8  082E               	movwf	(LCD_SendString@string)
 14656  16C9  00F1               	movlw	0
 14657  16CA  3000               	btfss	status,2
 14658  16CB  1D03               	movlw	080h
 14659  16CC  3080               	movwf	(LCD_SendString@string+1)
 14660  16CD  00F2               
 14661                           	fcall	_LCD_SendString
 14662  16CE  160A  158A  2466  160A  118A  	line	204
 14663                           	
 14664                           l3840:	
 14665  16D3                     ;main.c: 204:                         triggerTemp[i] = triggerTemp[i] - 1;
 14666                           	movlw	0C8h
 14667  16D3  30C8               	movwf	(Main_Delay@k)
 14668  16D4  00F0               	movlw	0
 14669  16D5  3000               	movwf	((Main_Delay@k))+1
 14670  16D6  00F1               	fcall	_Main_Delay
 14671  16D7  160A  158A  2363  160A  118A  	line	205
 14672                           	
 14673                           l3842:	
 14674  16DC                     ;main.c: 205:                     break;
 14675                           	movlw	low(01h)
 14676  16DC  3001               	fcall	_LCD_Command
 14677  16DD  160A  158A  202E  160A  118A  	line	206
 14678                           ;main.c: 206:                 case 4:
 14679                           	goto	l154
 14680  16E2  2FFF               	line	207
 14681                           ;main.c: 207: 
 14682                           	
 14683                           l140:	
 14684  16E3                     	line	209
 14685                           ;main.c: 209:                     {
 14686                           	goto	l3872
 14687  16E3  2F6B               	line	212
 14688                           ;main.c: 210:                         triggerTemp[1] = 0;;main.c: 212:                  
                                    }
 14689                           	
 14690                           l143:	
 14691  16E4                     	line	213
 14692                           	
 14693                           l3844:	
 14694  16E4                     ;main.c: 213:                     else
 14695                           	bcf	status, 5	;RP0=0, select bank0
 14696  16E4  1283               	bcf	status, 6	;RP1=0, select bank0
 14697  16E5  1303               	movf	((ChangeTrigger@i)),w
 14698  16E6  0833               iorwf	((ChangeTrigger@i+1)),w
 14699  16E7  0434               	btfss	status,2
 14700  16E8  1D03               	goto	u3411
 14701  16E9  2EEB               	goto	u3410
 14702  16EA  2EEC               u3411:
 14703  16EB                     	goto	l3848
 14704  16EB  2EF1               u3410:
 14705  16EC                     	line	214
 14706                           	
 14707                           l3846:	
 14708  16EC                     ;main.c: 214:                         triggerTemp[i] = triggerTemp[i] + 1;
 14709                           	movlw	01h
 14710  16EC  3001               	movwf	(ChangeTrigger@i)
 14711  16ED  00B3               	movlw	0
 14712  16EE  3000               	movwf	((ChangeTrigger@i))+1
 14713  16EF  00B4               	goto	l3874
 14714  16F0  2F80               	line	215
 14715                           ;main.c: 215:                     break;
 14716                           	
 14717                           l144:	
 14718  16F1                     	line	216
 14719                           	
 14720                           l3848:	
 14721  16F1                     ;main.c: 216:             }
 14722                           	clrf	(ChangeTrigger@i)
 14723  16F1  01B3               	clrf	(ChangeTrigger@i+1)
 14724  16F2  01B4               	goto	l3874
 14725  16F3  2F80               	
 14726                           l145:	
 14727  16F4                     	line	217
 14728                           ;main.c: 217: 
 14729                           	goto	l3874
 14730  16F4  2F80               	line	218
 14731                           ;main.c: 218:             int i = triggerTemp[0];
 14732                           	
 14733                           l147:	
 14734  16F5                     	line	220
 14735                           	
 14736                           l3850:	
 14737  16F5                     ;main.c: 220:             digits[1] = i % 10 + 48;
 14738                           		decf	((ChangeTrigger@i)),w
 14739  16F5  0333               iorwf	((ChangeTrigger@i+1)),w
 14740  16F6  0434               	btfss	status,2
 14741  16F7  1D03               	goto	u3421
 14742  16F8  2EFA               	goto	u3420
 14743  16F9  2EFB               u3421:
 14744  16FA                     	goto	l3858
 14745  16FA  2F10               u3420:
 14746  16FB                     	
 14747                           l3852:	
 14748  16FB                     	bsf	status, 5	;RP0=1, select bank1
 14749  16FB  1683               	bcf	status, 6	;RP1=0, select bank1
 14750  16FC  1303               	movf	(0+(_triggerTemp)^080h+02h),w
 14751  16FD  085C               iorwf	(1+(_triggerTemp)^080h+02h),w
 14752  16FE  045D               	btfss	status,2
 14753  16FF  1D03               	goto	u3431
 14754  1700  2F02               	goto	u3430
 14755  1701  2F03               u3431:
 14756  1702                     	goto	l3858
 14757  1702  2F10               u3430:
 14758  1703                     	line	222
 14759                           	
 14760                           l3854:	
 14761  1703                     ;main.c: 221:             i /= 10;;main.c: 222:             digits[0] = i % 10 + 48;
 14762                           	movlw	09h
 14763  1703  3009               	movwf	0+(_triggerTemp)^080h+02h
 14764  1704  00DC               	movlw	0
 14765  1705  3000               	movwf	(0+(_triggerTemp)^080h+02h)+1
 14766  1706  00DD               	line	223
 14767                           	
 14768                           l3856:	
 14769  1707                     ;main.c: 223: 
 14770                           	movf	(_triggerTemp)^080h,w
 14771  1707  085A               	addlw	low(-1)
 14772  1708  3EFF               	movwf	(_triggerTemp)^080h
 14773  1709  00DA               	movf	(_triggerTemp+1)^080h,w
 14774  170A  085B               	skipnc
 14775  170B  1803               	addlw	1
 14776  170C  3E01               	addlw	high(-1)
 14777  170D  3EFF               	movwf	1+(_triggerTemp)^080h
 14778  170E  00DB               	line	224
 14779                           ;main.c: 224:             digits[2] = '\0';
 14780                           	goto	l3874
 14781  170F  2F80               	line	225
 14782                           ;main.c: 225: 
 14783                           	
 14784                           l148:	
 14785  1710                     	line	226
 14786                           	
 14787                           l3858:	
 14788  1710                     ;main.c: 226:             decimal = triggerTemp[1] + 48;
 14789                           	bcf	status, 5	;RP0=0, select bank0
 14790  1710  1283               	movf	(ChangeTrigger@i),w
 14791  1711  0833               	movwf	(??_ChangeTrigger+0)+0
 14792  1712  00A0               	addwf	(??_ChangeTrigger+0)+0,w
 14793  1713  0720               	addlw	low(_triggerTemp|((0x0)<<8))&0ffh
 14794  1714  3EDA               	movwf	fsr0
 14795  1715  0084               	bcf	status, 7	;select IRP bank1
 14796  1716  1383               	movf	indf,w
 14797  1717  0800               	movwf	(??_ChangeTrigger+1)+0+0
 14798  1718  00A1               	incf	fsr0,f
 14799  1719  0A84               	movf	indf,w
 14800  171A  0800               	movwf	(??_ChangeTrigger+1)+0+1
 14801  171B  00A2               	movf	0+(??_ChangeTrigger+1)+0,w
 14802  171C  0821               	addlw	low(-1)
 14803  171D  3EFF               	movwf	(??_ChangeTrigger+3)+0
 14804  171E  00A3               	movf	1+(??_ChangeTrigger+1)+0,w
 14805  171F  0822               	skipnc
 14806  1720  1803               	addlw	1
 14807  1721  3E01               	addlw	high(-1)
 14808  1722  3EFF               	movwf	1+(??_ChangeTrigger+3)+0
 14809  1723  00A4               	movf	(ChangeTrigger@i),w
 14810  1724  0833               	movwf	(??_ChangeTrigger+5)+0
 14811  1725  00A5               	addwf	(??_ChangeTrigger+5)+0,w
 14812  1726  0725               	addlw	low(_triggerTemp|((0x0)<<8))&0ffh
 14813  1727  3EDA               	movwf	fsr0
 14814  1728  0084               	movf	0+(??_ChangeTrigger+3)+0,w
 14815  1729  0823               	movwf	indf
 14816  172A  0080               	incf	fsr0,f
 14817  172B  0A84               	movf	1+(??_ChangeTrigger+3)+0,w
 14818  172C  0824               	movwf	indf
 14819  172D  0080               	goto	l3874
 14820  172E  2F80               	
 14821                           l149:	
 14822  172F                     	line	227
 14823                           ;main.c: 227: 
 14824                           	goto	l3874
 14825  172F  2F80               	line	228
 14826                           ;main.c: 228:             LCD_SendString(digits);
 14827                           	
 14828                           l150:	
 14829  1730                     	line	230
 14830                           	
 14831                           l3860:	
 14832  1730                     ;main.c: 230: 
 14833                           		decf	((ChangeTrigger@i)),w
 14834  1730  0333               iorwf	((ChangeTrigger@i+1)),w
 14835  1731  0434               	btfss	status,2
 14836  1732  1D03               	goto	u3441
 14837  1733  2F35               	goto	u3440
 14838  1734  2F36               u3441:
 14839  1735                     	goto	l3868
 14840  1735  2F4A               u3440:
 14841  1736                     	
 14842                           l3862:	
 14843  1736                     		movlw	9
 14844  1736  3009               	bsf	status, 5	;RP0=1, select bank1
 14845  1737  1683               	bcf	status, 6	;RP1=0, select bank1
 14846  1738  1303               	xorwf	(0+(_triggerTemp)^080h+02h),w
 14847  1739  065C               iorwf	(1+(_triggerTemp)^080h+02h),w
 14848  173A  045D               	btfss	status,2
 14849  173B  1D03               	goto	u3451
 14850  173C  2F3E               	goto	u3450
 14851  173D  2F3F               u3451:
 14852  173E                     	goto	l3868
 14853  173E  2F4A               u3450:
 14854  173F                     	line	232
 14855                           	
 14856                           l3864:	
 14857  173F                     ;main.c: 231:             LCD_SendData('.');;main.c: 232:             LCD_Busy();
 14858                           	clrf	0+(_triggerTemp)^080h+02h
 14859  173F  01DC               	clrf	1+(_triggerTemp)^080h+02h
 14860  1740  01DD               	line	233
 14861                           	
 14862                           l3866:	
 14863  1741                     ;main.c: 233: 
 14864                           	movf	(_triggerTemp)^080h,w
 14865  1741  085A               	addlw	low(01h)
 14866  1742  3E01               	movwf	(_triggerTemp)^080h
 14867  1743  00DA               	movf	(_triggerTemp+1)^080h,w
 14868  1744  085B               	skipnc
 14869  1745  1803               	addlw	1
 14870  1746  3E01               	addlw	high(01h)
 14871  1747  3E00               	movwf	1+(_triggerTemp)^080h
 14872  1748  00DB               	line	234
 14873                           ;main.c: 234:             LCD_SendData(decimal);
 14874                           	goto	l3874
 14875  1749  2F80               	line	235
 14876                           ;main.c: 235:             LCD_Busy();
 14877                           	
 14878                           l151:	
 14879  174A                     	line	236
 14880                           	
 14881                           l3868:	
 14882  174A                     ;main.c: 236: 
 14883                           	bcf	status, 5	;RP0=0, select bank0
 14884  174A  1283               	movf	(ChangeTrigger@i),w
 14885  174B  0833               	movwf	(??_ChangeTrigger+0)+0
 14886  174C  00A0               	addwf	(??_ChangeTrigger+0)+0,w
 14887  174D  0720               	addlw	low(_triggerTemp|((0x0)<<8))&0ffh
 14888  174E  3EDA               	movwf	fsr0
 14889  174F  0084               	bcf	status, 7	;select IRP bank1
 14890  1750  1383               	movf	indf,w
 14891  1751  0800               	movwf	(??_ChangeTrigger+1)+0+0
 14892  1752  00A1               	incf	fsr0,f
 14893  1753  0A84               	movf	indf,w
 14894  1754  0800               	movwf	(??_ChangeTrigger+1)+0+1
 14895  1755  00A2               	movf	0+(??_ChangeTrigger+1)+0,w
 14896  1756  0821               	addlw	low(01h)
 14897  1757  3E01               	movwf	(??_ChangeTrigger+3)+0
 14898  1758  00A3               	movf	1+(??_ChangeTrigger+1)+0,w
 14899  1759  0822               	skipnc
 14900  175A  1803               	addlw	1
 14901  175B  3E01               	addlw	high(01h)
 14902  175C  3E00               	movwf	1+(??_ChangeTrigger+3)+0
 14903  175D  00A4               	movf	(ChangeTrigger@i),w
 14904  175E  0833               	movwf	(??_ChangeTrigger+5)+0
 14905  175F  00A5               	addwf	(??_ChangeTrigger+5)+0,w
 14906  1760  0725               	addlw	low(_triggerTemp|((0x0)<<8))&0ffh
 14907  1761  3EDA               	movwf	fsr0
 14908  1762  0084               	movf	0+(??_ChangeTrigger+3)+0,w
 14909  1763  0823               	movwf	indf
 14910  1764  0080               	incf	fsr0,f
 14911  1765  0A84               	movf	1+(??_ChangeTrigger+3)+0,w
 14912  1766  0824               	movwf	indf
 14913  1767  0080               	goto	l3874
 14914  1768  2F80               	
 14915                           l152:	
 14916  1769                     	line	237
 14917                           ;main.c: 237:             LCD_SendData('0');
 14918                           	goto	l3874
 14919  1769  2F80               	line	238
 14920                           	
 14921                           l3870:	
 14922  176A                     ;main.c: 238:         }
 14923                           	goto	l3874
 14924  176A  2F80               	
 14925                           l142:	
 14926  176B                     	
 14927                           l3872:	
 14928  176B                     	bcf	status, 5	;RP0=0, select bank0
 14929  176B  1283               	bcf	status, 6	;RP1=0, select bank0
 14930  176C  1303               	movf	(ChangeTrigger@Key),w
 14931  176D  0830               	movwf	(??_ChangeTrigger+0)+0
 14932  176E  00A0               	clrf	(??_ChangeTrigger+0)+0+1
 14933  176F  01A1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 14934                           ; Switch size 1, requested type "space"
 14935                           ; Number of cases is 1, Range of values is 0 to 0
 14936                           ; switch strategies available:
 14937                           ; Name         Instructions Cycles
 14938                           ; simple_byte            4     3 (average)
 14939                           ; direct_byte           11     8 (fixed)
 14940                           ; jumptable            260     6 (fixed)
 14941                           ;	Chosen strategy is simple_byte
 14942                           
 14943                           	movf 1+(??_ChangeTrigger+0)+0,w
 14944  1770  0821               	opt asmopt_push
 14945                           	opt asmopt_off
 14946                           	xorlw	0^0	; case 0
 14947  1771  3A00               	skipnz
 14948  1772  1903               	goto	l4926
 14949  1773  2F75               	goto	l3874
 14950  1774  2F80               	opt asmopt_pop
 14951                           	
 14952                           l4926:	
 14953  1775                     ; Switch size 1, requested type "space"
 14954                           ; Number of cases is 3, Range of values is 2 to 4
 14955                           ; switch strategies available:
 14956                           ; Name         Instructions Cycles
 14957                           ; simple_byte           10     6 (average)
 14958                           ; direct_byte           20    11 (fixed)
 14959                           ; jumptable            263     9 (fixed)
 14960                           ;	Chosen strategy is simple_byte
 14961                           
 14962                           	movf 0+(??_ChangeTrigger+0)+0,w
 14963  1775  0820               	opt asmopt_push
 14964                           	opt asmopt_off
 14965                           	xorlw	2^0	; case 2
 14966  1776  3A02               	skipnz
 14967  1777  1903               	goto	l3844
 14968  1778  2EE4               	xorlw	3^2	; case 3
 14969  1779  3A01               	skipnz
 14970  177A  1903               	goto	l3850
 14971  177B  2EF5               	xorlw	4^3	; case 4
 14972  177C  3A07               	skipnz
 14973  177D  1903               	goto	l3860
 14974  177E  2F30               	goto	l3874
 14975  177F  2F80               	opt asmopt_pop
 14976                           
 14977                           	
 14978                           l146:	
 14979  1780                     	line	240
 14980                           	
 14981                           l3874:	
 14982  1780                     ;main.c: 240: 
 14983                           	bsf	status, 5	;RP0=1, select bank1
 14984  1780  1683               	bcf	status, 6	;RP1=0, select bank1
 14985  1781  1303               	movf	(_triggerTemp+1)^080h,w
 14986  1782  085B               	bcf	status, 5	;RP0=0, select bank0
 14987  1783  1283               	bcf	status, 6	;RP1=0, select bank0
 14988  1784  1303               	movwf	(ChangeTrigger@i_214+1)
 14989  1785  00B2               	bsf	status, 5	;RP0=1, select bank1
 14990  1786  1683               	bcf	status, 6	;RP1=0, select bank1
 14991  1787  1303               	movf	(_triggerTemp)^080h,w
 14992  1788  085A               	bcf	status, 5	;RP0=0, select bank0
 14993  1789  1283               	bcf	status, 6	;RP1=0, select bank0
 14994  178A  1303               	movwf	(ChangeTrigger@i_214)
 14995  178B  00B1               	line	242
 14996                           	
 14997                           l3876:	
 14998  178C                     ;main.c: 242: void SwapToHeatingDisplay(int Key)
 14999                           	movlw	0Ah
 15000  178C  300A               	movwf	(___awmod@divisor)
 15001  178D  00F0               	movlw	0
 15002  178E  3000               	movwf	((___awmod@divisor))+1
 15003  178F  00F1               	movf	(ChangeTrigger@i_214+1),w
 15004  1790  0832               	movwf	(___awmod@dividend+1)
 15005  1791  00F3               	movf	(ChangeTrigger@i_214),w
 15006  1792  0831               	movwf	(___awmod@dividend)
 15007  1793  00F2               	fcall	___awmod
 15008  1794  160A  158A  26B9  160A  118A  	movf	(0+(?___awmod)),w
 15009  1799  0870               	addlw	030h
 15010  179A  3E30               	bcf	status, 5	;RP0=0, select bank0
 15011  179B  1283               	bcf	status, 6	;RP1=0, select bank0
 15012  179C  1303               	movwf	(??_ChangeTrigger+0)+0
 15013  179D  00A0               	movf	(??_ChangeTrigger+0)+0,w
 15014  179E  0820               	movwf	0+(ChangeTrigger@digits)+01h
 15015  179F  00AB               	line	243
 15016                           	
 15017                           l3878:	
 15018  17A0                     ;main.c: 243: {
 15019                           	movlw	0Ah
 15020  17A0  300A               	movwf	(___awdiv@divisor)
 15021  17A1  00F0               	movlw	0
 15022  17A2  3000               	movwf	((___awdiv@divisor))+1
 15023  17A3  00F1               	movf	(ChangeTrigger@i_214+1),w
 15024  17A4  0832               	movwf	(___awdiv@dividend+1)
 15025  17A5  00F3               	movf	(ChangeTrigger@i_214),w
 15026  17A6  0831               	movwf	(___awdiv@dividend)
 15027  17A7  00F2               	fcall	___awdiv
 15028  17A8  160A  158A  271C  160A  118A  	movf	(1+(?___awdiv)),w
 15029  17AD  0871               	bcf	status, 5	;RP0=0, select bank0
 15030  17AE  1283               	bcf	status, 6	;RP1=0, select bank0
 15031  17AF  1303               	movwf	(ChangeTrigger@i_214+1)
 15032  17B0  00B2               	movf	(0+(?___awdiv)),w
 15033  17B1  0870               	movwf	(ChangeTrigger@i_214)
 15034  17B2  00B1               	line	244
 15035                           	
 15036                           l3880:	
 15037  17B3                     ;main.c: 244:     char* Heat = "Heating:";
 15038                           	movlw	0Ah
 15039  17B3  300A               	movwf	(___awmod@divisor)
 15040  17B4  00F0               	movlw	0
 15041  17B5  3000               	movwf	((___awmod@divisor))+1
 15042  17B6  00F1               	movf	(ChangeTrigger@i_214+1),w
 15043  17B7  0832               	movwf	(___awmod@dividend+1)
 15044  17B8  00F3               	movf	(ChangeTrigger@i_214),w
 15045  17B9  0831               	movwf	(___awmod@dividend)
 15046  17BA  00F2               	fcall	___awmod
 15047  17BB  160A  158A  26B9  160A  118A  	movf	(0+(?___awmod)),w
 15048  17C0  0870               	addlw	030h
 15049  17C1  3E30               	bcf	status, 5	;RP0=0, select bank0
 15050  17C2  1283               	bcf	status, 6	;RP1=0, select bank0
 15051  17C3  1303               	movwf	(??_ChangeTrigger+0)+0
 15052  17C4  00A0               	movf	(??_ChangeTrigger+0)+0,w
 15053  17C5  0820               	movwf	(ChangeTrigger@digits)
 15054  17C6  00AA               	line	246
 15055                           	
 15056                           l3882:	
 15057  17C7                     ;main.c: 246:     LCD_Command(0x01);
 15058                           	clrf	0+(ChangeTrigger@digits)+02h
 15059  17C7  01AC               	line	248
 15060                           	
 15061                           l3884:	
 15062  17C8                     ;main.c: 248:     char* Off = "Off";
 15063                           	bsf	status, 5	;RP0=1, select bank1
 15064  17C8  1683               	bcf	status, 6	;RP1=0, select bank1
 15065  17C9  1303               	movf	0+(_triggerTemp)^080h+02h,w
 15066  17CA  085C               	addlw	030h
 15067  17CB  3E30               	bcf	status, 5	;RP0=0, select bank0
 15068  17CC  1283               	bcf	status, 6	;RP1=0, select bank0
 15069  17CD  1303               	movwf	(??_ChangeTrigger+0)+0
 15070  17CE  00A0               	movf	(??_ChangeTrigger+0)+0,w
 15071  17CF  0820               	movwf	(ChangeTrigger@decimal)
 15072  17D0  00AF               	line	250
 15073                           	
 15074                           l3886:	
 15075  17D1                     ;main.c: 250:     {
 15076                           	movlw	(low(ChangeTrigger@digits|((0x0)<<8))&0ffh)
 15077  17D1  302A               	movwf	(LCD_SendString@string)
 15078  17D2  00F1               	movlw	(0x0)
 15079  17D3  3000               	movwf	(LCD_SendString@string+1)
 15080  17D4  00F2               	fcall	_LCD_SendString
 15081  17D5  160A  158A  2466  160A  118A  	line	251
 15082                           	
 15083                           l3888:	
 15084  17DA                     ;main.c: 251: 
 15085                           	fcall	_LCD_Busy
 15086  17DA  160A  158A  2050  160A  118A  	line	253
 15087                           	
 15088                           l3890:	
 15089  17DF                     ;main.c: 253:         if(Key == 7)
 15090                           	movlw	low(02Eh)
 15091  17DF  302E               	fcall	_LCD_SendData
 15092  17E0  120A  158A  20D2  160A  118A  	line	254
 15093                           	
 15094                           l3892:	
 15095  17E5                     ;main.c: 254:         {
 15096                           	fcall	_LCD_Busy
 15097  17E5  160A  158A  2050  160A  118A  	line	256
 15098                           	
 15099                           l3894:	
 15100  17EA                     ;main.c: 256:             break;
 15101                           	bcf	status, 5	;RP0=0, select bank0
 15102  17EA  1283               	bcf	status, 6	;RP1=0, select bank0
 15103  17EB  1303               	movf	(ChangeTrigger@decimal),w
 15104  17EC  082F               	fcall	_LCD_SendData
 15105  17ED  120A  158A  20D2  160A  118A  	line	257
 15106                           	
 15107                           l3896:	
 15108  17F2                     ;main.c: 257:         }
 15109                           	fcall	_LCD_Busy
 15110  17F2  160A  158A  2050  160A  118A  	line	259
 15111                           	
 15112                           l3898:	
 15113  17F7                     ;main.c: 259:         LCD_SendString(Heat);
 15114                           	movlw	low(030h)
 15115  17F7  3030               	fcall	_LCD_SendData
 15116  17F8  120A  158A  20D2  160A  118A  	goto	l3828
 15117  17FD  2E97               	line	260
 15118                           ;main.c: 260: 
 15119                           	
 15120                           l153:	
 15121  17FE                     	goto	l3828
 15122  17FE  2E97               	
 15123                           l141:	
 15124  17FF                     	line	261
 15125                           	
 15126                           l154:	
 15127  17FF                     	return
 15128  17FF  0008               	opt stack 0
 15129                           GLOBAL	__end_of_ChangeTrigger
 15130                           	__end_of_ChangeTrigger:
 15131  1800                     	signat	_ChangeTrigger,4217
 15132                           	global	___awdiv
 15133                           
 15134 ;; *************** function ___awdiv *****************
 15135 ;; Defined at:
 15136 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 15137 ;; Parameters:    Size  Location     Type
 15138 ;;  divisor         2    0[COMMON] int 
 15139 ;;  dividend        2    2[COMMON] int 
 15140 ;; Auto vars:     Size  Location     Type
 15141 ;;  quotient        2    7[COMMON] int 
 15142 ;;  sign            1    6[COMMON] unsigned char 
 15143 ;;  counter         1    5[COMMON] unsigned char 
 15144 ;; Return value:  Size  Location     Type
 15145 ;;                  2    0[COMMON] int 
 15146 ;; Registers used:
 15147 ;;		wreg, status,2, status,0
 15148 ;; Tracked objects:
 15149 ;;		On entry : 0/0
 15150 ;;		On exit  : 0/0
 15151 ;;		Unchanged: 0/0
 15152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15153 ;;      Params:         4       0       0       0       0
 15154 ;;      Locals:         4       0       0       0       0
 15155 ;;      Temps:          1       0       0       0       0
 15156 ;;      Totals:         9       0       0       0       0
 15157 ;;Total ram usage:        9 bytes
 15158 ;; Hardware stack levels used:    1
 15159 ;; This function calls:
 15160 ;;		Nothing
 15161 ;; This function is called by:
 15162 ;;		_DisplayTime
 15163 ;;		_DisplayDate
 15164 ;;		_ChangeTrigger
 15165 ;;		_SetTime
 15166 ;;		_SetDate
 15167 ;;		_Get_Temp
 15168 ;; This function uses a non-reentrant model
 15169 ;;
 15170                           psect	text39,local,class=CODE,delta=2,merge=1,group=1
 15171                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 15172                           	line	5
 15173                           global __ptext39
 15174                           __ptext39:	;psect for function ___awdiv
 15175  1F1C                     psect	text39
 15176                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 15177                           	line	5
 15178                           	global	__size_of___awdiv
 15179                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 15180  0071                     	
 15181                           ___awdiv:	
 15182  1F1C                     ;incstack = 0
 15183                           	opt	stack 5
 15184                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 15185                           	line	13
 15186                           	
 15187                           l3342:	
 15188  1F1C                     	clrf	(___awdiv@sign)
 15189  1F1C  01F6               	line	14
 15190                           	
 15191                           l3344:	
 15192  1F1D                     	btfss	(___awdiv@divisor+1),7
 15193  1F1D  1FF1               	goto	u2661
 15194  1F1E  2F20               	goto	u2660
 15195  1F1F  2F21               u2661:
 15196  1F20                     	goto	l3350
 15197  1F20  2F29               u2660:
 15198  1F21                     	line	15
 15199                           	
 15200                           l3346:	
 15201  1F21                     	comf	(___awdiv@divisor),f
 15202  1F21  09F0               	comf	(___awdiv@divisor+1),f
 15203  1F22  09F1               	incf	(___awdiv@divisor),f
 15204  1F23  0AF0               	skipnz
 15205  1F24  1903               	incf	(___awdiv@divisor+1),f
 15206  1F25  0AF1               	line	16
 15207                           	
 15208                           l3348:	
 15209  1F26                     	clrf	(___awdiv@sign)
 15210  1F26  01F6               	incf	(___awdiv@sign),f
 15211  1F27  0AF6               	goto	l3350
 15212  1F28  2F29               	line	17
 15213                           	
 15214                           l944:	
 15215  1F29                     	line	18
 15216                           	
 15217                           l3350:	
 15218  1F29                     	btfss	(___awdiv@dividend+1),7
 15219  1F29  1FF3               	goto	u2671
 15220  1F2A  2F2C               	goto	u2670
 15221  1F2B  2F2D               u2671:
 15222  1F2C                     	goto	l3356
 15223  1F2C  2F37               u2670:
 15224  1F2D                     	line	19
 15225                           	
 15226                           l3352:	
 15227  1F2D                     	comf	(___awdiv@dividend),f
 15228  1F2D  09F2               	comf	(___awdiv@dividend+1),f
 15229  1F2E  09F3               	incf	(___awdiv@dividend),f
 15230  1F2F  0AF2               	skipnz
 15231  1F30  1903               	incf	(___awdiv@dividend+1),f
 15232  1F31  0AF3               	line	20
 15233                           	
 15234                           l3354:	
 15235  1F32                     	movlw	low(01h)
 15236  1F32  3001               	movwf	(??___awdiv+0)+0
 15237  1F33  00F4               	movf	(??___awdiv+0)+0,w
 15238  1F34  0874               	xorwf	(___awdiv@sign),f
 15239  1F35  06F6               	goto	l3356
 15240  1F36  2F37               	line	21
 15241                           	
 15242                           l945:	
 15243  1F37                     	line	22
 15244                           	
 15245                           l3356:	
 15246  1F37                     	clrf	(___awdiv@quotient)
 15247  1F37  01F7               	clrf	(___awdiv@quotient+1)
 15248  1F38  01F8               	line	23
 15249                           	
 15250                           l3358:	
 15251  1F39                     	movf	((___awdiv@divisor)),w
 15252  1F39  0870               iorwf	((___awdiv@divisor+1)),w
 15253  1F3A  0471               	btfsc	status,2
 15254  1F3B  1903               	goto	u2681
 15255  1F3C  2F3E               	goto	u2680
 15256  1F3D  2F3F               u2681:
 15257  1F3E                     	goto	l3378
 15258  1F3E  2F7C               u2680:
 15259  1F3F                     	line	24
 15260                           	
 15261                           l3360:	
 15262  1F3F                     	clrf	(___awdiv@counter)
 15263  1F3F  01F5               	incf	(___awdiv@counter),f
 15264  1F40  0AF5               	line	25
 15265                           	goto	l3366
 15266  1F41  2F4E               	
 15267                           l948:	
 15268  1F42                     	line	26
 15269                           	
 15270                           l3362:	
 15271  1F42                     	movlw	01h
 15272  1F42  3001               	
 15273                           u2695:
 15274  1F43                     	clrc
 15275  1F43  1003               	rlf	(___awdiv@divisor),f
 15276  1F44  0DF0               	rlf	(___awdiv@divisor+1),f
 15277  1F45  0DF1               	addlw	-1
 15278  1F46  3EFF               	skipz
 15279  1F47  1D03               	goto	u2695
 15280  1F48  2F43               	line	27
 15281                           	
 15282                           l3364:	
 15283  1F49                     	movlw	low(01h)
 15284  1F49  3001               	movwf	(??___awdiv+0)+0
 15285  1F4A  00F4               	movf	(??___awdiv+0)+0,w
 15286  1F4B  0874               	addwf	(___awdiv@counter),f
 15287  1F4C  07F5               	goto	l3366
 15288  1F4D  2F4E               	line	28
 15289                           	
 15290                           l947:	
 15291  1F4E                     	line	25
 15292                           	
 15293                           l3366:	
 15294  1F4E                     	btfss	(___awdiv@divisor+1),(15)&7
 15295  1F4E  1FF1               	goto	u2701
 15296  1F4F  2F51               	goto	u2700
 15297  1F50  2F52               u2701:
 15298  1F51                     	goto	l3362
 15299  1F51  2F42               u2700:
 15300  1F52                     	goto	l3368
 15301  1F52  2F54               	
 15302                           l949:	
 15303  1F53                     	goto	l3368
 15304  1F53  2F54               	line	29
 15305                           	
 15306                           l950:	
 15307  1F54                     	line	30
 15308                           	
 15309                           l3368:	
 15310  1F54                     	movlw	01h
 15311  1F54  3001               	
 15312                           u2715:
 15313  1F55                     	clrc
 15314  1F55  1003               	rlf	(___awdiv@quotient),f
 15315  1F56  0DF7               	rlf	(___awdiv@quotient+1),f
 15316  1F57  0DF8               	addlw	-1
 15317  1F58  3EFF               	skipz
 15318  1F59  1D03               	goto	u2715
 15319  1F5A  2F55               	line	31
 15320                           	movf	(___awdiv@divisor+1),w
 15321  1F5B  0871               	subwf	(___awdiv@dividend+1),w
 15322  1F5C  0273               	skipz
 15323  1F5D  1D03               	goto	u2725
 15324  1F5E  2F61               	movf	(___awdiv@divisor),w
 15325  1F5F  0870               	subwf	(___awdiv@dividend),w
 15326  1F60  0272               u2725:
 15327  1F61                     	skipc
 15328  1F61  1C03               	goto	u2721
 15329  1F62  2F64               	goto	u2720
 15330  1F63  2F65               u2721:
 15331  1F64                     	goto	l3374
 15332  1F64  2F6D               u2720:
 15333  1F65                     	line	32
 15334                           	
 15335                           l3370:	
 15336  1F65                     	movf	(___awdiv@divisor),w
 15337  1F65  0870               	subwf	(___awdiv@dividend),f
 15338  1F66  02F2               	movf	(___awdiv@divisor+1),w
 15339  1F67  0871               	skipc
 15340  1F68  1C03               	decf	(___awdiv@dividend+1),f
 15341  1F69  03F3               	subwf	(___awdiv@dividend+1),f
 15342  1F6A  02F3               	line	33
 15343                           	
 15344                           l3372:	
 15345  1F6B                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
 15346  1F6B  1477               	goto	l3374
 15347  1F6C  2F6D               	line	34
 15348                           	
 15349                           l951:	
 15350  1F6D                     	line	35
 15351                           	
 15352                           l3374:	
 15353  1F6D                     	movlw	01h
 15354  1F6D  3001               	
 15355                           u2735:
 15356  1F6E                     	clrc
 15357  1F6E  1003               	rrf	(___awdiv@divisor+1),f
 15358  1F6F  0CF1               	rrf	(___awdiv@divisor),f
 15359  1F70  0CF0               	addlw	-1
 15360  1F71  3EFF               	skipz
 15361  1F72  1D03               	goto	u2735
 15362  1F73  2F6E               	line	36
 15363                           	
 15364                           l3376:	
 15365  1F74                     	movlw	01h
 15366  1F74  3001               	subwf	(___awdiv@counter),f
 15367  1F75  02F5               	btfss	status,2
 15368  1F76  1D03               	goto	u2741
 15369  1F77  2F79               	goto	u2740
 15370  1F78  2F7A               u2741:
 15371  1F79                     	goto	l3368
 15372  1F79  2F54               u2740:
 15373  1F7A                     	goto	l3378
 15374  1F7A  2F7C               	
 15375                           l952:	
 15376  1F7B                     	goto	l3378
 15377  1F7B  2F7C               	line	37
 15378                           	
 15379                           l946:	
 15380  1F7C                     	line	38
 15381                           	
 15382                           l3378:	
 15383  1F7C                     	movf	((___awdiv@sign)),w
 15384  1F7C  0876               	btfsc	status,2
 15385  1F7D  1903               	goto	u2751
 15386  1F7E  2F80               	goto	u2750
 15387  1F7F  2F81               u2751:
 15388  1F80                     	goto	l3382
 15389  1F80  2F87               u2750:
 15390  1F81                     	line	39
 15391                           	
 15392                           l3380:	
 15393  1F81                     	comf	(___awdiv@quotient),f
 15394  1F81  09F7               	comf	(___awdiv@quotient+1),f
 15395  1F82  09F8               	incf	(___awdiv@quotient),f
 15396  1F83  0AF7               	skipnz
 15397  1F84  1903               	incf	(___awdiv@quotient+1),f
 15398  1F85  0AF8               	goto	l3382
 15399  1F86  2F87               	
 15400                           l953:	
 15401  1F87                     	line	40
 15402                           	
 15403                           l3382:	
 15404  1F87                     	movf	(___awdiv@quotient+1),w
 15405  1F87  0878               	movwf	(?___awdiv+1)
 15406  1F88  00F1               	movf	(___awdiv@quotient),w
 15407  1F89  0877               	movwf	(?___awdiv)
 15408  1F8A  00F0               	goto	l954
 15409  1F8B  2F8C               	
 15410                           l3384:	
 15411  1F8C                     	line	41
 15412                           	
 15413                           l954:	
 15414  1F8C                     	return
 15415  1F8C  0008               	opt stack 0
 15416                           GLOBAL	__end_of___awdiv
 15417                           	__end_of___awdiv:
 15418  1F8D                     	signat	___awdiv,8314
 15419                           	global	_Main_Delay
 15420                           
 15421 ;; *************** function _Main_Delay *****************
 15422 ;; Defined at:
 15423 ;;		line 52 in file "main.c"
 15424 ;; Parameters:    Size  Location     Type
 15425 ;;  k               2    0[COMMON] int 
 15426 ;; Auto vars:     Size  Location     Type
 15427 ;;  j               2    5[COMMON] int 
 15428 ;;  i               2    3[COMMON] int 
 15429 ;; Return value:  Size  Location     Type
 15430 ;;                  1    wreg      void 
 15431 ;; Registers used:
 15432 ;;		wreg, status,2, btemp+1
 15433 ;; Tracked objects:
 15434 ;;		On entry : 0/0
 15435 ;;		On exit  : 0/0
 15436 ;;		Unchanged: 0/0
 15437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15438 ;;      Params:         2       0       0       0       0
 15439 ;;      Locals:         4       0       0       0       0
 15440 ;;      Temps:          1       0       0       0       0
 15441 ;;      Totals:         7       0       0       0       0
 15442 ;;Total ram usage:        7 bytes
 15443 ;; Hardware stack levels used:    1
 15444 ;; This function calls:
 15445 ;;		Nothing
 15446 ;; This function is called by:
 15447 ;;		_ChangeTrigger
 15448 ;;		_SetTime
 15449 ;;		_SetDate
 15450 ;;		_HeatingControlOff
 15451 ;;		_main
 15452 ;; This function uses a non-reentrant model
 15453 ;;
 15454                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
 15455                           	file	"main.c"
 15456                           	line	52
 15457                           global __ptext40
 15458                           __ptext40:	;psect for function _Main_Delay
 15459  1B63                     psect	text40
 15460                           	file	"main.c"
 15461                           	line	52
 15462                           	global	__size_of_Main_Delay
 15463                           	__size_of_Main_Delay	equ	__end_of_Main_Delay-_Main_Delay
 15464  003E                     	
 15465                           _Main_Delay:	
 15466  1B63                     ;incstack = 0
 15467                           	opt	stack 5
 15468                           ; Regs used in _Main_Delay: [wreg+status,2+btemp+1]
 15469                           	line	55
 15470                           	
 15471                           l3434:	
 15472  1B63                     ;main.c: 52: ;main.c: 53:     timeDisplayer[7] = timeSecs % 10 + 48;;main.c: 54:     tim
                                 eSecs /= 10;;main.c: 55:     timeDisplayer[6] = timeSecs % 10 + 48;
 15473                           	clrf	(Main_Delay@i)
 15474  1B63  01F3               	clrf	(Main_Delay@i+1)
 15475  1B64  01F4               	goto	l105
 15476  1B65  2B91               	
 15477                           l106:	
 15478  1B66                     	line	56
 15479                           	
 15480                           l3436:	
 15481  1B66                     ;main.c: 56: 
 15482                           	clrf	(Main_Delay@j)
 15483  1B66  01F5               	clrf	(Main_Delay@j+1)
 15484  1B67  01F6               	
 15485                           l3438:	
 15486  1B68                     	movf	(Main_Delay@j+1),w
 15487  1B68  0876               	xorlw	80h
 15488  1B69  3A80               	movwf	btemp+1
 15489  1B6A  00FF               	movlw	(0)^80h
 15490  1B6B  3080               	subwf	btemp+1,w
 15491  1B6C  027F               	skipz
 15492  1B6D  1D03               	goto	u2895
 15493  1B6E  2B71               	movlw	064h
 15494  1B6F  3064               	subwf	(Main_Delay@j),w
 15495  1B70  0275               u2895:
 15496  1B71                     
 15497                           	skipc
 15498  1B71  1C03               	goto	u2891
 15499  1B72  2B74               	goto	u2890
 15500  1B73  2B75               u2891:
 15501  1B74                     	goto	l3442
 15502  1B74  2B77               u2890:
 15503  1B75                     	goto	l3446
 15504  1B75  2B8B               	
 15505                           l3440:	
 15506  1B76                     	goto	l3446
 15507  1B76  2B8B               	
 15508                           l107:	
 15509  1B77                     	
 15510                           l3442:	
 15511  1B77                     	movlw	01h
 15512  1B77  3001               	addwf	(Main_Delay@j),f
 15513  1B78  07F5               	skipnc
 15514  1B79  1803               	incf	(Main_Delay@j+1),f
 15515  1B7A  0AF6               	movlw	0
 15516  1B7B  3000               	addwf	(Main_Delay@j+1),f
 15517  1B7C  07F6               	
 15518                           l3444:	
 15519  1B7D                     	movf	(Main_Delay@j+1),w
 15520  1B7D  0876               	xorlw	80h
 15521  1B7E  3A80               	movwf	btemp+1
 15522  1B7F  00FF               	movlw	(0)^80h
 15523  1B80  3080               	subwf	btemp+1,w
 15524  1B81  027F               	skipz
 15525  1B82  1D03               	goto	u2905
 15526  1B83  2B86               	movlw	064h
 15527  1B84  3064               	subwf	(Main_Delay@j),w
 15528  1B85  0275               u2905:
 15529  1B86                     
 15530                           	skipc
 15531  1B86  1C03               	goto	u2901
 15532  1B87  2B89               	goto	u2900
 15533  1B88  2B8A               u2901:
 15534  1B89                     	goto	l3442
 15535  1B89  2B77               u2900:
 15536  1B8A                     	goto	l3446
 15537  1B8A  2B8B               	
 15538                           l108:	
 15539  1B8B                     	
 15540                           l3446:	
 15541  1B8B                     	movlw	01h
 15542  1B8B  3001               	addwf	(Main_Delay@i),f
 15543  1B8C  07F3               	skipnc
 15544  1B8D  1803               	incf	(Main_Delay@i+1),f
 15545  1B8E  0AF4               	movlw	0
 15546  1B8F  3000               	addwf	(Main_Delay@i+1),f
 15547  1B90  07F4               	
 15548                           l105:	
 15549  1B91                     	movf	(Main_Delay@i+1),w
 15550  1B91  0874               	xorlw	80h
 15551  1B92  3A80               	movwf	(??_Main_Delay+0)+0
 15552  1B93  00F2               	movf	(Main_Delay@k+1),w
 15553  1B94  0871               	xorlw	80h
 15554  1B95  3A80               	subwf	(??_Main_Delay+0)+0,w
 15555  1B96  0272               	skipz
 15556  1B97  1D03               	goto	u2915
 15557  1B98  2B9B               	movf	(Main_Delay@k),w
 15558  1B99  0870               	subwf	(Main_Delay@i),w
 15559  1B9A  0273               u2915:
 15560  1B9B                     
 15561                           	skipc
 15562  1B9B  1C03               	goto	u2911
 15563  1B9C  2B9E               	goto	u2910
 15564  1B9D  2B9F               u2911:
 15565  1B9E                     	goto	l3436
 15566  1B9E  2B66               u2910:
 15567  1B9F                     	goto	l110
 15568  1B9F  2BA0               	
 15569                           l109:	
 15570  1BA0                     	line	57
 15571                           	
 15572                           l110:	
 15573  1BA0                     	return
 15574  1BA0  0008               	opt stack 0
 15575                           GLOBAL	__end_of_Main_Delay
 15576                           	__end_of_Main_Delay:
 15577  1BA1                     	signat	_Main_Delay,4217
 15578                           	global	_LCD_SendString
 15579                           
 15580 ;; *************** function _LCD_SendString *****************
 15581 ;; Defined at:
 15582 ;;		line 69 in file "LCD.c"
 15583 ;; Parameters:    Size  Location     Type
 15584 ;;  string          2    1[COMMON] PTR const unsigned char 
 15585 ;;		 -> STR_24(16), STR_23(11), STR_22(12), SetDate@Date(9), 
 15586 ;;		 -> STR_21(13), STR_20(6), SetTime@digits(9), STR_19(9), 
 15587 ;;		 -> STR_18(6), STR_17(6), STR_16(7), STR_15(14), 
 15588 ;;		 -> STR_14(4), STR_13(3), STR_12(9), ChangeTrigger@digits(3), 
 15589 ;;		 -> STR_11(12), STR_10(9), tempBuffer(6), STR_9(6), 
 15590 ;;		 -> STR_8(6), STR_7(7), STR_6(9), STR_5(7), 
 15591 ;;		 -> STR_4(9), STR_3(10), STR_2(8), STR_1(7), 
 15592 ;;		 -> dateDisplayer(9), timeDisplayer(9), 
 15593 ;; Auto vars:     Size  Location     Type
 15594 ;;  i               2    6[COMMON] int 
 15595 ;; Return value:  Size  Location     Type
 15596 ;;                  1    wreg      void 
 15597 ;; Registers used:
 15598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 15599 ;; Tracked objects:
 15600 ;;		On entry : 0/0
 15601 ;;		On exit  : 0/0
 15602 ;;		Unchanged: 0/0
 15603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15604 ;;      Params:         2       0       0       0       0
 15605 ;;      Locals:         2       0       0       0       0
 15606 ;;      Temps:          3       0       0       0       0
 15607 ;;      Totals:         7       0       0       0       0
 15608 ;;Total ram usage:        7 bytes
 15609 ;; Hardware stack levels used:    1
 15610 ;; Hardware stack levels required when called:    2
 15611 ;; This function calls:
 15612 ;;		_LCD_SendData
 15613 ;; This function is called by:
 15614 ;;		_DisplayTime
 15615 ;;		_DisplayDate
 15616 ;;		_DisplayDay
 15617 ;;		_DisplayTemp
 15618 ;;		_MainScreen
 15619 ;;		_ChangeTrigger
 15620 ;;		_SwapToHeatingDisplay
 15621 ;;		_Switch24Hour
 15622 ;;		_DateDayScreen
 15623 ;;		_SetTime
 15624 ;;		_SetDate
 15625 ;;		_HeatingControlOff
 15626 ;;		_SoundAlarm
 15627 ;; This function uses a non-reentrant model
 15628 ;;
 15629                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
 15630                           	file	"LCD.c"
 15631                           	line	69
 15632                           global __ptext41
 15633                           __ptext41:	;psect for function _LCD_SendString
 15634  1C66                     psect	text41
 15635                           	file	"LCD.c"
 15636                           	line	69
 15637                           	global	__size_of_LCD_SendString
 15638                           	__size_of_LCD_SendString	equ	__end_of_LCD_SendString-_LCD_SendString
 15639  0044                     	
 15640                           _LCD_SendString:	
 15641  1C66                     ;incstack = 0
 15642                           	opt	stack 4
 15643                           ; Regs used in _LCD_SendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 15644                           	line	71
 15645                           	
 15646                           l3478:	
 15647  1C66                     ;LCD.c: 71:     for (int i = 0; string[i]!='\0'; ++i)
 15648                           	clrf	(LCD_SendString@i)
 15649  1C66  01F6               	clrf	(LCD_SendString@i+1)
 15650  1C67  01F7               	goto	l3484
 15651  1C68  2C8C               	
 15652                           l626:	
 15653  1C69                     	line	74
 15654                           	
 15655                           l3480:	
 15656  1C69                     ;LCD.c: 72:     {;LCD.c: 74:         LCD_SendData(string[i]);
 15657                           	movf	(LCD_SendString@i),w
 15658  1C69  0876               	addwf	(LCD_SendString@string),w
 15659  1C6A  0771               	movwf	(??_LCD_SendString+1)+0
 15660  1C6B  00F4               	movf	(LCD_SendString@string+1),w
 15661  1C6C  0872               	movwf	(??_LCD_SendString+0)+0
 15662  1C6D  00F3               	skipnc
 15663  1C6E  1803               	incf	(??_LCD_SendString+0)+0,f
 15664  1C6F  0AF3               	btfss	(LCD_SendString@i),7
 15665  1C70  1FF6               	goto	u2920
 15666  1C71  2C73               	decf	(??_LCD_SendString+0)+0,f
 15667  1C72  03F3               u2920:
 15668  1C73                     	movf	(??_LCD_SendString+0)+0,w
 15669  1C73  0873               	movwf	0+((??_LCD_SendString+1)+0)+1
 15670  1C74  00F5               	movf	1+(??_LCD_SendString+1)+0,w
 15671  1C75  0875               	bcf	status, 5	;RP0=0, select bank0
 15672  1C76  1283               	bcf	status, 6	;RP1=0, select bank0
 15673  1C77  1303               	movwf	btemp+1
 15674  1C78  00FF               	movf	0+(??_LCD_SendString+1)+0,w
 15675  1C79  0874               	movwf	fsr0
 15676  1C7A  0084               	fcall	stringtab
 15677  1C7B  120A  158A  2000  160A  158A  	fcall	_LCD_SendData
 15678  1C80  120A  158A  20D2  160A  158A  	line	75
 15679                           	
 15680                           l3482:	
 15681  1C85                     ;LCD.c: 75:     }
 15682                           	movlw	01h
 15683  1C85  3001               	addwf	(LCD_SendString@i),f
 15684  1C86  07F6               	skipnc
 15685  1C87  1803               	incf	(LCD_SendString@i+1),f
 15686  1C88  0AF7               	movlw	0
 15687  1C89  3000               	addwf	(LCD_SendString@i+1),f
 15688  1C8A  07F7               	goto	l3484
 15689  1C8B  2C8C               	
 15690                           l625:	
 15691  1C8C                     	
 15692                           l3484:	
 15693  1C8C                     	movf	(LCD_SendString@i),w
 15694  1C8C  0876               	addwf	(LCD_SendString@string),w
 15695  1C8D  0771               	movwf	(??_LCD_SendString+1)+0
 15696  1C8E  00F4               	movf	(LCD_SendString@string+1),w
 15697  1C8F  0872               	movwf	(??_LCD_SendString+0)+0
 15698  1C90  00F3               	skipnc
 15699  1C91  1803               	incf	(??_LCD_SendString+0)+0,f
 15700  1C92  0AF3               	btfss	(LCD_SendString@i),7
 15701  1C93  1FF6               	goto	u2930
 15702  1C94  2C96               	decf	(??_LCD_SendString+0)+0,f
 15703  1C95  03F3               u2930:
 15704  1C96                     	movf	(??_LCD_SendString+0)+0,w
 15705  1C96  0873               	movwf	0+((??_LCD_SendString+1)+0)+1
 15706  1C97  00F5               	movf	1+(??_LCD_SendString+1)+0,w
 15707  1C98  0875               	bcf	status, 5	;RP0=0, select bank0
 15708  1C99  1283               	bcf	status, 6	;RP1=0, select bank0
 15709  1C9A  1303               	movwf	btemp+1
 15710  1C9B  00FF               	movf	0+(??_LCD_SendString+1)+0,w
 15711  1C9C  0874               	movwf	fsr0
 15712  1C9D  0084               	fcall	stringtab
 15713  1C9E  120A  158A  2000  160A  158A  	xorlw	0
 15714  1CA3  3A00               	skipz
 15715  1CA4  1D03               	goto	u2941
 15716  1CA5  2CA7               	goto	u2940
 15717  1CA6  2CA8               u2941:
 15718  1CA7                     	goto	l3480
 15719  1CA7  2C69               u2940:
 15720  1CA8                     	goto	l628
 15721  1CA8  2CA9               	
 15722                           l627:	
 15723  1CA9                     	line	76
 15724                           	
 15725                           l628:	
 15726  1CA9                     	return
 15727  1CA9  0008               	opt stack 0
 15728                           GLOBAL	__end_of_LCD_SendString
 15729                           	__end_of_LCD_SendString:
 15730  1CAA                     	signat	_LCD_SendString,4217
 15731                           	global	_LCD_SendData
 15732                           
 15733 ;; *************** function _LCD_SendData *****************
 15734 ;; Defined at:
 15735 ;;		line 55 in file "LCD.c"
 15736 ;; Parameters:    Size  Location     Type
 15737 ;;  c               1    wreg     unsigned char 
 15738 ;; Auto vars:     Size  Location     Type
 15739 ;;  c               1    0[COMMON] unsigned char 
 15740 ;; Return value:  Size  Location     Type
 15741 ;;                  1    wreg      void 
 15742 ;; Registers used:
 15743 ;;		wreg, status,2, status,0, pclath, cstack
 15744 ;; Tracked objects:
 15745 ;;		On entry : 0/0
 15746 ;;		On exit  : 0/0
 15747 ;;		Unchanged: 0/0
 15748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15749 ;;      Params:         0       0       0       0       0
 15750 ;;      Locals:         1       0       0       0       0
 15751 ;;      Temps:          0       0       0       0       0
 15752 ;;      Totals:         1       0       0       0       0
 15753 ;;Total ram usage:        1 bytes
 15754 ;; Hardware stack levels used:    1
 15755 ;; Hardware stack levels required when called:    1
 15756 ;; This function calls:
 15757 ;;		_LCD_Busy
 15758 ;; This function is called by:
 15759 ;;		_DisplayTemp
 15760 ;;		_ChangeTrigger
 15761 ;;		_LCD_SendString
 15762 ;; This function uses a non-reentrant model
 15763 ;;
 15764                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 15765                           	line	55
 15766                           global __ptext42
 15767                           __ptext42:	;psect for function _LCD_SendData
 15768  08D2                     psect	text42
 15769                           	file	"LCD.c"
 15770                           	line	55
 15771                           	global	__size_of_LCD_SendData
 15772                           	__size_of_LCD_SendData	equ	__end_of_LCD_SendData-_LCD_SendData
 15773  000F                     	
 15774                           _LCD_SendData:	
 15775  08D2                     ;incstack = 0
 15776                           	opt	stack 4
 15777                           ; Regs used in _LCD_SendData: [wreg+status,2+status,0+pclath+cstack]
 15778                           ;LCD_SendData@c stored from wreg
 15779                           	movwf	(LCD_SendData@c)
 15780  08D2  00F0               	line	57
 15781                           	
 15782                           l3158:	
 15783  08D3                     ;LCD.c: 57:     RA1 = 1;
 15784                           	bcf	status, 5	;RP0=0, select bank0
 15785  08D3  1283               	bcf	status, 6	;RP1=0, select bank0
 15786  08D4  1303               	bsf	(41/8),(41)&7	;volatile
 15787  08D5  1485               	line	59
 15788                           ;LCD.c: 59:     RA2 = 0;
 15789                           	bcf	(42/8),(42)&7	;volatile
 15790  08D6  1105               	line	61
 15791                           ;LCD.c: 61:     RA3 = 1;
 15792                           	bsf	(43/8),(43)&7	;volatile
 15793  08D7  1585               	line	63
 15794                           	
 15795                           l3160:	
 15796  08D8                     ;LCD.c: 63:     PORTD = c;
 15797                           	movf	(LCD_SendData@c),w
 15798  08D8  0870               	movwf	(8)	;volatile
 15799  08D9  0088               	line	64
 15800                           	
 15801                           l3162:	
 15802  08DA                     ;LCD.c: 64:     RA3 = 0;
 15803                           	bcf	(43/8),(43)&7	;volatile
 15804  08DA  1185               	line	65
 15805                           	
 15806                           l3164:	
 15807  08DB                     ;LCD.c: 65:     LCD_Busy();
 15808                           	fcall	_LCD_Busy
 15809  08DB  160A  158A  2050  120A  158A  	line	66
 15810                           	
 15811                           l622:	
 15812  08E0                     	return
 15813  08E0  0008               	opt stack 0
 15814                           GLOBAL	__end_of_LCD_SendData
 15815                           	__end_of_LCD_SendData:
 15816  08E1                     	signat	_LCD_SendData,4217
 15817                           	global	_LCD_Command
 15818                           
 15819 ;; *************** function _LCD_Command *****************
 15820 ;; Defined at:
 15821 ;;		line 34 in file "LCD.c"
 15822 ;; Parameters:    Size  Location     Type
 15823 ;;  c               1    wreg     unsigned char 
 15824 ;; Auto vars:     Size  Location     Type
 15825 ;;  c               1    0[COMMON] unsigned char 
 15826 ;; Return value:  Size  Location     Type
 15827 ;;                  1    wreg      void 
 15828 ;; Registers used:
 15829 ;;		wreg, status,2, status,0, pclath, cstack
 15830 ;; Tracked objects:
 15831 ;;		On entry : 0/0
 15832 ;;		On exit  : 0/0
 15833 ;;		Unchanged: 0/0
 15834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15835 ;;      Params:         0       0       0       0       0
 15836 ;;      Locals:         1       0       0       0       0
 15837 ;;      Temps:          0       0       0       0       0
 15838 ;;      Totals:         1       0       0       0       0
 15839 ;;Total ram usage:        1 bytes
 15840 ;; Hardware stack levels used:    1
 15841 ;; Hardware stack levels required when called:    1
 15842 ;; This function calls:
 15843 ;;		_LCD_Busy
 15844 ;; This function is called by:
 15845 ;;		_ChangeTrigger
 15846 ;;		_SwapToHeatingDisplay
 15847 ;;		_Switch24Hour
 15848 ;;		_DateDayScreen
 15849 ;;		_SetTime
 15850 ;;		_SetDate
 15851 ;;		_HeatingControlOff
 15852 ;;		_SoundAlarm
 15853 ;;		_main
 15854 ;;		_LCD_SecondLine
 15855 ;; This function uses a non-reentrant model
 15856 ;;
 15857                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
 15858                           	line	34
 15859                           global __ptext43
 15860                           __ptext43:	;psect for function _LCD_Command
 15861  182E                     psect	text43
 15862                           	file	"LCD.c"
 15863                           	line	34
 15864                           	global	__size_of_LCD_Command
 15865                           	__size_of_LCD_Command	equ	__end_of_LCD_Command-_LCD_Command
 15866  000F                     	
 15867                           _LCD_Command:	
 15868  182E                     ;incstack = 0
 15869                           	opt	stack 5
 15870                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
 15871                           ;LCD_Command@c stored from wreg
 15872                           	movwf	(LCD_Command@c)
 15873  182E  00F0               	line	36
 15874                           	
 15875                           l3602:	
 15876  182F                     ;LCD.c: 36:     RA1 = 0;
 15877                           	bcf	status, 5	;RP0=0, select bank0
 15878  182F  1283               	bcf	status, 6	;RP1=0, select bank0
 15879  1830  1303               	bcf	(41/8),(41)&7	;volatile
 15880  1831  1085               	line	38
 15881                           ;LCD.c: 38:     RA2 = 0;
 15882                           	bcf	(42/8),(42)&7	;volatile
 15883  1832  1105               	line	40
 15884                           ;LCD.c: 40:     RA3 = 1;
 15885                           	bsf	(43/8),(43)&7	;volatile
 15886  1833  1585               	line	42
 15887                           	
 15888                           l3604:	
 15889  1834                     ;LCD.c: 42:     PORTD = c;
 15890                           	movf	(LCD_Command@c),w
 15891  1834  0870               	movwf	(8)	;volatile
 15892  1835  0088               	line	43
 15893                           	
 15894                           l3606:	
 15895  1836                     ;LCD.c: 43:     RA3 = 0;
 15896                           	bcf	(43/8),(43)&7	;volatile
 15897  1836  1185               	line	45
 15898                           	
 15899                           l3608:	
 15900  1837                     ;LCD.c: 45:     LCD_Busy();
 15901                           	fcall	_LCD_Busy
 15902  1837  160A  158A  2050  160A  158A  	line	46
 15903                           	
 15904                           l616:	
 15905  183C                     	return
 15906  183C  0008               	opt stack 0
 15907                           GLOBAL	__end_of_LCD_Command
 15908                           	__end_of_LCD_Command:
 15909  183D                     	signat	_LCD_Command,4217
 15910                           	global	_LCD_Busy
 15911                           
 15912 ;; *************** function _LCD_Busy *****************
 15913 ;; Defined at:
 15914 ;;		line 6 in file "LCD.c"
 15915 ;; Parameters:    Size  Location     Type
 15916 ;;		None
 15917 ;; Auto vars:     Size  Location     Type
 15918 ;;		None
 15919 ;; Return value:  Size  Location     Type
 15920 ;;                  1    wreg      void 
 15921 ;; Registers used:
 15922 ;;		wreg, status,2
 15923 ;; Tracked objects:
 15924 ;;		On entry : 0/0
 15925 ;;		On exit  : 0/0
 15926 ;;		Unchanged: 0/0
 15927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15928 ;;      Params:         0       0       0       0       0
 15929 ;;      Locals:         0       0       0       0       0
 15930 ;;      Temps:          0       0       0       0       0
 15931 ;;      Totals:         0       0       0       0       0
 15932 ;;Total ram usage:        0 bytes
 15933 ;; Hardware stack levels used:    1
 15934 ;; This function calls:
 15935 ;;		Nothing
 15936 ;; This function is called by:
 15937 ;;		_DisplayTemp
 15938 ;;		_ChangeTrigger
 15939 ;;		_LCD_Command
 15940 ;;		_LCD_SendData
 15941 ;; This function uses a non-reentrant model
 15942 ;;
 15943                           psect	text44,local,class=CODE,delta=2,merge=1,group=0
 15944                           	line	6
 15945                           global __ptext44
 15946                           __ptext44:	;psect for function _LCD_Busy
 15947  1850                     psect	text44
 15948                           	file	"LCD.c"
 15949                           	line	6
 15950                           	global	__size_of_LCD_Busy
 15951                           	__size_of_LCD_Busy	equ	__end_of_LCD_Busy-_LCD_Busy
 15952  0015                     	
 15953                           _LCD_Busy:	
 15954  1850                     ;incstack = 0
 15955                           	opt	stack 4
 15956                           ; Regs used in _LCD_Busy: [wreg+status,2]
 15957                           	line	8
 15958                           	
 15959                           l3104:	
 15960  1850                     ;LCD.c: 8:     TRISD = 0xFF;
 15961                           	movlw	low(0FFh)
 15962  1850  30FF               	bsf	status, 5	;RP0=1, select bank1
 15963  1851  1683               	bcf	status, 6	;RP1=0, select bank1
 15964  1852  1303               	movwf	(136)^080h	;volatile
 15965  1853  0088               	line	9
 15966                           	
 15967                           l3106:	
 15968  1854                     ;LCD.c: 9:     RA3 = 1;
 15969                           	bcf	status, 5	;RP0=0, select bank0
 15970  1854  1283               	bcf	status, 6	;RP1=0, select bank0
 15971  1855  1303               	bsf	(43/8),(43)&7	;volatile
 15972  1856  1585               	line	11
 15973                           	
 15974                           l3108:	
 15975  1857                     ;LCD.c: 11:     RA1 = 0;
 15976                           	bcf	(41/8),(41)&7	;volatile
 15977  1857  1085               	line	13
 15978                           	
 15979                           l3110:	
 15980  1858                     ;LCD.c: 13:     RA2 = 1;
 15981                           	bsf	(42/8),(42)&7	;volatile
 15982  1858  1505               	line	15
 15983                           ;LCD.c: 15:     while(RD7)
 15984                           	goto	l607
 15985  1859  285C               	
 15986                           l608:	
 15987  185A                     	line	18
 15988                           ;LCD.c: 16:     {;LCD.c: 18:         RA3 = 0;
 15989                           	bcf	(43/8),(43)&7	;volatile
 15990  185A  1185               	line	19
 15991                           ;LCD.c: 19:         RA3 = 1;
 15992                           	bsf	(43/8),(43)&7	;volatile
 15993  185B  1585               	line	20
 15994                           ;LCD.c: 20:     }
 15995                           	
 15996                           l607:	
 15997  185C                     	line	15
 15998                           ;LCD.c: 15:     while(RD7)
 15999                           	btfsc	(71/8),(71)&7	;volatile
 16000  185C  1B88               	goto	u2321
 16001  185D  285F               	goto	u2320
 16002  185E  2860               u2321:
 16003  185F                     	goto	l608
 16004  185F  285A               u2320:
 16005  1860                     	goto	l3112
 16006  1860  2861               	
 16007                           l609:	
 16008  1861                     	line	22
 16009                           	
 16010                           l3112:	
 16011  1861                     ;LCD.c: 22:     TRISD = 0x00;
 16012                           	bsf	status, 5	;RP0=1, select bank1
 16013  1861  1683               	bcf	status, 6	;RP1=0, select bank1
 16014  1862  1303               	clrf	(136)^080h	;volatile
 16015  1863  0188               	line	23
 16016                           	
 16017                           l610:	
 16018  1864                     	return
 16019  1864  0008               	opt stack 0
 16020                           GLOBAL	__end_of_LCD_Busy
 16021                           	__end_of_LCD_Busy:
 16022  1865                     	signat	_LCD_Busy,89
 16023                           	global	_Keypad_Scan
 16024                           
 16025 ;; *************** function _Keypad_Scan *****************
 16026 ;; Defined at:
 16027 ;;		line 17 in file "KeyMatrix.c"
 16028 ;; Parameters:    Size  Location     Type
 16029 ;;		None
 16030 ;; Auto vars:     Size  Location     Type
 16031 ;;		None
 16032 ;; Return value:  Size  Location     Type
 16033 ;;                  2    6[COMMON] int 
 16034 ;; Registers used:
 16035 ;;		wreg, status,2, status,0, pclath, cstack
 16036 ;; Tracked objects:
 16037 ;;		On entry : 0/0
 16038 ;;		On exit  : 0/0
 16039 ;;		Unchanged: 0/0
 16040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 16041 ;;      Params:         2       0       0       0       0
 16042 ;;      Locals:         0       0       0       0       0
 16043 ;;      Temps:          0       0       0       0       0
 16044 ;;      Totals:         2       0       0       0       0
 16045 ;;Total ram usage:        2 bytes
 16046 ;; Hardware stack levels used:    1
 16047 ;; Hardware stack levels required when called:    1
 16048 ;; This function calls:
 16049 ;;		_Key_Delay
 16050 ;; This function is called by:
 16051 ;;		_ChangeTrigger
 16052 ;;		_SwapToHeatingDisplay
 16053 ;;		_DateDayScreen
 16054 ;;		_SetTime
 16055 ;;		_SetDate
 16056 ;;		_HeatingControlOff
 16057 ;;		_SoundAlarm
 16058 ;;		_main
 16059 ;; This function uses a non-reentrant model
 16060 ;;
 16061                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
 16062                           	file	"KeyMatrix.c"
 16063                           	line	17
 16064                           global __ptext45
 16065                           __ptext45:	;psect for function _Keypad_Scan
 16066  0051                     psect	text45
 16067                           	file	"KeyMatrix.c"
 16068                           	line	17
 16069                           	global	__size_of_Keypad_Scan
 16070                           	__size_of_Keypad_Scan	equ	__end_of_Keypad_Scan-_Keypad_Scan
 16071  01C7                     	
 16072                           _Keypad_Scan:	
 16073  0051                     ;incstack = 0
 16074                           	opt	stack 5
 16075                           ; Regs used in _Keypad_Scan: [wreg+status,2+status,0+pclath+cstack]
 16076                           	line	19
 16077                           	
 16078                           l3610:	
 16079  0051                     ;KeyMatrix.c: 19:     RC4 = 1; RC5 = 0; RC6 = 0; RC7 = 0;
 16080                           	bcf	status, 5	;RP0=0, select bank0
 16081  0051  1283               	bcf	status, 6	;RP1=0, select bank0
 16082  0052  1303               	bsf	(60/8),(60)&7	;volatile
 16083  0053  1607               	bcf	(61/8),(61)&7	;volatile
 16084  0054  1287               	bcf	(62/8),(62)&7	;volatile
 16085  0055  1307               	bcf	(63/8),(63)&7	;volatile
 16086  0056  1387               	line	20
 16087                           ;KeyMatrix.c: 20:     if(RC3 == 1)
 16088                           	btfss	(59/8),(59)&7	;volatile
 16089  0057  1D87               	goto	u3051
 16090  0058  285A               	goto	u3050
 16091  0059  285B               u3051:
 16092  005A                     	goto	l524
 16093  005A  2872               u3050:
 16094  005B                     	line	22
 16095                           	
 16096                           l3612:	
 16097  005B                     ;KeyMatrix.c: 21:     {;KeyMatrix.c: 22:         Key_Delay(50);
 16098                           	movlw	032h
 16099  005B  3032               	movwf	(Key_Delay@k)
 16100  005C  00F0               	movlw	0
 16101  005D  3000               	movwf	((Key_Delay@k))+1
 16102  005E  00F1               	fcall	_Key_Delay
 16103  005F  160A  158A  228D  120A  118A  	line	23
 16104                           ;KeyMatrix.c: 23:         while(RC3 == 1)
 16105                           	goto	l525
 16106  0064  286B               	
 16107                           l526:	
 16108  0065                     	line	24
 16109                           	
 16110                           l3614:	
 16111  0065                     ;KeyMatrix.c: 24:             return 1;
 16112                           	movlw	01h
 16113  0065  3001               	movwf	(?_Keypad_Scan)
 16114  0066  00F6               	movlw	0
 16115  0067  3000               	movwf	((?_Keypad_Scan))+1
 16116  0068  00F7               	goto	l527
 16117  0069  2A17               	
 16118                           l3616:	
 16119  006A                     	goto	l527
 16120  006A  2A17               	
 16121                           l525:	
 16122  006B                     	line	23
 16123                           ;KeyMatrix.c: 23:         while(RC3 == 1)
 16124                           	bcf	status, 5	;RP0=0, select bank0
 16125  006B  1283               	bcf	status, 6	;RP1=0, select bank0
 16126  006C  1303               	btfsc	(59/8),(59)&7	;volatile
 16127  006D  1987               	goto	u3061
 16128  006E  2870               	goto	u3060
 16129  006F  2871               u3061:
 16130  0070                     	goto	l3614
 16131  0070  2865               u3060:
 16132  0071                     	goto	l524
 16133  0071  2872               	
 16134                           l528:	
 16135  0072                     	line	25
 16136                           ;KeyMatrix.c: 25:     }
 16137                           	
 16138                           l524:	
 16139  0072                     	line	26
 16140                           ;KeyMatrix.c: 26:     if(RC2 == 1)
 16141                           	btfss	(58/8),(58)&7	;volatile
 16142  0072  1D07               	goto	u3071
 16143  0073  2875               	goto	u3070
 16144  0074  2876               u3071:
 16145  0075                     	goto	l529
 16146  0075  288D               u3070:
 16147  0076                     	line	28
 16148                           	
 16149                           l3618:	
 16150  0076                     ;KeyMatrix.c: 27:     {;KeyMatrix.c: 28:        Key_Delay(50);
 16151                           	movlw	032h
 16152  0076  3032               	movwf	(Key_Delay@k)
 16153  0077  00F0               	movlw	0
 16154  0078  3000               	movwf	((Key_Delay@k))+1
 16155  0079  00F1               	fcall	_Key_Delay
 16156  007A  160A  158A  228D  120A  118A  	line	29
 16157                           ;KeyMatrix.c: 29:        while(RC2 == 1)
 16158                           	goto	l530
 16159  007F  2886               	
 16160                           l531:	
 16161  0080                     	line	30
 16162                           	
 16163                           l3620:	
 16164  0080                     ;KeyMatrix.c: 30:             return 2;
 16165                           	movlw	02h
 16166  0080  3002               	movwf	(?_Keypad_Scan)
 16167  0081  00F6               	movlw	0
 16168  0082  3000               	movwf	((?_Keypad_Scan))+1
 16169  0083  00F7               	goto	l527
 16170  0084  2A17               	
 16171                           l3622:	
 16172  0085                     	goto	l527
 16173  0085  2A17               	
 16174                           l530:	
 16175  0086                     	line	29
 16176                           ;KeyMatrix.c: 29:        while(RC2 == 1)
 16177                           	bcf	status, 5	;RP0=0, select bank0
 16178  0086  1283               	bcf	status, 6	;RP1=0, select bank0
 16179  0087  1303               	btfsc	(58/8),(58)&7	;volatile
 16180  0088  1907               	goto	u3081
 16181  0089  288B               	goto	u3080
 16182  008A  288C               u3081:
 16183  008B                     	goto	l3620
 16184  008B  2880               u3080:
 16185  008C                     	goto	l529
 16186  008C  288D               	
 16187                           l532:	
 16188  008D                     	line	31
 16189                           ;KeyMatrix.c: 31:     }
 16190                           	
 16191                           l529:	
 16192  008D                     	line	32
 16193                           ;KeyMatrix.c: 32:     if(RC1 == 1)
 16194                           	btfss	(57/8),(57)&7	;volatile
 16195  008D  1C87               	goto	u3091
 16196  008E  2890               	goto	u3090
 16197  008F  2891               u3091:
 16198  0090                     	goto	l533
 16199  0090  28A8               u3090:
 16200  0091                     	line	34
 16201                           	
 16202                           l3624:	
 16203  0091                     ;KeyMatrix.c: 33:     {;KeyMatrix.c: 34:         Key_Delay(50);
 16204                           	movlw	032h
 16205  0091  3032               	movwf	(Key_Delay@k)
 16206  0092  00F0               	movlw	0
 16207  0093  3000               	movwf	((Key_Delay@k))+1
 16208  0094  00F1               	fcall	_Key_Delay
 16209  0095  160A  158A  228D  120A  118A  	line	35
 16210                           ;KeyMatrix.c: 35:         while(RC1 == 1)
 16211                           	goto	l534
 16212  009A  28A1               	
 16213                           l535:	
 16214  009B                     	line	36
 16215                           	
 16216                           l3626:	
 16217  009B                     ;KeyMatrix.c: 36:             return 3;
 16218                           	movlw	03h
 16219  009B  3003               	movwf	(?_Keypad_Scan)
 16220  009C  00F6               	movlw	0
 16221  009D  3000               	movwf	((?_Keypad_Scan))+1
 16222  009E  00F7               	goto	l527
 16223  009F  2A17               	
 16224                           l3628:	
 16225  00A0                     	goto	l527
 16226  00A0  2A17               	
 16227                           l534:	
 16228  00A1                     	line	35
 16229                           ;KeyMatrix.c: 35:         while(RC1 == 1)
 16230                           	bcf	status, 5	;RP0=0, select bank0
 16231  00A1  1283               	bcf	status, 6	;RP1=0, select bank0
 16232  00A2  1303               	btfsc	(57/8),(57)&7	;volatile
 16233  00A3  1887               	goto	u3101
 16234  00A4  28A6               	goto	u3100
 16235  00A5  28A7               u3101:
 16236  00A6                     	goto	l3626
 16237  00A6  289B               u3100:
 16238  00A7                     	goto	l533
 16239  00A7  28A8               	
 16240                           l536:	
 16241  00A8                     	line	37
 16242                           ;KeyMatrix.c: 37:     }
 16243                           	
 16244                           l533:	
 16245  00A8                     	line	38
 16246                           ;KeyMatrix.c: 38:     if(RC0 == 1)
 16247                           	btfss	(56/8),(56)&7	;volatile
 16248  00A8  1C07               	goto	u3111
 16249  00A9  28AB               	goto	u3110
 16250  00AA  28AC               u3111:
 16251  00AB                     	goto	l537
 16252  00AB  28C3               u3110:
 16253  00AC                     	line	40
 16254                           	
 16255                           l3630:	
 16256  00AC                     ;KeyMatrix.c: 39:     {;KeyMatrix.c: 40:         Key_Delay(50);
 16257                           	movlw	032h
 16258  00AC  3032               	movwf	(Key_Delay@k)
 16259  00AD  00F0               	movlw	0
 16260  00AE  3000               	movwf	((Key_Delay@k))+1
 16261  00AF  00F1               	fcall	_Key_Delay
 16262  00B0  160A  158A  228D  120A  118A  	line	41
 16263                           ;KeyMatrix.c: 41:         while(RC0 == 1)
 16264                           	goto	l538
 16265  00B5  28BC               	
 16266                           l539:	
 16267  00B6                     	line	42
 16268                           	
 16269                           l3632:	
 16270  00B6                     ;KeyMatrix.c: 42:             return 4;
 16271                           	movlw	04h
 16272  00B6  3004               	movwf	(?_Keypad_Scan)
 16273  00B7  00F6               	movlw	0
 16274  00B8  3000               	movwf	((?_Keypad_Scan))+1
 16275  00B9  00F7               	goto	l527
 16276  00BA  2A17               	
 16277                           l3634:	
 16278  00BB                     	goto	l527
 16279  00BB  2A17               	
 16280                           l538:	
 16281  00BC                     	line	41
 16282                           ;KeyMatrix.c: 41:         while(RC0 == 1)
 16283                           	bcf	status, 5	;RP0=0, select bank0
 16284  00BC  1283               	bcf	status, 6	;RP1=0, select bank0
 16285  00BD  1303               	btfsc	(56/8),(56)&7	;volatile
 16286  00BE  1807               	goto	u3121
 16287  00BF  28C1               	goto	u3120
 16288  00C0  28C2               u3121:
 16289  00C1                     	goto	l3632
 16290  00C1  28B6               u3120:
 16291  00C2                     	goto	l537
 16292  00C2  28C3               	
 16293                           l540:	
 16294  00C3                     	line	43
 16295                           ;KeyMatrix.c: 43:     }
 16296                           	
 16297                           l537:	
 16298  00C3                     	line	44
 16299                           ;KeyMatrix.c: 44:     RC4 = 0; RC5 = 1; RC6 = 0; RC7 = 0;
 16300                           	bcf	(60/8),(60)&7	;volatile
 16301  00C3  1207               	bsf	(61/8),(61)&7	;volatile
 16302  00C4  1687               	bcf	(62/8),(62)&7	;volatile
 16303  00C5  1307               	bcf	(63/8),(63)&7	;volatile
 16304  00C6  1387               	line	45
 16305                           ;KeyMatrix.c: 45:     if(RC3 == 1)
 16306                           	btfss	(59/8),(59)&7	;volatile
 16307  00C7  1D87               	goto	u3131
 16308  00C8  28CA               	goto	u3130
 16309  00C9  28CB               u3131:
 16310  00CA                     	goto	l541
 16311  00CA  28E2               u3130:
 16312  00CB                     	line	47
 16313                           	
 16314                           l3636:	
 16315  00CB                     ;KeyMatrix.c: 46:     {;KeyMatrix.c: 47:         Key_Delay(50);
 16316                           	movlw	032h
 16317  00CB  3032               	movwf	(Key_Delay@k)
 16318  00CC  00F0               	movlw	0
 16319  00CD  3000               	movwf	((Key_Delay@k))+1
 16320  00CE  00F1               	fcall	_Key_Delay
 16321  00CF  160A  158A  228D  120A  118A  	line	48
 16322                           ;KeyMatrix.c: 48:         while(RC3 == 1)
 16323                           	goto	l542
 16324  00D4  28DB               	
 16325                           l543:	
 16326  00D5                     	line	49
 16327                           	
 16328                           l3638:	
 16329  00D5                     ;KeyMatrix.c: 49:             return 5;
 16330                           	movlw	05h
 16331  00D5  3005               	movwf	(?_Keypad_Scan)
 16332  00D6  00F6               	movlw	0
 16333  00D7  3000               	movwf	((?_Keypad_Scan))+1
 16334  00D8  00F7               	goto	l527
 16335  00D9  2A17               	
 16336                           l3640:	
 16337  00DA                     	goto	l527
 16338  00DA  2A17               	
 16339                           l542:	
 16340  00DB                     	line	48
 16341                           ;KeyMatrix.c: 48:         while(RC3 == 1)
 16342                           	bcf	status, 5	;RP0=0, select bank0
 16343  00DB  1283               	bcf	status, 6	;RP1=0, select bank0
 16344  00DC  1303               	btfsc	(59/8),(59)&7	;volatile
 16345  00DD  1987               	goto	u3141
 16346  00DE  28E0               	goto	u3140
 16347  00DF  28E1               u3141:
 16348  00E0                     	goto	l3638
 16349  00E0  28D5               u3140:
 16350  00E1                     	goto	l541
 16351  00E1  28E2               	
 16352                           l544:	
 16353  00E2                     	line	50
 16354                           ;KeyMatrix.c: 50:     }
 16355                           	
 16356                           l541:	
 16357  00E2                     	line	51
 16358                           ;KeyMatrix.c: 51:     if(RC2 == 1)
 16359                           	btfss	(58/8),(58)&7	;volatile
 16360  00E2  1D07               	goto	u3151
 16361  00E3  28E5               	goto	u3150
 16362  00E4  28E6               u3151:
 16363  00E5                     	goto	l545
 16364  00E5  28FD               u3150:
 16365  00E6                     	line	53
 16366                           	
 16367                           l3642:	
 16368  00E6                     ;KeyMatrix.c: 52:     {;KeyMatrix.c: 53:         Key_Delay(50);
 16369                           	movlw	032h
 16370  00E6  3032               	movwf	(Key_Delay@k)
 16371  00E7  00F0               	movlw	0
 16372  00E8  3000               	movwf	((Key_Delay@k))+1
 16373  00E9  00F1               	fcall	_Key_Delay
 16374  00EA  160A  158A  228D  120A  118A  	line	54
 16375                           ;KeyMatrix.c: 54:         while(RC2 == 1)
 16376                           	goto	l546
 16377  00EF  28F6               	
 16378                           l547:	
 16379  00F0                     	line	55
 16380                           	
 16381                           l3644:	
 16382  00F0                     ;KeyMatrix.c: 55:             return 6;
 16383                           	movlw	06h
 16384  00F0  3006               	movwf	(?_Keypad_Scan)
 16385  00F1  00F6               	movlw	0
 16386  00F2  3000               	movwf	((?_Keypad_Scan))+1
 16387  00F3  00F7               	goto	l527
 16388  00F4  2A17               	
 16389                           l3646:	
 16390  00F5                     	goto	l527
 16391  00F5  2A17               	
 16392                           l546:	
 16393  00F6                     	line	54
 16394                           ;KeyMatrix.c: 54:         while(RC2 == 1)
 16395                           	bcf	status, 5	;RP0=0, select bank0
 16396  00F6  1283               	bcf	status, 6	;RP1=0, select bank0
 16397  00F7  1303               	btfsc	(58/8),(58)&7	;volatile
 16398  00F8  1907               	goto	u3161
 16399  00F9  28FB               	goto	u3160
 16400  00FA  28FC               u3161:
 16401  00FB                     	goto	l3644
 16402  00FB  28F0               u3160:
 16403  00FC                     	goto	l545
 16404  00FC  28FD               	
 16405                           l548:	
 16406  00FD                     	line	56
 16407                           ;KeyMatrix.c: 56:     }
 16408                           	
 16409                           l545:	
 16410  00FD                     	line	57
 16411                           ;KeyMatrix.c: 57:     if(RC1 == 1)
 16412                           	btfss	(57/8),(57)&7	;volatile
 16413  00FD  1C87               	goto	u3171
 16414  00FE  2900               	goto	u3170
 16415  00FF  2901               u3171:
 16416  0100                     	goto	l549
 16417  0100  2918               u3170:
 16418  0101                     	line	59
 16419                           	
 16420                           l3648:	
 16421  0101                     ;KeyMatrix.c: 58:     {;KeyMatrix.c: 59:         Key_Delay(50);
 16422                           	movlw	032h
 16423  0101  3032               	movwf	(Key_Delay@k)
 16424  0102  00F0               	movlw	0
 16425  0103  3000               	movwf	((Key_Delay@k))+1
 16426  0104  00F1               	fcall	_Key_Delay
 16427  0105  160A  158A  228D  120A  118A  	line	60
 16428                           ;KeyMatrix.c: 60:         while(RC1 == 1)
 16429                           	goto	l550
 16430  010A  2911               	
 16431                           l551:	
 16432  010B                     	line	61
 16433                           	
 16434                           l3650:	
 16435  010B                     ;KeyMatrix.c: 61:             return 7;
 16436                           	movlw	07h
 16437  010B  3007               	movwf	(?_Keypad_Scan)
 16438  010C  00F6               	movlw	0
 16439  010D  3000               	movwf	((?_Keypad_Scan))+1
 16440  010E  00F7               	goto	l527
 16441  010F  2A17               	
 16442                           l3652:	
 16443  0110                     	goto	l527
 16444  0110  2A17               	
 16445                           l550:	
 16446  0111                     	line	60
 16447                           ;KeyMatrix.c: 60:         while(RC1 == 1)
 16448                           	bcf	status, 5	;RP0=0, select bank0
 16449  0111  1283               	bcf	status, 6	;RP1=0, select bank0
 16450  0112  1303               	btfsc	(57/8),(57)&7	;volatile
 16451  0113  1887               	goto	u3181
 16452  0114  2916               	goto	u3180
 16453  0115  2917               u3181:
 16454  0116                     	goto	l3650
 16455  0116  290B               u3180:
 16456  0117                     	goto	l549
 16457  0117  2918               	
 16458                           l552:	
 16459  0118                     	line	62
 16460                           ;KeyMatrix.c: 62:     }
 16461                           	
 16462                           l549:	
 16463  0118                     	line	63
 16464                           ;KeyMatrix.c: 63:     if(RC0 == 1)
 16465                           	btfss	(56/8),(56)&7	;volatile
 16466  0118  1C07               	goto	u3191
 16467  0119  291B               	goto	u3190
 16468  011A  291C               u3191:
 16469  011B                     	goto	l553
 16470  011B  2933               u3190:
 16471  011C                     	line	65
 16472                           	
 16473                           l3654:	
 16474  011C                     ;KeyMatrix.c: 64:     {;KeyMatrix.c: 65:         Key_Delay(50);
 16475                           	movlw	032h
 16476  011C  3032               	movwf	(Key_Delay@k)
 16477  011D  00F0               	movlw	0
 16478  011E  3000               	movwf	((Key_Delay@k))+1
 16479  011F  00F1               	fcall	_Key_Delay
 16480  0120  160A  158A  228D  120A  118A  	line	66
 16481                           ;KeyMatrix.c: 66:         while(RC0 == 1)
 16482                           	goto	l554
 16483  0125  292C               	
 16484                           l555:	
 16485  0126                     	line	67
 16486                           	
 16487                           l3656:	
 16488  0126                     ;KeyMatrix.c: 67:             return 8;
 16489                           	movlw	08h
 16490  0126  3008               	movwf	(?_Keypad_Scan)
 16491  0127  00F6               	movlw	0
 16492  0128  3000               	movwf	((?_Keypad_Scan))+1
 16493  0129  00F7               	goto	l527
 16494  012A  2A17               	
 16495                           l3658:	
 16496  012B                     	goto	l527
 16497  012B  2A17               	
 16498                           l554:	
 16499  012C                     	line	66
 16500                           ;KeyMatrix.c: 66:         while(RC0 == 1)
 16501                           	bcf	status, 5	;RP0=0, select bank0
 16502  012C  1283               	bcf	status, 6	;RP1=0, select bank0
 16503  012D  1303               	btfsc	(56/8),(56)&7	;volatile
 16504  012E  1807               	goto	u3201
 16505  012F  2931               	goto	u3200
 16506  0130  2932               u3201:
 16507  0131                     	goto	l3656
 16508  0131  2926               u3200:
 16509  0132                     	goto	l553
 16510  0132  2933               	
 16511                           l556:	
 16512  0133                     	line	68
 16513                           ;KeyMatrix.c: 68:     }
 16514                           	
 16515                           l553:	
 16516  0133                     	line	69
 16517                           ;KeyMatrix.c: 69:     RC4 = 0; RC5 = 0; RC6 = 1; RC7 = 0;
 16518                           	bcf	(60/8),(60)&7	;volatile
 16519  0133  1207               	bcf	(61/8),(61)&7	;volatile
 16520  0134  1287               	bsf	(62/8),(62)&7	;volatile
 16521  0135  1707               	bcf	(63/8),(63)&7	;volatile
 16522  0136  1387               	line	70
 16523                           ;KeyMatrix.c: 70:     if(RC3 == 1)
 16524                           	btfss	(59/8),(59)&7	;volatile
 16525  0137  1D87               	goto	u3211
 16526  0138  293A               	goto	u3210
 16527  0139  293B               u3211:
 16528  013A                     	goto	l557
 16529  013A  2952               u3210:
 16530  013B                     	line	72
 16531                           	
 16532                           l3660:	
 16533  013B                     ;KeyMatrix.c: 71:     {;KeyMatrix.c: 72:         Key_Delay(50);
 16534                           	movlw	032h
 16535  013B  3032               	movwf	(Key_Delay@k)
 16536  013C  00F0               	movlw	0
 16537  013D  3000               	movwf	((Key_Delay@k))+1
 16538  013E  00F1               	fcall	_Key_Delay
 16539  013F  160A  158A  228D  120A  118A  	line	73
 16540                           ;KeyMatrix.c: 73:         while(RC3 == 1)
 16541                           	goto	l558
 16542  0144  294B               	
 16543                           l559:	
 16544  0145                     	line	74
 16545                           	
 16546                           l3662:	
 16547  0145                     ;KeyMatrix.c: 74:             return 9;
 16548                           	movlw	09h
 16549  0145  3009               	movwf	(?_Keypad_Scan)
 16550  0146  00F6               	movlw	0
 16551  0147  3000               	movwf	((?_Keypad_Scan))+1
 16552  0148  00F7               	goto	l527
 16553  0149  2A17               	
 16554                           l3664:	
 16555  014A                     	goto	l527
 16556  014A  2A17               	
 16557                           l558:	
 16558  014B                     	line	73
 16559                           ;KeyMatrix.c: 73:         while(RC3 == 1)
 16560                           	bcf	status, 5	;RP0=0, select bank0
 16561  014B  1283               	bcf	status, 6	;RP1=0, select bank0
 16562  014C  1303               	btfsc	(59/8),(59)&7	;volatile
 16563  014D  1987               	goto	u3221
 16564  014E  2950               	goto	u3220
 16565  014F  2951               u3221:
 16566  0150                     	goto	l3662
 16567  0150  2945               u3220:
 16568  0151                     	goto	l557
 16569  0151  2952               	
 16570                           l560:	
 16571  0152                     	line	75
 16572                           ;KeyMatrix.c: 75:     }
 16573                           	
 16574                           l557:	
 16575  0152                     	line	76
 16576                           ;KeyMatrix.c: 76:     if(RC2 == 1)
 16577                           	btfss	(58/8),(58)&7	;volatile
 16578  0152  1D07               	goto	u3231
 16579  0153  2955               	goto	u3230
 16580  0154  2956               u3231:
 16581  0155                     	goto	l561
 16582  0155  296D               u3230:
 16583  0156                     	line	78
 16584                           	
 16585                           l3666:	
 16586  0156                     ;KeyMatrix.c: 77:     {;KeyMatrix.c: 78:         Key_Delay(50);
 16587                           	movlw	032h
 16588  0156  3032               	movwf	(Key_Delay@k)
 16589  0157  00F0               	movlw	0
 16590  0158  3000               	movwf	((Key_Delay@k))+1
 16591  0159  00F1               	fcall	_Key_Delay
 16592  015A  160A  158A  228D  120A  118A  	line	79
 16593                           ;KeyMatrix.c: 79:         while(RC2 == 1)
 16594                           	goto	l562
 16595  015F  2966               	
 16596                           l563:	
 16597  0160                     	line	80
 16598                           	
 16599                           l3668:	
 16600  0160                     ;KeyMatrix.c: 80:             return 10;
 16601                           	movlw	0Ah
 16602  0160  300A               	movwf	(?_Keypad_Scan)
 16603  0161  00F6               	movlw	0
 16604  0162  3000               	movwf	((?_Keypad_Scan))+1
 16605  0163  00F7               	goto	l527
 16606  0164  2A17               	
 16607                           l3670:	
 16608  0165                     	goto	l527
 16609  0165  2A17               	
 16610                           l562:	
 16611  0166                     	line	79
 16612                           ;KeyMatrix.c: 79:         while(RC2 == 1)
 16613                           	bcf	status, 5	;RP0=0, select bank0
 16614  0166  1283               	bcf	status, 6	;RP1=0, select bank0
 16615  0167  1303               	btfsc	(58/8),(58)&7	;volatile
 16616  0168  1907               	goto	u3241
 16617  0169  296B               	goto	u3240
 16618  016A  296C               u3241:
 16619  016B                     	goto	l3668
 16620  016B  2960               u3240:
 16621  016C                     	goto	l561
 16622  016C  296D               	
 16623                           l564:	
 16624  016D                     	line	81
 16625                           ;KeyMatrix.c: 81:     }
 16626                           	
 16627                           l561:	
 16628  016D                     	line	82
 16629                           ;KeyMatrix.c: 82:     if(RC1 == 1)
 16630                           	btfss	(57/8),(57)&7	;volatile
 16631  016D  1C87               	goto	u3251
 16632  016E  2970               	goto	u3250
 16633  016F  2971               u3251:
 16634  0170                     	goto	l565
 16635  0170  2988               u3250:
 16636  0171                     	line	84
 16637                           	
 16638                           l3672:	
 16639  0171                     ;KeyMatrix.c: 83:     {;KeyMatrix.c: 84:         Key_Delay(50);
 16640                           	movlw	032h
 16641  0171  3032               	movwf	(Key_Delay@k)
 16642  0172  00F0               	movlw	0
 16643  0173  3000               	movwf	((Key_Delay@k))+1
 16644  0174  00F1               	fcall	_Key_Delay
 16645  0175  160A  158A  228D  120A  118A  	line	85
 16646                           ;KeyMatrix.c: 85:         while(RC1 == 1)
 16647                           	goto	l566
 16648  017A  2981               	
 16649                           l567:	
 16650  017B                     	line	86
 16651                           	
 16652                           l3674:	
 16653  017B                     ;KeyMatrix.c: 86:             return 11;
 16654                           	movlw	0Bh
 16655  017B  300B               	movwf	(?_Keypad_Scan)
 16656  017C  00F6               	movlw	0
 16657  017D  3000               	movwf	((?_Keypad_Scan))+1
 16658  017E  00F7               	goto	l527
 16659  017F  2A17               	
 16660                           l3676:	
 16661  0180                     	goto	l527
 16662  0180  2A17               	
 16663                           l566:	
 16664  0181                     	line	85
 16665                           ;KeyMatrix.c: 85:         while(RC1 == 1)
 16666                           	bcf	status, 5	;RP0=0, select bank0
 16667  0181  1283               	bcf	status, 6	;RP1=0, select bank0
 16668  0182  1303               	btfsc	(57/8),(57)&7	;volatile
 16669  0183  1887               	goto	u3261
 16670  0184  2986               	goto	u3260
 16671  0185  2987               u3261:
 16672  0186                     	goto	l3674
 16673  0186  297B               u3260:
 16674  0187                     	goto	l565
 16675  0187  2988               	
 16676                           l568:	
 16677  0188                     	line	87
 16678                           ;KeyMatrix.c: 87:     }
 16679                           	
 16680                           l565:	
 16681  0188                     	line	88
 16682                           ;KeyMatrix.c: 88:     if(RC0 == 1)
 16683                           	btfss	(56/8),(56)&7	;volatile
 16684  0188  1C07               	goto	u3271
 16685  0189  298B               	goto	u3270
 16686  018A  298C               u3271:
 16687  018B                     	goto	l569
 16688  018B  29A3               u3270:
 16689  018C                     	line	90
 16690                           	
 16691                           l3678:	
 16692  018C                     ;KeyMatrix.c: 89:     {;KeyMatrix.c: 90:         Key_Delay(50);
 16693                           	movlw	032h
 16694  018C  3032               	movwf	(Key_Delay@k)
 16695  018D  00F0               	movlw	0
 16696  018E  3000               	movwf	((Key_Delay@k))+1
 16697  018F  00F1               	fcall	_Key_Delay
 16698  0190  160A  158A  228D  120A  118A  	line	91
 16699                           ;KeyMatrix.c: 91:         while(RC0 == 1)
 16700                           	goto	l570
 16701  0195  299C               	
 16702                           l571:	
 16703  0196                     	line	92
 16704                           	
 16705                           l3680:	
 16706  0196                     ;KeyMatrix.c: 92:             return 12;
 16707                           	movlw	0Ch
 16708  0196  300C               	movwf	(?_Keypad_Scan)
 16709  0197  00F6               	movlw	0
 16710  0198  3000               	movwf	((?_Keypad_Scan))+1
 16711  0199  00F7               	goto	l527
 16712  019A  2A17               	
 16713                           l3682:	
 16714  019B                     	goto	l527
 16715  019B  2A17               	
 16716                           l570:	
 16717  019C                     	line	91
 16718                           ;KeyMatrix.c: 91:         while(RC0 == 1)
 16719                           	bcf	status, 5	;RP0=0, select bank0
 16720  019C  1283               	bcf	status, 6	;RP1=0, select bank0
 16721  019D  1303               	btfsc	(56/8),(56)&7	;volatile
 16722  019E  1807               	goto	u3281
 16723  019F  29A1               	goto	u3280
 16724  01A0  29A2               u3281:
 16725  01A1                     	goto	l3680
 16726  01A1  2996               u3280:
 16727  01A2                     	goto	l569
 16728  01A2  29A3               	
 16729                           l572:	
 16730  01A3                     	line	93
 16731                           ;KeyMatrix.c: 93:     }
 16732                           	
 16733                           l569:	
 16734  01A3                     	line	94
 16735                           ;KeyMatrix.c: 94:     RC4 = 0; RC5 = 0; RC6 = 0; RC7 = 1;
 16736                           	bcf	(60/8),(60)&7	;volatile
 16737  01A3  1207               	bcf	(61/8),(61)&7	;volatile
 16738  01A4  1287               	bcf	(62/8),(62)&7	;volatile
 16739  01A5  1307               	bsf	(63/8),(63)&7	;volatile
 16740  01A6  1787               	line	95
 16741                           ;KeyMatrix.c: 95:     if(RC3 == 1)
 16742                           	btfss	(59/8),(59)&7	;volatile
 16743  01A7  1D87               	goto	u3291
 16744  01A8  29AA               	goto	u3290
 16745  01A9  29AB               u3291:
 16746  01AA                     	goto	l573
 16747  01AA  29C2               u3290:
 16748  01AB                     	line	97
 16749                           	
 16750                           l3684:	
 16751  01AB                     ;KeyMatrix.c: 96:     {;KeyMatrix.c: 97:         Key_Delay(50);
 16752                           	movlw	032h
 16753  01AB  3032               	movwf	(Key_Delay@k)
 16754  01AC  00F0               	movlw	0
 16755  01AD  3000               	movwf	((Key_Delay@k))+1
 16756  01AE  00F1               	fcall	_Key_Delay
 16757  01AF  160A  158A  228D  120A  118A  	line	98
 16758                           ;KeyMatrix.c: 98:         while(RC3 == 1)
 16759                           	goto	l574
 16760  01B4  29BB               	
 16761                           l575:	
 16762  01B5                     	line	99
 16763                           	
 16764                           l3686:	
 16765  01B5                     ;KeyMatrix.c: 99:             return 13;
 16766                           	movlw	0Dh
 16767  01B5  300D               	movwf	(?_Keypad_Scan)
 16768  01B6  00F6               	movlw	0
 16769  01B7  3000               	movwf	((?_Keypad_Scan))+1
 16770  01B8  00F7               	goto	l527
 16771  01B9  2A17               	
 16772                           l3688:	
 16773  01BA                     	goto	l527
 16774  01BA  2A17               	
 16775                           l574:	
 16776  01BB                     	line	98
 16777                           ;KeyMatrix.c: 98:         while(RC3 == 1)
 16778                           	bcf	status, 5	;RP0=0, select bank0
 16779  01BB  1283               	bcf	status, 6	;RP1=0, select bank0
 16780  01BC  1303               	btfsc	(59/8),(59)&7	;volatile
 16781  01BD  1987               	goto	u3301
 16782  01BE  29C0               	goto	u3300
 16783  01BF  29C1               u3301:
 16784  01C0                     	goto	l3686
 16785  01C0  29B5               u3300:
 16786  01C1                     	goto	l573
 16787  01C1  29C2               	
 16788                           l576:	
 16789  01C2                     	line	100
 16790                           ;KeyMatrix.c: 100:     }
 16791                           	
 16792                           l573:	
 16793  01C2                     	line	101
 16794                           ;KeyMatrix.c: 101:     if(RC2 == 1)
 16795                           	btfss	(58/8),(58)&7	;volatile
 16796  01C2  1D07               	goto	u3311
 16797  01C3  29C5               	goto	u3310
 16798  01C4  29C6               u3311:
 16799  01C5                     	goto	l577
 16800  01C5  29DD               u3310:
 16801  01C6                     	line	103
 16802                           	
 16803                           l3690:	
 16804  01C6                     ;KeyMatrix.c: 102:     {;KeyMatrix.c: 103:         Key_Delay(50);
 16805                           	movlw	032h
 16806  01C6  3032               	movwf	(Key_Delay@k)
 16807  01C7  00F0               	movlw	0
 16808  01C8  3000               	movwf	((Key_Delay@k))+1
 16809  01C9  00F1               	fcall	_Key_Delay
 16810  01CA  160A  158A  228D  120A  118A  	line	104
 16811                           ;KeyMatrix.c: 104:         while(RC2 == 1)
 16812                           	goto	l578
 16813  01CF  29D6               	
 16814                           l579:	
 16815  01D0                     	line	105
 16816                           	
 16817                           l3692:	
 16818  01D0                     ;KeyMatrix.c: 105:             return 14;
 16819                           	movlw	0Eh
 16820  01D0  300E               	movwf	(?_Keypad_Scan)
 16821  01D1  00F6               	movlw	0
 16822  01D2  3000               	movwf	((?_Keypad_Scan))+1
 16823  01D3  00F7               	goto	l527
 16824  01D4  2A17               	
 16825                           l3694:	
 16826  01D5                     	goto	l527
 16827  01D5  2A17               	
 16828                           l578:	
 16829  01D6                     	line	104
 16830                           ;KeyMatrix.c: 104:         while(RC2 == 1)
 16831                           	bcf	status, 5	;RP0=0, select bank0
 16832  01D6  1283               	bcf	status, 6	;RP1=0, select bank0
 16833  01D7  1303               	btfsc	(58/8),(58)&7	;volatile
 16834  01D8  1907               	goto	u3321
 16835  01D9  29DB               	goto	u3320
 16836  01DA  29DC               u3321:
 16837  01DB                     	goto	l3692
 16838  01DB  29D0               u3320:
 16839  01DC                     	goto	l577
 16840  01DC  29DD               	
 16841                           l580:	
 16842  01DD                     	line	106
 16843                           ;KeyMatrix.c: 106:     }
 16844                           	
 16845                           l577:	
 16846  01DD                     	line	107
 16847                           ;KeyMatrix.c: 107:     if(RC1 == 1)
 16848                           	btfss	(57/8),(57)&7	;volatile
 16849  01DD  1C87               	goto	u3331
 16850  01DE  29E0               	goto	u3330
 16851  01DF  29E1               u3331:
 16852  01E0                     	goto	l581
 16853  01E0  29F8               u3330:
 16854  01E1                     	line	109
 16855                           	
 16856                           l3696:	
 16857  01E1                     ;KeyMatrix.c: 108:     {;KeyMatrix.c: 109:         Key_Delay(50);
 16858                           	movlw	032h
 16859  01E1  3032               	movwf	(Key_Delay@k)
 16860  01E2  00F0               	movlw	0
 16861  01E3  3000               	movwf	((Key_Delay@k))+1
 16862  01E4  00F1               	fcall	_Key_Delay
 16863  01E5  160A  158A  228D  120A  118A  	line	110
 16864                           ;KeyMatrix.c: 110:         while(RC1 == 1)
 16865                           	goto	l582
 16866  01EA  29F1               	
 16867                           l583:	
 16868  01EB                     	line	111
 16869                           	
 16870                           l3698:	
 16871  01EB                     ;KeyMatrix.c: 111:             return 15;
 16872                           	movlw	0Fh
 16873  01EB  300F               	movwf	(?_Keypad_Scan)
 16874  01EC  00F6               	movlw	0
 16875  01ED  3000               	movwf	((?_Keypad_Scan))+1
 16876  01EE  00F7               	goto	l527
 16877  01EF  2A17               	
 16878                           l3700:	
 16879  01F0                     	goto	l527
 16880  01F0  2A17               	
 16881                           l582:	
 16882  01F1                     	line	110
 16883                           ;KeyMatrix.c: 110:         while(RC1 == 1)
 16884                           	bcf	status, 5	;RP0=0, select bank0
 16885  01F1  1283               	bcf	status, 6	;RP1=0, select bank0
 16886  01F2  1303               	btfsc	(57/8),(57)&7	;volatile
 16887  01F3  1887               	goto	u3341
 16888  01F4  29F6               	goto	u3340
 16889  01F5  29F7               u3341:
 16890  01F6                     	goto	l3698
 16891  01F6  29EB               u3340:
 16892  01F7                     	goto	l581
 16893  01F7  29F8               	
 16894                           l584:	
 16895  01F8                     	line	112
 16896                           ;KeyMatrix.c: 112:     }
 16897                           	
 16898                           l581:	
 16899  01F8                     	line	113
 16900                           ;KeyMatrix.c: 113:     if(RC0 == 1)
 16901                           	btfss	(56/8),(56)&7	;volatile
 16902  01F8  1C07               	goto	u3351
 16903  01F9  29FB               	goto	u3350
 16904  01FA  29FC               u3351:
 16905  01FB                     	goto	l3708
 16906  01FB  2A14               u3350:
 16907  01FC                     	line	115
 16908                           	
 16909                           l3702:	
 16910  01FC                     ;KeyMatrix.c: 114:     {;KeyMatrix.c: 115:         Key_Delay(50);
 16911                           	movlw	032h
 16912  01FC  3032               	movwf	(Key_Delay@k)
 16913  01FD  00F0               	movlw	0
 16914  01FE  3000               	movwf	((Key_Delay@k))+1
 16915  01FF  00F1               	fcall	_Key_Delay
 16916  0200  160A  158A  228D  120A  118A  	line	116
 16917                           ;KeyMatrix.c: 116:         while(RC0 == 1)
 16918                           	goto	l586
 16919  0205  2A0C               	
 16920                           l587:	
 16921  0206                     	line	117
 16922                           	
 16923                           l3704:	
 16924  0206                     ;KeyMatrix.c: 117:             return 16;
 16925                           	movlw	010h
 16926  0206  3010               	movwf	(?_Keypad_Scan)
 16927  0207  00F6               	movlw	0
 16928  0208  3000               	movwf	((?_Keypad_Scan))+1
 16929  0209  00F7               	goto	l527
 16930  020A  2A17               	
 16931                           l3706:	
 16932  020B                     	goto	l527
 16933  020B  2A17               	
 16934                           l586:	
 16935  020C                     	line	116
 16936                           ;KeyMatrix.c: 116:         while(RC0 == 1)
 16937                           	bcf	status, 5	;RP0=0, select bank0
 16938  020C  1283               	bcf	status, 6	;RP1=0, select bank0
 16939  020D  1303               	btfsc	(56/8),(56)&7	;volatile
 16940  020E  1807               	goto	u3361
 16941  020F  2A11               	goto	u3360
 16942  0210  2A12               u3361:
 16943  0211                     	goto	l3704
 16944  0211  2A06               u3360:
 16945  0212                     	goto	l3708
 16946  0212  2A14               	
 16947                           l588:	
 16948  0213                     	goto	l3708
 16949  0213  2A14               	line	118
 16950                           ;KeyMatrix.c: 118:     }
 16951                           	
 16952                           l585:	
 16953  0214                     	line	120
 16954                           	
 16955                           l3708:	
 16956  0214                     ;KeyMatrix.c: 120:         return 0;
 16957                           	clrf	(?_Keypad_Scan)
 16958  0214  01F6               	clrf	(?_Keypad_Scan+1)
 16959  0215  01F7               	goto	l527
 16960  0216  2A17               	
 16961                           l3710:	
 16962  0217                     	line	121
 16963                           	
 16964                           l527:	
 16965  0217                     	return
 16966  0217  0008               	opt stack 0
 16967                           GLOBAL	__end_of_Keypad_Scan
 16968                           	__end_of_Keypad_Scan:
 16969  0218                     	signat	_Keypad_Scan,90
 16970                           	global	_Key_Delay
 16971                           
 16972 ;; *************** function _Key_Delay *****************
 16973 ;; Defined at:
 16974 ;;		line 5 in file "KeyMatrix.c"
 16975 ;; Parameters:    Size  Location     Type
 16976 ;;  k               2    0[COMMON] int 
 16977 ;; Auto vars:     Size  Location     Type
 16978 ;;  j               2    4[COMMON] unsigned int 
 16979 ;;  i               2    2[COMMON] unsigned int 
 16980 ;; Return value:  Size  Location     Type
 16981 ;;                  1    wreg      void 
 16982 ;; Registers used:
 16983 ;;		wreg, status,2
 16984 ;; Tracked objects:
 16985 ;;		On entry : 0/0
 16986 ;;		On exit  : 0/0
 16987 ;;		Unchanged: 0/0
 16988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 16989 ;;      Params:         2       0       0       0       0
 16990 ;;      Locals:         4       0       0       0       0
 16991 ;;      Temps:          0       0       0       0       0
 16992 ;;      Totals:         6       0       0       0       0
 16993 ;;Total ram usage:        6 bytes
 16994 ;; Hardware stack levels used:    1
 16995 ;; This function calls:
 16996 ;;		Nothing
 16997 ;; This function is called by:
 16998 ;;		_Keypad_Scan
 16999 ;; This function uses a non-reentrant model
 17000 ;;
 17001                           psect	text46,local,class=CODE,delta=2,merge=1,group=0
 17002                           	line	5
 17003                           global __ptext46
 17004                           __ptext46:	;psect for function _Key_Delay
 17005  1A8D                     psect	text46
 17006                           	file	"KeyMatrix.c"
 17007                           	line	5
 17008                           	global	__size_of_Key_Delay
 17009                           	__size_of_Key_Delay	equ	__end_of_Key_Delay-_Key_Delay
 17010  0032                     	
 17011                           _Key_Delay:	
 17012  1A8D                     ;incstack = 0
 17013                           	opt	stack 5
 17014                           ; Regs used in _Key_Delay: [wreg+status,2]
 17015                           	line	7
 17016                           	
 17017                           l3216:	
 17018  1A8D                     ;KeyMatrix.c: 6:     unsigned int i,j;;KeyMatrix.c: 7:     for (i= 0; i < k; i++)
 17019                           	clrf	(Key_Delay@i)
 17020  1A8D  01F2               	clrf	(Key_Delay@i+1)
 17021  1A8E  01F3               	goto	l513
 17022  1A8F  2AB3               	
 17023                           l514:	
 17024  1A90                     	line	8
 17025                           	
 17026                           l3218:	
 17027  1A90                     ;KeyMatrix.c: 8:         for(j = 0; j < 100; j++);
 17028                           	clrf	(Key_Delay@j)
 17029  1A90  01F4               	clrf	(Key_Delay@j+1)
 17030  1A91  01F5               	
 17031                           l3220:	
 17032  1A92                     	movlw	0
 17033  1A92  3000               	subwf	(Key_Delay@j+1),w
 17034  1A93  0275               	movlw	064h
 17035  1A94  3064               	skipnz
 17036  1A95  1903               	subwf	(Key_Delay@j),w
 17037  1A96  0274               	skipc
 17038  1A97  1C03               	goto	u2541
 17039  1A98  2A9A               	goto	u2540
 17040  1A99  2A9B               u2541:
 17041  1A9A                     	goto	l3224
 17042  1A9A  2A9D               u2540:
 17043  1A9B                     	goto	l3226
 17044  1A9B  2AAD               	
 17045                           l3222:	
 17046  1A9C                     	goto	l3226
 17047  1A9C  2AAD               	
 17048                           l515:	
 17049  1A9D                     	
 17050                           l3224:	
 17051  1A9D                     	movlw	01h
 17052  1A9D  3001               	addwf	(Key_Delay@j),f
 17053  1A9E  07F4               	skipnc
 17054  1A9F  1803               	incf	(Key_Delay@j+1),f
 17055  1AA0  0AF5               	movlw	0
 17056  1AA1  3000               	addwf	(Key_Delay@j+1),f
 17057  1AA2  07F5               	movlw	0
 17058  1AA3  3000               	subwf	(Key_Delay@j+1),w
 17059  1AA4  0275               	movlw	064h
 17060  1AA5  3064               	skipnz
 17061  1AA6  1903               	subwf	(Key_Delay@j),w
 17062  1AA7  0274               	skipc
 17063  1AA8  1C03               	goto	u2551
 17064  1AA9  2AAB               	goto	u2550
 17065  1AAA  2AAC               u2551:
 17066  1AAB                     	goto	l3224
 17067  1AAB  2A9D               u2550:
 17068  1AAC                     	goto	l3226
 17069  1AAC  2AAD               	
 17070                           l516:	
 17071  1AAD                     	
 17072                           l3226:	
 17073  1AAD                     	movlw	01h
 17074  1AAD  3001               	addwf	(Key_Delay@i),f
 17075  1AAE  07F2               	skipnc
 17076  1AAF  1803               	incf	(Key_Delay@i+1),f
 17077  1AB0  0AF3               	movlw	0
 17078  1AB1  3000               	addwf	(Key_Delay@i+1),f
 17079  1AB2  07F3               	
 17080                           l513:	
 17081  1AB3                     	movf	(Key_Delay@k+1),w
 17082  1AB3  0871               	subwf	(Key_Delay@i+1),w
 17083  1AB4  0273               	skipz
 17084  1AB5  1D03               	goto	u2565
 17085  1AB6  2AB9               	movf	(Key_Delay@k),w
 17086  1AB7  0870               	subwf	(Key_Delay@i),w
 17087  1AB8  0272               u2565:
 17088  1AB9                     	skipc
 17089  1AB9  1C03               	goto	u2561
 17090  1ABA  2ABC               	goto	u2560
 17091  1ABB  2ABD               u2561:
 17092  1ABC                     	goto	l3218
 17093  1ABC  2A90               u2560:
 17094  1ABD                     	goto	l518
 17095  1ABD  2ABE               	
 17096                           l517:	
 17097  1ABE                     	line	9
 17098                           	
 17099                           l518:	
 17100  1ABE                     	return
 17101  1ABE  0008               	opt stack 0
 17102                           GLOBAL	__end_of_Key_Delay
 17103                           	__end_of_Key_Delay:
 17104  1ABF                     	signat	_Key_Delay,4217
 17105                           	global	_RealTimeClock_set_burst_time
 17106                           
 17107 ;; *************** function _RealTimeClock_set_burst_time *****************
 17108 ;; Defined at:
 17109 ;;		line 55 in file "realtimeclock.c"
 17110 ;; Parameters:    Size  Location     Type
 17111 ;;  time            1    wreg     PTR int 
 17112 ;;		 -> main@start_date(16), 
 17113 ;; Auto vars:     Size  Location     Type
 17114 ;;  time            1    2[BANK0 ] PTR int 
 17115 ;;		 -> main@start_date(16), 
 17116 ;;  i               2    3[BANK0 ] int 
 17117 ;; Return value:  Size  Location     Type
 17118 ;;                  1    wreg      void 
 17119 ;; Registers used:
 17120 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 17121 ;; Tracked objects:
 17122 ;;		On entry : 0/0
 17123 ;;		On exit  : 0/0
 17124 ;;		Unchanged: 0/0
 17125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 17126 ;;      Params:         0       0       0       0       0
 17127 ;;      Locals:         0       3       0       0       0
 17128 ;;      Temps:          0       2       0       0       0
 17129 ;;      Totals:         0       5       0       0       0
 17130 ;;Total ram usage:        5 bytes
 17131 ;; Hardware stack levels used:    1
 17132 ;; Hardware stack levels required when called:    2
 17133 ;; This function calls:
 17134 ;;		_RealTimeClock_write_byte
 17135 ;;		___int_to_hex
 17136 ;; This function is called by:
 17137 ;;		_main
 17138 ;; This function uses a non-reentrant model
 17139 ;;
 17140                           psect	text47,local,class=CODE,delta=2,merge=1,group=0
 17141                           	file	"realtimeclock.c"
 17142                           	line	55
 17143                           global __ptext47
 17144                           __ptext47:	;psect for function _RealTimeClock_set_burst_time
 17145  1E15                     psect	text47
 17146                           	file	"realtimeclock.c"
 17147                           	line	55
 17148                           	global	__size_of_RealTimeClock_set_burst_time
 17149                           	__size_of_RealTimeClock_set_burst_time	equ	__end_of_RealTimeClock_set_burst_time-_RealT
                                 imeClock_set_burst_time
 17150  004F                     	
 17151                           _RealTimeClock_set_burst_time:	
 17152  1E15                     ;incstack = 0
 17153                           	opt	stack 5
 17154                           ; Regs used in _RealTimeClock_set_burst_time: [wreg-fsr0h+status,2+status,0+btemp+1+pcla
                                 th+cstack]
 17155                           ;RealTimeClock_set_burst_time@time stored from wreg
 17156                           	bcf	status, 5	;RP0=0, select bank0
 17157  1E15  1283               	bcf	status, 6	;RP1=0, select bank0
 17158  1E16  1303               	movwf	(RealTimeClock_set_burst_time@time)
 17159  1E17  00A2               	line	56
 17160                           	
 17161                           l4650:	
 17162  1E18                     ;realtimeclock.c: 56:     RB5 = 1;
 17163                           	bsf	(53/8),(53)&7	;volatile
 17164  1E18  1686               	line	57
 17165                           	
 17166                           l4652:	
 17167  1E19                     ;realtimeclock.c: 57:     RealTimeClock_write_byte(0xbe);
 17168                           	movlw	low(0BEh)
 17169  1E19  30BE               	fcall	_RealTimeClock_write_byte
 17170  1E1A  160A  158A  2328  160A  158A  	line	58
 17171                           	
 17172                           l4654:	
 17173  1E1F                     ;realtimeclock.c: 58:     for(int i = 0; i < 8; ++i) {
 17174                           	bcf	status, 5	;RP0=0, select bank0
 17175  1E1F  1283               	bcf	status, 6	;RP1=0, select bank0
 17176  1E20  1303               	clrf	(RealTimeClock_set_burst_time@i)
 17177  1E21  01A3               	clrf	(RealTimeClock_set_burst_time@i+1)
 17178  1E22  01A4               	
 17179                           l4656:	
 17180  1E23                     	movf	(RealTimeClock_set_burst_time@i+1),w
 17181  1E23  0824               	xorlw	80h
 17182  1E24  3A80               	movwf	btemp+1
 17183  1E25  00FF               	movlw	(0)^80h
 17184  1E26  3080               	subwf	btemp+1,w
 17185  1E27  027F               	skipz
 17186  1E28  1D03               	goto	u4395
 17187  1E29  2E2C               	movlw	08h
 17188  1E2A  3008               	subwf	(RealTimeClock_set_burst_time@i),w
 17189  1E2B  0223               u4395:
 17190  1E2C                     
 17191                           	skipc
 17192  1E2C  1C03               	goto	u4391
 17193  1E2D  2E2F               	goto	u4390
 17194  1E2E  2E30               u4391:
 17195  1E2F                     	goto	l4660
 17196  1E2F  2E32               u4390:
 17197  1E30                     	goto	l419
 17198  1E30  2E60               	
 17199                           l4658:	
 17200  1E31                     	goto	l419
 17201  1E31  2E60               	
 17202                           l418:	
 17203  1E32                     	line	59
 17204                           	
 17205                           l4660:	
 17206  1E32                     ;realtimeclock.c: 59:         RealTimeClock_write_byte(__int_to_hex(time[i]));
 17207                           	bcf	status, 5	;RP0=0, select bank0
 17208  1E32  1283               	bcf	status, 6	;RP1=0, select bank0
 17209  1E33  1303               	movf	(RealTimeClock_set_burst_time@i),w
 17210  1E34  0823               	movwf	(??_RealTimeClock_set_burst_time+0)+0
 17211  1E35  00A0               	addwf	(??_RealTimeClock_set_burst_time+0)+0,w
 17212  1E36  0720               	addwf	(RealTimeClock_set_burst_time@time),w
 17213  1E37  0722               	movwf	(??_RealTimeClock_set_burst_time+1)+0
 17214  1E38  00A1               	movf	0+(??_RealTimeClock_set_burst_time+1)+0,w
 17215  1E39  0821               	movwf	fsr0
 17216  1E3A  0084               	bcf	status, 7	;select IRP bank0
 17217  1E3B  1383               	movf	indf,w
 17218  1E3C  0800               	movwf	(___int_to_hex@integer)
 17219  1E3D  00F7               	incf	fsr0,f
 17220  1E3E  0A84               	movf	indf,w
 17221  1E3F  0800               	movwf	(___int_to_hex@integer+1)
 17222  1E40  00F8               	fcall	___int_to_hex
 17223  1E41  160A  158A  23E2  160A  158A  	fcall	_RealTimeClock_write_byte
 17224  1E46  160A  158A  2328  160A  158A  	line	60
 17225                           	
 17226                           l4662:	
 17227  1E4B                     ;realtimeclock.c: 60:     }
 17228                           	movlw	01h
 17229  1E4B  3001               	bcf	status, 5	;RP0=0, select bank0
 17230  1E4C  1283               	bcf	status, 6	;RP1=0, select bank0
 17231  1E4D  1303               	addwf	(RealTimeClock_set_burst_time@i),f
 17232  1E4E  07A3               	skipnc
 17233  1E4F  1803               	incf	(RealTimeClock_set_burst_time@i+1),f
 17234  1E50  0AA4               	movlw	0
 17235  1E51  3000               	addwf	(RealTimeClock_set_burst_time@i+1),f
 17236  1E52  07A4               	
 17237                           l4664:	
 17238  1E53                     	movf	(RealTimeClock_set_burst_time@i+1),w
 17239  1E53  0824               	xorlw	80h
 17240  1E54  3A80               	movwf	btemp+1
 17241  1E55  00FF               	movlw	(0)^80h
 17242  1E56  3080               	subwf	btemp+1,w
 17243  1E57  027F               	skipz
 17244  1E58  1D03               	goto	u4405
 17245  1E59  2E5C               	movlw	08h
 17246  1E5A  3008               	subwf	(RealTimeClock_set_burst_time@i),w
 17247  1E5B  0223               u4405:
 17248  1E5C                     
 17249                           	skipc
 17250  1E5C  1C03               	goto	u4401
 17251  1E5D  2E5F               	goto	u4400
 17252  1E5E  2E60               u4401:
 17253  1E5F                     	goto	l4660
 17254  1E5F  2E32               u4400:
 17255  1E60                     	
 17256                           l419:	
 17257  1E60                     	line	61
 17258                           ;realtimeclock.c: 61:     RB5 = 0;
 17259                           	bcf	status, 5	;RP0=0, select bank0
 17260  1E60  1283               	bcf	status, 6	;RP1=0, select bank0
 17261  1E61  1303               	bcf	(53/8),(53)&7	;volatile
 17262  1E62  1286               	line	62
 17263                           	
 17264                           l420:	
 17265  1E63                     	return
 17266  1E63  0008               	opt stack 0
 17267                           GLOBAL	__end_of_RealTimeClock_set_burst_time
 17268                           	__end_of_RealTimeClock_set_burst_time:
 17269  1E64                     	signat	_RealTimeClock_set_burst_time,4217
 17270                           	global	___int_to_hex
 17271                           
 17272 ;; *************** function ___int_to_hex *****************
 17273 ;; Defined at:
 17274 ;;		line 15 in file "realtimeclock.c"
 17275 ;; Parameters:    Size  Location     Type
 17276 ;;  integer         2    7[COMMON] int 
 17277 ;; Auto vars:     Size  Location     Type
 17278 ;;  i               2   12[COMMON] int 
 17279 ;;  t               2   10[COMMON] int 
 17280 ;; Return value:  Size  Location     Type
 17281 ;;                  1    wreg      unsigned char 
 17282 ;; Registers used:
 17283 ;;		wreg, status,2, status,0, pclath, cstack
 17284 ;; Tracked objects:
 17285 ;;		On entry : 0/0
 17286 ;;		On exit  : 0/0
 17287 ;;		Unchanged: 0/0
 17288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 17289 ;;      Params:         2       0       0       0       0
 17290 ;;      Locals:         4       0       0       0       0
 17291 ;;      Temps:          1       0       0       0       0
 17292 ;;      Totals:         7       0       0       0       0
 17293 ;;Total ram usage:        7 bytes
 17294 ;; Hardware stack levels used:    1
 17295 ;; Hardware stack levels required when called:    1
 17296 ;; This function calls:
 17297 ;;		___awmod
 17298 ;; This function is called by:
 17299 ;;		_RealTimeClock_set_burst_time
 17300 ;;		_RealTimeClock_set_seconds
 17301 ;;		_RealTimeClock_set_minutes
 17302 ;;		_RealTimeClock_set_hours
 17303 ;;		_RealTimeClock_set_day_of_month
 17304 ;;		_RealTimeClock_set_month
 17305 ;;		_RealTimeClock_set_day_of_week
 17306 ;;		_RealTimeClock_set_year
 17307 ;; This function uses a non-reentrant model
 17308 ;;
 17309                           psect	text48,local,class=CODE,delta=2,merge=1,group=0
 17310                           	line	15
 17311                           global __ptext48
 17312                           __ptext48:	;psect for function ___int_to_hex
 17313  1BE2                     psect	text48
 17314                           	file	"realtimeclock.c"
 17315                           	line	15
 17316                           	global	__size_of___int_to_hex
 17317                           	__size_of___int_to_hex	equ	__end_of___int_to_hex-___int_to_hex
 17318  0042                     	
 17319                           ___int_to_hex:	
 17320  1BE2                     ;incstack = 0
 17321                           	opt	stack 3
 17322                           ; Regs used in ___int_to_hex: [wreg+status,2+status,0+pclath+cstack]
 17323                           	line	16
 17324                           	
 17325                           l3712:	
 17326  1BE2                     ;realtimeclock.c: 16:     int t = 0;
 17327                           	clrf	(___int_to_hex@t)
 17328  1BE2  01FA               	clrf	(___int_to_hex@t+1)
 17329  1BE3  01FB               	line	17
 17330                           ;realtimeclock.c: 17:     for(int i = 0; i < integer; ++i) {
 17331                           	clrf	(___int_to_hex@i)
 17332  1BE4  01FC               	clrf	(___int_to_hex@i+1)
 17333  1BE5  01FD               	goto	l399
 17334  1BE6  2C12               	
 17335                           l400:	
 17336  1BE7                     	line	18
 17337                           	
 17338                           l3714:	
 17339  1BE7                     ;realtimeclock.c: 18:         ++t;
 17340                           	movlw	01h
 17341  1BE7  3001               	addwf	(___int_to_hex@t),f
 17342  1BE8  07FA               	skipnc
 17343  1BE9  1803               	incf	(___int_to_hex@t+1),f
 17344  1BEA  0AFB               	movlw	0
 17345  1BEB  3000               	addwf	(___int_to_hex@t+1),f
 17346  1BEC  07FB               	line	19
 17347                           	
 17348                           l3716:	
 17349  1BED                     ;realtimeclock.c: 19:         if(i && i % 10 == 0) {
 17350                           	movf	((___int_to_hex@i)),w
 17351  1BED  087C               iorwf	((___int_to_hex@i+1)),w
 17352  1BEE  047D               	btfsc	status,2
 17353  1BEF  1903               	goto	u3371
 17354  1BF0  2BF2               	goto	u3370
 17355  1BF1  2BF3               u3371:
 17356  1BF2                     	goto	l401
 17357  1BF2  2C0C               u3370:
 17358  1BF3                     	
 17359                           l3718:	
 17360  1BF3                     	movlw	0Ah
 17361  1BF3  300A               	movwf	(___awmod@divisor)
 17362  1BF4  00F0               	movlw	0
 17363  1BF5  3000               	movwf	((___awmod@divisor))+1
 17364  1BF6  00F1               	movf	(___int_to_hex@i+1),w
 17365  1BF7  087D               	movwf	(___awmod@dividend+1)
 17366  1BF8  00F3               	movf	(___int_to_hex@i),w
 17367  1BF9  087C               	movwf	(___awmod@dividend)
 17368  1BFA  00F2               	fcall	___awmod
 17369  1BFB  160A  158A  26B9  160A  158A  	movf	((0+(?___awmod))),w
 17370  1C00  0870               iorwf	((1+(?___awmod))),w
 17371  1C01  0471               	btfss	status,2
 17372  1C02  1D03               	goto	u3381
 17373  1C03  2C05               	goto	u3380
 17374  1C04  2C06               u3381:
 17375  1C05                     	goto	l401
 17376  1C05  2C0C               u3380:
 17377  1C06                     	line	20
 17378                           	
 17379                           l3720:	
 17380  1C06                     ;realtimeclock.c: 20:             t+=6;
 17381                           	movlw	06h
 17382  1C06  3006               	addwf	(___int_to_hex@t),f
 17383  1C07  07FA               	skipnc
 17384  1C08  1803               	incf	(___int_to_hex@t+1),f
 17385  1C09  0AFB               	movlw	0
 17386  1C0A  3000               	addwf	(___int_to_hex@t+1),f
 17387  1C0B  07FB               	line	21
 17388                           ;realtimeclock.c: 21:         }
 17389                           	
 17390                           l401:	
 17391  1C0C                     	line	22
 17392                           ;realtimeclock.c: 22:     }
 17393                           	movlw	01h
 17394  1C0C  3001               	addwf	(___int_to_hex@i),f
 17395  1C0D  07FC               	skipnc
 17396  1C0E  1803               	incf	(___int_to_hex@i+1),f
 17397  1C0F  0AFD               	movlw	0
 17398  1C10  3000               	addwf	(___int_to_hex@i+1),f
 17399  1C11  07FD               	
 17400                           l399:	
 17401  1C12                     	movf	(___int_to_hex@i+1),w
 17402  1C12  087D               	xorlw	80h
 17403  1C13  3A80               	movwf	(??___int_to_hex+0)+0
 17404  1C14  00F9               	movf	(___int_to_hex@integer+1),w
 17405  1C15  0878               	xorlw	80h
 17406  1C16  3A80               	subwf	(??___int_to_hex+0)+0,w
 17407  1C17  0279               	skipz
 17408  1C18  1D03               	goto	u3395
 17409  1C19  2C1C               	movf	(___int_to_hex@integer),w
 17410  1C1A  0877               	subwf	(___int_to_hex@i),w
 17411  1C1B  027C               u3395:
 17412  1C1C                     
 17413                           	skipc
 17414  1C1C  1C03               	goto	u3391
 17415  1C1D  2C1F               	goto	u3390
 17416  1C1E  2C20               u3391:
 17417  1C1F                     	goto	l3714
 17418  1C1F  2BE7               u3390:
 17419  1C20                     	goto	l3722
 17420  1C20  2C21               	
 17421                           l402:	
 17422  1C21                     	line	23
 17423                           	
 17424                           l3722:	
 17425  1C21                     ;realtimeclock.c: 23:     return t;
 17426                           	movf	(___int_to_hex@t),w
 17427  1C21  087A               	goto	l403
 17428  1C22  2C23               	
 17429                           l3724:	
 17430  1C23                     	line	24
 17431                           	
 17432                           l403:	
 17433  1C23                     	return
 17434  1C23  0008               	opt stack 0
 17435                           GLOBAL	__end_of___int_to_hex
 17436                           	__end_of___int_to_hex:
 17437  1C24                     	signat	___int_to_hex,4217
 17438                           	global	_RealTimeClock_init
 17439                           
 17440 ;; *************** function _RealTimeClock_init *****************
 17441 ;; Defined at:
 17442 ;;		line 74 in file "realtimeclock.c"
 17443 ;; Parameters:    Size  Location     Type
 17444 ;;		None
 17445 ;; Auto vars:     Size  Location     Type
 17446 ;;		None
 17447 ;; Return value:  Size  Location     Type
 17448 ;;                  1    wreg      void 
 17449 ;; Registers used:
 17450 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 17451 ;; Tracked objects:
 17452 ;;		On entry : 0/0
 17453 ;;		On exit  : 0/0
 17454 ;;		Unchanged: 0/0
 17455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 17456 ;;      Params:         0       0       0       0       0
 17457 ;;      Locals:         0       0       0       0       0
 17458 ;;      Temps:          0       0       0       0       0
 17459 ;;      Totals:         0       0       0       0       0
 17460 ;;Total ram usage:        0 bytes
 17461 ;; Hardware stack levels used:    1
 17462 ;; Hardware stack levels required when called:    1
 17463 ;; This function calls:
 17464 ;;		_RealTimeClock_write_byte
 17465 ;; This function is called by:
 17466 ;;		_main
 17467 ;; This function uses a non-reentrant model
 17468 ;;
 17469                           psect	text49,local,class=CODE,delta=2,merge=1,group=0
 17470                           	line	74
 17471                           global __ptext49
 17472                           __ptext49:	;psect for function _RealTimeClock_init
 17473  195B                     psect	text49
 17474                           	file	"realtimeclock.c"
 17475                           	line	74
 17476                           	global	__size_of_RealTimeClock_init
 17477                           	__size_of_RealTimeClock_init	equ	__end_of_RealTimeClock_init-_RealTimeClock_init
 17478  001E                     	
 17479                           _RealTimeClock_init:	
 17480  195B                     ;incstack = 0
 17481                           	opt	stack 6
 17482                           ; Regs used in _RealTimeClock_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 17483                           	line	75
 17484                           	
 17485                           l4630:	
 17486  195B                     ;realtimeclock.c: 75:     RB5 = 0;
 17487                           	bcf	status, 5	;RP0=0, select bank0
 17488  195B  1283               	bcf	status, 6	;RP1=0, select bank0
 17489  195C  1303               	bcf	(53/8),(53)&7	;volatile
 17490  195D  1286               	line	76
 17491                           	
 17492                           l4632:	
 17493  195E                     ;realtimeclock.c: 76:     ADCON1 = 0x06;
 17494                           	movlw	low(06h)
 17495  195E  3006               	bsf	status, 5	;RP0=1, select bank1
 17496  195F  1683               	bcf	status, 6	;RP1=0, select bank1
 17497  1960  1303               	movwf	(159)^080h	;volatile
 17498  1961  009F               	line	78
 17499                           	
 17500                           l4634:	
 17501  1962                     ;realtimeclock.c: 78:     TRISB0 = 0;
 17502                           	bcf	(1072/8)^080h,(1072)&7	;volatile
 17503  1962  1006               	line	79
 17504                           	
 17505                           l4636:	
 17506  1963                     ;realtimeclock.c: 79:     TRISB4 = 0;
 17507                           	bcf	(1076/8)^080h,(1076)&7	;volatile
 17508  1963  1206               	line	80
 17509                           	
 17510                           l4638:	
 17511  1964                     ;realtimeclock.c: 80:     TRISB5 = 0;
 17512                           	bcf	(1077/8)^080h,(1077)&7	;volatile
 17513  1964  1286               	line	81
 17514                           	
 17515                           l4640:	
 17516  1965                     ;realtimeclock.c: 81:     RB0 = 0;
 17517                           	bcf	status, 5	;RP0=0, select bank0
 17518  1965  1283               	bcf	status, 6	;RP1=0, select bank0
 17519  1966  1303               	bcf	(48/8),(48)&7	;volatile
 17520  1967  1006               	line	82
 17521                           	
 17522                           l4642:	
 17523  1968                     ;realtimeclock.c: 82:     RB5 = 1;
 17524                           	bsf	(53/8),(53)&7	;volatile
 17525  1968  1686               	line	83
 17526                           	
 17527                           l4644:	
 17528  1969                     ;realtimeclock.c: 83:     RealTimeClock_write_byte(0x8e);
 17529                           	movlw	low(08Eh)
 17530  1969  308E               	fcall	_RealTimeClock_write_byte
 17531  196A  160A  158A  2328  160A  158A  	line	84
 17532                           	
 17533                           l4646:	
 17534  196F                     ;realtimeclock.c: 84:     RealTimeClock_write_byte(0);
 17535                           	movlw	low(0)
 17536  196F  3000               	fcall	_RealTimeClock_write_byte
 17537  1970  160A  158A  2328  160A  158A  	line	85
 17538                           	
 17539                           l4648:	
 17540  1975                     ;realtimeclock.c: 85:     RB5 = 0;
 17541                           	bcf	status, 5	;RP0=0, select bank0
 17542  1975  1283               	bcf	status, 6	;RP1=0, select bank0
 17543  1976  1303               	bcf	(53/8),(53)&7	;volatile
 17544  1977  1286               	line	86
 17545                           	
 17546                           l428:	
 17547  1978                     	return
 17548  1978  0008               	opt stack 0
 17549                           GLOBAL	__end_of_RealTimeClock_init
 17550                           	__end_of_RealTimeClock_init:
 17551  1979                     	signat	_RealTimeClock_init,89
 17552                           	global	_LCD_Init
 17553                           
 17554 ;; *************** function _LCD_Init *****************
 17555 ;; Defined at:
 17556 ;;		line 26 in file "LCD.c"
 17557 ;; Parameters:    Size  Location     Type
 17558 ;;		None
 17559 ;; Auto vars:     Size  Location     Type
 17560 ;;		None
 17561 ;; Return value:  Size  Location     Type
 17562 ;;                  1    wreg      void 
 17563 ;; Registers used:
 17564 ;;		wreg, status,2
 17565 ;; Tracked objects:
 17566 ;;		On entry : 0/0
 17567 ;;		On exit  : 0/0
 17568 ;;		Unchanged: 0/0
 17569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 17570 ;;      Params:         0       0       0       0       0
 17571 ;;      Locals:         0       0       0       0       0
 17572 ;;      Temps:          0       0       0       0       0
 17573 ;;      Totals:         0       0       0       0       0
 17574 ;;Total ram usage:        0 bytes
 17575 ;; Hardware stack levels used:    1
 17576 ;; This function calls:
 17577 ;;		Nothing
 17578 ;; This function is called by:
 17579 ;;		_main
 17580 ;; This function uses a non-reentrant model
 17581 ;;
 17582                           psect	text50,local,class=CODE,delta=2,merge=1,group=0
 17583                           	file	"LCD.c"
 17584                           	line	26
 17585                           global __ptext50
 17586                           __ptext50:	;psect for function _LCD_Init
 17587  1811                     psect	text50
 17588                           	file	"LCD.c"
 17589                           	line	26
 17590                           	global	__size_of_LCD_Init
 17591                           	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_Init
 17592  0007                     	
 17593                           _LCD_Init:	
 17594  1811                     ;incstack = 0
 17595                           	opt	stack 7
 17596                           ; Regs used in _LCD_Init: [wreg+status,2]
 17597                           	line	28
 17598                           	
 17599                           l4616:	
 17600  1811                     ;LCD.c: 28:     TRISD = 0x00;
 17601                           	bsf	status, 5	;RP0=1, select bank1
 17602  1811  1683               	bcf	status, 6	;RP1=0, select bank1
 17603  1812  1303               	clrf	(136)^080h	;volatile
 17604  1813  0188               	line	29
 17605                           ;LCD.c: 29:     TRISA = 0x00;
 17606                           	clrf	(133)^080h	;volatile
 17607  1814  0185               	line	30
 17608                           	
 17609                           l4618:	
 17610  1815                     ;LCD.c: 30:     ADCON1 = 0x06;
 17611                           	movlw	low(06h)
 17612  1815  3006               	movwf	(159)^080h	;volatile
 17613  1816  009F               	line	31
 17614                           	
 17615                           l613:	
 17616  1817                     	return
 17617  1817  0008               	opt stack 0
 17618                           GLOBAL	__end_of_LCD_Init
 17619                           	__end_of_LCD_Init:
 17620  1818                     	signat	_LCD_Init,89
 17621                           	global	_Init_Keypad
 17622                           
 17623 ;; *************** function _Init_Keypad *****************
 17624 ;; Defined at:
 17625 ;;		line 11 in file "KeyMatrix.c"
 17626 ;; Parameters:    Size  Location     Type
 17627 ;;		None
 17628 ;; Auto vars:     Size  Location     Type
 17629 ;;		None
 17630 ;; Return value:  Size  Location     Type
 17631 ;;                  1    wreg      void 
 17632 ;; Registers used:
 17633 ;;		wreg, status,2
 17634 ;; Tracked objects:
 17635 ;;		On entry : 0/0
 17636 ;;		On exit  : 0/0
 17637 ;;		Unchanged: 0/0
 17638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 17639 ;;      Params:         0       0       0       0       0
 17640 ;;      Locals:         0       0       0       0       0
 17641 ;;      Temps:          0       0       0       0       0
 17642 ;;      Totals:         0       0       0       0       0
 17643 ;;Total ram usage:        0 bytes
 17644 ;; Hardware stack levels used:    1
 17645 ;; This function calls:
 17646 ;;		Nothing
 17647 ;; This function is called by:
 17648 ;;		_main
 17649 ;; This function uses a non-reentrant model
 17650 ;;
 17651                           psect	text51,local,class=CODE,delta=2,merge=1,group=0
 17652                           	file	"KeyMatrix.c"
 17653                           	line	11
 17654                           global __ptext51
 17655                           __ptext51:	;psect for function _Init_Keypad
 17656  1826                     psect	text51
 17657                           	file	"KeyMatrix.c"
 17658                           	line	11
 17659                           	global	__size_of_Init_Keypad
 17660                           	__size_of_Init_Keypad	equ	__end_of_Init_Keypad-_Init_Keypad
 17661  0008                     	
 17662                           _Init_Keypad:	
 17663  1826                     ;incstack = 0
 17664                           	opt	stack 7
 17665                           ; Regs used in _Init_Keypad: [wreg+status,2]
 17666                           	line	13
 17667                           	
 17668                           l4620:	
 17669  1826                     ;KeyMatrix.c: 13:     PORTC = 0x00;
 17670                           	bcf	status, 5	;RP0=0, select bank0
 17671  1826  1283               	bcf	status, 6	;RP1=0, select bank0
 17672  1827  1303               	clrf	(7)	;volatile
 17673  1828  0187               	line	14
 17674                           	
 17675                           l4622:	
 17676  1829                     ;KeyMatrix.c: 14:     TRISC = 0xF;
 17677                           	movlw	low(0Fh)
 17678  1829  300F               	bsf	status, 5	;RP0=1, select bank1
 17679  182A  1683               	bcf	status, 6	;RP1=0, select bank1
 17680  182B  1303               	movwf	(135)^080h	;volatile
 17681  182C  0087               	line	15
 17682                           	
 17683                           l521:	
 17684  182D                     	return
 17685  182D  0008               	opt stack 0
 17686                           GLOBAL	__end_of_Init_Keypad
 17687                           	__end_of_Init_Keypad:
 17688  182E                     	signat	_Init_Keypad,89
 17689                           	global	_CheckTime
 17690                           
 17691 ;; *************** function _CheckTime *****************
 17692 ;; Defined at:
 17693 ;;		line 761 in file "main.c"
 17694 ;; Parameters:    Size  Location     Type
 17695 ;;		None
 17696 ;; Auto vars:     Size  Location     Type
 17697 ;;		None
 17698 ;; Return value:  Size  Location     Type
 17699 ;;                  1    wreg      void 
 17700 ;; Registers used:
 17701 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 17702 ;; Tracked objects:
 17703 ;;		On entry : 0/0
 17704 ;;		On exit  : 0/0
 17705 ;;		Unchanged: 0/0
 17706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 17707 ;;      Params:         0       0       0       0       0
 17708 ;;      Locals:         0       0       0       0       0
 17709 ;;      Temps:          1       0       0       0       0
 17710 ;;      Totals:         1       0       0       0       0
 17711 ;;Total ram usage:        1 bytes
 17712 ;; Hardware stack levels used:    1
 17713 ;; Hardware stack levels required when called:    3
 17714 ;; This function calls:
 17715 ;;		_RealTimeClock_get_hours
 17716 ;;		_RealTimeClock_get_minutes
 17717 ;; This function is called by:
 17718 ;;		_main
 17719 ;; This function uses a non-reentrant model
 17720 ;;
 17721                           psect	text52,local,class=CODE,delta=2,merge=1,group=0
 17722                           	file	"main.c"
 17723                           	line	761
 17724                           global __ptext52
 17725                           __ptext52:	;psect for function _CheckTime
 17726  1158                     psect	text52
 17727                           	file	"main.c"
 17728                           	line	761
 17729                           	global	__size_of_CheckTime
 17730                           	__size_of_CheckTime	equ	__end_of_CheckTime-_CheckTime
 17731  00E6                     	
 17732                           _CheckTime:	
 17733  1158                     ;incstack = 0
 17734                           	opt	stack 4
 17735                           ; Regs used in _CheckTime: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 17736                           	line	765
 17737                           	
 17738                           l4522:	
 17739  1158                     ;main.c: 765: 
 17740                           	bsf	status, 5	;RP0=1, select bank1
 17741  1158  1683               	bcf	status, 6	;RP1=0, select bank1
 17742  1159  1303               		decf	((_isWeekDay)^080h),w
 17743  115A  032F               iorwf	((_isWeekDay+1)^080h),w
 17744  115B  0430               	btfss	status,2
 17745  115C  1D03               	goto	u4231
 17746  115D  295F               	goto	u4230
 17747  115E  2960               u4231:
 17748  115F                     	goto	l4544
 17749  115F  29E7               u4230:
 17750  1160                     	line	767
 17751                           	
 17752                           l4524:	
 17753  1160                     ;main.c: 766:     else if (isWeekDay == 0);main.c: 767:     {
 17754                           	fcall	_RealTimeClock_get_minutes
 17755  1160  160A  158A  219B  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 17756  1165  1283               	bcf	status, 6	;RP1=0, select bank0
 17757  1166  1303               	movf	(1+(?_RealTimeClock_get_minutes)),w
 17758  1167  0826               	movwf	(_timeMins+1)
 17759  1168  00EA               	movf	(0+(?_RealTimeClock_get_minutes)),w
 17760  1169  0825               	movwf	(_timeMins)
 17761  116A  00E9               	line	768
 17762                           ;main.c: 768: 
 17763                           	fcall	_RealTimeClock_get_hours
 17764  116B  160A  158A  2179  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 17765  1170  1283               	bcf	status, 6	;RP1=0, select bank0
 17766  1171  1303               	movf	(1+(?_RealTimeClock_get_hours)),w
 17767  1172  0826               	movwf	(_timeHours+1)
 17768  1173  00EC               	movf	(0+(?_RealTimeClock_get_hours)),w
 17769  1174  0825               	movwf	(_timeHours)
 17770  1175  00EB               	line	769
 17771                           	
 17772                           l4526:	
 17773  1176                     ;main.c: 769:         timeMins = RealTimeClock_get_minutes();
 17774                           	movf	(_timeHours+1),w
 17775  1176  086C               	xorlw	80h
 17776  1177  3A80               	movwf	(??_CheckTime+0)+0
 17777  1178  00FC               	bsf	status, 5	;RP0=1, select bank1
 17778  1179  1683               	bcf	status, 6	;RP1=0, select bank1
 17779  117A  1303               	movf	(_weekDayStart+1)^080h,w
 17780  117B  0867               	xorlw	80h
 17781  117C  3A80               	subwf	(??_CheckTime+0)+0,w
 17782  117D  027C               	skipz
 17783  117E  1D03               	goto	u4245
 17784  117F  2984               	movf	(_weekDayStart)^080h,w
 17785  1180  0866               	bcf	status, 5	;RP0=0, select bank0
 17786  1181  1283               	bcf	status, 6	;RP1=0, select bank0
 17787  1182  1303               	subwf	(_timeHours),w
 17788  1183  026B               u4245:
 17789  1184                     
 17790                           	skipnc
 17791  1184  1803               	goto	u4241
 17792  1185  2987               	goto	u4240
 17793  1186  2988               u4241:
 17794  1187                     	goto	l4534
 17795  1187  29A9               u4240:
 17796  1188                     	line	771
 17797                           	
 17798                           l4528:	
 17799  1188                     ;main.c: 770:         timeHours = RealTimeClock_get_hours();;main.c: 771:         if (ti
                                 meHours < weekEndStart[0])
 17800                           	bcf	status, 5	;RP0=0, select bank0
 17801  1188  1283               	bcf	status, 6	;RP1=0, select bank0
 17802  1189  1303               	movf	(_timeMins+1),w
 17803  118A  086A               	xorlw	80h
 17804  118B  3A80               	movwf	(??_CheckTime+0)+0
 17805  118C  00FC               	bsf	status, 5	;RP0=1, select bank1
 17806  118D  1683               	bcf	status, 6	;RP1=0, select bank1
 17807  118E  1303               	movf	1+(_weekDayStart)^080h+02h,w
 17808  118F  0869               	xorlw	80h
 17809  1190  3A80               	subwf	(??_CheckTime+0)+0,w
 17810  1191  027C               	skipz
 17811  1192  1D03               	goto	u4255
 17812  1193  2998               	movf	0+(_weekDayStart)^080h+02h,w
 17813  1194  0868               	bcf	status, 5	;RP0=0, select bank0
 17814  1195  1283               	bcf	status, 6	;RP1=0, select bank0
 17815  1196  1303               	subwf	(_timeMins),w
 17816  1197  0269               u4255:
 17817  1198                     
 17818                           	skipnc
 17819  1198  1803               	goto	u4251
 17820  1199  299B               	goto	u4250
 17821  119A  299C               u4251:
 17822  119B                     	goto	l4532
 17823  119B  29A1               u4250:
 17824  119C                     	line	772
 17825                           	
 17826                           l4530:	
 17827  119C                     ;main.c: 772:         {
 17828                           	bsf	status, 5	;RP0=1, select bank1
 17829  119C  1683               	bcf	status, 6	;RP1=0, select bank1
 17830  119D  1303               	clrf	(_IsHeatingOn)^080h
 17831  119E  01B3               	clrf	(_IsHeatingOn+1)^080h
 17832  119F  01B4               	goto	l328
 17833  11A0  2A3D               	line	773
 17834                           ;main.c: 773:             IsHeatingOn = 0;
 17835                           	
 17836                           l315:	
 17837  11A1                     	line	774
 17838                           	
 17839                           l4532:	
 17840  11A1                     ;main.c: 774:         }
 17841                           	movlw	01h
 17842  11A1  3001               	bsf	status, 5	;RP0=1, select bank1
 17843  11A2  1683               	bcf	status, 6	;RP1=0, select bank1
 17844  11A3  1303               	movwf	(_IsHeatingOn)^080h
 17845  11A4  00B3               	movlw	0
 17846  11A5  3000               	movwf	((_IsHeatingOn)^080h)+1
 17847  11A6  00B4               	goto	l328
 17848  11A7  2A3D               	
 17849                           l316:	
 17850  11A8                     	line	775
 17851                           ;main.c: 775:         else if(timeHours > weekEndEnd[0])
 17852                           	goto	l328
 17853  11A8  2A3D               	line	776
 17854                           ;main.c: 776:         {
 17855                           	
 17856                           l314:	
 17857  11A9                     	
 17858                           l4534:	
 17859  11A9                     	bsf	status, 5	;RP0=1, select bank1
 17860  11A9  1683               	bcf	status, 6	;RP1=0, select bank1
 17861  11AA  1303               	movf	(_weekDayEnd+1)^080h,w
 17862  11AB  0863               	xorlw	80h
 17863  11AC  3A80               	movwf	(??_CheckTime+0)+0
 17864  11AD  00FC               	bcf	status, 5	;RP0=0, select bank0
 17865  11AE  1283               	bcf	status, 6	;RP1=0, select bank0
 17866  11AF  1303               	movf	(_timeHours+1),w
 17867  11B0  086C               	xorlw	80h
 17868  11B1  3A80               	subwf	(??_CheckTime+0)+0,w
 17869  11B2  027C               	skipz
 17870  11B3  1D03               	goto	u4265
 17871  11B4  29B9               	movf	(_timeHours),w
 17872  11B5  086B               	bsf	status, 5	;RP0=1, select bank1
 17873  11B6  1683               	bcf	status, 6	;RP1=0, select bank1
 17874  11B7  1303               	subwf	(_weekDayEnd)^080h,w
 17875  11B8  0262               u4265:
 17876  11B9                     
 17877                           	skipnc
 17878  11B9  1803               	goto	u4261
 17879  11BA  29BC               	goto	u4260
 17880  11BB  29BD               u4261:
 17881  11BC                     	goto	l4542
 17882  11BC  29DE               u4260:
 17883  11BD                     	line	778
 17884                           	
 17885                           l4536:	
 17886  11BD                     ;main.c: 777:             IsHeatingOn = 0;;main.c: 778:         }
 17887                           	bsf	status, 5	;RP0=1, select bank1
 17888  11BD  1683               	bcf	status, 6	;RP1=0, select bank1
 17889  11BE  1303               	movf	1+(_weekDayEnd)^080h+02h,w
 17890  11BF  0865               	xorlw	80h
 17891  11C0  3A80               	movwf	(??_CheckTime+0)+0
 17892  11C1  00FC               	bcf	status, 5	;RP0=0, select bank0
 17893  11C2  1283               	bcf	status, 6	;RP1=0, select bank0
 17894  11C3  1303               	movf	(_timeMins+1),w
 17895  11C4  086A               	xorlw	80h
 17896  11C5  3A80               	subwf	(??_CheckTime+0)+0,w
 17897  11C6  027C               	skipz
 17898  11C7  1D03               	goto	u4275
 17899  11C8  29CD               	movf	(_timeMins),w
 17900  11C9  0869               	bsf	status, 5	;RP0=1, select bank1
 17901  11CA  1683               	bcf	status, 6	;RP1=0, select bank1
 17902  11CB  1303               	subwf	0+(_weekDayEnd)^080h+02h,w
 17903  11CC  0264               u4275:
 17904  11CD                     
 17905                           	skipnc
 17906  11CD  1803               	goto	u4271
 17907  11CE  29D0               	goto	u4270
 17908  11CF  29D1               u4271:
 17909  11D0                     	goto	l4540
 17910  11D0  29D6               u4270:
 17911  11D1                     	line	779
 17912                           	
 17913                           l4538:	
 17914  11D1                     ;main.c: 779:         else
 17915                           	bsf	status, 5	;RP0=1, select bank1
 17916  11D1  1683               	bcf	status, 6	;RP1=0, select bank1
 17917  11D2  1303               	clrf	(_IsHeatingOn)^080h
 17918  11D3  01B3               	clrf	(_IsHeatingOn+1)^080h
 17919  11D4  01B4               	goto	l328
 17920  11D5  2A3D               	line	780
 17921                           ;main.c: 780:             IsHeatingOn = 1;
 17922                           	
 17923                           l319:	
 17924  11D6                     	line	781
 17925                           	
 17926                           l4540:	
 17927  11D6                     ;main.c: 781:     }
 17928                           	movlw	01h
 17929  11D6  3001               	bsf	status, 5	;RP0=1, select bank1
 17930  11D7  1683               	bcf	status, 6	;RP1=0, select bank1
 17931  11D8  1303               	movwf	(_IsHeatingOn)^080h
 17932  11D9  00B3               	movlw	0
 17933  11DA  3000               	movwf	((_IsHeatingOn)^080h)+1
 17934  11DB  00B4               	goto	l328
 17935  11DC  2A3D               	
 17936                           l320:	
 17937  11DD                     	line	782
 17938                           ;main.c: 782: }
 17939                           	goto	l328
 17940  11DD  2A3D               	line	783
 17941                           ;main.c: 783: 
 17942                           	
 17943                           l318:	
 17944  11DE                     	line	784
 17945                           	
 17946                           l4542:	
 17947  11DE                     ;main.c: 784: 
 17948                           	movlw	01h
 17949  11DE  3001               	bsf	status, 5	;RP0=1, select bank1
 17950  11DF  1683               	bcf	status, 6	;RP1=0, select bank1
 17951  11E0  1303               	movwf	(_IsHeatingOn)^080h
 17952  11E1  00B3               	movlw	0
 17953  11E2  3000               	movwf	((_IsHeatingOn)^080h)+1
 17954  11E3  00B4               	goto	l328
 17955  11E4  2A3D               	
 17956                           l321:	
 17957  11E5                     	goto	l328
 17958  11E5  2A3D               	
 17959                           l317:	
 17960  11E6                     	line	785
 17961                           ;main.c: 785: void HeatingControlOff(int Key, int temp, int temp2, int temp3)
 17962                           	goto	l328
 17963  11E6  2A3D               	line	788
 17964                           ;main.c: 788:     DisableAlarm = 1;
 17965                           	
 17966                           l313:	
 17967  11E7                     	
 17968                           l4544:	
 17969  11E7                     	movf	((_isWeekDay)^080h),w
 17970  11E7  082F               iorwf	((_isWeekDay+1)^080h),w
 17971  11E8  0430               	btfss	status,2
 17972  11E9  1D03               	goto	u4281
 17973  11EA  29EC               	goto	u4280
 17974  11EB  29ED               u4281:
 17975  11EC                     	goto	l328
 17976  11EC  2A3D               u4280:
 17977  11ED                     	line	791
 17978                           	
 17979                           l4546:	
 17980  11ED                     ;main.c: 789:     SoundOff();;main.c: 791:     char* On = "Heating On";
 17981                           	fcall	_RealTimeClock_get_minutes
 17982  11ED  160A  158A  219B  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 17983  11F2  1283               	bcf	status, 6	;RP1=0, select bank0
 17984  11F3  1303               	movf	(1+(?_RealTimeClock_get_minutes)),w
 17985  11F4  0826               	movwf	(_timeMins+1)
 17986  11F5  00EA               	movf	(0+(?_RealTimeClock_get_minutes)),w
 17987  11F6  0825               	movwf	(_timeMins)
 17988  11F7  00E9               	line	792
 17989                           ;main.c: 792: 
 17990                           	fcall	_RealTimeClock_get_hours
 17991  11F8  160A  158A  2179  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 17992  11FD  1283               	bcf	status, 6	;RP1=0, select bank0
 17993  11FE  1303               	movf	(1+(?_RealTimeClock_get_hours)),w
 17994  11FF  0826               	movwf	(_timeHours+1)
 17995  1200  00EC               	movf	(0+(?_RealTimeClock_get_hours)),w
 17996  1201  0825               	movwf	(_timeHours)
 17997  1202  00EB               	line	793
 17998                           	
 17999                           l4548:	
 18000  1203                     ;main.c: 793:     LCD_Command(0x01);
 18001                           	movf	(_timeHours+1),w
 18002  1203  086C               	xorlw	80h
 18003  1204  3A80               	movwf	(??_CheckTime+0)+0
 18004  1205  00FC               	bsf	status, 5	;RP0=1, select bank1
 18005  1206  1683               	bcf	status, 6	;RP1=0, select bank1
 18006  1207  1303               	movf	(_weekEndStart+1)^080h,w
 18007  1208  085F               	xorlw	80h
 18008  1209  3A80               	subwf	(??_CheckTime+0)+0,w
 18009  120A  027C               	skipz
 18010  120B  1D03               	goto	u4295
 18011  120C  2A11               	movf	(_weekEndStart)^080h,w
 18012  120D  085E               	bcf	status, 5	;RP0=0, select bank0
 18013  120E  1283               	bcf	status, 6	;RP1=0, select bank0
 18014  120F  1303               	subwf	(_timeHours),w
 18015  1210  026B               u4295:
 18016  1211                     
 18017                           	skipnc
 18018  1211  1803               	goto	u4291
 18019  1212  2A14               	goto	u4290
 18020  1213  2A15               u4291:
 18021  1214                     	goto	l4552
 18022  1214  2A1A               u4290:
 18023  1215                     	line	795
 18024                           	
 18025                           l4550:	
 18026  1215                     ;main.c: 794: ;main.c: 795:     LCD_Command(0x03);
 18027                           	bsf	status, 5	;RP0=1, select bank1
 18028  1215  1683               	bcf	status, 6	;RP1=0, select bank1
 18029  1216  1303               	clrf	(_IsHeatingOn)^080h
 18030  1217  01B3               	clrf	(_IsHeatingOn+1)^080h
 18031  1218  01B4               	line	796
 18032                           ;main.c: 796: 
 18033                           	goto	l328
 18034  1219  2A3D               	line	797
 18035                           ;main.c: 797:     LCD_SendString(Off);
 18036                           	
 18037                           l324:	
 18038  121A                     	
 18039                           l4552:	
 18040  121A                     	bsf	status, 5	;RP0=1, select bank3
 18041  121A  1683               	bsf	status, 6	;RP1=1, select bank3
 18042  121B  1703               	movf	(_weekEndEnd+1)^0180h,w
 18043  121C  083D               	xorlw	80h
 18044  121D  3A80               	movwf	(??_CheckTime+0)+0
 18045  121E  00FC               	bcf	status, 5	;RP0=0, select bank0
 18046  121F  1283               	bcf	status, 6	;RP1=0, select bank0
 18047  1220  1303               	movf	(_timeHours+1),w
 18048  1221  086C               	xorlw	80h
 18049  1222  3A80               	subwf	(??_CheckTime+0)+0,w
 18050  1223  027C               	skipz
 18051  1224  1D03               	goto	u4305
 18052  1225  2A2A               	movf	(_timeHours),w
 18053  1226  086B               	bsf	status, 5	;RP0=1, select bank3
 18054  1227  1683               	bsf	status, 6	;RP1=1, select bank3
 18055  1228  1703               	subwf	(_weekEndEnd)^0180h,w
 18056  1229  023C               u4305:
 18057  122A                     
 18058                           	skipnc
 18059  122A  1803               	goto	u4301
 18060  122B  2A2D               	goto	u4300
 18061  122C  2A2E               u4301:
 18062  122D                     	goto	l4556
 18063  122D  2A33               u4300:
 18064  122E                     	line	799
 18065                           	
 18066                           l4554:	
 18067  122E                     ;main.c: 798: ;main.c: 799:     Main_Delay(200);
 18068                           	bsf	status, 5	;RP0=1, select bank1
 18069  122E  1683               	bcf	status, 6	;RP1=0, select bank1
 18070  122F  1303               	clrf	(_IsHeatingOn)^080h
 18071  1230  01B3               	clrf	(_IsHeatingOn+1)^080h
 18072  1231  01B4               	line	800
 18073                           ;main.c: 800: 
 18074                           	goto	l328
 18075  1232  2A3D               	line	801
 18076                           ;main.c: 801:     LCD_Command(0x01);
 18077                           	
 18078                           l326:	
 18079  1233                     	line	802
 18080                           	
 18081                           l4556:	
 18082  1233                     ;main.c: 802:     while(1)
 18083                           	movlw	01h
 18084  1233  3001               	bsf	status, 5	;RP0=1, select bank1
 18085  1234  1683               	bcf	status, 6	;RP1=0, select bank1
 18086  1235  1303               	movwf	(_IsHeatingOn)^080h
 18087  1236  00B3               	movlw	0
 18088  1237  3000               	movwf	((_IsHeatingOn)^080h)+1
 18089  1238  00B4               	goto	l328
 18090  1239  2A3D               	
 18091                           l327:	
 18092  123A                     	goto	l328
 18093  123A  2A3D               	
 18094                           l325:	
 18095  123B                     	goto	l328
 18096  123B  2A3D               	line	803
 18097                           ;main.c: 803:     {
 18098                           	
 18099                           l323:	
 18100  123C                     	goto	l328
 18101  123C  2A3D               	
 18102                           l322:	
 18103  123D                     	line	804
 18104                           	
 18105                           l328:	
 18106  123D                     	return
 18107  123D  0008               	opt stack 0
 18108                           GLOBAL	__end_of_CheckTime
 18109                           	__end_of_CheckTime:
 18110  123E                     	signat	_CheckTime,89
 18111                           	global	_RealTimeClock_get_minutes
 18112                           
 18113 ;; *************** function _RealTimeClock_get_minutes *****************
 18114 ;; Defined at:
 18115 ;;		line 96 in file "realtimeclock.c"
 18116 ;; Parameters:    Size  Location     Type
 18117 ;;		None
 18118 ;; Auto vars:     Size  Location     Type
 18119 ;;  c               1   11[COMMON] unsigned char 
 18120 ;; Return value:  Size  Location     Type
 18121 ;;                  2    5[BANK0 ] int 
 18122 ;; Registers used:
 18123 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 18124 ;; Tracked objects:
 18125 ;;		On entry : 0/0
 18126 ;;		On exit  : 0/0
 18127 ;;		Unchanged: 0/0
 18128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 18129 ;;      Params:         0       2       0       0       0
 18130 ;;      Locals:         1       0       0       0       0
 18131 ;;      Temps:          1       0       0       0       0
 18132 ;;      Totals:         2       2       0       0       0
 18133 ;;Total ram usage:        4 bytes
 18134 ;; Hardware stack levels used:    1
 18135 ;; Hardware stack levels required when called:    2
 18136 ;; This function calls:
 18137 ;;		_RealTimeClock_read_byte
 18138 ;;		_RealTimeClock_write_byte
 18139 ;;		___hex_to_int
 18140 ;; This function is called by:
 18141 ;;		_DisplayTime
 18142 ;;		_SetTime
 18143 ;;		_CheckTime
 18144 ;; This function uses a non-reentrant model
 18145 ;;
 18146                           psect	text53,local,class=CODE,delta=2,merge=1,group=0
 18147                           	file	"realtimeclock.c"
 18148                           	line	96
 18149                           global __ptext53
 18150                           __ptext53:	;psect for function _RealTimeClock_get_minutes
 18151  199B                     psect	text53
 18152                           	file	"realtimeclock.c"
 18153                           	line	96
 18154                           	global	__size_of_RealTimeClock_get_minutes
 18155                           	__size_of_RealTimeClock_get_minutes	equ	__end_of_RealTimeClock_get_minutes-_RealTimeClo
                                 ck_get_minutes
 18156  0022                     	
 18157                           _RealTimeClock_get_minutes:	
 18158  199B                     ;incstack = 0
 18159                           	opt	stack 3
 18160                           ; Regs used in _RealTimeClock_get_minutes: [wreg+status,2+status,0+btemp+1+pclath+cstack
                                 ]
 18161                           	line	97
 18162                           	
 18163                           l3458:	
 18164  199B                     ;realtimeclock.c: 97:     RB5 = 1;
 18165                           	bcf	status, 5	;RP0=0, select bank0
 18166  199B  1283               	bcf	status, 6	;RP1=0, select bank0
 18167  199C  1303               	bsf	(53/8),(53)&7	;volatile
 18168  199D  1686               	line	98
 18169                           	
 18170                           l3460:	
 18171  199E                     ;realtimeclock.c: 98:     RealTimeClock_write_byte(0x83);
 18172                           	movlw	low(083h)
 18173  199E  3083               	fcall	_RealTimeClock_write_byte
 18174  199F  160A  158A  2328  160A  158A  	line	99
 18175                           ;realtimeclock.c: 99:     unsigned char c = RealTimeClock_read_byte();
 18176                           	fcall	_RealTimeClock_read_byte
 18177  19A4  160A  158A  2534  160A  158A  	movwf	(??_RealTimeClock_get_minutes+0)+0
 18178  19A9  00FA               	movf	(??_RealTimeClock_get_minutes+0)+0,w
 18179  19AA  087A               	movwf	(RealTimeClock_get_minutes@c)
 18180  19AB  00FB               	line	100
 18181                           	
 18182                           l3462:	
 18183  19AC                     ;realtimeclock.c: 100:     RB5 = 0;
 18184                           	bcf	status, 5	;RP0=0, select bank0
 18185  19AC  1283               	bcf	status, 6	;RP1=0, select bank0
 18186  19AD  1303               	bcf	(53/8),(53)&7	;volatile
 18187  19AE  1286               	line	101
 18188                           	
 18189                           l3464:	
 18190  19AF                     ;realtimeclock.c: 101:     return __hex_to_int(c);
 18191                           	movf	(RealTimeClock_get_minutes@c),w
 18192  19AF  087B               	fcall	___hex_to_int
 18193  19B0  160A  158A  25C6  160A  158A  	movf	(1+(?___hex_to_int)),w
 18194  19B5  0878               	bcf	status, 5	;RP0=0, select bank0
 18195  19B6  1283               	bcf	status, 6	;RP1=0, select bank0
 18196  19B7  1303               	movwf	(?_RealTimeClock_get_minutes+1)
 18197  19B8  00A6               	movf	(0+(?___hex_to_int)),w
 18198  19B9  0877               	movwf	(?_RealTimeClock_get_minutes)
 18199  19BA  00A5               	goto	l434
 18200  19BB  29BC               	
 18201                           l3466:	
 18202  19BC                     	line	102
 18203                           	
 18204                           l434:	
 18205  19BC                     	return
 18206  19BC  0008               	opt stack 0
 18207                           GLOBAL	__end_of_RealTimeClock_get_minutes
 18208                           	__end_of_RealTimeClock_get_minutes:
 18209  19BD                     	signat	_RealTimeClock_get_minutes,90
 18210                           	global	_RealTimeClock_get_hours
 18211                           
 18212 ;; *************** function _RealTimeClock_get_hours *****************
 18213 ;; Defined at:
 18214 ;;		line 104 in file "realtimeclock.c"
 18215 ;; Parameters:    Size  Location     Type
 18216 ;;		None
 18217 ;; Auto vars:     Size  Location     Type
 18218 ;;  c               1   11[COMMON] unsigned char 
 18219 ;; Return value:  Size  Location     Type
 18220 ;;                  2    5[BANK0 ] int 
 18221 ;; Registers used:
 18222 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 18223 ;; Tracked objects:
 18224 ;;		On entry : 0/0
 18225 ;;		On exit  : 0/0
 18226 ;;		Unchanged: 0/0
 18227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 18228 ;;      Params:         0       2       0       0       0
 18229 ;;      Locals:         1       0       0       0       0
 18230 ;;      Temps:          1       0       0       0       0
 18231 ;;      Totals:         2       2       0       0       0
 18232 ;;Total ram usage:        4 bytes
 18233 ;; Hardware stack levels used:    1
 18234 ;; Hardware stack levels required when called:    2
 18235 ;; This function calls:
 18236 ;;		_RealTimeClock_read_byte
 18237 ;;		_RealTimeClock_write_byte
 18238 ;;		___hex_to_int
 18239 ;; This function is called by:
 18240 ;;		_DisplayTime
 18241 ;;		_SetTime
 18242 ;;		_CheckTime
 18243 ;; This function uses a non-reentrant model
 18244 ;;
 18245                           psect	text54,local,class=CODE,delta=2,merge=1,group=0
 18246                           	line	104
 18247                           global __ptext54
 18248                           __ptext54:	;psect for function _RealTimeClock_get_hours
 18249  1979                     psect	text54
 18250                           	file	"realtimeclock.c"
 18251                           	line	104
 18252                           	global	__size_of_RealTimeClock_get_hours
 18253                           	__size_of_RealTimeClock_get_hours	equ	__end_of_RealTimeClock_get_hours-_RealTimeClock_g
                                 et_hours
 18254  0022                     	
 18255                           _RealTimeClock_get_hours:	
 18256  1979                     ;incstack = 0
 18257                           	opt	stack 3
 18258                           ; Regs used in _RealTimeClock_get_hours: [wreg+status,2+status,0+btemp+1+pclath+cstack]

 18259                           	line	105
 18260                           	
 18261                           l3468:	
 18262  1979                     ;realtimeclock.c: 105:     RB5 = 1;
 18263                           	bcf	status, 5	;RP0=0, select bank0
 18264  1979  1283               	bcf	status, 6	;RP1=0, select bank0
 18265  197A  1303               	bsf	(53/8),(53)&7	;volatile
 18266  197B  1686               	line	106
 18267                           	
 18268                           l3470:	
 18269  197C                     ;realtimeclock.c: 106:     RealTimeClock_write_byte(0x85);
 18270                           	movlw	low(085h)
 18271  197C  3085               	fcall	_RealTimeClock_write_byte
 18272  197D  160A  158A  2328  160A  158A  	line	107
 18273                           ;realtimeclock.c: 107:     unsigned char c = RealTimeClock_read_byte();
 18274                           	fcall	_RealTimeClock_read_byte
 18275  1982  160A  158A  2534  160A  158A  	movwf	(??_RealTimeClock_get_hours+0)+0
 18276  1987  00FA               	movf	(??_RealTimeClock_get_hours+0)+0,w
 18277  1988  087A               	movwf	(RealTimeClock_get_hours@c)
 18278  1989  00FB               	line	108
 18279                           	
 18280                           l3472:	
 18281  198A                     ;realtimeclock.c: 108:     RB5 = 0;
 18282                           	bcf	status, 5	;RP0=0, select bank0
 18283  198A  1283               	bcf	status, 6	;RP1=0, select bank0
 18284  198B  1303               	bcf	(53/8),(53)&7	;volatile
 18285  198C  1286               	line	109
 18286                           	
 18287                           l3474:	
 18288  198D                     ;realtimeclock.c: 109:     return __hex_to_int(c);
 18289                           	movf	(RealTimeClock_get_hours@c),w
 18290  198D  087B               	fcall	___hex_to_int
 18291  198E  160A  158A  25C6  160A  158A  	movf	(1+(?___hex_to_int)),w
 18292  1993  0878               	bcf	status, 5	;RP0=0, select bank0
 18293  1994  1283               	bcf	status, 6	;RP1=0, select bank0
 18294  1995  1303               	movwf	(?_RealTimeClock_get_hours+1)
 18295  1996  00A6               	movf	(0+(?___hex_to_int)),w
 18296  1997  0877               	movwf	(?_RealTimeClock_get_hours)
 18297  1998  00A5               	goto	l437
 18298  1999  299A               	
 18299                           l3476:	
 18300  199A                     	line	110
 18301                           	
 18302                           l437:	
 18303  199A                     	return
 18304  199A  0008               	opt stack 0
 18305                           GLOBAL	__end_of_RealTimeClock_get_hours
 18306                           	__end_of_RealTimeClock_get_hours:
 18307  199B                     	signat	_RealTimeClock_get_hours,90
 18308                           	global	___hex_to_int
 18309                           
 18310 ;; *************** function ___hex_to_int *****************
 18311 ;; Defined at:
 18312 ;;		line 5 in file "realtimeclock.c"
 18313 ;; Parameters:    Size  Location     Type
 18314 ;;  hex             1    wreg     unsigned char 
 18315 ;; Auto vars:     Size  Location     Type
 18316 ;;  hex             1    0[BANK0 ] unsigned char 
 18317 ;;  i               2    1[BANK0 ] int 
 18318 ;;  t               2    3[BANK0 ] int 
 18319 ;; Return value:  Size  Location     Type
 18320 ;;                  2    7[COMMON] int 
 18321 ;; Registers used:
 18322 ;;		wreg, status,2, status,0, pclath, cstack
 18323 ;; Tracked objects:
 18324 ;;		On entry : 0/0
 18325 ;;		On exit  : 0/0
 18326 ;;		Unchanged: 0/0
 18327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 18328 ;;      Params:         2       0       0       0       0
 18329 ;;      Locals:         0       5       0       0       0
 18330 ;;      Temps:          1       0       0       0       0
 18331 ;;      Totals:         3       5       0       0       0
 18332 ;;Total ram usage:        8 bytes
 18333 ;; Hardware stack levels used:    1
 18334 ;; Hardware stack levels required when called:    1
 18335 ;; This function calls:
 18336 ;;		___awmod
 18337 ;; This function is called by:
 18338 ;;		_RealTimeClock_get_seconds
 18339 ;;		_RealTimeClock_get_minutes
 18340 ;;		_RealTimeClock_get_hours
 18341 ;;		_RealTimeClock_get_day_of_month
 18342 ;;		_RealTimeClock_get_month
 18343 ;;		_RealTimeClock_get_day_of_week
 18344 ;;		_RealTimeClock_get_year
 18345 ;;		_RealTimeClock_get_burst_time
 18346 ;; This function uses a non-reentrant model
 18347 ;;
 18348                           psect	text55,local,class=CODE,delta=2,merge=1,group=0
 18349                           	line	5
 18350                           global __ptext55
 18351                           __ptext55:	;psect for function ___hex_to_int
 18352  1DC6                     psect	text55
 18353                           	file	"realtimeclock.c"
 18354                           	line	5
 18355                           	global	__size_of___hex_to_int
 18356                           	__size_of___hex_to_int	equ	__end_of___hex_to_int-___hex_to_int
 18357  004F                     	
 18358                           ___hex_to_int:	
 18359  1DC6                     ;incstack = 0
 18360                           	opt	stack 3
 18361                           ; Regs used in ___hex_to_int: [wreg+status,2+status,0+pclath+cstack]
 18362                           ;___hex_to_int@hex stored from wreg
 18363                           	bcf	status, 5	;RP0=0, select bank0
 18364  1DC6  1283               	bcf	status, 6	;RP1=0, select bank0
 18365  1DC7  1303               	movwf	(___hex_to_int@hex)
 18366  1DC8  00A0               	line	6
 18367                           	
 18368                           l3166:	
 18369  1DC9                     ;realtimeclock.c: 6:     int t = 0;
 18370                           	clrf	(___hex_to_int@t)
 18371  1DC9  01A3               	clrf	(___hex_to_int@t+1)
 18372  1DCA  01A4               	line	7
 18373                           ;realtimeclock.c: 7:     for(int i = 0; i < hex; ++i) {
 18374                           	clrf	(___hex_to_int@i)
 18375  1DCB  01A1               	clrf	(___hex_to_int@i+1)
 18376  1DCC  01A2               	goto	l392
 18377  1DCD  2DFF               	
 18378                           l393:	
 18379  1DCE                     	line	8
 18380                           	
 18381                           l3168:	
 18382  1DCE                     ;realtimeclock.c: 8:         ++t;
 18383                           	movlw	01h
 18384  1DCE  3001               	bcf	status, 5	;RP0=0, select bank0
 18385  1DCF  1283               	bcf	status, 6	;RP1=0, select bank0
 18386  1DD0  1303               	addwf	(___hex_to_int@t),f
 18387  1DD1  07A3               	skipnc
 18388  1DD2  1803               	incf	(___hex_to_int@t+1),f
 18389  1DD3  0AA4               	movlw	0
 18390  1DD4  3000               	addwf	(___hex_to_int@t+1),f
 18391  1DD5  07A4               	line	9
 18392                           	
 18393                           l3170:	
 18394  1DD6                     ;realtimeclock.c: 9:         if(t && t % 10 == 0)
 18395                           	movf	((___hex_to_int@t)),w
 18396  1DD6  0823               iorwf	((___hex_to_int@t+1)),w
 18397  1DD7  0424               	btfsc	status,2
 18398  1DD8  1903               	goto	u2441
 18399  1DD9  2DDB               	goto	u2440
 18400  1DDA  2DDC               u2441:
 18401  1DDB                     	goto	l394
 18402  1DDB  2DF7               u2440:
 18403  1DDC                     	
 18404                           l3172:	
 18405  1DDC                     	movlw	0Ah
 18406  1DDC  300A               	movwf	(___awmod@divisor)
 18407  1DDD  00F0               	movlw	0
 18408  1DDE  3000               	movwf	((___awmod@divisor))+1
 18409  1DDF  00F1               	movf	(___hex_to_int@t+1),w
 18410  1DE0  0824               	movwf	(___awmod@dividend+1)
 18411  1DE1  00F3               	movf	(___hex_to_int@t),w
 18412  1DE2  0823               	movwf	(___awmod@dividend)
 18413  1DE3  00F2               	fcall	___awmod
 18414  1DE4  160A  158A  26B9  160A  158A  	movf	((0+(?___awmod))),w
 18415  1DE9  0870               iorwf	((1+(?___awmod))),w
 18416  1DEA  0471               	btfss	status,2
 18417  1DEB  1D03               	goto	u2451
 18418  1DEC  2DEE               	goto	u2450
 18419  1DED  2DEF               u2451:
 18420  1DEE                     	goto	l394
 18421  1DEE  2DF7               u2450:
 18422  1DEF                     	line	10
 18423                           	
 18424                           l3174:	
 18425  1DEF                     ;realtimeclock.c: 10:             i+=6;
 18426                           	movlw	06h
 18427  1DEF  3006               	bcf	status, 5	;RP0=0, select bank0
 18428  1DF0  1283               	bcf	status, 6	;RP1=0, select bank0
 18429  1DF1  1303               	addwf	(___hex_to_int@i),f
 18430  1DF2  07A1               	skipnc
 18431  1DF3  1803               	incf	(___hex_to_int@i+1),f
 18432  1DF4  0AA2               	movlw	0
 18433  1DF5  3000               	addwf	(___hex_to_int@i+1),f
 18434  1DF6  07A2               	
 18435                           l394:	
 18436  1DF7                     	line	11
 18437                           ;realtimeclock.c: 11:     }
 18438                           	movlw	01h
 18439  1DF7  3001               	bcf	status, 5	;RP0=0, select bank0
 18440  1DF8  1283               	bcf	status, 6	;RP1=0, select bank0
 18441  1DF9  1303               	addwf	(___hex_to_int@i),f
 18442  1DFA  07A1               	skipnc
 18443  1DFB  1803               	incf	(___hex_to_int@i+1),f
 18444  1DFC  0AA2               	movlw	0
 18445  1DFD  3000               	addwf	(___hex_to_int@i+1),f
 18446  1DFE  07A2               	
 18447                           l392:	
 18448  1DFF                     	movf	(___hex_to_int@i+1),w
 18449  1DFF  0822               	xorlw	80h
 18450  1E00  3A80               	movwf	(??___hex_to_int+0)+0
 18451  1E01  00F9               	movlw	80h
 18452  1E02  3080               	subwf	(??___hex_to_int+0)+0,w
 18453  1E03  0279               	skipz
 18454  1E04  1D03               	goto	u2465
 18455  1E05  2E08               	movf	(___hex_to_int@hex),w
 18456  1E06  0820               	subwf	(___hex_to_int@i),w
 18457  1E07  0221               u2465:
 18458  1E08                     
 18459                           	skipc
 18460  1E08  1C03               	goto	u2461
 18461  1E09  2E0B               	goto	u2460
 18462  1E0A  2E0C               u2461:
 18463  1E0B                     	goto	l3168
 18464  1E0B  2DCE               u2460:
 18465  1E0C                     	goto	l3176
 18466  1E0C  2E0D               	
 18467                           l395:	
 18468  1E0D                     	line	12
 18469                           	
 18470                           l3176:	
 18471  1E0D                     ;realtimeclock.c: 12:     return t;
 18472                           	bcf	status, 5	;RP0=0, select bank0
 18473  1E0D  1283               	bcf	status, 6	;RP1=0, select bank0
 18474  1E0E  1303               	movf	(___hex_to_int@t+1),w
 18475  1E0F  0824               	movwf	(?___hex_to_int+1)
 18476  1E10  00F8               	movf	(___hex_to_int@t),w
 18477  1E11  0823               	movwf	(?___hex_to_int)
 18478  1E12  00F7               	goto	l396
 18479  1E13  2E14               	
 18480                           l3178:	
 18481  1E14                     	line	13
 18482                           	
 18483                           l396:	
 18484  1E14                     	return
 18485  1E14  0008               	opt stack 0
 18486                           GLOBAL	__end_of___hex_to_int
 18487                           	__end_of___hex_to_int:
 18488  1E15                     	signat	___hex_to_int,4218
 18489                           	global	___awmod
 18490                           
 18491 ;; *************** function ___awmod *****************
 18492 ;; Defined at:
 18493 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 18494 ;; Parameters:    Size  Location     Type
 18495 ;;  divisor         2    0[COMMON] int 
 18496 ;;  dividend        2    2[COMMON] int 
 18497 ;; Auto vars:     Size  Location     Type
 18498 ;;  sign            1    6[COMMON] unsigned char 
 18499 ;;  counter         1    5[COMMON] unsigned char 
 18500 ;; Return value:  Size  Location     Type
 18501 ;;                  2    0[COMMON] int 
 18502 ;; Registers used:
 18503 ;;		wreg, status,2, status,0
 18504 ;; Tracked objects:
 18505 ;;		On entry : 0/0
 18506 ;;		On exit  : 0/0
 18507 ;;		Unchanged: 0/0
 18508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 18509 ;;      Params:         4       0       0       0       0
 18510 ;;      Locals:         2       0       0       0       0
 18511 ;;      Temps:          1       0       0       0       0
 18512 ;;      Totals:         7       0       0       0       0
 18513 ;;Total ram usage:        7 bytes
 18514 ;; Hardware stack levels used:    1
 18515 ;; This function calls:
 18516 ;;		Nothing
 18517 ;; This function is called by:
 18518 ;;		_DisplayTime
 18519 ;;		_DisplayDate
 18520 ;;		_ChangeTrigger
 18521 ;;		_SetTime
 18522 ;;		_SetDate
 18523 ;;		___hex_to_int
 18524 ;;		___int_to_hex
 18525 ;;		_Get_Temp
 18526 ;; This function uses a non-reentrant model
 18527 ;;
 18528                           psect	text56,local,class=CODE,delta=2,merge=1,group=1
 18529                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 18530                           	line	5
 18531                           global __ptext56
 18532                           __ptext56:	;psect for function ___awmod
 18533  1EB9                     psect	text56
 18534                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 18535                           	line	5
 18536                           	global	__size_of___awmod
 18537                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 18538  0063                     	
 18539                           ___awmod:	
 18540  1EB9                     ;incstack = 0
 18541                           	opt	stack 5
 18542                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 18543                           	line	12
 18544                           	
 18545                           l3120:	
 18546  1EB9                     	clrf	(___awmod@sign)
 18547  1EB9  01F6               	line	13
 18548                           	
 18549                           l3122:	
 18550  1EBA                     	btfss	(___awmod@dividend+1),7
 18551  1EBA  1FF3               	goto	u2351
 18552  1EBB  2EBD               	goto	u2350
 18553  1EBC  2EBE               u2351:
 18554  1EBD                     	goto	l3128
 18555  1EBD  2EC6               u2350:
 18556  1EBE                     	line	14
 18557                           	
 18558                           l3124:	
 18559  1EBE                     	comf	(___awmod@dividend),f
 18560  1EBE  09F2               	comf	(___awmod@dividend+1),f
 18561  1EBF  09F3               	incf	(___awmod@dividend),f
 18562  1EC0  0AF2               	skipnz
 18563  1EC1  1903               	incf	(___awmod@dividend+1),f
 18564  1EC2  0AF3               	line	15
 18565                           	
 18566                           l3126:	
 18567  1EC3                     	clrf	(___awmod@sign)
 18568  1EC3  01F6               	incf	(___awmod@sign),f
 18569  1EC4  0AF6               	goto	l3128
 18570  1EC5  2EC6               	line	16
 18571                           	
 18572                           l957:	
 18573  1EC6                     	line	17
 18574                           	
 18575                           l3128:	
 18576  1EC6                     	btfss	(___awmod@divisor+1),7
 18577  1EC6  1FF1               	goto	u2361
 18578  1EC7  2EC9               	goto	u2360
 18579  1EC8  2ECA               u2361:
 18580  1EC9                     	goto	l3132
 18581  1EC9  2ED0               u2360:
 18582  1ECA                     	line	18
 18583                           	
 18584                           l3130:	
 18585  1ECA                     	comf	(___awmod@divisor),f
 18586  1ECA  09F0               	comf	(___awmod@divisor+1),f
 18587  1ECB  09F1               	incf	(___awmod@divisor),f
 18588  1ECC  0AF0               	skipnz
 18589  1ECD  1903               	incf	(___awmod@divisor+1),f
 18590  1ECE  0AF1               	goto	l3132
 18591  1ECF  2ED0               	
 18592                           l958:	
 18593  1ED0                     	line	19
 18594                           	
 18595                           l3132:	
 18596  1ED0                     	movf	((___awmod@divisor)),w
 18597  1ED0  0870               iorwf	((___awmod@divisor+1)),w
 18598  1ED1  0471               	btfsc	status,2
 18599  1ED2  1903               	goto	u2371
 18600  1ED3  2ED5               	goto	u2370
 18601  1ED4  2ED6               u2371:
 18602  1ED5                     	goto	l3150
 18603  1ED5  2F0B               u2370:
 18604  1ED6                     	line	20
 18605                           	
 18606                           l3134:	
 18607  1ED6                     	clrf	(___awmod@counter)
 18608  1ED6  01F5               	incf	(___awmod@counter),f
 18609  1ED7  0AF5               	line	21
 18610                           	goto	l3140
 18611  1ED8  2EE5               	
 18612                           l961:	
 18613  1ED9                     	line	22
 18614                           	
 18615                           l3136:	
 18616  1ED9                     	movlw	01h
 18617  1ED9  3001               	
 18618                           u2385:
 18619  1EDA                     	clrc
 18620  1EDA  1003               	rlf	(___awmod@divisor),f
 18621  1EDB  0DF0               	rlf	(___awmod@divisor+1),f
 18622  1EDC  0DF1               	addlw	-1
 18623  1EDD  3EFF               	skipz
 18624  1EDE  1D03               	goto	u2385
 18625  1EDF  2EDA               	line	23
 18626                           	
 18627                           l3138:	
 18628  1EE0                     	movlw	low(01h)
 18629  1EE0  3001               	movwf	(??___awmod+0)+0
 18630  1EE1  00F4               	movf	(??___awmod+0)+0,w
 18631  1EE2  0874               	addwf	(___awmod@counter),f
 18632  1EE3  07F5               	goto	l3140
 18633  1EE4  2EE5               	line	24
 18634                           	
 18635                           l960:	
 18636  1EE5                     	line	21
 18637                           	
 18638                           l3140:	
 18639  1EE5                     	btfss	(___awmod@divisor+1),(15)&7
 18640  1EE5  1FF1               	goto	u2391
 18641  1EE6  2EE8               	goto	u2390
 18642  1EE7  2EE9               u2391:
 18643  1EE8                     	goto	l3136
 18644  1EE8  2ED9               u2390:
 18645  1EE9                     	goto	l3142
 18646  1EE9  2EEB               	
 18647                           l962:	
 18648  1EEA                     	goto	l3142
 18649  1EEA  2EEB               	line	25
 18650                           	
 18651                           l963:	
 18652  1EEB                     	line	26
 18653                           	
 18654                           l3142:	
 18655  1EEB                     	movf	(___awmod@divisor+1),w
 18656  1EEB  0871               	subwf	(___awmod@dividend+1),w
 18657  1EEC  0273               	skipz
 18658  1EED  1D03               	goto	u2405
 18659  1EEE  2EF1               	movf	(___awmod@divisor),w
 18660  1EEF  0870               	subwf	(___awmod@dividend),w
 18661  1EF0  0272               u2405:
 18662  1EF1                     	skipc
 18663  1EF1  1C03               	goto	u2401
 18664  1EF2  2EF4               	goto	u2400
 18665  1EF3  2EF5               u2401:
 18666  1EF4                     	goto	l3146
 18667  1EF4  2EFC               u2400:
 18668  1EF5                     	line	27
 18669                           	
 18670                           l3144:	
 18671  1EF5                     	movf	(___awmod@divisor),w
 18672  1EF5  0870               	subwf	(___awmod@dividend),f
 18673  1EF6  02F2               	movf	(___awmod@divisor+1),w
 18674  1EF7  0871               	skipc
 18675  1EF8  1C03               	decf	(___awmod@dividend+1),f
 18676  1EF9  03F3               	subwf	(___awmod@dividend+1),f
 18677  1EFA  02F3               	goto	l3146
 18678  1EFB  2EFC               	
 18679                           l964:	
 18680  1EFC                     	line	28
 18681                           	
 18682                           l3146:	
 18683  1EFC                     	movlw	01h
 18684  1EFC  3001               	
 18685                           u2415:
 18686  1EFD                     	clrc
 18687  1EFD  1003               	rrf	(___awmod@divisor+1),f
 18688  1EFE  0CF1               	rrf	(___awmod@divisor),f
 18689  1EFF  0CF0               	addlw	-1
 18690  1F00  3EFF               	skipz
 18691  1F01  1D03               	goto	u2415
 18692  1F02  2EFD               	line	29
 18693                           	
 18694                           l3148:	
 18695  1F03                     	movlw	01h
 18696  1F03  3001               	subwf	(___awmod@counter),f
 18697  1F04  02F5               	btfss	status,2
 18698  1F05  1D03               	goto	u2421
 18699  1F06  2F08               	goto	u2420
 18700  1F07  2F09               u2421:
 18701  1F08                     	goto	l3142
 18702  1F08  2EEB               u2420:
 18703  1F09                     	goto	l3150
 18704  1F09  2F0B               	
 18705                           l965:	
 18706  1F0A                     	goto	l3150
 18707  1F0A  2F0B               	line	30
 18708                           	
 18709                           l959:	
 18710  1F0B                     	line	31
 18711                           	
 18712                           l3150:	
 18713  1F0B                     	movf	((___awmod@sign)),w
 18714  1F0B  0876               	btfsc	status,2
 18715  1F0C  1903               	goto	u2431
 18716  1F0D  2F0F               	goto	u2430
 18717  1F0E  2F10               u2431:
 18718  1F0F                     	goto	l3154
 18719  1F0F  2F16               u2430:
 18720  1F10                     	line	32
 18721                           	
 18722                           l3152:	
 18723  1F10                     	comf	(___awmod@dividend),f
 18724  1F10  09F2               	comf	(___awmod@dividend+1),f
 18725  1F11  09F3               	incf	(___awmod@dividend),f
 18726  1F12  0AF2               	skipnz
 18727  1F13  1903               	incf	(___awmod@dividend+1),f
 18728  1F14  0AF3               	goto	l3154
 18729  1F15  2F16               	
 18730                           l966:	
 18731  1F16                     	line	33
 18732                           	
 18733                           l3154:	
 18734  1F16                     	movf	(___awmod@dividend+1),w
 18735  1F16  0873               	movwf	(?___awmod+1)
 18736  1F17  00F1               	movf	(___awmod@dividend),w
 18737  1F18  0872               	movwf	(?___awmod)
 18738  1F19  00F0               	goto	l967
 18739  1F1A  2F1B               	
 18740                           l3156:	
 18741  1F1B                     	line	34
 18742                           	
 18743                           l967:	
 18744  1F1B                     	return
 18745  1F1B  0008               	opt stack 0
 18746                           GLOBAL	__end_of___awmod
 18747                           	__end_of___awmod:
 18748  1F1C                     	signat	___awmod,8314
 18749                           	global	_RealTimeClock_write_byte
 18750                           
 18751 ;; *************** function _RealTimeClock_write_byte *****************
 18752 ;; Defined at:
 18753 ;;		line 26 in file "realtimeclock.c"
 18754 ;; Parameters:    Size  Location     Type
 18755 ;;  time_tx         1    wreg     unsigned char 
 18756 ;; Auto vars:     Size  Location     Type
 18757 ;;  time_tx         1    4[COMMON] unsigned char 
 18758 ;;  i               2    2[COMMON] int 
 18759 ;; Return value:  Size  Location     Type
 18760 ;;                  1    wreg      void 
 18761 ;; Registers used:
 18762 ;;		wreg, status,2, status,0, btemp+1
 18763 ;; Tracked objects:
 18764 ;;		On entry : 0/0
 18765 ;;		On exit  : 0/0
 18766 ;;		Unchanged: 0/0
 18767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 18768 ;;      Params:         0       0       0       0       0
 18769 ;;      Locals:         3       0       0       0       0
 18770 ;;      Temps:          2       0       0       0       0
 18771 ;;      Totals:         5       0       0       0       0
 18772 ;;Total ram usage:        5 bytes
 18773 ;; Hardware stack levels used:    1
 18774 ;; This function calls:
 18775 ;;		Nothing
 18776 ;; This function is called by:
 18777 ;;		_RealTimeClock_set_burst_time
 18778 ;;		_RealTimeClock_init
 18779 ;;		_RealTimeClock_get_seconds
 18780 ;;		_RealTimeClock_get_minutes
 18781 ;;		_RealTimeClock_get_hours
 18782 ;;		_RealTimeClock_get_day_of_month
 18783 ;;		_RealTimeClock_get_month
 18784 ;;		_RealTimeClock_get_day_of_week
 18785 ;;		_RealTimeClock_get_year
 18786 ;;		_RealTimeClock_set_seconds
 18787 ;;		_RealTimeClock_set_minutes
 18788 ;;		_RealTimeClock_set_hours
 18789 ;;		_RealTimeClock_set_day_of_month
 18790 ;;		_RealTimeClock_set_month
 18791 ;;		_RealTimeClock_set_day_of_week
 18792 ;;		_RealTimeClock_set_year
 18793 ;;		_RealTimeClock_get_burst_time
 18794 ;;		_RealTimeClock_set_hours_digital
 18795 ;;		_RealTimeClock_get_hours_digital
 18796 ;; This function uses a non-reentrant model
 18797 ;;
 18798                           psect	text57,local,class=CODE,delta=2,merge=1,group=0
 18799                           	file	"realtimeclock.c"
 18800                           	line	26
 18801                           global __ptext57
 18802                           __ptext57:	;psect for function _RealTimeClock_write_byte
 18803  1B28                     psect	text57
 18804                           	file	"realtimeclock.c"
 18805                           	line	26
 18806                           	global	__size_of_RealTimeClock_write_byte
 18807                           	__size_of_RealTimeClock_write_byte	equ	__end_of_RealTimeClock_write_byte-_RealTimeClock
                                 _write_byte
 18808  003B                     	
 18809                           _RealTimeClock_write_byte:	
 18810  1B28                     ;incstack = 0
 18811                           	opt	stack 4
 18812                           ; Regs used in _RealTimeClock_write_byte: [wreg+status,2+status,0+btemp+1]
 18813                           ;RealTimeClock_write_byte@time_tx stored from wreg
 18814                           	movwf	(RealTimeClock_write_byte@time_tx)
 18815  1B28  00F4               	line	27
 18816                           	
 18817                           l3180:	
 18818  1B29                     ;realtimeclock.c: 27:     for(int i = 0; i < 8; ++i) {
 18819                           	clrf	(RealTimeClock_write_byte@i)
 18820  1B29  01F2               	clrf	(RealTimeClock_write_byte@i+1)
 18821  1B2A  01F3               	
 18822                           l3182:	
 18823  1B2B                     	movf	(RealTimeClock_write_byte@i+1),w
 18824  1B2B  0873               	xorlw	80h
 18825  1B2C  3A80               	movwf	btemp+1
 18826  1B2D  00FF               	movlw	(0)^80h
 18827  1B2E  3080               	subwf	btemp+1,w
 18828  1B2F  027F               	skipz
 18829  1B30  1D03               	goto	u2475
 18830  1B31  2B34               	movlw	08h
 18831  1B32  3008               	subwf	(RealTimeClock_write_byte@i),w
 18832  1B33  0272               u2475:
 18833  1B34                     
 18834                           	skipc
 18835  1B34  1C03               	goto	u2471
 18836  1B35  2B37               	goto	u2470
 18837  1B36  2B38               u2471:
 18838  1B37                     	goto	l406
 18839  1B37  2B3A               u2470:
 18840  1B38                     	goto	l407
 18841  1B38  2B5F               	
 18842                           l3184:	
 18843  1B39                     	goto	l407
 18844  1B39  2B5F               	
 18845                           l406:	
 18846  1B3A                     	line	28
 18847                           ;realtimeclock.c: 28:         RB4 = 0;
 18848                           	bcf	status, 5	;RP0=0, select bank0
 18849  1B3A  1283               	bcf	status, 6	;RP1=0, select bank0
 18850  1B3B  1303               	bcf	(52/8),(52)&7	;volatile
 18851  1B3C  1206               	line	29
 18852                           ;realtimeclock.c: 29:         RB0 = 0;
 18853                           	bcf	(48/8),(48)&7	;volatile
 18854  1B3D  1006               	line	30
 18855                           ;realtimeclock.c: 30:         if (time_tx&0x01) {
 18856                           	btfss	(RealTimeClock_write_byte@time_tx),(0)&7
 18857  1B3E  1C74               	goto	u2481
 18858  1B3F  2B41               	goto	u2480
 18859  1B40  2B42               u2481:
 18860  1B41                     	goto	l3188
 18861  1B41  2B44               u2480:
 18862  1B42                     	line	31
 18863                           	
 18864                           l3186:	
 18865  1B42                     ;realtimeclock.c: 31:             RB4 = 1;
 18866                           	bsf	(52/8),(52)&7	;volatile
 18867  1B42  1606               	goto	l3188
 18868  1B43  2B44               	line	32
 18869                           ;realtimeclock.c: 32:         }
 18870                           	
 18871                           l408:	
 18872  1B44                     	line	33
 18873                           	
 18874                           l3188:	
 18875  1B44                     ;realtimeclock.c: 33:         time_tx = time_tx >> 1;
 18876                           	movf	(RealTimeClock_write_byte@time_tx),w
 18877  1B44  0874               	movwf	(??_RealTimeClock_write_byte+0)+0
 18878  1B45  00F0               	clrc
 18879  1B46  1003               	rrf	(??_RealTimeClock_write_byte+0)+0,w
 18880  1B47  0C70               	movwf	(??_RealTimeClock_write_byte+1)+0
 18881  1B48  00F1               	movf	(??_RealTimeClock_write_byte+1)+0,w
 18882  1B49  0871               	movwf	(RealTimeClock_write_byte@time_tx)
 18883  1B4A  00F4               	line	34
 18884                           	
 18885                           l3190:	
 18886  1B4B                     ;realtimeclock.c: 34:         RB0 = 1;
 18887                           	bsf	(48/8),(48)&7	;volatile
 18888  1B4B  1406               	line	35
 18889                           	
 18890                           l3192:	
 18891  1B4C                     ;realtimeclock.c: 35:     }
 18892                           	movlw	01h
 18893  1B4C  3001               	addwf	(RealTimeClock_write_byte@i),f
 18894  1B4D  07F2               	skipnc
 18895  1B4E  1803               	incf	(RealTimeClock_write_byte@i+1),f
 18896  1B4F  0AF3               	movlw	0
 18897  1B50  3000               	addwf	(RealTimeClock_write_byte@i+1),f
 18898  1B51  07F3               	
 18899                           l3194:	
 18900  1B52                     	movf	(RealTimeClock_write_byte@i+1),w
 18901  1B52  0873               	xorlw	80h
 18902  1B53  3A80               	movwf	btemp+1
 18903  1B54  00FF               	movlw	(0)^80h
 18904  1B55  3080               	subwf	btemp+1,w
 18905  1B56  027F               	skipz
 18906  1B57  1D03               	goto	u2495
 18907  1B58  2B5B               	movlw	08h
 18908  1B59  3008               	subwf	(RealTimeClock_write_byte@i),w
 18909  1B5A  0272               u2495:
 18910  1B5B                     
 18911                           	skipc
 18912  1B5B  1C03               	goto	u2491
 18913  1B5C  2B5E               	goto	u2490
 18914  1B5D  2B5F               u2491:
 18915  1B5E                     	goto	l406
 18916  1B5E  2B3A               u2490:
 18917  1B5F                     	
 18918                           l407:	
 18919  1B5F                     	line	36
 18920                           ;realtimeclock.c: 36:     RB0 = 0;
 18921                           	bcf	status, 5	;RP0=0, select bank0
 18922  1B5F  1283               	bcf	status, 6	;RP1=0, select bank0
 18923  1B60  1303               	bcf	(48/8),(48)&7	;volatile
 18924  1B61  1006               	line	37
 18925                           	
 18926                           l409:	
 18927  1B62                     	return
 18928  1B62  0008               	opt stack 0
 18929                           GLOBAL	__end_of_RealTimeClock_write_byte
 18930                           	__end_of_RealTimeClock_write_byte:
 18931  1B63                     	signat	_RealTimeClock_write_byte,4217
 18932                           	global	_RealTimeClock_read_byte
 18933                           
 18934 ;; *************** function _RealTimeClock_read_byte *****************
 18935 ;; Defined at:
 18936 ;;		line 39 in file "realtimeclock.c"
 18937 ;; Parameters:    Size  Location     Type
 18938 ;;		None
 18939 ;; Auto vars:     Size  Location     Type
 18940 ;;  i               2    3[COMMON] int 
 18941 ;;  time_rx         1    2[COMMON] unsigned char 
 18942 ;; Return value:  Size  Location     Type
 18943 ;;                  1    wreg      unsigned char 
 18944 ;; Registers used:
 18945 ;;		wreg, status,2, status,0, btemp+1
 18946 ;; Tracked objects:
 18947 ;;		On entry : 0/0
 18948 ;;		On exit  : 0/0
 18949 ;;		Unchanged: 0/0
 18950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 18951 ;;      Params:         0       0       0       0       0
 18952 ;;      Locals:         3       0       0       0       0
 18953 ;;      Temps:          2       0       0       0       0
 18954 ;;      Totals:         5       0       0       0       0
 18955 ;;Total ram usage:        5 bytes
 18956 ;; Hardware stack levels used:    1
 18957 ;; This function calls:
 18958 ;;		Nothing
 18959 ;; This function is called by:
 18960 ;;		_RealTimeClock_get_seconds
 18961 ;;		_RealTimeClock_get_minutes
 18962 ;;		_RealTimeClock_get_hours
 18963 ;;		_RealTimeClock_get_day_of_month
 18964 ;;		_RealTimeClock_get_month
 18965 ;;		_RealTimeClock_get_day_of_week
 18966 ;;		_RealTimeClock_get_year
 18967 ;;		_RealTimeClock_get_burst_time
 18968 ;;		_RealTimeClock_set_hours_digital
 18969 ;;		_RealTimeClock_get_hours_digital
 18970 ;; This function uses a non-reentrant model
 18971 ;;
 18972                           psect	text58,local,class=CODE,delta=2,merge=1,group=0
 18973                           	line	39
 18974                           global __ptext58
 18975                           __ptext58:	;psect for function _RealTimeClock_read_byte
 18976  1D34                     psect	text58
 18977                           	file	"realtimeclock.c"
 18978                           	line	39
 18979                           	global	__size_of_RealTimeClock_read_byte
 18980                           	__size_of_RealTimeClock_read_byte	equ	__end_of_RealTimeClock_read_byte-_RealTimeClock_r
                                 ead_byte
 18981  0047                     	
 18982                           _RealTimeClock_read_byte:	
 18983  1D34                     ;incstack = 0
 18984                           	opt	stack 4
 18985                           ; Regs used in _RealTimeClock_read_byte: [wreg+status,2+status,0+btemp+1]
 18986                           	line	41
 18987                           	
 18988                           l3196:	
 18989  1D34                     ;realtimeclock.c: 41:     unsigned char time_rx = 0;
 18990                           	clrf	(RealTimeClock_read_byte@time_rx)
 18991  1D34  01F2               	line	42
 18992                           	
 18993                           l3198:	
 18994  1D35                     ;realtimeclock.c: 42:     TRISB4 = 1;
 18995                           	bsf	status, 5	;RP0=1, select bank1
 18996  1D35  1683               	bcf	status, 6	;RP1=0, select bank1
 18997  1D36  1303               	bsf	(1076/8)^080h,(1076)&7	;volatile
 18998  1D37  1606               	line	43
 18999                           ;realtimeclock.c: 43:     for(int i = 0; i < 8; ++i) {
 19000                           	clrf	(RealTimeClock_read_byte@i)
 19001  1D38  01F3               	clrf	(RealTimeClock_read_byte@i+1)
 19002  1D39  01F4               	
 19003                           l3200:	
 19004  1D3A                     	movf	(RealTimeClock_read_byte@i+1),w
 19005  1D3A  0874               	xorlw	80h
 19006  1D3B  3A80               	movwf	btemp+1
 19007  1D3C  00FF               	movlw	(0)^80h
 19008  1D3D  3080               	subwf	btemp+1,w
 19009  1D3E  027F               	skipz
 19010  1D3F  1D03               	goto	u2505
 19011  1D40  2D43               	movlw	08h
 19012  1D41  3008               	subwf	(RealTimeClock_read_byte@i),w
 19013  1D42  0273               u2505:
 19014  1D43                     
 19015                           	skipc
 19016  1D43  1C03               	goto	u2501
 19017  1D44  2D46               	goto	u2500
 19018  1D45  2D47               u2501:
 19019  1D46                     	goto	l412
 19020  1D46  2D49               u2500:
 19021  1D47                     	goto	l413
 19022  1D47  2D72               	
 19023                           l3202:	
 19024  1D48                     	goto	l413
 19025  1D48  2D72               	
 19026                           l412:	
 19027  1D49                     	line	44
 19028                           ;realtimeclock.c: 44:         RB0 = 1;
 19029                           	bcf	status, 5	;RP0=0, select bank0
 19030  1D49  1283               	bcf	status, 6	;RP1=0, select bank0
 19031  1D4A  1303               	bsf	(48/8),(48)&7	;volatile
 19032  1D4B  1406               	line	47
 19033                           ;realtimeclock.c: 47:         if(RB4) time_rx += 1 << i;
 19034                           	btfss	(52/8),(52)&7	;volatile
 19035  1D4C  1E06               	goto	u2511
 19036  1D4D  2D4F               	goto	u2510
 19037  1D4E  2D50               u2511:
 19038  1D4F                     	goto	l3206
 19039  1D4F  2D5E               u2510:
 19040  1D50                     	
 19041                           l3204:	
 19042  1D50                     	movlw	low(01h)
 19043  1D50  3001               	movwf	(??_RealTimeClock_read_byte+0)+0
 19044  1D51  00F0               	incf	(RealTimeClock_read_byte@i),w
 19045  1D52  0A73               	goto	u2524
 19046  1D53  2D56               u2525:
 19047  1D54                     	clrc
 19048  1D54  1003               	rlf	(??_RealTimeClock_read_byte+0)+0,f
 19049  1D55  0DF0               u2524:
 19050  1D56                     	addlw	-1
 19051  1D56  3EFF               	skipz
 19052  1D57  1D03               	goto	u2525
 19053  1D58  2D54               	movf	0+(??_RealTimeClock_read_byte+0)+0,w
 19054  1D59  0870               	movwf	(??_RealTimeClock_read_byte+1)+0
 19055  1D5A  00F1               	movf	(??_RealTimeClock_read_byte+1)+0,w
 19056  1D5B  0871               	addwf	(RealTimeClock_read_byte@time_rx),f
 19057  1D5C  07F2               	goto	l3206
 19058  1D5D  2D5E               	
 19059                           l414:	
 19060  1D5E                     	line	48
 19061                           	
 19062                           l3206:	
 19063  1D5E                     ;realtimeclock.c: 48:         RB0 = 0;
 19064                           	bcf	(48/8),(48)&7	;volatile
 19065  1D5E  1006               	line	49
 19066                           	
 19067                           l3208:	
 19068  1D5F                     ;realtimeclock.c: 49:     }
 19069                           	movlw	01h
 19070  1D5F  3001               	addwf	(RealTimeClock_read_byte@i),f
 19071  1D60  07F3               	skipnc
 19072  1D61  1803               	incf	(RealTimeClock_read_byte@i+1),f
 19073  1D62  0AF4               	movlw	0
 19074  1D63  3000               	addwf	(RealTimeClock_read_byte@i+1),f
 19075  1D64  07F4               	
 19076                           l3210:	
 19077  1D65                     	movf	(RealTimeClock_read_byte@i+1),w
 19078  1D65  0874               	xorlw	80h
 19079  1D66  3A80               	movwf	btemp+1
 19080  1D67  00FF               	movlw	(0)^80h
 19081  1D68  3080               	subwf	btemp+1,w
 19082  1D69  027F               	skipz
 19083  1D6A  1D03               	goto	u2535
 19084  1D6B  2D6E               	movlw	08h
 19085  1D6C  3008               	subwf	(RealTimeClock_read_byte@i),w
 19086  1D6D  0273               u2535:
 19087  1D6E                     
 19088                           	skipc
 19089  1D6E  1C03               	goto	u2531
 19090  1D6F  2D71               	goto	u2530
 19091  1D70  2D72               u2531:
 19092  1D71                     	goto	l412
 19093  1D71  2D49               u2530:
 19094  1D72                     	
 19095                           l413:	
 19096  1D72                     	line	50
 19097                           ;realtimeclock.c: 50:     RB0 = 0;
 19098                           	bcf	status, 5	;RP0=0, select bank0
 19099  1D72  1283               	bcf	status, 6	;RP1=0, select bank0
 19100  1D73  1303               	bcf	(48/8),(48)&7	;volatile
 19101  1D74  1006               	line	51
 19102                           ;realtimeclock.c: 51:     TRISB4 = 0;
 19103                           	bsf	status, 5	;RP0=1, select bank1
 19104  1D75  1683               	bcf	status, 6	;RP1=0, select bank1
 19105  1D76  1303               	bcf	(1076/8)^080h,(1076)&7	;volatile
 19106  1D77  1206               	line	52
 19107                           	
 19108                           l3212:	
 19109  1D78                     ;realtimeclock.c: 52:     return time_rx;
 19110                           	movf	(RealTimeClock_read_byte@time_rx),w
 19111  1D78  0872               	goto	l415
 19112  1D79  2D7A               	
 19113                           l3214:	
 19114  1D7A                     	line	53
 19115                           	
 19116                           l415:	
 19117  1D7A                     	return
 19118  1D7A  0008               	opt stack 0
 19119                           GLOBAL	__end_of_RealTimeClock_read_byte
 19120                           	__end_of_RealTimeClock_read_byte:
 19121  1D7B                     	signat	_RealTimeClock_read_byte,89
 19122                           	global	_Buzzer_Init
 19123                           
 19124 ;; *************** function _Buzzer_Init *****************
 19125 ;; Defined at:
 19126 ;;		line 6 in file "Buzzer.c"
 19127 ;; Parameters:    Size  Location     Type
 19128 ;;		None
 19129 ;; Auto vars:     Size  Location     Type
 19130 ;;		None
 19131 ;; Return value:  Size  Location     Type
 19132 ;;                  1    wreg      void 
 19133 ;; Registers used:
 19134 ;;		None
 19135 ;; Tracked objects:
 19136 ;;		On entry : 0/0
 19137 ;;		On exit  : 0/0
 19138 ;;		Unchanged: 0/0
 19139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 19140 ;;      Params:         0       0       0       0       0
 19141 ;;      Locals:         0       0       0       0       0
 19142 ;;      Temps:          0       0       0       0       0
 19143 ;;      Totals:         0       0       0       0       0
 19144 ;;Total ram usage:        0 bytes
 19145 ;; Hardware stack levels used:    1
 19146 ;; This function calls:
 19147 ;;		Nothing
 19148 ;; This function is called by:
 19149 ;;		_main
 19150 ;; This function uses a non-reentrant model
 19151 ;;
 19152                           psect	text59,local,class=CODE,delta=2,merge=1,group=0
 19153                           	file	"Buzzer.c"
 19154                           	line	6
 19155                           global __ptext59
 19156                           __ptext59:	;psect for function _Buzzer_Init
 19157  1805                     psect	text59
 19158                           	file	"Buzzer.c"
 19159                           	line	6
 19160                           	global	__size_of_Buzzer_Init
 19161                           	__size_of_Buzzer_Init	equ	__end_of_Buzzer_Init-_Buzzer_Init
 19162  0004                     	
 19163                           _Buzzer_Init:	
 19164  1805                     ;incstack = 0
 19165                           	opt	stack 7
 19166                           ; Regs used in _Buzzer_Init: []
 19167                           	line	8
 19168                           	
 19169                           l4666:	
 19170  1805                     ;Buzzer.c: 8:     TRISB1 = 0;
 19171                           	bsf	status, 5	;RP0=1, select bank1
 19172  1805  1683               	bcf	status, 6	;RP1=0, select bank1
 19173  1806  1303               	bcf	(1073/8)^080h,(1073)&7	;volatile
 19174  1807  1086               	line	9
 19175                           	
 19176                           l635:	
 19177  1808                     	return
 19178  1808  0008               	opt stack 0
 19179                           GLOBAL	__end_of_Buzzer_Init
 19180                           	__end_of_Buzzer_Init:
 19181  1809                     	signat	_Buzzer_Init,89
 19182                           global	___latbits
 19183                           ___latbits	equ	2
 19184  0002                     	global	btemp
 19185                           	btemp set 07Eh
 19186  007E                     
 19187                           	DABS	1,126,2	;btemp
 19188                           	global	wtemp0
 19189                           	wtemp0 set btemp+0
 19190  007E                     	end


Data Sizes:
    Strings     193
    Constant    0
    Data        88
    BSS         63
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      80
    BANK1            80     28      80
    BANK3            96      0      84
    BANK2            96      0       0

Pointer List with Targets:

    timeBuffer	PTR int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Get_Temp@buffer	PTR unsigned char  size(1) Largest target is 6
		 -> tempBuffer(BANK1[6]), 

    LCD_SendString@string	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_24(CODE[16]), STR_23(CODE[11]), STR_22(CODE[12]), SetDate@Date(BANK0[9]), 
		 -> STR_21(CODE[13]), STR_20(CODE[6]), SetTime@digits(BANK0[9]), STR_19(CODE[9]), 
		 -> STR_18(CODE[6]), STR_17(CODE[6]), STR_16(CODE[7]), STR_15(CODE[14]), 
		 -> STR_14(CODE[4]), STR_13(CODE[3]), STR_12(CODE[9]), ChangeTrigger@digits(BANK0[3]), 
		 -> STR_11(CODE[12]), STR_10(CODE[9]), tempBuffer(BANK1[6]), STR_9(CODE[6]), 
		 -> STR_8(CODE[6]), STR_7(CODE[7]), STR_6(CODE[9]), STR_5(CODE[7]), 
		 -> STR_4(CODE[9]), STR_3(CODE[10]), STR_2(CODE[8]), STR_1(CODE[7]), 
		 -> dateDisplayer(BANK3[9]), timeDisplayer(BANK3[9]), 

    sp__RealTimeClock_get_burst_time	PTR int  size(1) Largest target is 14
		 -> __RealTimeClock_buff(BANK3[14]), 

    RealTimeClock_set_burst_time@time	PTR int  size(1) Largest target is 16
		 -> main@start_date(BANK1[16]), 

    SoundAlarm@Alarm	PTR unsigned char  size(1) Largest target is 16
		 -> STR_24(CODE[16]), 

    HeatingControlOff@On	PTR unsigned char  size(1) Largest target is 11
		 -> STR_23(CODE[11]), 

    HeatingControlOff@Off	PTR unsigned char  size(1) Largest target is 12
		 -> STR_22(CODE[12]), 

    SetDate@DateSet	PTR unsigned char  size(1) Largest target is 13
		 -> STR_21(CODE[13]), 

    SetDate@DateDis	PTR unsigned char  size(1) Largest target is 6
		 -> STR_20(CODE[6]), 

    SetTime@TimeSet	PTR unsigned char  size(1) Largest target is 9
		 -> STR_19(CODE[9]), 

    SetTime@Time	PTR unsigned char  size(1) Largest target is 6
		 -> STR_18(CODE[6]), 

    DateDayScreen@DayDis	PTR unsigned char  size(1) Largest target is 6
		 -> STR_17(CODE[6]), 

    DateDayScreen@date	PTR unsigned char  size(1) Largest target is 7
		 -> STR_16(CODE[7]), 

    Switch24Hour@c	PTR unsigned char  size(1) Largest target is 14
		 -> STR_15(CODE[14]), 

    SwapToHeatingDisplay@Off	PTR unsigned char  size(1) Largest target is 4
		 -> STR_14(CODE[4]), 

    SwapToHeatingDisplay@On	PTR unsigned char  size(1) Largest target is 3
		 -> STR_13(CODE[3]), 

    SwapToHeatingDisplay@Heat	PTR unsigned char  size(1) Largest target is 9
		 -> STR_12(CODE[9]), 

    ChangeTrigger@TriggerSet	PTR unsigned char  size(1) Largest target is 12
		 -> STR_11(CODE[12]), 

    ChangeTrigger@Trigger	PTR unsigned char  size(1) Largest target is 9
		 -> STR_10(CODE[9]), 

    MainScreen@Temp	PTR unsigned char  size(1) Largest target is 6
		 -> STR_9(CODE[6]), 

    MainScreen@Time	PTR unsigned char  size(1) Largest target is 6
		 -> STR_8(CODE[6]), 

    DisplayTemp@tempBuffer	PTR unsigned char  size(1) Largest target is 6
		 -> tempBuffer(BANK1[6]), 

    DisplayDay@Sunday	PTR unsigned char  size(1) Largest target is 7
		 -> STR_7(CODE[7]), 

    DisplayDay@Saturday	PTR unsigned char  size(1) Largest target is 9
		 -> STR_6(CODE[9]), 

    DisplayDay@Friday	PTR unsigned char  size(1) Largest target is 7
		 -> STR_5(CODE[7]), 

    DisplayDay@Thursday	PTR unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[9]), 

    DisplayDay@Wednesday	PTR unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[10]), 

    DisplayDay@Tuesday	PTR unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), 

    DisplayDay@Monday	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_SwapToHeatingDisplay
    _SoundAlarm->_SwapToHeatingDisplay
    _HeatingControlOff->_SwapToHeatingDisplay
    _Switch24Hour->_LCD_SendString
    _RealTimeClock_set_seconds->___int_to_hex
    _RealTimeClock_set_minutes->___int_to_hex
    _RealTimeClock_set_hours->___int_to_hex
    _RealTimeClock_set_year->___int_to_hex
    _RealTimeClock_set_month->___int_to_hex
    _RealTimeClock_set_day_of_week->___int_to_hex
    _RealTimeClock_set_day_of_month->___int_to_hex
    _DisplayTime->_RealTimeClock_get_hours
    _DisplayTime->_RealTimeClock_get_minutes
    _DisplayTime->_RealTimeClock_get_seconds
    _RealTimeClock_get_seconds->___hex_to_int
    _Get_Temp->___lwdiv
    ___lwdiv->___lwmod
    _Write_Byte->_Delay
    _Reset->_Delay
    _Read_Byte->_Delay
    _DateDayScreen->_SwapToHeatingDisplay
    _SwapToHeatingDisplay->_Keypad_Scan
    _SwapToHeatingDisplay->_LCD_SendString
    _LCD_SecondLine->_LCD_Command
    _DisplayDay->_RealTimeClock_get_day_of_week
    _RealTimeClock_get_day_of_week->___hex_to_int
    _DisplayDate->_RealTimeClock_get_day_of_month
    _DisplayDate->_RealTimeClock_get_month
    _DisplayDate->_RealTimeClock_get_year
    _RealTimeClock_get_year->___hex_to_int
    _RealTimeClock_get_month->___hex_to_int
    _RealTimeClock_get_day_of_month->___hex_to_int
    _ChangeTrigger->___awdiv
    _LCD_SendString->_LCD_SendData
    _Keypad_Scan->_Key_Delay
    _RealTimeClock_set_burst_time->___int_to_hex
    ___int_to_hex->___awmod
    _RealTimeClock_init->_RealTimeClock_write_byte
    _CheckTime->_RealTimeClock_get_hours
    _CheckTime->_RealTimeClock_get_minutes
    _RealTimeClock_get_minutes->___hex_to_int
    _RealTimeClock_get_hours->___hex_to_int
    ___hex_to_int->___awmod

Critical Paths under _main in BANK0

    _main->_SoundAlarm
    _SoundAlarm->_HeatingControlOff
    _HeatingControlOff->_SetDate
    _SetTime->_RealTimeClock_get_hours
    _SetTime->_RealTimeClock_get_minutes
    _SetTime->_RealTimeClock_get_seconds
    _SetDate->_RealTimeClock_get_day_of_month
    _SetDate->_RealTimeClock_get_month
    _SetDate->_RealTimeClock_get_year
    _MainScreen->_DisplayTemp
    _DisplayTime->_RealTimeClock_get_hours
    _DisplayTime->_RealTimeClock_get_minutes
    _DisplayTime->_RealTimeClock_get_seconds
    _RealTimeClock_get_seconds->___hex_to_int
    _DisplayTemp->_Get_Temp
    _DateDayScreen->_ChangeTrigger
    _DisplayDay->_RealTimeClock_get_day_of_week
    _RealTimeClock_get_day_of_week->___hex_to_int
    _DisplayDate->_RealTimeClock_get_day_of_month
    _DisplayDate->_RealTimeClock_get_month
    _DisplayDate->_RealTimeClock_get_year
    _RealTimeClock_get_year->___hex_to_int
    _RealTimeClock_get_month->___hex_to_int
    _RealTimeClock_get_day_of_month->___hex_to_int
    _CheckTime->_RealTimeClock_get_hours
    _CheckTime->_RealTimeClock_get_minutes
    _RealTimeClock_get_minutes->___hex_to_int
    _RealTimeClock_get_hours->___hex_to_int

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0  867550
                                             61 BANK0      4     4      0
                                              0 BANK1     28    28      0
                        _Buzzer_Init
                      _ChangeTrigger
                           _CheckDay
                          _CheckTime
                      _DateDayScreen
                  _HeatingControlOff
                        _Init_Keypad
                        _Keypad_Scan
                        _LCD_Command
                           _LCD_Init
                         _MainScreen
                         _Main_Delay
      _RealTimeClock_get_day_of_week
                 _RealTimeClock_init
       _RealTimeClock_set_burst_time
                            _SetDate
                            _SetTime
                         _SoundAlarm
                           _SoundOff
               _SwapToHeatingDisplay
                       _Switch24Hour
                   _Thermometer_Init
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Thermometer_Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SoundAlarm                                          10     2      8  409480
                                             51 BANK0     10     2      8
                      _ChangeTrigger
                      _DateDayScreen
                           _Get_Temp
                  _HeatingControlOff
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SendString
                            _SetDate
                            _SetTime
                           _SoundOff
                            _SoundOn
               _SwapToHeatingDisplay
                       _Switch24Hour
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _SoundOn                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HeatingControlOff                                   11     3      8  225271
                                             40 BANK0     11     3      8
                      _ChangeTrigger
                      _DateDayScreen
                           _Get_Temp
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SendString
                         _MainScreen
                         _Main_Delay
                            _SetDate
                            _SetTime
                           _SoundOff
               _SwapToHeatingDisplay
                       _Switch24Hour
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Switch24Hour                                         4     2      2    2687
                                              8 COMMON     4     2      2
                        _LCD_Command
                     _LCD_SendString
 ---------------------------------------------------------------------------------
 (1) _SoundOff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetTime                                             27    25      2   45015
                                              7 BANK0     27    25      2
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SendString
                         _Main_Delay
            _RealTimeClock_get_hours
          _RealTimeClock_get_minutes
          _RealTimeClock_get_seconds
            _RealTimeClock_set_hours
          _RealTimeClock_set_minutes
          _RealTimeClock_set_seconds
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_set_seconds                            2     0      2    5616
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_set_minutes                            2     0      2    5616
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_set_hours                              2     0      2    5616
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (2) _SetDate                                             33    31      2   52047
                                              7 BANK0     33    31      2
                           _CheckDay
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SendString
                         _Main_Delay
     _RealTimeClock_get_day_of_month
            _RealTimeClock_get_month
             _RealTimeClock_get_year
     _RealTimeClock_set_day_of_month
      _RealTimeClock_set_day_of_week
            _RealTimeClock_set_month
             _RealTimeClock_set_year
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_set_year                               2     0      2    5616
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_set_month                              2     0      2    5616
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_set_day_of_week                        2     0      2    5616
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_set_day_of_month                       2     0      2    5616
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (3) _CheckDay                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MainScreen                                           3     3      0   40297
                                              8 BANK0      3     3      0
                        _DisplayTemp
                        _DisplayTime
                     _LCD_SecondLine
                     _LCD_SendString
 ---------------------------------------------------------------------------------
 (4) _DisplayTime                                          1     1      0   24751
                                             12 COMMON     1     1      0
                     _LCD_SendString
            _RealTimeClock_get_hours
          _RealTimeClock_get_minutes
          _RealTimeClock_get_seconds
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_get_seconds                            4     2      2    5025
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (4) _DisplayTemp                                          1     1      0   13086
                                              7 BANK0      1     1      0
                           _Get_Temp
                           _LCD_Busy
                       _LCD_SendData
                     _LCD_SendString
 ---------------------------------------------------------------------------------
 (5) _Get_Temp                                             7     7      0   10595
                                              0 BANK0      7     7      0
                              _Delay
                          _Read_Byte
                              _Reset
                         _Write_Byte
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     466
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _Write_Byte                                           5     5      0     637
                                              4 COMMON     5     5      0
                              _Delay
 ---------------------------------------------------------------------------------
 (6) _Reset                                                3     3      0     569
                                              4 COMMON     3     3      0
                              _Delay
 ---------------------------------------------------------------------------------
 (6) _Read_Byte                                            3     3      0     594
                                              4 COMMON     3     3      0
                              _Delay
 ---------------------------------------------------------------------------------
 (7) _Delay                                                4     3      1     523
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _DateDayScreen                                        5     3      2   52565
                                             21 BANK0      5     3      2
                      _ChangeTrigger
                        _DisplayDate
                         _DisplayDay
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SecondLine
                     _LCD_SendString
               _SwapToHeatingDisplay
 ---------------------------------------------------------------------------------
 (1) _SwapToHeatingDisplay                                 6     4      2    4118
                                              8 COMMON     6     4      2
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SendString
 ---------------------------------------------------------------------------------
 (4) _LCD_SecondLine                                       0     0      0      22
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (4) _DisplayDay                                           8     8      0    7578
                                             12 COMMON     1     1      0
                                              7 BANK0      7     7      0
                     _LCD_SendString
      _RealTimeClock_get_day_of_week
 ---------------------------------------------------------------------------------
 (5) _RealTimeClock_get_day_of_week                        4     2      2    5025
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (4) _DisplayDate                                          1     1      0   24751
                                             12 COMMON     1     1      0
                     _LCD_SendString
     _RealTimeClock_get_day_of_month
            _RealTimeClock_get_month
             _RealTimeClock_get_year
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_get_year                               4     2      2    5025
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_get_month                              4     2      2    5025
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_get_day_of_month                       4     2      2    5025
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (4) _ChangeTrigger                                       21    21      0   11989
                                              0 BANK0     21    21      0
                        _Keypad_Scan
                           _LCD_Busy
                        _LCD_Command
                       _LCD_SendData
                     _LCD_SendString
                         _Main_Delay
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2580
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _Main_Delay                                           7     5      2     548
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (2) _LCD_SendString                                       7     5      2    2392
                                              1 COMMON     7     5      2
                       _LCD_SendData
 ---------------------------------------------------------------------------------
 (3) _LCD_SendData                                         1     1      0      22
                                              0 COMMON     1     1      0
                           _LCD_Busy
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0      22
                                              0 COMMON     1     1      0
                           _LCD_Busy
 ---------------------------------------------------------------------------------
 (4) _LCD_Busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Keypad_Scan                                          2     0      2    1308
                                              6 COMMON     2     0      2
                          _Key_Delay
 ---------------------------------------------------------------------------------
 (3) _Key_Delay                                            6     4      2    1308
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _RealTimeClock_set_burst_time                         5     5      0    5641
                                              0 BANK0      5     5      0
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (4) ___int_to_hex                                         7     5      2    5427
                                              7 COMMON     7     5      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _RealTimeClock_init                                   0     0      0      91
           _RealTimeClock_write_byte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Keypad                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckTime                                            1     1      0   10050
                                             12 COMMON     1     1      0
            _RealTimeClock_get_hours
          _RealTimeClock_get_minutes
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_get_minutes                            4     2      2    5025
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_get_hours                              4     2      2    5025
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (4) ___hex_to_int                                         8     6      2    4819
                                              7 COMMON     3     1      2
                                              0 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    4704
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) _RealTimeClock_write_byte                             5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (4) _RealTimeClock_read_byte                              5     5      0      92
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Init
   _ChangeTrigger
     _Keypad_Scan
       _Key_Delay
     _LCD_Busy
     _LCD_Command
       _LCD_Busy
     _LCD_SendData
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _Main_Delay
     ___awdiv
     ___awmod
   _CheckDay
   _CheckTime
     _RealTimeClock_get_hours
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_get_minutes
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
   _DateDayScreen
     _ChangeTrigger
       _Keypad_Scan
         _Key_Delay
       _LCD_Busy
       _LCD_Command
         _LCD_Busy
       _LCD_SendData
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _Main_Delay
       ___awdiv
       ___awmod
     _DisplayDate
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _RealTimeClock_get_day_of_month
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_month
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_year
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       ___awdiv
       ___awmod
     _DisplayDay
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _RealTimeClock_get_day_of_week
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SecondLine
       _LCD_Command
         _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _SwapToHeatingDisplay
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
   _HeatingControlOff
     _ChangeTrigger
       _Keypad_Scan
         _Key_Delay
       _LCD_Busy
       _LCD_Command
         _LCD_Busy
       _LCD_SendData
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _Main_Delay
       ___awdiv
       ___awmod
     _DateDayScreen
       _ChangeTrigger
         _Keypad_Scan
           _Key_Delay
         _LCD_Busy
         _LCD_Command
           _LCD_Busy
         _LCD_SendData
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _Main_Delay
         ___awdiv
         ___awmod
       _DisplayDate
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _RealTimeClock_get_day_of_month
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_get_month
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_get_year
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         ___awdiv
         ___awmod
       _DisplayDay
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _RealTimeClock_get_day_of_week
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SecondLine
         _LCD_Command
           _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _SwapToHeatingDisplay
         _Keypad_Scan
           _Key_Delay
         _LCD_Command
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
     _Get_Temp
       _Delay
       _Read_Byte
         _Delay
       _Reset
         _Delay
       _Write_Byte
         _Delay
       ___awdiv
       ___awmod
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _MainScreen
       _DisplayTemp
         _Get_Temp
           _Delay
           _Read_Byte
             _Delay
           _Reset
             _Delay
           _Write_Byte
             _Delay
           ___awdiv
           ___awmod
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _LCD_Busy
         _LCD_SendData
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
       _DisplayTime
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _RealTimeClock_get_hours
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_get_minutes
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_get_seconds
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         ___awdiv
         ___awmod
       _LCD_SecondLine
         _LCD_Command
           _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
     _Main_Delay
     _SetDate
       _CheckDay
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _Main_Delay
       _RealTimeClock_get_day_of_month
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_month
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_year
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_set_day_of_month
         _RealTimeClock_write_byte
         ___int_to_hex
           ___awmod
       _RealTimeClock_set_day_of_week
         _RealTimeClock_write_byte
         ___int_to_hex
           ___awmod
       _RealTimeClock_set_month
         _RealTimeClock_write_byte
         ___int_to_hex
           ___awmod
       _RealTimeClock_set_year
         _RealTimeClock_write_byte
         ___int_to_hex
           ___awmod
       ___awdiv
       ___awmod
     _SetTime
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _Main_Delay
       _RealTimeClock_get_hours
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_minutes
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_seconds
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_set_hours
         _RealTimeClock_write_byte
         ___int_to_hex
           ___awmod
       _RealTimeClock_set_minutes
         _RealTimeClock_write_byte
         ___int_to_hex
           ___awmod
       _RealTimeClock_set_seconds
         _RealTimeClock_write_byte
         ___int_to_hex
           ___awmod
       ___awdiv
       ___awmod
     _SoundOff
     _SwapToHeatingDisplay
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
     _Switch24Hour
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
     ___wmul
   _Init_Keypad
   _Keypad_Scan
     _Key_Delay
   _LCD_Command
     _LCD_Busy
   _LCD_Init
   _MainScreen
     _DisplayTemp
       _Get_Temp
         _Delay
         _Read_Byte
           _Delay
         _Reset
           _Delay
         _Write_Byte
           _Delay
         ___awdiv
         ___awmod
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _LCD_Busy
       _LCD_SendData
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
     _DisplayTime
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _RealTimeClock_get_hours
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_minutes
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_seconds
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       ___awdiv
       ___awmod
     _LCD_SecondLine
       _LCD_Command
         _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
   _Main_Delay
   _RealTimeClock_get_day_of_week
     _RealTimeClock_read_byte
     _RealTimeClock_write_byte
     ___hex_to_int
       ___awmod
   _RealTimeClock_init
     _RealTimeClock_write_byte
   _RealTimeClock_set_burst_time
     _RealTimeClock_write_byte
     ___int_to_hex
       ___awmod
   _SetDate
     _CheckDay
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _Main_Delay
     _RealTimeClock_get_day_of_month
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_get_month
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_get_year
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_set_day_of_month
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
     _RealTimeClock_set_day_of_week
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
     _RealTimeClock_set_month
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
     _RealTimeClock_set_year
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
     ___awdiv
     ___awmod
   _SetTime
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _Main_Delay
     _RealTimeClock_get_hours
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_get_minutes
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_get_seconds
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_set_hours
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
     _RealTimeClock_set_minutes
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
     _RealTimeClock_set_seconds
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
     ___awdiv
     ___awmod
   _SoundAlarm
     _ChangeTrigger
       _Keypad_Scan
         _Key_Delay
       _LCD_Busy
       _LCD_Command
         _LCD_Busy
       _LCD_SendData
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _Main_Delay
       ___awdiv
       ___awmod
     _DateDayScreen
       _ChangeTrigger
         _Keypad_Scan
           _Key_Delay
         _LCD_Busy
         _LCD_Command
           _LCD_Busy
         _LCD_SendData
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _Main_Delay
         ___awdiv
         ___awmod
       _DisplayDate
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _RealTimeClock_get_day_of_month
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_get_month
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_get_year
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         ___awdiv
         ___awmod
       _DisplayDay
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _RealTimeClock_get_day_of_week
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SecondLine
         _LCD_Command
           _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _SwapToHeatingDisplay
         _Keypad_Scan
           _Key_Delay
         _LCD_Command
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
     _Get_Temp
       _Delay
       _Read_Byte
         _Delay
       _Reset
         _Delay
       _Write_Byte
         _Delay
       ___awdiv
       ___awmod
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _HeatingControlOff
       _ChangeTrigger
         _Keypad_Scan
           _Key_Delay
         _LCD_Busy
         _LCD_Command
           _LCD_Busy
         _LCD_SendData
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _Main_Delay
         ___awdiv
         ___awmod
       _DateDayScreen
         _ChangeTrigger
           _Keypad_Scan
             _Key_Delay
           _LCD_Busy
           _LCD_Command
             _LCD_Busy
           _LCD_SendData
             _LCD_Busy
           _LCD_SendString
             _LCD_SendData
               _LCD_Busy
           _Main_Delay
           ___awdiv
           ___awmod
         _DisplayDate
           _LCD_SendString
             _LCD_SendData
               _LCD_Busy
           _RealTimeClock_get_day_of_month
             _RealTimeClock_read_byte
             _RealTimeClock_write_byte
             ___hex_to_int
               ___awmod
           _RealTimeClock_get_month
             _RealTimeClock_read_byte
             _RealTimeClock_write_byte
             ___hex_to_int
               ___awmod
           _RealTimeClock_get_year
             _RealTimeClock_read_byte
             _RealTimeClock_write_byte
             ___hex_to_int
               ___awmod
           ___awdiv
           ___awmod
         _DisplayDay
           _LCD_SendString
             _LCD_SendData
               _LCD_Busy
           _RealTimeClock_get_day_of_week
             _RealTimeClock_read_byte
             _RealTimeClock_write_byte
             ___hex_to_int
               ___awmod
         _Keypad_Scan
           _Key_Delay
         _LCD_Command
           _LCD_Busy
         _LCD_SecondLine
           _LCD_Command
             _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _SwapToHeatingDisplay
           _Keypad_Scan
             _Key_Delay
           _LCD_Command
             _LCD_Busy
           _LCD_SendString
             _LCD_SendData
               _LCD_Busy
       _Get_Temp
         _Delay
         _Read_Byte
           _Delay
         _Reset
           _Delay
         _Write_Byte
           _Delay
         ___awdiv
         ___awmod
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _MainScreen
         _DisplayTemp
           _Get_Temp
             _Delay
             _Read_Byte
               _Delay
             _Reset
               _Delay
             _Write_Byte
               _Delay
             ___awdiv
             ___awmod
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _LCD_Busy
           _LCD_SendData
             _LCD_Busy
           _LCD_SendString
             _LCD_SendData
               _LCD_Busy
         _DisplayTime
           _LCD_SendString
             _LCD_SendData
               _LCD_Busy
           _RealTimeClock_get_hours
             _RealTimeClock_read_byte
             _RealTimeClock_write_byte
             ___hex_to_int
               ___awmod
           _RealTimeClock_get_minutes
             _RealTimeClock_read_byte
             _RealTimeClock_write_byte
             ___hex_to_int
               ___awmod
           _RealTimeClock_get_seconds
             _RealTimeClock_read_byte
             _RealTimeClock_write_byte
             ___hex_to_int
               ___awmod
           ___awdiv
           ___awmod
         _LCD_SecondLine
           _LCD_Command
             _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
       _Main_Delay
       _SetDate
         _CheckDay
         _Keypad_Scan
           _Key_Delay
         _LCD_Command
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _Main_Delay
         _RealTimeClock_get_day_of_month
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_get_month
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_get_year
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_set_day_of_month
           _RealTimeClock_write_byte
           ___int_to_hex
             ___awmod
         _RealTimeClock_set_day_of_week
           _RealTimeClock_write_byte
           ___int_to_hex
             ___awmod
         _RealTimeClock_set_month
           _RealTimeClock_write_byte
           ___int_to_hex
             ___awmod
         _RealTimeClock_set_year
           _RealTimeClock_write_byte
           ___int_to_hex
             ___awmod
         ___awdiv
         ___awmod
       _SetTime
         _Keypad_Scan
           _Key_Delay
         _LCD_Command
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _Main_Delay
         _RealTimeClock_get_hours
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_get_minutes
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_get_seconds
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_set_hours
           _RealTimeClock_write_byte
           ___int_to_hex
             ___awmod
         _RealTimeClock_set_minutes
           _RealTimeClock_write_byte
           ___int_to_hex
             ___awmod
         _RealTimeClock_set_seconds
           _RealTimeClock_write_byte
           ___int_to_hex
             ___awmod
         ___awdiv
         ___awmod
       _SoundOff
       _SwapToHeatingDisplay
         _Keypad_Scan
           _Key_Delay
         _LCD_Command
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
       _Switch24Hour
         _LCD_Command
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
       ___wmul
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _SetDate
       _CheckDay
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _Main_Delay
       _RealTimeClock_get_day_of_month
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_month
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_year
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_set_day_of_month
         _RealTimeClock_write_byte
         ___int_to_hex
           ___awmod
       _RealTimeClock_set_day_of_week
         _RealTimeClock_write_byte
         ___int_to_hex
           ___awmod
       _RealTimeClock_set_month
         _RealTimeClock_write_byte
         ___int_to_hex
           ___awmod
       _RealTimeClock_set_year
         _RealTimeClock_write_byte
         ___int_to_hex
           ___awmod
       ___awdiv
       ___awmod
     _SetTime
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _Main_Delay
       _RealTimeClock_get_hours
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_minutes
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_seconds
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_set_hours
         _RealTimeClock_write_byte
         ___int_to_hex
           ___awmod
       _RealTimeClock_set_minutes
         _RealTimeClock_write_byte
         ___int_to_hex
           ___awmod
       _RealTimeClock_set_seconds
         _RealTimeClock_write_byte
         ___int_to_hex
           ___awmod
       ___awdiv
       ___awmod
     _SoundOff
     _SoundOn
     _SwapToHeatingDisplay
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
     _Switch24Hour
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
     ___wmul
   _SoundOff
   _SwapToHeatingDisplay
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
   _Switch24Hour
     _LCD_Command
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
   _Thermometer_Init
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      54       9       87.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1C      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     41      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     102      12        0.0%
ABS                  0      0     102       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Jan 08 19:58:32 2019

        ??_RealTimeClock_get_day_of_week 007A          ?_RealTimeClock_get_day_of_month 0025  
       ??_RealTimeClock_get_day_of_month 007A                                        pc 0002  
                           ?_LCD_Command 0070                  ?_RealTimeClock_get_year 0025  
                           ___awdiv@sign 0076                                       fsr 0004  
                    ___wmul@multiplicand 0072                               Key_Delay@i 0072  
                             Key_Delay@j 0074                               Key_Delay@k 0070  
                           _Switch24Hour 1AF2                                      l110 1BA0  
                                    l120 10D8                                      l200 0E3F  
                                    l105 1B91                                      l121 1157  
                                    l113 1409                                      l201 0E5F  
                                    l106 1B66                                      l122 10E4  
                                    l210 0EE8                                      l202 0E9B  
                                    l107 1B77                                      l123 10F2  
                                    l131 1A8C                                      l211 0EE7  
                                    l203 0E7D                                      l108 1B8B  
                                    l140 16E3                                      l116 1323  
                                    l124 1100                                      l220 0005  
                                    l300 0679                                      l212 0F22  
                                    l204 0E9A                                      l109 1BA0  
                                    l141 17FF                                      l125 110E  
                                    l221 0050                                      l301 066F  
                                    l213 0F04                                      l205 0E9C  
                                    l142 176B                                      l150 1730  
                                    l126 111C                                      l134 1AF1  
                                    l222 000C                                      l302 0678  
                                    l310 07C5                                      l214 0F21  
                                    l206 0EE9                                      l151 174A  
                                    l143 16E4                                      l119 1139  
                                    l127 112A                                      l223 0013  
                                    l303 06BC                                      l215 0FFE  
                                    l207 0EE5                                      l320 11DD  
                                    l400 1BE7                                      l152 1769  
                                    l144 16F1                                      l128 1157  
                                    l160 1FE2                                      l224 001A  
                                    l304 069E                                      l208 0EC7  
                                    l216 0FFF                                      l313 11E7  
                                    l321 11E5                                      l401 1C0C  
                                    l153 17FE                                      l145 16F4  
                                    l161 1FFD                                      l225 0021  
                                    l305 06BB                                      l241 02CA  
                                    l233 0274                                      l209 0EE4  
                                    l322 123D                                      l314 11A9  
                                    l402 1C21                                      l146 1780  
                                    l154 17FF                                      l162 1FFC  
                                    l226 0028                                      l306 06FC  
                                    l250 04B0                                      l242 02DE  
                                    l234 02AD                                      l170 1B27  
                                    l323 123C                                      l315 11A1  
                                    l403 1C23                                      l147 16F5  
                                    l139 1697                                      l163 1FFE  
                                    l219 0032                                      l227 002D  
                                    l307 06DE                                      l251 03E5  
                                    l243 02E8                                      l235 02AC  
                                    l171 1B26                                      l331 156B  
                                    l412 1D49                                      l324 121A  
                                    l316 11A8                                      l420 1E63  
                                    l148 1710                                      l164 1FFF  
                                    l180 10AE                                      l228 0050  
                                    l308 06FB                                      l260 041B  
                                    l252 03B3                                      l244 0355  
                                    l172 1B27                                      l340 1667  
                                    l332 158E                                      l413 1D72  
                                    l325 123B                                      l317 11E6  
                                    l149 172F                                      l157 1FA0  
                                    l181 10AF                                      l245 07C5  
                                    l309 07C4                                      l261 0411  
                                    l253 03A9                                      l237 02A7  
                                    l341 1668                                      l333 15A1  
                                    l414 1D5E                                      l406 1B3A  
                                    l326 1233                                      l318 11DE  
                                    l158 1FB7                                      l270 04AE  
                                    l262 041A                                      l254 03B2  
                                    l246 0370                                      l238 02E9  
                                    l190 0DD7                                      l334 15B4  
                                    l350 14DD                                      l415 1D7A  
                                    l407 1B5F                                      l327 123A  
                                    l319 11D6                                      l159 1FFF  
                                    l175 1041                                      l431 1A66  
                                    l271 04A4                                      l263 044C  
                                    l255 03E4                                      l247 0368  
                                    l239 02DF                                      l191 0DE3  
                                    l167 1B05                                      l335 15C7  
                                    l351 14F8                                      l408 1B44  
                                    l328 123D                                      l440 19DE  
                                    l176 108A                                      l280 067B  
                                    l272 04AD                                      l264 0442  
                                    l256 03DA                                      l248 036F  
                                    l192 0DEA                                      l184 0D51  
                                    l168 1B06                                      l336 15DA  
                                    l352 152C                                      l344 141B  
                                    l409 1B62                                      l521 182D  
                                    l513 1AB3                                      l177 109A  
                                    l281 05AA                                      l249 0532  
                                    l273 04F0                                      l265 044B  
                                    l257 03E3                                      l193 0F36  
                                    l169 1B25                                      l337 15EC  
                                    l353 152A                                      l345 147E  
                                    l434 19BC                                      l418 1E32  
                                    l514 1A90                                      l530 0086  
                                    l610 1864                                      l178 10AF  
                                    l290 05E2                                      l282 0577  
                                    l274 04D2                                      l258 04B0  
                                    l266 04AF                                      l194 0DEB  
                                    l338 1666                                      l354 152B  
                                    l346 1491                                      l370 0D07  
                                    l362 0B10                                      l419 1E60  
                                    l515 1A9D                                      l531 0080  
                                    l443 1A00                                      l179 10AD  
                                    l291 05D8                                      l283 056D  
                                    l275 04EF                                      l267 047D  
                                    l259 044D                                      l195 0E61  
                                    l187 0DD6                                      l339 1668  
                                    l355 152C                                      l347 14A4  
                                    l371 0D0D                                      l363 0BD4  
                                    l428 1978                                      l516 1AAD  
                                    l540 00C3                                      l532 008D  
                                    l524 0072                                      l292 05E1  
                                    l284 0576                                      l276 0531  
                                    l268 0473                                      l452 195A  
                                    l188 0FFF                                      l196 0E35  
                                    l348 14B7                                      l372 0D0E  
                                    l364 0BED                                      l437 199A  
                                    l613 1817                                      l517 1ABE  
                                    l541 00E2                                      l533 00A8  
                                    l525 006B                                      l461 18AC  
                                    l293 0614                                      l285 05A9  
                                    l277 0513                                      l269 047C  
                                    l189 0F24                                      l197 0E17  
                                    l349 14CA                                      l373 0D0E  
                                    l365 0C00                                      l518 1ABE  
                                    l550 0111                                      l542 00DB  
                                    l534 00A1                                      l526 0065  
                                    l622 08E0                                      l446 1A44  
                                    l702 1CFA                                      l710 09EA  
                                    l470 1903                                      l294 060A  
                                    l286 059F                                      l278 0530  
                                    l198 0E34                                      l366 0C19  
                                    l551 010B                                      l543 00D5  
                                    l535 009B                                      l527 0217  
                                    l607 185C                                      l703 1D31  
                                    l711 0A2B                                      l279 06FD  
                                    l295 0613                                      l287 05A8  
                                    l455 193D                                      l199 0E60  
                                    l367 0C2C                                      l392 1DFF  
                                    l560 0152                                      l552 0118  
                                    l544 00E2                                      l536 00A8  
                                    l528 0072                                      l608 185A  
                                    l616 183C                                      l704 1D1F  
                                    l712 0A38                                      l464 18E6  
                                    l288 067B                                      l296 067A  
                                    l800 100C                                      l368 0C45  
                                    l393 1DCE                                      l561 016D  
                                    l553 0133                                      l545 00FD  
                                    l537 00C3                                      l529 008D  
                                    l609 1861                                      l625 1C8C  
                                    l449 1A22                                      l705 1D33  
                                    l713 0A45                                      l297 0647  
                                    l289 0615                                      l641 180C  
                                    l801 1016                                      l369 0C95  
                                    l394 1DF7                                      l570 019C  
                                    l562 0166                                      l554 012C  
                                    l546 00F6                                      l538 00BC  
                                    l626 1C69                                      l714 0A52  
                                    l298 063D                                      l458 1920  
                                    l802 102B                                      l635 1808  
                                    l395 1E0D                                      l571 0196  
                                    l563 0160                                      l555 0126  
                                    l547 00F0                                      l539 00B6  
                                    l627 1CA9                                      l619 181E  
                                    l715 0A8A                                      l467 18C9  
                                    l299 0646                                      l803 1030  
                                    l396 1E14                                      l580 01DD  
                                    l572 01A3                                      l564 016D  
                                    l556 0133                                      l548 00FD  
                                    l628 1CA9                                      l708 0942  
                                    l581 01F8                                      l573 01C2  
                                    l565 0188                                      l557 0152  
                                    l549 0118                                      l709 0965  
                                    l582 01F1                                      l574 01BB  
                                    l566 0181                                      l558 014B  
                                    l638 1810                                      l399 1C12  
                                    l583 01EB                                      l575 01B5  
                                    l567 017B                                      l559 0145  
                                    l584 01F8                                      l576 01C2  
                                    l568 0188                                      l680 1872  
                                    l585 0214                                      l577 01DD  
                                    l569 01A3                                      l681 1879  
                                    l586 020C                                      l578 01D6  
                                    l682 1879                                      l690 1E9A  
                                    l587 0206                                      l579 01D0  
                                    l691 1EB8                                      l588 0213  
                                    l685 1825                                      l950 1F54  
                                    l678 1866                                      l694 1CB6  
                                    l951 1F6D                                      l679 186B  
                                    l695 1CED                                      l960 1EE5  
                                    l952 1F7B                                      l944 1F29  
                                    l688 1E75                                      l696 1CCF  
                                    l961 1ED9                                      l953 1F87  
                                    l945 1F37                                      l689 1EB8  
                                    l697 1CED                                      l962 1EEA  
                                    l954 1F8C                                      l946 1F7C  
                                    l963 1EEB                                      l947 1F4E  
                                    l964 1EFC                                      l948 1F42  
                                    l965 1F0A                                      l957 1EC6  
                                    l949 1F53                                      l966 1F16  
                                    l958 1ED0                                      l967 1F1B  
                                    l959 1F0B                                      _RA0 0028  
                                    _RA1 0029                                      _RB0 0030  
                                    _RA2 002A                                      _RA3 002B  
                                    _RB1 0031                                      _RC0 0038  
                                    _RC1 0039                                      _RB4 0034  
                                    _RC2 003A                                      _RB5 0035  
                                    _RC3 003B                                      _RC4 003C  
                                    _RC5 003D                                      _RC6 003E  
                                    _RC7 003F                                      _RD7 0047  
                                    _THB 00BB                 ?_RealTimeClock_get_hours 0025  
                                    _TLB 00BC                 ?_RealTimeClock_get_month 0025  
                            _triggerTemp 00DA                    __size_of___int_to_hex 0042  
                                    _day 0063                                      fsr0 0004  
                                    indf 0000                             ___awmod@sign 0076  
                           __CFG_FOSC$HS 0000                           _LCD_SecondLine 1818  
                           ___hex_to_int 1DC6                  ?_RealTimeClock_set_year 0020  
                          ?_LCD_SendData 0070                             __CFG_LVP$OFF 0000  
                         _LCD_SendString 1C66                                     l1070 1D98  
                                   l1071 1DB1                                     l1072 1DBF  
                                   l1080 1BBC                                     l1073 1DC5  
                                   l1081 1BCD                                     l1066 1DC0  
                                   l1082 1BDB                                     l1067 1D92  
                                   l1083 1BE1                                     l1068 1D86  
                                   l1076 1BDC                                     l1069 1D97  
                                   l1077 1BB6                                     l3110 1858  
                                   l1078 1BAA                                     l1079 1BBB  
                                   l3200 1D3A                                     l3120 1EB9  
                                   l3112 1861                                     l3104 1850  
                                   l4000 1AC9                                     l3210 1D65  
                                   l3202 1D48                                     l3130 1ECA  
                                   l3122 1EBA                                     l3106 1854  
                                   l3114 1866                                     l4002 1AD4  
                                   l4010 1AF2                                     l3212 1D78  
                                   l3204 1D50                                     l3140 1EE5  
                                   l3132 1ED0                                     l3124 1EBE  
                                   l3220 1A92                                     l3108 1857  
                                   l3116 186B                                     l3300 1CFF  
                                   l4004 1AD9                                     l4100 0DF1  
                                   l4020 1B17                                     l4012 1AF8  
                                   l3214 1D7A                                     l3206 1D5E  
                                   l3142 1EEB                                     l3134 1ED6  
                                   l3150 1F0B                                     l3126 1EC3  
                                   l3222 1A9C                                     l4030 1052  
                                   l3118 1872                                     l3310 1D06  
                                   l3302 1D02                                     l3230 1E66  
                                   l4006 1ADE                                     l4110 0E3E  
                                   l4102 0DF9                                     l4022 1B1E  
                                   l4014 1B00                                     l3208 1D5F  
                                   l3152 1F10                                     l3144 1EF5  
                                   l3136 1ED9                                     l3128 1EC6  
                                   l3224 1A9D                                     l3216 1A8D  
                                   l3160 08D8                                     l4040 1083  
                                   l4032 105F                                     l4024 1031  
                                   l3320 1D0D                                     l3312 1D07  
                                   l3304 1D03                                     l3240 1E99  
                                   l3232 1E74                                     l3400 1DA9  
                                   l4008 1AEB                                     l4200 0290  
                                   l4120 0E9C                                     l4112 0E3F  
                                   l4104 0E0C                                     l4016 1B06  
                                   l3154 1F16                                     l3146 1EFC  
                                   l3138 1EE0                                     l3170 1DD6  
                                   l3226 1AAD                                     l3218 1A90  
                                   l3162 08DA                                     l4042 108A  
                                   l4034 1069                                     l4026 1037  
                                   l3330 1D1D                                     l3322 1D0E  
                                   l3314 1D08                                     l3306 1D04  
                                   l3242 1E9A                                     l3234 1E7B  
                                   l3250 1CAF                                     l3410 1DC5  
                                   l3402 1DAF                                     l4210 02A7  
                                   l4202 0294                                     l4130 0EE6  
                                   l4122 0EA2                                     l4106 0E17  
                                   l4114 0E61                                     l4050 0D11  
                                   l4018 1B0C                                     l3180 1B29  
                                   l3156 1F1B                                     l3148 1F03  
                                   l3172 1DDC                                     l3164 08DB  
                                   l3500 19CE                                     l4044 1093  
                                   l4036 1076                                     l4028 103D  
                                   l3340 1D33                                     l3332 1D1F  
                                   l3324 1D0F                                     l3316 1D0B  
                                   l3308 1D05                                     l3244 1EA4  
                                   l3236 1E85                                     l3228 1E64  
                                   l3260 1CC1                                     l3252 1CB5  
                                   l3404 1DB1                                     l3420 1BB6  
                                   l3412 1BA1                                     l4300 0437  
                                   l4220 02CA                                     l4204 0296  
                                   l4212 02AD                                     l4124 0EAA  
                                   l4132 0EE9                                     l4116 0E72  
                                   l4108 0E35                                     l4140 0F24  
                                   l4060 0D2E                                     l4052 0D17  
                                   l3190 1B4B                                     l3182 1B2B  
                                   l3174 1DEF                                     l3166 1DC9  
                                   l3158 08D3                                     l3350 1F29  
                                   l3342 1F1C                                     l3502 19D1  
                                   l3510 1A12                                     l4046 109A  
                                   l4038 107B                                     l3334 1D29  
                                   l3326 1D10                                     l3318 1D0C  
                                   l3246 1EAA                                     l3238 1E92  
                                   l3270 1CC6                                     l3262 1CC2  
                                   l3254 1CB6                                     l3406 1DB8  
                                   l3422 1BBC                                     l3414 1BA7  
                                   l3430 1BDC                                     l4310 0468  
                                   l4302 043D                                     l4222 02CC  
                                   l4230 02DF                                     l4214 02B4  
                                   l4206 0298                                     l4150 0F7E  
                                   l4134 0EFB                                     l4126 0EBE  
                                   l4118 0E7D                                     l4142 0F36  
                                   l4070 0D51                                     l4062 0D39  
                                   l4054 0D1B                                     l3192 1B4C  
                                   l3184 1B39                                     l3176 1E0D  
                                   l3168 1DCE                                     l3440 1B76  
                                   l3360 1F3F                                     l3352 1F2D  
                                   l3344 1F1D                                     l3504 19DE  
                                   l3512 1A15                                     l3520 1A34  
                                   l4048 10A3                                     l3336 1D2B  
                                   l3328 1D18                                     l3280 1CDD  
                                   l3272 1CCB                                     l3264 1CC3  
                                   l3256 1CBB                                     l3248 1CAB  
                                   l3408 1DC0                                     l3432 1BE1  
                                   l3424 1BC6                                     l3416 1BAA  
                                   l3600 0A89                                     l4400 0681  
                                   l4320 049F                                     l4312 046E  
                                   l4304 0442                                     l4240 0307  
                                   l4232 02E3                                     l4224 02D0  
                                   l4216 02BB                                     l4208 029F  
                                   l4160 0FE0                                     l4152 0F92  
                                   l4144 0F43                                     l4136 0F04  
                                   l4128 0EC7                                     l4080 0D8E  
                                   l4072 0D69                                     l4064 0D44  
                                   l4056 0D1F                                     l3194 1B52  
                                   l3186 1B42                                     l3178 1E14  
                                   l3610 0051                                     l3602 182F  
                                   l3442 1B77                                     l3434 1B63  
                                   l3370 1F65                                     l3362 1F42  
                                   l3354 1F32                                     l3346 1F21  
                                   l3514 1A22                                     l3506 1A01  
                                   l3522 1A37                                     l3338 1D31  
                                   l3290 1CEF                                     l3282 1CDE  
                                   l3274 1CCF                                     l3266 1CC4  
                                   l3258 1CBE                                     l3426 1BCD  
                                   l3418 1BB1                                     l3530 08EC  
                                   l3450 1A48                                     l4410 06D5  
                                   l4402 0693                                     l4330 04F0  
                                   l4322 04A4                                     l4314 0473  
                                   l4306 044D                                     l4250 0338  
                                   l4242 0312                                     l4226 02D2  
                                   l4218 02C2                                     l4234 02E9  
                                   l4170 021E                                     l4162 0FF4  
                                   l4154 0FA5                                     l4146 0F57  
                                   l4138 0F23                                     l4090 0DCF  
                                   l4082 0DAD                                     l4074 0D6F  
                                   l4066 0D48                                     l4058 0D23  
                                   l3196 1D34                                     l3188 1B44  
                                   l3460 199E                                     l3700 01F0  
                                   l3620 0080                                     l3612 005B  
                                   l3604 1834                                     l3444 1B7D  
                                   l3436 1B66                                     l3380 1F81  
                                   l3372 1F6B                                     l3364 1F49  
                                   l3356 1F37                                     l3348 1F26  
                                   l3508 1A04                                     l3524 1A44  
                                   l3516 1A23                                     l3292 1CF3  
                                   l3284 1CE5                                     l3276 1CD9  
                                   l3268 1CC5                                     l3428 1BD4  
                                   l3540 0919                                     l3532 08F2  
                                   l3452 1A56                                     l4420 0709  
                                   l4412 06DE                                     l4404 069E  
                                   l4340 0539                                     l4332 04F7  
                                   l4324 04B6                                     l4308 045E  
                                   l4316 047D                                     l4260 0368  
                                   l4252 034E                                     l4244 031D  
                                   l4236 02F4                                     l4228 02D9  
                                   l4180 022C                                     l4172 0222  
                                   l4156 0FB9                                     l4148 0F6A  
                                   l4092 0DD7                                     l4084 0DB3  
                                   l4076 0D7C                                     l4068 0D4C  
                                   l4500 15F2                                     l3198 1D35  
                                   l3470 197C                                     l3462 19AC  
                                   l3710 0217                                     l3702 01FC  
                                   l3630 00AC                                     l3622 0085  
                                   l3614 0065                                     l3606 1836  
                                   l3446 1B8B                                     l3438 1B68  
                                   l3382 1F87                                     l3374 1F6D  
                                   l3366 1F4E                                     l3358 1F39  
                                   l3518 1A26                                     l3294 1CF9  
                                   l3286 1CE7                                     l3278 1CDC  
                                   l3390 1D83                                     l3550 0942  
                                   l3542 0924                                     l3534 08F8  
                                   l3526 08E4                                     l3454 1A59  
                                   l4430 076B                                     l4422 071D  
                                   l4406 06BC                                     l4350 0568  
                                   l4342 053F                                     l4414 06FD  
                                   l4334 0508                                     l4326 04C7  
                                   l4318 0499                                     l4270 0394  
                                   l4262 0370                                     l4246 0328  
                                   l4238 02FB                                     l4254 0355  
                                   l4190 0267                                     l4182 0230  
                                   l4174 0224                                     l4158 0FCD  
                                   l4094 0DE0                                     l4086 0DB9  
                                   l4078 0D87                                     l4510 1641  
                                   l4502 15FD                                     l3472 198A  
                                   l3464 19AF                                     l3720 1C06  
                                   l3712 1BE2                                     l3704 0206  
                                   l3640 00DA                                     l3632 00B6  
                                   l3624 0091                                     l3616 006A  
                                   l3608 1837                                     l3480 1C69  
                                   l3384 1F8C                                     l3376 1F74  
                                   l3368 1F54                                     l3800 1138  
                                   l3296 1CFA                                     l3288 1CEE  
                                   l3392 1D86                                     l3560 0976  
                                   l3552 0951                                     l3544 092F  
                                   l3536 0906                                     l3528 08E7  
                                   l3456 1A66                                     l3448 1A45  
                                   l4432 077F                                     l4424 0730  
                                   l4416 0701                                     l4408 06C3  
                                   l4360 059F                                     l4352 056D  
                                   l4344 0545                                     l4336 0513  
                                   l4328 04D2                                     l4280 03CF  
                                   l4272 039E                                     l4264 0377  
                                   l4256 035E                                     l4248 0333  
                                   l4192 026B                                     l4184 0246  
                                   l4176 0226                                     l4168 0218  
                                   l4096 0DE3                                     l4088 0DC6  
                                   l4440 1809                                     l4512 164E  
                                   l4504 1608                                     l4520 180D  
                                   l4600 14CA                                     l3474 198D  
                                   l3466 19BC                                     l3458 199B  
                                   l4530 119C                                     l4522 1158  
                                   l3722 1C21                                     l3714 1BE7  
                                   l3706 020B                                     l3650 010B  
                                   l3642 00E6                                     l3634 00BB  
                                   l3626 009B                                     l3618 0076  
                                   l3482 1C85                                     l3378 1F7C  
                                   l3490 19F0                                     l3802 1139  
                                   l3298 1CFC                                     l3394 1D8D  
                                   l3386 1D7B                                     l3570 099B  
                                   l3562 097C                                     l3554 0957  
                                   l3546 0933                                     l3538 0911  
                                   l3810 1A7B                                     l3730 1359  
                                   l4434 0793                                     l4426 0744  
                                   l4418 0705                                     l4370 05D3  
                                   l4346 0557                                     l4354 0577  
                                   l4362 05AA                                     l4290 03FC  
                                   l4282 03D5                                     l4274 03A4  
                                   l4266 037D                                     l4338 0532  
                                   l4258 0365                                     l4194 026F  
                                   l4186 0251                                     l4178 0228  
                                   l4098 0DEB                                     l4450 1024  
                                   l4442 1009                                     l4514 1657  
                                   l4506 161F                                     l4610 14F8  
                                   l4602 14D3                                     l3476 199A  
                                   l3468 1979                                     l4540 11D6  
                                   l4532 11A1                                     l4524 1160  
                                   l4620 1826                                     l3724 1C23  
                                   l3716 1BED                                     l3708 0214  
                                   l3660 013B                                     l3652 0110  
                                   l3644 00F0                                     l3636 00CB  
                                   l3628 00A0                                     l3484 1C8C  
                                   l3820 1672                                     l3492 19F3  
                                   l3396 1D92                                     l3388 1D7D  
                                   l3580 0A1E                                     l3572 09B9  
                                   l3564 0982                                     l3548 0941  
                                   l3556 0965                                     l3812 1A81  
                                   l3740 13C1                                     l3732 136E  
                                   l4436 07A6                                     l4428 0758  
                                   l4380 060A                                     l4372 05D8  
                                   l4364 05B0                                     l4356 0593  
                                   l4348 0561                                     l4292 0406  
                                   l4284 03DA                                     l4276 03A9  
                                   l4268 0383                                     l4196 0274  
                                   l4188 025C                                     l4452 102B  
                                   l4444 100C                                     l4516 165D  
                                   l4508 1635                                     l4460 1538  
                                   l4612 150C                                     l4604 14DD  
                                   l4700 0B21                                     l4550 1215  
                                   l4542 11DE                                     l4534 11A9  
                                   l4526 1176                                     l4622 1829  
                                   l4630 195B                                     l3718 1BF3  
                                   l3670 0165                                     l3662 0145  
                                   l3654 011C                                     l3646 00F5  
                                   l3638 00D5                                     l3478 1C66  
                                   l3830 169D                                     l3822 1676  
                                   l3494 1A00                                     l3486 19DF  
                                   l3750 125F                                     l3910 1F9B  
                                   l3398 1D98                                     l3590 0A3C  
                                   l3582 0A22                                     l3574 09CC  
                                   l3566 098E                                     l3558 0971  
                                   l3814 1A86                                     l3742 13D7  
                                   l3734 1382                                     l3726 1324  
                                   l4438 07BA                                     l4390 063D  
                                   l4366 05C2                                     l4374 05E2  
                                   l4382 0615                                     l4358 059A  
                                   l4294 040C                                     l4278 03B3  
                                   l4286 03E5                                     l4198 0287  
                                   l4454 1030                                     l4446 1010  
                                   l4518 1663                                     l4470 156B  
                                   l4462 153E                                     l4614 1512  
                                   l4606 14E6                                     l4710 0B5B  
                                   l4702 0B2A                                     l4552 121A  
                                   l4536 11BD                                     l4528 1188  
                                   l4544 11E7                                     l4616 1811  
                                   l4640 1965                                     l4632 195E  
                                   l3680 0196                                     l3672 0171  
                                   l3664 014A                                     l3656 0126  
                                   l3648 0101                                     l3840 16D3  
                                   l3832 16AA                                     l3824 168E  
                                   l3496 19BD                                     l3488 19E2  
                                   l3760 12C7                                     l3752 1273  
                                   l3816 1818                                     l3920 1FBD  
                                   l3912 1FA0                                     l3904 1F8D  
                                   l3592 0A45                                     l3584 0A2B  
                                   l3576 09D4                                     l3568 099A  
                                   l3808 1A6A                                     l3744 13EC  
                                   l3736 1398                                     l3728 1345  
                                   l4384 0627                                     l4392 0647  
                                   l4376 05FE                                     l4368 05CC  
                                   l4296 0411                                     l4288 03EB  
                                   l4448 101D                                     l4480 158E  
                                   l4472 1571                                     l4464 154E  
                                   l4456 152D                                     l4608 14EC  
                                   l4560 1410                                     l4624 181F  
                                   l4720 0B82                                     l4712 0B6A  
                                   l4704 0B31                                     l4554 122E  
                                   l4546 11ED                                     l4538 11D1  
                                   l4618 1815                                     l4642 1968  
                                   l4634 1962                                     l4650 1E18  
                                   l3690 01C6                                     l3682 019B  
                                   l3674 017B                                     l3666 0156  
                                   l3658 012B                                     l3850 16F5  
                                   l3842 16DC                                     l3834 16B5  
                                   l3826 1692                                     l3818 166C  
                                   l3498 19C0                                     l3762 12DB  
                                   l3754 1288                                     l3770 10B0  
                                   l3930 1FEA                                     l3922 1FC8  
                                   l3914 1FA9                                     l3906 1F91  
                                   l3594 0A49                                     l3586 0A2F  
                                   l3578 0A1C                                     l3746 1400  
                                   l3738 13AD                                     l4394 0663  
                                   l4386 0631                                     l4378 0605  
                                   l4298 041B                                     l4490 15BD  
                                   l4482 1597                                     l4474 1576  
                                   l4466 155B                                     l4458 1533  
                                   l4570 1433                                     l4562 1414  
                                   l4626 1823                                     l4730 0BC7  
                                   l4722 0B8B                                     l4714 0B6E  
                                   l4706 0B48                                     l4556 1233  
                                   l4548 1203                                     l4644 1969  
                                   l4636 1963                                     l4660 1E32  
                                   l4652 1E19                                     l3692 01D0  
                                   l3684 01AB                                     l3676 0180  
                                   l3668 0160                                     l3860 1730  
                                   l3852 16FB                                     l3844 16E4  
                                   l3836 16BA                                     l3828 1697  
                                   l3764 12F1                                     l3756 129C  
                                   l3748 123E                                     l3780 10CB  
                                   l3772 10BB                                     l3932 1FF0  
                                   l3924 1FD0                                     l3916 1FB0  
                                   l3908 1F97                                     l3596 0A52  
                                   l3588 0A38                                     l4396 066A  
                                   l4388 0638                                     l3940 1921  
                                   l4492 15C7                                     l4484 15A1  
                                   l4476 1581                                     l4468 1564  
                                   l4580 1471                                     l4572 1439  
                                   l4564 141B                                     l4628 1824  
                                   l4740 0BF6                                     l4732 0BCD  
                                   l4724 0B92                                     l4716 0B72  
                                   l4708 0B4C                                     l4646 196F  
                                   l4638 1964                                     l4662 1E4B  
                                   l4654 1E1F                                     l3694 01D5  
                                   l3686 01B5                                     l3678 018C  
                                   l3870 176A                                     l3862 1736  
                                   l3854 1703                                     l3846 16EC  
                                   l3838 16C6                                     l3766 1306  
                                   l3758 12B2                                     l3790 10F2  
                                   l3782 10CF                                     l3774 10BF  
                                   l3926 1FD6                                     l3918 1FB7  
                                   l3598 0A67                                     l4398 066F  
                                   l3934 1904                                     l3942 1924  
                                   l3950 1957                                     l4494 15D0  
                                   l4486 15AA                                     l4478 1587  
                                   l4590 149A                                     l4582 1477  
                                   l4574 1444                                     l4566 1421  
                                   l4558 140A                                     l4750 0C2C  
                                   l4742 0C00                                     l4734 0BD4  
                                   l4726 0BA9                                     l4718 0B7D  
                                   l4670 0A9A                                     l4648 1975  
                                   l4664 1E53                                     l4656 1E23  
                                   l3696 01E1                                     l3688 01BA  
                                   l3880 17B3                                     l3864 173F  
                                   l3856 1707                                     l3848 16F1  
                                   l3872 176B                                     l3768 131A  
                                   l3792 1100                                     l3784 10D3  
                                   l3776 10C3                                     l3928 1FE2  
                                   l3960 001A                                     l3952 0004  
                                   l3936 1907                                     l3944 193A  
                                   l4920 0F2B                                     l4496 15DA  
                                   l4488 15B4                                     l4592 14A4  
                                   l4584 147E                                     l4576 144F  
                                   l4568 142E                                     l4760 0C95  
                                   l4752 0C35                                     l4744 0C09  
                                   l4736 0BDD                                     l4728 0BB8  
                                   l4680 0AC8                                     l4672 0A9F  
                                   l4666 1805                                     l4658 1E31  
                                   l3698 01EB                                     l3890 17DF  
                                   l3882 17C7                                     l3866 1741  
                                   l3858 1710                                     l3874 1780  
                                   l3794 110E                                     l3786 10D8  
                                   l3778 10C7                                     l4922 0039  
                                   l3962 0021                                     l3954 0005  
                                   l3938 191D                                     l3946 193E  
                                   l4498 15E3                                     l4594 14AD  
                                   l4586 1487                                     l4578 1466  
                                   l4762 0CAD                                     l4770 0D07  
                                   l4754 0C45                                     l4746 0C19  
                                   l4738 0BED                                     l4690 0AFC  
                                   l4682 0ACC                                     l4674 0AB7  
                                   l3892 17E5                                     l3884 17C8  
                                   l3876 178C                                     l3868 174A  
                                   l4924 1140                                     l3796 111C  
                                   l3788 10E4                                     l3964 0028  
                                   l3956 000C                                     l3980 18CA  
                                   l3948 1941                                     l4596 14B7  
                                   l4588 1491                                     l4764 0CC5  
                                   l4756 0C5D                                     l4748 0C22  
                                   l4692 0B01                                     l4684 0AD0  
                                   l4676 0AC2                                     l4668 0A8B  
                                   l3894 17EA                                     l3886 17D1  
                                   l3878 17A0                                     l4926 1775  
                                   l3798 112A                                     l3966 002D  
                                   l3958 0013                                     l3990 18A9  
                                   l3982 18CD                                     l3974 18E7  
                                   l4598 14C0                                     l4766 0CCD  
                                   l4758 0C61                                     l4694 0B06  
                                   l4686 0AEC                                     l4678 0AC6  
                                   l3896 17F2                                     l3888 17DA  
                                   l3968 0032                                     l3992 18AD  
                                   l3984 18E3                                     l3976 18EA  
                                   l4768 0CD3                                     l4696 0B10  
                                   l4688 0AF1                                     l3898 17F7  
                                   l3986 1890                                     l3994 18B0  
                                   l3978 1900                                     l4698 0B1B  
                                   l3988 1893                                     l3996 18C6  
                                   l3998 1ABF                                     STR_1 08AB  
                                   STR_2 0895                                     STR_3 085E  
                                   STR_4 088C                                     STR_5 08A4  
                                   STR_6 0883                                     STR_7 08B2  
                                   STR_8 08BF                                     STR_9 08CB  
                                   u3000 09D4                                     u3001 09D3  
                                   u3010 0A22                                     u3011 0A21  
                                   u3100 00A7                                     u3020 0A2F  
                                   u3101 00A6                                     u3021 0A2E  
                                   u3110 00AC                                     u3030 0A3C  
                                   u3111 00AB                                     u3031 0A3B  
                                   u2400 1EF5                                     u3200 0132  
                                   u3120 00C2                                     u2320 1860  
                                   u3040 0A49                                     u4000 059A  
                                   u2401 1EF4                                     u3201 0131  
                                   u3121 00C1                                     u2321 185F  
                                   u3041 0A48                                     u4001 0599  
                                   u3210 013B                                     u3130 00CB  
                                   u3050 005B                                     u2330 1871  
                                   u4010 05B0                                     u3211 013A  
                                   u3131 00CA                                     u3051 005A  
                                   u2331 1870                                     u4011 05AF  
                                   u2500 1D47                                     u2420 1F09  
                                   u3300 01C1                                     u3220 0151  
                                   u3140 00E1                                     u3060 0071  
                                   u2340 1878                                     u4100 06C3  
                                   u4020 05C2                                     u2501 1D46  
                                   u2421 1F08                                     u2405 1EF1  
                                   u3301 01C0                                     u3221 0150  
                                   u3141 00E0                                     u3061 0070  
                                   u2341 1877                                     u4101 06C2  
                                   u4021 05C1                                     u2510 1D50  
                                   u2430 1F10                                     u2350 1EBE  
                                   u3310 01C6                                     u3230 0156  
                                   u3150 00E6                                     u3070 0076  
                                   u4110 06D5                                     u4030 05D3  
                                   u2511 1D4F                                     u2431 1F0F  
                                   u2415 1EFD                                     u2351 1EBD  
                                   u3311 01C5                                     u3231 0155  
                                   u3151 00E5                                     u3071 0075  
                                   u4111 06D4                                     u4031 05D2  
                                   u2360 1ECA                                     u2440 1DDC  
                                   u3320 01DC                                     u3240 016C  
                                   u3160 00FC                                     u3080 008C  
                                   u3400 16BA                                     u2600 1CB4  
                                   u4040 0605                                     u4120 1010  
                                   u4200 15D0                                     u2505 1D43  
                                   u2361 1EC9                                     u2441 1DDB  
                                   u3321 01DB                                     u3241 016B  
                                   u3161 00FB                                     u3081 008B  
                                   u3401 16B9                                     u2601 1CB3  
                                   u4041 0604                                     u4121 100F  
                                   u4201 15CF                                     u2530 1D72  
                                   u2370 1ED6                                     u2450 1DEF  
                                   u3330 01E1                                     u3250 0171  
                                   u3170 0101                                     u3090 0091  
                                   u3410 16EC                                     u2610 1CCB  
                                   u4050 0627                                     u4210 15E3  
                                   u2531 1D71                                     u2371 1ED5  
                                   u2451 1DEE                                     u3331 01E0  
                                   u3251 0170                                     u3171 0100  
                                   u3091 0090                                     u3411 16EB  
                                   u2611 1CCA                                     u4051 0626  
                                   u4211 15E2                                     u2524 1D56  
                                   u2460 1E0C                                     u4300 122E  
                                   u2540 1A9B                                     u3340 01F7  
                                   u3260 0187                                     u3180 0117  
                                   u2700 1F52                                     u3420 16FB  
                                   u2620 1CEC                                     u4060 0638  
                                   u3500 1B1E                                     u4220 1635  
                                   u2525 1D54                                     u2461 1E0B  
                                   u4301 122D                                     u2541 1A9A  
                                   u3341 01F6                                     u3261 0186  
                                   u3181 0116                                     u2701 1F51  
                                   u3421 16FA                                     u2621 1CEB  
                                   u4061 0637                                     u3501 1B1D  
                                   u4221 1634                                     u2470 1B38  
                                   u2390 1EE9                                     u4230 1160  
                                   u2550 1AAC                                     u3350 01FC  
                                   u3270 018C                                     u3190 011C  
                                   u3430 1703                                     u3510 1083  
                                   u2630 1CF8                                     u4070 066A  
                                   u4150 102A                                     u4310 1477  
                                   u2535 1D6E                                     u2471 1B37  
                                   u2391 1EE8                                     u4231 115F  
                                   u2551 1AAB                                     u3351 01FB  
                                   u3271 018B                                     u3191 011B  
                                   u3431 1702                                     u3511 1082  
                                   u2631 1CF7                                     u4071 0669  
                                   u4151 1029                                     u4135 1017  
                                   u4311 1476                                     u2480 1B42  
                                   u4240 1188                                     u4400 1E60  
                                   u2560 1ABD                                     u3360 0212  
                                   u3280 01A2                                     u2720 1F65  
                                   u3440 1736                                     u3520 1093  
                                   u2640 1D1D                                     u2800 1DA9  
                                   u4080 0681                                     u3600 0E3D  
                                   u4160 1587                                     u4320 1487  
                                   u2481 1B41                                     u2385 1EDA  
                                   u2465 1E08                                     u4305 122A  
                                   u4241 1187                                     u4401 1E5F  
                                   u2561 1ABC                                     u3361 0211  
                                   u3281 01A1                                     u2721 1F64  
                                   u3441 1735                                     u3521 1092  
                                   u2641 1D1C                                     u2801 1DA8  
                                   u4081 0680                                     u3601 0E3C  
                                   u4145 101E                                     u4225 1631  
                                   u4161 1586                                     u4321 1486  
                                   u2490 1B5F                                     u4250 119C  
                                   u3370 1BF3                                     u3290 01AB  
                                   u3450 173F                                     u3530 10A3  
                                   u2650 1D30                                     u2570 1E73  
                                   u4090 0693                                     u3610 0E72  
                                   u4170 1597                                     u4330 149A  
                                   u4410 0AA9                                     u2491 1B5E  
                                   u2475 1B34                                     u4251 119B  
                                   u3371 1BF2                                     u3291 01AA  
                                   u2715 1F55                                     u3451 173E  
                                   u3531 10A2                                     u2651 1D2F  
                                   u2571 1E72                                     u4091 0692  
                                   u3611 0E71                                     u4171 1596  
                                   u4331 1499                                     u4260 11BD  
                                   u3380 1C06                                     u2900 1B8A  
                                   u2740 1F7A                                     u2660 1F21  
                                   u3460 1FB0                                     u2580 1E98  
                                   u2820 1DBE                                     u3700 02B4  
                                   u3620 0EA2                                     u3540 0D5B  
                                   u4180 15AA                                     u4340 14AD  
                                   u4500 0CC5                                     u4420 0BCD  
                                   u4261 11BC                                     u4245 1184  
                                   u3381 1C05                                     u4405 1E5C  
                                   u2565 1AB9                                     u2901 1B89  
                                   u2741 1F79                                     u2725 1F61  
                                   u2661 1F20                                     u3461 1FAF  
                                   u2581 1E97                                     u2821 1DBD  
                                   u2805 1DA5                                     u3701 02B3  
                                   u3621 0EA1                                     u4181 15A9  
                                   u4341 14AC                                     u4501 0CC4  
                                   u4421 0BCC                                     u4270 11D1  
                                   u3390 1C20                                     u2910 1B9F  
                                   u2750 1F81                                     u2670 1F2D  
                                   u3470 1FD0                                     u2590 1EB7  
                                   u2830 1BA7                                     u3710 02BB  
                                   u3630 0EAA                                     u3550 0D8E  
                                   u4190 15BD                                     u4350 14C0  
                                   u4510 0CCD                                     u4430 0BDD  
                                   u2495 1B5B                                     u4271 11D0  
                                   u4255 1198                                     u3391 1C1F  
                                   u2911 1B9E                                     u2751 1F80  
                                   u2735 1F6E                                     u2671 1F2C  
                                   u3471 1FCF                                     u2591 1EB6  
                                   u2575 1E6F                                     u2815 1DB2  
                                   u2831 1BA6                                     u3711 02BA  
                                   u3631 0EA9                                     u3551 0D8D  
                                   u4191 15BC                                     u4351 14BF  
                                   u4511 0CCC                                     u4431 0BDC  
                                   u4280 11ED                                     u2920 1C73  
                                   u2680 1F3F                                     u3480 1FEA  
                                   u2760 1D83                                     u3800 0383  
                                   u3720 02C2                                     u3640 0EBE  
                                   u3560 0DE0                                     u4360 14D3  
                                   u4520 0CD3                                     u4440 0BF6  
                                   u4281 11EC                                     u4265 11B9  
                                   u2905 1B86                                     u2681 1F3E  
                                   u3481 1FE9                                     u2761 1D82  
                                   u3801 0382                                     u3721 02C1  
                                   u3641 0EBD                                     u3561 0DDF  
                                   u4361 14D2                                     u4521 0CD2  
                                   u4505 0CC1                                     u4441 0BF5  
                                   u4290 1215                                     u2930 1C96  
                                   u2850 1BBA                                     u3810 0394  
                                   u3730 02C9                                     u3650 0EFB  
                                   u3570 0DF1                                     u3490 1B00  
                                   u4370 14E6                                     u4450 0C09  
                                   u4291 1214                                     u4275 11CD  
                                   u3395 1C1C                                     u2915 1B9B  
                                   u2595 1EB3                                     u2851 1BB9  
                                   u3811 0393                                     u3731 02C8  
                                   u3651 0EFA                                     u3571 0DF0  
                                   u3491 1AFF                                     u4371 14E5  
                                   u4451 0C08                                     u2940 1CA8  
                                   u2780 1D96                                     u2860 1BC6  
                                   u3900 049F                                     u3820 03A4  
                                   u3740 02D9                                     u3660 0238  
                                   u3580 0DF9                                     u4380 150C  
                                   u4460 0C22                                     u2941 1CA7  
                                   u2781 1D95                                     u2861 1BC5  
                                   u2845 1BAB                                     u3901 049E  
                                   u3821 03A3                                     u3741 02D8  
                                   u3581 0DF8                                     u4381 150B  
                                   u4461 0C21                                     u4390 1E30  
                                   u2950 0940                                     u3910 04B6  
                                   u3830 03D5                                     u3750 02FB  
                                   u3670 0290                                     u3590 0E0C  
                                   u4470 0C35                                     u4295 1211  
                                   u4391 1E2F                                     u2695 1F43  
                                   u2775 1D87                                     u2951 093F  
                                   u3911 04B5                                     u3831 03D4  
                                   u3751 02FA                                     u3671 028F  
                                   u3591 0E0B                                     u4471 0C34  
                                   u2880 1BDA                                     u2960 0964  
                                   u3920 04C7                                     u3840 03EB  
                                   u3760 035E                                     u3680 029F  
                                   u4480 0C5D                                     u2881 1BD9  
                                   u2865 1BC2                                     u2961 0963  
                                   u3921 04C6                                     u3841 03EA  
                                   u3761 035D                                     u3681 029E  
                                   u4385 1508                                     u4481 0C5C  
                                   u2890 1B75                                     u3930 04F7  
                                   u3850 03FC                                     u3770 0365  
                                   u3690 02A6                                     u4490 0CAD  
                                   u4395 1E2C                                     u2891 1B74  
                                   u2795 1D99                                     u2875 1BCE  
                                   u2955 093C                                     u3931 04F6  
                                   u3851 03FB                                     u3771 0364  
                                   u3691 02A5                                     u4491 0CAC  
                                   u3940 0508                                     u3860 040C  
                                   u3780 0377                                     u2965 0960  
                                   u3941 0507                                     u3861 040B  
                                   u3781 0376                                     u4485 0C59  
                                   u3950 0539                                     u3870 043D  
                                   u3790 037D                                     u2895 1B71  
                                   u2975 09A0                                     u3951 0538  
                                   u3871 043C                                     u3791 037C  
                                   u4495 0CA9                                     u3960 053F  
                                   u3880 045E                                     u2985 09AF  
                                   u3961 053E                                     u3881 045D  
                                   u3970 0545                                     u3890 046E  
                                   u2995 09C0                                     u3971 0544  
                                   u3891 046D                                     u3980 0557  
                                   u3981 0556                                     u3990 0568  
                                   u3991 0567                 ?_RealTimeClock_read_byte 0070  
                                   _Temp 00A6                                     _main 0A8B  
                                   _year 0061                              main@tempdec 00CE  
                                   btemp 007E         __end_of_RealTimeClock_write_byte 1B63  
                                   start 0000                               Read_Byte@i 0076  
                             Read_Byte@j 00B5       __size_of_RealTimeClock_set_minutes 001D  
     __size_of_RealTimeClock_set_seconds 001D                            ??_Init_Keypad 0070  
         __end_of_RealTimeClock_get_year 1A23                 ?_RealTimeClock_set_hours 0020  
                           ___int_to_hex 1BE2                 ?_RealTimeClock_set_month 0020  
                        __end_of_SetDate 07C6                          __end_of_SetTime 1000  
                       __end_of_LCD_Busy 1865                         __end_of_LCD_Init 1818  
                    __end_of_DisplayDate 1324                      __end_of_DisplayTemp 1A8D  
                    __end_of_DisplayTime 140A                          __end_of_SoundOn 1811  
                                  ?_main 0070                          __end_of___awdiv 1F8D  
                                  STR_10 0871                                    STR_11 0847  
                                  STR_20 08C5                                    STR_12 0868  
                                  STR_13 085B                                    STR_21 082E  
                                  STR_14 0843                                    STR_22 083B  
                                  STR_23 0853                                    STR_15 0820  
                                  STR_16 089D                                    STR_24 0810  
                                  STR_17 08B9                            __CFG_WDTE$OFF 0000  
                                  STR_18 08BF                                    STR_19 087A  
                        __end_of___awmod 1F1C                          ___awdiv@divisor 0070  
                        __end_of___lwdiv 1DC6                          __end_of___lwmod 1BE2  
                        ___awdiv@counter 0075                            ??_Keypad_Scan 0078  
                 __end_of_LCD_SecondLine 181F                                    _PORTC 0007  
                                  _PORTD 0008                                    _TRISA 0085  
                                  _TRISC 0087                                    _TRISD 0088  
                                  _Delay 1865                            __CFG_PWRTE$ON 0000  
         __end_of_RealTimeClock_set_year 1904                   __end_of_LCD_SendString 1CAA  
                                  _Reset 1E64                               _DisplayDay 10B0  
                         ??_LCD_SendData 0070                               _Main_Delay 1B63  
                             SetDate@Key 0027                               SetDate@feb 0038  
                             _MainScreen 1ABF                                    _month 0065  
                          ??_Buzzer_Init 0070           RealTimeClock_read_byte@time_rx 0072  
                         __CFG_BOREN$OFF 0000                             LCD_Command@c 0070  
                                  pclath 000A                         __end_of_CheckDay 0051  
                                  status 0003                                    wtemp0 007E  
                         Get_Temp@buffer 0024                         __end_of_Get_Temp 0A8B  
                        __initialization 07C6                             __end_of_main 0D11  
                     __size_of_CheckTime 00E6                            SoundAlarm@Key 0053  
        __end_of_RealTimeClock_get_hours 199B          __end_of_RealTimeClock_get_month 1A01  
                         ___hex_to_int@i 0021                               SetTime@Key 0027  
                         ___hex_to_int@t 0023    __end_of_RealTimeClock_get_day_of_week 1A45  
 __size_of_RealTimeClock_get_day_of_week 0022            _RealTimeClock_get_day_of_week 1A23  
                    __end_of_Init_Keypad 182E                                   ??_main 005D  
                        ?_LCD_SecondLine 0070                                   ?_Delay 0070  
                            _IsHeatingOn 00B3                                   ?_Reset 0070  
              __size_of_Thermometer_Init 0007                          ?_LCD_SendString 0071  
                          SetTime@digits 002F          __end_of_RealTimeClock_read_byte 1D7B  
                       __end_of_SoundOff 180D                                   _ADCON1 009F  
       RealTimeClock_set_day_of_week@day 0020                 RealTimeClock_get_hours@c 007B  
                       ___awdiv@dividend 0072                 RealTimeClock_get_month@c 007B  
                    __end_of_Keypad_Scan 0218                       __size_of_Key_Delay 0032  
                                 Delay@x 0072                                   Delay@y 0070  
                                 Delay@z 0073                                   _TRISA0 0428  
                                 _TRISB0 0430                                   _TRISB1 0431  
                                 _TRISB4 0434                                   _TRISB5 0435  
                     __size_of_Read_Byte 0046                   __size_of_DateDayScreen 007F  
        __end_of_RealTimeClock_set_hours 1921          __end_of_RealTimeClock_set_month 18E7  
                              ??_SetDate 0029                      __end_of_Buzzer_Init 1809  
                                 Reset@i 0075                                ??_SetTime 0029  
                            _DisplayDate 123E                              _DisplayTemp 1A67  
                            _DisplayTime 1324                              SetDate@F991 01AA  
                              ??_SoundOn 0070                 _RealTimeClock_write_byte 1B28  
                                 ___wmul 1009                                ??___awdiv 0074  
                              ??___awmod 0074                                ??___lwdiv 007A  
                              ??___lwmod 0074                              SetDate@Date 002F  
                                 _intent 00B8                         ___awdiv@quotient 0077  
                        ___awmod@divisor 0070                                   _tenbit 00B9  
                        ___awmod@counter 0075                     __size_of_LCD_Command 000F  
                    HeatingControlOff@On 0052                              ?_DisplayDay 0070  
                            ?_Main_Delay 0070                              ?_MainScreen 0070  
                      __end_of_CheckTime 123E                               _SoundAlarm 140A  
                        LCD_SendString@i 0076             __end_of_SwapToHeatingDisplay 2000  
                 __size_of_ChangeTrigger 0197                  __end_of__initialization 07FC  
                              ?_LCD_Busy 0070                                ?_LCD_Init 0070  
        ??_RealTimeClock_set_day_of_week 007E                            __end_of_Delay 187A  
                         __pcstackCOMMON 0070                              _Init_Keypad 1826  
                          __end_of_Reset 1EB9                     __end_of_LCD_SendData 08E1  
                           __pidataBANK1 187A                             __pidataBANK3 1C24  
               RealTimeClock_read_byte@i 0073                               _Write_Byte 1CAA  
             ?_RealTimeClock_get_minutes 0025               ?_RealTimeClock_get_seconds 0025  
                      __end_of_Key_Delay 1ABF                              SetTime@F980 01B3  
                         SoundAlarm@temp 0055                  SwapToHeatingDisplay@Off 007D  
                SwapToHeatingDisplay@Key 0078                              SetTime@Time 0038  
                      __end_of_Read_Byte 1D34                            _DateDayScreen 1031  
                              ?_CheckDay 0070                              _Keypad_Scan 0051  
                         ___int_to_hex@i 007C                                  ??_Delay 0071  
                         ___int_to_hex@t 007A                            LCD_SendData@c 0070  
                                ??_Reset 0074   __end_of_RealTimeClock_get_day_of_month 19DF  
__size_of_RealTimeClock_get_day_of_month 0022           _RealTimeClock_get_day_of_month 19BD  
                              ?_Get_Temp 0070              __size_of_RealTimeClock_init 001E  
                         Write_Byte@temp 0076                               __pbssBANK0 0061  
                             __pbssBANK1 00A0                               __pbssBANK3 01D2  
                    DisplayDay@Wednesday 0029                              _Buzzer_Init 1805  
                           _DisableAlarm 00B1                           SetTime@TimeSet 0039  
       __size_of_RealTimeClock_get_hours 0022         __size_of_RealTimeClock_get_month 0022  
                             ??_LCD_Busy 0070                               ??_LCD_Init 0070  
                ChangeTrigger@TriggerSet 002E                               __pmaintext 0A8B  
                    __size_of_DisplayDay 00A8                                  ?___wmul 0070  
                    __size_of_Main_Delay 003E         __size_of_RealTimeClock_read_byte 0047  
                              ?_SoundOff 0070                      __size_of_MainScreen 0033  
      __end_of_RealTimeClock_get_minutes 19BD        __end_of_RealTimeClock_get_seconds 1A67  
                         SetTime@setTime 003A                            _ChangeTrigger 1669  
                          Switch24Hour@c 007B                           ?_DateDayScreen 0035  
                             ??_CheckDay 0070                         _Thermometer_Init 181F  
       __size_of_RealTimeClock_set_hours 001D         __size_of_RealTimeClock_set_month 001D  
                             ??_Get_Temp 0020                              ?_SoundAlarm 0053  
                             __stringtab 0800                                  _SetDate 0218  
                                _TempBCD 00AB                                  _SetTime 0D11  
                                _TempDec 00BA                                  _TempInt 006F  
  __end_of_RealTimeClock_set_day_of_week 18CA   __size_of_RealTimeClock_set_day_of_week 001D  
          _RealTimeClock_set_day_of_week 18AD                          Switch24Hour@Key 0078  
                                _SoundOn 180D                                  ___awdiv 1F1C  
                            ?_Write_Byte 0070                                  ___awmod 1EB9  
                        __size_of___wmul 0028                                  ___lwdiv 1D7B  
                                ___lwmod 1BA1                               ??_SoundOff 0070  
                       ??_LCD_SecondLine 0071                           ?_ChangeTrigger 0070  
                       ??_LCD_SendString 0073                                  __ptext1 181F  
                                __ptext2 140A                                  __ptext3 180D  
                                __ptext4 152D                                  __ptext5 1009  
                                __ptext6 1AF2                                  __ptext7 1809  
                                __ptext8 0D11                                  __ptext9 193E  
                   _SwapToHeatingDisplay 1F8D                         ___awmod@dividend 0072  
                                main@Key 00D8                                  clrloop0 1002  
                   HeatingControlOff@Off 0051                     HeatingControlOff@Key 0048  
                   end_of_initialization 07FC               ??_RealTimeClock_write_byte 0070  
                  __size_of_LCD_SendData 000F                               _weekDayEnd 00E2  
                             _tempBuffer 00EA                               _weekEndEnd 01BC  
                             _timeBuffer 00BD                             ?_DisplayDate 0070  
                           ?_DisplayTemp 0070                             ?_DisplayTime 0070  
                              Get_Temp@i 0025               ?_RealTimeClock_set_minutes 0020  
             ?_RealTimeClock_set_seconds 0020                           main@start_date 00BE  
                    __size_of_SoundAlarm 0123                          ??_DateDayScreen 0037  
                      ChangeTrigger@F955 01D2     __end_of_RealTimeClock_set_burst_time 1E64  
  __size_of_RealTimeClock_set_burst_time 004F             _RealTimeClock_set_burst_time 1E15  
                  ?_SwapToHeatingDisplay 0078                            _dateDisplayer 01C0  
                           ??_DisplayDay 007C                             ??_Main_Delay 0072  
        ?_RealTimeClock_set_day_of_month 0020         ??_RealTimeClock_set_day_of_month 007E  
                           ??_MainScreen 0028                             _LCD_SendData 08D2  
                    __size_of_Write_Byte 0044                  _RealTimeClock_get_hours 1979  
                _RealTimeClock_get_month 19DF      RealTimeClock_set_day_of_month@month 0020  
                              _CheckTime 1158                      DateDayScreen@DayDis 0039  
           RealTimeClock_set_hours@hours 0020                 ??_RealTimeClock_get_year 007A  
                      __size_of_LCD_Busy 0015                        __size_of_LCD_Init 0007  
                           ?_Init_Keypad 0070           ChangeTrigger@triggerTempChange 0026  
                _RealTimeClock_read_byte 1D34                          ??_ChangeTrigger 0020  
                     __end_of_DisplayDay 1158                            ??_LCD_Command 0070  
            ??_RealTimeClock_get_minutes 007A              ??_RealTimeClock_get_seconds 007A  
                     __end_of_Main_Delay 1BA1                           __end_of___wmul 1031  
      __end_of_RealTimeClock_set_minutes 193E        __end_of_RealTimeClock_set_seconds 195B  
                     __end_of_MainScreen 1AF2                 ??_RealTimeClock_set_year 007E  
                          ?_Switch24Hour 0078            ?_RealTimeClock_set_burst_time 0070  
                              _Key_Delay 1A8D                             ?_Keypad_Scan 0076  
                        SoundAlarm@Alarm 005C                      start_initialization 07C6  
                _RealTimeClock_set_hours 1904                  _RealTimeClock_set_month 18CA  
                          ?___hex_to_int 0077                        __size_of_CheckDay 004D  
                              _Read_Byte 1CEE             RealTimeClock_set_month@month 0020  
                        SoundAlarm@temp2 0057                          SoundAlarm@temp3 0059  
                       ___hex_to_int@hex 0020                 SwapToHeatingDisplay@Heat 007B  
                      __size_of_Get_Temp 01AA                             ?_Buzzer_Init 0070  
                             ?_CheckTime 0070                  RealTimeClock_get_year@c 007B  
               __end_of_Thermometer_Init 1826                            ?___int_to_hex 0077  
                               ??___wmul 0074                               init_fetch0 183D  
                            __pdataBANK1 00DA                              __pdataBANK3 0190  
                 ??_SwapToHeatingDisplay 007A                           ??_Switch24Hour 007A  
                      _HeatingControlOff 152D                        __size_of_SoundOff 0004  
                             ?_Key_Delay 0070                       ?_HeatingControlOff 0048  
                    __end_of_LCD_Command 183D               __end_of_RealTimeClock_init 1979  
                              ___latbits 0002                           ??___hex_to_int 0079  
                          __pcstackBANK0 0020                            __pcstackBANK1 00BE  
       RealTimeClock_set_burst_time@time 0022                        DateDayScreen@date 0038  
              ??_RealTimeClock_get_hours 007A                               ?_Read_Byte 0070  
              ??_RealTimeClock_get_month 007A                _RealTimeClock_get_minutes 199B  
              _RealTimeClock_get_seconds 1A45                             ??_SoundAlarm 005B  
                    ??_HeatingControlOff 0050                   SwapToHeatingDisplay@On 007C  
                          Write_Byte@val 0077                       DisplayDay@Saturday 002C  
        __size_of_RealTimeClock_get_year 0022                ??_RealTimeClock_read_byte 0070  
                               ?_SetDate 0027                              Write_Byte@i 0078  
                               ?_SetTime 0027                       DisplayDay@Thursday 002A  
                       ___lwdiv@dividend 0078                RealTimeClock_write_byte@i 0072  
                         ??___int_to_hex 0079                              _day_of_week 006D  
                  DisplayTemp@tempBuffer 0027                                 ?_SoundOn 0070  
                           ??_Write_Byte 0074                                 ?___awdiv 0070  
                               ?___awmod 0070                     __size_of_DisplayDate 00E6  
              __end_of_HeatingControlOff 1669                                 ?___lwdiv 0076  
                               ?___lwmod 0070                     __size_of_DisplayTemp 0026  
                   __size_of_DisplayTime 00E6                           SetDate@DateDis 003A  
                         SetDate@DateSet 003B                       __end_of_SoundAlarm 152D  
                              __pstrings 0800          __size_of_RealTimeClock_set_year 001D  
              ??_RealTimeClock_set_hours 007E                ??_RealTimeClock_set_month 007E  
                              _isWeekDay 00AF                           __size_of_Delay 0015  
                         __size_of_Reset 0055           ??_RealTimeClock_set_burst_time 0020  
                       ___lwdiv@quotient 007B           ?_RealTimeClock_get_day_of_week 0025  
             RealTimeClock_set_year@year 0020                       __end_of_Write_Byte 1CEE  
                               _LCD_Busy 1850                                 _LCD_Init 1811  
                            ??_CheckTime 007C                           ___wmul@product 0074  
                          _timeDisplayer 01C9                                clear_ram0 1001  
                              _timeHours 006B                                main@F1009 0190  
                       ChangeTrigger@Key 0030                              _LCD_Command 182E  
                   __size_of_Init_Keypad 0008              ??_RealTimeClock_set_minutes 007E  
            ??_RealTimeClock_set_seconds 007E                             _hundredthbit 00B6  
                            __stringbase 080F                        ___wmul@multiplier 0070  
                 _RealTimeClock_get_year 1A01         RealTimeClock_set_minutes@minutes 0020  
                            ??_Key_Delay 0072                                 _CheckDay 0004  
                       main@tempdectenth 00D0                                main@temp2 00D4  
                              main@temp3 00D6                              ??_Read_Byte 0074  
                   __size_of_Keypad_Scan 01C7                                 _Get_Temp 08E1  
                   LCD_SendString@string 0071                   HeatingControlOff@temp2 004C  
                 HeatingControlOff@temp3 004E                                 SetDate@i 0046  
                 _RealTimeClock_set_year 18E7         RealTimeClock_set_seconds@seconds 0020  
                   __end_of_Switch24Hour 1B28                                 SetTime@i 0040  
                   __size_of_Buzzer_Init 0004          RealTimeClock_get_day_of_month@c 007B  
                       __size_of_SetDate 05AE   __end_of_RealTimeClock_set_day_of_month 18AD  
__size_of_RealTimeClock_set_day_of_month 001D           _RealTimeClock_set_day_of_month 1890  
                   __end_of___hex_to_int 1E15                         __size_of_SetTime 02EF  
             __size_of_HeatingControlOff 013C                                 _is24Hour 00AD  
                       __size_of_SoundOn 0004                                 _SoundOff 1809  
                       __size_of___awdiv 0071                         __size_of___awmod 0063  
                       __size_of___lwdiv 004B                         __size_of___lwmod 0041  
                       DateDayScreen@Key 0035        __size_of_RealTimeClock_write_byte 003B  
              ?_RealTimeClock_write_byte 0070                       __end_of__stringtab 0810  
                  __end_of_DateDayScreen 10B0                          ___lwdiv@divisor 0076  
                      DisplayDay@Tuesday 0028                          ___lwdiv@counter 007D  
                __size_of_LCD_SecondLine 0007                                 __ptext10 1921  
                               __ptext11 1904                                 __ptext20 1A45  
                               __ptext12 0218                                 __ptext21 1A67  
                               __ptext13 18E7                                 __ptext30 1F8D  
                               __ptext22 08E1                                 __ptext14 18CA  
                               __ptext31 1818                                 __ptext23 1BA1  
                               __ptext15 18AD                                 __ptext40 1B63  
                               __ptext32 10B0                                 __ptext24 1D7B  
                               __ptext16 1890                                 __ptext41 1C66  
                               __ptext33 1A23                                 __ptext25 1CAA  
                               __ptext17 0004                                 __ptext50 1811  
                               __ptext42 08D2                                 __ptext34 123E  
                               __ptext26 1E64                                 __ptext18 1ABF  
                               __ptext51 1826                                 __ptext43 182E  
                               __ptext35 1A01                                 __ptext27 1CEE  
                               __ptext19 1324                                 __ptext52 1158  
                               __ptext44 1850                                 __ptext36 19DF  
                               __ptext28 1865                                 __ptext53 199B  
                               __ptext45 0051                                 __ptext37 19BD  
                               __ptext29 1031                                 __ptext54 1979  
                               __ptext46 1A8D                                 __ptext38 1669  
                               __ptext55 1DC6                                 __ptext47 1E15  
                               __ptext39 1F1C                                 __ptext56 1EB9  
                               __ptext48 1BE2                                 __ptext57 1B28  
                               __ptext49 195B                                 __ptext58 1D34  
                               __ptext59 1805                     __end_of___int_to_hex 1C24  
                           _weekDayStart 00E6                  __size_of_LCD_SendString 0044  
              _RealTimeClock_set_minutes 1921                _RealTimeClock_set_seconds 193E  
                           _weekEndStart 00DE                         SetDate@dateArray 0040  
                          __size_of_main 0286       __size_of_RealTimeClock_get_minutes 0022  
     __size_of_RealTimeClock_get_seconds 0022                                 _timeMins 0069  
                               _timeSecs 0067                            SetDate@thirty 003C  
                      ?_Thermometer_Init 0070                                 _tenthbit 00B7  
                     ??_Thermometer_Init 0070                    __end_of_ChangeTrigger 1800  
                               main@temp 00D2               RealTimeClock_get_minutes@c 007B  
             RealTimeClock_get_seconds@c 007B                    HeatingControlOff@temp 004A  
         RealTimeClock_get_day_of_week@c 007B                                 init_ram0 1841  
        RealTimeClock_write_byte@time_tx 0074                         DisplayDay@Friday 002B  
                       DisplayDay@Monday 0027                     ChangeTrigger@Trigger 002D  
                       DisplayDay@Sunday 002D                         ___lwmod@dividend 0072  
                   ___int_to_hex@integer 0077                       _RealTimeClock_init 195B  
                   ChangeTrigger@decimal 002F                                stringcode 080A  
                         ChangeTrigger@i 0033                      ?_RealTimeClock_init 0070  
                       SetDate@thirtyOne 003E                              _numberTable 01A0  
          __size_of_SwapToHeatingDisplay 0073           ?_RealTimeClock_set_day_of_week 0020  
          RealTimeClock_set_burst_time@i 0023                          ___lwmod@divisor 0070  
                        ___lwmod@counter 0075                           Read_Byte@value 0075  
                    ChangeTrigger@digits 002A                                 stringdir 080A  
                           _previousTemp 00A0                                 stringtab 0800  
                         MainScreen@Temp 002A                           MainScreen@Time 0029  
                   ??_RealTimeClock_init 0075                    __size_of_Switch24Hour 0036  
                     ChangeTrigger@i_214 0031                              Main_Delay@i 0073  
                            Main_Delay@j 0075                              Main_Delay@k 0070  
                  __size_of___hex_to_int 004F                     ___RealTimeClock_buff 01D6  
                          ??_DisplayDate 007C                            ??_DisplayTemp 007E  
                          ??_DisplayTime 007C  
