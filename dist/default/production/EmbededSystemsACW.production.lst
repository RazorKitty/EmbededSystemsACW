

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jan 03 22:57:50 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F877A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   176                           SSPCON2 equ 091h ;# 
   177  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   178                           PR2 equ 092h ;# 
   179  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   180                           SSPADD equ 093h ;# 
   181  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   182                           SSPSTAT equ 094h ;# 
   183  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   184                           TXSTA equ 098h ;# 
   185  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   186                           SPBRG equ 099h ;# 
   187  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   188                           CMCON equ 09Ch ;# 
   189  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   190                           CVRCON equ 09Dh ;# 
   191  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   192                           ADRESL equ 09Eh ;# 
   193  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   194                           ADCON1 equ 09Fh ;# 
   195  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   196                           EEDATA equ 010Ch ;# 
   197  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   198                           EEADR equ 010Dh ;# 
   199  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   200                           EEDATH equ 010Eh ;# 
   201  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   202                           EEADRH equ 010Fh ;# 
   203  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   204                           EECON1 equ 018Ch ;# 
   205  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   206                           EECON2 equ 018Dh ;# 
   207  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   208                           INDF equ 00h ;# 
   209  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   210                           TMR0 equ 01h ;# 
   211  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   212                           PCL equ 02h ;# 
   213  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   214                           STATUS equ 03h ;# 
   215  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   216                           FSR equ 04h ;# 
   217  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   218                           PORTA equ 05h ;# 
   219  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   220                           PORTB equ 06h ;# 
   221  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   222                           PORTC equ 07h ;# 
   223  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   224                           PORTD equ 08h ;# 
   225  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   226                           PORTE equ 09h ;# 
   227  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   228                           PCLATH equ 0Ah ;# 
   229  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   230                           INTCON equ 0Bh ;# 
   231  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   232                           PIR1 equ 0Ch ;# 
   233  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   234                           PIR2 equ 0Dh ;# 
   235  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   236                           TMR1 equ 0Eh ;# 
   237  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   238                           TMR1L equ 0Eh ;# 
   239  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   240                           TMR1H equ 0Fh ;# 
   241  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   242                           T1CON equ 010h ;# 
   243  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   244                           TMR2 equ 011h ;# 
   245  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   246                           T2CON equ 012h ;# 
   247  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   248                           SSPBUF equ 013h ;# 
   249  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   250                           SSPCON equ 014h ;# 
   251  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   252                           CCPR1 equ 015h ;# 
   253  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   254                           CCPR1L equ 015h ;# 
   255  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   256                           CCPR1H equ 016h ;# 
   257  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   258                           CCP1CON equ 017h ;# 
   259  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   260                           RCSTA equ 018h ;# 
   261  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   262                           TXREG equ 019h ;# 
   263  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   264                           RCREG equ 01Ah ;# 
   265  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   266                           CCPR2 equ 01Bh ;# 
   267  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   268                           CCPR2L equ 01Bh ;# 
   269  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   270                           CCPR2H equ 01Ch ;# 
   271  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   272                           CCP2CON equ 01Dh ;# 
   273  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   274                           ADRESH equ 01Eh ;# 
   275  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   276                           ADCON0 equ 01Fh ;# 
   277  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   278                           OPTION_REG equ 081h ;# 
   279  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   280                           TRISA equ 085h ;# 
   281  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   282                           TRISB equ 086h ;# 
   283  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   284                           TRISC equ 087h ;# 
   285  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   286                           TRISD equ 088h ;# 
   287  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   288                           TRISE equ 089h ;# 
   289  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   290                           PIE1 equ 08Ch ;# 
   291  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   292                           PIE2 equ 08Dh ;# 
   293  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   294                           PCON equ 08Eh ;# 
   295  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   296                           SSPCON2 equ 091h ;# 
   297  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   298                           PR2 equ 092h ;# 
   299  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   300                           SSPADD equ 093h ;# 
   301  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   302                           SSPSTAT equ 094h ;# 
   303  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   304                           TXSTA equ 098h ;# 
   305  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   306                           SPBRG equ 099h ;# 
   307  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   308                           CMCON equ 09Ch ;# 
   309  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   310                           CVRCON equ 09Dh ;# 
   311  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   312                           ADRESL equ 09Eh ;# 
   313  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   314                           ADCON1 equ 09Fh ;# 
   315  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   316                           EEDATA equ 010Ch ;# 
   317  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   318                           EEADR equ 010Dh ;# 
   319  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   320                           EEDATH equ 010Eh ;# 
   321  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   322                           EEADRH equ 010Fh ;# 
   323  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   324                           EECON1 equ 018Ch ;# 
   325  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   326                           EECON2 equ 018Dh ;# 
   327  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   328                           INDF equ 00h ;# 
   329  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   330                           TMR0 equ 01h ;# 
   331  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   332                           PCL equ 02h ;# 
   333  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   334                           STATUS equ 03h ;# 
   335  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   336                           FSR equ 04h ;# 
   337  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   338                           PORTA equ 05h ;# 
   339  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   340                           PORTB equ 06h ;# 
   341  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   342                           PORTC equ 07h ;# 
   343  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   344                           PORTD equ 08h ;# 
   345  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   346                           PORTE equ 09h ;# 
   347  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   348                           PCLATH equ 0Ah ;# 
   349  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   350                           INTCON equ 0Bh ;# 
   351  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   352                           PIR1 equ 0Ch ;# 
   353  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   354                           PIR2 equ 0Dh ;# 
   355  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   356                           TMR1 equ 0Eh ;# 
   357  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   358                           TMR1L equ 0Eh ;# 
   359  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   360                           TMR1H equ 0Fh ;# 
   361  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   362                           T1CON equ 010h ;# 
   363  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   364                           TMR2 equ 011h ;# 
   365  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   366                           T2CON equ 012h ;# 
   367  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   368                           SSPBUF equ 013h ;# 
   369  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   370                           SSPCON equ 014h ;# 
   371  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   372                           CCPR1 equ 015h ;# 
   373  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   374                           CCPR1L equ 015h ;# 
   375  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   376                           CCPR1H equ 016h ;# 
   377  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   378                           CCP1CON equ 017h ;# 
   379  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   380                           RCSTA equ 018h ;# 
   381  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   382                           TXREG equ 019h ;# 
   383  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   384                           RCREG equ 01Ah ;# 
   385  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   386                           CCPR2 equ 01Bh ;# 
   387  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   388                           CCPR2L equ 01Bh ;# 
   389  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   390                           CCPR2H equ 01Ch ;# 
   391  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   392                           CCP2CON equ 01Dh ;# 
   393  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   394                           ADRESH equ 01Eh ;# 
   395  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   396                           ADCON0 equ 01Fh ;# 
   397  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   398                           OPTION_REG equ 081h ;# 
   399  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   400                           TRISA equ 085h ;# 
   401  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   402                           TRISB equ 086h ;# 
   403  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   404                           TRISC equ 087h ;# 
   405  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   406                           TRISD equ 088h ;# 
   407  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   408                           TRISE equ 089h ;# 
   409  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   410                           PIE1 equ 08Ch ;# 
   411  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   412                           PIE2 equ 08Dh ;# 
   413  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   414                           PCON equ 08Eh ;# 
   415  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   416                           SSPCON2 equ 091h ;# 
   417  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   418                           PR2 equ 092h ;# 
   419  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   420                           SSPADD equ 093h ;# 
   421  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   422                           SSPSTAT equ 094h ;# 
   423  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   424                           TXSTA equ 098h ;# 
   425  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   426                           SPBRG equ 099h ;# 
   427  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   428                           CMCON equ 09Ch ;# 
   429  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   430                           CVRCON equ 09Dh ;# 
   431  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   432                           ADRESL equ 09Eh ;# 
   433  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   434                           ADCON1 equ 09Fh ;# 
   435  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   436                           EEDATA equ 010Ch ;# 
   437  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   438                           EEADR equ 010Dh ;# 
   439  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   440                           EEDATH equ 010Eh ;# 
   441  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   442                           EEADRH equ 010Fh ;# 
   443  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   444                           EECON1 equ 018Ch ;# 
   445  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   446                           EECON2 equ 018Dh ;# 
   447  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   448                           INDF equ 00h ;# 
   449  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   450                           TMR0 equ 01h ;# 
   451  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   452                           PCL equ 02h ;# 
   453  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   454                           STATUS equ 03h ;# 
   455  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   456                           FSR equ 04h ;# 
   457  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   458                           PORTA equ 05h ;# 
   459  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   460                           PORTB equ 06h ;# 
   461  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   462                           PORTC equ 07h ;# 
   463  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   464                           PORTD equ 08h ;# 
   465  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   466                           PORTE equ 09h ;# 
   467  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   468                           PCLATH equ 0Ah ;# 
   469  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   470                           INTCON equ 0Bh ;# 
   471  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   472                           PIR1 equ 0Ch ;# 
   473  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   474                           PIR2 equ 0Dh ;# 
   475  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   476                           TMR1 equ 0Eh ;# 
   477  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   478                           TMR1L equ 0Eh ;# 
   479  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   480                           TMR1H equ 0Fh ;# 
   481  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   482                           T1CON equ 010h ;# 
   483  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   484                           TMR2 equ 011h ;# 
   485  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   486                           T2CON equ 012h ;# 
   487  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   488                           SSPBUF equ 013h ;# 
   489  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   490                           SSPCON equ 014h ;# 
   491  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   492                           CCPR1 equ 015h ;# 
   493  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   494                           CCPR1L equ 015h ;# 
   495  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   496                           CCPR1H equ 016h ;# 
   497  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   498                           CCP1CON equ 017h ;# 
   499  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   500                           RCSTA equ 018h ;# 
   501  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   502                           TXREG equ 019h ;# 
   503  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   504                           RCREG equ 01Ah ;# 
   505  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   506                           CCPR2 equ 01Bh ;# 
   507  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   508                           CCPR2L equ 01Bh ;# 
   509  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   510                           CCPR2H equ 01Ch ;# 
   511  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   512                           CCP2CON equ 01Dh ;# 
   513  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   514                           ADRESH equ 01Eh ;# 
   515  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   516                           ADCON0 equ 01Fh ;# 
   517  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   518                           OPTION_REG equ 081h ;# 
   519  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   520                           TRISA equ 085h ;# 
   521  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   522                           TRISB equ 086h ;# 
   523  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   524                           TRISC equ 087h ;# 
   525  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   526                           TRISD equ 088h ;# 
   527  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   528                           TRISE equ 089h ;# 
   529  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   530                           PIE1 equ 08Ch ;# 
   531  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   532                           PIE2 equ 08Dh ;# 
   533  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   534                           PCON equ 08Eh ;# 
   535  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   536                           SSPCON2 equ 091h ;# 
   537  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   538                           PR2 equ 092h ;# 
   539  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   540                           SSPADD equ 093h ;# 
   541  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   542                           SSPSTAT equ 094h ;# 
   543  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   544                           TXSTA equ 098h ;# 
   545  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   546                           SPBRG equ 099h ;# 
   547  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   548                           CMCON equ 09Ch ;# 
   549  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   550                           CVRCON equ 09Dh ;# 
   551  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   552                           ADRESL equ 09Eh ;# 
   553  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   554                           ADCON1 equ 09Fh ;# 
   555  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   556                           EEDATA equ 010Ch ;# 
   557  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   558                           EEADR equ 010Dh ;# 
   559  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   560                           EEDATH equ 010Eh ;# 
   561  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   562                           EEADRH equ 010Fh ;# 
   563  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   564                           EECON1 equ 018Ch ;# 
   565  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   566                           EECON2 equ 018Dh ;# 
   567  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   568                           INDF equ 00h ;# 
   569  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   570                           TMR0 equ 01h ;# 
   571  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   572                           PCL equ 02h ;# 
   573  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   574                           STATUS equ 03h ;# 
   575  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   576                           FSR equ 04h ;# 
   577  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   578                           PORTA equ 05h ;# 
   579  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   580                           PORTB equ 06h ;# 
   581  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   582                           PORTC equ 07h ;# 
   583  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   584                           PORTD equ 08h ;# 
   585  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   586                           PORTE equ 09h ;# 
   587  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   588                           PCLATH equ 0Ah ;# 
   589  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   590                           INTCON equ 0Bh ;# 
   591  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   592                           PIR1 equ 0Ch ;# 
   593  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   594                           PIR2 equ 0Dh ;# 
   595  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   596                           TMR1 equ 0Eh ;# 
   597  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   598                           TMR1L equ 0Eh ;# 
   599  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   600                           TMR1H equ 0Fh ;# 
   601  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   602                           T1CON equ 010h ;# 
   603  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   604                           TMR2 equ 011h ;# 
   605  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   606                           T2CON equ 012h ;# 
   607  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   608                           SSPBUF equ 013h ;# 
   609  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   610                           SSPCON equ 014h ;# 
   611  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   612                           CCPR1 equ 015h ;# 
   613  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   614                           CCPR1L equ 015h ;# 
   615  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   616                           CCPR1H equ 016h ;# 
   617  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   618                           CCP1CON equ 017h ;# 
   619  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   620                           RCSTA equ 018h ;# 
   621  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   622                           TXREG equ 019h ;# 
   623  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   624                           RCREG equ 01Ah ;# 
   625  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   626                           CCPR2 equ 01Bh ;# 
   627  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   628                           CCPR2L equ 01Bh ;# 
   629  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   630                           CCPR2H equ 01Ch ;# 
   631  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   632                           CCP2CON equ 01Dh ;# 
   633  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   634                           ADRESH equ 01Eh ;# 
   635  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   636                           ADCON0 equ 01Fh ;# 
   637  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   638                           OPTION_REG equ 081h ;# 
   639  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   640                           TRISA equ 085h ;# 
   641  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   642                           TRISB equ 086h ;# 
   643  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   644                           TRISC equ 087h ;# 
   645  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   646                           TRISD equ 088h ;# 
   647  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   648                           TRISE equ 089h ;# 
   649  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   650                           PIE1 equ 08Ch ;# 
   651  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   652                           PIE2 equ 08Dh ;# 
   653  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   654                           PCON equ 08Eh ;# 
   655  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   656                           SSPCON2 equ 091h ;# 
   657  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   658                           PR2 equ 092h ;# 
   659  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   660                           SSPADD equ 093h ;# 
   661  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   662                           SSPSTAT equ 094h ;# 
   663  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   664                           TXSTA equ 098h ;# 
   665  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   666                           SPBRG equ 099h ;# 
   667  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   668                           CMCON equ 09Ch ;# 
   669  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   670                           CVRCON equ 09Dh ;# 
   671  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   672                           ADRESL equ 09Eh ;# 
   673  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   674                           ADCON1 equ 09Fh ;# 
   675  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   676                           EEDATA equ 010Ch ;# 
   677  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   678                           EEADR equ 010Dh ;# 
   679  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   680                           EEDATH equ 010Eh ;# 
   681  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   682                           EEADRH equ 010Fh ;# 
   683  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   684                           EECON1 equ 018Ch ;# 
   685  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   686                           EECON2 equ 018Dh ;# 
   687  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   688                           INDF equ 00h ;# 
   689  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   690                           TMR0 equ 01h ;# 
   691  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   692                           PCL equ 02h ;# 
   693  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   694                           STATUS equ 03h ;# 
   695  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   696                           FSR equ 04h ;# 
   697  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   698                           PORTA equ 05h ;# 
   699  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   700                           PORTB equ 06h ;# 
   701  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   702                           PORTC equ 07h ;# 
   703  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   704                           PORTD equ 08h ;# 
   705  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   706                           PORTE equ 09h ;# 
   707  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   708                           PCLATH equ 0Ah ;# 
   709  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   710                           INTCON equ 0Bh ;# 
   711  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   712                           PIR1 equ 0Ch ;# 
   713  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   714                           PIR2 equ 0Dh ;# 
   715  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   716                           TMR1 equ 0Eh ;# 
   717  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   718                           TMR1L equ 0Eh ;# 
   719  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   720                           TMR1H equ 0Fh ;# 
   721  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   722                           T1CON equ 010h ;# 
   723  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   724                           TMR2 equ 011h ;# 
   725  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   726                           T2CON equ 012h ;# 
   727  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   728                           SSPBUF equ 013h ;# 
   729  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   730                           SSPCON equ 014h ;# 
   731  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   732                           CCPR1 equ 015h ;# 
   733  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   734                           CCPR1L equ 015h ;# 
   735  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   736                           CCPR1H equ 016h ;# 
   737  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   738                           CCP1CON equ 017h ;# 
   739  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   740                           RCSTA equ 018h ;# 
   741  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   742                           TXREG equ 019h ;# 
   743  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   744                           RCREG equ 01Ah ;# 
   745  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   746                           CCPR2 equ 01Bh ;# 
   747  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   748                           CCPR2L equ 01Bh ;# 
   749  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   750                           CCPR2H equ 01Ch ;# 
   751  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   752                           CCP2CON equ 01Dh ;# 
   753  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   754                           ADRESH equ 01Eh ;# 
   755  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   756                           ADCON0 equ 01Fh ;# 
   757  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   758                           OPTION_REG equ 081h ;# 
   759  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   760                           TRISA equ 085h ;# 
   761  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   762                           TRISB equ 086h ;# 
   763  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   764                           TRISC equ 087h ;# 
   765  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   766                           TRISD equ 088h ;# 
   767  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   768                           TRISE equ 089h ;# 
   769  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   770                           PIE1 equ 08Ch ;# 
   771  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   772                           PIE2 equ 08Dh ;# 
   773  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   774                           PCON equ 08Eh ;# 
   775  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   776                           SSPCON2 equ 091h ;# 
   777  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   778                           PR2 equ 092h ;# 
   779  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   780                           SSPADD equ 093h ;# 
   781  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   782                           SSPSTAT equ 094h ;# 
   783  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   784                           TXSTA equ 098h ;# 
   785  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   786                           SPBRG equ 099h ;# 
   787  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   788                           CMCON equ 09Ch ;# 
   789  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   790                           CVRCON equ 09Dh ;# 
   791  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   792                           ADRESL equ 09Eh ;# 
   793  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   794                           ADCON1 equ 09Fh ;# 
   795  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   796                           EEDATA equ 010Ch ;# 
   797  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   798                           EEADR equ 010Dh ;# 
   799  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   800                           EEDATH equ 010Eh ;# 
   801  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   802                           EEADRH equ 010Fh ;# 
   803  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   804                           EECON1 equ 018Ch ;# 
   805  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   806                           EECON2 equ 018Dh ;# 
   807  018D                     	FNCALL	_main,_Init_Buzzer
   808                           	FNCALL	_main,_Init_Keypad
   809                           	FNCALL	_main,_LCD_Command
   810                           	FNCALL	_main,_LCD_Init
   811                           	FNCALL	_main,_LCD_SendString
   812                           	FNCALL	_main,_RealTimeClock_init
   813                           	FNCALL	_main,_get_date_time
   814                           	FNCALL	_get_date_time,_RealTimeClock_get_time
   815                           	FNCALL	_RealTimeClock_get_time,_RealTimeClock_read_byte
   816                           	FNCALL	_RealTimeClock_get_time,_RealTimeClock_write_byte
   817                           	FNCALL	_RealTimeClock_init,_RealTimeClock_write_byte
   818                           	FNCALL	_LCD_SendString,_LCD_SendData
   819                           	FNCALL	_LCD_SendData,_LCD_Busy
   820                           	FNCALL	_LCD_Command,_LCD_Busy
   821                           	FNROOT	_main
   822                           	global	_PORT
   823                           	global	_PORTD
   824                           _PORTD	set	0x8
   825  0008                     	global	_PORTC
   826                           _PORTC	set	0x7
   827  0007                     	global	_PORTB
   828                           _PORTB	set	0x6
   829  0006                     	global	_RD7
   830                           _RD7	set	0x47
   831  0047                     	global	_RA2
   832                           _RA2	set	0x2A
   833  002A                     	global	_RA1
   834                           _RA1	set	0x29
   835  0029                     	global	_RA3
   836                           _RA3	set	0x2B
   837  002B                     	global	_RC0
   838                           _RC0	set	0x38
   839  0038                     	global	_RC1
   840                           _RC1	set	0x39
   841  0039                     	global	_RC2
   842                           _RC2	set	0x3A
   843  003A                     	global	_RC3
   844                           _RC3	set	0x3B
   845  003B                     	global	_RC7
   846                           _RC7	set	0x3F
   847  003F                     	global	_RC6
   848                           _RC6	set	0x3E
   849  003E                     	global	_RC5
   850                           _RC5	set	0x3D
   851  003D                     	global	_RC4
   852                           _RC4	set	0x3C
   853  003C                     	global	_RB5
   854                           _RB5	set	0x35
   855  0035                     	global	_RB0
   856                           _RB0	set	0x30
   857  0030                     	global	_RB4
   858                           _RB4	set	0x34
   859  0034                     	global	_ADCON1
   860                           _ADCON1	set	0x9F
   861  009F                     	global	_TRISA
   862                           _TRISA	set	0x85
   863  0085                     	global	_TRISD
   864                           _TRISD	set	0x88
   865  0088                     	global	_TRISC
   866                           _TRISC	set	0x87
   867  0087                     	global	_TRISB
   868                           _TRISB	set	0x86
   869  0086                     	global	_TRISB4
   870                           _TRISB4	set	0x434
   871  0434                     psect	strings,class=STRING,delta=2,noexec
   872                           global __pstrings
   873                           __pstrings:
   874  0003                     stringtab:
   875  0003                     	global    __stringtab
   876                           __stringtab:
   877  0003                     ;	String table - string pointers are 1 byte each
   878                           	btfsc	(btemp+1),7
   879  0003  1BFF               	ljmp	stringcode
   880  0004  280D               	bcf	status,7
   881  0005  1383               	btfsc	(btemp+1),0
   882  0006  187F               	bsf	status,7
   883  0007  1783               	movf	indf,w
   884  0008  0800               	incf fsr
   885  0009  0A84               skipnz
   886  000A  1903               incf btemp+1
   887  000B  0AFF               	return
   888  000C  0008               stringcode:stringdir:
   889  000D                     movlw high(stringdir)
      + 000D                     stringdir:	
   890  000D  3000               movwf pclath
   891  000E  008A               movf fsr,w
   892  000F  0804               incf fsr
   893  0010  0A84               	addwf pc
   894  0011  0782               	global __stringbase
   895                           __stringbase:
   896  0012                     	retlw	0
   897  0012  3400               psect	strings
   898                           	global    __end_of__stringtab
   899                           __end_of__stringtab:
   900  0013                     	
   901                           STR_1:	
   902  0013                     	retlw	68	;'D'
   903  0013  3444               	retlw	97	;'a'
   904  0014  3461               	retlw	116	;'t'
   905  0015  3474               	retlw	101	;'e'
   906  0016  3465               	retlw	58	;':'
   907  0017  343A               	retlw	32	;' '
   908  0018  3420               	retlw	0
   909  0019  3400               psect	strings
   910                           ; #config settings
   911                           global __CFG_FOSC$HS
   912                           __CFG_FOSC$HS equ 0x0
   913  0000                     global __CFG_WDTE$OFF
   914                           __CFG_WDTE$OFF equ 0x0
   915  0000                     global __CFG_PWRTE$ON
   916                           __CFG_PWRTE$ON equ 0x0
   917  0000                     global __CFG_BOREN$OFF
   918                           __CFG_BOREN$OFF equ 0x0
   919  0000                     global __CFG_LVP$OFF
   920                           __CFG_LVP$OFF equ 0x0
   921  0000                     	file	"C:\Users\515817\AppData\Local\Temp\sc74."
   922                           	line	#
   923                           psect cinit,class=CODE,delta=2
   924                           global start_initialization
   925                           start_initialization:
   926  07FB                     
   927                           global __initialization
   928                           __initialization:
   929  07FB                     psect	bssCOMMON,class=COMMON,space=1,noexec
   930                           global __pbssCOMMON
   931                           __pbssCOMMON:
   932  007C                     _PORT:
   933  007C                            ds      1
   934  007C                     
   935                           	file	"C:\Users\515817\AppData\Local\Temp\sc74."
   936                           	line	#
   937                           ; Clear objects allocated to COMMON
   938                           psect cinit,class=CODE,delta=2,merge=1
   939                           	clrf	((__pbssCOMMON)+0)&07Fh
   940  07FB  01FC               psect cinit,class=CODE,delta=2,merge=1
   941                           global end_of_initialization,__end_of__initialization
   942                           
   943                           ;End of C runtime variable initialization code
   944                           
   945                           end_of_initialization:
   946  07FC                     __end_of__initialization:
   947  07FC                     clrf status
   948  07FC  0183               ljmp _main	;jump to C main() function
   949  07FD  120A  118A  2F8F   psect	cstackCOMMON,class=COMMON,space=1,noexec
   950                           global __pcstackCOMMON
   951                           __pcstackCOMMON:
   952  0070                     ?_RealTimeClock_get_time:	; 1 bytes @ 0x0
   953  0070                     ?_Init_Buzzer:	; 1 bytes @ 0x0
   954  0070                     ?_LCD_Init:	; 1 bytes @ 0x0
   955  0070                     ??_LCD_Init:	; 1 bytes @ 0x0
   956  0070                     ?_Init_Keypad:	; 1 bytes @ 0x0
   957  0070                     ??_Init_Keypad:	; 1 bytes @ 0x0
   958  0070                     ?_RealTimeClock_init:	; 1 bytes @ 0x0
   959  0070                     ?_LCD_Command:	; 1 bytes @ 0x0
   960  0070                     ??_LCD_Command:	; 1 bytes @ 0x0
   961  0070                     ?_get_date_time:	; 1 bytes @ 0x0
   962  0070                     ?_main:	; 1 bytes @ 0x0
   963  0070                     ?_RealTimeClock_write_byte:	; 1 bytes @ 0x0
   964  0070                     ??_RealTimeClock_write_byte:	; 1 bytes @ 0x0
   965  0070                     ?_RealTimeClock_read_byte:	; 1 bytes @ 0x0
   966  0070                     ??_RealTimeClock_read_byte:	; 1 bytes @ 0x0
   967  0070                     ?_LCD_Busy:	; 1 bytes @ 0x0
   968  0070                     ??_LCD_Busy:	; 1 bytes @ 0x0
   969  0070                     ?_LCD_SendData:	; 1 bytes @ 0x0
   970  0070                     ??_LCD_SendData:	; 1 bytes @ 0x0
   971  0070                     	global	LCD_Command@c
   972                           LCD_Command@c:	; 1 bytes @ 0x0
   973  0070                     	global	LCD_SendData@c
   974                           LCD_SendData@c:	; 1 bytes @ 0x0
   975  0070                     	global	Init_Buzzer@Port
   976                           Init_Buzzer@Port:	; 2 bytes @ 0x0
   977  0070                     	ds	1
   978  0070                     ?_LCD_SendString:	; 1 bytes @ 0x1
   979  0071                     	global	LCD_SendString@string
   980                           LCD_SendString@string:	; 2 bytes @ 0x1
   981  0071                     	ds	1
   982  0071                     ??_Init_Buzzer:	; 1 bytes @ 0x2
   983  0072                     	global	RealTimeClock_write_byte@i
   984                           RealTimeClock_write_byte@i:	; 2 bytes @ 0x2
   985  0072                     	global	RealTimeClock_read_byte@i
   986                           RealTimeClock_read_byte@i:	; 2 bytes @ 0x2
   987  0072                     	ds	1
   988  0072                     ??_LCD_SendString:	; 1 bytes @ 0x3
   989  0073                     	ds	1
   990  0073                     	global	RealTimeClock_write_byte@time_tx
   991                           RealTimeClock_write_byte@time_tx:	; 1 bytes @ 0x4
   992  0074                     	global	RealTimeClock_read_byte@time_rx
   993                           RealTimeClock_read_byte@time_rx:	; 1 bytes @ 0x4
   994  0074                     	ds	1
   995  0074                     ??_RealTimeClock_get_time:	; 1 bytes @ 0x5
   996  0075                     ??_RealTimeClock_init:	; 1 bytes @ 0x5
   997  0075                     	ds	1
   998  0075                     	global	RealTimeClock_get_time@time
   999                           RealTimeClock_get_time@time:	; 1 bytes @ 0x6
  1000  0076                     	global	LCD_SendString@i
  1001                           LCD_SendString@i:	; 2 bytes @ 0x6
  1002  0076                     	ds	1
  1003  0076                     	global	RealTimeClock_get_time@i
  1004                           RealTimeClock_get_time@i:	; 2 bytes @ 0x7
  1005  0077                     	ds	2
  1006  0077                     ??_get_date_time:	; 1 bytes @ 0x9
  1007  0079                     	ds	2
  1008  0079                     ??_main:	; 1 bytes @ 0xB
  1009  007B                     	ds	1
  1010  007B                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1011                           global __pcstackBANK0
  1012                           __pcstackBANK0:
  1013  0020                     	global	get_date_time@time
  1014                           get_date_time@time:	; 7 bytes @ 0x0
  1015  0020                     	ds	7
  1016  0020                     	global	get_date_time@date_time
  1017                           get_date_time@date_time:	; 1 bytes @ 0x7
  1018  0027                     	ds	1
  1019  0027                     	global	main@Key
  1020                           main@Key:	; 1 bytes @ 0x8
  1021  0028                     	ds	1
  1022  0028                     	global	main@test
  1023                           main@test:	; 3 bytes @ 0x9
  1024  0029                     	ds	3
  1025  0029                     	global	main@Date
  1026                           main@Date:	; 1 bytes @ 0xC
  1027  002C                     	ds	1
  1028  002C                     ;!
  1029                           ;!Data Sizes:
  1030                           ;!    Strings     7
  1031                           ;!    Constant    0
  1032                           ;!    Data        0
  1033                           ;!    BSS         1
  1034                           ;!    Persistent  0
  1035                           ;!    Stack       0
  1036                           ;!
  1037                           ;!Auto Spaces:
  1038                           ;!    Space          Size  Autos    Used
  1039                           ;!    COMMON           14     12      13
  1040                           ;!    BANK0            80     13      13
  1041                           ;!    BANK1            80      0       0
  1042                           ;!    BANK3            96      0       0
  1043                           ;!    BANK2            96      0       0
  1044                           
  1045                           ;!
  1046                           ;!Pointer List with Targets:
  1047                           ;!
  1048                           ;!    PORT	PTR unsigned char  size(1) Largest target is 0
  1049                           ;!		 -> NULL(NULL[0]), 
  1050                           ;!
  1051                           ;!    Init_Buzzer@Port	PTR unsigned char  size(2) Largest target is 1
  1052                           ;!		 -> PORTB(SFR0[1]), 
  1053                           ;!
  1054                           ;!    LCD_SendString@string	PTR const unsigned char  size(2) Largest target is 7
  1055                           ;!		 -> STR_1(CODE[7]), main@test(BANK0[3]), 
  1056                           ;!
  1057                           ;!    RealTimeClock_get_time@time	PTR unsigned char  size(1) Largest target is 7
  1058                           ;!		 -> get_date_time@time(BANK0[7]), 
  1059                           ;!
  1060                           ;!    main@Date	PTR unsigned char  size(1) Largest target is 7
  1061                           ;!		 -> STR_1(CODE[7]), 
  1062                           ;!
  1063                           ;!    get_date_time@date_time	PTR unsigned char  size(1) Largest target is 3
  1064                           ;!		 -> main@test(BANK0[3]), 
  1065                           ;!
  1066                           
  1067                           
  1068                           ;!
  1069                           ;!Critical Paths under _main in COMMON
  1070                           ;!
  1071                           ;!    _main->_get_date_time
  1072                           ;!    _get_date_time->_RealTimeClock_get_time
  1073                           ;!    _RealTimeClock_get_time->_RealTimeClock_read_byte
  1074                           ;!    _RealTimeClock_get_time->_RealTimeClock_write_byte
  1075                           ;!    _RealTimeClock_init->_RealTimeClock_write_byte
  1076                           ;!    _LCD_SendString->_LCD_SendData
  1077                           ;!
  1078                           ;!Critical Paths under _main in BANK0
  1079                           ;!
  1080                           ;!    _main->_get_date_time
  1081                           ;!
  1082                           ;!Critical Paths under _main in BANK1
  1083                           ;!
  1084                           ;!    None.
  1085                           ;!
  1086                           ;!Critical Paths under _main in BANK3
  1087                           ;!
  1088                           ;!    None.
  1089                           ;!
  1090                           ;!Critical Paths under _main in BANK2
  1091                           ;!
  1092                           ;!    None.
  1093                           
  1094 ;;
  1095 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1096 ;;
  1097                           
  1098                           ;!
  1099                           ;!Call Graph Tables:
  1100                           ;!
  1101                           ;! ---------------------------------------------------------------------------------
  1102                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1103                           ;! ---------------------------------------------------------------------------------
  1104                           ;! (0) _main                                                 6     6      0    1045
  1105                           ;!                                             11 COMMON     1     1      0
  1106                           ;!                                              8 BANK0      5     5      0
  1107                           ;!                        _Init_Buzzer
  1108                           ;!                        _Init_Keypad
  1109                           ;!                        _LCD_Command
  1110                           ;!                           _LCD_Init
  1111                           ;!                     _LCD_SendString
  1112                           ;!                 _RealTimeClock_init
  1113                           ;!                      _get_date_time
  1114                           ;! ---------------------------------------------------------------------------------
  1115                           ;! (1) _get_date_time                                       10    10      0     450
  1116                           ;!                                              9 COMMON     2     2      0
  1117                           ;!                                              0 BANK0      8     8      0
  1118                           ;!             _RealTimeClock_get_time
  1119                           ;! ---------------------------------------------------------------------------------
  1120                           ;! (2) _RealTimeClock_get_time                               4     4      0     306
  1121                           ;!                                              5 COMMON     4     4      0
  1122                           ;!            _RealTimeClock_read_byte
  1123                           ;!           _RealTimeClock_write_byte
  1124                           ;! ---------------------------------------------------------------------------------
  1125                           ;! (3) _RealTimeClock_read_byte                              5     5      0      92
  1126                           ;!                                              0 COMMON     5     5      0
  1127                           ;! ---------------------------------------------------------------------------------
  1128                           ;! (1) _RealTimeClock_init                                   0     0      0      91
  1129                           ;!           _RealTimeClock_write_byte
  1130                           ;! ---------------------------------------------------------------------------------
  1131                           ;! (3) _RealTimeClock_write_byte                             5     5      0      91
  1132                           ;!                                              0 COMMON     5     5      0
  1133                           ;! ---------------------------------------------------------------------------------
  1134                           ;! (1) _LCD_SendString                                       7     5      2     264
  1135                           ;!                                              1 COMMON     7     5      2
  1136                           ;!                       _LCD_SendData
  1137                           ;! ---------------------------------------------------------------------------------
  1138                           ;! (2) _LCD_SendData                                         1     1      0      22
  1139                           ;!                                              0 COMMON     1     1      0
  1140                           ;!                           _LCD_Busy
  1141                           ;! ---------------------------------------------------------------------------------
  1142                           ;! (1) _LCD_Init                                             0     0      0       0
  1143                           ;! ---------------------------------------------------------------------------------
  1144                           ;! (1) _LCD_Command                                          1     1      0      22
  1145                           ;!                                              0 COMMON     1     1      0
  1146                           ;!                           _LCD_Busy
  1147                           ;! ---------------------------------------------------------------------------------
  1148                           ;! (3) _LCD_Busy                                             0     0      0       0
  1149                           ;! ---------------------------------------------------------------------------------
  1150                           ;! (1) _Init_Keypad                                          0     0      0       0
  1151                           ;! ---------------------------------------------------------------------------------
  1152                           ;! (1) _Init_Buzzer                                          3     1      2     120
  1153                           ;!                                              0 COMMON     3     1      2
  1154                           ;! ---------------------------------------------------------------------------------
  1155                           ;! Estimated maximum stack depth 3
  1156                           ;! ---------------------------------------------------------------------------------
  1157                           ;!
  1158                           ;! Call Graph Graphs:
  1159                           ;!
  1160                           ;! _main (ROOT)
  1161                           ;!   _Init_Buzzer
  1162                           ;!   _Init_Keypad
  1163                           ;!   _LCD_Command
  1164                           ;!     _LCD_Busy
  1165                           ;!   _LCD_Init
  1166                           ;!   _LCD_SendString
  1167                           ;!     _LCD_SendData
  1168                           ;!       _LCD_Busy
  1169                           ;!   _RealTimeClock_init
  1170                           ;!     _RealTimeClock_write_byte
  1171                           ;!   _get_date_time
  1172                           ;!     _RealTimeClock_get_time
  1173                           ;!       _RealTimeClock_read_byte
  1174                           ;!       _RealTimeClock_write_byte
  1175                           ;!
  1176                           
  1177                           ;! Address spaces:
  1178                           
  1179                           ;!Name               Size   Autos  Total    Cost      Usage
  1180                           ;!BITCOMMON            E      0       0       0        0.0%
  1181                           ;!EEDATA             100      0       0       0        0.0%
  1182                           ;!NULL                 0      0       0       0        0.0%
  1183                           ;!CODE                 0      0       0       0        0.0%
  1184                           ;!COMMON               E      C       D       1       92.9%
  1185                           ;!BITSFR0              0      0       0       1        0.0%
  1186                           ;!SFR0                 0      0       0       1        0.0%
  1187                           ;!BITSFR1              0      0       0       2        0.0%
  1188                           ;!SFR1                 0      0       0       2        0.0%
  1189                           ;!STACK                0      0       0       2        0.0%
  1190                           ;!ABS                  0      0      1A       3        0.0%
  1191                           ;!BITBANK0            50      0       0       4        0.0%
  1192                           ;!BITSFR3              0      0       0       4        0.0%
  1193                           ;!SFR3                 0      0       0       4        0.0%
  1194                           ;!BANK0               50      D       D       5       16.3%
  1195                           ;!BITSFR2              0      0       0       5        0.0%
  1196                           ;!SFR2                 0      0       0       5        0.0%
  1197                           ;!BITBANK1            50      0       0       6        0.0%
  1198                           ;!BANK1               50      0       0       7        0.0%
  1199                           ;!BITBANK3            60      0       0       8        0.0%
  1200                           ;!BANK3               60      0       0       9        0.0%
  1201                           ;!BITBANK2            60      0       0      10        0.0%
  1202                           ;!BANK2               60      0       0      11        0.0%
  1203                           ;!DATA                 0      0      1A      12        0.0%
  1204                           
  1205                           	global	_main
  1206                           
  1207 ;; *************** function _main *****************
  1208 ;; Defined at:
  1209 ;;		line 34 in file "main.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;  test            3    9[BANK0 ] unsigned char [3]
  1214 ;;  Date            1   12[BANK0 ] PTR unsigned char 
  1215 ;;		 -> STR_1(7), 
  1216 ;;  Key             1    8[BANK0 ] unsigned char 
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : B00/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       5       0       0       0
  1228 ;;      Temps:          1       0       0       0       0
  1229 ;;      Totals:         1       5       0       0       0
  1230 ;;Total ram usage:        6 bytes
  1231 ;; Hardware stack levels required when called:    3
  1232 ;; This function calls:
  1233 ;;		_Init_Buzzer
  1234 ;;		_Init_Keypad
  1235 ;;		_LCD_Command
  1236 ;;		_LCD_Init
  1237 ;;		_LCD_SendString
  1238 ;;		_RealTimeClock_init
  1239 ;;		_get_date_time
  1240 ;; This function is called by:
  1241 ;;		Startup code after reset
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1245                           	file	"main.c"
  1246                           	line	34
  1247                           global __pmaintext
  1248                           __pmaintext:	;psect for function _main
  1249  078F                     psect	maintext
  1250                           	file	"main.c"
  1251                           	line	34
  1252                           	global	__size_of_main
  1253                           	__size_of_main	equ	__end_of_main-_main
  1254  006C                     	
  1255                           _main:	
  1256  078F                     ;incstack = 0
  1257                           	opt	stack 5
  1258                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1259                           	line	35
  1260                           	
  1261                           l1186:	
  1262  078F                     ;main.c: 35: 
  1263                           	movlw	low(6)
  1264  078F  3006               	movwf	(Init_Buzzer@Port)
  1265  0790  00F0               	movlw	high(6)
  1266  0791  3000               	movwf	((Init_Buzzer@Port))+1
  1267  0792  00F1               	fcall	_Init_Buzzer
  1268  0793  120A  118A  262D  120A  118A  	line	36
  1269                           	
  1270                           l1188:	
  1271  0798                     ;main.c: 36: 
  1272                           	bsf	status, 5	;RP0=1, select bank1
  1273  0798  1683               	bcf	status, 6	;RP1=0, select bank1
  1274  0799  1303               	clrf	(134)^080h	;volatile
  1275  079A  0186               	line	37
  1276                           	
  1277                           l1190:	
  1278  079B                     ;main.c: 37: 
  1279                           	fcall	_LCD_Init
  1280  079B  120A  118A  2600  120A  118A  	line	38
  1281                           	
  1282                           l1192:	
  1283  07A0                     ;main.c: 38:     }
  1284                           	fcall	_Init_Keypad
  1285  07A0  120A  118A  2607  120A  118A  	line	39
  1286                           	
  1287                           l1194:	
  1288  07A5                     ;main.c: 39: }
  1289                           	fcall	_RealTimeClock_init
  1290  07A5  120A  118A  2655  120A  118A  	line	41
  1291                           	
  1292                           l1196:	
  1293  07AA                     	bcf	status, 5	;RP0=0, select bank0
  1294  07AA  1283               	bcf	status, 6	;RP1=0, select bank0
  1295  07AB  1303               	clrf	0+(main@test)+02h
  1296  07AC  01AB               	line	42
  1297                           	
  1298                           l1198:	
  1299  07AD                     	movlw	low(06Eh)
  1300  07AD  306E               	movwf	(??_main+0)+0
  1301  07AE  00FB               	movf	(??_main+0)+0,w
  1302  07AF  087B               	movwf	(main@Key)
  1303  07B0  00A8               	line	43
  1304                           	
  1305                           l1200:	
  1306  07B1                     	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1307  07B1  3001               	movwf	(??_main+0)+0
  1308  07B2  00FB               	movf	(??_main+0)+0,w
  1309  07B3  087B               	movwf	(main@Date)
  1310  07B4  00AC               	line	44
  1311                           	
  1312                           l1202:	
  1313  07B5                     	movlw	low(0Ch)
  1314  07B5  300C               	fcall	_LCD_Command
  1315  07B6  120A  118A  260F  120A  118A  	line	45
  1316                           	
  1317                           l1204:	
  1318  07BB                     	movlw	low(01h)
  1319  07BB  3001               	fcall	_LCD_Command
  1320  07BC  120A  118A  260F  120A  118A  	line	46
  1321                           	
  1322                           l1206:	
  1323  07C1                     	movlw	low(03h)
  1324  07C1  3003               	fcall	_LCD_Command
  1325  07C2  120A  118A  260F  120A  118A  	line	47
  1326                           	
  1327                           l1208:	
  1328  07C7                     	movlw	low(038h)
  1329  07C7  3038               	fcall	_LCD_Command
  1330  07C8  120A  118A  260F  120A  118A  	goto	l1210
  1331  07CD  2FCE               	line	48
  1332                           	
  1333                           l26:	
  1334  07CE                     	line	51
  1335                           	
  1336                           l1210:	
  1337  07CE                     	movlw	low(03h)
  1338  07CE  3003               	fcall	_LCD_Command
  1339  07CF  120A  118A  260F  120A  118A  	line	52
  1340                           	bcf	status, 5	;RP0=0, select bank0
  1341  07D4  1283               	bcf	status, 6	;RP1=0, select bank0
  1342  07D5  1303               		movf	(main@Date),w
  1343  07D6  082C               	movwf	(LCD_SendString@string)
  1344  07D7  00F1               	movlw	0
  1345  07D8  3000               	btfss	status,2
  1346  07D9  1D03               	movlw	080h
  1347  07DA  3080               	movwf	(LCD_SendString@string+1)
  1348  07DB  00F2               
  1349                           	fcall	_LCD_SendString
  1350  07DC  120A  118A  274B  120A  118A  	line	53
  1351                           	
  1352                           l1212:	
  1353  07E1                     	movlw	low(014h)
  1354  07E1  3014               	fcall	_LCD_Command
  1355  07E2  120A  118A  260F  120A  118A  	line	54
  1356                           	
  1357                           l1214:	
  1358  07E7                     	movlw	(low(main@test|((0x0)<<8)))&0ffh
  1359  07E7  3029               	fcall	_get_date_time
  1360  07E8  120A  118A  266C  120A  118A  	line	56
  1361                           	
  1362                           l1216:	
  1363  07ED                     	movlw	(low(main@test|((0x0)<<8))&0ffh)
  1364  07ED  3029               	movwf	(LCD_SendString@string)
  1365  07EE  00F1               	movlw	(0x0)
  1366  07EF  3000               	movwf	(LCD_SendString@string+1)
  1367  07F0  00F2               	fcall	_LCD_SendString
  1368  07F1  120A  118A  274B  120A  118A  	goto	l1210
  1369  07F6  2FCE               	line	60
  1370                           	
  1371                           l27:	
  1372  07F7                     	goto	l1210
  1373  07F7  2FCE               	
  1374                           l28:	
  1375  07F8                     	line	61
  1376                           	
  1377                           l29:	
  1378  07F8                     	global	start
  1379                           	ljmp	start
  1380  07F8  120A  118A  2800   	opt stack 0
  1381                           GLOBAL	__end_of_main
  1382                           	__end_of_main:
  1383  07FB                     	signat	_main,89
  1384                           	global	_get_date_time
  1385                           
  1386 ;; *************** function _get_date_time *****************
  1387 ;; Defined at:
  1388 ;;		line 26 in file "main.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  date_time       1    wreg     PTR unsigned char 
  1391 ;;		 -> main@test(3), 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  date_time       1    7[BANK0 ] PTR unsigned char 
  1394 ;;		 -> main@test(3), 
  1395 ;;  time            7    0[BANK0 ] unsigned char [7]
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      void 
  1398 ;; Registers used:
  1399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1405 ;;      Params:         0       0       0       0       0
  1406 ;;      Locals:         0       8       0       0       0
  1407 ;;      Temps:          2       0       0       0       0
  1408 ;;      Totals:         2       8       0       0       0
  1409 ;;Total ram usage:       10 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:    2
  1412 ;; This function calls:
  1413 ;;		_RealTimeClock_get_time
  1414 ;; This function is called by:
  1415 ;;		_main
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1419                           	line	26
  1420                           global __ptext1
  1421                           __ptext1:	;psect for function _get_date_time
  1422  066C                     psect	text1
  1423                           	file	"main.c"
  1424                           	line	26
  1425                           	global	__size_of_get_date_time
  1426                           	__size_of_get_date_time	equ	__end_of_get_date_time-_get_date_time
  1427  0025                     	
  1428                           _get_date_time:	
  1429  066C                     ;incstack = 0
  1430                           	opt	stack 5
  1431                           ; Regs used in _get_date_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1432                           ;get_date_time@date_time stored from wreg
  1433                           	bcf	status, 5	;RP0=0, select bank0
  1434  066C  1283               	bcf	status, 6	;RP1=0, select bank0
  1435  066D  1303               	movwf	(get_date_time@date_time)
  1436  066E  00A7               	line	28
  1437                           	
  1438                           l1140:	
  1439  066F                     ;main.c: 27:     {;main.c: 28: 
  1440                           	movlw	(low(get_date_time@time|((0x0)<<8)))&0ffh
  1441  066F  3020               	fcall	_RealTimeClock_get_time
  1442  0670  120A  118A  26CC  120A  118A  	line	29
  1443                           	
  1444                           l1142:	
  1445  0675                     ;main.c: 29:     LCD_Command(0x03);
  1446                           	bcf	status, 5	;RP0=0, select bank0
  1447  0675  1283               	bcf	status, 6	;RP1=0, select bank0
  1448  0676  1303               	movf	(get_date_time@time),w
  1449  0677  0820               	movwf	(??_get_date_time+0)+0
  1450  0678  00F9               	movlw	04h
  1451  0679  3004               u595:
  1452  067A                     	clrc
  1453  067A  1003               	rrf	(??_get_date_time+0)+0,f
  1454  067B  0CF9               	addlw	-1
  1455  067C  3EFF               	skipz
  1456  067D  1D03               	goto	u595
  1457  067E  2E7A               	movf	0+(??_get_date_time+0)+0,w
  1458  067F  0879               	andlw	07h
  1459  0680  3907               	addlw	030h
  1460  0681  3E30               	movwf	(??_get_date_time+1)+0
  1461  0682  00FA               	movf	(get_date_time@date_time),w
  1462  0683  0827               	movwf	fsr0
  1463  0684  0084               	movf	(??_get_date_time+1)+0,w
  1464  0685  087A               	bcf	status, 7	;select IRP bank0
  1465  0686  1383               	movwf	indf
  1466  0687  0080               	line	30
  1467                           	
  1468                           l1144:	
  1469  0688                     ;main.c: 30:     LCD_SendString(Date);
  1470                           	movf	(get_date_time@time),w
  1471  0688  0820               	andlw	0Fh
  1472  0689  390F               	addlw	030h
  1473  068A  3E30               	movwf	(??_get_date_time+0)+0
  1474  068B  00F9               	incf	(get_date_time@date_time),w
  1475  068C  0A27               	movwf	fsr0
  1476  068D  0084               	movf	(??_get_date_time+0)+0,w
  1477  068E  0879               	movwf	indf
  1478  068F  0080               	line	32
  1479                           	
  1480                           l21:	
  1481  0690                     	return
  1482  0690  0008               	opt stack 0
  1483                           GLOBAL	__end_of_get_date_time
  1484                           	__end_of_get_date_time:
  1485  0691                     	signat	_get_date_time,4217
  1486                           	global	_RealTimeClock_get_time
  1487                           
  1488 ;; *************** function _RealTimeClock_get_time *****************
  1489 ;; Defined at:
  1490 ;;		line 38 in file "realtimeclock.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  time            1    wreg     PTR unsigned char 
  1493 ;;		 -> get_date_time@time(7), 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  time            1    6[COMMON] PTR unsigned char 
  1496 ;;		 -> get_date_time@time(7), 
  1497 ;;  i               2    7[COMMON] int 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         0       0       0       0       0
  1508 ;;      Locals:         3       0       0       0       0
  1509 ;;      Temps:          1       0       0       0       0
  1510 ;;      Totals:         4       0       0       0       0
  1511 ;;Total ram usage:        4 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    1
  1514 ;; This function calls:
  1515 ;;		_RealTimeClock_read_byte
  1516 ;;		_RealTimeClock_write_byte
  1517 ;; This function is called by:
  1518 ;;		_get_date_time
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1522                           	file	"realtimeclock.c"
  1523                           	line	38
  1524                           global __ptext2
  1525                           __ptext2:	;psect for function _RealTimeClock_get_time
  1526  06CC                     psect	text2
  1527                           	file	"realtimeclock.c"
  1528                           	line	38
  1529                           	global	__size_of_RealTimeClock_get_time
  1530                           	__size_of_RealTimeClock_get_time	equ	__end_of_RealTimeClock_get_time-_RealTimeClock_get
                                 _time
  1531  003E                     	
  1532                           _RealTimeClock_get_time:	
  1533  06CC                     ;incstack = 0
  1534                           	opt	stack 5
  1535                           ; Regs used in _RealTimeClock_get_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
                                 ack]
  1536                           ;RealTimeClock_get_time@time stored from wreg
  1537                           	movwf	(RealTimeClock_get_time@time)
  1538  06CC  00F6               	line	39
  1539                           	
  1540                           l1116:	
  1541  06CD                     ;realtimeclock.c: 39:     RB5 = 1;
  1542                           	bcf	status, 5	;RP0=0, select bank0
  1543  06CD  1283               	bcf	status, 6	;RP1=0, select bank0
  1544  06CE  1303               	bsf	(53/8),(53)&7	;volatile
  1545  06CF  1686               	line	40
  1546                           	
  1547                           l1118:	
  1548  06D0                     ;realtimeclock.c: 40:     RealTimeClock_write_byte(0xbf);
  1549                           	movlw	low(0BFh)
  1550  06D0  30BF               	fcall	_RealTimeClock_write_byte
  1551  06D1  120A  118A  2691  120A  118A  	line	41
  1552                           	
  1553                           l1120:	
  1554  06D6                     ;realtimeclock.c: 41:     for(int i = 0; i < 7; ++i) {
  1555                           	clrf	(RealTimeClock_get_time@i)
  1556  06D6  01F7               	clrf	(RealTimeClock_get_time@i+1)
  1557  06D7  01F8               	
  1558                           l1122:	
  1559  06D8                     	movf	(RealTimeClock_get_time@i+1),w
  1560  06D8  0878               	xorlw	80h
  1561  06D9  3A80               	movwf	btemp+1
  1562  06DA  00FF               	movlw	(0)^80h
  1563  06DB  3080               	subwf	btemp+1,w
  1564  06DC  027F               	skipz
  1565  06DD  1D03               	goto	u575
  1566  06DE  2EE1               	movlw	07h
  1567  06DF  3007               	subwf	(RealTimeClock_get_time@i),w
  1568  06E0  0277               u575:
  1569  06E1                     
  1570                           	skipc
  1571  06E1  1C03               	goto	u571
  1572  06E2  2EE4               	goto	u570
  1573  06E3  2EE5               u571:
  1574  06E4                     	goto	l1126
  1575  06E4  2EE7               u570:
  1576  06E5                     	goto	l59
  1577  06E5  2F06               	
  1578                           l1124:	
  1579  06E6                     	goto	l59
  1580  06E6  2F06               	
  1581                           l58:	
  1582  06E7                     	line	42
  1583                           	
  1584                           l1126:	
  1585  06E7                     ;realtimeclock.c: 42:         RealTimeClock_read_byte(time[i]);
  1586                           	movf	(RealTimeClock_get_time@i),w
  1587  06E7  0877               	addwf	(RealTimeClock_get_time@time),w
  1588  06E8  0776               	movwf	(??_RealTimeClock_get_time+0)+0
  1589  06E9  00F5               	movf	0+(??_RealTimeClock_get_time+0)+0,w
  1590  06EA  0875               	movwf	fsr0
  1591  06EB  0084               	bcf	status, 7	;select IRP bank0
  1592  06EC  1383               	movf	indf,w
  1593  06ED  0800               	fcall	_RealTimeClock_read_byte
  1594  06EE  120A  118A  270A  120A  118A  	line	43
  1595                           	
  1596                           l1128:	
  1597  06F3                     ;realtimeclock.c: 43:     }
  1598                           	movlw	01h
  1599  06F3  3001               	addwf	(RealTimeClock_get_time@i),f
  1600  06F4  07F7               	skipnc
  1601  06F5  1803               	incf	(RealTimeClock_get_time@i+1),f
  1602  06F6  0AF8               	movlw	0
  1603  06F7  3000               	addwf	(RealTimeClock_get_time@i+1),f
  1604  06F8  07F8               	
  1605                           l1130:	
  1606  06F9                     	movf	(RealTimeClock_get_time@i+1),w
  1607  06F9  0878               	xorlw	80h
  1608  06FA  3A80               	movwf	btemp+1
  1609  06FB  00FF               	movlw	(0)^80h
  1610  06FC  3080               	subwf	btemp+1,w
  1611  06FD  027F               	skipz
  1612  06FE  1D03               	goto	u585
  1613  06FF  2F02               	movlw	07h
  1614  0700  3007               	subwf	(RealTimeClock_get_time@i),w
  1615  0701  0277               u585:
  1616  0702                     
  1617                           	skipc
  1618  0702  1C03               	goto	u581
  1619  0703  2F05               	goto	u580
  1620  0704  2F06               u581:
  1621  0705                     	goto	l1126
  1622  0705  2EE7               u580:
  1623  0706                     	
  1624                           l59:	
  1625  0706                     	line	44
  1626                           ;realtimeclock.c: 44:     RB5 = 0;
  1627                           	bcf	status, 5	;RP0=0, select bank0
  1628  0706  1283               	bcf	status, 6	;RP1=0, select bank0
  1629  0707  1303               	bcf	(53/8),(53)&7	;volatile
  1630  0708  1286               	line	45
  1631                           	
  1632                           l60:	
  1633  0709                     	return
  1634  0709  0008               	opt stack 0
  1635                           GLOBAL	__end_of_RealTimeClock_get_time
  1636                           	__end_of_RealTimeClock_get_time:
  1637  070A                     	signat	_RealTimeClock_get_time,4217
  1638                           	global	_RealTimeClock_read_byte
  1639                           
  1640 ;; *************** function _RealTimeClock_read_byte *****************
  1641 ;; Defined at:
  1642 ;;		line 17 in file "realtimeclock.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  time_rx         1    wreg     unsigned char 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  time_rx         1    4[COMMON] unsigned char 
  1647 ;;  i               2    2[COMMON] int 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0, btemp+1
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1657 ;;      Params:         0       0       0       0       0
  1658 ;;      Locals:         3       0       0       0       0
  1659 ;;      Temps:          2       0       0       0       0
  1660 ;;      Totals:         5       0       0       0       0
  1661 ;;Total ram usage:        5 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_RealTimeClock_get_time
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1670                           	line	17
  1671                           global __ptext3
  1672                           __ptext3:	;psect for function _RealTimeClock_read_byte
  1673  070A                     psect	text3
  1674                           	file	"realtimeclock.c"
  1675                           	line	17
  1676                           	global	__size_of_RealTimeClock_read_byte
  1677                           	__size_of_RealTimeClock_read_byte	equ	__end_of_RealTimeClock_read_byte-_RealTimeClock_r
                                 ead_byte
  1678  0041                     	
  1679                           _RealTimeClock_read_byte:	
  1680  070A                     ;incstack = 0
  1681                           	opt	stack 5
  1682                           ; Regs used in _RealTimeClock_read_byte: [wreg+status,2+status,0+btemp+1]
  1683                           ;RealTimeClock_read_byte@time_rx stored from wreg
  1684                           	movwf	(RealTimeClock_read_byte@time_rx)
  1685  070A  00F4               	line	18
  1686                           	
  1687                           l1090:	
  1688  070B                     ;realtimeclock.c: 18:     TRISB4 = 1;
  1689                           	bsf	status, 5	;RP0=1, select bank1
  1690  070B  1683               	bcf	status, 6	;RP1=0, select bank1
  1691  070C  1303               	bsf	(1076/8)^080h,(1076)&7	;volatile
  1692  070D  1606               	line	19
  1693                           	
  1694                           l1092:	
  1695  070E                     ;realtimeclock.c: 19:     for(int i = 0; i < 8; ++i) {
  1696                           	clrf	(RealTimeClock_read_byte@i)
  1697  070E  01F2               	clrf	(RealTimeClock_read_byte@i+1)
  1698  070F  01F3               	
  1699                           l1094:	
  1700  0710                     	movf	(RealTimeClock_read_byte@i+1),w
  1701  0710  0873               	xorlw	80h
  1702  0711  3A80               	movwf	btemp+1
  1703  0712  00FF               	movlw	(0)^80h
  1704  0713  3080               	subwf	btemp+1,w
  1705  0714  027F               	skipz
  1706  0715  1D03               	goto	u545
  1707  0716  2F19               	movlw	08h
  1708  0717  3008               	subwf	(RealTimeClock_read_byte@i),w
  1709  0718  0272               u545:
  1710  0719                     
  1711                           	skipc
  1712  0719  1C03               	goto	u541
  1713  071A  2F1C               	goto	u540
  1714  071B  2F1D               u541:
  1715  071C                     	goto	l48
  1716  071C  2F1F               u540:
  1717  071D                     	goto	l49
  1718  071D  2F44               	
  1719                           l1096:	
  1720  071E                     	goto	l49
  1721  071E  2F44               	
  1722                           l48:	
  1723  071F                     	line	20
  1724                           ;realtimeclock.c: 20:         RB0 = 0;
  1725                           	bcf	status, 5	;RP0=0, select bank0
  1726  071F  1283               	bcf	status, 6	;RP1=0, select bank0
  1727  0720  1303               	bcf	(48/8),(48)&7	;volatile
  1728  0721  1006               	line	21
  1729                           	
  1730                           l1098:	
  1731  0722                     ;realtimeclock.c: 21:         time_rx = time_rx >> 1;
  1732                           	movf	(RealTimeClock_read_byte@time_rx),w
  1733  0722  0874               	movwf	(??_RealTimeClock_read_byte+0)+0
  1734  0723  00F0               	clrc
  1735  0724  1003               	rrf	(??_RealTimeClock_read_byte+0)+0,w
  1736  0725  0C70               	movwf	(??_RealTimeClock_read_byte+1)+0
  1737  0726  00F1               	movf	(??_RealTimeClock_read_byte+1)+0,w
  1738  0727  0871               	movwf	(RealTimeClock_read_byte@time_rx)
  1739  0728  00F4               	line	22
  1740                           ;realtimeclock.c: 22:         time_rx = time_rx | (((unsigned char)RB4) << 7);
  1741                           	movlw	0
  1742  0729  3000               	btfsc	(52/8),(52)&7	;volatile
  1743  072A  1A06               	movlw	(1 << (07h))
  1744  072B  3080               	iorwf	(RealTimeClock_read_byte@time_rx),w
  1745  072C  0474               	movwf	(??_RealTimeClock_read_byte+0)+0
  1746  072D  00F0               	movf	(??_RealTimeClock_read_byte+0)+0,w
  1747  072E  0870               	movwf	(RealTimeClock_read_byte@time_rx)
  1748  072F  00F4               	line	23
  1749                           	
  1750                           l1100:	
  1751  0730                     ;realtimeclock.c: 23:         RB0 = 1;
  1752                           	bsf	(48/8),(48)&7	;volatile
  1753  0730  1406               	line	24
  1754                           	
  1755                           l1102:	
  1756  0731                     ;realtimeclock.c: 24:     }
  1757                           	movlw	01h
  1758  0731  3001               	addwf	(RealTimeClock_read_byte@i),f
  1759  0732  07F2               	skipnc
  1760  0733  1803               	incf	(RealTimeClock_read_byte@i+1),f
  1761  0734  0AF3               	movlw	0
  1762  0735  3000               	addwf	(RealTimeClock_read_byte@i+1),f
  1763  0736  07F3               	
  1764                           l1104:	
  1765  0737                     	movf	(RealTimeClock_read_byte@i+1),w
  1766  0737  0873               	xorlw	80h
  1767  0738  3A80               	movwf	btemp+1
  1768  0739  00FF               	movlw	(0)^80h
  1769  073A  3080               	subwf	btemp+1,w
  1770  073B  027F               	skipz
  1771  073C  1D03               	goto	u555
  1772  073D  2F40               	movlw	08h
  1773  073E  3008               	subwf	(RealTimeClock_read_byte@i),w
  1774  073F  0272               u555:
  1775  0740                     
  1776                           	skipc
  1777  0740  1C03               	goto	u551
  1778  0741  2F43               	goto	u550
  1779  0742  2F44               u551:
  1780  0743                     	goto	l48
  1781  0743  2F1F               u550:
  1782  0744                     	
  1783                           l49:	
  1784  0744                     	line	25
  1785                           ;realtimeclock.c: 25:     TRISB4 = 0;
  1786                           	bsf	status, 5	;RP0=1, select bank1
  1787  0744  1683               	bcf	status, 6	;RP1=0, select bank1
  1788  0745  1303               	bcf	(1076/8)^080h,(1076)&7	;volatile
  1789  0746  1206               	line	26
  1790                           ;realtimeclock.c: 26:     RB0 = 0;
  1791                           	bcf	status, 5	;RP0=0, select bank0
  1792  0747  1283               	bcf	status, 6	;RP1=0, select bank0
  1793  0748  1303               	bcf	(48/8),(48)&7	;volatile
  1794  0749  1006               	line	27
  1795                           	
  1796                           l50:	
  1797  074A                     	return
  1798  074A  0008               	opt stack 0
  1799                           GLOBAL	__end_of_RealTimeClock_read_byte
  1800                           	__end_of_RealTimeClock_read_byte:
  1801  074B                     	signat	_RealTimeClock_read_byte,4217
  1802                           	global	_RealTimeClock_init
  1803                           
  1804 ;; *************** function _RealTimeClock_init *****************
  1805 ;; Defined at:
  1806 ;;		line 47 in file "realtimeclock.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1820 ;;      Params:         0       0       0       0       0
  1821 ;;      Locals:         0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0
  1823 ;;      Totals:         0       0       0       0       0
  1824 ;;Total ram usage:        0 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    1
  1827 ;; This function calls:
  1828 ;;		_RealTimeClock_write_byte
  1829 ;; This function is called by:
  1830 ;;		_main
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1834                           	line	47
  1835                           global __ptext4
  1836                           __ptext4:	;psect for function _RealTimeClock_init
  1837  0655                     psect	text4
  1838                           	file	"realtimeclock.c"
  1839                           	line	47
  1840                           	global	__size_of_RealTimeClock_init
  1841                           	__size_of_RealTimeClock_init	equ	__end_of_RealTimeClock_init-_RealTimeClock_init
  1842  0017                     	
  1843                           _RealTimeClock_init:	
  1844  0655                     ;incstack = 0
  1845                           	opt	stack 6
  1846                           ; Regs used in _RealTimeClock_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1847                           	line	48
  1848                           	
  1849                           l1158:	
  1850  0655                     ;realtimeclock.c: 48:     TRISB = 0x00;
  1851                           	bsf	status, 5	;RP0=1, select bank1
  1852  0655  1683               	bcf	status, 6	;RP1=0, select bank1
  1853  0656  1303               	clrf	(134)^080h	;volatile
  1854  0657  0186               	line	49
  1855                           	
  1856                           l1160:	
  1857  0658                     ;realtimeclock.c: 49:     RB0 = 0;
  1858                           	bcf	status, 5	;RP0=0, select bank0
  1859  0658  1283               	bcf	status, 6	;RP1=0, select bank0
  1860  0659  1303               	bcf	(48/8),(48)&7	;volatile
  1861  065A  1006               	line	50
  1862                           	
  1863                           l1162:	
  1864  065B                     ;realtimeclock.c: 50:     RB5 = 1;
  1865                           	bsf	(53/8),(53)&7	;volatile
  1866  065B  1686               	line	51
  1867                           	
  1868                           l1164:	
  1869  065C                     ;realtimeclock.c: 51:     RealTimeClock_write_byte(0x8e);
  1870                           	movlw	low(08Eh)
  1871  065C  308E               	fcall	_RealTimeClock_write_byte
  1872  065D  120A  118A  2691  120A  118A  	line	52
  1873                           	
  1874                           l1166:	
  1875  0662                     ;realtimeclock.c: 52:     RealTimeClock_write_byte(0x00);
  1876                           	movlw	low(0)
  1877  0662  3000               	fcall	_RealTimeClock_write_byte
  1878  0663  120A  118A  2691  120A  118A  	line	53
  1879                           	
  1880                           l1168:	
  1881  0668                     ;realtimeclock.c: 53:     RB5 = 0;
  1882                           	bcf	status, 5	;RP0=0, select bank0
  1883  0668  1283               	bcf	status, 6	;RP1=0, select bank0
  1884  0669  1303               	bcf	(53/8),(53)&7	;volatile
  1885  066A  1286               	line	54
  1886                           	
  1887                           l63:	
  1888  066B                     	return
  1889  066B  0008               	opt stack 0
  1890                           GLOBAL	__end_of_RealTimeClock_init
  1891                           	__end_of_RealTimeClock_init:
  1892  066C                     	signat	_RealTimeClock_init,89
  1893                           	global	_RealTimeClock_write_byte
  1894                           
  1895 ;; *************** function _RealTimeClock_write_byte *****************
  1896 ;; Defined at:
  1897 ;;		line 4 in file "realtimeclock.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  time_tx         1    wreg     unsigned char 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  time_tx         1    4[COMMON] unsigned char 
  1902 ;;  i               2    2[COMMON] int 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0, btemp+1
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         0       0       0       0       0
  1913 ;;      Locals:         3       0       0       0       0
  1914 ;;      Temps:          2       0       0       0       0
  1915 ;;      Totals:         5       0       0       0       0
  1916 ;;Total ram usage:        5 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_RealTimeClock_get_time
  1922 ;;		_RealTimeClock_init
  1923 ;;		_RealTimeClock_set_time
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1927                           	line	4
  1928                           global __ptext5
  1929                           __ptext5:	;psect for function _RealTimeClock_write_byte
  1930  0691                     psect	text5
  1931                           	file	"realtimeclock.c"
  1932                           	line	4
  1933                           	global	__size_of_RealTimeClock_write_byte
  1934                           	__size_of_RealTimeClock_write_byte	equ	__end_of_RealTimeClock_write_byte-_RealTimeClock
                                 _write_byte
  1935  003B                     	
  1936                           _RealTimeClock_write_byte:	
  1937  0691                     ;incstack = 0
  1938                           	opt	stack 5
  1939                           ; Regs used in _RealTimeClock_write_byte: [wreg+status,2+status,0+btemp+1]
  1940                           ;RealTimeClock_write_byte@time_tx stored from wreg
  1941                           	movwf	(RealTimeClock_write_byte@time_tx)
  1942  0691  00F4               	line	5
  1943                           	
  1944                           l1074:	
  1945  0692                     ;realtimeclock.c: 5:     for(int i = 0; i < 8; ++i) {
  1946                           	clrf	(RealTimeClock_write_byte@i)
  1947  0692  01F2               	clrf	(RealTimeClock_write_byte@i+1)
  1948  0693  01F3               	
  1949                           l1076:	
  1950  0694                     	movf	(RealTimeClock_write_byte@i+1),w
  1951  0694  0873               	xorlw	80h
  1952  0695  3A80               	movwf	btemp+1
  1953  0696  00FF               	movlw	(0)^80h
  1954  0697  3080               	subwf	btemp+1,w
  1955  0698  027F               	skipz
  1956  0699  1D03               	goto	u515
  1957  069A  2E9D               	movlw	08h
  1958  069B  3008               	subwf	(RealTimeClock_write_byte@i),w
  1959  069C  0272               u515:
  1960  069D                     
  1961                           	skipc
  1962  069D  1C03               	goto	u511
  1963  069E  2EA0               	goto	u510
  1964  069F  2EA1               u511:
  1965  06A0                     	goto	l42
  1966  06A0  2EA3               u510:
  1967  06A1                     	goto	l43
  1968  06A1  2EC8               	
  1969                           l1078:	
  1970  06A2                     	goto	l43
  1971  06A2  2EC8               	
  1972                           l42:	
  1973  06A3                     	line	6
  1974                           ;realtimeclock.c: 6:         RB4 = 0;
  1975                           	bcf	status, 5	;RP0=0, select bank0
  1976  06A3  1283               	bcf	status, 6	;RP1=0, select bank0
  1977  06A4  1303               	bcf	(52/8),(52)&7	;volatile
  1978  06A5  1206               	line	7
  1979                           ;realtimeclock.c: 7:         RB0 = 0;
  1980                           	bcf	(48/8),(48)&7	;volatile
  1981  06A6  1006               	line	8
  1982                           ;realtimeclock.c: 8:         if (time_tx&0x01) {
  1983                           	btfss	(RealTimeClock_write_byte@time_tx),(0)&7
  1984  06A7  1C74               	goto	u521
  1985  06A8  2EAA               	goto	u520
  1986  06A9  2EAB               u521:
  1987  06AA                     	goto	l1082
  1988  06AA  2EAD               u520:
  1989  06AB                     	line	9
  1990                           	
  1991                           l1080:	
  1992  06AB                     ;realtimeclock.c: 9:             RB4 = 1;
  1993                           	bsf	(52/8),(52)&7	;volatile
  1994  06AB  1606               	goto	l1082
  1995  06AC  2EAD               	line	10
  1996                           ;realtimeclock.c: 10:         }
  1997                           	
  1998                           l44:	
  1999  06AD                     	line	11
  2000                           	
  2001                           l1082:	
  2002  06AD                     ;realtimeclock.c: 11:         time_tx = time_tx >> 1;
  2003                           	movf	(RealTimeClock_write_byte@time_tx),w
  2004  06AD  0874               	movwf	(??_RealTimeClock_write_byte+0)+0
  2005  06AE  00F0               	clrc
  2006  06AF  1003               	rrf	(??_RealTimeClock_write_byte+0)+0,w
  2007  06B0  0C70               	movwf	(??_RealTimeClock_write_byte+1)+0
  2008  06B1  00F1               	movf	(??_RealTimeClock_write_byte+1)+0,w
  2009  06B2  0871               	movwf	(RealTimeClock_write_byte@time_tx)
  2010  06B3  00F4               	line	12
  2011                           	
  2012                           l1084:	
  2013  06B4                     ;realtimeclock.c: 12:         RB0 = 1;
  2014                           	bsf	(48/8),(48)&7	;volatile
  2015  06B4  1406               	line	13
  2016                           	
  2017                           l1086:	
  2018  06B5                     ;realtimeclock.c: 13:     }
  2019                           	movlw	01h
  2020  06B5  3001               	addwf	(RealTimeClock_write_byte@i),f
  2021  06B6  07F2               	skipnc
  2022  06B7  1803               	incf	(RealTimeClock_write_byte@i+1),f
  2023  06B8  0AF3               	movlw	0
  2024  06B9  3000               	addwf	(RealTimeClock_write_byte@i+1),f
  2025  06BA  07F3               	
  2026                           l1088:	
  2027  06BB                     	movf	(RealTimeClock_write_byte@i+1),w
  2028  06BB  0873               	xorlw	80h
  2029  06BC  3A80               	movwf	btemp+1
  2030  06BD  00FF               	movlw	(0)^80h
  2031  06BE  3080               	subwf	btemp+1,w
  2032  06BF  027F               	skipz
  2033  06C0  1D03               	goto	u535
  2034  06C1  2EC4               	movlw	08h
  2035  06C2  3008               	subwf	(RealTimeClock_write_byte@i),w
  2036  06C3  0272               u535:
  2037  06C4                     
  2038                           	skipc
  2039  06C4  1C03               	goto	u531
  2040  06C5  2EC7               	goto	u530
  2041  06C6  2EC8               u531:
  2042  06C7                     	goto	l42
  2043  06C7  2EA3               u530:
  2044  06C8                     	
  2045                           l43:	
  2046  06C8                     	line	14
  2047                           ;realtimeclock.c: 14:     RB0 = 0;
  2048                           	bcf	status, 5	;RP0=0, select bank0
  2049  06C8  1283               	bcf	status, 6	;RP1=0, select bank0
  2050  06C9  1303               	bcf	(48/8),(48)&7	;volatile
  2051  06CA  1006               	line	15
  2052                           	
  2053                           l45:	
  2054  06CB                     	return
  2055  06CB  0008               	opt stack 0
  2056                           GLOBAL	__end_of_RealTimeClock_write_byte
  2057                           	__end_of_RealTimeClock_write_byte:
  2058  06CC                     	signat	_RealTimeClock_write_byte,4217
  2059                           	global	_LCD_SendString
  2060                           
  2061 ;; *************** function _LCD_SendString *****************
  2062 ;; Defined at:
  2063 ;;		line 49 in file "LCD.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  string          2    1[COMMON] PTR const unsigned char 
  2066 ;;		 -> STR_1(7), main@test(3), 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  i               2    6[COMMON] int 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         2       0       0       0       0
  2079 ;;      Locals:         2       0       0       0       0
  2080 ;;      Temps:          3       0       0       0       0
  2081 ;;      Totals:         7       0       0       0       0
  2082 ;;Total ram usage:        7 bytes
  2083 ;; Hardware stack levels used:    1
  2084 ;; Hardware stack levels required when called:    2
  2085 ;; This function calls:
  2086 ;;		_LCD_SendData
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2092                           	file	"LCD.c"
  2093                           	line	49
  2094                           global __ptext6
  2095                           __ptext6:	;psect for function _LCD_SendString
  2096  074B                     psect	text6
  2097                           	file	"LCD.c"
  2098                           	line	49
  2099                           	global	__size_of_LCD_SendString
  2100                           	__size_of_LCD_SendString	equ	__end_of_LCD_SendString-_LCD_SendString
  2101  0044                     	
  2102                           _LCD_SendString:	
  2103  074B                     ;incstack = 0
  2104                           	opt	stack 5
  2105                           ; Regs used in _LCD_SendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2106                           	line	50
  2107                           	
  2108                           l1178:	
  2109  074B                     ;LCD.c: 50:     for (int i = 0; string[i]!='\0'; ++i)
  2110                           	clrf	(LCD_SendString@i)
  2111  074B  01F6               	clrf	(LCD_SendString@i+1)
  2112  074C  01F7               	goto	l1184
  2113  074D  2F71               	
  2114                           l205:	
  2115  074E                     	line	52
  2116                           	
  2117                           l1180:	
  2118  074E                     ;LCD.c: 51:     {;LCD.c: 52:         LCD_SendData(string[i]);
  2119                           	movf	(LCD_SendString@i),w
  2120  074E  0876               	addwf	(LCD_SendString@string),w
  2121  074F  0771               	movwf	(??_LCD_SendString+1)+0
  2122  0750  00F4               	movf	(LCD_SendString@string+1),w
  2123  0751  0872               	movwf	(??_LCD_SendString+0)+0
  2124  0752  00F3               	skipnc
  2125  0753  1803               	incf	(??_LCD_SendString+0)+0,f
  2126  0754  0AF3               	btfss	(LCD_SendString@i),7
  2127  0755  1FF6               	goto	u600
  2128  0756  2F58               	decf	(??_LCD_SendString+0)+0,f
  2129  0757  03F3               u600:
  2130  0758                     	movf	(??_LCD_SendString+0)+0,w
  2131  0758  0873               	movwf	0+((??_LCD_SendString+1)+0)+1
  2132  0759  00F5               	movf	1+(??_LCD_SendString+1)+0,w
  2133  075A  0875               	bcf	status, 5	;RP0=0, select bank0
  2134  075B  1283               	bcf	status, 6	;RP1=0, select bank0
  2135  075C  1303               	movwf	btemp+1
  2136  075D  00FF               	movf	0+(??_LCD_SendString+1)+0,w
  2137  075E  0874               	movwf	fsr0
  2138  075F  0084               	fcall	stringtab
  2139  0760  120A  118A  2003  120A  118A  	fcall	_LCD_SendData
  2140  0765  120A  118A  261E  120A  118A  	line	53
  2141                           	
  2142                           l1182:	
  2143  076A                     ;LCD.c: 53:     }
  2144                           	movlw	01h
  2145  076A  3001               	addwf	(LCD_SendString@i),f
  2146  076B  07F6               	skipnc
  2147  076C  1803               	incf	(LCD_SendString@i+1),f
  2148  076D  0AF7               	movlw	0
  2149  076E  3000               	addwf	(LCD_SendString@i+1),f
  2150  076F  07F7               	goto	l1184
  2151  0770  2F71               	
  2152                           l204:	
  2153  0771                     	
  2154                           l1184:	
  2155  0771                     	movf	(LCD_SendString@i),w
  2156  0771  0876               	addwf	(LCD_SendString@string),w
  2157  0772  0771               	movwf	(??_LCD_SendString+1)+0
  2158  0773  00F4               	movf	(LCD_SendString@string+1),w
  2159  0774  0872               	movwf	(??_LCD_SendString+0)+0
  2160  0775  00F3               	skipnc
  2161  0776  1803               	incf	(??_LCD_SendString+0)+0,f
  2162  0777  0AF3               	btfss	(LCD_SendString@i),7
  2163  0778  1FF6               	goto	u610
  2164  0779  2F7B               	decf	(??_LCD_SendString+0)+0,f
  2165  077A  03F3               u610:
  2166  077B                     	movf	(??_LCD_SendString+0)+0,w
  2167  077B  0873               	movwf	0+((??_LCD_SendString+1)+0)+1
  2168  077C  00F5               	movf	1+(??_LCD_SendString+1)+0,w
  2169  077D  0875               	bcf	status, 5	;RP0=0, select bank0
  2170  077E  1283               	bcf	status, 6	;RP1=0, select bank0
  2171  077F  1303               	movwf	btemp+1
  2172  0780  00FF               	movf	0+(??_LCD_SendString+1)+0,w
  2173  0781  0874               	movwf	fsr0
  2174  0782  0084               	fcall	stringtab
  2175  0783  120A  118A  2003  120A  118A  	xorlw	0
  2176  0788  3A00               	skipz
  2177  0789  1D03               	goto	u621
  2178  078A  2F8C               	goto	u620
  2179  078B  2F8D               u621:
  2180  078C                     	goto	l1180
  2181  078C  2F4E               u620:
  2182  078D                     	goto	l207
  2183  078D  2F8E               	
  2184                           l206:	
  2185  078E                     	line	54
  2186                           	
  2187                           l207:	
  2188  078E                     	return
  2189  078E  0008               	opt stack 0
  2190                           GLOBAL	__end_of_LCD_SendString
  2191                           	__end_of_LCD_SendString:
  2192  078F                     	signat	_LCD_SendString,4217
  2193                           	global	_LCD_SendData
  2194                           
  2195 ;; *************** function _LCD_SendData *****************
  2196 ;; Defined at:
  2197 ;;		line 40 in file "LCD.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  c               1    wreg     unsigned char 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  c               1    0[COMMON] unsigned char 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, pclath, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2211 ;;      Params:         0       0       0       0       0
  2212 ;;      Locals:         1       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0
  2214 ;;      Totals:         1       0       0       0       0
  2215 ;;Total ram usage:        1 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    1
  2218 ;; This function calls:
  2219 ;;		_LCD_Busy
  2220 ;; This function is called by:
  2221 ;;		_LCD_SendString
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2225                           	line	40
  2226                           global __ptext7
  2227                           __ptext7:	;psect for function _LCD_SendData
  2228  061E                     psect	text7
  2229                           	file	"LCD.c"
  2230                           	line	40
  2231                           	global	__size_of_LCD_SendData
  2232                           	__size_of_LCD_SendData	equ	__end_of_LCD_SendData-_LCD_SendData
  2233  000F                     	
  2234                           _LCD_SendData:	
  2235  061E                     ;incstack = 0
  2236                           	opt	stack 5
  2237                           ; Regs used in _LCD_SendData: [wreg+status,2+status,0+pclath+cstack]
  2238                           ;LCD_SendData@c stored from wreg
  2239                           	movwf	(LCD_SendData@c)
  2240  061E  00F0               	line	41
  2241                           	
  2242                           l1132:	
  2243  061F                     ;LCD.c: 41:     RA1 = 1;
  2244                           	bcf	status, 5	;RP0=0, select bank0
  2245  061F  1283               	bcf	status, 6	;RP1=0, select bank0
  2246  0620  1303               	bsf	(41/8),(41)&7	;volatile
  2247  0621  1485               	line	42
  2248                           ;LCD.c: 42:     RA2 = 0;
  2249                           	bcf	(42/8),(42)&7	;volatile
  2250  0622  1105               	line	43
  2251                           ;LCD.c: 43:     RA3 = 1;
  2252                           	bsf	(43/8),(43)&7	;volatile
  2253  0623  1585               	line	44
  2254                           	
  2255                           l1134:	
  2256  0624                     ;LCD.c: 44:     PORTD = c;
  2257                           	movf	(LCD_SendData@c),w
  2258  0624  0870               	movwf	(8)	;volatile
  2259  0625  0088               	line	45
  2260                           	
  2261                           l1136:	
  2262  0626                     ;LCD.c: 45:     RA3 = 0;
  2263                           	bcf	(43/8),(43)&7	;volatile
  2264  0626  1185               	line	46
  2265                           	
  2266                           l1138:	
  2267  0627                     ;LCD.c: 46:     LCD_Busy();
  2268                           	fcall	_LCD_Busy
  2269  0627  120A  118A  2640  120A  118A  	line	47
  2270                           	
  2271                           l201:	
  2272  062C                     	return
  2273  062C  0008               	opt stack 0
  2274                           GLOBAL	__end_of_LCD_SendData
  2275                           	__end_of_LCD_SendData:
  2276  062D                     	signat	_LCD_SendData,4217
  2277                           	global	_LCD_Init
  2278                           
  2279 ;; *************** function _LCD_Init *****************
  2280 ;; Defined at:
  2281 ;;		line 19 in file "LCD.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0
  2298 ;;      Totals:         0       0       0       0       0
  2299 ;;Total ram usage:        0 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_main
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2308                           	line	19
  2309                           global __ptext8
  2310                           __ptext8:	;psect for function _LCD_Init
  2311  0600                     psect	text8
  2312                           	file	"LCD.c"
  2313                           	line	19
  2314                           	global	__size_of_LCD_Init
  2315                           	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_Init
  2316  0007                     	
  2317                           _LCD_Init:	
  2318  0600                     ;incstack = 0
  2319                           	opt	stack 7
  2320                           ; Regs used in _LCD_Init: [wreg+status,2]
  2321                           	line	21
  2322                           	
  2323                           l1150:	
  2324  0600                     ;LCD.c: 21:     TRISD = 0x00;
  2325                           	bsf	status, 5	;RP0=1, select bank1
  2326  0600  1683               	bcf	status, 6	;RP1=0, select bank1
  2327  0601  1303               	clrf	(136)^080h	;volatile
  2328  0602  0188               	line	22
  2329                           ;LCD.c: 22:     TRISA = 0x00;
  2330                           	clrf	(133)^080h	;volatile
  2331  0603  0185               	line	23
  2332                           	
  2333                           l1152:	
  2334  0604                     ;LCD.c: 23:     ADCON1 = 0x06;
  2335                           	movlw	low(06h)
  2336  0604  3006               	movwf	(159)^080h	;volatile
  2337  0605  009F               	line	24
  2338                           	
  2339                           l192:	
  2340  0606                     	return
  2341  0606  0008               	opt stack 0
  2342                           GLOBAL	__end_of_LCD_Init
  2343                           	__end_of_LCD_Init:
  2344  0607                     	signat	_LCD_Init,89
  2345                           	global	_LCD_Command
  2346                           
  2347 ;; *************** function _LCD_Command *****************
  2348 ;; Defined at:
  2349 ;;		line 26 in file "LCD.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  c               1    wreg     unsigned char 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  c               1    0[COMMON] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0, pclath, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2363 ;;      Params:         0       0       0       0       0
  2364 ;;      Locals:         1       0       0       0       0
  2365 ;;      Temps:          0       0       0       0       0
  2366 ;;      Totals:         1       0       0       0       0
  2367 ;;Total ram usage:        1 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    1
  2370 ;; This function calls:
  2371 ;;		_LCD_Busy
  2372 ;; This function is called by:
  2373 ;;		_main
  2374 ;;		_LCD_SecondLine
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  2378                           	line	26
  2379                           global __ptext9
  2380                           __ptext9:	;psect for function _LCD_Command
  2381  060F                     psect	text9
  2382                           	file	"LCD.c"
  2383                           	line	26
  2384                           	global	__size_of_LCD_Command
  2385                           	__size_of_LCD_Command	equ	__end_of_LCD_Command-_LCD_Command
  2386  000F                     	
  2387                           _LCD_Command:	
  2388  060F                     ;incstack = 0
  2389                           	opt	stack 6
  2390                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  2391                           ;LCD_Command@c stored from wreg
  2392                           	movwf	(LCD_Command@c)
  2393  060F  00F0               	line	27
  2394                           	
  2395                           l1170:	
  2396  0610                     ;LCD.c: 27:     RA1 = 0;
  2397                           	bcf	status, 5	;RP0=0, select bank0
  2398  0610  1283               	bcf	status, 6	;RP1=0, select bank0
  2399  0611  1303               	bcf	(41/8),(41)&7	;volatile
  2400  0612  1085               	line	28
  2401                           ;LCD.c: 28:     RA2 = 0;
  2402                           	bcf	(42/8),(42)&7	;volatile
  2403  0613  1105               	line	29
  2404                           ;LCD.c: 29:     RA3 = 1;
  2405                           	bsf	(43/8),(43)&7	;volatile
  2406  0614  1585               	line	30
  2407                           	
  2408                           l1172:	
  2409  0615                     ;LCD.c: 30:     PORTD = c;
  2410                           	movf	(LCD_Command@c),w
  2411  0615  0870               	movwf	(8)	;volatile
  2412  0616  0088               	line	31
  2413                           	
  2414                           l1174:	
  2415  0617                     ;LCD.c: 31:     RA3 = 0;
  2416                           	bcf	(43/8),(43)&7	;volatile
  2417  0617  1185               	line	32
  2418                           	
  2419                           l1176:	
  2420  0618                     ;LCD.c: 32:     LCD_Busy();
  2421                           	fcall	_LCD_Busy
  2422  0618  120A  118A  2640  120A  118A  	line	33
  2423                           	
  2424                           l195:	
  2425  061D                     	return
  2426  061D  0008               	opt stack 0
  2427                           GLOBAL	__end_of_LCD_Command
  2428                           	__end_of_LCD_Command:
  2429  061E                     	signat	_LCD_Command,4217
  2430                           	global	_LCD_Busy
  2431                           
  2432 ;; *************** function _LCD_Busy *****************
  2433 ;; Defined at:
  2434 ;;		line 6 in file "LCD.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2448 ;;      Params:         0       0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0
  2451 ;;      Totals:         0       0       0       0       0
  2452 ;;Total ram usage:        0 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; This function calls:
  2455 ;;		Nothing
  2456 ;; This function is called by:
  2457 ;;		_LCD_Command
  2458 ;;		_LCD_SendData
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  2462                           	line	6
  2463                           global __ptext10
  2464                           __ptext10:	;psect for function _LCD_Busy
  2465  0640                     psect	text10
  2466                           	file	"LCD.c"
  2467                           	line	6
  2468                           	global	__size_of_LCD_Busy
  2469                           	__size_of_LCD_Busy	equ	__end_of_LCD_Busy-_LCD_Busy
  2470  0015                     	
  2471                           _LCD_Busy:	
  2472  0640                     ;incstack = 0
  2473                           	opt	stack 5
  2474                           ; Regs used in _LCD_Busy: [wreg+status,2]
  2475                           	line	7
  2476                           	
  2477                           l1106:	
  2478  0640                     ;LCD.c: 7:     TRISD = 0xFF;
  2479                           	movlw	low(0FFh)
  2480  0640  30FF               	bsf	status, 5	;RP0=1, select bank1
  2481  0641  1683               	bcf	status, 6	;RP1=0, select bank1
  2482  0642  1303               	movwf	(136)^080h	;volatile
  2483  0643  0088               	line	8
  2484                           	
  2485                           l1108:	
  2486  0644                     ;LCD.c: 8:     RA3 = 1;
  2487                           	bcf	status, 5	;RP0=0, select bank0
  2488  0644  1283               	bcf	status, 6	;RP1=0, select bank0
  2489  0645  1303               	bsf	(43/8),(43)&7	;volatile
  2490  0646  1585               	line	9
  2491                           	
  2492                           l1110:	
  2493  0647                     ;LCD.c: 9:     RA1 = 0;
  2494                           	bcf	(41/8),(41)&7	;volatile
  2495  0647  1085               	line	10
  2496                           	
  2497                           l1112:	
  2498  0648                     ;LCD.c: 10:     RA2 = 1;
  2499                           	bsf	(42/8),(42)&7	;volatile
  2500  0648  1505               	line	11
  2501                           ;LCD.c: 11:     while(RD7)
  2502                           	goto	l186
  2503  0649  2E4C               	
  2504                           l187:	
  2505  064A                     	line	13
  2506                           ;LCD.c: 12:     {;LCD.c: 13:         RA3 = 0;
  2507                           	bcf	(43/8),(43)&7	;volatile
  2508  064A  1185               	line	14
  2509                           ;LCD.c: 14:         RA3 = 1;
  2510                           	bsf	(43/8),(43)&7	;volatile
  2511  064B  1585               	line	15
  2512                           ;LCD.c: 15:     }
  2513                           	
  2514                           l186:	
  2515  064C                     	line	11
  2516                           ;LCD.c: 11:     while(RD7)
  2517                           	btfsc	(71/8),(71)&7	;volatile
  2518  064C  1B88               	goto	u561
  2519  064D  2E4F               	goto	u560
  2520  064E  2E50               u561:
  2521  064F                     	goto	l187
  2522  064F  2E4A               u560:
  2523  0650                     	goto	l1114
  2524  0650  2E51               	
  2525                           l188:	
  2526  0651                     	line	16
  2527                           	
  2528                           l1114:	
  2529  0651                     ;LCD.c: 16:     TRISD = 0x00;
  2530                           	bsf	status, 5	;RP0=1, select bank1
  2531  0651  1683               	bcf	status, 6	;RP1=0, select bank1
  2532  0652  1303               	clrf	(136)^080h	;volatile
  2533  0653  0188               	line	17
  2534                           	
  2535                           l189:	
  2536  0654                     	return
  2537  0654  0008               	opt stack 0
  2538                           GLOBAL	__end_of_LCD_Busy
  2539                           	__end_of_LCD_Busy:
  2540  0655                     	signat	_LCD_Busy,89
  2541                           	global	_Init_Keypad
  2542                           
  2543 ;; *************** function _Init_Keypad *****************
  2544 ;; Defined at:
  2545 ;;		line 11 in file "KeyMatrix.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2559 ;;      Params:         0       0       0       0       0
  2560 ;;      Locals:         0       0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0
  2562 ;;      Totals:         0       0       0       0       0
  2563 ;;Total ram usage:        0 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; This function calls:
  2566 ;;		Nothing
  2567 ;; This function is called by:
  2568 ;;		_main
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  2572                           	file	"KeyMatrix.c"
  2573                           	line	11
  2574                           global __ptext11
  2575                           __ptext11:	;psect for function _Init_Keypad
  2576  0607                     psect	text11
  2577                           	file	"KeyMatrix.c"
  2578                           	line	11
  2579                           	global	__size_of_Init_Keypad
  2580                           	__size_of_Init_Keypad	equ	__end_of_Init_Keypad-_Init_Keypad
  2581  0008                     	
  2582                           _Init_Keypad:	
  2583  0607                     ;incstack = 0
  2584                           	opt	stack 7
  2585                           ; Regs used in _Init_Keypad: [wreg+status,2]
  2586                           	line	13
  2587                           	
  2588                           l1154:	
  2589  0607                     ;KeyMatrix.c: 13:     PORTC = 0x00;
  2590                           	bcf	status, 5	;RP0=0, select bank0
  2591  0607  1283               	bcf	status, 6	;RP1=0, select bank0
  2592  0608  1303               	clrf	(7)	;volatile
  2593  0609  0187               	line	14
  2594                           	
  2595                           l1156:	
  2596  060A                     ;KeyMatrix.c: 14:     TRISC = 0xF;
  2597                           	movlw	low(0Fh)
  2598  060A  300F               	bsf	status, 5	;RP0=1, select bank1
  2599  060B  1683               	bcf	status, 6	;RP1=0, select bank1
  2600  060C  1303               	movwf	(135)^080h	;volatile
  2601  060D  0087               	line	15
  2602                           	
  2603                           l94:	
  2604  060E                     	return
  2605  060E  0008               	opt stack 0
  2606                           GLOBAL	__end_of_Init_Keypad
  2607                           	__end_of_Init_Keypad:
  2608  060F                     	signat	_Init_Keypad,89
  2609                           	global	_Init_Buzzer
  2610                           
  2611 ;; *************** function _Init_Buzzer *****************
  2612 ;; Defined at:
  2613 ;;		line 7 in file "Buzzer.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  Port            2    0[COMMON] PTR unsigned char 
  2616 ;;		 -> PORTB(1), 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr0l, fsr0h, status,2
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2628 ;;      Params:         2       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0
  2630 ;;      Temps:          1       0       0       0       0
  2631 ;;      Totals:         3       0       0       0       0
  2632 ;;Total ram usage:        3 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; This function calls:
  2635 ;;		Nothing
  2636 ;; This function is called by:
  2637 ;;		_main
  2638 ;; This function uses a non-reentrant model
  2639 ;;
  2640                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  2641                           	file	"Buzzer.c"
  2642                           	line	7
  2643                           global __ptext12
  2644                           __ptext12:	;psect for function _Init_Buzzer
  2645  062D                     psect	text12
  2646                           	file	"Buzzer.c"
  2647                           	line	7
  2648                           	global	__size_of_Init_Buzzer
  2649                           	__size_of_Init_Buzzer	equ	__end_of_Init_Buzzer-_Init_Buzzer
  2650  0013                     	
  2651                           _Init_Buzzer:	
  2652  062D                     ;incstack = 0
  2653                           	opt	stack 7
  2654                           ; Regs used in _Init_Buzzer: [wreg-fsr0h+status,2]
  2655                           	line	9
  2656                           	
  2657                           l1146:	
  2658  062D                     ;Buzzer.c: 7: void Init_Buzzer(char* Port);Buzzer.c: 8: {;Buzzer.c: 9:     *Port = 0x00;
                                 
  2659                           	movf	(Init_Buzzer@Port),w
  2660  062D  0870               	movwf	fsr0
  2661  062E  0084               	bsf	status,7
  2662  062F  1783               	btfss	(Init_Buzzer@Port+1),0
  2663  0630  1C71               	bcf	status,7
  2664  0631  1383               	clrf	indf
  2665  0632  0180               	line	10
  2666                           	
  2667                           l1148:	
  2668  0633                     ;Buzzer.c: 10:     *PORT = *Port;
  2669                           	movf	(Init_Buzzer@Port),w
  2670  0633  0870               	movwf	fsr0
  2671  0634  0084               	bsf	status,7
  2672  0635  1783               	btfss	(Init_Buzzer@Port+1),0
  2673  0636  1C71               	bcf	status,7
  2674  0637  1383               	movf	indf,w
  2675  0638  0800               	movwf	(??_Init_Buzzer+0)+0
  2676  0639  00F2               	movf	(_PORT),w
  2677  063A  087C               	movwf	fsr0
  2678  063B  0084               	movf	(??_Init_Buzzer+0)+0,w
  2679  063C  0872               	bcf	status, 7	;select IRP bank0
  2680  063D  1383               	movwf	indf
  2681  063E  0080               	line	11
  2682                           	
  2683                           l212:	
  2684  063F                     	return
  2685  063F  0008               	opt stack 0
  2686                           GLOBAL	__end_of_Init_Buzzer
  2687                           	__end_of_Init_Buzzer:
  2688  0640                     	signat	_Init_Buzzer,4217
  2689                           global	___latbits
  2690                           ___latbits	equ	2
  2691  0002                     	global	btemp
  2692                           	btemp set 07Eh
  2693  007E                     
  2694                           	DABS	1,126,2	;btemp
  2695                           	global	wtemp0
  2696                           	wtemp0 set btemp+0
  2697  007E                     	end


Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     13      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    PORT	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Init_Buzzer@Port	PTR unsigned char  size(2) Largest target is 1
		 -> PORTB(SFR0[1]), 

    LCD_SendString@string	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), main@test(BANK0[3]), 

    RealTimeClock_get_time@time	PTR unsigned char  size(1) Largest target is 7
		 -> get_date_time@time(BANK0[7]), 

    main@Date	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 

    get_date_time@date_time	PTR unsigned char  size(1) Largest target is 3
		 -> main@test(BANK0[3]), 


Critical Paths under _main in COMMON

    _main->_get_date_time
    _get_date_time->_RealTimeClock_get_time
    _RealTimeClock_get_time->_RealTimeClock_read_byte
    _RealTimeClock_get_time->_RealTimeClock_write_byte
    _RealTimeClock_init->_RealTimeClock_write_byte
    _LCD_SendString->_LCD_SendData

Critical Paths under _main in BANK0

    _main->_get_date_time

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1045
                                             11 COMMON     1     1      0
                                              8 BANK0      5     5      0
                        _Init_Buzzer
                        _Init_Keypad
                        _LCD_Command
                           _LCD_Init
                     _LCD_SendString
                 _RealTimeClock_init
                      _get_date_time
 ---------------------------------------------------------------------------------
 (1) _get_date_time                                       10    10      0     450
                                              9 COMMON     2     2      0
                                              0 BANK0      8     8      0
             _RealTimeClock_get_time
 ---------------------------------------------------------------------------------
 (2) _RealTimeClock_get_time                               4     4      0     306
                                              5 COMMON     4     4      0
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_read_byte                              5     5      0      92
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _RealTimeClock_init                                   0     0      0      91
           _RealTimeClock_write_byte
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_write_byte                             5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _LCD_SendString                                       7     5      2     264
                                              1 COMMON     7     5      2
                       _LCD_SendData
 ---------------------------------------------------------------------------------
 (2) _LCD_SendData                                         1     1      0      22
                                              0 COMMON     1     1      0
                           _LCD_Busy
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Command                                          1     1      0      22
                                              0 COMMON     1     1      0
                           _LCD_Busy
 ---------------------------------------------------------------------------------
 (3) _LCD_Busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Keypad                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Buzzer                                          3     1      2     120
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Buzzer
   _Init_Keypad
   _LCD_Command
     _LCD_Busy
   _LCD_Init
   _LCD_SendString
     _LCD_SendData
       _LCD_Busy
   _RealTimeClock_init
     _RealTimeClock_write_byte
   _get_date_time
     _RealTimeClock_get_time
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D       D       5       16.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1A      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jan 03 22:57:50 2019

                                pc 0002                       ?_LCD_Command 0070  
                               l21 0690                                 l42 06A3  
                               l50 074A                                 l26 07CE  
                               l43 06C8                                 l27 07F7  
                               l44 06AD                                 l60 0709  
                               l28 07F8                                 l45 06CB  
                               l29 07F8                                 l63 066B  
                               l48 071F                                 l49 0744  
                               l58 06E7                                 l59 0706  
                               l94 060E            ?_RealTimeClock_get_time 0070  
                               fsr 0004                                l201 062C  
                              l212 063F                                l204 0771  
                              l205 074E                                l206 078E  
                              l207 078E                                l192 0606  
                              l186 064C                                l187 064A  
                              l195 061D                                l188 0651  
                              l189 0654                                _RA1 0029  
                              _RB0 0030                                _RA2 002A  
                              _RA3 002B                                _RC0 0038  
                              _RC1 0039                                _RB4 0034  
                              _RC2 003A                                _RB5 0035  
                              _RC3 003B                                _RC4 003C  
                              _RC5 003D                                _RC6 003E  
                              _RC7 003F                                _RD7 0047  
                              u510 06A1                                u511 06A0  
                              u600 0758                                u520 06AB  
                              u521 06AA                                u610 077B  
                              u530 06C8                                u531 06C7  
                              u515 069D                                u620 078D  
                              u540 071D                                u621 078C  
                              u541 071C                                u550 0744  
                              u535 06C4                                u551 0743  
                              u560 0650                                u561 064F  
                              u545 0719                                u570 06E5  
                              u555 0740                                u571 06E4  
                              u580 0706                                u581 0705  
                              u575 06E1                                u585 0702  
                              u595 067A                                fsr0 0004  
                              indf 0000                       __CFG_FOSC$HS 0000  
                    ?_LCD_SendData 0070                       __CFG_LVP$OFF 0000  
                   _LCD_SendString 074B                               l1100 0730  
                             l1110 0647                               l1102 0731  
                             l1112 0648                               l1104 0737  
                             l1120 06D6                               l1200 07B1  
                             l1114 0651                               l1106 0640  
                             l1130 06F9                               l1122 06D8  
                             l1210 07CE                               l1202 07B5  
                             l1108 0644                               l1132 061F  
                             l1124 06E6                               l1116 06CD  
                             l1140 066F                               l1212 07E1  
                             l1204 07BB                               l1150 0600  
                             l1134 0624                               l1126 06E7  
                             l1118 06D0                               l1142 0675  
                             l1214 07E7                               l1206 07C1  
                             l1152 0604                               l1136 0626  
                             l1080 06AB                               l1160 0658  
                             l1128 06F3                               l1144 0688  
                             l1216 07ED                               l1208 07C7  
                             l1146 062D                               l1154 0607  
                             l1170 0610                               l1138 0627  
                             l1082 06AD                               l1074 0692  
                             l1162 065B                               l1090 070B  
                             l1148 0633                               l1156 060A  
                             l1172 0615                               l1180 074E  
                             l1084 06B4                               l1076 0694  
                             l1164 065C                               l1092 070E  
                             l1174 0617                               l1182 076A  
                             l1086 06B5                               l1078 06A2  
                             l1166 0662                               l1158 0655  
                             l1094 0710                               l1190 079B  
                             l1176 0618                               l1184 0771  
                             l1088 06BB                               l1168 0668  
                             l1096 071E                               l1192 07A0  
                             l1178 074B                               l1098 0722  
                             l1194 07A5                               l1186 078F  
                             l1196 07AA                               l1188 0798  
                             l1198 07AD                               STR_1 0013  
                             _PORT 007C           ?_RealTimeClock_read_byte 0070  
                             _main 078F                               btemp 007E  
 __end_of_RealTimeClock_write_byte 06CC                               start 0000  
                    ??_Init_Keypad 0070                      ??_Init_Buzzer 0072  
   __end_of_RealTimeClock_get_time 070A                    ??_get_date_time 0079  
                 __end_of_LCD_Busy 0655                   __end_of_LCD_Init 0607  
                            ?_main 0070                      __CFG_WDTE$OFF 0000  
                            _PORTB 0006                              _PORTC 0007  
                            _PORTD 0008                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISD 0088                      __CFG_PWRTE$ON 0000  
           __end_of_LCD_SendString 078F                     ??_LCD_SendData 0070  
   RealTimeClock_read_byte@time_rx 0074                     __CFG_BOREN$OFF 0000  
                     LCD_Command@c 0070                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __initialization 07FB                       __end_of_main 07FB  
              __end_of_Init_Keypad 060F                __end_of_Init_Buzzer 0640  
                           ??_main 007B                    ?_LCD_SendString 0071  
  __end_of_RealTimeClock_read_byte 074B                             _ADCON1 009F  
                           _TRISB4 0434           _RealTimeClock_write_byte 0691  
             __size_of_LCD_Command 000F                    LCD_SendString@i 0076  
          __end_of__initialization 07FC                          ?_LCD_Busy 0070  
                        ?_LCD_Init 0070                     __pcstackCOMMON 0070  
                      _Init_Keypad 0607                        _Init_Buzzer 062D  
             __end_of_LCD_SendData 062D           RealTimeClock_read_byte@i 0072  
                    LCD_SendData@c 0070        __size_of_RealTimeClock_init 0017  
           get_date_time@date_time 0027                         ??_LCD_Busy 0070  
                       ??_LCD_Init 0070                         __pmaintext 078F  
 __size_of_RealTimeClock_read_byte 0041                         __stringtab 0003  
            __end_of_get_date_time 0691                   ??_LCD_SendString 0073  
                          __ptext1 066C                            __ptext2 06CC  
                          __ptext3 070A                            __ptext4 0655  
                          __ptext5 0691                            __ptext6 074B  
                          __ptext7 061E                            __ptext8 0600  
                          __ptext9 060F                            main@Key 0028  
             end_of_initialization 07FC         ??_RealTimeClock_write_byte 0070  
            __size_of_LCD_SendData 000F                       _LCD_SendData 061E  
         ??_RealTimeClock_get_time 0075                  __size_of_LCD_Busy 0015  
                __size_of_LCD_Init 0007                       ?_Init_Keypad 0070  
                     ?_Init_Buzzer 0070            _RealTimeClock_read_byte 070A  
                    ??_LCD_Command 0070                start_initialization 07FB  
          RealTimeClock_get_time@i 0077                __end_of_LCD_Command 061E  
                      __pbssCOMMON 007C         __end_of_RealTimeClock_init 066C  
                        ___latbits 0002                      __pcstackBANK0 0020  
                get_date_time@time 0020    __size_of_RealTimeClock_get_time 003E  
        ??_RealTimeClock_read_byte 0070          RealTimeClock_write_byte@i 0072  
                        __pstrings 0003                    Init_Buzzer@Port 0070  
                         _LCD_Busy 0640                           _LCD_Init 0600  
                      _LCD_Command 060F               __size_of_Init_Keypad 0008  
             __size_of_Init_Buzzer 0013                        __stringbase 0012  
           _RealTimeClock_get_time 06CC               LCD_SendString@string 0071  
           __size_of_get_date_time 0025  __size_of_RealTimeClock_write_byte 003B  
        ?_RealTimeClock_write_byte 0070                 __end_of__stringtab 0013  
                         __ptext10 0640                           __ptext11 0607  
                         __ptext12 062D            __size_of_LCD_SendString 0044  
                    __size_of_main 006C                           main@Date 002C  
                         main@test 0029                      _get_date_time 066C  
       RealTimeClock_get_time@time 0076    RealTimeClock_write_byte@time_tx 0074  
               _RealTimeClock_init 0655                          stringcode 000D  
              ?_RealTimeClock_init 0070                     ?_get_date_time 0070  
                         stringdir 000D                           stringtab 0003  
             ??_RealTimeClock_init 0075  
