

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jan 03 22:30:19 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F877A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   176                           SSPCON2 equ 091h ;# 
   177  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   178                           PR2 equ 092h ;# 
   179  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   180                           SSPADD equ 093h ;# 
   181  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   182                           SSPSTAT equ 094h ;# 
   183  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   184                           TXSTA equ 098h ;# 
   185  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   186                           SPBRG equ 099h ;# 
   187  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   188                           CMCON equ 09Ch ;# 
   189  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   190                           CVRCON equ 09Dh ;# 
   191  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   192                           ADRESL equ 09Eh ;# 
   193  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   194                           ADCON1 equ 09Fh ;# 
   195  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   196                           EEDATA equ 010Ch ;# 
   197  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   198                           EEADR equ 010Dh ;# 
   199  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   200                           EEDATH equ 010Eh ;# 
   201  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   202                           EEADRH equ 010Fh ;# 
   203  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   204                           EECON1 equ 018Ch ;# 
   205  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   206                           EECON2 equ 018Dh ;# 
   207  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   208                           INDF equ 00h ;# 
   209  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   210                           TMR0 equ 01h ;# 
   211  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   212                           PCL equ 02h ;# 
   213  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   214                           STATUS equ 03h ;# 
   215  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   216                           FSR equ 04h ;# 
   217  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   218                           PORTA equ 05h ;# 
   219  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   220                           PORTB equ 06h ;# 
   221  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   222                           PORTC equ 07h ;# 
   223  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   224                           PORTD equ 08h ;# 
   225  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   226                           PORTE equ 09h ;# 
   227  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   228                           PCLATH equ 0Ah ;# 
   229  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   230                           INTCON equ 0Bh ;# 
   231  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   232                           PIR1 equ 0Ch ;# 
   233  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   234                           PIR2 equ 0Dh ;# 
   235  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   236                           TMR1 equ 0Eh ;# 
   237  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   238                           TMR1L equ 0Eh ;# 
   239  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   240                           TMR1H equ 0Fh ;# 
   241  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   242                           T1CON equ 010h ;# 
   243  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   244                           TMR2 equ 011h ;# 
   245  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   246                           T2CON equ 012h ;# 
   247  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   248                           SSPBUF equ 013h ;# 
   249  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   250                           SSPCON equ 014h ;# 
   251  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   252                           CCPR1 equ 015h ;# 
   253  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   254                           CCPR1L equ 015h ;# 
   255  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   256                           CCPR1H equ 016h ;# 
   257  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   258                           CCP1CON equ 017h ;# 
   259  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   260                           RCSTA equ 018h ;# 
   261  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   262                           TXREG equ 019h ;# 
   263  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   264                           RCREG equ 01Ah ;# 
   265  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   266                           CCPR2 equ 01Bh ;# 
   267  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   268                           CCPR2L equ 01Bh ;# 
   269  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   270                           CCPR2H equ 01Ch ;# 
   271  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   272                           CCP2CON equ 01Dh ;# 
   273  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   274                           ADRESH equ 01Eh ;# 
   275  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   276                           ADCON0 equ 01Fh ;# 
   277  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   278                           OPTION_REG equ 081h ;# 
   279  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   280                           TRISA equ 085h ;# 
   281  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   282                           TRISB equ 086h ;# 
   283  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   284                           TRISC equ 087h ;# 
   285  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   286                           TRISD equ 088h ;# 
   287  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   288                           TRISE equ 089h ;# 
   289  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   290                           PIE1 equ 08Ch ;# 
   291  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   292                           PIE2 equ 08Dh ;# 
   293  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   294                           PCON equ 08Eh ;# 
   295  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   296                           SSPCON2 equ 091h ;# 
   297  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   298                           PR2 equ 092h ;# 
   299  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   300                           SSPADD equ 093h ;# 
   301  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   302                           SSPSTAT equ 094h ;# 
   303  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   304                           TXSTA equ 098h ;# 
   305  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   306                           SPBRG equ 099h ;# 
   307  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   308                           CMCON equ 09Ch ;# 
   309  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   310                           CVRCON equ 09Dh ;# 
   311  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   312                           ADRESL equ 09Eh ;# 
   313  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   314                           ADCON1 equ 09Fh ;# 
   315  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   316                           EEDATA equ 010Ch ;# 
   317  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   318                           EEADR equ 010Dh ;# 
   319  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   320                           EEDATH equ 010Eh ;# 
   321  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   322                           EEADRH equ 010Fh ;# 
   323  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   324                           EECON1 equ 018Ch ;# 
   325  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   326                           EECON2 equ 018Dh ;# 
   327  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   328                           INDF equ 00h ;# 
   329  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   330                           TMR0 equ 01h ;# 
   331  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   332                           PCL equ 02h ;# 
   333  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   334                           STATUS equ 03h ;# 
   335  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   336                           FSR equ 04h ;# 
   337  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   338                           PORTA equ 05h ;# 
   339  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   340                           PORTB equ 06h ;# 
   341  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   342                           PORTC equ 07h ;# 
   343  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   344                           PORTD equ 08h ;# 
   345  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   346                           PORTE equ 09h ;# 
   347  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   348                           PCLATH equ 0Ah ;# 
   349  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   350                           INTCON equ 0Bh ;# 
   351  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   352                           PIR1 equ 0Ch ;# 
   353  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   354                           PIR2 equ 0Dh ;# 
   355  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   356                           TMR1 equ 0Eh ;# 
   357  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   358                           TMR1L equ 0Eh ;# 
   359  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   360                           TMR1H equ 0Fh ;# 
   361  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   362                           T1CON equ 010h ;# 
   363  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   364                           TMR2 equ 011h ;# 
   365  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   366                           T2CON equ 012h ;# 
   367  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   368                           SSPBUF equ 013h ;# 
   369  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   370                           SSPCON equ 014h ;# 
   371  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   372                           CCPR1 equ 015h ;# 
   373  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   374                           CCPR1L equ 015h ;# 
   375  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   376                           CCPR1H equ 016h ;# 
   377  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   378                           CCP1CON equ 017h ;# 
   379  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   380                           RCSTA equ 018h ;# 
   381  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   382                           TXREG equ 019h ;# 
   383  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   384                           RCREG equ 01Ah ;# 
   385  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   386                           CCPR2 equ 01Bh ;# 
   387  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   388                           CCPR2L equ 01Bh ;# 
   389  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   390                           CCPR2H equ 01Ch ;# 
   391  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   392                           CCP2CON equ 01Dh ;# 
   393  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   394                           ADRESH equ 01Eh ;# 
   395  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   396                           ADCON0 equ 01Fh ;# 
   397  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   398                           OPTION_REG equ 081h ;# 
   399  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   400                           TRISA equ 085h ;# 
   401  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   402                           TRISB equ 086h ;# 
   403  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   404                           TRISC equ 087h ;# 
   405  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   406                           TRISD equ 088h ;# 
   407  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   408                           TRISE equ 089h ;# 
   409  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   410                           PIE1 equ 08Ch ;# 
   411  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   412                           PIE2 equ 08Dh ;# 
   413  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   414                           PCON equ 08Eh ;# 
   415  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   416                           SSPCON2 equ 091h ;# 
   417  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   418                           PR2 equ 092h ;# 
   419  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   420                           SSPADD equ 093h ;# 
   421  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   422                           SSPSTAT equ 094h ;# 
   423  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   424                           TXSTA equ 098h ;# 
   425  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   426                           SPBRG equ 099h ;# 
   427  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   428                           CMCON equ 09Ch ;# 
   429  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   430                           CVRCON equ 09Dh ;# 
   431  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   432                           ADRESL equ 09Eh ;# 
   433  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   434                           ADCON1 equ 09Fh ;# 
   435  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   436                           EEDATA equ 010Ch ;# 
   437  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   438                           EEADR equ 010Dh ;# 
   439  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   440                           EEDATH equ 010Eh ;# 
   441  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   442                           EEADRH equ 010Fh ;# 
   443  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   444                           EECON1 equ 018Ch ;# 
   445  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   446                           EECON2 equ 018Dh ;# 
   447  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   448                           INDF equ 00h ;# 
   449  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   450                           TMR0 equ 01h ;# 
   451  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   452                           PCL equ 02h ;# 
   453  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   454                           STATUS equ 03h ;# 
   455  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   456                           FSR equ 04h ;# 
   457  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   458                           PORTA equ 05h ;# 
   459  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   460                           PORTB equ 06h ;# 
   461  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   462                           PORTC equ 07h ;# 
   463  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   464                           PORTD equ 08h ;# 
   465  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   466                           PORTE equ 09h ;# 
   467  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   468                           PCLATH equ 0Ah ;# 
   469  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   470                           INTCON equ 0Bh ;# 
   471  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   472                           PIR1 equ 0Ch ;# 
   473  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   474                           PIR2 equ 0Dh ;# 
   475  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   476                           TMR1 equ 0Eh ;# 
   477  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   478                           TMR1L equ 0Eh ;# 
   479  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   480                           TMR1H equ 0Fh ;# 
   481  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   482                           T1CON equ 010h ;# 
   483  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   484                           TMR2 equ 011h ;# 
   485  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   486                           T2CON equ 012h ;# 
   487  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   488                           SSPBUF equ 013h ;# 
   489  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   490                           SSPCON equ 014h ;# 
   491  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   492                           CCPR1 equ 015h ;# 
   493  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   494                           CCPR1L equ 015h ;# 
   495  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   496                           CCPR1H equ 016h ;# 
   497  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   498                           CCP1CON equ 017h ;# 
   499  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   500                           RCSTA equ 018h ;# 
   501  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   502                           TXREG equ 019h ;# 
   503  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   504                           RCREG equ 01Ah ;# 
   505  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   506                           CCPR2 equ 01Bh ;# 
   507  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   508                           CCPR2L equ 01Bh ;# 
   509  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   510                           CCPR2H equ 01Ch ;# 
   511  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   512                           CCP2CON equ 01Dh ;# 
   513  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   514                           ADRESH equ 01Eh ;# 
   515  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   516                           ADCON0 equ 01Fh ;# 
   517  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   518                           OPTION_REG equ 081h ;# 
   519  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   520                           TRISA equ 085h ;# 
   521  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   522                           TRISB equ 086h ;# 
   523  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   524                           TRISC equ 087h ;# 
   525  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   526                           TRISD equ 088h ;# 
   527  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   528                           TRISE equ 089h ;# 
   529  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   530                           PIE1 equ 08Ch ;# 
   531  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   532                           PIE2 equ 08Dh ;# 
   533  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   534                           PCON equ 08Eh ;# 
   535  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   536                           SSPCON2 equ 091h ;# 
   537  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   538                           PR2 equ 092h ;# 
   539  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   540                           SSPADD equ 093h ;# 
   541  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   542                           SSPSTAT equ 094h ;# 
   543  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   544                           TXSTA equ 098h ;# 
   545  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   546                           SPBRG equ 099h ;# 
   547  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   548                           CMCON equ 09Ch ;# 
   549  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   550                           CVRCON equ 09Dh ;# 
   551  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   552                           ADRESL equ 09Eh ;# 
   553  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   554                           ADCON1 equ 09Fh ;# 
   555  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   556                           EEDATA equ 010Ch ;# 
   557  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   558                           EEADR equ 010Dh ;# 
   559  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   560                           EEDATH equ 010Eh ;# 
   561  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   562                           EEADRH equ 010Fh ;# 
   563  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   564                           EECON1 equ 018Ch ;# 
   565  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   566                           EECON2 equ 018Dh ;# 
   567  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   568                           INDF equ 00h ;# 
   569  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   570                           TMR0 equ 01h ;# 
   571  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   572                           PCL equ 02h ;# 
   573  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   574                           STATUS equ 03h ;# 
   575  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   576                           FSR equ 04h ;# 
   577  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   578                           PORTA equ 05h ;# 
   579  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   580                           PORTB equ 06h ;# 
   581  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   582                           PORTC equ 07h ;# 
   583  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   584                           PORTD equ 08h ;# 
   585  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   586                           PORTE equ 09h ;# 
   587  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   588                           PCLATH equ 0Ah ;# 
   589  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   590                           INTCON equ 0Bh ;# 
   591  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   592                           PIR1 equ 0Ch ;# 
   593  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   594                           PIR2 equ 0Dh ;# 
   595  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   596                           TMR1 equ 0Eh ;# 
   597  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   598                           TMR1L equ 0Eh ;# 
   599  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   600                           TMR1H equ 0Fh ;# 
   601  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   602                           T1CON equ 010h ;# 
   603  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   604                           TMR2 equ 011h ;# 
   605  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   606                           T2CON equ 012h ;# 
   607  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   608                           SSPBUF equ 013h ;# 
   609  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   610                           SSPCON equ 014h ;# 
   611  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   612                           CCPR1 equ 015h ;# 
   613  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   614                           CCPR1L equ 015h ;# 
   615  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   616                           CCPR1H equ 016h ;# 
   617  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   618                           CCP1CON equ 017h ;# 
   619  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   620                           RCSTA equ 018h ;# 
   621  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   622                           TXREG equ 019h ;# 
   623  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   624                           RCREG equ 01Ah ;# 
   625  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   626                           CCPR2 equ 01Bh ;# 
   627  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   628                           CCPR2L equ 01Bh ;# 
   629  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   630                           CCPR2H equ 01Ch ;# 
   631  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   632                           CCP2CON equ 01Dh ;# 
   633  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   634                           ADRESH equ 01Eh ;# 
   635  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   636                           ADCON0 equ 01Fh ;# 
   637  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   638                           OPTION_REG equ 081h ;# 
   639  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   640                           TRISA equ 085h ;# 
   641  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   642                           TRISB equ 086h ;# 
   643  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   644                           TRISC equ 087h ;# 
   645  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   646                           TRISD equ 088h ;# 
   647  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   648                           TRISE equ 089h ;# 
   649  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   650                           PIE1 equ 08Ch ;# 
   651  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   652                           PIE2 equ 08Dh ;# 
   653  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   654                           PCON equ 08Eh ;# 
   655  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   656                           SSPCON2 equ 091h ;# 
   657  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   658                           PR2 equ 092h ;# 
   659  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   660                           SSPADD equ 093h ;# 
   661  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   662                           SSPSTAT equ 094h ;# 
   663  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   664                           TXSTA equ 098h ;# 
   665  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   666                           SPBRG equ 099h ;# 
   667  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   668                           CMCON equ 09Ch ;# 
   669  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   670                           CVRCON equ 09Dh ;# 
   671  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   672                           ADRESL equ 09Eh ;# 
   673  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   674                           ADCON1 equ 09Fh ;# 
   675  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   676                           EEDATA equ 010Ch ;# 
   677  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   678                           EEADR equ 010Dh ;# 
   679  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   680                           EEDATH equ 010Eh ;# 
   681  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   682                           EEADRH equ 010Fh ;# 
   683  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   684                           EECON1 equ 018Ch ;# 
   685  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   686                           EECON2 equ 018Dh ;# 
   687  018D                     	FNCALL	_main,_Get_Temp
   688                           	FNCALL	_main,_Init_Keypad
   689                           	FNCALL	_main,_LCD_Command
   690                           	FNCALL	_main,_LCD_Init
   691                           	FNCALL	_main,_LCD_SecondLine
   692                           	FNCALL	_main,_LCD_SendString
   693                           	FNCALL	_main,_RealTimeClock_init
   694                           	FNCALL	_main,_Sound
   695                           	FNCALL	_main,_get_date_time
   696                           	FNCALL	_get_date_time,_RealTimeClock_get_time
   697                           	FNCALL	_get_date_time,___wmul
   698                           	FNCALL	_RealTimeClock_get_time,_RealTimeClock_read_byte
   699                           	FNCALL	_RealTimeClock_get_time,_RealTimeClock_write_byte
   700                           	FNCALL	_RealTimeClock_init,_RealTimeClock_write_byte
   701                           	FNCALL	_LCD_SendString,_LCD_SendData
   702                           	FNCALL	_LCD_SendData,_LCD_Busy
   703                           	FNCALL	_LCD_SecondLine,_LCD_Command
   704                           	FNCALL	_LCD_Command,_LCD_Busy
   705                           	FNROOT	_main
   706                           	global	_PORTD
   707                           _PORTD	set	0x8
   708  0008                     	global	_PORTC
   709                           _PORTC	set	0x7
   710  0007                     	global	_RD7
   711                           _RD7	set	0x47
   712  0047                     	global	_RA2
   713                           _RA2	set	0x2A
   714  002A                     	global	_RA1
   715                           _RA1	set	0x29
   716  0029                     	global	_RA3
   717                           _RA3	set	0x2B
   718  002B                     	global	_RC0
   719                           _RC0	set	0x38
   720  0038                     	global	_RC1
   721                           _RC1	set	0x39
   722  0039                     	global	_RC2
   723                           _RC2	set	0x3A
   724  003A                     	global	_RC3
   725                           _RC3	set	0x3B
   726  003B                     	global	_RC7
   727                           _RC7	set	0x3F
   728  003F                     	global	_RC6
   729                           _RC6	set	0x3E
   730  003E                     	global	_RC5
   731                           _RC5	set	0x3D
   732  003D                     	global	_RC4
   733                           _RC4	set	0x3C
   734  003C                     	global	_RB5
   735                           _RB5	set	0x35
   736  0035                     	global	_RB0
   737                           _RB0	set	0x30
   738  0030                     	global	_RB4
   739                           _RB4	set	0x34
   740  0034                     	global	_ADCON1
   741                           _ADCON1	set	0x9F
   742  009F                     	global	_TRISA
   743                           _TRISA	set	0x85
   744  0085                     	global	_TRISD
   745                           _TRISD	set	0x88
   746  0088                     	global	_TRISC
   747                           _TRISC	set	0x87
   748  0087                     	global	_TRISB
   749                           _TRISB	set	0x86
   750  0086                     	global	_TRISB4
   751                           _TRISB4	set	0x434
   752  0434                     psect	strings,class=STRING,delta=2,noexec
   753                           global __pstrings
   754                           __pstrings:
   755  0000'                    stringtab:
   756  0000'                    	global    __stringtab
   757                           __stringtab:
   758  0000'                    ;	String table - string pointers are 1 byte each
   759                           	btfsc	(btemp+1),7
   760  0000' 1BFF               	ljmp	stringcode
   761  0001' 2800'              	bcf	status,7
   762  0002' 1383               	btfsc	(btemp+1),0
   763  0003' 187F               	bsf	status,7
   764  0004' 1783               	movf	indf,w
   765  0005' 0800               	incf fsr
   766  0006' 0A84               skipnz
   767  0007' 1903               incf btemp+1
   768  0008' 0AFF               	return
   769  0009' 0008               stringcode:stringdir:
   770  000A'                    movlw high(stringdir)
      + 000A'                    stringdir:	
   771  000A' 3000'              movwf pclath
   772  000B' 008A               movf fsr,w
   773  000C' 0804               incf fsr
   774  000D' 0A84               	addwf pc
   775  000E' 0782               	global __stringbase
   776                           __stringbase:
   777  000F'                    	retlw	0
   778  000F' 3400               psect	strings
   779                           	global    __end_of__stringtab
   780                           __end_of__stringtab:
   781  0010'                    	
   782                           STR_1:	
   783  0010'                    	retlw	68	;'D'
   784  0010' 3444               	retlw	97	;'a'
   785  0011' 3461               	retlw	116	;'t'
   786  0012' 3474               	retlw	101	;'e'
   787  0013' 3465               	retlw	58	;':'
   788  0014' 343A               	retlw	32	;' '
   789  0015' 3420               	retlw	0
   790  0016' 3400               psect	strings
   791                           ; #config settings
   792                           global __CFG_FOSC$HS
   793                           __CFG_FOSC$HS equ 0x0
   794  0000                     global __CFG_WDTE$OFF
   795                           __CFG_WDTE$OFF equ 0x0
   796  0000                     global __CFG_PWRTE$ON
   797                           __CFG_PWRTE$ON equ 0x0
   798  0000                     global __CFG_BOREN$OFF
   799                           __CFG_BOREN$OFF equ 0x0
   800  0000                     global __CFG_LVP$OFF
   801                           __CFG_LVP$OFF equ 0x0
   802  0000                     	file	"C:\Users\515817\AppData\Local\Temp\sbgs."
   803                           	line	#
   804                           psect cinit,class=CODE,delta=2
   805                           global start_initialization
   806                           start_initialization:
   807  0000'                    
   808                           global __initialization
   809                           __initialization:
   810  0000'                    psect cinit,class=CODE,delta=2,merge=1
   811                           global end_of_initialization,__end_of__initialization
   812                           
   813                           ;End of C runtime variable initialization code
   814                           
   815                           end_of_initialization:
   816  0000'                    __end_of__initialization:
   817  0000'                    clrf status
   818  0000' 0183               ljmp _main	;jump to C main() function
   819  0001' 120A' 118A' 2800'  psect	cstackCOMMON,class=COMMON,space=1,noexec
   820                           global __pcstackCOMMON
   821                           __pcstackCOMMON:
   822  0000'                    ?_RealTimeClock_get_time:	; 1 bytes @ 0x0
   823  0000'                    ?_LCD_Init:	; 1 bytes @ 0x0
   824  0000'                    ??_LCD_Init:	; 1 bytes @ 0x0
   825  0000'                    ?_Init_Keypad:	; 1 bytes @ 0x0
   826  0000'                    ??_Init_Keypad:	; 1 bytes @ 0x0
   827  0000'                    ?_RealTimeClock_init:	; 1 bytes @ 0x0
   828  0000'                    ?_LCD_Command:	; 1 bytes @ 0x0
   829  0000'                    ??_LCD_Command:	; 1 bytes @ 0x0
   830  0000'                    ?_LCD_SecondLine:	; 1 bytes @ 0x0
   831  0000'                    ?_Get_Temp:	; 1 bytes @ 0x0
   832  0000'                    ??_Get_Temp:	; 1 bytes @ 0x0
   833  0000'                    ?_Sound:	; 1 bytes @ 0x0
   834  0000'                    ??_Sound:	; 1 bytes @ 0x0
   835  0000'                    ?_get_date_time:	; 1 bytes @ 0x0
   836  0000'                    ?_main:	; 1 bytes @ 0x0
   837  0000'                    ?_RealTimeClock_write_byte:	; 1 bytes @ 0x0
   838  0000'                    ??_RealTimeClock_write_byte:	; 1 bytes @ 0x0
   839  0000'                    ?_RealTimeClock_read_byte:	; 1 bytes @ 0x0
   840  0000'                    ??_RealTimeClock_read_byte:	; 1 bytes @ 0x0
   841  0000'                    ?_LCD_Busy:	; 1 bytes @ 0x0
   842  0000'                    ??_LCD_Busy:	; 1 bytes @ 0x0
   843  0000'                    ?_LCD_SendData:	; 1 bytes @ 0x0
   844  0000'                    ??_LCD_SendData:	; 1 bytes @ 0x0
   845  0000'                    	global	?___wmul
   846                           ?___wmul:	; 2 bytes @ 0x0
   847  0000'                    	global	LCD_Command@c
   848                           LCD_Command@c:	; 1 bytes @ 0x0
   849  0000'                    	global	LCD_SendData@c
   850                           LCD_SendData@c:	; 1 bytes @ 0x0
   851  0000'                    	global	___wmul@multiplier
   852                           ___wmul@multiplier:	; 2 bytes @ 0x0
   853  0000'                    	ds	1
   854  0000'                    ?_LCD_SendString:	; 1 bytes @ 0x1
   855  0001'                    ??_LCD_SecondLine:	; 1 bytes @ 0x1
   856  0001'                    	global	LCD_SendString@string
   857                           LCD_SendString@string:	; 2 bytes @ 0x1
   858  0001'                    	ds	1
   859  0001'                    	global	RealTimeClock_write_byte@i
   860                           RealTimeClock_write_byte@i:	; 2 bytes @ 0x2
   861  0002'                    	global	RealTimeClock_read_byte@i
   862                           RealTimeClock_read_byte@i:	; 2 bytes @ 0x2
   863  0002'                    	global	___wmul@multiplicand
   864                           ___wmul@multiplicand:	; 2 bytes @ 0x2
   865  0002'                    	ds	1
   866  0002'                    ??_LCD_SendString:	; 1 bytes @ 0x3
   867  0003'                    	global	LCD_SendString@i
   868                           LCD_SendString@i:	; 2 bytes @ 0x3
   869  0003'                    	ds	1
   870  0003'                    ??___wmul:	; 1 bytes @ 0x4
   871  0004'                    	global	RealTimeClock_write_byte@time_tx
   872                           RealTimeClock_write_byte@time_tx:	; 1 bytes @ 0x4
   873  0004'                    	global	RealTimeClock_read_byte@time_rx
   874                           RealTimeClock_read_byte@time_rx:	; 1 bytes @ 0x4
   875  0004'                    	global	___wmul@product
   876                           ___wmul@product:	; 2 bytes @ 0x4
   877  0004'                    	ds	1
   878  0004'                    ??_RealTimeClock_get_time:	; 1 bytes @ 0x5
   879  0005'                    ??_RealTimeClock_init:	; 1 bytes @ 0x5
   880  0005'                    	ds	1
   881  0005'                    	global	RealTimeClock_get_time@time
   882                           RealTimeClock_get_time@time:	; 1 bytes @ 0x6
   883  0006'                    	ds	1
   884  0006'                    	global	RealTimeClock_get_time@i
   885                           RealTimeClock_get_time@i:	; 2 bytes @ 0x7
   886  0007'                    	ds	2
   887  0007'                    ??_main:	; 1 bytes @ 0x9
   888  0009'                    	ds	1
   889  0009'                    psect	cstackBANK0,class=BANK0,space=1,noexec
   890                           global __pcstackBANK0
   891                           __pcstackBANK0:
   892  0000'                    ??_get_date_time:	; 1 bytes @ 0x0
   893  0000'                    	ds	6
   894  0000'                    	global	get_date_time@time
   895                           get_date_time@time:	; 7 bytes @ 0x6
   896  0006'                    	ds	7
   897  0006'                    	global	get_date_time@date_time
   898                           get_date_time@date_time:	; 1 bytes @ 0xD
   899  000D'                    	ds	1
   900  000D'                    	global	main@Key
   901                           main@Key:	; 1 bytes @ 0xE
   902  000E'                    	ds	1
   903  000E'                    	global	main@secs
   904                           main@secs:	; 2 bytes @ 0xF
   905  000F'                    	ds	2
   906  000F'                    	global	main@mins
   907                           main@mins:	; 2 bytes @ 0x11
   908  0011'                    	ds	2
   909  0011'                    	global	main@Date
   910                           main@Date:	; 1 bytes @ 0x13
   911  0013'                    	ds	1
   912  0013'                    	global	main@test
   913                           main@test:	; 4 bytes @ 0x14
   914  0014'                    	ds	4
   915  0014'                    ;!
   916                           ;!Data Sizes:
   917                           ;!    Strings     7
   918                           ;!    Constant    0
   919                           ;!    Data        0
   920                           ;!    BSS         0
   921                           ;!    Persistent  0
   922                           ;!    Stack       0
   923                           ;!
   924                           ;!Auto Spaces:
   925                           ;!    Space          Size  Autos    Used
   926                           ;!    COMMON           14     10      10
   927                           ;!    BANK0            80     24      24
   928                           ;!    BANK1            80      0       0
   929                           ;!    BANK3            96      0       0
   930                           ;!    BANK2            96      0       0
   931                           
   932                           ;!
   933                           ;!Pointer List with Targets:
   934                           ;!
   935                           ;!    LCD_SendString@string	PTR const unsigned char  size(2) Largest target is 512
   936                           ;!		 -> RAM(DATA[512]), STR_1(CODE[7]), 
   937                           ;!
   938                           ;!    RealTimeClock_get_time@time	PTR unsigned char  size(1) Largest target is 7
   939                           ;!		 -> get_date_time@time(BANK0[7]), 
   940                           ;!
   941                           ;!    main@mins	PTR unsigned char  size(2) Largest target is 512
   942                           ;!		 -> RAM(DATA[512]), 
   943                           ;!
   944                           ;!    main@secs	PTR unsigned char  size(2) Largest target is 512
   945                           ;!		 -> RAM(DATA[512]), 
   946                           ;!
   947                           ;!    main@Date	PTR unsigned char  size(1) Largest target is 7
   948                           ;!		 -> STR_1(CODE[7]), 
   949                           ;!
   950                           ;!    get_date_time@date_time	PTR unsigned int  size(1) Largest target is 4
   951                           ;!		 -> main@test(BANK0[4]), 
   952                           ;!
   953                           
   954                           
   955                           ;!
   956                           ;!Critical Paths under _main in COMMON
   957                           ;!
   958                           ;!    _get_date_time->_RealTimeClock_get_time
   959                           ;!    _RealTimeClock_get_time->_RealTimeClock_read_byte
   960                           ;!    _RealTimeClock_get_time->_RealTimeClock_write_byte
   961                           ;!    _RealTimeClock_init->_RealTimeClock_write_byte
   962                           ;!    _LCD_SendString->_LCD_SendData
   963                           ;!    _LCD_SecondLine->_LCD_Command
   964                           ;!
   965                           ;!Critical Paths under _main in BANK0
   966                           ;!
   967                           ;!    _main->_get_date_time
   968                           ;!
   969                           ;!Critical Paths under _main in BANK1
   970                           ;!
   971                           ;!    None.
   972                           ;!
   973                           ;!Critical Paths under _main in BANK3
   974                           ;!
   975                           ;!    None.
   976                           ;!
   977                           ;!Critical Paths under _main in BANK2
   978                           ;!
   979                           ;!    None.
   980                           
   981 ;;
   982 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   983 ;;
   984                           
   985                           ;!
   986                           ;!Call Graph Tables:
   987                           ;!
   988                           ;! ---------------------------------------------------------------------------------
   989                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   990                           ;! ---------------------------------------------------------------------------------
   991                           ;! (0) _main                                                11    11      0    1508
   992                           ;!                                              9 COMMON     1     1      0
   993                           ;!                                             14 BANK0     10    10      0
   994                           ;!                           _Get_Temp
   995                           ;!                        _Init_Keypad
   996                           ;!                        _LCD_Command
   997                           ;!                           _LCD_Init
   998                           ;!                     _LCD_SecondLine
   999                           ;!                     _LCD_SendString
  1000                           ;!                 _RealTimeClock_init
  1001                           ;!                              _Sound
  1002                           ;!                      _get_date_time
  1003                           ;! ---------------------------------------------------------------------------------
  1004                           ;! (1) _get_date_time                                       14    14      0     892
  1005                           ;!                                              0 BANK0     14    14      0
  1006                           ;!             _RealTimeClock_get_time
  1007                           ;!                             ___wmul
  1008                           ;! ---------------------------------------------------------------------------------
  1009                           ;! (2) ___wmul                                               6     2      4     396
  1010                           ;!                                              0 COMMON     6     2      4
  1011                           ;! ---------------------------------------------------------------------------------
  1012                           ;! (2) _RealTimeClock_get_time                               4     4      0     306
  1013                           ;!                                              5 COMMON     4     4      0
  1014                           ;!            _RealTimeClock_read_byte
  1015                           ;!           _RealTimeClock_write_byte
  1016                           ;! ---------------------------------------------------------------------------------
  1017                           ;! (3) _RealTimeClock_read_byte                              5     5      0      92
  1018                           ;!                                              0 COMMON     5     5      0
  1019                           ;! ---------------------------------------------------------------------------------
  1020                           ;! (1) _Sound                                                0     0      0       0
  1021                           ;! ---------------------------------------------------------------------------------
  1022                           ;! (1) _RealTimeClock_init                                   0     0      0      91
  1023                           ;!           _RealTimeClock_write_byte
  1024                           ;! ---------------------------------------------------------------------------------
  1025                           ;! (3) _RealTimeClock_write_byte                             5     5      0      91
  1026                           ;!                                              0 COMMON     5     5      0
  1027                           ;! ---------------------------------------------------------------------------------
  1028                           ;! (1) _LCD_SendString                                       4     2      2     340
  1029                           ;!                                              1 COMMON     4     2      2
  1030                           ;!                       _LCD_SendData
  1031                           ;! ---------------------------------------------------------------------------------
  1032                           ;! (2) _LCD_SendData                                         1     1      0      22
  1033                           ;!                                              0 COMMON     1     1      0
  1034                           ;!                           _LCD_Busy
  1035                           ;! ---------------------------------------------------------------------------------
  1036                           ;! (1) _LCD_SecondLine                                       0     0      0      22
  1037                           ;!                        _LCD_Command
  1038                           ;! ---------------------------------------------------------------------------------
  1039                           ;! (2) _LCD_Command                                          1     1      0      22
  1040                           ;!                                              0 COMMON     1     1      0
  1041                           ;!                           _LCD_Busy
  1042                           ;! ---------------------------------------------------------------------------------
  1043                           ;! (3) _LCD_Busy                                             0     0      0       0
  1044                           ;! ---------------------------------------------------------------------------------
  1045                           ;! (1) _LCD_Init                                             0     0      0       0
  1046                           ;! ---------------------------------------------------------------------------------
  1047                           ;! (1) _Init_Keypad                                          0     0      0       0
  1048                           ;! ---------------------------------------------------------------------------------
  1049                           ;! (1) _Get_Temp                                             0     0      0       0
  1050                           ;! ---------------------------------------------------------------------------------
  1051                           ;! Estimated maximum stack depth 3
  1052                           ;! ---------------------------------------------------------------------------------
  1053                           ;!
  1054                           ;! Call Graph Graphs:
  1055                           ;!
  1056                           ;! _main (ROOT)
  1057                           ;!   _Get_Temp
  1058                           ;!   _Init_Keypad
  1059                           ;!   _LCD_Command
  1060                           ;!     _LCD_Busy
  1061                           ;!   _LCD_Init
  1062                           ;!   _LCD_SecondLine
  1063                           ;!     _LCD_Command
  1064                           ;!       _LCD_Busy
  1065                           ;!   _LCD_SendString
  1066                           ;!     _LCD_SendData
  1067                           ;!       _LCD_Busy
  1068                           ;!   _RealTimeClock_init
  1069                           ;!     _RealTimeClock_write_byte
  1070                           ;!   _Sound
  1071                           ;!   _get_date_time
  1072                           ;!     _RealTimeClock_get_time
  1073                           ;!       _RealTimeClock_read_byte
  1074                           ;!       _RealTimeClock_write_byte
  1075                           ;!     ___wmul
  1076                           ;!
  1077                           
  1078                           ;! Address spaces:
  1079                           
  1080                           ;!Name               Size   Autos  Total    Cost      Usage
  1081                           ;!BITCOMMON            E      0       0       0        0.0%
  1082                           ;!EEDATA             100      0       0       0        0.0%
  1083                           ;!NULL                 0      0       0       0        0.0%
  1084                           ;!CODE                 0      0       0       0        0.0%
  1085                           ;!COMMON               E      A       A       1       71.4%
  1086                           ;!BITSFR0              0      0       0       1        0.0%
  1087                           ;!SFR0                 0      0       0       1        0.0%
  1088                           ;!BITSFR1              0      0       0       2        0.0%
  1089                           ;!SFR1                 0      0       0       2        0.0%
  1090                           ;!STACK                0      0       0       2        0.0%
  1091                           ;!ABS                  0      0       0       3        0.0%
  1092                           ;!BITBANK0            50      0       0       4        0.0%
  1093                           ;!BITSFR3              0      0       0       4        0.0%
  1094                           ;!SFR3                 0      0       0       4        0.0%
  1095                           ;!BANK0               50     18      18       5       30.0%
  1096                           ;!BITSFR2              0      0       0       5        0.0%
  1097                           ;!SFR2                 0      0       0       5        0.0%
  1098                           ;!BITBANK1            50      0       0       6        0.0%
  1099                           ;!BANK1               50      0       0       7        0.0%
  1100                           ;!BITBANK3            60      0       0       8        0.0%
  1101                           ;!BANK3               60      0       0       9        0.0%
  1102                           ;!BITBANK2            60      0       0      10        0.0%
  1103                           ;!BANK2               60      0       0      11        0.0%
  1104                           ;!DATA                 0      0       0      12        0.0%
  1105                           
  1106                           	global	_main
  1107                           
  1108 ;; *************** function _main *****************
  1109 ;; Defined at:
  1110 ;;		line 34 in file "main.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  mins            2   17[BANK0 ] PTR unsigned char 
  1115 ;;		 -> RAM(512), 
  1116 ;;  secs            2   15[BANK0 ] PTR unsigned char 
  1117 ;;		 -> RAM(512), 
  1118 ;;  test            4   20[BANK0 ] int [2]
  1119 ;;  Date            1   19[BANK0 ] PTR unsigned char 
  1120 ;;		 -> STR_1(7), 
  1121 ;;  Key             1   14[BANK0 ] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : B00/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1131 ;;      Params:         0       0       0       0       0
  1132 ;;      Locals:         0      10       0       0       0
  1133 ;;      Temps:          1       0       0       0       0
  1134 ;;      Totals:         1      10       0       0       0
  1135 ;;Total ram usage:       11 bytes
  1136 ;; Hardware stack levels required when called:    3
  1137 ;; This function calls:
  1138 ;;		_Get_Temp
  1139 ;;		_Init_Keypad
  1140 ;;		_LCD_Command
  1141 ;;		_LCD_Init
  1142 ;;		_LCD_SecondLine
  1143 ;;		_LCD_SendString
  1144 ;;		_RealTimeClock_init
  1145 ;;		_Sound
  1146 ;;		_get_date_time
  1147 ;; This function is called by:
  1148 ;;		Startup code after reset
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1152                           	file	"main.c"
  1153                           	line	34
  1154                           global __pmaintext
  1155                           __pmaintext:	;psect for function _main
  1156  0000'                    psect	maintext
  1157                           	file	"main.c"
  1158                           	line	34
  1159                           	global	__size_of_main
  1160                           	__size_of_main	equ	__end_of_main-_main
  1161  0087                     	
  1162                           _main:	
  1163  0000'                    ;incstack = 0
  1164                           	opt	stack 5
  1165                           ; Regs used in _main: [allreg]
  1166                           	line	36
  1167                           	
  1168                           l1208:	
  1169  0000'                    ;main.c: 36:     LCD_SendString(mins);
  1170                           	bsf	status, 5	;RP0=1, select bank1
  1171  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  1172  0001' 1303               	clrf	(134)^080h	;volatile
  1173  0002' 0186               	line	37
  1174                           	
  1175                           l1210:	
  1176  0003'                    ;main.c: 37:     LCD_SecondLine();
  1177                           	fcall	_LCD_Init
  1178  0003' 120A' 118A' 2000' 120A' 118A' 	line	38
  1179                           	
  1180                           l1212:	
  1181  0008'                    ;main.c: 38:     Get_Temp();
  1182                           	fcall	_Init_Keypad
  1183  0008' 120A' 118A' 2000' 120A' 118A' 	line	39
  1184                           	
  1185                           l1214:	
  1186  000D'                    ;main.c: 39:     Sound(0b00000001);
  1187                           	fcall	_RealTimeClock_init
  1188  000D' 120A' 118A' 2000' 120A' 118A' 	line	41
  1189                           	
  1190                           l1216:	
  1191  0012'                    ;main.c: 40:     };main.c: 41: }
  1192                           	movlw	low(06Eh)
  1193  0012' 306E               	movwf	(??_main+0)+0
  1194  0013' 0089'              	movf	(??_main+0)+0,w
  1195  0014' 0809'              	bcf	status, 5	;RP0=0, select bank0
  1196  0015' 1283               	bcf	status, 6	;RP1=0, select bank0
  1197  0016' 1303               	movwf	(main@Key)
  1198  0017' 008E'              	line	42
  1199                           	
  1200                           l1218:	
  1201  0018'                    	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1202  0018' 3001               	movwf	(??_main+0)+0
  1203  0019' 0089'              	movf	(??_main+0)+0,w
  1204  001A' 0809'              	movwf	(main@Date)
  1205  001B' 0093'              	line	43
  1206                           	
  1207                           l1220:	
  1208  001C'                    	movlw	low(0Ch)
  1209  001C' 300C               	fcall	_LCD_Command
  1210  001D' 120A' 118A' 2000' 120A' 118A' 	line	44
  1211                           	
  1212                           l1222:	
  1213  0022'                    	movlw	low(01h)
  1214  0022' 3001               	fcall	_LCD_Command
  1215  0023' 120A' 118A' 2000' 120A' 118A' 	line	45
  1216                           	
  1217                           l1224:	
  1218  0028'                    	movlw	low(03h)
  1219  0028' 3003               	fcall	_LCD_Command
  1220  0029' 120A' 118A' 2000' 120A' 118A' 	line	46
  1221                           	
  1222                           l1226:	
  1223  002E'                    	movlw	low(038h)
  1224  002E' 3038               	fcall	_LCD_Command
  1225  002F' 120A' 118A' 2000' 120A' 118A' 	goto	l1228
  1226  0034' 2800'              	line	47
  1227                           	
  1228                           l28:	
  1229  0035'                    	line	50
  1230                           	
  1231                           l1228:	
  1232  0035'                    	movlw	low(03h)
  1233  0035' 3003               	fcall	_LCD_Command
  1234  0036' 120A' 118A' 2000' 120A' 118A' 	line	51
  1235                           	
  1236                           l1230:	
  1237  003B'                    	bcf	status, 5	;RP0=0, select bank0
  1238  003B' 1283               	bcf	status, 6	;RP1=0, select bank0
  1239  003C' 1303               		movf	(main@Date),w
  1240  003D' 0813'              	movwf	(LCD_SendString@string)
  1241  003E' 0081'              	movlw	0
  1242  003F' 3000               	btfss	status,2
  1243  0040' 1D03               	movlw	080h
  1244  0041' 3080               	movwf	(LCD_SendString@string+1)
  1245  0042' 0082'              
  1246                           	fcall	_LCD_SendString
  1247  0043' 120A' 118A' 2000' 120A' 118A' 	line	52
  1248                           	
  1249                           l1232:	
  1250  0048'                    	movlw	low(014h)
  1251  0048' 3014               	fcall	_LCD_Command
  1252  0049' 120A' 118A' 2000' 120A' 118A' 	line	53
  1253                           	
  1254                           l1234:	
  1255  004E'                    	movlw	(low(main@test|((0x0)<<8)))&0ffh
  1256  004E' 3000'              	fcall	_get_date_time
  1257  004F' 120A' 118A' 2000' 120A' 118A' 	line	56
  1258                           	
  1259                           l1236:	
  1260  0054'                    	bcf	status, 5	;RP0=0, select bank0
  1261  0054' 1283               	bcf	status, 6	;RP1=0, select bank0
  1262  0055' 1303               		movf	(main@test),w
  1263  0056' 0814'              	movwf	(main@secs)
  1264  0057' 008F'              movf	(main@test+1),w
  1265  0058' 0815'              movwf	(main@secs+1)
  1266  0059' 0090'              
  1267                           	line	57
  1268                           	
  1269                           l1238:	
  1270  005A'                    		movf	(0+low(main@test|((0x0)<<8)+02h)),w
  1271  005A' 0800'              	movwf	(main@mins)
  1272  005B' 0091'              movf	(1+low(main@test|((0x0)<<8)+02h)),w
  1273  005C' 0801'              movwf	(main@mins+1)
  1274  005D' 0092'              
  1275                           	line	58
  1276                           	
  1277                           l1240:	
  1278  005E'                    		movf	(main@secs),w
  1279  005E' 080F'              	movwf	(LCD_SendString@string)
  1280  005F' 0081'              movf	(main@secs+1),w
  1281  0060' 0810'              movwf	(LCD_SendString@string+1)
  1282  0061' 0082'              
  1283                           	fcall	_LCD_SendString
  1284  0062' 120A' 118A' 2000' 120A' 118A' 	line	59
  1285                           	
  1286                           l1242:	
  1287  0067'                    	bcf	status, 5	;RP0=0, select bank0
  1288  0067' 1283               	bcf	status, 6	;RP1=0, select bank0
  1289  0068' 1303               		movf	(main@mins),w
  1290  0069' 0811'              	movwf	(LCD_SendString@string)
  1291  006A' 0081'              movf	(main@mins+1),w
  1292  006B' 0812'              movwf	(LCD_SendString@string+1)
  1293  006C' 0082'              
  1294                           	fcall	_LCD_SendString
  1295  006D' 120A' 118A' 2000' 120A' 118A' 	line	60
  1296                           	
  1297                           l1244:	
  1298  0072'                    	fcall	_LCD_SecondLine
  1299  0072' 120A' 118A' 2000' 120A' 118A' 	line	61
  1300                           	
  1301                           l1246:	
  1302  0077'                    	fcall	_Get_Temp
  1303  0077' 120A' 118A' 2000' 120A' 118A' 	line	62
  1304                           	
  1305                           l1248:	
  1306  007C'                    	movlw	low(01h)
  1307  007C' 3001               	fcall	_Sound
  1308  007D' 120A' 118A' 2000' 120A' 118A' 	goto	l1228
  1309  0082' 2800'              	line	63
  1310                           	
  1311                           l29:	
  1312  0083'                    	goto	l1228
  1313  0083' 2800'              	
  1314                           l30:	
  1315  0084'                    	line	64
  1316                           	
  1317                           l31:	
  1318  0084'                    	global	start
  1319                           	ljmp	start
  1320  0084' 120A' 118A' 2800'  	opt stack 0
  1321                           GLOBAL	__end_of_main
  1322                           	__end_of_main:
  1323  0087'                    	signat	_main,89
  1324                           	global	_get_date_time
  1325                           
  1326 ;; *************** function _get_date_time *****************
  1327 ;; Defined at:
  1328 ;;		line 27 in file "main.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  date_time       1    wreg     PTR unsigned int 
  1331 ;;		 -> main@test(4), 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  date_time       1   13[BANK0 ] PTR unsigned int 
  1334 ;;		 -> main@test(4), 
  1335 ;;  time            7    6[BANK0 ] unsigned char [7]
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         0       0       0       0       0
  1346 ;;      Locals:         0       8       0       0       0
  1347 ;;      Temps:          0       6       0       0       0
  1348 ;;      Totals:         0      14       0       0       0
  1349 ;;Total ram usage:       14 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    2
  1352 ;; This function calls:
  1353 ;;		_RealTimeClock_get_time
  1354 ;;		___wmul
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1360                           	line	27
  1361                           global __ptext1
  1362                           __ptext1:	;psect for function _get_date_time
  1363  0000'                    psect	text1
  1364                           	file	"main.c"
  1365                           	line	27
  1366                           	global	__size_of_get_date_time
  1367                           	__size_of_get_date_time	equ	__end_of_get_date_time-_get_date_time
  1368  0069                     	
  1369                           _get_date_time:	
  1370  0000'                    ;incstack = 0
  1371                           	opt	stack 5
  1372                           ; Regs used in _get_date_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1373                           ;get_date_time@date_time stored from wreg
  1374                           	bcf	status, 5	;RP0=0, select bank0
  1375  0000' 1283               	bcf	status, 6	;RP1=0, select bank0
  1376  0001' 1303               	movwf	(get_date_time@date_time)
  1377  0002' 008D'              	line	29
  1378                           	
  1379                           l1172:	
  1380  0003'                    ;main.c: 28:     LCD_SendString(Date);;main.c: 29:     LCD_Command(0x14);
  1381                           	movlw	(low(get_date_time@time|((0x0)<<8)))&0ffh
  1382  0003' 3000'              	fcall	_RealTimeClock_get_time
  1383  0004' 120A' 118A' 2000' 120A' 118A' 	line	30
  1384                           	
  1385                           l1174:	
  1386  0009'                    ;main.c: 30:     get_date_time(test);
  1387                           	movlw	low(0Fh)
  1388  0009' 300F               	bcf	status, 5	;RP0=0, select bank0
  1389  000A' 1283               	bcf	status, 6	;RP1=0, select bank0
  1390  000B' 1303               	andwf	(get_date_time@time),w
  1391  000C' 0506'              	movwf	(??_get_date_time+0)+0
  1392  000D' 0080'              	movf	(get_date_time@time),w
  1393  000E' 0806'              	movwf	(??_get_date_time+1)+0
  1394  000F' 0081'              	movlw	04h
  1395  0010' 3004               u665:
  1396  0011'                    	clrc
  1397  0011' 1003               	rrf	(??_get_date_time+1)+0,f
  1398  0012' 0C81'              	addlw	-1
  1399  0013' 3EFF               	skipz
  1400  0014' 1D03               	goto	u665
  1401  0015' 2800'              	movf	0+(??_get_date_time+1)+0,w
  1402  0016' 0801'              	andlw	07h
  1403  0017' 3907               	movwf	(??_get_date_time+2)+0
  1404  0018' 0082'              	clrf	(??_get_date_time+2)+0+1
  1405  0019' 0183'              	movf	0+(??_get_date_time+2)+0,w
  1406  001A' 0802'              	movwf	(___wmul@multiplier)
  1407  001B' 0080'              	movf	1+(??_get_date_time+2)+0,w
  1408  001C' 0803'              	movwf	(___wmul@multiplier+1)
  1409  001D' 0081'              	movlw	0Ah
  1410  001E' 300A               	movwf	(___wmul@multiplicand)
  1411  001F' 0082'              	movlw	0
  1412  0020' 3000               	movwf	((___wmul@multiplicand))+1
  1413  0021' 0083'              	fcall	___wmul
  1414  0022' 120A' 118A' 2000' 120A' 118A' 	bcf	status, 5	;RP0=0, select bank0
  1415  0027' 1283               	bcf	status, 6	;RP1=0, select bank0
  1416  0028' 1303               	movf	0+(??_get_date_time+0)+0,w
  1417  0029' 0800'              	addwf	(0+(?___wmul)),w
  1418  002A' 0700'              	movwf	(??_get_date_time+4)+0
  1419  002B' 0084'              	movlw	0
  1420  002C' 3000               	skipnc
  1421  002D' 1803               	movlw	1
  1422  002E' 3001               	addwf	(1+(?___wmul)),w
  1423  002F' 0701'              	movwf	1+(??_get_date_time+4)+0
  1424  0030' 0085'              	movf	(get_date_time@date_time),w
  1425  0031' 080D'              	movwf	fsr0
  1426  0032' 0084               	movf	0+(??_get_date_time+4)+0,w
  1427  0033' 0804'              	bcf	status, 7	;select IRP bank0
  1428  0034' 1383               	movwf	indf
  1429  0035' 0080               	incf	fsr0,f
  1430  0036' 0A84               	movf	1+(??_get_date_time+4)+0,w
  1431  0037' 0805'              	movwf	indf
  1432  0038' 0080               	line	31
  1433                           	
  1434                           l1176:	
  1435  0039'                    ;main.c: 31:     char* secs;
  1436                           	movlw	low(0Fh)
  1437  0039' 300F               	andwf	0+(get_date_time@time)+01h,w
  1438  003A' 0507'              	movwf	(??_get_date_time+0)+0
  1439  003B' 0080'              	movf	0+(get_date_time@time)+01h,w
  1440  003C' 0807'              	movwf	(??_get_date_time+1)+0
  1441  003D' 0081'              	movlw	04h
  1442  003E' 3004               u675:
  1443  003F'                    	clrc
  1444  003F' 1003               	rrf	(??_get_date_time+1)+0,f
  1445  0040' 0C81'              	addlw	-1
  1446  0041' 3EFF               	skipz
  1447  0042' 1D03               	goto	u675
  1448  0043' 2800'              	movf	0+(??_get_date_time+1)+0,w
  1449  0044' 0801'              	andlw	07h
  1450  0045' 3907               	movwf	(??_get_date_time+2)+0
  1451  0046' 0082'              	clrf	(??_get_date_time+2)+0+1
  1452  0047' 0183'              	movf	0+(??_get_date_time+2)+0,w
  1453  0048' 0802'              	movwf	(___wmul@multiplier)
  1454  0049' 0080'              	movf	1+(??_get_date_time+2)+0,w
  1455  004A' 0803'              	movwf	(___wmul@multiplier+1)
  1456  004B' 0081'              	movlw	0Ah
  1457  004C' 300A               	movwf	(___wmul@multiplicand)
  1458  004D' 0082'              	movlw	0
  1459  004E' 3000               	movwf	((___wmul@multiplicand))+1
  1460  004F' 0083'              	fcall	___wmul
  1461  0050' 120A' 118A' 2000' 120A' 118A' 	bcf	status, 5	;RP0=0, select bank0
  1462  0055' 1283               	bcf	status, 6	;RP1=0, select bank0
  1463  0056' 1303               	movf	0+(??_get_date_time+0)+0,w
  1464  0057' 0800'              	addwf	(0+(?___wmul)),w
  1465  0058' 0700'              	movwf	(??_get_date_time+4)+0
  1466  0059' 0084'              	movlw	0
  1467  005A' 3000               	skipnc
  1468  005B' 1803               	movlw	1
  1469  005C' 3001               	addwf	(1+(?___wmul)),w
  1470  005D' 0701'              	movwf	1+(??_get_date_time+4)+0
  1471  005E' 0085'              	movf	(get_date_time@date_time),w
  1472  005F' 080D'              	addlw	02h
  1473  0060' 3E02               	movwf	fsr0
  1474  0061' 0084               	movf	0+(??_get_date_time+4)+0,w
  1475  0062' 0804'              	bcf	status, 7	;select IRP bank0
  1476  0063' 1383               	movwf	indf
  1477  0064' 0080               	incf	fsr0,f
  1478  0065' 0A84               	movf	1+(??_get_date_time+4)+0,w
  1479  0066' 0805'              	movwf	indf
  1480  0067' 0080               	line	32
  1481                           	
  1482                           l23:	
  1483  0068'                    	return
  1484  0068' 0008               	opt stack 0
  1485                           GLOBAL	__end_of_get_date_time
  1486                           	__end_of_get_date_time:
  1487  0069'                    	signat	_get_date_time,4217
  1488                           	global	___wmul
  1489                           
  1490 ;; *************** function ___wmul *****************
  1491 ;; Defined at:
  1492 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  multiplier      2    0[COMMON] unsigned int 
  1495 ;;  multiplicand    2    2[COMMON] unsigned int 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  product         2    4[COMMON] unsigned int 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  2    0[COMMON] unsigned int 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1507 ;;      Params:         4       0       0       0       0
  1508 ;;      Locals:         2       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0
  1510 ;;      Totals:         6       0       0       0       0
  1511 ;;Total ram usage:        6 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; This function calls:
  1514 ;;		Nothing
  1515 ;; This function is called by:
  1516 ;;		_get_date_time
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           psect	text2,local,class=CODE,delta=2,merge=1,group=1
  1520                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  1521                           	line	15
  1522                           global __ptext2
  1523                           __ptext2:	;psect for function ___wmul
  1524  0000'                    psect	text2
  1525                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  1526                           	line	15
  1527                           	global	__size_of___wmul
  1528                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  1529  0028                     	
  1530                           ___wmul:	
  1531  0000'                    ;incstack = 0
  1532                           	opt	stack 6
  1533                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1534                           	line	43
  1535                           	
  1536                           l1158:	
  1537  0000'                    	clrf	(___wmul@product)
  1538  0000' 0184'              	clrf	(___wmul@product+1)
  1539  0001' 0185'              	goto	l1160
  1540  0002' 2800'              	line	44
  1541                           	
  1542                           l294:	
  1543  0003'                    	line	45
  1544                           	
  1545                           l1160:	
  1546  0003'                    	btfss	(___wmul@multiplier),(0)&7
  1547  0003' 1C00'              	goto	u621
  1548  0004' 2800'              	goto	u620
  1549  0005' 2800'              u621:
  1550  0006'                    	goto	l295
  1551  0006' 2800'              u620:
  1552  0007'                    	line	46
  1553                           	
  1554                           l1162:	
  1555  0007'                    	movf	(___wmul@multiplicand),w
  1556  0007' 0802'              	addwf	(___wmul@product),f
  1557  0008' 0784'              	skipnc
  1558  0009' 1803               	incf	(___wmul@product+1),f
  1559  000A' 0A85'              	movf	(___wmul@multiplicand+1),w
  1560  000B' 0803'              	addwf	(___wmul@product+1),f
  1561  000C' 0785'              	
  1562                           l295:	
  1563  000D'                    	line	47
  1564                           	movlw	01h
  1565  000D' 3001               	
  1566                           u635:
  1567  000E'                    	clrc
  1568  000E' 1003               	rlf	(___wmul@multiplicand),f
  1569  000F' 0D82'              	rlf	(___wmul@multiplicand+1),f
  1570  0010' 0D83'              	addlw	-1
  1571  0011' 3EFF               	skipz
  1572  0012' 1D03               	goto	u635
  1573  0013' 2800'              	line	48
  1574                           	
  1575                           l1164:	
  1576  0014'                    	movlw	01h
  1577  0014' 3001               	
  1578                           u645:
  1579  0015'                    	clrc
  1580  0015' 1003               	rrf	(___wmul@multiplier+1),f
  1581  0016' 0C81'              	rrf	(___wmul@multiplier),f
  1582  0017' 0C80'              	addlw	-1
  1583  0018' 3EFF               	skipz
  1584  0019' 1D03               	goto	u645
  1585  001A' 2800'              	line	49
  1586                           	
  1587                           l1166:	
  1588  001B'                    	movf	((___wmul@multiplier)),w
  1589  001B' 0800'              iorwf	((___wmul@multiplier+1)),w
  1590  001C' 0401'              	btfss	status,2
  1591  001D' 1D03               	goto	u651
  1592  001E' 2800'              	goto	u650
  1593  001F' 2800'              u651:
  1594  0020'                    	goto	l1160
  1595  0020' 2800'              u650:
  1596  0021'                    	goto	l1168
  1597  0021' 2800'              	
  1598                           l296:	
  1599  0022'                    	line	52
  1600                           	
  1601                           l1168:	
  1602  0022'                    	movf	(___wmul@product+1),w
  1603  0022' 0805'              	movwf	(?___wmul+1)
  1604  0023' 0081'              	movf	(___wmul@product),w
  1605  0024' 0804'              	movwf	(?___wmul)
  1606  0025' 0080'              	goto	l297
  1607  0026' 2800'              	
  1608                           l1170:	
  1609  0027'                    	line	53
  1610                           	
  1611                           l297:	
  1612  0027'                    	return
  1613  0027' 0008               	opt stack 0
  1614                           GLOBAL	__end_of___wmul
  1615                           	__end_of___wmul:
  1616  0028'                    	signat	___wmul,8314
  1617                           	global	_RealTimeClock_get_time
  1618                           
  1619 ;; *************** function _RealTimeClock_get_time *****************
  1620 ;; Defined at:
  1621 ;;		line 38 in file "realtimeclock.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  time            1    wreg     PTR unsigned char 
  1624 ;;		 -> get_date_time@time(7), 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  time            1    6[COMMON] PTR unsigned char 
  1627 ;;		 -> get_date_time@time(7), 
  1628 ;;  i               2    7[COMMON] int 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         0       0       0       0       0
  1639 ;;      Locals:         3       0       0       0       0
  1640 ;;      Temps:          1       0       0       0       0
  1641 ;;      Totals:         4       0       0       0       0
  1642 ;;Total ram usage:        4 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    1
  1645 ;; This function calls:
  1646 ;;		_RealTimeClock_read_byte
  1647 ;;		_RealTimeClock_write_byte
  1648 ;; This function is called by:
  1649 ;;		_get_date_time
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1653                           	file	"realtimeclock.c"
  1654                           	line	38
  1655                           global __ptext3
  1656                           __ptext3:	;psect for function _RealTimeClock_get_time
  1657  0000'                    psect	text3
  1658                           	file	"realtimeclock.c"
  1659                           	line	38
  1660                           	global	__size_of_RealTimeClock_get_time
  1661                           	__size_of_RealTimeClock_get_time	equ	__end_of_RealTimeClock_get_time-_RealTimeClock_get
                                 _time
  1662  003E                     	
  1663                           _RealTimeClock_get_time:	
  1664  0000'                    ;incstack = 0
  1665                           	opt	stack 5
  1666                           ; Regs used in _RealTimeClock_get_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
                                 ack]
  1667                           ;RealTimeClock_get_time@time stored from wreg
  1668                           	movwf	(RealTimeClock_get_time@time)
  1669  0000' 0086'              	line	39
  1670                           	
  1671                           l1126:	
  1672  0001'                    ;realtimeclock.c: 39:     RB5 = 1;
  1673                           	bcf	status, 5	;RP0=0, select bank0
  1674  0001' 1283               	bcf	status, 6	;RP1=0, select bank0
  1675  0002' 1303               	bsf	(53/8),(53)&7	;volatile
  1676  0003' 1686               	line	40
  1677                           	
  1678                           l1128:	
  1679  0004'                    ;realtimeclock.c: 40:     RealTimeClock_write_byte(0xbf);
  1680                           	movlw	low(0BFh)
  1681  0004' 30BF               	fcall	_RealTimeClock_write_byte
  1682  0005' 120A' 118A' 2000' 120A' 118A' 	line	41
  1683                           	
  1684                           l1130:	
  1685  000A'                    ;realtimeclock.c: 41:     for(int i = 0; i < 7; ++i) {
  1686                           	clrf	(RealTimeClock_get_time@i)
  1687  000A' 0187'              	clrf	(RealTimeClock_get_time@i+1)
  1688  000B' 0188'              	
  1689                           l1132:	
  1690  000C'                    	movf	(RealTimeClock_get_time@i+1),w
  1691  000C' 0808'              	xorlw	80h
  1692  000D' 3A80               	movwf	btemp+1
  1693  000E' 00FF               	movlw	(0)^80h
  1694  000F' 3080               	subwf	btemp+1,w
  1695  0010' 027F               	skipz
  1696  0011' 1D03               	goto	u605
  1697  0012' 2800'              	movlw	07h
  1698  0013' 3007               	subwf	(RealTimeClock_get_time@i),w
  1699  0014' 0207'              u605:
  1700  0015'                    
  1701                           	skipc
  1702  0015' 1C03               	goto	u601
  1703  0016' 2800'              	goto	u600
  1704  0017' 2800'              u601:
  1705  0018'                    	goto	l1136
  1706  0018' 2800'              u600:
  1707  0019'                    	goto	l61
  1708  0019' 2800'              	
  1709                           l1134:	
  1710  001A'                    	goto	l61
  1711  001A' 2800'              	
  1712                           l60:	
  1713  001B'                    	line	42
  1714                           	
  1715                           l1136:	
  1716  001B'                    ;realtimeclock.c: 42:         RealTimeClock_read_byte(time[i]);
  1717                           	movf	(RealTimeClock_get_time@i),w
  1718  001B' 0807'              	addwf	(RealTimeClock_get_time@time),w
  1719  001C' 0706'              	movwf	(??_RealTimeClock_get_time+0)+0
  1720  001D' 0085'              	movf	0+(??_RealTimeClock_get_time+0)+0,w
  1721  001E' 0805'              	movwf	fsr0
  1722  001F' 0084               	bcf	status, 7	;select IRP bank0
  1723  0020' 1383               	movf	indf,w
  1724  0021' 0800               	fcall	_RealTimeClock_read_byte
  1725  0022' 120A' 118A' 2000' 120A' 118A' 	line	43
  1726                           	
  1727                           l1138:	
  1728  0027'                    ;realtimeclock.c: 43:     }
  1729                           	movlw	01h
  1730  0027' 3001               	addwf	(RealTimeClock_get_time@i),f
  1731  0028' 0787'              	skipnc
  1732  0029' 1803               	incf	(RealTimeClock_get_time@i+1),f
  1733  002A' 0A88'              	movlw	0
  1734  002B' 3000               	addwf	(RealTimeClock_get_time@i+1),f
  1735  002C' 0788'              	
  1736                           l1140:	
  1737  002D'                    	movf	(RealTimeClock_get_time@i+1),w
  1738  002D' 0808'              	xorlw	80h
  1739  002E' 3A80               	movwf	btemp+1
  1740  002F' 00FF               	movlw	(0)^80h
  1741  0030' 3080               	subwf	btemp+1,w
  1742  0031' 027F               	skipz
  1743  0032' 1D03               	goto	u615
  1744  0033' 2800'              	movlw	07h
  1745  0034' 3007               	subwf	(RealTimeClock_get_time@i),w
  1746  0035' 0207'              u615:
  1747  0036'                    
  1748                           	skipc
  1749  0036' 1C03               	goto	u611
  1750  0037' 2800'              	goto	u610
  1751  0038' 2800'              u611:
  1752  0039'                    	goto	l1136
  1753  0039' 2800'              u610:
  1754  003A'                    	
  1755                           l61:	
  1756  003A'                    	line	44
  1757                           ;realtimeclock.c: 44:     RB5 = 0;
  1758                           	bcf	status, 5	;RP0=0, select bank0
  1759  003A' 1283               	bcf	status, 6	;RP1=0, select bank0
  1760  003B' 1303               	bcf	(53/8),(53)&7	;volatile
  1761  003C' 1286               	line	45
  1762                           	
  1763                           l62:	
  1764  003D'                    	return
  1765  003D' 0008               	opt stack 0
  1766                           GLOBAL	__end_of_RealTimeClock_get_time
  1767                           	__end_of_RealTimeClock_get_time:
  1768  003E'                    	signat	_RealTimeClock_get_time,4217
  1769                           	global	_RealTimeClock_read_byte
  1770                           
  1771 ;; *************** function _RealTimeClock_read_byte *****************
  1772 ;; Defined at:
  1773 ;;		line 17 in file "realtimeclock.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  time_rx         1    wreg     unsigned char 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  time_rx         1    4[COMMON] unsigned char 
  1778 ;;  i               2    2[COMMON] int 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0, btemp+1
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788 ;;      Params:         0       0       0       0       0
  1789 ;;      Locals:         3       0       0       0       0
  1790 ;;      Temps:          2       0       0       0       0
  1791 ;;      Totals:         5       0       0       0       0
  1792 ;;Total ram usage:        5 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_RealTimeClock_get_time
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1801                           	line	17
  1802                           global __ptext4
  1803                           __ptext4:	;psect for function _RealTimeClock_read_byte
  1804  0000'                    psect	text4
  1805                           	file	"realtimeclock.c"
  1806                           	line	17
  1807                           	global	__size_of_RealTimeClock_read_byte
  1808                           	__size_of_RealTimeClock_read_byte	equ	__end_of_RealTimeClock_read_byte-_RealTimeClock_r
                                 ead_byte
  1809  0041                     	
  1810                           _RealTimeClock_read_byte:	
  1811  0000'                    ;incstack = 0
  1812                           	opt	stack 5
  1813                           ; Regs used in _RealTimeClock_read_byte: [wreg+status,2+status,0+btemp+1]
  1814                           ;RealTimeClock_read_byte@time_rx stored from wreg
  1815                           	movwf	(RealTimeClock_read_byte@time_rx)
  1816  0000' 0084'              	line	18
  1817                           	
  1818                           l1100:	
  1819  0001'                    ;realtimeclock.c: 18:     TRISB4 = 1;
  1820                           	bsf	status, 5	;RP0=1, select bank1
  1821  0001' 1683               	bcf	status, 6	;RP1=0, select bank1
  1822  0002' 1303               	bsf	(1076/8)^080h,(1076)&7	;volatile
  1823  0003' 1606               	line	19
  1824                           	
  1825                           l1102:	
  1826  0004'                    ;realtimeclock.c: 19:     for(int i = 0; i < 8; ++i) {
  1827                           	clrf	(RealTimeClock_read_byte@i)
  1828  0004' 0182'              	clrf	(RealTimeClock_read_byte@i+1)
  1829  0005' 0183'              	
  1830                           l1104:	
  1831  0006'                    	movf	(RealTimeClock_read_byte@i+1),w
  1832  0006' 0803'              	xorlw	80h
  1833  0007' 3A80               	movwf	btemp+1
  1834  0008' 00FF               	movlw	(0)^80h
  1835  0009' 3080               	subwf	btemp+1,w
  1836  000A' 027F               	skipz
  1837  000B' 1D03               	goto	u575
  1838  000C' 2800'              	movlw	08h
  1839  000D' 3008               	subwf	(RealTimeClock_read_byte@i),w
  1840  000E' 0202'              u575:
  1841  000F'                    
  1842                           	skipc
  1843  000F' 1C03               	goto	u571
  1844  0010' 2800'              	goto	u570
  1845  0011' 2800'              u571:
  1846  0012'                    	goto	l50
  1847  0012' 2800'              u570:
  1848  0013'                    	goto	l51
  1849  0013' 2800'              	
  1850                           l1106:	
  1851  0014'                    	goto	l51
  1852  0014' 2800'              	
  1853                           l50:	
  1854  0015'                    	line	20
  1855                           ;realtimeclock.c: 20:         RB0 = 0;
  1856                           	bcf	status, 5	;RP0=0, select bank0
  1857  0015' 1283               	bcf	status, 6	;RP1=0, select bank0
  1858  0016' 1303               	bcf	(48/8),(48)&7	;volatile
  1859  0017' 1006               	line	21
  1860                           	
  1861                           l1108:	
  1862  0018'                    ;realtimeclock.c: 21:         time_rx = time_rx >> 1;
  1863                           	movf	(RealTimeClock_read_byte@time_rx),w
  1864  0018' 0804'              	movwf	(??_RealTimeClock_read_byte+0)+0
  1865  0019' 0080'              	clrc
  1866  001A' 1003               	rrf	(??_RealTimeClock_read_byte+0)+0,w
  1867  001B' 0C00'              	movwf	(??_RealTimeClock_read_byte+1)+0
  1868  001C' 0081'              	movf	(??_RealTimeClock_read_byte+1)+0,w
  1869  001D' 0801'              	movwf	(RealTimeClock_read_byte@time_rx)
  1870  001E' 0084'              	line	22
  1871                           ;realtimeclock.c: 22:         time_rx = time_rx | (((unsigned char)RB4) << 7);
  1872                           	movlw	0
  1873  001F' 3000               	btfsc	(52/8),(52)&7	;volatile
  1874  0020' 1A06               	movlw	(1 << (07h))
  1875  0021' 3080               	iorwf	(RealTimeClock_read_byte@time_rx),w
  1876  0022' 0404'              	movwf	(??_RealTimeClock_read_byte+0)+0
  1877  0023' 0080'              	movf	(??_RealTimeClock_read_byte+0)+0,w
  1878  0024' 0800'              	movwf	(RealTimeClock_read_byte@time_rx)
  1879  0025' 0084'              	line	23
  1880                           	
  1881                           l1110:	
  1882  0026'                    ;realtimeclock.c: 23:         RB0 = 1;
  1883                           	bsf	(48/8),(48)&7	;volatile
  1884  0026' 1406               	line	24
  1885                           	
  1886                           l1112:	
  1887  0027'                    ;realtimeclock.c: 24:     }
  1888                           	movlw	01h
  1889  0027' 3001               	addwf	(RealTimeClock_read_byte@i),f
  1890  0028' 0782'              	skipnc
  1891  0029' 1803               	incf	(RealTimeClock_read_byte@i+1),f
  1892  002A' 0A83'              	movlw	0
  1893  002B' 3000               	addwf	(RealTimeClock_read_byte@i+1),f
  1894  002C' 0783'              	
  1895                           l1114:	
  1896  002D'                    	movf	(RealTimeClock_read_byte@i+1),w
  1897  002D' 0803'              	xorlw	80h
  1898  002E' 3A80               	movwf	btemp+1
  1899  002F' 00FF               	movlw	(0)^80h
  1900  0030' 3080               	subwf	btemp+1,w
  1901  0031' 027F               	skipz
  1902  0032' 1D03               	goto	u585
  1903  0033' 2800'              	movlw	08h
  1904  0034' 3008               	subwf	(RealTimeClock_read_byte@i),w
  1905  0035' 0202'              u585:
  1906  0036'                    
  1907                           	skipc
  1908  0036' 1C03               	goto	u581
  1909  0037' 2800'              	goto	u580
  1910  0038' 2800'              u581:
  1911  0039'                    	goto	l50
  1912  0039' 2800'              u580:
  1913  003A'                    	
  1914                           l51:	
  1915  003A'                    	line	25
  1916                           ;realtimeclock.c: 25:     TRISB4 = 0;
  1917                           	bsf	status, 5	;RP0=1, select bank1
  1918  003A' 1683               	bcf	status, 6	;RP1=0, select bank1
  1919  003B' 1303               	bcf	(1076/8)^080h,(1076)&7	;volatile
  1920  003C' 1206               	line	26
  1921                           ;realtimeclock.c: 26:     RB0 = 0;
  1922                           	bcf	status, 5	;RP0=0, select bank0
  1923  003D' 1283               	bcf	status, 6	;RP1=0, select bank0
  1924  003E' 1303               	bcf	(48/8),(48)&7	;volatile
  1925  003F' 1006               	line	27
  1926                           	
  1927                           l52:	
  1928  0040'                    	return
  1929  0040' 0008               	opt stack 0
  1930                           GLOBAL	__end_of_RealTimeClock_read_byte
  1931                           	__end_of_RealTimeClock_read_byte:
  1932  0041'                    	signat	_RealTimeClock_read_byte,4217
  1933                           	global	_Sound
  1934                           	global	_RealTimeClock_init
  1935                           
  1936 ;; *************** function _RealTimeClock_init *****************
  1937 ;; Defined at:
  1938 ;;		line 47 in file "realtimeclock.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1952 ;;      Params:         0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; Hardware stack levels required when called:    1
  1959 ;; This function calls:
  1960 ;;		_RealTimeClock_write_byte
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1966                           	line	47
  1967                           global __ptext5
  1968                           __ptext5:	;psect for function _RealTimeClock_init
  1969  0000'                    psect	text5
  1970                           	file	"realtimeclock.c"
  1971                           	line	47
  1972                           	global	__size_of_RealTimeClock_init
  1973                           	__size_of_RealTimeClock_init	equ	__end_of_RealTimeClock_init-_RealTimeClock_init
  1974  0017                     	
  1975                           _RealTimeClock_init:	
  1976  0000'                    ;incstack = 0
  1977                           	opt	stack 6
  1978                           ; Regs used in _RealTimeClock_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1979                           	line	48
  1980                           	
  1981                           l1186:	
  1982  0000'                    ;realtimeclock.c: 48:     TRISB = 0x00;
  1983                           	bsf	status, 5	;RP0=1, select bank1
  1984  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  1985  0001' 1303               	clrf	(134)^080h	;volatile
  1986  0002' 0186               	line	49
  1987                           	
  1988                           l1188:	
  1989  0003'                    ;realtimeclock.c: 49:     RB0 = 0;
  1990                           	bcf	status, 5	;RP0=0, select bank0
  1991  0003' 1283               	bcf	status, 6	;RP1=0, select bank0
  1992  0004' 1303               	bcf	(48/8),(48)&7	;volatile
  1993  0005' 1006               	line	50
  1994                           	
  1995                           l1190:	
  1996  0006'                    ;realtimeclock.c: 50:     RB5 = 1;
  1997                           	bsf	(53/8),(53)&7	;volatile
  1998  0006' 1686               	line	51
  1999                           	
  2000                           l1192:	
  2001  0007'                    ;realtimeclock.c: 51:     RealTimeClock_write_byte(0x8e);
  2002                           	movlw	low(08Eh)
  2003  0007' 308E               	fcall	_RealTimeClock_write_byte
  2004  0008' 120A' 118A' 2000' 120A' 118A' 	line	52
  2005                           	
  2006                           l1194:	
  2007  000D'                    ;realtimeclock.c: 52:     RealTimeClock_write_byte(0x00);
  2008                           	movlw	low(0)
  2009  000D' 3000               	fcall	_RealTimeClock_write_byte
  2010  000E' 120A' 118A' 2000' 120A' 118A' 	line	53
  2011                           	
  2012                           l1196:	
  2013  0013'                    ;realtimeclock.c: 53:     RB5 = 0;
  2014                           	bcf	status, 5	;RP0=0, select bank0
  2015  0013' 1283               	bcf	status, 6	;RP1=0, select bank0
  2016  0014' 1303               	bcf	(53/8),(53)&7	;volatile
  2017  0015' 1286               	line	54
  2018                           	
  2019                           l65:	
  2020  0016'                    	return
  2021  0016' 0008               	opt stack 0
  2022                           GLOBAL	__end_of_RealTimeClock_init
  2023                           	__end_of_RealTimeClock_init:
  2024  0017'                    	signat	_RealTimeClock_init,89
  2025                           	global	_RealTimeClock_write_byte
  2026                           
  2027 ;; *************** function _RealTimeClock_write_byte *****************
  2028 ;; Defined at:
  2029 ;;		line 4 in file "realtimeclock.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  time_tx         1    wreg     unsigned char 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  time_tx         1    4[COMMON] unsigned char 
  2034 ;;  i               2    2[COMMON] int 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0, btemp+1
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2044 ;;      Params:         0       0       0       0       0
  2045 ;;      Locals:         3       0       0       0       0
  2046 ;;      Temps:          2       0       0       0       0
  2047 ;;      Totals:         5       0       0       0       0
  2048 ;;Total ram usage:        5 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_RealTimeClock_get_time
  2054 ;;		_RealTimeClock_init
  2055 ;;		_RealTimeClock_set_time
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2059                           	line	4
  2060                           global __ptext6
  2061                           __ptext6:	;psect for function _RealTimeClock_write_byte
  2062  0000'                    psect	text6
  2063                           	file	"realtimeclock.c"
  2064                           	line	4
  2065                           	global	__size_of_RealTimeClock_write_byte
  2066                           	__size_of_RealTimeClock_write_byte	equ	__end_of_RealTimeClock_write_byte-_RealTimeClock
                                 _write_byte
  2067  003B                     	
  2068                           _RealTimeClock_write_byte:	
  2069  0000'                    ;incstack = 0
  2070                           	opt	stack 5
  2071                           ; Regs used in _RealTimeClock_write_byte: [wreg+status,2+status,0+btemp+1]
  2072                           ;RealTimeClock_write_byte@time_tx stored from wreg
  2073                           	movwf	(RealTimeClock_write_byte@time_tx)
  2074  0000' 0084'              	line	5
  2075                           	
  2076                           l1084:	
  2077  0001'                    ;realtimeclock.c: 5:     for(int i = 0; i < 8; ++i) {
  2078                           	clrf	(RealTimeClock_write_byte@i)
  2079  0001' 0182'              	clrf	(RealTimeClock_write_byte@i+1)
  2080  0002' 0183'              	
  2081                           l1086:	
  2082  0003'                    	movf	(RealTimeClock_write_byte@i+1),w
  2083  0003' 0803'              	xorlw	80h
  2084  0004' 3A80               	movwf	btemp+1
  2085  0005' 00FF               	movlw	(0)^80h
  2086  0006' 3080               	subwf	btemp+1,w
  2087  0007' 027F               	skipz
  2088  0008' 1D03               	goto	u545
  2089  0009' 2800'              	movlw	08h
  2090  000A' 3008               	subwf	(RealTimeClock_write_byte@i),w
  2091  000B' 0202'              u545:
  2092  000C'                    
  2093                           	skipc
  2094  000C' 1C03               	goto	u541
  2095  000D' 2800'              	goto	u540
  2096  000E' 2800'              u541:
  2097  000F'                    	goto	l44
  2098  000F' 2800'              u540:
  2099  0010'                    	goto	l45
  2100  0010' 2800'              	
  2101                           l1088:	
  2102  0011'                    	goto	l45
  2103  0011' 2800'              	
  2104                           l44:	
  2105  0012'                    	line	6
  2106                           ;realtimeclock.c: 6:         RB4 = 0;
  2107                           	bcf	status, 5	;RP0=0, select bank0
  2108  0012' 1283               	bcf	status, 6	;RP1=0, select bank0
  2109  0013' 1303               	bcf	(52/8),(52)&7	;volatile
  2110  0014' 1206               	line	7
  2111                           ;realtimeclock.c: 7:         RB0 = 0;
  2112                           	bcf	(48/8),(48)&7	;volatile
  2113  0015' 1006               	line	8
  2114                           ;realtimeclock.c: 8:         if (time_tx&0x01) {
  2115                           	btfss	(RealTimeClock_write_byte@time_tx),(0)&7
  2116  0016' 1C04'              	goto	u551
  2117  0017' 2800'              	goto	u550
  2118  0018' 2800'              u551:
  2119  0019'                    	goto	l1092
  2120  0019' 2800'              u550:
  2121  001A'                    	line	9
  2122                           	
  2123                           l1090:	
  2124  001A'                    ;realtimeclock.c: 9:             RB4 = 1;
  2125                           	bsf	(52/8),(52)&7	;volatile
  2126  001A' 1606               	goto	l1092
  2127  001B' 2800'              	line	10
  2128                           ;realtimeclock.c: 10:         }
  2129                           	
  2130                           l46:	
  2131  001C'                    	line	11
  2132                           	
  2133                           l1092:	
  2134  001C'                    ;realtimeclock.c: 11:         time_tx = time_tx >> 1;
  2135                           	movf	(RealTimeClock_write_byte@time_tx),w
  2136  001C' 0804'              	movwf	(??_RealTimeClock_write_byte+0)+0
  2137  001D' 0080'              	clrc
  2138  001E' 1003               	rrf	(??_RealTimeClock_write_byte+0)+0,w
  2139  001F' 0C00'              	movwf	(??_RealTimeClock_write_byte+1)+0
  2140  0020' 0081'              	movf	(??_RealTimeClock_write_byte+1)+0,w
  2141  0021' 0801'              	movwf	(RealTimeClock_write_byte@time_tx)
  2142  0022' 0084'              	line	12
  2143                           	
  2144                           l1094:	
  2145  0023'                    ;realtimeclock.c: 12:         RB0 = 1;
  2146                           	bsf	(48/8),(48)&7	;volatile
  2147  0023' 1406               	line	13
  2148                           	
  2149                           l1096:	
  2150  0024'                    ;realtimeclock.c: 13:     }
  2151                           	movlw	01h
  2152  0024' 3001               	addwf	(RealTimeClock_write_byte@i),f
  2153  0025' 0782'              	skipnc
  2154  0026' 1803               	incf	(RealTimeClock_write_byte@i+1),f
  2155  0027' 0A83'              	movlw	0
  2156  0028' 3000               	addwf	(RealTimeClock_write_byte@i+1),f
  2157  0029' 0783'              	
  2158                           l1098:	
  2159  002A'                    	movf	(RealTimeClock_write_byte@i+1),w
  2160  002A' 0803'              	xorlw	80h
  2161  002B' 3A80               	movwf	btemp+1
  2162  002C' 00FF               	movlw	(0)^80h
  2163  002D' 3080               	subwf	btemp+1,w
  2164  002E' 027F               	skipz
  2165  002F' 1D03               	goto	u565
  2166  0030' 2800'              	movlw	08h
  2167  0031' 3008               	subwf	(RealTimeClock_write_byte@i),w
  2168  0032' 0202'              u565:
  2169  0033'                    
  2170                           	skipc
  2171  0033' 1C03               	goto	u561
  2172  0034' 2800'              	goto	u560
  2173  0035' 2800'              u561:
  2174  0036'                    	goto	l44
  2175  0036' 2800'              u560:
  2176  0037'                    	
  2177                           l45:	
  2178  0037'                    	line	14
  2179                           ;realtimeclock.c: 14:     RB0 = 0;
  2180                           	bcf	status, 5	;RP0=0, select bank0
  2181  0037' 1283               	bcf	status, 6	;RP1=0, select bank0
  2182  0038' 1303               	bcf	(48/8),(48)&7	;volatile
  2183  0039' 1006               	line	15
  2184                           	
  2185                           l47:	
  2186  003A'                    	return
  2187  003A' 0008               	opt stack 0
  2188                           GLOBAL	__end_of_RealTimeClock_write_byte
  2189                           	__end_of_RealTimeClock_write_byte:
  2190  003B'                    	signat	_RealTimeClock_write_byte,4217
  2191                           	global	_LCD_SendString
  2192                           
  2193 ;; *************** function _LCD_SendString *****************
  2194 ;; Defined at:
  2195 ;;		line 49 in file "LCD.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  string          2    1[COMMON] PTR const unsigned char 
  2198 ;;		 -> RAM(512), STR_1(7), 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  i               2    3[COMMON] int 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2210 ;;      Params:         2       0       0       0       0
  2211 ;;      Locals:         2       0       0       0       0
  2212 ;;      Temps:          0       0       0       0       0
  2213 ;;      Totals:         4       0       0       0       0
  2214 ;;Total ram usage:        4 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    2
  2217 ;; This function calls:
  2218 ;;		_LCD_SendData
  2219 ;; This function is called by:
  2220 ;;		_main
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2224                           	file	"LCD.c"
  2225                           	line	49
  2226                           global __ptext7
  2227                           __ptext7:	;psect for function _LCD_SendString
  2228  0000'                    psect	text7
  2229                           	file	"LCD.c"
  2230                           	line	49
  2231                           	global	__size_of_LCD_SendString
  2232                           	__size_of_LCD_SendString	equ	__end_of_LCD_SendString-_LCD_SendString
  2233  0034                     	
  2234                           _LCD_SendString:	
  2235  0000'                    ;incstack = 0
  2236                           	opt	stack 5
  2237                           ; Regs used in _LCD_SendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2238                           	line	50
  2239                           	
  2240                           l1198:	
  2241  0000'                    ;LCD.c: 50:     for (int i = 0; string[i]!='\0'; ++i)
  2242                           	clrf	(LCD_SendString@i)
  2243  0000' 0183'              	clrf	(LCD_SendString@i+1)
  2244  0001' 0184'              	goto	l1204
  2245  0002' 2800'              	
  2246                           l207:	
  2247  0003'                    	line	52
  2248                           	
  2249                           l1200:	
  2250  0003'                    ;LCD.c: 51:     {;LCD.c: 52:         LCD_SendData(string[i]);
  2251                           	movf	(LCD_SendString@i),w
  2252  0003' 0803'              	addwf	(LCD_SendString@string),w
  2253  0004' 0701'              	movwf	fsr0
  2254  0005' 0084               	movf	(LCD_SendString@i+1),w
  2255  0006' 0804'              	skipnc
  2256  0007' 1803               	incf	(LCD_SendString@i+1),w
  2257  0008' 0A04'              	addwf	(LCD_SendString@string+1),w
  2258  0009' 0702'              	bcf	status, 5	;RP0=0, select bank0
  2259  000A' 1283               	bcf	status, 6	;RP1=0, select bank0
  2260  000B' 1303               	movwf	btemp+1
  2261  000C' 00FF               	fcall	stringtab
  2262  000D' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_SendData
  2263  0012' 120A' 118A' 2000' 120A' 118A' 	line	53
  2264                           	
  2265                           l1202:	
  2266  0017'                    ;LCD.c: 53:     }
  2267                           	movlw	01h
  2268  0017' 3001               	addwf	(LCD_SendString@i),f
  2269  0018' 0783'              	skipnc
  2270  0019' 1803               	incf	(LCD_SendString@i+1),f
  2271  001A' 0A84'              	movlw	0
  2272  001B' 3000               	addwf	(LCD_SendString@i+1),f
  2273  001C' 0784'              	goto	l1204
  2274  001D' 2800'              	
  2275                           l206:	
  2276  001E'                    	
  2277                           l1204:	
  2278  001E'                    	movf	(LCD_SendString@i),w
  2279  001E' 0803'              	addwf	(LCD_SendString@string),w
  2280  001F' 0701'              	movwf	fsr0
  2281  0020' 0084               	movf	(LCD_SendString@i+1),w
  2282  0021' 0804'              	skipnc
  2283  0022' 1803               	incf	(LCD_SendString@i+1),w
  2284  0023' 0A04'              	addwf	(LCD_SendString@string+1),w
  2285  0024' 0702'              	bcf	status, 5	;RP0=0, select bank0
  2286  0025' 1283               	bcf	status, 6	;RP1=0, select bank0
  2287  0026' 1303               	movwf	btemp+1
  2288  0027' 00FF               	fcall	stringtab
  2289  0028' 120A' 118A' 2000' 120A' 118A' 	xorlw	0
  2290  002D' 3A00               	skipz
  2291  002E' 1D03               	goto	u681
  2292  002F' 2800'              	goto	u680
  2293  0030' 2800'              u681:
  2294  0031'                    	goto	l1200
  2295  0031' 2800'              u680:
  2296  0032'                    	goto	l209
  2297  0032' 2800'              	
  2298                           l208:	
  2299  0033'                    	line	54
  2300                           	
  2301                           l209:	
  2302  0033'                    	return
  2303  0033' 0008               	opt stack 0
  2304                           GLOBAL	__end_of_LCD_SendString
  2305                           	__end_of_LCD_SendString:
  2306  0034'                    	signat	_LCD_SendString,4217
  2307                           	global	_LCD_SendData
  2308                           
  2309 ;; *************** function _LCD_SendData *****************
  2310 ;; Defined at:
  2311 ;;		line 40 in file "LCD.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  c               1    wreg     unsigned char 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  c               1    0[COMMON] unsigned char 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2, status,0, pclath, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2325 ;;      Params:         0       0       0       0       0
  2326 ;;      Locals:         1       0       0       0       0
  2327 ;;      Temps:          0       0       0       0       0
  2328 ;;      Totals:         1       0       0       0       0
  2329 ;;Total ram usage:        1 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    1
  2332 ;; This function calls:
  2333 ;;		_LCD_Busy
  2334 ;; This function is called by:
  2335 ;;		_LCD_SendString
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2339                           	line	40
  2340                           global __ptext8
  2341                           __ptext8:	;psect for function _LCD_SendData
  2342  0000'                    psect	text8
  2343                           	file	"LCD.c"
  2344                           	line	40
  2345                           	global	__size_of_LCD_SendData
  2346                           	__size_of_LCD_SendData	equ	__end_of_LCD_SendData-_LCD_SendData
  2347  000F                     	
  2348                           _LCD_SendData:	
  2349  0000'                    ;incstack = 0
  2350                           	opt	stack 5
  2351                           ; Regs used in _LCD_SendData: [wreg+status,2+status,0+pclath+cstack]
  2352                           ;LCD_SendData@c stored from wreg
  2353                           	movwf	(LCD_SendData@c)
  2354  0000' 0080'              	line	41
  2355                           	
  2356                           l1150:	
  2357  0001'                    ;LCD.c: 41:     RA1 = 1;
  2358                           	bcf	status, 5	;RP0=0, select bank0
  2359  0001' 1283               	bcf	status, 6	;RP1=0, select bank0
  2360  0002' 1303               	bsf	(41/8),(41)&7	;volatile
  2361  0003' 1485               	line	42
  2362                           ;LCD.c: 42:     RA2 = 0;
  2363                           	bcf	(42/8),(42)&7	;volatile
  2364  0004' 1105               	line	43
  2365                           ;LCD.c: 43:     RA3 = 1;
  2366                           	bsf	(43/8),(43)&7	;volatile
  2367  0005' 1585               	line	44
  2368                           	
  2369                           l1152:	
  2370  0006'                    ;LCD.c: 44:     PORTD = c;
  2371                           	movf	(LCD_SendData@c),w
  2372  0006' 0800'              	movwf	(8)	;volatile
  2373  0007' 0088               	line	45
  2374                           	
  2375                           l1154:	
  2376  0008'                    ;LCD.c: 45:     RA3 = 0;
  2377                           	bcf	(43/8),(43)&7	;volatile
  2378  0008' 1185               	line	46
  2379                           	
  2380                           l1156:	
  2381  0009'                    ;LCD.c: 46:     LCD_Busy();
  2382                           	fcall	_LCD_Busy
  2383  0009' 120A' 118A' 2000' 120A' 118A' 	line	47
  2384                           	
  2385                           l203:	
  2386  000E'                    	return
  2387  000E' 0008               	opt stack 0
  2388                           GLOBAL	__end_of_LCD_SendData
  2389                           	__end_of_LCD_SendData:
  2390  000F'                    	signat	_LCD_SendData,4217
  2391                           	global	_LCD_SecondLine
  2392                           
  2393 ;; *************** function _LCD_SecondLine *****************
  2394 ;; Defined at:
  2395 ;;		line 35 in file "LCD.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;		None
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;		None
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0, pclath, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2409 ;;      Params:         0       0       0       0       0
  2410 ;;      Locals:         0       0       0       0       0
  2411 ;;      Temps:          0       0       0       0       0
  2412 ;;      Totals:         0       0       0       0       0
  2413 ;;Total ram usage:        0 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    2
  2416 ;; This function calls:
  2417 ;;		_LCD_Command
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  2423                           	line	35
  2424                           global __ptext9
  2425                           __ptext9:	;psect for function _LCD_SecondLine
  2426  0000'                    psect	text9
  2427                           	file	"LCD.c"
  2428                           	line	35
  2429                           	global	__size_of_LCD_SecondLine
  2430                           	__size_of_LCD_SecondLine	equ	__end_of_LCD_SecondLine-_LCD_SecondLine
  2431  0007                     	
  2432                           _LCD_SecondLine:	
  2433  0000'                    ;incstack = 0
  2434                           	opt	stack 5
  2435                           ; Regs used in _LCD_SecondLine: [wreg+status,2+status,0+pclath+cstack]
  2436                           	line	37
  2437                           	
  2438                           l1206:	
  2439  0000'                    ;LCD.c: 37:     LCD_Command(0xc0);
  2440                           	movlw	low(0C0h)
  2441  0000' 30C0               	fcall	_LCD_Command
  2442  0001' 120A' 118A' 2000' 120A' 118A' 	line	38
  2443                           	
  2444                           l200:	
  2445  0006'                    	return
  2446  0006' 0008               	opt stack 0
  2447                           GLOBAL	__end_of_LCD_SecondLine
  2448                           	__end_of_LCD_SecondLine:
  2449  0007'                    	signat	_LCD_SecondLine,89
  2450                           	global	_LCD_Command
  2451                           
  2452 ;; *************** function _LCD_Command *****************
  2453 ;; Defined at:
  2454 ;;		line 26 in file "LCD.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  c               1    wreg     unsigned char 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  c               1    0[COMMON] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0, pclath, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2468 ;;      Params:         0       0       0       0       0
  2469 ;;      Locals:         1       0       0       0       0
  2470 ;;      Temps:          0       0       0       0       0
  2471 ;;      Totals:         1       0       0       0       0
  2472 ;;Total ram usage:        1 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    1
  2475 ;; This function calls:
  2476 ;;		_LCD_Busy
  2477 ;; This function is called by:
  2478 ;;		_main
  2479 ;;		_LCD_SecondLine
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  2483                           	line	26
  2484                           global __ptext10
  2485                           __ptext10:	;psect for function _LCD_Command
  2486  0000'                    psect	text10
  2487                           	file	"LCD.c"
  2488                           	line	26
  2489                           	global	__size_of_LCD_Command
  2490                           	__size_of_LCD_Command	equ	__end_of_LCD_Command-_LCD_Command
  2491  000F                     	
  2492                           _LCD_Command:	
  2493  0000'                    ;incstack = 0
  2494                           	opt	stack 5
  2495                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
  2496                           ;LCD_Command@c stored from wreg
  2497                           	movwf	(LCD_Command@c)
  2498  0000' 0080'              	line	27
  2499                           	
  2500                           l1142:	
  2501  0001'                    ;LCD.c: 27:     RA1 = 0;
  2502                           	bcf	status, 5	;RP0=0, select bank0
  2503  0001' 1283               	bcf	status, 6	;RP1=0, select bank0
  2504  0002' 1303               	bcf	(41/8),(41)&7	;volatile
  2505  0003' 1085               	line	28
  2506                           ;LCD.c: 28:     RA2 = 0;
  2507                           	bcf	(42/8),(42)&7	;volatile
  2508  0004' 1105               	line	29
  2509                           ;LCD.c: 29:     RA3 = 1;
  2510                           	bsf	(43/8),(43)&7	;volatile
  2511  0005' 1585               	line	30
  2512                           	
  2513                           l1144:	
  2514  0006'                    ;LCD.c: 30:     PORTD = c;
  2515                           	movf	(LCD_Command@c),w
  2516  0006' 0800'              	movwf	(8)	;volatile
  2517  0007' 0088               	line	31
  2518                           	
  2519                           l1146:	
  2520  0008'                    ;LCD.c: 31:     RA3 = 0;
  2521                           	bcf	(43/8),(43)&7	;volatile
  2522  0008' 1185               	line	32
  2523                           	
  2524                           l1148:	
  2525  0009'                    ;LCD.c: 32:     LCD_Busy();
  2526                           	fcall	_LCD_Busy
  2527  0009' 120A' 118A' 2000' 120A' 118A' 	line	33
  2528                           	
  2529                           l197:	
  2530  000E'                    	return
  2531  000E' 0008               	opt stack 0
  2532                           GLOBAL	__end_of_LCD_Command
  2533                           	__end_of_LCD_Command:
  2534  000F'                    	signat	_LCD_Command,4217
  2535                           	global	_LCD_Busy
  2536                           
  2537 ;; *************** function _LCD_Busy *****************
  2538 ;; Defined at:
  2539 ;;		line 6 in file "LCD.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2553 ;;      Params:         0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; This function calls:
  2560 ;;		Nothing
  2561 ;; This function is called by:
  2562 ;;		_LCD_Command
  2563 ;;		_LCD_SendData
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  2567                           	line	6
  2568                           global __ptext11
  2569                           __ptext11:	;psect for function _LCD_Busy
  2570  0000'                    psect	text11
  2571                           	file	"LCD.c"
  2572                           	line	6
  2573                           	global	__size_of_LCD_Busy
  2574                           	__size_of_LCD_Busy	equ	__end_of_LCD_Busy-_LCD_Busy
  2575  0015                     	
  2576                           _LCD_Busy:	
  2577  0000'                    ;incstack = 0
  2578                           	opt	stack 5
  2579                           ; Regs used in _LCD_Busy: [wreg+status,2]
  2580                           	line	7
  2581                           	
  2582                           l1116:	
  2583  0000'                    ;LCD.c: 7:     TRISD = 0xFF;
  2584                           	movlw	low(0FFh)
  2585  0000' 30FF               	bsf	status, 5	;RP0=1, select bank1
  2586  0001' 1683               	bcf	status, 6	;RP1=0, select bank1
  2587  0002' 1303               	movwf	(136)^080h	;volatile
  2588  0003' 0088               	line	8
  2589                           	
  2590                           l1118:	
  2591  0004'                    ;LCD.c: 8:     RA3 = 1;
  2592                           	bcf	status, 5	;RP0=0, select bank0
  2593  0004' 1283               	bcf	status, 6	;RP1=0, select bank0
  2594  0005' 1303               	bsf	(43/8),(43)&7	;volatile
  2595  0006' 1585               	line	9
  2596                           	
  2597                           l1120:	
  2598  0007'                    ;LCD.c: 9:     RA1 = 0;
  2599                           	bcf	(41/8),(41)&7	;volatile
  2600  0007' 1085               	line	10
  2601                           	
  2602                           l1122:	
  2603  0008'                    ;LCD.c: 10:     RA2 = 1;
  2604                           	bsf	(42/8),(42)&7	;volatile
  2605  0008' 1505               	line	11
  2606                           ;LCD.c: 11:     while(RD7)
  2607                           	goto	l188
  2608  0009' 2800'              	
  2609                           l189:	
  2610  000A'                    	line	13
  2611                           ;LCD.c: 12:     {;LCD.c: 13:         RA3 = 0;
  2612                           	bcf	(43/8),(43)&7	;volatile
  2613  000A' 1185               	line	14
  2614                           ;LCD.c: 14:         RA3 = 1;
  2615                           	bsf	(43/8),(43)&7	;volatile
  2616  000B' 1585               	line	15
  2617                           ;LCD.c: 15:     }
  2618                           	
  2619                           l188:	
  2620  000C'                    	line	11
  2621                           ;LCD.c: 11:     while(RD7)
  2622                           	btfsc	(71/8),(71)&7	;volatile
  2623  000C' 1B88               	goto	u591
  2624  000D' 2800'              	goto	u590
  2625  000E' 2800'              u591:
  2626  000F'                    	goto	l189
  2627  000F' 2800'              u590:
  2628  0010'                    	goto	l1124
  2629  0010' 2800'              	
  2630                           l190:	
  2631  0011'                    	line	16
  2632                           	
  2633                           l1124:	
  2634  0011'                    ;LCD.c: 16:     TRISD = 0x00;
  2635                           	bsf	status, 5	;RP0=1, select bank1
  2636  0011' 1683               	bcf	status, 6	;RP1=0, select bank1
  2637  0012' 1303               	clrf	(136)^080h	;volatile
  2638  0013' 0188               	line	17
  2639                           	
  2640                           l191:	
  2641  0014'                    	return
  2642  0014' 0008               	opt stack 0
  2643                           GLOBAL	__end_of_LCD_Busy
  2644                           	__end_of_LCD_Busy:
  2645  0015'                    	signat	_LCD_Busy,89
  2646                           	global	_LCD_Init
  2647                           
  2648 ;; *************** function _LCD_Init *****************
  2649 ;; Defined at:
  2650 ;;		line 19 in file "LCD.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2664 ;;      Params:         0       0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0
  2667 ;;      Totals:         0       0       0       0       0
  2668 ;;Total ram usage:        0 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  2677                           	line	19
  2678                           global __ptext12
  2679                           __ptext12:	;psect for function _LCD_Init
  2680  0000'                    psect	text12
  2681                           	file	"LCD.c"
  2682                           	line	19
  2683                           	global	__size_of_LCD_Init
  2684                           	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_Init
  2685  0007                     	
  2686                           _LCD_Init:	
  2687  0000'                    ;incstack = 0
  2688                           	opt	stack 7
  2689                           ; Regs used in _LCD_Init: [wreg+status,2]
  2690                           	line	21
  2691                           	
  2692                           l1178:	
  2693  0000'                    ;LCD.c: 21:     TRISD = 0x00;
  2694                           	bsf	status, 5	;RP0=1, select bank1
  2695  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  2696  0001' 1303               	clrf	(136)^080h	;volatile
  2697  0002' 0188               	line	22
  2698                           ;LCD.c: 22:     TRISA = 0x00;
  2699                           	clrf	(133)^080h	;volatile
  2700  0003' 0185               	line	23
  2701                           	
  2702                           l1180:	
  2703  0004'                    ;LCD.c: 23:     ADCON1 = 0x06;
  2704                           	movlw	low(06h)
  2705  0004' 3006               	movwf	(159)^080h	;volatile
  2706  0005' 009F               	line	24
  2707                           	
  2708                           l194:	
  2709  0006'                    	return
  2710  0006' 0008               	opt stack 0
  2711                           GLOBAL	__end_of_LCD_Init
  2712                           	__end_of_LCD_Init:
  2713  0007'                    	signat	_LCD_Init,89
  2714                           	global	_Init_Keypad
  2715                           
  2716 ;; *************** function _Init_Keypad *****************
  2717 ;; Defined at:
  2718 ;;		line 11 in file "KeyMatrix.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2732 ;;      Params:         0       0       0       0       0
  2733 ;;      Locals:         0       0       0       0       0
  2734 ;;      Temps:          0       0       0       0       0
  2735 ;;      Totals:         0       0       0       0       0
  2736 ;;Total ram usage:        0 bytes
  2737 ;; Hardware stack levels used:    1
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_main
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  2745                           	file	"KeyMatrix.c"
  2746                           	line	11
  2747                           global __ptext13
  2748                           __ptext13:	;psect for function _Init_Keypad
  2749  0000'                    psect	text13
  2750                           	file	"KeyMatrix.c"
  2751                           	line	11
  2752                           	global	__size_of_Init_Keypad
  2753                           	__size_of_Init_Keypad	equ	__end_of_Init_Keypad-_Init_Keypad
  2754  0008                     	
  2755                           _Init_Keypad:	
  2756  0000'                    ;incstack = 0
  2757                           	opt	stack 7
  2758                           ; Regs used in _Init_Keypad: [wreg+status,2]
  2759                           	line	13
  2760                           	
  2761                           l1182:	
  2762  0000'                    ;KeyMatrix.c: 13:     PORTC = 0x00;
  2763                           	bcf	status, 5	;RP0=0, select bank0
  2764  0000' 1283               	bcf	status, 6	;RP1=0, select bank0
  2765  0001' 1303               	clrf	(7)	;volatile
  2766  0002' 0187               	line	14
  2767                           	
  2768                           l1184:	
  2769  0003'                    ;KeyMatrix.c: 14:     TRISC = 0xF;
  2770                           	movlw	low(0Fh)
  2771  0003' 300F               	bsf	status, 5	;RP0=1, select bank1
  2772  0004' 1683               	bcf	status, 6	;RP1=0, select bank1
  2773  0005' 1303               	movwf	(135)^080h	;volatile
  2774  0006' 0087               	line	15
  2775                           	
  2776                           l96:	
  2777  0007'                    	return
  2778  0007' 0008               	opt stack 0
  2779                           GLOBAL	__end_of_Init_Keypad
  2780                           	__end_of_Init_Keypad:
  2781  0008'                    	signat	_Init_Keypad,89
  2782                           	global	_Get_Temp
  2783                           global	___latbits
  2784                           ___latbits	equ	2
  2785  0002                     	global	btemp
  2786                           	btemp set 07Eh
  2787  007E                     
  2788                           	DABS	1,126,2	;btemp
  2789                           	global	wtemp0
  2790                           	wtemp0 set btemp+0
  2791  007E                     	end


Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     24      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_SendString@string	PTR const unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), STR_1(CODE[7]), 

    RealTimeClock_get_time@time	PTR unsigned char  size(1) Largest target is 7
		 -> get_date_time@time(BANK0[7]), 

    main@mins	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    main@secs	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    main@Date	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 

    get_date_time@date_time	PTR unsigned int  size(1) Largest target is 4
		 -> main@test(BANK0[4]), 


Critical Paths under _main in COMMON

    _get_date_time->_RealTimeClock_get_time
    _RealTimeClock_get_time->_RealTimeClock_read_byte
    _RealTimeClock_get_time->_RealTimeClock_write_byte
    _RealTimeClock_init->_RealTimeClock_write_byte
    _LCD_SendString->_LCD_SendData
    _LCD_SecondLine->_LCD_Command

Critical Paths under _main in BANK0

    _main->_get_date_time

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    1508
                                              9 COMMON     1     1      0
                                             14 BANK0     10    10      0
                           _Get_Temp
                        _Init_Keypad
                        _LCD_Command
                           _LCD_Init
                     _LCD_SecondLine
                     _LCD_SendString
                 _RealTimeClock_init
                              _Sound
                      _get_date_time
 ---------------------------------------------------------------------------------
 (1) _get_date_time                                       14    14      0     892
                                              0 BANK0     14    14      0
             _RealTimeClock_get_time
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _RealTimeClock_get_time                               4     4      0     306
                                              5 COMMON     4     4      0
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_read_byte                              5     5      0      92
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Sound                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RealTimeClock_init                                   0     0      0      91
           _RealTimeClock_write_byte
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_write_byte                             5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _LCD_SendString                                       4     2      2     340
                                              1 COMMON     4     2      2
                       _LCD_SendData
 ---------------------------------------------------------------------------------
 (2) _LCD_SendData                                         1     1      0      22
                                              0 COMMON     1     1      0
                           _LCD_Busy
 ---------------------------------------------------------------------------------
 (1) _LCD_SecondLine                                       0     0      0      22
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0      22
                                              0 COMMON     1     1      0
                           _LCD_Busy
 ---------------------------------------------------------------------------------
 (3) _LCD_Busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Keypad                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Temp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Get_Temp
   _Init_Keypad
   _LCD_Command
     _LCD_Busy
   _LCD_Init
   _LCD_SecondLine
     _LCD_Command
       _LCD_Busy
   _LCD_SendString
     _LCD_SendData
       _LCD_Busy
   _RealTimeClock_init
     _RealTimeClock_write_byte
   _Sound
   _get_date_time
     _RealTimeClock_get_time
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jan 03 22:30:19 2019

                                pc 0002                       ?_LCD_Command 0000  
                               l30 0084                                 l23 0068  
                               l31 0084                                 l50 0015  
                               l51 003A                                 l44 0012  
                               l52 0040                                 l60 001B  
                               l28 0035                                 l45 0037  
                               l61 003A                                 l29 0083  
                               l46 001C                                 l62 003D  
                               l47 003A                                 l65 0016  
                               l96 0007            ?_RealTimeClock_get_time 0000  
                               fsr 0004                ___wmul@multiplicand 0002  
                              l200 0006                                l203 000E  
                              l206 001E                                l207 0003  
                              l208 0033                                l209 0033  
                              l190 0011                                l191 0014  
                              l194 0006                                l188 000C  
                              l189 000A                                l197 000E  
                              l294 0003                                l295 000D  
                              l296 0022                                l297 0027  
                              _RA1 0029                                _RB0 0030  
                              _RA2 002A                                _RA3 002B  
                              _RC0 0038                                _RC1 0039  
                              _RB4 0034                                _RC2 003A  
                              _RB5 0035                                _RC3 003B  
                              _RC4 003C                                _RC5 003D  
                              _RC6 003E                                _RC7 003F  
                              _RD7 0047                                u600 0019  
                              u601 0018                                u610 003A  
                              u611 0039                                u540 0010  
                              u620 0007                                u541 000F  
                              u605 0015                                u621 0006  
                              u550 001A                                u551 0019  
                              u615 0036                                u560 0037  
                              u561 0036                                u545 000C  
                              u570 0013                                u650 0021  
                              u571 0012                                u651 0020  
                              u635 000E                                u580 003A  
                              u565 0033                                u581 0039  
                              u645 0015                                u590 0010  
                              u591 000F                                u575 000F  
                              u680 0032                                u681 0031  
                              u585 0036                                u665 0011  
                              u675 003F                                fsr0 0004  
                              indf 0000                       __CFG_FOSC$HS 0000  
                   _LCD_SecondLine 0000                      ?_LCD_SendData 0000  
                     __CFG_LVP$OFF 0000                     _LCD_SendString 0000  
                             l1100 0001                               l1110 0026  
                             l1102 0004                               l1120 0007  
                             l1200 0003                               l1112 0027  
                             l1104 0006                               l1122 0008  
                             l1202 0017                               l1114 002D  
                             l1106 0014                               l1130 000A  
                             l1210 0003                               l1124 0011  
                             l1116 0000                               l1204 001E  
                             l1108 0018                               l1140 002D  
                             l1132 000C                               l1220 001C  
                             l1212 0008                               l1118 0004  
                             l1142 0001                               l1206 0000  
                             l1150 0001                               l1134 001A  
                             l1126 0001                               l1230 003B  
                             l1222 0022                               l1214 000D  
                             l1144 0006                               l1152 0006  
                             l1136 001B                               l1128 0004  
                             l1160 0003                               l1240 005E  
                             l1232 0048                               l1224 0028  
                             l1216 0012                               l1208 0000  
                             l1146 0008                               l1154 0008  
                             l1090 001A                               l1138 0027  
                             l1170 0027                               l1162 0007  
                             l1242 0067                               l1234 004E  
                             l1226 002E                               l1218 0018  
                             l1180 0004                               l1148 0009  
                             l1156 0009                               l1092 001C  
                             l1084 0001                               l1164 0014  
                             l1172 0003                               l1244 0072  
                             l1236 0054                               l1228 0035  
                             l1182 0000                               l1094 0023  
                             l1086 0003                               l1190 0006  
                             l1166 001B                               l1158 0000  
                             l1174 0009                               l1246 0077  
                             l1238 005A                               l1184 0003  
                             l1096 0024                               l1088 0011  
                             l1192 0007                               l1168 0022  
                             l1176 0039                               l1248 007C  
                             l1178 0000                               l1098 002A  
                             l1194 000D                               l1186 0000  
                             l1196 0013                               l1188 0003  
                             l1198 0000                               STR_1 0010  
         ?_RealTimeClock_read_byte 0000                               _main 0000  
                             btemp 007E   __end_of_RealTimeClock_write_byte 003B  
                             start 0000*                     ??_Init_Keypad 0000  
   __end_of_RealTimeClock_get_time 003E                    ??_get_date_time 0000  
                 __end_of_LCD_Busy 0015                   __end_of_LCD_Init 0007  
                            ?_main 0000                      __CFG_WDTE$OFF 0000  
           __end_of_LCD_SecondLine 0007                              _PORTC 0007  
                            _PORTD 0008                              _TRISA 0085  
                            _TRISB 0086                              _TRISC 0087  
                            _TRISD 0088                      __CFG_PWRTE$ON 0000  
           __end_of_LCD_SendString 0034                     ??_LCD_SendData 0000  
                            _Sound 0000*    RealTimeClock_read_byte@time_rx 0004  
                   __CFG_BOREN$OFF 0000                       LCD_Command@c 0000  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __initialization 0000  
                     __end_of_main 0087                __end_of_Init_Keypad 0008  
                           ??_main 0009                    ?_LCD_SecondLine 0000  
                  ?_LCD_SendString 0001                             ?_Sound 0000  
  __end_of_RealTimeClock_read_byte 0041                             _ADCON1 009F  
                           _TRISB4 0434           _RealTimeClock_write_byte 0000  
                           ___wmul 0000               __size_of_LCD_Command 000F  
                  LCD_SendString@i 0003            __end_of__initialization 0000  
                        ?_LCD_Busy 0000                          ?_LCD_Init 0000  
                   __pcstackCOMMON 0000                        _Init_Keypad 0000  
             __end_of_LCD_SendData 000F           RealTimeClock_read_byte@i 0002  
                    LCD_SendData@c 0000                            ??_Sound 0000  
                        ?_Get_Temp 0000        __size_of_RealTimeClock_init 0017  
           get_date_time@date_time 000D                         ??_LCD_Busy 0000  
                       ??_LCD_Init 0000                         __pmaintext 0000  
                          ?___wmul 0000   __size_of_RealTimeClock_read_byte 0041  
                       ??_Get_Temp 0000                         __stringtab 0000  
                  __size_of___wmul 0028                   ??_LCD_SecondLine 0001  
            __end_of_get_date_time 0069                   ??_LCD_SendString 0003  
                          __ptext1 0000                            __ptext2 0000  
                          __ptext3 0000                            __ptext4 0000  
                          __ptext5 0000                            __ptext6 0000  
                          __ptext7 0000                            __ptext8 0000  
                          __ptext9 0000                            main@Key 000E  
             end_of_initialization 0000         ??_RealTimeClock_write_byte 0000  
            __size_of_LCD_SendData 000F                       _LCD_SendData 0000  
         ??_RealTimeClock_get_time 0005                  __size_of_LCD_Busy 0015  
                __size_of_LCD_Init 0007                       ?_Init_Keypad 0000  
          _RealTimeClock_read_byte 0000                      ??_LCD_Command 0000  
                   __end_of___wmul 0028                start_initialization 0000  
          RealTimeClock_get_time@i 0007                           ??___wmul 0004  
              __end_of_LCD_Command 000F         __end_of_RealTimeClock_init 0017  
                        ___latbits 0002                      __pcstackBANK0 0000  
                get_date_time@time 0006    __size_of_RealTimeClock_get_time 003E  
        ??_RealTimeClock_read_byte 0000          RealTimeClock_write_byte@i 0002  
                        __pstrings 0000                           _LCD_Busy 0000  
                         _LCD_Init 0000                     ___wmul@product 0004  
                      _LCD_Command 0000               __size_of_Init_Keypad 0008  
                      __stringbase 000F                  ___wmul@multiplier 0000  
           _RealTimeClock_get_time 0000                           _Get_Temp 0000* 
             LCD_SendString@string 0001             __size_of_get_date_time 0069  
__size_of_RealTimeClock_write_byte 003B          ?_RealTimeClock_write_byte 0000  
               __end_of__stringtab 0010            __size_of_LCD_SecondLine 0007  
                         __ptext10 0000                           __ptext11 0000  
                         __ptext12 0000                           __ptext13 0000  
          __size_of_LCD_SendString 0034                      __size_of_main 0087  
                         main@Date 0013                           main@mins 0011  
                         main@secs 000F                           main@test 0014  
                    _get_date_time 0000         RealTimeClock_get_time@time 0006  
  RealTimeClock_write_byte@time_tx 0004                 _RealTimeClock_init 0000  
                        stringcode 000A                ?_RealTimeClock_init 0000  
                   ?_get_date_time 0000                           stringdir 000A  
                         stringtab 0000               ??_RealTimeClock_init 0005  
