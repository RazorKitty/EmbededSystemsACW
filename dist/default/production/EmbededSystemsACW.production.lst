

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Jan 08 15:27:09 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F877A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   176                           SSPCON2 equ 091h ;# 
   177  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   178                           PR2 equ 092h ;# 
   179  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   180                           SSPADD equ 093h ;# 
   181  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   182                           SSPSTAT equ 094h ;# 
   183  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   184                           TXSTA equ 098h ;# 
   185  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   186                           SPBRG equ 099h ;# 
   187  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   188                           CMCON equ 09Ch ;# 
   189  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   190                           CVRCON equ 09Dh ;# 
   191  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   192                           ADRESL equ 09Eh ;# 
   193  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   194                           ADCON1 equ 09Fh ;# 
   195  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   196                           EEDATA equ 010Ch ;# 
   197  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   198                           EEADR equ 010Dh ;# 
   199  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   200                           EEDATH equ 010Eh ;# 
   201  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   202                           EEADRH equ 010Fh ;# 
   203  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   204                           EECON1 equ 018Ch ;# 
   205  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   206                           EECON2 equ 018Dh ;# 
   207  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   208                           INDF equ 00h ;# 
   209  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   210                           TMR0 equ 01h ;# 
   211  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   212                           PCL equ 02h ;# 
   213  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   214                           STATUS equ 03h ;# 
   215  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   216                           FSR equ 04h ;# 
   217  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   218                           PORTA equ 05h ;# 
   219  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   220                           PORTB equ 06h ;# 
   221  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   222                           PORTC equ 07h ;# 
   223  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   224                           PORTD equ 08h ;# 
   225  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   226                           PORTE equ 09h ;# 
   227  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   228                           PCLATH equ 0Ah ;# 
   229  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   230                           INTCON equ 0Bh ;# 
   231  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   232                           PIR1 equ 0Ch ;# 
   233  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   234                           PIR2 equ 0Dh ;# 
   235  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   236                           TMR1 equ 0Eh ;# 
   237  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   238                           TMR1L equ 0Eh ;# 
   239  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   240                           TMR1H equ 0Fh ;# 
   241  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   242                           T1CON equ 010h ;# 
   243  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   244                           TMR2 equ 011h ;# 
   245  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   246                           T2CON equ 012h ;# 
   247  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   248                           SSPBUF equ 013h ;# 
   249  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   250                           SSPCON equ 014h ;# 
   251  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   252                           CCPR1 equ 015h ;# 
   253  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   254                           CCPR1L equ 015h ;# 
   255  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   256                           CCPR1H equ 016h ;# 
   257  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   258                           CCP1CON equ 017h ;# 
   259  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   260                           RCSTA equ 018h ;# 
   261  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   262                           TXREG equ 019h ;# 
   263  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   264                           RCREG equ 01Ah ;# 
   265  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   266                           CCPR2 equ 01Bh ;# 
   267  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   268                           CCPR2L equ 01Bh ;# 
   269  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   270                           CCPR2H equ 01Ch ;# 
   271  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   272                           CCP2CON equ 01Dh ;# 
   273  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   274                           ADRESH equ 01Eh ;# 
   275  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   276                           ADCON0 equ 01Fh ;# 
   277  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   278                           OPTION_REG equ 081h ;# 
   279  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   280                           TRISA equ 085h ;# 
   281  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   282                           TRISB equ 086h ;# 
   283  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   284                           TRISC equ 087h ;# 
   285  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   286                           TRISD equ 088h ;# 
   287  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   288                           TRISE equ 089h ;# 
   289  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   290                           PIE1 equ 08Ch ;# 
   291  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   292                           PIE2 equ 08Dh ;# 
   293  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   294                           PCON equ 08Eh ;# 
   295  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   296                           SSPCON2 equ 091h ;# 
   297  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   298                           PR2 equ 092h ;# 
   299  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   300                           SSPADD equ 093h ;# 
   301  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   302                           SSPSTAT equ 094h ;# 
   303  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   304                           TXSTA equ 098h ;# 
   305  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   306                           SPBRG equ 099h ;# 
   307  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   308                           CMCON equ 09Ch ;# 
   309  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   310                           CVRCON equ 09Dh ;# 
   311  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   312                           ADRESL equ 09Eh ;# 
   313  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   314                           ADCON1 equ 09Fh ;# 
   315  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   316                           EEDATA equ 010Ch ;# 
   317  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   318                           EEADR equ 010Dh ;# 
   319  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   320                           EEDATH equ 010Eh ;# 
   321  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   322                           EEADRH equ 010Fh ;# 
   323  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   324                           EECON1 equ 018Ch ;# 
   325  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   326                           EECON2 equ 018Dh ;# 
   327  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   328                           INDF equ 00h ;# 
   329  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   330                           TMR0 equ 01h ;# 
   331  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   332                           PCL equ 02h ;# 
   333  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   334                           STATUS equ 03h ;# 
   335  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   336                           FSR equ 04h ;# 
   337  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   338                           PORTA equ 05h ;# 
   339  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   340                           PORTB equ 06h ;# 
   341  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   342                           PORTC equ 07h ;# 
   343  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   344                           PORTD equ 08h ;# 
   345  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   346                           PORTE equ 09h ;# 
   347  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   348                           PCLATH equ 0Ah ;# 
   349  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   350                           INTCON equ 0Bh ;# 
   351  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   352                           PIR1 equ 0Ch ;# 
   353  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   354                           PIR2 equ 0Dh ;# 
   355  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   356                           TMR1 equ 0Eh ;# 
   357  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   358                           TMR1L equ 0Eh ;# 
   359  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   360                           TMR1H equ 0Fh ;# 
   361  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   362                           T1CON equ 010h ;# 
   363  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   364                           TMR2 equ 011h ;# 
   365  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   366                           T2CON equ 012h ;# 
   367  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   368                           SSPBUF equ 013h ;# 
   369  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   370                           SSPCON equ 014h ;# 
   371  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   372                           CCPR1 equ 015h ;# 
   373  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   374                           CCPR1L equ 015h ;# 
   375  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   376                           CCPR1H equ 016h ;# 
   377  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   378                           CCP1CON equ 017h ;# 
   379  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   380                           RCSTA equ 018h ;# 
   381  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   382                           TXREG equ 019h ;# 
   383  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   384                           RCREG equ 01Ah ;# 
   385  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   386                           CCPR2 equ 01Bh ;# 
   387  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   388                           CCPR2L equ 01Bh ;# 
   389  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   390                           CCPR2H equ 01Ch ;# 
   391  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   392                           CCP2CON equ 01Dh ;# 
   393  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   394                           ADRESH equ 01Eh ;# 
   395  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   396                           ADCON0 equ 01Fh ;# 
   397  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   398                           OPTION_REG equ 081h ;# 
   399  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   400                           TRISA equ 085h ;# 
   401  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   402                           TRISB equ 086h ;# 
   403  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   404                           TRISC equ 087h ;# 
   405  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   406                           TRISD equ 088h ;# 
   407  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   408                           TRISE equ 089h ;# 
   409  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   410                           PIE1 equ 08Ch ;# 
   411  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   412                           PIE2 equ 08Dh ;# 
   413  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   414                           PCON equ 08Eh ;# 
   415  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   416                           SSPCON2 equ 091h ;# 
   417  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   418                           PR2 equ 092h ;# 
   419  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   420                           SSPADD equ 093h ;# 
   421  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   422                           SSPSTAT equ 094h ;# 
   423  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   424                           TXSTA equ 098h ;# 
   425  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   426                           SPBRG equ 099h ;# 
   427  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   428                           CMCON equ 09Ch ;# 
   429  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   430                           CVRCON equ 09Dh ;# 
   431  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   432                           ADRESL equ 09Eh ;# 
   433  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   434                           ADCON1 equ 09Fh ;# 
   435  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   436                           EEDATA equ 010Ch ;# 
   437  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   438                           EEADR equ 010Dh ;# 
   439  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   440                           EEDATH equ 010Eh ;# 
   441  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   442                           EEADRH equ 010Fh ;# 
   443  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   444                           EECON1 equ 018Ch ;# 
   445  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   446                           EECON2 equ 018Dh ;# 
   447  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   448                           INDF equ 00h ;# 
   449  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   450                           TMR0 equ 01h ;# 
   451  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   452                           PCL equ 02h ;# 
   453  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   454                           STATUS equ 03h ;# 
   455  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   456                           FSR equ 04h ;# 
   457  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   458                           PORTA equ 05h ;# 
   459  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   460                           PORTB equ 06h ;# 
   461  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   462                           PORTC equ 07h ;# 
   463  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   464                           PORTD equ 08h ;# 
   465  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   466                           PORTE equ 09h ;# 
   467  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   468                           PCLATH equ 0Ah ;# 
   469  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   470                           INTCON equ 0Bh ;# 
   471  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   472                           PIR1 equ 0Ch ;# 
   473  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   474                           PIR2 equ 0Dh ;# 
   475  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   476                           TMR1 equ 0Eh ;# 
   477  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   478                           TMR1L equ 0Eh ;# 
   479  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   480                           TMR1H equ 0Fh ;# 
   481  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   482                           T1CON equ 010h ;# 
   483  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   484                           TMR2 equ 011h ;# 
   485  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   486                           T2CON equ 012h ;# 
   487  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   488                           SSPBUF equ 013h ;# 
   489  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   490                           SSPCON equ 014h ;# 
   491  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   492                           CCPR1 equ 015h ;# 
   493  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   494                           CCPR1L equ 015h ;# 
   495  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   496                           CCPR1H equ 016h ;# 
   497  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   498                           CCP1CON equ 017h ;# 
   499  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   500                           RCSTA equ 018h ;# 
   501  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   502                           TXREG equ 019h ;# 
   503  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   504                           RCREG equ 01Ah ;# 
   505  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   506                           CCPR2 equ 01Bh ;# 
   507  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   508                           CCPR2L equ 01Bh ;# 
   509  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   510                           CCPR2H equ 01Ch ;# 
   511  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   512                           CCP2CON equ 01Dh ;# 
   513  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   514                           ADRESH equ 01Eh ;# 
   515  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   516                           ADCON0 equ 01Fh ;# 
   517  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   518                           OPTION_REG equ 081h ;# 
   519  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   520                           TRISA equ 085h ;# 
   521  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   522                           TRISB equ 086h ;# 
   523  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   524                           TRISC equ 087h ;# 
   525  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   526                           TRISD equ 088h ;# 
   527  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   528                           TRISE equ 089h ;# 
   529  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   530                           PIE1 equ 08Ch ;# 
   531  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   532                           PIE2 equ 08Dh ;# 
   533  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   534                           PCON equ 08Eh ;# 
   535  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   536                           SSPCON2 equ 091h ;# 
   537  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   538                           PR2 equ 092h ;# 
   539  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   540                           SSPADD equ 093h ;# 
   541  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   542                           SSPSTAT equ 094h ;# 
   543  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   544                           TXSTA equ 098h ;# 
   545  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   546                           SPBRG equ 099h ;# 
   547  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   548                           CMCON equ 09Ch ;# 
   549  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   550                           CVRCON equ 09Dh ;# 
   551  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   552                           ADRESL equ 09Eh ;# 
   553  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   554                           ADCON1 equ 09Fh ;# 
   555  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   556                           EEDATA equ 010Ch ;# 
   557  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   558                           EEADR equ 010Dh ;# 
   559  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   560                           EEDATH equ 010Eh ;# 
   561  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   562                           EEADRH equ 010Fh ;# 
   563  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   564                           EECON1 equ 018Ch ;# 
   565  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   566                           EECON2 equ 018Dh ;# 
   567  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   568                           INDF equ 00h ;# 
   569  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   570                           TMR0 equ 01h ;# 
   571  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   572                           PCL equ 02h ;# 
   573  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   574                           STATUS equ 03h ;# 
   575  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   576                           FSR equ 04h ;# 
   577  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   578                           PORTA equ 05h ;# 
   579  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   580                           PORTB equ 06h ;# 
   581  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   582                           PORTC equ 07h ;# 
   583  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   584                           PORTD equ 08h ;# 
   585  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   586                           PORTE equ 09h ;# 
   587  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   588                           PCLATH equ 0Ah ;# 
   589  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   590                           INTCON equ 0Bh ;# 
   591  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   592                           PIR1 equ 0Ch ;# 
   593  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   594                           PIR2 equ 0Dh ;# 
   595  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   596                           TMR1 equ 0Eh ;# 
   597  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   598                           TMR1L equ 0Eh ;# 
   599  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   600                           TMR1H equ 0Fh ;# 
   601  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   602                           T1CON equ 010h ;# 
   603  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   604                           TMR2 equ 011h ;# 
   605  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   606                           T2CON equ 012h ;# 
   607  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   608                           SSPBUF equ 013h ;# 
   609  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   610                           SSPCON equ 014h ;# 
   611  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   612                           CCPR1 equ 015h ;# 
   613  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   614                           CCPR1L equ 015h ;# 
   615  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   616                           CCPR1H equ 016h ;# 
   617  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   618                           CCP1CON equ 017h ;# 
   619  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   620                           RCSTA equ 018h ;# 
   621  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   622                           TXREG equ 019h ;# 
   623  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   624                           RCREG equ 01Ah ;# 
   625  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   626                           CCPR2 equ 01Bh ;# 
   627  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   628                           CCPR2L equ 01Bh ;# 
   629  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   630                           CCPR2H equ 01Ch ;# 
   631  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   632                           CCP2CON equ 01Dh ;# 
   633  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   634                           ADRESH equ 01Eh ;# 
   635  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   636                           ADCON0 equ 01Fh ;# 
   637  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   638                           OPTION_REG equ 081h ;# 
   639  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   640                           TRISA equ 085h ;# 
   641  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   642                           TRISB equ 086h ;# 
   643  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   644                           TRISC equ 087h ;# 
   645  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   646                           TRISD equ 088h ;# 
   647  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   648                           TRISE equ 089h ;# 
   649  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   650                           PIE1 equ 08Ch ;# 
   651  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   652                           PIE2 equ 08Dh ;# 
   653  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   654                           PCON equ 08Eh ;# 
   655  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   656                           SSPCON2 equ 091h ;# 
   657  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   658                           PR2 equ 092h ;# 
   659  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   660                           SSPADD equ 093h ;# 
   661  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   662                           SSPSTAT equ 094h ;# 
   663  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   664                           TXSTA equ 098h ;# 
   665  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   666                           SPBRG equ 099h ;# 
   667  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   668                           CMCON equ 09Ch ;# 
   669  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   670                           CVRCON equ 09Dh ;# 
   671  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   672                           ADRESL equ 09Eh ;# 
   673  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   674                           ADCON1 equ 09Fh ;# 
   675  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   676                           EEDATA equ 010Ch ;# 
   677  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   678                           EEADR equ 010Dh ;# 
   679  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   680                           EEDATH equ 010Eh ;# 
   681  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   682                           EEADRH equ 010Fh ;# 
   683  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   684                           EECON1 equ 018Ch ;# 
   685  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   686                           EECON2 equ 018Dh ;# 
   687  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   688                           INDF equ 00h ;# 
   689  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   690                           TMR0 equ 01h ;# 
   691  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   692                           PCL equ 02h ;# 
   693  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   694                           STATUS equ 03h ;# 
   695  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   696                           FSR equ 04h ;# 
   697  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   698                           PORTA equ 05h ;# 
   699  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   700                           PORTB equ 06h ;# 
   701  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   702                           PORTC equ 07h ;# 
   703  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   704                           PORTD equ 08h ;# 
   705  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   706                           PORTE equ 09h ;# 
   707  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   708                           PCLATH equ 0Ah ;# 
   709  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   710                           INTCON equ 0Bh ;# 
   711  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   712                           PIR1 equ 0Ch ;# 
   713  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   714                           PIR2 equ 0Dh ;# 
   715  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   716                           TMR1 equ 0Eh ;# 
   717  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   718                           TMR1L equ 0Eh ;# 
   719  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   720                           TMR1H equ 0Fh ;# 
   721  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   722                           T1CON equ 010h ;# 
   723  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   724                           TMR2 equ 011h ;# 
   725  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   726                           T2CON equ 012h ;# 
   727  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   728                           SSPBUF equ 013h ;# 
   729  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   730                           SSPCON equ 014h ;# 
   731  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   732                           CCPR1 equ 015h ;# 
   733  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   734                           CCPR1L equ 015h ;# 
   735  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   736                           CCPR1H equ 016h ;# 
   737  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   738                           CCP1CON equ 017h ;# 
   739  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   740                           RCSTA equ 018h ;# 
   741  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   742                           TXREG equ 019h ;# 
   743  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   744                           RCREG equ 01Ah ;# 
   745  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   746                           CCPR2 equ 01Bh ;# 
   747  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   748                           CCPR2L equ 01Bh ;# 
   749  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   750                           CCPR2H equ 01Ch ;# 
   751  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   752                           CCP2CON equ 01Dh ;# 
   753  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   754                           ADRESH equ 01Eh ;# 
   755  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   756                           ADCON0 equ 01Fh ;# 
   757  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   758                           OPTION_REG equ 081h ;# 
   759  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   760                           TRISA equ 085h ;# 
   761  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   762                           TRISB equ 086h ;# 
   763  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   764                           TRISC equ 087h ;# 
   765  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   766                           TRISD equ 088h ;# 
   767  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   768                           TRISE equ 089h ;# 
   769  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   770                           PIE1 equ 08Ch ;# 
   771  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   772                           PIE2 equ 08Dh ;# 
   773  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   774                           PCON equ 08Eh ;# 
   775  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   776                           SSPCON2 equ 091h ;# 
   777  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   778                           PR2 equ 092h ;# 
   779  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   780                           SSPADD equ 093h ;# 
   781  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   782                           SSPSTAT equ 094h ;# 
   783  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   784                           TXSTA equ 098h ;# 
   785  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   786                           SPBRG equ 099h ;# 
   787  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   788                           CMCON equ 09Ch ;# 
   789  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   790                           CVRCON equ 09Dh ;# 
   791  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   792                           ADRESL equ 09Eh ;# 
   793  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   794                           ADCON1 equ 09Fh ;# 
   795  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   796                           EEDATA equ 010Ch ;# 
   797  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   798                           EEADR equ 010Dh ;# 
   799  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   800                           EEDATH equ 010Eh ;# 
   801  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   802                           EEADRH equ 010Fh ;# 
   803  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   804                           EECON1 equ 018Ch ;# 
   805  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   806                           EECON2 equ 018Dh ;# 
   807  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   808                           INDF equ 00h ;# 
   809  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   810                           TMR0 equ 01h ;# 
   811  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   812                           PCL equ 02h ;# 
   813  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   814                           STATUS equ 03h ;# 
   815  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   816                           FSR equ 04h ;# 
   817  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   818                           PORTA equ 05h ;# 
   819  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   820                           PORTB equ 06h ;# 
   821  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   822                           PORTC equ 07h ;# 
   823  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   824                           PORTD equ 08h ;# 
   825  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   826                           PORTE equ 09h ;# 
   827  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   828                           PCLATH equ 0Ah ;# 
   829  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   830                           INTCON equ 0Bh ;# 
   831  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   832                           PIR1 equ 0Ch ;# 
   833  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   834                           PIR2 equ 0Dh ;# 
   835  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   836                           TMR1 equ 0Eh ;# 
   837  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   838                           TMR1L equ 0Eh ;# 
   839  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   840                           TMR1H equ 0Fh ;# 
   841  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   842                           T1CON equ 010h ;# 
   843  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   844                           TMR2 equ 011h ;# 
   845  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   846                           T2CON equ 012h ;# 
   847  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   848                           SSPBUF equ 013h ;# 
   849  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   850                           SSPCON equ 014h ;# 
   851  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   852                           CCPR1 equ 015h ;# 
   853  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   854                           CCPR1L equ 015h ;# 
   855  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   856                           CCPR1H equ 016h ;# 
   857  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   858                           CCP1CON equ 017h ;# 
   859  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   860                           RCSTA equ 018h ;# 
   861  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   862                           TXREG equ 019h ;# 
   863  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   864                           RCREG equ 01Ah ;# 
   865  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   866                           CCPR2 equ 01Bh ;# 
   867  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   868                           CCPR2L equ 01Bh ;# 
   869  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   870                           CCPR2H equ 01Ch ;# 
   871  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   872                           CCP2CON equ 01Dh ;# 
   873  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   874                           ADRESH equ 01Eh ;# 
   875  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   876                           ADCON0 equ 01Fh ;# 
   877  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   878                           OPTION_REG equ 081h ;# 
   879  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   880                           TRISA equ 085h ;# 
   881  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   882                           TRISB equ 086h ;# 
   883  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   884                           TRISC equ 087h ;# 
   885  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   886                           TRISD equ 088h ;# 
   887  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   888                           TRISE equ 089h ;# 
   889  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   890                           PIE1 equ 08Ch ;# 
   891  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   892                           PIE2 equ 08Dh ;# 
   893  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   894                           PCON equ 08Eh ;# 
   895  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   896                           SSPCON2 equ 091h ;# 
   897  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   898                           PR2 equ 092h ;# 
   899  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   900                           SSPADD equ 093h ;# 
   901  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   902                           SSPSTAT equ 094h ;# 
   903  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   904                           TXSTA equ 098h ;# 
   905  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   906                           SPBRG equ 099h ;# 
   907  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   908                           CMCON equ 09Ch ;# 
   909  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   910                           CVRCON equ 09Dh ;# 
   911  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   912                           ADRESL equ 09Eh ;# 
   913  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   914                           ADCON1 equ 09Fh ;# 
   915  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   916                           EEDATA equ 010Ch ;# 
   917  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   918                           EEADR equ 010Dh ;# 
   919  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   920                           EEDATH equ 010Eh ;# 
   921  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   922                           EEADRH equ 010Fh ;# 
   923  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   924                           EECON1 equ 018Ch ;# 
   925  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   926                           EECON2 equ 018Dh ;# 
   927  018D                     	FNCALL	_main,_Buzzer_Init
   928                           	FNCALL	_main,_ChangeTrigger
   929                           	FNCALL	_main,_CheckDay
   930                           	FNCALL	_main,_CheckTime
   931                           	FNCALL	_main,_DateDayScreen
   932                           	FNCALL	_main,_HeatingControlOff
   933                           	FNCALL	_main,_Init_Keypad
   934                           	FNCALL	_main,_Keypad_Scan
   935                           	FNCALL	_main,_LCD_Command
   936                           	FNCALL	_main,_LCD_Init
   937                           	FNCALL	_main,_MainScreen
   938                           	FNCALL	_main,_Main_Delay
   939                           	FNCALL	_main,_RealTimeClock_get_day_of_week
   940                           	FNCALL	_main,_RealTimeClock_init
   941                           	FNCALL	_main,_SetDate
   942                           	FNCALL	_main,_SetTime
   943                           	FNCALL	_main,_SoundAlarm
   944                           	FNCALL	_main,_SoundOff
   945                           	FNCALL	_main,_SwapToHeatingDisplay
   946                           	FNCALL	_main,_Switch24Hour
   947                           	FNCALL	_main,_Thermometer_Init
   948                           	FNCALL	_main,___wmul
   949                           	FNCALL	_Switch24Hour,_LCD_Command
   950                           	FNCALL	_Switch24Hour,_LCD_SendData
   951                           	FNCALL	_Switch24Hour,___awmod
   952                           	FNCALL	_SoundAlarm,_ChangeTrigger
   953                           	FNCALL	_SoundAlarm,_Get_Temp
   954                           	FNCALL	_SoundAlarm,_HeatingControlOff
   955                           	FNCALL	_SoundAlarm,_Keypad_Scan
   956                           	FNCALL	_SoundAlarm,_LCD_Command
   957                           	FNCALL	_SoundAlarm,_LCD_SendString
   958                           	FNCALL	_SoundAlarm,_SoundOff
   959                           	FNCALL	_SoundAlarm,_SoundOn
   960                           	FNCALL	_SoundAlarm,_SwapToHeatingDisplay
   961                           	FNCALL	_SoundAlarm,___wmul
   962                           	FNCALL	_HeatingControlOff,_ChangeTrigger
   963                           	FNCALL	_HeatingControlOff,_Get_Temp
   964                           	FNCALL	_HeatingControlOff,_Keypad_Scan
   965                           	FNCALL	_HeatingControlOff,_LCD_Command
   966                           	FNCALL	_HeatingControlOff,_LCD_SendString
   967                           	FNCALL	_HeatingControlOff,_MainScreen
   968                           	FNCALL	_HeatingControlOff,_Main_Delay
   969                           	FNCALL	_HeatingControlOff,_SoundOff
   970                           	FNCALL	_HeatingControlOff,_SwapToHeatingDisplay
   971                           	FNCALL	_HeatingControlOff,___wmul
   972                           	FNCALL	_MainScreen,_DisplayTemp
   973                           	FNCALL	_MainScreen,_DisplayTime
   974                           	FNCALL	_MainScreen,_LCD_SecondLine
   975                           	FNCALL	_MainScreen,_LCD_SendString
   976                           	FNCALL	_DisplayTime,_LCD_SendString
   977                           	FNCALL	_DisplayTime,_RealTimeClock_get_hours
   978                           	FNCALL	_DisplayTime,_RealTimeClock_get_minutes
   979                           	FNCALL	_DisplayTime,_RealTimeClock_get_seconds
   980                           	FNCALL	_DisplayTime,___awdiv
   981                           	FNCALL	_DisplayTime,___awmod
   982                           	FNCALL	_DisplayTemp,_Get_Temp
   983                           	FNCALL	_DisplayTemp,_LCD_Busy
   984                           	FNCALL	_DisplayTemp,_LCD_SendData
   985                           	FNCALL	_DisplayTemp,_LCD_SendString
   986                           	FNCALL	_Get_Temp,_Delay
   987                           	FNCALL	_Get_Temp,_Read_Byte
   988                           	FNCALL	_Get_Temp,_Reset
   989                           	FNCALL	_Get_Temp,_Write_Byte
   990                           	FNCALL	_Get_Temp,___awdiv
   991                           	FNCALL	_Get_Temp,___awmod
   992                           	FNCALL	_Get_Temp,___lwdiv
   993                           	FNCALL	_Get_Temp,___lwmod
   994                           	FNCALL	_Write_Byte,_Delay
   995                           	FNCALL	_Reset,_Delay
   996                           	FNCALL	_Read_Byte,_Delay
   997                           	FNCALL	_SetTime,_Keypad_Scan
   998                           	FNCALL	_SetTime,_LCD_Command
   999                           	FNCALL	_SetTime,_LCD_SendString
  1000                           	FNCALL	_SetTime,_Main_Delay
  1001                           	FNCALL	_SetTime,_RealTimeClock_get_hours
  1002                           	FNCALL	_SetTime,_RealTimeClock_get_minutes
  1003                           	FNCALL	_SetTime,_RealTimeClock_get_seconds
  1004                           	FNCALL	_SetTime,_RealTimeClock_set_hours
  1005                           	FNCALL	_SetTime,_RealTimeClock_set_minutes
  1006                           	FNCALL	_SetTime,_RealTimeClock_set_seconds
  1007                           	FNCALL	_SetTime,___awdiv
  1008                           	FNCALL	_SetTime,___awmod
  1009                           	FNCALL	_RealTimeClock_set_seconds,_RealTimeClock_write_byte
  1010                           	FNCALL	_RealTimeClock_set_seconds,___int_to_hex
  1011                           	FNCALL	_RealTimeClock_set_minutes,_RealTimeClock_write_byte
  1012                           	FNCALL	_RealTimeClock_set_minutes,___int_to_hex
  1013                           	FNCALL	_RealTimeClock_set_hours,_RealTimeClock_write_byte
  1014                           	FNCALL	_RealTimeClock_set_hours,___int_to_hex
  1015                           	FNCALL	_RealTimeClock_get_seconds,_RealTimeClock_read_byte
  1016                           	FNCALL	_RealTimeClock_get_seconds,_RealTimeClock_write_byte
  1017                           	FNCALL	_RealTimeClock_get_seconds,___hex_to_int
  1018                           	FNCALL	_SetDate,_CheckDay
  1019                           	FNCALL	_SetDate,_Keypad_Scan
  1020                           	FNCALL	_SetDate,_LCD_Command
  1021                           	FNCALL	_SetDate,_LCD_SecondLine
  1022                           	FNCALL	_SetDate,_LCD_SendString
  1023                           	FNCALL	_SetDate,_Main_Delay
  1024                           	FNCALL	_SetDate,_RealTimeClock_get_day_of_week
  1025                           	FNCALL	_SetDate,_RealTimeClock_set_day_of_week
  1026                           	FNCALL	_RealTimeClock_set_day_of_week,_RealTimeClock_write_byte
  1027                           	FNCALL	_RealTimeClock_set_day_of_week,___int_to_hex
  1028                           	FNCALL	___int_to_hex,___awmod
  1029                           	FNCALL	_RealTimeClock_init,_RealTimeClock_write_byte
  1030                           	FNCALL	_DateDayScreen,_ChangeTrigger
  1031                           	FNCALL	_DateDayScreen,_DisplayDate
  1032                           	FNCALL	_DateDayScreen,_DisplayDay
  1033                           	FNCALL	_DateDayScreen,_Keypad_Scan
  1034                           	FNCALL	_DateDayScreen,_LCD_Command
  1035                           	FNCALL	_DateDayScreen,_LCD_SecondLine
  1036                           	FNCALL	_DateDayScreen,_LCD_SendString
  1037                           	FNCALL	_DateDayScreen,_SwapToHeatingDisplay
  1038                           	FNCALL	_SwapToHeatingDisplay,_Keypad_Scan
  1039                           	FNCALL	_SwapToHeatingDisplay,_LCD_Command
  1040                           	FNCALL	_SwapToHeatingDisplay,_LCD_SendString
  1041                           	FNCALL	_LCD_SecondLine,_LCD_Command
  1042                           	FNCALL	_DisplayDay,_LCD_SendString
  1043                           	FNCALL	_DisplayDay,_RealTimeClock_get_day_of_week
  1044                           	FNCALL	_RealTimeClock_get_day_of_week,_RealTimeClock_read_byte
  1045                           	FNCALL	_RealTimeClock_get_day_of_week,_RealTimeClock_write_byte
  1046                           	FNCALL	_RealTimeClock_get_day_of_week,___hex_to_int
  1047                           	FNCALL	_DisplayDate,_RealTimeClock_get_day_of_month
  1048                           	FNCALL	_DisplayDate,_RealTimeClock_get_month
  1049                           	FNCALL	_DisplayDate,_RealTimeClock_get_year
  1050                           	FNCALL	_DisplayDate,___awdiv
  1051                           	FNCALL	_DisplayDate,___awmod
  1052                           	FNCALL	_RealTimeClock_get_year,_RealTimeClock_read_byte
  1053                           	FNCALL	_RealTimeClock_get_year,_RealTimeClock_write_byte
  1054                           	FNCALL	_RealTimeClock_get_year,___hex_to_int
  1055                           	FNCALL	_RealTimeClock_get_month,_RealTimeClock_read_byte
  1056                           	FNCALL	_RealTimeClock_get_month,_RealTimeClock_write_byte
  1057                           	FNCALL	_RealTimeClock_get_month,___hex_to_int
  1058                           	FNCALL	_RealTimeClock_get_day_of_month,_RealTimeClock_read_byte
  1059                           	FNCALL	_RealTimeClock_get_day_of_month,_RealTimeClock_write_byte
  1060                           	FNCALL	_RealTimeClock_get_day_of_month,___hex_to_int
  1061                           	FNCALL	_ChangeTrigger,_Keypad_Scan
  1062                           	FNCALL	_ChangeTrigger,_LCD_Busy
  1063                           	FNCALL	_ChangeTrigger,_LCD_Command
  1064                           	FNCALL	_ChangeTrigger,_LCD_SendData
  1065                           	FNCALL	_ChangeTrigger,_LCD_SendString
  1066                           	FNCALL	_ChangeTrigger,_Main_Delay
  1067                           	FNCALL	_ChangeTrigger,___awdiv
  1068                           	FNCALL	_ChangeTrigger,___awmod
  1069                           	FNCALL	_LCD_SendString,_LCD_SendData
  1070                           	FNCALL	_LCD_SendData,_LCD_Busy
  1071                           	FNCALL	_LCD_Command,_LCD_Busy
  1072                           	FNCALL	_Keypad_Scan,_Key_Delay
  1073                           	FNCALL	_CheckTime,_RealTimeClock_get_hours
  1074                           	FNCALL	_CheckTime,_RealTimeClock_get_minutes
  1075                           	FNCALL	_RealTimeClock_get_minutes,_RealTimeClock_read_byte
  1076                           	FNCALL	_RealTimeClock_get_minutes,_RealTimeClock_write_byte
  1077                           	FNCALL	_RealTimeClock_get_minutes,___hex_to_int
  1078                           	FNCALL	_RealTimeClock_get_hours,_RealTimeClock_read_byte
  1079                           	FNCALL	_RealTimeClock_get_hours,_RealTimeClock_write_byte
  1080                           	FNCALL	_RealTimeClock_get_hours,___hex_to_int
  1081                           	FNCALL	___hex_to_int,___awmod
  1082                           	FNROOT	_main
  1083                           	global	_triggerTemp
  1084                           	global	_numberTable
  1085                           	global	SetTime@F993
  1086                           	global	_dateDisplayer
  1087                           	global	_weekEndEnd
  1088                           	global	_weekEndStart
  1089                           	global	_weekDayEnd
  1090                           	global	_weekDayStart
  1091                           	global	_timeDisplayer
  1092                           	global	_tempBuffer
  1093                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1094                           global __pidataBANK0
  1095                           __pidataBANK0:
  1096  0004                     	file	"main.c"
  1097                           	line	47
  1098                           
  1099                           ;initializer for _triggerTemp
  1100                           	retlw	01Ch
  1101  0004  341C               	retlw	0
  1102  0005  3400               
  1103                           	retlw	low(0)
  1104  0006  3400               	retlw	high(0)
  1105  0007  3400               
  1106                           psect	idataBANK1,class=CODE,space=0,delta=2,noexec
  1107                           global __pidataBANK1
  1108                           __pidataBANK1:
  1109  1228                     	file	"Thermometer.c"
  1110                           	line	23
  1111                           
  1112                           ;initializer for _numberTable
  1113                           	retlw	030h
  1114  1228  3430               	retlw	031h
  1115  1229  3431               	retlw	032h
  1116  122A  3432               	retlw	033h
  1117  122B  3433               	retlw	034h
  1118  122C  3434               	retlw	035h
  1119  122D  3435               	retlw	036h
  1120  122E  3436               	retlw	037h
  1121  122F  3437               	retlw	038h
  1122  1230  3438               	retlw	039h
  1123  1231  3439               	file	"main.c"
  1124                           	line	470
  1125                           
  1126                           ;initializer for SetTime@F993
  1127                           	retlw	030h
  1128  1232  3430               	retlw	030h
  1129  1233  3430               	retlw	03Ah
  1130  1234  343A               	retlw	030h
  1131  1235  3430               	retlw	030h
  1132  1236  3430               	retlw	02Eh
  1133  1237  342E               	retlw	030h
  1134  1238  3430               	retlw	030h
  1135  1239  3430               	retlw	low(0)
  1136  123A  3400               	line	42
  1137                           
  1138                           ;initializer for _dateDisplayer
  1139                           	retlw	030h
  1140  123B  3430               	retlw	030h
  1141  123C  3430               	retlw	02Fh
  1142  123D  342F               	retlw	030h
  1143  123E  3430               	retlw	030h
  1144  123F  3430               	retlw	02Fh
  1145  1240  342F               	retlw	030h
  1146  1241  3430               	retlw	030h
  1147  1242  3430               	retlw	low(0)
  1148  1243  3400               	line	35
  1149                           
  1150                           ;initializer for _weekEndEnd
  1151                           	retlw	017h
  1152  1244  3417               	retlw	0
  1153  1245  3400               
  1154                           	retlw	low(0)
  1155  1246  3400               	retlw	high(0)
  1156  1247  3400               
  1157                           	line	34
  1158                           
  1159                           ;initializer for _weekEndStart
  1160                           	retlw	07h
  1161  1248  3407               	retlw	0
  1162  1249  3400               
  1163                           	retlw	low(0)
  1164  124A  3400               	retlw	high(0)
  1165  124B  3400               
  1166                           	line	33
  1167                           
  1168                           ;initializer for _weekDayEnd
  1169                           	retlw	016h
  1170  124C  3416               	retlw	0
  1171  124D  3400               
  1172                           	retlw	01Eh
  1173  124E  341E               	retlw	0
  1174  124F  3400               
  1175                           	line	32
  1176                           
  1177                           ;initializer for _weekDayStart
  1178                           	retlw	06h
  1179  1250  3406               	retlw	0
  1180  1251  3400               
  1181                           	retlw	01Eh
  1182  1252  341E               	retlw	0
  1183  1253  3400               
  1184                           	line	40
  1185                           
  1186                           ;initializer for _timeDisplayer
  1187                           	retlw	030h
  1188  1254  3430               	retlw	030h
  1189  1255  3430               	retlw	03Ah
  1190  1256  343A               	retlw	030h
  1191  1257  3430               	retlw	030h
  1192  1258  3430               	retlw	02Eh
  1193  1259  342E               	retlw	030h
  1194  125A  3430               	retlw	030h
  1195  125B  3430               	retlw	low(0)
  1196  125C  3400               	line	38
  1197                           
  1198                           ;initializer for _tempBuffer
  1199                           	retlw	030h
  1200  125D  3430               	retlw	030h
  1201  125E  3430               	retlw	030h
  1202  125F  3430               	retlw	030h
  1203  1260  3430               	retlw	030h
  1204  1261  3430               	retlw	low(0)
  1205  1262  3400               psect	idataBANK3,class=CODE,space=0,delta=2,noexec
  1206                           global __pidataBANK3
  1207                           __pidataBANK3:
  1208  1E51                     	line	51
  1209                           
  1210                           ;initializer for _start_date
  1211                           	retlw	03Bh
  1212  1E51  343B               	retlw	0
  1213  1E52  3400               
  1214                           	retlw	02Ah
  1215  1E53  342A               	retlw	0
  1216  1E54  3400               
  1217                           	retlw	0Eh
  1218  1E55  340E               	retlw	0
  1219  1E56  3400               
  1220                           	retlw	08h
  1221  1E57  3408               	retlw	0
  1222  1E58  3400               
  1223                           	retlw	02h
  1224  1E59  3402               	retlw	0
  1225  1E5A  3400               
  1226                           	retlw	02h
  1227  1E5B  3402               	retlw	0
  1228  1E5C  3400               
  1229                           	retlw	013h
  1230  1E5D  3413               	retlw	0
  1231  1E5E  3400               
  1232                           	retlw	low(0)
  1233  1E5F  3400               	retlw	high(0)
  1234  1E60  3400               
  1235                           	global	_TempBCD
  1236                           	global	_timeSecs
  1237                           	global	_timeMins
  1238                           	global	_timeHours
  1239                           	global	_is24Hour
  1240                           	global	_IsHeatingOn
  1241                           	global	Read_Byte@j
  1242                           	global	_hundredthbit
  1243                           	global	_tenthbit
  1244                           	global	_intent
  1245                           	global	_tenbit
  1246                           	global	_TempDec
  1247                           	global	_TempInt
  1248                           	global	_THB
  1249                           	global	_TLB
  1250                           	global	_previousTemp
  1251                           	global	_Temp
  1252                           	global	_isWeekDay
  1253                           	global	_day_of_week
  1254                           	global	_DisableAlarm
  1255                           	global	___RealTimeClock_buff
  1256                           	global	_PORTD
  1257                           _PORTD	set	0x8
  1258  0008                     	global	_PORTC
  1259                           _PORTC	set	0x7
  1260  0007                     	global	_RA0
  1261                           _RA0	set	0x28
  1262  0028                     	global	_RB1
  1263                           _RB1	set	0x31
  1264  0031                     	global	_RD7
  1265                           _RD7	set	0x47
  1266  0047                     	global	_RA2
  1267                           _RA2	set	0x2A
  1268  002A                     	global	_RA1
  1269                           _RA1	set	0x29
  1270  0029                     	global	_RA3
  1271                           _RA3	set	0x2B
  1272  002B                     	global	_RC0
  1273                           _RC0	set	0x38
  1274  0038                     	global	_RC1
  1275                           _RC1	set	0x39
  1276  0039                     	global	_RC2
  1277                           _RC2	set	0x3A
  1278  003A                     	global	_RC3
  1279                           _RC3	set	0x3B
  1280  003B                     	global	_RC7
  1281                           _RC7	set	0x3F
  1282  003F                     	global	_RC6
  1283                           _RC6	set	0x3E
  1284  003E                     	global	_RC5
  1285                           _RC5	set	0x3D
  1286  003D                     	global	_RC4
  1287                           _RC4	set	0x3C
  1288  003C                     	global	_RB5
  1289                           _RB5	set	0x35
  1290  0035                     	global	_RB0
  1291                           _RB0	set	0x30
  1292  0030                     	global	_RB4
  1293                           _RB4	set	0x34
  1294  0034                     	global	_TRISA
  1295                           _TRISA	set	0x85
  1296  0085                     	global	_TRISD
  1297                           _TRISD	set	0x88
  1298  0088                     	global	_TRISC
  1299                           _TRISC	set	0x87
  1300  0087                     	global	_ADCON1
  1301                           _ADCON1	set	0x9F
  1302  009F                     	global	_TRISA0
  1303                           _TRISA0	set	0x428
  1304  0428                     	global	_TRISB1
  1305                           _TRISB1	set	0x431
  1306  0431                     	global	_TRISB5
  1307                           _TRISB5	set	0x435
  1308  0435                     	global	_TRISB0
  1309                           _TRISB0	set	0x430
  1310  0430                     	global	_TRISB4
  1311                           _TRISB4	set	0x434
  1312  0434                     psect	strings,class=STRING,delta=2,noexec
  1313                           global __pstrings
  1314                           __pstrings:
  1315  1000                     stringtab:
  1316  1000                     	global    __stringtab
  1317                           __stringtab:
  1318  1000                     ;	String table - string pointers are 1 byte each
  1319                           	btfsc	(btemp+1),7
  1320  1000  1BFF               	ljmp	stringcode
  1321  1001  280A               	bcf	status,7
  1322  1002  1383               	btfsc	(btemp+1),0
  1323  1003  187F               	bsf	status,7
  1324  1004  1783               	movf	indf,w
  1325  1005  0800               	incf fsr
  1326  1006  0A84               skipnz
  1327  1007  1903               incf btemp+1
  1328  1008  0AFF               	return
  1329  1009  0008               stringcode:stringdir:
  1330  100A                     movlw high(stringdir)
      + 100A                     stringdir:	
  1331  100A  3010               movwf pclath
  1332  100B  008A               movf fsr,w
  1333  100C  0804               incf fsr
  1334  100D  0A84               	addwf pc
  1335  100E  0782               	global __stringbase
  1336                           __stringbase:
  1337  100F                     	retlw	0
  1338  100F  3400               psect	strings
  1339                           	global    __end_of__stringtab
  1340                           __end_of__stringtab:
  1341  1010                     	
  1342                           STR_17:	
  1343  1010                     	retlw	72	;'H'
  1344  1010  3448               	retlw	101	;'e'
  1345  1011  3465               	retlw	97	;'a'
  1346  1012  3461               	retlw	116	;'t'
  1347  1013  3474               	retlw	105	;'i'
  1348  1014  3469               	retlw	110	;'n'
  1349  1015  346E               	retlw	103	;'g'
  1350  1016  3467               	retlw	32	;' '
  1351  1017  3420               	retlw	70	;'F'
  1352  1018  3446               	retlw	97	;'a'
  1353  1019  3461               	retlw	105	;'i'
  1354  101A  3469               	retlw	108	;'l'
  1355  101B  346C               	retlw	117	;'u'
  1356  101C  3475               	retlw	114	;'r'
  1357  101D  3472               	retlw	101	;'e'
  1358  101E  3465               	retlw	0
  1359  101F  3400               psect	strings
  1360                           	
  1361                           STR_24:	
  1362  1020                     	retlw	68	;'D'
  1363  1020  3444               	retlw	97	;'a'
  1364  1021  3461               	retlw	116	;'t'
  1365  1022  3474               	retlw	101	;'e'
  1366  1023  3465               	retlw	47	;'/'
  1367  1024  342F               	retlw	68	;'D'
  1368  1025  3444               	retlw	97	;'a'
  1369  1026  3461               	retlw	121	;'y'
  1370  1027  3479               	retlw	32	;' '
  1371  1028  3420               	retlw	83	;'S'
  1372  1029  3453               	retlw	101	;'e'
  1373  102A  3465               	retlw	116	;'t'
  1374  102B  3474               	retlw	0
  1375  102C  3400               psect	strings
  1376                           	
  1377                           STR_15:	
  1378  102D                     	retlw	72	;'H'
  1379  102D  3448               	retlw	101	;'e'
  1380  102E  3465               	retlw	97	;'a'
  1381  102F  3461               	retlw	116	;'t'
  1382  1030  3474               	retlw	105	;'i'
  1383  1031  3469               	retlw	110	;'n'
  1384  1032  346E               	retlw	103	;'g'
  1385  1033  3467               	retlw	32	;' '
  1386  1034  3420               	retlw	79	;'O'
  1387  1035  344F               	retlw	102	;'f'
  1388  1036  3466               	retlw	102	;'f'
  1389  1037  3466               	retlw	0
  1390  1038  3400               psect	strings
  1391                           	
  1392                           STR_11:	
  1393  1039                     	retlw	84	;'T'
  1394  1039  3454               	retlw	114	;'r'
  1395  103A  3472               	retlw	105	;'i'
  1396  103B  3469               	retlw	103	;'g'
  1397  103C  3467               	retlw	103	;'g'
  1398  103D  3467               	retlw	101	;'e'
  1399  103E  3465               	retlw	114	;'r'
  1400  103F  3472               	retlw	32	;' '
  1401  1040  3420               	retlw	83	;'S'
  1402  1041  3453               	retlw	101	;'e'
  1403  1042  3465               	retlw	116	;'t'
  1404  1043  3474               	retlw	0
  1405  1044  3400               psect	strings
  1406                           	
  1407                           STR_16:	
  1408  1045                     	retlw	72	;'H'
  1409  1045  3448               	retlw	101	;'e'
  1410  1046  3465               	retlw	97	;'a'
  1411  1047  3461               	retlw	116	;'t'
  1412  1048  3474               	retlw	105	;'i'
  1413  1049  3469               	retlw	110	;'n'
  1414  104A  346E               	retlw	103	;'g'
  1415  104B  3467               	retlw	32	;' '
  1416  104C  3420               	retlw	79	;'O'
  1417  104D  344F               	retlw	110	;'n'
  1418  104E  346E               	retlw	0
  1419  104F  3400               psect	strings
  1420                           	
  1421                           STR_3:	
  1422  1050                     	retlw	87	;'W'
  1423  1050  3457               	retlw	101	;'e'
  1424  1051  3465               	retlw	100	;'d'
  1425  1052  3464               	retlw	110	;'n'
  1426  1053  346E               	retlw	101	;'e'
  1427  1054  3465               	retlw	115	;'s'
  1428  1055  3473               	retlw	100	;'d'
  1429  1056  3464               	retlw	97	;'a'
  1430  1057  3461               	retlw	121	;'y'
  1431  1058  3479               	retlw	0
  1432  1059  3400               psect	strings
  1433                           	
  1434                           STR_12:	
  1435  105A                     	retlw	72	;'H'
  1436  105A  3448               	retlw	101	;'e'
  1437  105B  3465               	retlw	97	;'a'
  1438  105C  3461               	retlw	116	;'t'
  1439  105D  3474               	retlw	105	;'i'
  1440  105E  3469               	retlw	110	;'n'
  1441  105F  346E               	retlw	103	;'g'
  1442  1060  3467               	retlw	58	;':'
  1443  1061  343A               	retlw	0
  1444  1062  3400               psect	strings
  1445                           	
  1446                           STR_10:	
  1447  1063                     	retlw	84	;'T'
  1448  1063  3454               	retlw	114	;'r'
  1449  1064  3472               	retlw	105	;'i'
  1450  1065  3469               	retlw	103	;'g'
  1451  1066  3467               	retlw	103	;'g'
  1452  1067  3467               	retlw	101	;'e'
  1453  1068  3465               	retlw	114	;'r'
  1454  1069  3472               	retlw	58	;':'
  1455  106A  343A               	retlw	0
  1456  106B  3400               psect	strings
  1457                           	
  1458                           STR_21:	
  1459  106C                     	retlw	84	;'T'
  1460  106C  3454               	retlw	105	;'i'
  1461  106D  3469               	retlw	109	;'m'
  1462  106E  346D               	retlw	101	;'e'
  1463  106F  3465               	retlw	32	;' '
  1464  1070  3420               	retlw	83	;'S'
  1465  1071  3453               	retlw	101	;'e'
  1466  1072  3465               	retlw	116	;'t'
  1467  1073  3474               	retlw	0
  1468  1074  3400               psect	strings
  1469                           	
  1470                           STR_6:	
  1471  1075                     	retlw	83	;'S'
  1472  1075  3453               	retlw	97	;'a'
  1473  1076  3461               	retlw	116	;'t'
  1474  1077  3474               	retlw	117	;'u'
  1475  1078  3475               	retlw	114	;'r'
  1476  1079  3472               	retlw	100	;'d'
  1477  107A  3464               	retlw	97	;'a'
  1478  107B  3461               	retlw	121	;'y'
  1479  107C  3479               	retlw	0
  1480  107D  3400               psect	strings
  1481                           	
  1482                           STR_4:	
  1483  107E                     	retlw	84	;'T'
  1484  107E  3454               	retlw	104	;'h'
  1485  107F  3468               	retlw	117	;'u'
  1486  1080  3475               	retlw	114	;'r'
  1487  1081  3472               	retlw	115	;'s'
  1488  1082  3473               	retlw	100	;'d'
  1489  1083  3464               	retlw	97	;'a'
  1490  1084  3461               	retlw	121	;'y'
  1491  1085  3479               	retlw	0
  1492  1086  3400               psect	strings
  1493                           	
  1494                           STR_2:	
  1495  1087                     	retlw	84	;'T'
  1496  1087  3454               	retlw	117	;'u'
  1497  1088  3475               	retlw	101	;'e'
  1498  1089  3465               	retlw	115	;'s'
  1499  108A  3473               	retlw	100	;'d'
  1500  108B  3464               	retlw	97	;'a'
  1501  108C  3461               	retlw	121	;'y'
  1502  108D  3479               	retlw	0
  1503  108E  3400               psect	strings
  1504                           	
  1505                           STR_18:	
  1506  108F                     	retlw	68	;'D'
  1507  108F  3444               	retlw	97	;'a'
  1508  1090  3461               	retlw	116	;'t'
  1509  1091  3474               	retlw	101	;'e'
  1510  1092  3465               	retlw	58	;':'
  1511  1093  343A               	retlw	32	;' '
  1512  1094  3420               	retlw	0
  1513  1095  3400               psect	strings
  1514                           	
  1515                           STR_5:	
  1516  1096                     	retlw	70	;'F'
  1517  1096  3446               	retlw	114	;'r'
  1518  1097  3472               	retlw	105	;'i'
  1519  1098  3469               	retlw	100	;'d'
  1520  1099  3464               	retlw	97	;'a'
  1521  109A  3461               	retlw	121	;'y'
  1522  109B  3479               	retlw	0
  1523  109C  3400               psect	strings
  1524                           	
  1525                           STR_1:	
  1526  109D                     	retlw	77	;'M'
  1527  109D  344D               	retlw	111	;'o'
  1528  109E  346F               	retlw	110	;'n'
  1529  109F  346E               	retlw	100	;'d'
  1530  10A0  3464               	retlw	97	;'a'
  1531  10A1  3461               	retlw	121	;'y'
  1532  10A2  3479               	retlw	0
  1533  10A3  3400               psect	strings
  1534                           	
  1535                           STR_7:	
  1536  10A4                     	retlw	83	;'S'
  1537  10A4  3453               	retlw	117	;'u'
  1538  10A5  3475               	retlw	110	;'n'
  1539  10A6  346E               	retlw	100	;'d'
  1540  10A7  3464               	retlw	97	;'a'
  1541  10A8  3461               	retlw	121	;'y'
  1542  10A9  3479               	retlw	0
  1543  10AA  3400               psect	strings
  1544                           	
  1545                           STR_19:	
  1546  10AB                     	retlw	68	;'D'
  1547  10AB  3444               	retlw	97	;'a'
  1548  10AC  3461               	retlw	121	;'y'
  1549  10AD  3479               	retlw	58	;':'
  1550  10AE  343A               	retlw	32	;' '
  1551  10AF  3420               	retlw	0
  1552  10B0  3400               psect	strings
  1553                           	
  1554                           STR_8:	
  1555  10B1                     	retlw	84	;'T'
  1556  10B1  3454               	retlw	105	;'i'
  1557  10B2  3469               	retlw	109	;'m'
  1558  10B3  346D               	retlw	101	;'e'
  1559  10B4  3465               	retlw	58	;':'
  1560  10B5  343A               	retlw	0
  1561  10B6  3400               psect	strings
  1562                           	
  1563                           STR_23:	
  1564  10B7                     	retlw	68	;'D'
  1565  10B7  3444               	retlw	97	;'a'
  1566  10B8  3461               	retlw	116	;'t'
  1567  10B9  3474               	retlw	101	;'e'
  1568  10BA  3465               	retlw	58	;':'
  1569  10BB  343A               	retlw	0
  1570  10BC  3400               psect	strings
  1571                           	
  1572                           STR_9:	
  1573  10BD                     	retlw	84	;'T'
  1574  10BD  3454               	retlw	101	;'e'
  1575  10BE  3465               	retlw	109	;'m'
  1576  10BF  346D               	retlw	112	;'p'
  1577  10C0  3470               	retlw	58	;':'
  1578  10C1  343A               	retlw	0
  1579  10C2  3400               psect	strings
  1580                           	
  1581                           STR_22:	
  1582  10C3                     	retlw	68	;'D'
  1583  10C3  3444               	retlw	97	;'a'
  1584  10C4  3461               	retlw	121	;'y'
  1585  10C5  3479               	retlw	58	;':'
  1586  10C6  343A               	retlw	0
  1587  10C7  3400               psect	strings
  1588                           	
  1589                           STR_27:	
  1590  10C8                     	retlw	87	;'W'
  1591  10C8  3457               	retlw	101	;'e'
  1592  10C9  3465               	retlw	100	;'d'
  1593  10CA  3464               	retlw	0
  1594  10CB  3400               psect	strings
  1595                           	
  1596                           STR_26:	
  1597  10CC                     	retlw	84	;'T'
  1598  10CC  3454               	retlw	117	;'u'
  1599  10CD  3475               	retlw	101	;'e'
  1600  10CE  3465               	retlw	0
  1601  10CF  3400               psect	strings
  1602                           	
  1603                           STR_29:	
  1604  10D0                     	retlw	70	;'F'
  1605  10D0  3446               	retlw	114	;'r'
  1606  10D1  3472               	retlw	105	;'i'
  1607  10D2  3469               	retlw	0
  1608  10D3  3400               psect	strings
  1609                           	
  1610                           STR_25:	
  1611  10D4                     	retlw	77	;'M'
  1612  10D4  344D               	retlw	111	;'o'
  1613  10D5  346F               	retlw	110	;'n'
  1614  10D6  346E               	retlw	0
  1615  10D7  3400               psect	strings
  1616                           	
  1617                           STR_31:	
  1618  10D8                     	retlw	83	;'S'
  1619  10D8  3453               	retlw	117	;'u'
  1620  10D9  3475               	retlw	110	;'n'
  1621  10DA  346E               	retlw	0
  1622  10DB  3400               psect	strings
  1623                           	
  1624                           STR_30:	
  1625  10DC                     	retlw	83	;'S'
  1626  10DC  3453               	retlw	97	;'a'
  1627  10DD  3461               	retlw	116	;'t'
  1628  10DE  3474               	retlw	0
  1629  10DF  3400               psect	strings
  1630                           	
  1631                           STR_28:	
  1632  10E0                     	retlw	84	;'T'
  1633  10E0  3454               	retlw	104	;'h'
  1634  10E1  3468               	retlw	117	;'u'
  1635  10E2  3475               	retlw	0
  1636  10E3  3400               psect	strings
  1637                           STR_13	equ	STR_16+8
  1638  104D                     STR_14	equ	STR_15+8
  1639  1035                     STR_20	equ	STR_8+0
  1640  10B1                     ; #config settings
  1641                           global __CFG_FOSC$HS
  1642                           __CFG_FOSC$HS equ 0x0
  1643  0000                     global __CFG_WDTE$OFF
  1644                           __CFG_WDTE$OFF equ 0x0
  1645  0000                     global __CFG_PWRTE$ON
  1646                           __CFG_PWRTE$ON equ 0x0
  1647  0000                     global __CFG_BOREN$OFF
  1648                           __CFG_BOREN$OFF equ 0x0
  1649  0000                     global __CFG_LVP$OFF
  1650                           __CFG_LVP$OFF equ 0x0
  1651  0000                     	file	"C:\Users\515817\AppData\Local\Temp\satg."
  1652                           	line	#
  1653                           psect cinit,class=CODE,delta=2
  1654                           global start_initialization
  1655                           start_initialization:
  1656  07B9                     
  1657                           global __initialization
  1658                           __initialization:
  1659  07B9                     psect	bssBANK0,class=BANK0,space=1,noexec
  1660                           global __pbssBANK0
  1661                           __pbssBANK0:
  1662  0056                     _TempBCD:
  1663  0056                            ds      2
  1664  0056                     
  1665                           _timeSecs:
  1666  0058                            ds      2
  1667  0058                     
  1668                           _timeMins:
  1669  005A                            ds      2
  1670  005A                     
  1671                           _timeHours:
  1672  005C                            ds      2
  1673  005C                     
  1674                           _is24Hour:
  1675  005E                            ds      2
  1676  005E                     
  1677                           _IsHeatingOn:
  1678  0060                            ds      2
  1679  0060                     
  1680                           Read_Byte@j:
  1681  0062                            ds      1
  1682  0062                     
  1683                           _hundredthbit:
  1684  0063                            ds      1
  1685  0063                     
  1686                           _tenthbit:
  1687  0064                            ds      1
  1688  0064                     
  1689                           _intent:
  1690  0065                            ds      1
  1691  0065                     
  1692                           _tenbit:
  1693  0066                            ds      1
  1694  0066                     
  1695                           _TempDec:
  1696  0067                            ds      1
  1697  0067                     
  1698                           _TempInt:
  1699  0068                            ds      1
  1700  0068                     
  1701                           _THB:
  1702  0069                            ds      1
  1703  0069                     
  1704                           _TLB:
  1705  006A                            ds      1
  1706  006A                     
  1707                           _timeBuffer:
  1708  006B                            ds      1
  1709  006B                     
  1710                           psect	dataBANK0,class=BANK0,space=1,noexec
  1711                           global __pdataBANK0
  1712                           __pdataBANK0:
  1713  006C                     	file	"main.c"
  1714                           	line	47
  1715                           _triggerTemp:
  1716  006C                            ds      4
  1717  006C                     
  1718                           psect	bssBANK1,class=BANK1,space=1,noexec
  1719                           global __pbssBANK1
  1720                           __pbssBANK1:
  1721  00DB                     _previousTemp:
  1722  00DB                            ds      6
  1723  00DB                     
  1724                           _Temp:
  1725  00E1                            ds      5
  1726  00E1                     
  1727                           _triggerTempChange:
  1728  00E6                            ds      4
  1729  00E6                     
  1730                           _isWeekDay:
  1731  00EA                            ds      2
  1732  00EA                     
  1733                           _day_of_week:
  1734  00EC                            ds      2
  1735  00EC                     
  1736                           _DisableAlarm:
  1737  00EE                            ds      2
  1738  00EE                     
  1739                           psect	dataBANK1,class=BANK1,space=1,noexec
  1740                           global __pdataBANK1
  1741                           __pdataBANK1:
  1742  00A0                     	file	"Thermometer.c"
  1743                           	line	23
  1744                           _numberTable:
  1745  00A0                            ds      10
  1746  00A0                     
  1747                           psect	dataBANK1
  1748                           	file	"main.c"
  1749                           	line	470
  1750                           SetTime@F993:
  1751  00AA                            ds      9
  1752  00AA                     
  1753                           psect	dataBANK1
  1754                           	file	"main.c"
  1755                           	line	42
  1756                           _dateDisplayer:
  1757  00B3                            ds      9
  1758  00B3                     
  1759                           psect	dataBANK1
  1760                           	file	"main.c"
  1761                           	line	35
  1762                           _weekEndEnd:
  1763  00BC                            ds      4
  1764  00BC                     
  1765                           psect	dataBANK1
  1766                           	file	"main.c"
  1767                           	line	34
  1768                           _weekEndStart:
  1769  00C0                            ds      4
  1770  00C0                     
  1771                           psect	dataBANK1
  1772                           	file	"main.c"
  1773                           	line	33
  1774                           _weekDayEnd:
  1775  00C4                            ds      4
  1776  00C4                     
  1777                           psect	dataBANK1
  1778                           	file	"main.c"
  1779                           	line	32
  1780                           _weekDayStart:
  1781  00C8                            ds      4
  1782  00C8                     
  1783                           psect	dataBANK1
  1784                           	file	"main.c"
  1785                           	line	40
  1786                           _timeDisplayer:
  1787  00CC                            ds      9
  1788  00CC                     
  1789                           psect	dataBANK1
  1790                           	file	"main.c"
  1791                           	line	38
  1792                           _tempBuffer:
  1793  00D5                            ds      6
  1794  00D5                     
  1795                           psect	bssBANK3,class=BANK3,space=1,noexec
  1796                           global __pbssBANK3
  1797                           __pbssBANK3:
  1798  01A0                     ___RealTimeClock_buff:
  1799  01A0                            ds      14
  1800  01A0                     
  1801                           psect	dataBANK3,class=BANK3,space=1,noexec
  1802                           global __pdataBANK3
  1803                           __pdataBANK3:
  1804  0190                     	file	"main.c"
  1805                           	line	51
  1806                           _start_date:
  1807  0190                            ds      16
  1808  0190                     
  1809                           	file	"C:\Users\515817\AppData\Local\Temp\satg."
  1810                           	line	#
  1811                           global btemp
  1812                           psect inittext,class=CODE,delta=2
  1813                           global init_fetch0,btemp
  1814                           ;	Called with low address in FSR and high address in W
  1815                           init_fetch0:
  1816  1E61                     	movf btemp,w
  1817  1E61  087E               	movwf pclath
  1818  1E62  008A               	movf btemp+1,w
  1819  1E63  087F               	movwf pc
  1820  1E64  0082               global init_ram0
  1821                           ;Called with:
  1822                           ;	high address of idata address in btemp 
  1823                           ;	low address of idata address in btemp+1 
  1824                           ;	low address of data in FSR
  1825                           ;	high address + 1 of data in btemp-1
  1826                           init_ram0:
  1827  1E65                     	fcall init_fetch0
  1828  1E65  160A  158A  2661  160A  158A  	movwf indf,f
  1829  1E6A  0080               	incf fsr,f
  1830  1E6B  0A84               	movf fsr,w
  1831  1E6C  0804               	xorwf btemp-1,w
  1832  1E6D  067D               	btfsc status,2
  1833  1E6E  1903               	retlw 0
  1834  1E6F  3400               	incf btemp+1,f
  1835  1E70  0AFF               	btfsc status,2
  1836  1E71  1903               	incf btemp,f
  1837  1E72  0AFE               	goto init_ram0
  1838  1E73  2E65               ; Initialize objects allocated to BANK3
  1839                           psect cinit,class=CODE,delta=2,merge=1
  1840                           global init_ram0, __pidataBANK3
  1841                           	bsf	status, 7	;select IRP bank2
  1842  07B9  1783               	movlw low(__pdataBANK3+16)
  1843  07BA  30A0               	movwf btemp-1,f
  1844  07BB  00FD               	movlw high(__pidataBANK3)
  1845  07BC  301E               	movwf btemp,f
  1846  07BD  00FE               	movlw low(__pidataBANK3)
  1847  07BE  3051               	movwf btemp+1,f
  1848  07BF  00FF               	movlw low(__pdataBANK3)
  1849  07C0  3090               	movwf fsr,f
  1850  07C1  0084               	fcall init_ram0
  1851  07C2  160A  158A  2665  120A  118A  ; Initialize objects allocated to BANK1
  1852                           psect cinit,class=CODE,delta=2,merge=1
  1853                           global init_ram0, __pidataBANK1
  1854                           	bcf	status, 7	;select IRP bank0
  1855  07C7  1383               	movlw low(__pdataBANK1+59)
  1856  07C8  30DB               	movwf btemp-1,f
  1857  07C9  00FD               	movlw high(__pidataBANK1)
  1858  07CA  3012               	movwf btemp,f
  1859  07CB  00FE               	movlw low(__pidataBANK1)
  1860  07CC  3028               	movwf btemp+1,f
  1861  07CD  00FF               	movlw low(__pdataBANK1)
  1862  07CE  30A0               	movwf fsr,f
  1863  07CF  0084               	fcall init_ram0
  1864  07D0  160A  158A  2665  120A  118A  ; Initialize objects allocated to BANK0
  1865                           psect cinit,class=CODE,delta=2,merge=1
  1866                           global init_ram0, __pidataBANK0
  1867                           	movlw low(__pdataBANK0+4)
  1868  07D5  3070               	movwf btemp-1,f
  1869  07D6  00FD               	movlw high(__pidataBANK0)
  1870  07D7  3000               	movwf btemp,f
  1871  07D8  00FE               	movlw low(__pidataBANK0)
  1872  07D9  3004               	movwf btemp+1,f
  1873  07DA  00FF               	movlw low(__pdataBANK0)
  1874  07DB  306C               	movwf fsr,f
  1875  07DC  0084               	fcall init_ram0
  1876  07DD  160A  158A  2665  120A  118A  	line	#
  1877                           psect clrtext,class=CODE,delta=2
  1878                           global clear_ram0
  1879                           ;	Called with FSR containing the base address, and
  1880                           ;	W with the last address+1
  1881                           clear_ram0:
  1882  0803                     	clrwdt			;clear the watchdog before getting into this loop
  1883  0803  0064               clrloop0:
  1884  0804                     	clrf	indf		;clear RAM location pointed to by FSR
  1885  0804  0180               	incf	fsr,f		;increment pointer
  1886  0805  0A84               	xorwf	fsr,w		;XOR with final address
  1887  0806  0604               	btfsc	status,2	;have we reached the end yet?
  1888  0807  1903               	retlw	0		;all done for this memory range, return
  1889  0808  3400               	xorwf	fsr,w		;XOR again to restore value
  1890  0809  0604               	goto	clrloop0		;do the next byte
  1891  080A  2804               
  1892                           ; Clear objects allocated to BANK3
  1893                           psect cinit,class=CODE,delta=2,merge=1
  1894                           	bsf	status, 7	;select IRP bank2
  1895  07E2  1783               	movlw	low(__pbssBANK3)
  1896  07E3  30A0               	movwf	fsr
  1897  07E4  0084               	movlw	low((__pbssBANK3)+0Eh)
  1898  07E5  30AE               	fcall	clear_ram0
  1899  07E6  120A  158A  2003  120A  118A  ; Clear objects allocated to BANK1
  1900                           psect cinit,class=CODE,delta=2,merge=1
  1901                           	bcf	status, 7	;select IRP bank0
  1902  07EB  1383               	movlw	low(__pbssBANK1)
  1903  07EC  30DB               	movwf	fsr
  1904  07ED  0084               	movlw	low((__pbssBANK1)+015h)
  1905  07EE  30F0               	fcall	clear_ram0
  1906  07EF  120A  158A  2003  120A  118A  ; Clear objects allocated to BANK0
  1907                           psect cinit,class=CODE,delta=2,merge=1
  1908                           	movlw	low(__pbssBANK0)
  1909  07F4  3056               	movwf	fsr
  1910  07F5  0084               	movlw	low((__pbssBANK0)+016h)
  1911  07F6  306C               	fcall	clear_ram0
  1912  07F7  120A  158A  2003  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1913                           global end_of_initialization,__end_of__initialization
  1914                           
  1915                           ;End of C runtime variable initialization code
  1916                           
  1917                           end_of_initialization:
  1918  07FC                     __end_of__initialization:
  1919  07FC                     clrf status
  1920  07FC  0183               ljmp _main	;jump to C main() function
  1921  07FD  120A  118A  2AAC   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1922                           global __pcstackCOMMON
  1923                           __pcstackCOMMON:
  1924  0070                     ?_Get_Temp:	; 1 bytes @ 0x0
  1925  0070                     ?_LCD_SendData:	; 1 bytes @ 0x0
  1926  0070                     ??_LCD_SendData:	; 1 bytes @ 0x0
  1927  0070                     ?_LCD_Busy:	; 1 bytes @ 0x0
  1928  0070                     ??_LCD_Busy:	; 1 bytes @ 0x0
  1929  0070                     ?_LCD_SecondLine:	; 1 bytes @ 0x0
  1930  0070                     ?_LCD_Command:	; 1 bytes @ 0x0
  1931  0070                     ??_LCD_Command:	; 1 bytes @ 0x0
  1932  0070                     ?_SoundOff:	; 1 bytes @ 0x0
  1933  0070                     ??_SoundOff:	; 1 bytes @ 0x0
  1934  0070                     ?_SoundOn:	; 1 bytes @ 0x0
  1935  0070                     ??_SoundOn:	; 1 bytes @ 0x0
  1936  0070                     ?_LCD_Init:	; 1 bytes @ 0x0
  1937  0070                     ??_LCD_Init:	; 1 bytes @ 0x0
  1938  0070                     ?_Init_Keypad:	; 1 bytes @ 0x0
  1939  0070                     ??_Init_Keypad:	; 1 bytes @ 0x0
  1940  0070                     ?_Thermometer_Init:	; 1 bytes @ 0x0
  1941  0070                     ??_Thermometer_Init:	; 1 bytes @ 0x0
  1942  0070                     ?_RealTimeClock_init:	; 1 bytes @ 0x0
  1943  0070                     ?_Buzzer_Init:	; 1 bytes @ 0x0
  1944  0070                     ??_Buzzer_Init:	; 1 bytes @ 0x0
  1945  0070                     ?_Main_Delay:	; 1 bytes @ 0x0
  1946  0070                     ?_DisplayTime:	; 1 bytes @ 0x0
  1947  0070                     ?_DisplayDate:	; 1 bytes @ 0x0
  1948  0070                     ?_DisplayDay:	; 1 bytes @ 0x0
  1949  0070                     ?_DisplayTemp:	; 1 bytes @ 0x0
  1950  0070                     ?_MainScreen:	; 1 bytes @ 0x0
  1951  0070                     ?_ChangeTrigger:	; 1 bytes @ 0x0
  1952  0070                     ?_CheckDay:	; 1 bytes @ 0x0
  1953  0070                     ??_CheckDay:	; 1 bytes @ 0x0
  1954  0070                     ?_CheckTime:	; 1 bytes @ 0x0
  1955  0070                     ?_main:	; 1 bytes @ 0x0
  1956  0070                     ?_RealTimeClock_write_byte:	; 1 bytes @ 0x0
  1957  0070                     ??_RealTimeClock_write_byte:	; 1 bytes @ 0x0
  1958  0070                     ?_RealTimeClock_read_byte:	; 1 bytes @ 0x0
  1959  0070                     ??_RealTimeClock_read_byte:	; 1 bytes @ 0x0
  1960  0070                     ?_Key_Delay:	; 1 bytes @ 0x0
  1961  0070                     ?_Delay:	; 1 bytes @ 0x0
  1962  0070                     ?_Reset:	; 1 bytes @ 0x0
  1963  0070                     ?_Write_Byte:	; 1 bytes @ 0x0
  1964  0070                     ?_Read_Byte:	; 1 bytes @ 0x0
  1965  0070                     	global	?___wmul
  1966                           ?___wmul:	; 2 bytes @ 0x0
  1967  0070                     	global	?___awdiv
  1968                           ?___awdiv:	; 2 bytes @ 0x0
  1969  0070                     	global	?___awmod
  1970                           ?___awmod:	; 2 bytes @ 0x0
  1971  0070                     	global	?___lwmod
  1972                           ?___lwmod:	; 2 bytes @ 0x0
  1973  0070                     	global	LCD_Command@c
  1974                           LCD_Command@c:	; 1 bytes @ 0x0
  1975  0070                     	global	LCD_SendData@c
  1976                           LCD_SendData@c:	; 1 bytes @ 0x0
  1977  0070                     	global	Delay@y
  1978                           Delay@y:	; 1 bytes @ 0x0
  1979  0070                     	global	Main_Delay@k
  1980                           Main_Delay@k:	; 2 bytes @ 0x0
  1981  0070                     	global	Key_Delay@k
  1982                           Key_Delay@k:	; 2 bytes @ 0x0
  1983  0070                     	global	___wmul@multiplier
  1984                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1985  0070                     	global	___awdiv@divisor
  1986                           ___awdiv@divisor:	; 2 bytes @ 0x0
  1987  0070                     	global	___awmod@divisor
  1988                           ___awmod@divisor:	; 2 bytes @ 0x0
  1989  0070                     	global	___lwmod@divisor
  1990                           ___lwmod@divisor:	; 2 bytes @ 0x0
  1991  0070                     	ds	1
  1992  0070                     ?_LCD_SendString:	; 1 bytes @ 0x1
  1993  0071                     ??_LCD_SecondLine:	; 1 bytes @ 0x1
  1994  0071                     ??_Delay:	; 1 bytes @ 0x1
  1995  0071                     	global	LCD_SendString@string
  1996                           LCD_SendString@string:	; 2 bytes @ 0x1
  1997  0071                     	ds	1
  1998  0071                     ??_Main_Delay:	; 1 bytes @ 0x2
  1999  0072                     ??_Key_Delay:	; 1 bytes @ 0x2
  2000  0072                     	global	RealTimeClock_read_byte@time_rx
  2001                           RealTimeClock_read_byte@time_rx:	; 1 bytes @ 0x2
  2002  0072                     	global	Delay@x
  2003                           Delay@x:	; 1 bytes @ 0x2
  2004  0072                     	global	RealTimeClock_write_byte@i
  2005                           RealTimeClock_write_byte@i:	; 2 bytes @ 0x2
  2006  0072                     	global	Key_Delay@i
  2007                           Key_Delay@i:	; 2 bytes @ 0x2
  2008  0072                     	global	___wmul@multiplicand
  2009                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2010  0072                     	global	___awdiv@dividend
  2011                           ___awdiv@dividend:	; 2 bytes @ 0x2
  2012  0072                     	global	___awmod@dividend
  2013                           ___awmod@dividend:	; 2 bytes @ 0x2
  2014  0072                     	global	___lwmod@dividend
  2015                           ___lwmod@dividend:	; 2 bytes @ 0x2
  2016  0072                     	ds	1
  2017  0072                     ??_LCD_SendString:	; 1 bytes @ 0x3
  2018  0073                     	global	Delay@z
  2019                           Delay@z:	; 1 bytes @ 0x3
  2020  0073                     	global	Main_Delay@i
  2021                           Main_Delay@i:	; 2 bytes @ 0x3
  2022  0073                     	global	RealTimeClock_read_byte@i
  2023                           RealTimeClock_read_byte@i:	; 2 bytes @ 0x3
  2024  0073                     	ds	1
  2025  0073                     ??_Reset:	; 1 bytes @ 0x4
  2026  0074                     ??_Write_Byte:	; 1 bytes @ 0x4
  2027  0074                     ??_Read_Byte:	; 1 bytes @ 0x4
  2028  0074                     ??___wmul:	; 1 bytes @ 0x4
  2029  0074                     ??___awdiv:	; 1 bytes @ 0x4
  2030  0074                     ??___awmod:	; 1 bytes @ 0x4
  2031  0074                     ??___lwmod:	; 1 bytes @ 0x4
  2032  0074                     	global	RealTimeClock_write_byte@time_tx
  2033                           RealTimeClock_write_byte@time_tx:	; 1 bytes @ 0x4
  2034  0074                     	global	Key_Delay@j
  2035                           Key_Delay@j:	; 2 bytes @ 0x4
  2036  0074                     	global	___wmul@product
  2037                           ___wmul@product:	; 2 bytes @ 0x4
  2038  0074                     	ds	1
  2039  0074                     ??_RealTimeClock_init:	; 1 bytes @ 0x5
  2040  0075                     	global	Read_Byte@value
  2041                           Read_Byte@value:	; 1 bytes @ 0x5
  2042  0075                     	global	___awdiv@counter
  2043                           ___awdiv@counter:	; 1 bytes @ 0x5
  2044  0075                     	global	___awmod@counter
  2045                           ___awmod@counter:	; 1 bytes @ 0x5
  2046  0075                     	global	___lwmod@counter
  2047                           ___lwmod@counter:	; 1 bytes @ 0x5
  2048  0075                     	global	Main_Delay@j
  2049                           Main_Delay@j:	; 2 bytes @ 0x5
  2050  0075                     	global	Reset@i
  2051                           Reset@i:	; 2 bytes @ 0x5
  2052  0075                     	ds	1
  2053  0075                     	global	?_Keypad_Scan
  2054                           ?_Keypad_Scan:	; 2 bytes @ 0x6
  2055  0076                     	global	?___lwdiv
  2056                           ?___lwdiv:	; 2 bytes @ 0x6
  2057  0076                     	global	Write_Byte@temp
  2058                           Write_Byte@temp:	; 1 bytes @ 0x6
  2059  0076                     	global	Read_Byte@i
  2060                           Read_Byte@i:	; 1 bytes @ 0x6
  2061  0076                     	global	___awdiv@sign
  2062                           ___awdiv@sign:	; 1 bytes @ 0x6
  2063  0076                     	global	___awmod@sign
  2064                           ___awmod@sign:	; 1 bytes @ 0x6
  2065  0076                     	global	LCD_SendString@i
  2066                           LCD_SendString@i:	; 2 bytes @ 0x6
  2067  0076                     	global	___lwdiv@divisor
  2068                           ___lwdiv@divisor:	; 2 bytes @ 0x6
  2069  0076                     	ds	1
  2070  0076                     ?_Switch24Hour:	; 1 bytes @ 0x7
  2071  0077                     ?___int_to_hex:	; 1 bytes @ 0x7
  2072  0077                     	global	?___hex_to_int
  2073                           ?___hex_to_int:	; 2 bytes @ 0x7
  2074  0077                     	global	Write_Byte@val
  2075                           Write_Byte@val:	; 1 bytes @ 0x7
  2076  0077                     	global	Switch24Hour@Key
  2077                           Switch24Hour@Key:	; 2 bytes @ 0x7
  2078  0077                     	global	___int_to_hex@integer
  2079                           ___int_to_hex@integer:	; 2 bytes @ 0x7
  2080  0077                     	global	___awdiv@quotient
  2081                           ___awdiv@quotient:	; 2 bytes @ 0x7
  2082  0077                     	ds	1
  2083  0077                     ??_Keypad_Scan:	; 1 bytes @ 0x8
  2084  0078                     ?_SwapToHeatingDisplay:	; 1 bytes @ 0x8
  2085  0078                     	global	Write_Byte@i
  2086                           Write_Byte@i:	; 1 bytes @ 0x8
  2087  0078                     	global	SwapToHeatingDisplay@Key
  2088                           SwapToHeatingDisplay@Key:	; 2 bytes @ 0x8
  2089  0078                     	global	___lwdiv@dividend
  2090                           ___lwdiv@dividend:	; 2 bytes @ 0x8
  2091  0078                     	ds	1
  2092  0078                     ??_Switch24Hour:	; 1 bytes @ 0x9
  2093  0079                     ??___hex_to_int:	; 1 bytes @ 0x9
  2094  0079                     ??___int_to_hex:	; 1 bytes @ 0x9
  2095  0079                     	ds	1
  2096  0079                     ??_RealTimeClock_get_seconds:	; 1 bytes @ 0xA
  2097  007A                     ??_RealTimeClock_get_minutes:	; 1 bytes @ 0xA
  2098  007A                     ??_RealTimeClock_get_hours:	; 1 bytes @ 0xA
  2099  007A                     ??_RealTimeClock_get_month:	; 1 bytes @ 0xA
  2100  007A                     ??_RealTimeClock_get_day_of_month:	; 1 bytes @ 0xA
  2101  007A                     ??_RealTimeClock_get_year:	; 1 bytes @ 0xA
  2102  007A                     ??_RealTimeClock_get_day_of_week:	; 1 bytes @ 0xA
  2103  007A                     ??_SwapToHeatingDisplay:	; 1 bytes @ 0xA
  2104  007A                     ??___lwdiv:	; 1 bytes @ 0xA
  2105  007A                     	global	Switch24Hour@c
  2106                           Switch24Hour@c:	; 1 bytes @ 0xA
  2107  007A                     	global	___int_to_hex@t
  2108                           ___int_to_hex@t:	; 2 bytes @ 0xA
  2109  007A                     	ds	1
  2110  007A                     	global	SwapToHeatingDisplay@Heat
  2111                           SwapToHeatingDisplay@Heat:	; 1 bytes @ 0xB
  2112  007B                     	global	RealTimeClock_get_seconds@c
  2113                           RealTimeClock_get_seconds@c:	; 1 bytes @ 0xB
  2114  007B                     	global	RealTimeClock_get_minutes@c
  2115                           RealTimeClock_get_minutes@c:	; 1 bytes @ 0xB
  2116  007B                     	global	RealTimeClock_get_hours@c
  2117                           RealTimeClock_get_hours@c:	; 1 bytes @ 0xB
  2118  007B                     	global	RealTimeClock_get_day_of_month@c
  2119                           RealTimeClock_get_day_of_month@c:	; 1 bytes @ 0xB
  2120  007B                     	global	RealTimeClock_get_month@c
  2121                           RealTimeClock_get_month@c:	; 1 bytes @ 0xB
  2122  007B                     	global	RealTimeClock_get_day_of_week@c
  2123                           RealTimeClock_get_day_of_week@c:	; 1 bytes @ 0xB
  2124  007B                     	global	RealTimeClock_get_year@c
  2125                           RealTimeClock_get_year@c:	; 1 bytes @ 0xB
  2126  007B                     	global	___lwdiv@quotient
  2127                           ___lwdiv@quotient:	; 2 bytes @ 0xB
  2128  007B                     	ds	1
  2129  007B                     ??_DisplayTime:	; 1 bytes @ 0xC
  2130  007C                     ??_DisplayDate:	; 1 bytes @ 0xC
  2131  007C                     ??_DisplayDay:	; 1 bytes @ 0xC
  2132  007C                     ??_CheckTime:	; 1 bytes @ 0xC
  2133  007C                     	global	SwapToHeatingDisplay@On
  2134                           SwapToHeatingDisplay@On:	; 1 bytes @ 0xC
  2135  007C                     	global	___int_to_hex@i
  2136                           ___int_to_hex@i:	; 2 bytes @ 0xC
  2137  007C                     	ds	1
  2138  007C                     	global	SwapToHeatingDisplay@Off
  2139                           SwapToHeatingDisplay@Off:	; 1 bytes @ 0xD
  2140  007D                     	global	___lwdiv@counter
  2141                           ___lwdiv@counter:	; 1 bytes @ 0xD
  2142  007D                     	ds	1
  2143  007D                     ??_RealTimeClock_set_hours:	; 1 bytes @ 0xE
  2144  007E                     ??_RealTimeClock_set_minutes:	; 1 bytes @ 0xE
  2145  007E                     ??_RealTimeClock_set_seconds:	; 1 bytes @ 0xE
  2146  007E                     ??_RealTimeClock_set_day_of_week:	; 1 bytes @ 0xE
  2147  007E                     ??_DisplayTemp:	; 1 bytes @ 0xE
  2148  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2149                           global __pcstackBANK0
  2150                           __pcstackBANK0:
  2151  0020                     ??_Get_Temp:	; 1 bytes @ 0x0
  2152  0020                     ?_RealTimeClock_set_hours:	; 1 bytes @ 0x0
  2153  0020                     ?_RealTimeClock_set_minutes:	; 1 bytes @ 0x0
  2154  0020                     ?_RealTimeClock_set_seconds:	; 1 bytes @ 0x0
  2155  0020                     ?_RealTimeClock_set_day_of_week:	; 1 bytes @ 0x0
  2156  0020                     ??_ChangeTrigger:	; 1 bytes @ 0x0
  2157  0020                     	global	___hex_to_int@hex
  2158                           ___hex_to_int@hex:	; 1 bytes @ 0x0
  2159  0020                     	global	RealTimeClock_set_seconds@seconds
  2160                           RealTimeClock_set_seconds@seconds:	; 2 bytes @ 0x0
  2161  0020                     	global	RealTimeClock_set_minutes@minutes
  2162                           RealTimeClock_set_minutes@minutes:	; 2 bytes @ 0x0
  2163  0020                     	global	RealTimeClock_set_hours@hours
  2164                           RealTimeClock_set_hours@hours:	; 2 bytes @ 0x0
  2165  0020                     	global	RealTimeClock_set_day_of_week@day
  2166                           RealTimeClock_set_day_of_week@day:	; 2 bytes @ 0x0
  2167  0020                     	ds	1
  2168  0020                     	global	___hex_to_int@i
  2169                           ___hex_to_int@i:	; 2 bytes @ 0x1
  2170  0021                     	ds	2
  2171  0021                     	global	___hex_to_int@t
  2172                           ___hex_to_int@t:	; 2 bytes @ 0x3
  2173  0023                     	ds	1
  2174  0023                     	global	Get_Temp@buffer
  2175                           Get_Temp@buffer:	; 1 bytes @ 0x4
  2176  0024                     	ds	1
  2177  0024                     	global	?_RealTimeClock_get_seconds
  2178                           ?_RealTimeClock_get_seconds:	; 2 bytes @ 0x5
  2179  0025                     	global	?_RealTimeClock_get_minutes
  2180                           ?_RealTimeClock_get_minutes:	; 2 bytes @ 0x5
  2181  0025                     	global	?_RealTimeClock_get_hours
  2182                           ?_RealTimeClock_get_hours:	; 2 bytes @ 0x5
  2183  0025                     	global	?_RealTimeClock_get_month
  2184                           ?_RealTimeClock_get_month:	; 2 bytes @ 0x5
  2185  0025                     	global	?_RealTimeClock_get_day_of_month
  2186                           ?_RealTimeClock_get_day_of_month:	; 2 bytes @ 0x5
  2187  0025                     	global	?_RealTimeClock_get_year
  2188                           ?_RealTimeClock_get_year:	; 2 bytes @ 0x5
  2189  0025                     	global	?_RealTimeClock_get_day_of_week
  2190                           ?_RealTimeClock_get_day_of_week:	; 2 bytes @ 0x5
  2191  0025                     	global	Get_Temp@i
  2192                           Get_Temp@i:	; 2 bytes @ 0x5
  2193  0025                     	ds	1
  2194  0025                     	global	ChangeTrigger@digits
  2195                           ChangeTrigger@digits:	; 3 bytes @ 0x6
  2196  0026                     	ds	1
  2197  0026                     ?_SetTime:	; 1 bytes @ 0x7
  2198  0027                     ?_SetDate:	; 1 bytes @ 0x7
  2199  0027                     	global	DisplayDay@Monday
  2200                           DisplayDay@Monday:	; 1 bytes @ 0x7
  2201  0027                     	global	DisplayTemp@tempBuffer
  2202                           DisplayTemp@tempBuffer:	; 1 bytes @ 0x7
  2203  0027                     	global	DisplayDate@month
  2204                           DisplayDate@month:	; 2 bytes @ 0x7
  2205  0027                     	global	SetTime@Key
  2206                           SetTime@Key:	; 2 bytes @ 0x7
  2207  0027                     	global	SetDate@Key
  2208                           SetDate@Key:	; 2 bytes @ 0x7
  2209  0027                     	ds	1
  2210  0027                     ??_MainScreen:	; 1 bytes @ 0x8
  2211  0028                     	global	DisplayDay@Tuesday
  2212                           DisplayDay@Tuesday:	; 1 bytes @ 0x8
  2213  0028                     	ds	1
  2214  0028                     ??_SetTime:	; 1 bytes @ 0x9
  2215  0029                     ??_SetDate:	; 1 bytes @ 0x9
  2216  0029                     	global	DisplayDay@Wednesday
  2217                           DisplayDay@Wednesday:	; 1 bytes @ 0x9
  2218  0029                     	global	MainScreen@Time
  2219                           MainScreen@Time:	; 1 bytes @ 0x9
  2220  0029                     	global	ChangeTrigger@Trigger
  2221                           ChangeTrigger@Trigger:	; 1 bytes @ 0x9
  2222  0029                     	global	DisplayDate@day
  2223                           DisplayDate@day:	; 2 bytes @ 0x9
  2224  0029                     	ds	1
  2225  0029                     	global	DisplayDay@Thursday
  2226                           DisplayDay@Thursday:	; 1 bytes @ 0xA
  2227  002A                     	global	MainScreen@Temp
  2228                           MainScreen@Temp:	; 1 bytes @ 0xA
  2229  002A                     	global	ChangeTrigger@TriggerSet
  2230                           ChangeTrigger@TriggerSet:	; 1 bytes @ 0xA
  2231  002A                     	global	SetDate@Day
  2232                           SetDate@Day:	; 1 bytes @ 0xA
  2233  002A                     	ds	1
  2234  002A                     	global	DisplayDay@Friday
  2235                           DisplayDay@Friday:	; 1 bytes @ 0xB
  2236  002B                     	global	ChangeTrigger@decimal
  2237                           ChangeTrigger@decimal:	; 1 bytes @ 0xB
  2238  002B                     	global	SetDate@Date
  2239                           SetDate@Date:	; 1 bytes @ 0xB
  2240  002B                     	global	DisplayDate@year
  2241                           DisplayDate@year:	; 2 bytes @ 0xB
  2242  002B                     	ds	1
  2243  002B                     	global	DisplayDay@Saturday
  2244                           DisplayDay@Saturday:	; 1 bytes @ 0xC
  2245  002C                     	global	ChangeTrigger@Key
  2246                           ChangeTrigger@Key:	; 1 bytes @ 0xC
  2247  002C                     	global	SetDate@DateSet
  2248                           SetDate@DateSet:	; 1 bytes @ 0xC
  2249  002C                     	ds	1
  2250  002C                     	global	DisplayDay@Sunday
  2251                           DisplayDay@Sunday:	; 1 bytes @ 0xD
  2252  002D                     	global	SetDate@Monday
  2253                           SetDate@Monday:	; 1 bytes @ 0xD
  2254  002D                     	global	ChangeTrigger@i_194
  2255                           ChangeTrigger@i_194:	; 2 bytes @ 0xD
  2256  002D                     	ds	1
  2257  002D                     	global	SetDate@Tuesday
  2258                           SetDate@Tuesday:	; 1 bytes @ 0xE
  2259  002E                     	ds	1
  2260  002E                     	global	SetDate@Wednesday
  2261                           SetDate@Wednesday:	; 1 bytes @ 0xF
  2262  002F                     	global	ChangeTrigger@i
  2263                           ChangeTrigger@i:	; 2 bytes @ 0xF
  2264  002F                     	global	SetTime@digits
  2265                           SetTime@digits:	; 9 bytes @ 0xF
  2266  002F                     	ds	1
  2267  002F                     	global	SetDate@Thursday
  2268                           SetDate@Thursday:	; 1 bytes @ 0x10
  2269  0030                     	ds	1
  2270  0030                     ?_HeatingControlOff:	; 1 bytes @ 0x11
  2271  0031                     ?_DateDayScreen:	; 1 bytes @ 0x11
  2272  0031                     	global	SetDate@Friday
  2273                           SetDate@Friday:	; 1 bytes @ 0x11
  2274  0031                     	global	HeatingControlOff@Key
  2275                           HeatingControlOff@Key:	; 2 bytes @ 0x11
  2276  0031                     	global	DateDayScreen@Key
  2277                           DateDayScreen@Key:	; 2 bytes @ 0x11
  2278  0031                     	ds	1
  2279  0031                     	global	SetDate@Saturday
  2280                           SetDate@Saturday:	; 1 bytes @ 0x12
  2281  0032                     	ds	1
  2282  0032                     ??_DateDayScreen:	; 1 bytes @ 0x13
  2283  0033                     	global	SetDate@Sunday
  2284                           SetDate@Sunday:	; 1 bytes @ 0x13
  2285  0033                     	global	HeatingControlOff@temp
  2286                           HeatingControlOff@temp:	; 2 bytes @ 0x13
  2287  0033                     	ds	1
  2288  0033                     	global	DateDayScreen@date
  2289                           DateDayScreen@date:	; 1 bytes @ 0x14
  2290  0034                     	global	SetDate@i
  2291                           SetDate@i:	; 2 bytes @ 0x14
  2292  0034                     	ds	1
  2293  0034                     	global	DateDayScreen@day
  2294                           DateDayScreen@day:	; 1 bytes @ 0x15
  2295  0035                     	global	HeatingControlOff@temp2
  2296                           HeatingControlOff@temp2:	; 2 bytes @ 0x15
  2297  0035                     	ds	1
  2298  0035                     	global	SetDate@dayInt
  2299                           SetDate@dayInt:	; 2 bytes @ 0x16
  2300  0036                     	ds	1
  2301  0036                     	global	HeatingControlOff@temp3
  2302                           HeatingControlOff@temp3:	; 2 bytes @ 0x17
  2303  0037                     	ds	1
  2304  0037                     	global	SetTime@Time
  2305                           SetTime@Time:	; 1 bytes @ 0x18
  2306  0038                     	ds	1
  2307  0038                     ??_HeatingControlOff:	; 1 bytes @ 0x19
  2308  0039                     	global	SetTime@TimeSet
  2309                           SetTime@TimeSet:	; 1 bytes @ 0x19
  2310  0039                     	ds	1
  2311  0039                     	global	HeatingControlOff@Off
  2312                           HeatingControlOff@Off:	; 1 bytes @ 0x1A
  2313  003A                     	global	SetTime@hour
  2314                           SetTime@hour:	; 2 bytes @ 0x1A
  2315  003A                     	ds	1
  2316  003A                     	global	HeatingControlOff@On
  2317                           HeatingControlOff@On:	; 1 bytes @ 0x1B
  2318  003B                     	ds	1
  2319  003B                     ?_SoundAlarm:	; 1 bytes @ 0x1C
  2320  003C                     	global	SoundAlarm@Key
  2321                           SoundAlarm@Key:	; 2 bytes @ 0x1C
  2322  003C                     	global	SetTime@min
  2323                           SetTime@min:	; 2 bytes @ 0x1C
  2324  003C                     	ds	2
  2325  003C                     	global	SoundAlarm@temp
  2326                           SoundAlarm@temp:	; 2 bytes @ 0x1E
  2327  003E                     	global	SetTime@sec
  2328                           SetTime@sec:	; 2 bytes @ 0x1E
  2329  003E                     	ds	2
  2330  003E                     	global	SoundAlarm@temp2
  2331                           SoundAlarm@temp2:	; 2 bytes @ 0x20
  2332  0040                     	global	SetTime@setTime
  2333                           SetTime@setTime:	; 6 bytes @ 0x20
  2334  0040                     	ds	2
  2335  0040                     	global	SoundAlarm@temp3
  2336                           SoundAlarm@temp3:	; 2 bytes @ 0x22
  2337  0042                     	ds	2
  2338  0042                     ??_SoundAlarm:	; 1 bytes @ 0x24
  2339  0044                     	ds	1
  2340  0044                     	global	SoundAlarm@Alarm
  2341                           SoundAlarm@Alarm:	; 1 bytes @ 0x25
  2342  0045                     	ds	1
  2343  0045                     	global	SetTime@i
  2344                           SetTime@i:	; 2 bytes @ 0x26
  2345  0046                     	ds	2
  2346  0046                     ??_main:	; 1 bytes @ 0x28
  2347  0048                     	ds	2
  2348  0048                     	global	main@tempdec
  2349                           main@tempdec:	; 2 bytes @ 0x2A
  2350  004A                     	ds	2
  2351  004A                     	global	main@tempdectenth
  2352                           main@tempdectenth:	; 2 bytes @ 0x2C
  2353  004C                     	ds	2
  2354  004C                     	global	main@temp
  2355                           main@temp:	; 2 bytes @ 0x2E
  2356  004E                     	ds	2
  2357  004E                     	global	main@temp2
  2358                           main@temp2:	; 2 bytes @ 0x30
  2359  0050                     	ds	2
  2360  0050                     	global	main@temp3
  2361                           main@temp3:	; 2 bytes @ 0x32
  2362  0052                     	ds	2
  2363  0052                     	global	main@Key
  2364                           main@Key:	; 2 bytes @ 0x34
  2365  0054                     	ds	2
  2366  0054                     ;!
  2367                           ;!Data Sizes:
  2368                           ;!    Strings     212
  2369                           ;!    Constant    0
  2370                           ;!    Data        79
  2371                           ;!    BSS         57
  2372                           ;!    Persistent  0
  2373                           ;!    Stack       0
  2374                           ;!
  2375                           ;!Auto Spaces:
  2376                           ;!    Space          Size  Autos    Used
  2377                           ;!    COMMON           14     14      14
  2378                           ;!    BANK0            80     54      80
  2379                           ;!    BANK1            80      0      80
  2380                           ;!    BANK3            96      0      30
  2381                           ;!    BANK2            96      0       0
  2382                           
  2383                           ;!
  2384                           ;!Pointer List with Targets:
  2385                           ;!
  2386                           ;!    timeBuffer	PTR int  size(1) Largest target is 0
  2387                           ;!		 -> NULL(NULL[0]), 
  2388                           ;!
  2389                           ;!    Get_Temp@buffer	PTR unsigned char  size(1) Largest target is 6
  2390                           ;!		 -> tempBuffer(BANK1[6]), 
  2391                           ;!
  2392                           ;!    LCD_SendString@string	PTR const unsigned char  size(2) Largest target is 16
  2393                           ;!		 -> STR_31(CODE[4]), STR_30(CODE[4]), STR_29(CODE[4]), STR_28(CODE[4]), 
  2394                           ;!		 -> STR_27(CODE[4]), STR_26(CODE[4]), STR_25(CODE[4]), STR_24(CODE[13]), 
  2395                           ;!		 -> STR_23(CODE[6]), STR_22(CODE[5]), SetTime@digits(BANK0[9]), STR_21(CODE[9]), 
  2396                           ;!		 -> STR_20(CODE[6]), STR_19(CODE[6]), STR_18(CODE[7]), STR_17(CODE[16]), 
  2397                           ;!		 -> STR_16(CODE[11]), STR_15(CODE[12]), STR_14(CODE[4]), STR_13(CODE[3]), 
  2398                           ;!		 -> STR_12(CODE[9]), ChangeTrigger@digits(BANK0[3]), STR_11(CODE[12]), STR_10(CODE[9
                                 ]), 
  2399                           ;!		 -> tempBuffer(BANK1[6]), STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[7]), 
  2400                           ;!		 -> STR_6(CODE[9]), STR_5(CODE[7]), STR_4(CODE[9]), STR_3(CODE[10]), 
  2401                           ;!		 -> STR_2(CODE[8]), STR_1(CODE[7]), timeDisplayer(BANK1[9]), 
  2402                           ;!
  2403                           ;!    sp__RealTimeClock_get_burst_time	PTR int  size(1) Largest target is 14
  2404                           ;!		 -> __RealTimeClock_buff(BANK3[14]), 
  2405                           ;!
  2406                           ;!    SetDate@Sunday	PTR unsigned char  size(1) Largest target is 4
  2407                           ;!		 -> STR_31(CODE[4]), 
  2408                           ;!
  2409                           ;!    SetDate@Saturday	PTR unsigned char  size(1) Largest target is 4
  2410                           ;!		 -> STR_30(CODE[4]), 
  2411                           ;!
  2412                           ;!    SetDate@Friday	PTR unsigned char  size(1) Largest target is 4
  2413                           ;!		 -> STR_29(CODE[4]), 
  2414                           ;!
  2415                           ;!    SetDate@Thursday	PTR unsigned char  size(1) Largest target is 4
  2416                           ;!		 -> STR_28(CODE[4]), 
  2417                           ;!
  2418                           ;!    SetDate@Wednesday	PTR unsigned char  size(1) Largest target is 4
  2419                           ;!		 -> STR_27(CODE[4]), 
  2420                           ;!
  2421                           ;!    SetDate@Tuesday	PTR unsigned char  size(1) Largest target is 4
  2422                           ;!		 -> STR_26(CODE[4]), 
  2423                           ;!
  2424                           ;!    SetDate@Monday	PTR unsigned char  size(1) Largest target is 4
  2425                           ;!		 -> STR_25(CODE[4]), 
  2426                           ;!
  2427                           ;!    SetDate@DateSet	PTR unsigned char  size(1) Largest target is 13
  2428                           ;!		 -> STR_24(CODE[13]), 
  2429                           ;!
  2430                           ;!    SetDate@Date	PTR unsigned char  size(1) Largest target is 6
  2431                           ;!		 -> STR_23(CODE[6]), 
  2432                           ;!
  2433                           ;!    SetDate@Day	PTR unsigned char  size(1) Largest target is 5
  2434                           ;!		 -> STR_22(CODE[5]), 
  2435                           ;!
  2436                           ;!    SetTime@TimeSet	PTR unsigned char  size(1) Largest target is 9
  2437                           ;!		 -> STR_21(CODE[9]), 
  2438                           ;!
  2439                           ;!    SetTime@Time	PTR unsigned char  size(1) Largest target is 6
  2440                           ;!		 -> STR_20(CODE[6]), 
  2441                           ;!
  2442                           ;!    DateDayScreen@day	PTR unsigned char  size(1) Largest target is 6
  2443                           ;!		 -> STR_19(CODE[6]), 
  2444                           ;!
  2445                           ;!    DateDayScreen@date	PTR unsigned char  size(1) Largest target is 7
  2446                           ;!		 -> STR_18(CODE[7]), 
  2447                           ;!
  2448                           ;!    SoundAlarm@Alarm	PTR unsigned char  size(1) Largest target is 16
  2449                           ;!		 -> STR_17(CODE[16]), 
  2450                           ;!
  2451                           ;!    HeatingControlOff@On	PTR unsigned char  size(1) Largest target is 11
  2452                           ;!		 -> STR_16(CODE[11]), 
  2453                           ;!
  2454                           ;!    HeatingControlOff@Off	PTR unsigned char  size(1) Largest target is 12
  2455                           ;!		 -> STR_15(CODE[12]), 
  2456                           ;!
  2457                           ;!    SwapToHeatingDisplay@Off	PTR unsigned char  size(1) Largest target is 4
  2458                           ;!		 -> STR_14(CODE[4]), 
  2459                           ;!
  2460                           ;!    SwapToHeatingDisplay@On	PTR unsigned char  size(1) Largest target is 3
  2461                           ;!		 -> STR_13(CODE[3]), 
  2462                           ;!
  2463                           ;!    SwapToHeatingDisplay@Heat	PTR unsigned char  size(1) Largest target is 9
  2464                           ;!		 -> STR_12(CODE[9]), 
  2465                           ;!
  2466                           ;!    ChangeTrigger@TriggerSet	PTR unsigned char  size(1) Largest target is 12
  2467                           ;!		 -> STR_11(CODE[12]), 
  2468                           ;!
  2469                           ;!    ChangeTrigger@Trigger	PTR unsigned char  size(1) Largest target is 9
  2470                           ;!		 -> STR_10(CODE[9]), 
  2471                           ;!
  2472                           ;!    MainScreen@Temp	PTR unsigned char  size(1) Largest target is 6
  2473                           ;!		 -> STR_9(CODE[6]), 
  2474                           ;!
  2475                           ;!    MainScreen@Time	PTR unsigned char  size(1) Largest target is 6
  2476                           ;!		 -> STR_8(CODE[6]), 
  2477                           ;!
  2478                           ;!    DisplayTemp@tempBuffer	PTR unsigned char  size(1) Largest target is 6
  2479                           ;!		 -> tempBuffer(BANK1[6]), 
  2480                           ;!
  2481                           ;!    DisplayDay@Sunday	PTR unsigned char  size(1) Largest target is 7
  2482                           ;!		 -> STR_7(CODE[7]), 
  2483                           ;!
  2484                           ;!    DisplayDay@Saturday	PTR unsigned char  size(1) Largest target is 9
  2485                           ;!		 -> STR_6(CODE[9]), 
  2486                           ;!
  2487                           ;!    DisplayDay@Friday	PTR unsigned char  size(1) Largest target is 7
  2488                           ;!		 -> STR_5(CODE[7]), 
  2489                           ;!
  2490                           ;!    DisplayDay@Thursday	PTR unsigned char  size(1) Largest target is 9
  2491                           ;!		 -> STR_4(CODE[9]), 
  2492                           ;!
  2493                           ;!    DisplayDay@Wednesday	PTR unsigned char  size(1) Largest target is 10
  2494                           ;!		 -> STR_3(CODE[10]), 
  2495                           ;!
  2496                           ;!    DisplayDay@Tuesday	PTR unsigned char  size(1) Largest target is 8
  2497                           ;!		 -> STR_2(CODE[8]), 
  2498                           ;!
  2499                           ;!    DisplayDay@Monday	PTR unsigned char  size(1) Largest target is 7
  2500                           ;!		 -> STR_1(CODE[7]), 
  2501                           ;!
  2502                           
  2503                           
  2504                           ;!
  2505                           ;!Critical Paths under _main in COMMON
  2506                           ;!
  2507                           ;!    _main->_SwapToHeatingDisplay
  2508                           ;!    _Switch24Hour->___awmod
  2509                           ;!    _SoundAlarm->_SwapToHeatingDisplay
  2510                           ;!    _HeatingControlOff->_SwapToHeatingDisplay
  2511                           ;!    _DisplayTime->_RealTimeClock_get_hours
  2512                           ;!    _DisplayTime->_RealTimeClock_get_minutes
  2513                           ;!    _DisplayTime->_RealTimeClock_get_seconds
  2514                           ;!    _Get_Temp->___lwdiv
  2515                           ;!    ___lwdiv->___lwmod
  2516                           ;!    _Write_Byte->_Delay
  2517                           ;!    _Reset->_Delay
  2518                           ;!    _Read_Byte->_Delay
  2519                           ;!    _RealTimeClock_set_seconds->___int_to_hex
  2520                           ;!    _RealTimeClock_set_minutes->___int_to_hex
  2521                           ;!    _RealTimeClock_set_hours->___int_to_hex
  2522                           ;!    _RealTimeClock_get_seconds->___hex_to_int
  2523                           ;!    _RealTimeClock_set_day_of_week->___int_to_hex
  2524                           ;!    ___int_to_hex->___awmod
  2525                           ;!    _RealTimeClock_init->_RealTimeClock_write_byte
  2526                           ;!    _DateDayScreen->_SwapToHeatingDisplay
  2527                           ;!    _SwapToHeatingDisplay->_Keypad_Scan
  2528                           ;!    _SwapToHeatingDisplay->_LCD_SendString
  2529                           ;!    _LCD_SecondLine->_LCD_Command
  2530                           ;!    _DisplayDay->_RealTimeClock_get_day_of_week
  2531                           ;!    _RealTimeClock_get_day_of_week->___hex_to_int
  2532                           ;!    _DisplayDate->_RealTimeClock_get_day_of_month
  2533                           ;!    _DisplayDate->_RealTimeClock_get_month
  2534                           ;!    _DisplayDate->_RealTimeClock_get_year
  2535                           ;!    _RealTimeClock_get_year->___hex_to_int
  2536                           ;!    _RealTimeClock_get_month->___hex_to_int
  2537                           ;!    _RealTimeClock_get_day_of_month->___hex_to_int
  2538                           ;!    _ChangeTrigger->___awdiv
  2539                           ;!    _LCD_SendString->_LCD_SendData
  2540                           ;!    _Keypad_Scan->_Key_Delay
  2541                           ;!    _CheckTime->_RealTimeClock_get_hours
  2542                           ;!    _CheckTime->_RealTimeClock_get_minutes
  2543                           ;!    _RealTimeClock_get_minutes->___hex_to_int
  2544                           ;!    _RealTimeClock_get_hours->___hex_to_int
  2545                           ;!    ___hex_to_int->___awmod
  2546                           ;!
  2547                           ;!Critical Paths under _main in BANK0
  2548                           ;!
  2549                           ;!    _main->_SetTime
  2550                           ;!    _SoundAlarm->_HeatingControlOff
  2551                           ;!    _HeatingControlOff->_ChangeTrigger
  2552                           ;!    _MainScreen->_DisplayTemp
  2553                           ;!    _DisplayTime->_RealTimeClock_get_hours
  2554                           ;!    _DisplayTime->_RealTimeClock_get_minutes
  2555                           ;!    _DisplayTime->_RealTimeClock_get_seconds
  2556                           ;!    _DisplayTemp->_Get_Temp
  2557                           ;!    _SetTime->_RealTimeClock_get_hours
  2558                           ;!    _SetTime->_RealTimeClock_get_minutes
  2559                           ;!    _SetTime->_RealTimeClock_get_seconds
  2560                           ;!    _RealTimeClock_get_seconds->___hex_to_int
  2561                           ;!    _SetDate->_RealTimeClock_get_day_of_week
  2562                           ;!    _DateDayScreen->_ChangeTrigger
  2563                           ;!    _DisplayDay->_RealTimeClock_get_day_of_week
  2564                           ;!    _RealTimeClock_get_day_of_week->___hex_to_int
  2565                           ;!    _DisplayDate->_RealTimeClock_get_day_of_month
  2566                           ;!    _DisplayDate->_RealTimeClock_get_month
  2567                           ;!    _DisplayDate->_RealTimeClock_get_year
  2568                           ;!    _RealTimeClock_get_year->___hex_to_int
  2569                           ;!    _RealTimeClock_get_month->___hex_to_int
  2570                           ;!    _RealTimeClock_get_day_of_month->___hex_to_int
  2571                           ;!    _CheckTime->_RealTimeClock_get_hours
  2572                           ;!    _CheckTime->_RealTimeClock_get_minutes
  2573                           ;!    _RealTimeClock_get_minutes->___hex_to_int
  2574                           ;!    _RealTimeClock_get_hours->___hex_to_int
  2575                           ;!
  2576                           ;!Critical Paths under _main in BANK1
  2577                           ;!
  2578                           ;!    None.
  2579                           ;!
  2580                           ;!Critical Paths under _main in BANK3
  2581                           ;!
  2582                           ;!    None.
  2583                           ;!
  2584                           ;!Critical Paths under _main in BANK2
  2585                           ;!
  2586                           ;!    None.
  2587                           
  2588 ;;
  2589 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2590 ;;
  2591                           
  2592                           ;!
  2593                           ;!Call Graph Tables:
  2594                           ;!
  2595                           ;! ---------------------------------------------------------------------------------
  2596                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2597                           ;! ---------------------------------------------------------------------------------
  2598                           ;! (0) _main                                                14    14      0  339169
  2599                           ;!                                             40 BANK0     14    14      0
  2600                           ;!                        _Buzzer_Init
  2601                           ;!                      _ChangeTrigger
  2602                           ;!                           _CheckDay
  2603                           ;!                          _CheckTime
  2604                           ;!                      _DateDayScreen
  2605                           ;!                  _HeatingControlOff
  2606                           ;!                        _Init_Keypad
  2607                           ;!                        _Keypad_Scan
  2608                           ;!                        _LCD_Command
  2609                           ;!                           _LCD_Init
  2610                           ;!                         _MainScreen
  2611                           ;!                         _Main_Delay
  2612                           ;!      _RealTimeClock_get_day_of_week
  2613                           ;!                 _RealTimeClock_init
  2614                           ;!                            _SetDate
  2615                           ;!                            _SetTime
  2616                           ;!                         _SoundAlarm
  2617                           ;!                           _SoundOff
  2618                           ;!               _SwapToHeatingDisplay
  2619                           ;!                       _Switch24Hour
  2620                           ;!                   _Thermometer_Init
  2621                           ;!                             ___wmul
  2622                           ;! ---------------------------------------------------------------------------------
  2623                           ;! (1) _Thermometer_Init                                     0     0      0       0
  2624                           ;! ---------------------------------------------------------------------------------
  2625                           ;! (1) _Switch24Hour                                         4     2      2    4109
  2626                           ;!                                              7 COMMON     4     2      2
  2627                           ;!                        _LCD_Command
  2628                           ;!                       _LCD_SendData
  2629                           ;!                            ___awmod
  2630                           ;! ---------------------------------------------------------------------------------
  2631                           ;! (1) _SoundAlarm                                          10     2      8   98342
  2632                           ;!                                             28 BANK0     10     2      8
  2633                           ;!                      _ChangeTrigger
  2634                           ;!                           _Get_Temp
  2635                           ;!                  _HeatingControlOff
  2636                           ;!                        _Keypad_Scan
  2637                           ;!                        _LCD_Command
  2638                           ;!                     _LCD_SendString
  2639                           ;!                           _SoundOff
  2640                           ;!                            _SoundOn
  2641                           ;!               _SwapToHeatingDisplay
  2642                           ;!                             ___wmul
  2643                           ;! ---------------------------------------------------------------------------------
  2644                           ;! (2) _SoundOn                                              0     0      0       0
  2645                           ;! ---------------------------------------------------------------------------------
  2646                           ;! (2) _HeatingControlOff                                   11     3      8   67916
  2647                           ;!                                             17 BANK0     11     3      8
  2648                           ;!                      _ChangeTrigger
  2649                           ;!                           _Get_Temp
  2650                           ;!                        _Keypad_Scan
  2651                           ;!                        _LCD_Command
  2652                           ;!                     _LCD_SendString
  2653                           ;!                         _MainScreen
  2654                           ;!                         _Main_Delay
  2655                           ;!                           _SoundOff
  2656                           ;!               _SwapToHeatingDisplay
  2657                           ;!                             ___wmul
  2658                           ;! ---------------------------------------------------------------------------------
  2659                           ;! (1) ___wmul                                               6     2      4     700
  2660                           ;!                                              0 COMMON     6     2      4
  2661                           ;! ---------------------------------------------------------------------------------
  2662                           ;! (1) _SoundOff                                             0     0      0       0
  2663                           ;! ---------------------------------------------------------------------------------
  2664                           ;! (3) _MainScreen                                           3     3      0   36725
  2665                           ;!                                              8 BANK0      3     3      0
  2666                           ;!                        _DisplayTemp
  2667                           ;!                        _DisplayTime
  2668                           ;!                     _LCD_SecondLine
  2669                           ;!                     _LCD_SendString
  2670                           ;! ---------------------------------------------------------------------------------
  2671                           ;! (4) _DisplayTime                                          1     1      0   21635
  2672                           ;!                                             12 COMMON     1     1      0
  2673                           ;!                     _LCD_SendString
  2674                           ;!            _RealTimeClock_get_hours
  2675                           ;!          _RealTimeClock_get_minutes
  2676                           ;!          _RealTimeClock_get_seconds
  2677                           ;!                            ___awdiv
  2678                           ;!                            ___awmod
  2679                           ;! ---------------------------------------------------------------------------------
  2680                           ;! (4) _DisplayTemp                                          1     1      0   12250
  2681                           ;!                                              7 BANK0      1     1      0
  2682                           ;!                           _Get_Temp
  2683                           ;!                           _LCD_Busy
  2684                           ;!                       _LCD_SendData
  2685                           ;!                     _LCD_SendString
  2686                           ;! ---------------------------------------------------------------------------------
  2687                           ;! (5) _Get_Temp                                             7     7      0    9379
  2688                           ;!                                              0 BANK0      7     7      0
  2689                           ;!                              _Delay
  2690                           ;!                          _Read_Byte
  2691                           ;!                              _Reset
  2692                           ;!                         _Write_Byte
  2693                           ;!                            ___awdiv
  2694                           ;!                            ___awmod
  2695                           ;!                            ___lwdiv
  2696                           ;!                            ___lwmod
  2697                           ;! ---------------------------------------------------------------------------------
  2698                           ;! (6) ___lwmod                                              6     2      4     311
  2699                           ;!                                              0 COMMON     6     2      4
  2700                           ;! ---------------------------------------------------------------------------------
  2701                           ;! (6) ___lwdiv                                              8     4      4     466
  2702                           ;!                                              6 COMMON     8     4      4
  2703                           ;!                            ___lwmod (ARG)
  2704                           ;! ---------------------------------------------------------------------------------
  2705                           ;! (6) _Write_Byte                                           5     5      0     637
  2706                           ;!                                              4 COMMON     5     5      0
  2707                           ;!                              _Delay
  2708                           ;! ---------------------------------------------------------------------------------
  2709                           ;! (6) _Reset                                                3     3      0     569
  2710                           ;!                                              4 COMMON     3     3      0
  2711                           ;!                              _Delay
  2712                           ;! ---------------------------------------------------------------------------------
  2713                           ;! (6) _Read_Byte                                            3     3      0     594
  2714                           ;!                                              4 COMMON     3     3      0
  2715                           ;!                              _Delay
  2716                           ;! ---------------------------------------------------------------------------------
  2717                           ;! (7) _Delay                                                4     3      1     523
  2718                           ;!                                              0 COMMON     4     3      1
  2719                           ;! ---------------------------------------------------------------------------------
  2720                           ;! (1) _SetTime                                             33    31      2   39671
  2721                           ;!                                              7 BANK0     33    31      2
  2722                           ;!                        _Keypad_Scan
  2723                           ;!                        _LCD_Command
  2724                           ;!                     _LCD_SendString
  2725                           ;!                         _Main_Delay
  2726                           ;!            _RealTimeClock_get_hours
  2727                           ;!          _RealTimeClock_get_minutes
  2728                           ;!          _RealTimeClock_get_seconds
  2729                           ;!            _RealTimeClock_set_hours
  2730                           ;!          _RealTimeClock_set_minutes
  2731                           ;!          _RealTimeClock_set_seconds
  2732                           ;!                            ___awdiv
  2733                           ;!                            ___awmod
  2734                           ;! ---------------------------------------------------------------------------------
  2735                           ;! (2) _RealTimeClock_set_seconds                            2     0      2    4856
  2736                           ;!                                              0 BANK0      2     0      2
  2737                           ;!           _RealTimeClock_write_byte
  2738                           ;!                       ___int_to_hex
  2739                           ;! ---------------------------------------------------------------------------------
  2740                           ;! (2) _RealTimeClock_set_minutes                            2     0      2    4856
  2741                           ;!                                              0 BANK0      2     0      2
  2742                           ;!           _RealTimeClock_write_byte
  2743                           ;!                       ___int_to_hex
  2744                           ;! ---------------------------------------------------------------------------------
  2745                           ;! (2) _RealTimeClock_set_hours                              2     0      2    4856
  2746                           ;!                                              0 BANK0      2     0      2
  2747                           ;!           _RealTimeClock_write_byte
  2748                           ;!                       ___int_to_hex
  2749                           ;! ---------------------------------------------------------------------------------
  2750                           ;! (5) _RealTimeClock_get_seconds                            4     2      2    4265
  2751                           ;!                                             10 COMMON     2     2      0
  2752                           ;!                                              5 BANK0      2     0      2
  2753                           ;!            _RealTimeClock_read_byte
  2754                           ;!           _RealTimeClock_write_byte
  2755                           ;!                       ___hex_to_int
  2756                           ;! ---------------------------------------------------------------------------------
  2757                           ;! (1) _SetDate                                             17    15      2   14348
  2758                           ;!                                              7 BANK0     17    15      2
  2759                           ;!                           _CheckDay
  2760                           ;!                        _Keypad_Scan
  2761                           ;!                        _LCD_Command
  2762                           ;!                     _LCD_SecondLine
  2763                           ;!                     _LCD_SendString
  2764                           ;!                         _Main_Delay
  2765                           ;!      _RealTimeClock_get_day_of_week
  2766                           ;!      _RealTimeClock_set_day_of_week
  2767                           ;! ---------------------------------------------------------------------------------
  2768                           ;! (2) _RealTimeClock_set_day_of_week                        2     0      2    4856
  2769                           ;!                                              0 BANK0      2     0      2
  2770                           ;!           _RealTimeClock_write_byte
  2771                           ;!                       ___int_to_hex
  2772                           ;! ---------------------------------------------------------------------------------
  2773                           ;! (3) ___int_to_hex                                         7     5      2    4667
  2774                           ;!                                              7 COMMON     7     5      2
  2775                           ;!                            ___awmod
  2776                           ;! ---------------------------------------------------------------------------------
  2777                           ;! (2) _CheckDay                                             0     0      0       0
  2778                           ;! ---------------------------------------------------------------------------------
  2779                           ;! (1) _RealTimeClock_init                                   0     0      0      91
  2780                           ;!           _RealTimeClock_write_byte
  2781                           ;! ---------------------------------------------------------------------------------
  2782                           ;! (1) _LCD_Init                                             0     0      0       0
  2783                           ;! ---------------------------------------------------------------------------------
  2784                           ;! (1) _Init_Keypad                                          0     0      0       0
  2785                           ;! ---------------------------------------------------------------------------------
  2786                           ;! (1) _DateDayScreen                                        5     3      2   46272
  2787                           ;!                                             17 BANK0      5     3      2
  2788                           ;!                      _ChangeTrigger
  2789                           ;!                        _DisplayDate
  2790                           ;!                         _DisplayDay
  2791                           ;!                        _Keypad_Scan
  2792                           ;!                        _LCD_Command
  2793                           ;!                     _LCD_SecondLine
  2794                           ;!                     _LCD_SendString
  2795                           ;!               _SwapToHeatingDisplay
  2796                           ;! ---------------------------------------------------------------------------------
  2797                           ;! (1) _SwapToHeatingDisplay                                 6     4      2    4498
  2798                           ;!                                              8 COMMON     6     4      2
  2799                           ;!                        _Keypad_Scan
  2800                           ;!                        _LCD_Command
  2801                           ;!                     _LCD_SendString
  2802                           ;! ---------------------------------------------------------------------------------
  2803                           ;! (4) _LCD_SecondLine                                       0     0      0      22
  2804                           ;!                        _LCD_Command
  2805                           ;! ---------------------------------------------------------------------------------
  2806                           ;! (2) _DisplayDay                                           8     8      0    7198
  2807                           ;!                                             12 COMMON     1     1      0
  2808                           ;!                                              7 BANK0      7     7      0
  2809                           ;!                     _LCD_SendString
  2810                           ;!      _RealTimeClock_get_day_of_week
  2811                           ;! ---------------------------------------------------------------------------------
  2812                           ;! (2) _RealTimeClock_get_day_of_week                        4     2      2    4265
  2813                           ;!                                             10 COMMON     2     2      0
  2814                           ;!                                              5 BANK0      2     0      2
  2815                           ;!            _RealTimeClock_read_byte
  2816                           ;!           _RealTimeClock_write_byte
  2817                           ;!                       ___hex_to_int
  2818                           ;! ---------------------------------------------------------------------------------
  2819                           ;! (2) _DisplayDate                                          7     7      0   19067
  2820                           ;!                                             12 COMMON     1     1      0
  2821                           ;!                                              7 BANK0      6     6      0
  2822                           ;!     _RealTimeClock_get_day_of_month
  2823                           ;!            _RealTimeClock_get_month
  2824                           ;!             _RealTimeClock_get_year
  2825                           ;!                            ___awdiv
  2826                           ;!                            ___awmod
  2827                           ;! ---------------------------------------------------------------------------------
  2828                           ;! (3) _RealTimeClock_get_year                               4     2      2    4265
  2829                           ;!                                             10 COMMON     2     2      0
  2830                           ;!                                              5 BANK0      2     0      2
  2831                           ;!            _RealTimeClock_read_byte
  2832                           ;!           _RealTimeClock_write_byte
  2833                           ;!                       ___hex_to_int
  2834                           ;! ---------------------------------------------------------------------------------
  2835                           ;! (3) _RealTimeClock_get_month                              4     2      2    4265
  2836                           ;!                                             10 COMMON     2     2      0
  2837                           ;!                                              5 BANK0      2     0      2
  2838                           ;!            _RealTimeClock_read_byte
  2839                           ;!           _RealTimeClock_write_byte
  2840                           ;!                       ___hex_to_int
  2841                           ;! ---------------------------------------------------------------------------------
  2842                           ;! (3) _RealTimeClock_get_day_of_month                       4     2      2    4265
  2843                           ;!                                             10 COMMON     2     2      0
  2844                           ;!                                              5 BANK0      2     0      2
  2845                           ;!            _RealTimeClock_read_byte
  2846                           ;!           _RealTimeClock_write_byte
  2847                           ;!                       ___hex_to_int
  2848                           ;! ---------------------------------------------------------------------------------
  2849                           ;! (3) _ChangeTrigger                                       17    17      0   11152
  2850                           ;!                                              0 BANK0     17    17      0
  2851                           ;!                        _Keypad_Scan
  2852                           ;!                           _LCD_Busy
  2853                           ;!                        _LCD_Command
  2854                           ;!                       _LCD_SendData
  2855                           ;!                     _LCD_SendString
  2856                           ;!                         _Main_Delay
  2857                           ;!                            ___awdiv
  2858                           ;!                            ___awmod
  2859                           ;! ---------------------------------------------------------------------------------
  2860                           ;! (5) ___awdiv                                              9     5      4    2124
  2861                           ;!                                              0 COMMON     9     5      4
  2862                           ;! ---------------------------------------------------------------------------------
  2863                           ;! (3) _Main_Delay                                           7     5      2     548
  2864                           ;!                                              0 COMMON     7     5      2
  2865                           ;! ---------------------------------------------------------------------------------
  2866                           ;! (2) _LCD_SendString                                       7     5      2    2772
  2867                           ;!                                              1 COMMON     7     5      2
  2868                           ;!                       _LCD_SendData
  2869                           ;! ---------------------------------------------------------------------------------
  2870                           ;! (2) _LCD_SendData                                         1     1      0      22
  2871                           ;!                                              0 COMMON     1     1      0
  2872                           ;!                           _LCD_Busy
  2873                           ;! ---------------------------------------------------------------------------------
  2874                           ;! (2) _LCD_Command                                          1     1      0      22
  2875                           ;!                                              0 COMMON     1     1      0
  2876                           ;!                           _LCD_Busy
  2877                           ;! ---------------------------------------------------------------------------------
  2878                           ;! (3) _LCD_Busy                                             0     0      0       0
  2879                           ;! ---------------------------------------------------------------------------------
  2880                           ;! (2) _Keypad_Scan                                          2     0      2    1308
  2881                           ;!                                              6 COMMON     2     0      2
  2882                           ;!                          _Key_Delay
  2883                           ;! ---------------------------------------------------------------------------------
  2884                           ;! (3) _Key_Delay                                            6     4      2    1308
  2885                           ;!                                              0 COMMON     6     4      2
  2886                           ;! ---------------------------------------------------------------------------------
  2887                           ;! (1) _CheckTime                                            1     1      0    8530
  2888                           ;!                                             12 COMMON     1     1      0
  2889                           ;!            _RealTimeClock_get_hours
  2890                           ;!          _RealTimeClock_get_minutes
  2891                           ;! ---------------------------------------------------------------------------------
  2892                           ;! (5) _RealTimeClock_get_minutes                            4     2      2    4265
  2893                           ;!                                             10 COMMON     2     2      0
  2894                           ;!                                              5 BANK0      2     0      2
  2895                           ;!            _RealTimeClock_read_byte
  2896                           ;!           _RealTimeClock_write_byte
  2897                           ;!                       ___hex_to_int
  2898                           ;! ---------------------------------------------------------------------------------
  2899                           ;! (5) _RealTimeClock_get_hours                              4     2      2    4265
  2900                           ;!                                             10 COMMON     2     2      0
  2901                           ;!                                              5 BANK0      2     0      2
  2902                           ;!            _RealTimeClock_read_byte
  2903                           ;!           _RealTimeClock_write_byte
  2904                           ;!                       ___hex_to_int
  2905                           ;! ---------------------------------------------------------------------------------
  2906                           ;! (6) ___hex_to_int                                         8     6      2    4059
  2907                           ;!                                              7 COMMON     3     1      2
  2908                           ;!                                              0 BANK0      5     5      0
  2909                           ;!                            ___awmod
  2910                           ;! ---------------------------------------------------------------------------------
  2911                           ;! (2) ___awmod                                              7     3      4    3944
  2912                           ;!                                              0 COMMON     7     3      4
  2913                           ;! ---------------------------------------------------------------------------------
  2914                           ;! (6) _RealTimeClock_write_byte                             5     5      0      91
  2915                           ;!                                              0 COMMON     5     5      0
  2916                           ;! ---------------------------------------------------------------------------------
  2917                           ;! (6) _RealTimeClock_read_byte                              5     5      0      92
  2918                           ;!                                              0 COMMON     5     5      0
  2919                           ;! ---------------------------------------------------------------------------------
  2920                           ;! (1) _Buzzer_Init                                          0     0      0       0
  2921                           ;! ---------------------------------------------------------------------------------
  2922                           ;! Estimated maximum stack depth 7
  2923                           ;! ---------------------------------------------------------------------------------
  2924                           ;!
  2925                           ;! Call Graph Graphs:
  2926                           ;!
  2927                           ;! _main (ROOT)
  2928                           ;!   _Buzzer_Init
  2929                           ;!   _ChangeTrigger
  2930                           ;!     _Keypad_Scan
  2931                           ;!       _Key_Delay
  2932                           ;!     _LCD_Busy
  2933                           ;!     _LCD_Command
  2934                           ;!       _LCD_Busy
  2935                           ;!     _LCD_SendData
  2936                           ;!       _LCD_Busy
  2937                           ;!     _LCD_SendString
  2938                           ;!       _LCD_SendData
  2939                           ;!         _LCD_Busy
  2940                           ;!     _Main_Delay
  2941                           ;!     ___awdiv
  2942                           ;!     ___awmod
  2943                           ;!   _CheckDay
  2944                           ;!   _CheckTime
  2945                           ;!     _RealTimeClock_get_hours
  2946                           ;!       _RealTimeClock_read_byte
  2947                           ;!       _RealTimeClock_write_byte
  2948                           ;!       ___hex_to_int
  2949                           ;!         ___awmod
  2950                           ;!     _RealTimeClock_get_minutes
  2951                           ;!       _RealTimeClock_read_byte
  2952                           ;!       _RealTimeClock_write_byte
  2953                           ;!       ___hex_to_int
  2954                           ;!         ___awmod
  2955                           ;!   _DateDayScreen
  2956                           ;!     _ChangeTrigger
  2957                           ;!       _Keypad_Scan
  2958                           ;!         _Key_Delay
  2959                           ;!       _LCD_Busy
  2960                           ;!       _LCD_Command
  2961                           ;!         _LCD_Busy
  2962                           ;!       _LCD_SendData
  2963                           ;!         _LCD_Busy
  2964                           ;!       _LCD_SendString
  2965                           ;!         _LCD_SendData
  2966                           ;!           _LCD_Busy
  2967                           ;!       _Main_Delay
  2968                           ;!       ___awdiv
  2969                           ;!       ___awmod
  2970                           ;!     _DisplayDate
  2971                           ;!       _RealTimeClock_get_day_of_month
  2972                           ;!         _RealTimeClock_read_byte
  2973                           ;!         _RealTimeClock_write_byte
  2974                           ;!         ___hex_to_int
  2975                           ;!           ___awmod
  2976                           ;!       _RealTimeClock_get_month
  2977                           ;!         _RealTimeClock_read_byte
  2978                           ;!         _RealTimeClock_write_byte
  2979                           ;!         ___hex_to_int
  2980                           ;!           ___awmod
  2981                           ;!       _RealTimeClock_get_year
  2982                           ;!         _RealTimeClock_read_byte
  2983                           ;!         _RealTimeClock_write_byte
  2984                           ;!         ___hex_to_int
  2985                           ;!           ___awmod
  2986                           ;!       ___awdiv
  2987                           ;!       ___awmod
  2988                           ;!     _DisplayDay
  2989                           ;!       _LCD_SendString
  2990                           ;!         _LCD_SendData
  2991                           ;!           _LCD_Busy
  2992                           ;!       _RealTimeClock_get_day_of_week
  2993                           ;!         _RealTimeClock_read_byte
  2994                           ;!         _RealTimeClock_write_byte
  2995                           ;!         ___hex_to_int
  2996                           ;!           ___awmod
  2997                           ;!     _Keypad_Scan
  2998                           ;!       _Key_Delay
  2999                           ;!     _LCD_Command
  3000                           ;!       _LCD_Busy
  3001                           ;!     _LCD_SecondLine
  3002                           ;!       _LCD_Command
  3003                           ;!         _LCD_Busy
  3004                           ;!     _LCD_SendString
  3005                           ;!       _LCD_SendData
  3006                           ;!         _LCD_Busy
  3007                           ;!     _SwapToHeatingDisplay
  3008                           ;!       _Keypad_Scan
  3009                           ;!         _Key_Delay
  3010                           ;!       _LCD_Command
  3011                           ;!         _LCD_Busy
  3012                           ;!       _LCD_SendString
  3013                           ;!         _LCD_SendData
  3014                           ;!           _LCD_Busy
  3015                           ;!   _HeatingControlOff
  3016                           ;!     _ChangeTrigger
  3017                           ;!       _Keypad_Scan
  3018                           ;!         _Key_Delay
  3019                           ;!       _LCD_Busy
  3020                           ;!       _LCD_Command
  3021                           ;!         _LCD_Busy
  3022                           ;!       _LCD_SendData
  3023                           ;!         _LCD_Busy
  3024                           ;!       _LCD_SendString
  3025                           ;!         _LCD_SendData
  3026                           ;!           _LCD_Busy
  3027                           ;!       _Main_Delay
  3028                           ;!       ___awdiv
  3029                           ;!       ___awmod
  3030                           ;!     _Get_Temp
  3031                           ;!       _Delay
  3032                           ;!       _Read_Byte
  3033                           ;!         _Delay
  3034                           ;!       _Reset
  3035                           ;!         _Delay
  3036                           ;!       _Write_Byte
  3037                           ;!         _Delay
  3038                           ;!       ___awdiv
  3039                           ;!       ___awmod
  3040                           ;!       ___lwdiv
  3041                           ;!         ___lwmod (ARG)
  3042                           ;!       ___lwmod
  3043                           ;!     _Keypad_Scan
  3044                           ;!       _Key_Delay
  3045                           ;!     _LCD_Command
  3046                           ;!       _LCD_Busy
  3047                           ;!     _LCD_SendString
  3048                           ;!       _LCD_SendData
  3049                           ;!         _LCD_Busy
  3050                           ;!     _MainScreen
  3051                           ;!       _DisplayTemp
  3052                           ;!         _Get_Temp
  3053                           ;!           _Delay
  3054                           ;!           _Read_Byte
  3055                           ;!             _Delay
  3056                           ;!           _Reset
  3057                           ;!             _Delay
  3058                           ;!           _Write_Byte
  3059                           ;!             _Delay
  3060                           ;!           ___awdiv
  3061                           ;!           ___awmod
  3062                           ;!           ___lwdiv
  3063                           ;!             ___lwmod (ARG)
  3064                           ;!           ___lwmod
  3065                           ;!         _LCD_Busy
  3066                           ;!         _LCD_SendData
  3067                           ;!           _LCD_Busy
  3068                           ;!         _LCD_SendString
  3069                           ;!           _LCD_SendData
  3070                           ;!             _LCD_Busy
  3071                           ;!       _DisplayTime
  3072                           ;!         _LCD_SendString
  3073                           ;!           _LCD_SendData
  3074                           ;!             _LCD_Busy
  3075                           ;!         _RealTimeClock_get_hours
  3076                           ;!           _RealTimeClock_read_byte
  3077                           ;!           _RealTimeClock_write_byte
  3078                           ;!           ___hex_to_int
  3079                           ;!             ___awmod
  3080                           ;!         _RealTimeClock_get_minutes
  3081                           ;!           _RealTimeClock_read_byte
  3082                           ;!           _RealTimeClock_write_byte
  3083                           ;!           ___hex_to_int
  3084                           ;!             ___awmod
  3085                           ;!         _RealTimeClock_get_seconds
  3086                           ;!           _RealTimeClock_read_byte
  3087                           ;!           _RealTimeClock_write_byte
  3088                           ;!           ___hex_to_int
  3089                           ;!             ___awmod
  3090                           ;!         ___awdiv
  3091                           ;!         ___awmod
  3092                           ;!       _LCD_SecondLine
  3093                           ;!         _LCD_Command
  3094                           ;!           _LCD_Busy
  3095                           ;!       _LCD_SendString
  3096                           ;!         _LCD_SendData
  3097                           ;!           _LCD_Busy
  3098                           ;!     _Main_Delay
  3099                           ;!     _SoundOff
  3100                           ;!     _SwapToHeatingDisplay
  3101                           ;!       _Keypad_Scan
  3102                           ;!         _Key_Delay
  3103                           ;!       _LCD_Command
  3104                           ;!         _LCD_Busy
  3105                           ;!       _LCD_SendString
  3106                           ;!         _LCD_SendData
  3107                           ;!           _LCD_Busy
  3108                           ;!     ___wmul
  3109                           ;!   _Init_Keypad
  3110                           ;!   _Keypad_Scan
  3111                           ;!     _Key_Delay
  3112                           ;!   _LCD_Command
  3113                           ;!     _LCD_Busy
  3114                           ;!   _LCD_Init
  3115                           ;!   _MainScreen
  3116                           ;!     _DisplayTemp
  3117                           ;!       _Get_Temp
  3118                           ;!         _Delay
  3119                           ;!         _Read_Byte
  3120                           ;!           _Delay
  3121                           ;!         _Reset
  3122                           ;!           _Delay
  3123                           ;!         _Write_Byte
  3124                           ;!           _Delay
  3125                           ;!         ___awdiv
  3126                           ;!         ___awmod
  3127                           ;!         ___lwdiv
  3128                           ;!           ___lwmod (ARG)
  3129                           ;!         ___lwmod
  3130                           ;!       _LCD_Busy
  3131                           ;!       _LCD_SendData
  3132                           ;!         _LCD_Busy
  3133                           ;!       _LCD_SendString
  3134                           ;!         _LCD_SendData
  3135                           ;!           _LCD_Busy
  3136                           ;!     _DisplayTime
  3137                           ;!       _LCD_SendString
  3138                           ;!         _LCD_SendData
  3139                           ;!           _LCD_Busy
  3140                           ;!       _RealTimeClock_get_hours
  3141                           ;!         _RealTimeClock_read_byte
  3142                           ;!         _RealTimeClock_write_byte
  3143                           ;!         ___hex_to_int
  3144                           ;!           ___awmod
  3145                           ;!       _RealTimeClock_get_minutes
  3146                           ;!         _RealTimeClock_read_byte
  3147                           ;!         _RealTimeClock_write_byte
  3148                           ;!         ___hex_to_int
  3149                           ;!           ___awmod
  3150                           ;!       _RealTimeClock_get_seconds
  3151                           ;!         _RealTimeClock_read_byte
  3152                           ;!         _RealTimeClock_write_byte
  3153                           ;!         ___hex_to_int
  3154                           ;!           ___awmod
  3155                           ;!       ___awdiv
  3156                           ;!       ___awmod
  3157                           ;!     _LCD_SecondLine
  3158                           ;!       _LCD_Command
  3159                           ;!         _LCD_Busy
  3160                           ;!     _LCD_SendString
  3161                           ;!       _LCD_SendData
  3162                           ;!         _LCD_Busy
  3163                           ;!   _Main_Delay
  3164                           ;!   _RealTimeClock_get_day_of_week
  3165                           ;!     _RealTimeClock_read_byte
  3166                           ;!     _RealTimeClock_write_byte
  3167                           ;!     ___hex_to_int
  3168                           ;!       ___awmod
  3169                           ;!   _RealTimeClock_init
  3170                           ;!     _RealTimeClock_write_byte
  3171                           ;!   _SetDate
  3172                           ;!     _CheckDay
  3173                           ;!     _Keypad_Scan
  3174                           ;!       _Key_Delay
  3175                           ;!     _LCD_Command
  3176                           ;!       _LCD_Busy
  3177                           ;!     _LCD_SecondLine
  3178                           ;!       _LCD_Command
  3179                           ;!         _LCD_Busy
  3180                           ;!     _LCD_SendString
  3181                           ;!       _LCD_SendData
  3182                           ;!         _LCD_Busy
  3183                           ;!     _Main_Delay
  3184                           ;!     _RealTimeClock_get_day_of_week
  3185                           ;!       _RealTimeClock_read_byte
  3186                           ;!       _RealTimeClock_write_byte
  3187                           ;!       ___hex_to_int
  3188                           ;!         ___awmod
  3189                           ;!     _RealTimeClock_set_day_of_week
  3190                           ;!       _RealTimeClock_write_byte
  3191                           ;!       ___int_to_hex
  3192                           ;!         ___awmod
  3193                           ;!   _SetTime
  3194                           ;!     _Keypad_Scan
  3195                           ;!       _Key_Delay
  3196                           ;!     _LCD_Command
  3197                           ;!       _LCD_Busy
  3198                           ;!     _LCD_SendString
  3199                           ;!       _LCD_SendData
  3200                           ;!         _LCD_Busy
  3201                           ;!     _Main_Delay
  3202                           ;!     _RealTimeClock_get_hours
  3203                           ;!       _RealTimeClock_read_byte
  3204                           ;!       _RealTimeClock_write_byte
  3205                           ;!       ___hex_to_int
  3206                           ;!         ___awmod
  3207                           ;!     _RealTimeClock_get_minutes
  3208                           ;!       _RealTimeClock_read_byte
  3209                           ;!       _RealTimeClock_write_byte
  3210                           ;!       ___hex_to_int
  3211                           ;!         ___awmod
  3212                           ;!     _RealTimeClock_get_seconds
  3213                           ;!       _RealTimeClock_read_byte
  3214                           ;!       _RealTimeClock_write_byte
  3215                           ;!       ___hex_to_int
  3216                           ;!         ___awmod
  3217                           ;!     _RealTimeClock_set_hours
  3218                           ;!       _RealTimeClock_write_byte
  3219                           ;!       ___int_to_hex
  3220                           ;!         ___awmod
  3221                           ;!     _RealTimeClock_set_minutes
  3222                           ;!       _RealTimeClock_write_byte
  3223                           ;!       ___int_to_hex
  3224                           ;!         ___awmod
  3225                           ;!     _RealTimeClock_set_seconds
  3226                           ;!       _RealTimeClock_write_byte
  3227                           ;!       ___int_to_hex
  3228                           ;!         ___awmod
  3229                           ;!     ___awdiv
  3230                           ;!     ___awmod
  3231                           ;!   _SoundAlarm
  3232                           ;!     _ChangeTrigger
  3233                           ;!       _Keypad_Scan
  3234                           ;!         _Key_Delay
  3235                           ;!       _LCD_Busy
  3236                           ;!       _LCD_Command
  3237                           ;!         _LCD_Busy
  3238                           ;!       _LCD_SendData
  3239                           ;!         _LCD_Busy
  3240                           ;!       _LCD_SendString
  3241                           ;!         _LCD_SendData
  3242                           ;!           _LCD_Busy
  3243                           ;!       _Main_Delay
  3244                           ;!       ___awdiv
  3245                           ;!       ___awmod
  3246                           ;!     _Get_Temp
  3247                           ;!       _Delay
  3248                           ;!       _Read_Byte
  3249                           ;!         _Delay
  3250                           ;!       _Reset
  3251                           ;!         _Delay
  3252                           ;!       _Write_Byte
  3253                           ;!         _Delay
  3254                           ;!       ___awdiv
  3255                           ;!       ___awmod
  3256                           ;!       ___lwdiv
  3257                           ;!         ___lwmod (ARG)
  3258                           ;!       ___lwmod
  3259                           ;!     _HeatingControlOff
  3260                           ;!       _ChangeTrigger
  3261                           ;!         _Keypad_Scan
  3262                           ;!           _Key_Delay
  3263                           ;!         _LCD_Busy
  3264                           ;!         _LCD_Command
  3265                           ;!           _LCD_Busy
  3266                           ;!         _LCD_SendData
  3267                           ;!           _LCD_Busy
  3268                           ;!         _LCD_SendString
  3269                           ;!           _LCD_SendData
  3270                           ;!             _LCD_Busy
  3271                           ;!         _Main_Delay
  3272                           ;!         ___awdiv
  3273                           ;!         ___awmod
  3274                           ;!       _Get_Temp
  3275                           ;!         _Delay
  3276                           ;!         _Read_Byte
  3277                           ;!           _Delay
  3278                           ;!         _Reset
  3279                           ;!           _Delay
  3280                           ;!         _Write_Byte
  3281                           ;!           _Delay
  3282                           ;!         ___awdiv
  3283                           ;!         ___awmod
  3284                           ;!         ___lwdiv
  3285                           ;!           ___lwmod (ARG)
  3286                           ;!         ___lwmod
  3287                           ;!       _Keypad_Scan
  3288                           ;!         _Key_Delay
  3289                           ;!       _LCD_Command
  3290                           ;!         _LCD_Busy
  3291                           ;!       _LCD_SendString
  3292                           ;!         _LCD_SendData
  3293                           ;!           _LCD_Busy
  3294                           ;!       _MainScreen
  3295                           ;!         _DisplayTemp
  3296                           ;!           _Get_Temp
  3297                           ;!             _Delay
  3298                           ;!             _Read_Byte
  3299                           ;!               _Delay
  3300                           ;!             _Reset
  3301                           ;!               _Delay
  3302                           ;!             _Write_Byte
  3303                           ;!               _Delay
  3304                           ;!             ___awdiv
  3305                           ;!             ___awmod
  3306                           ;!             ___lwdiv
  3307                           ;!               ___lwmod (ARG)
  3308                           ;!             ___lwmod
  3309                           ;!           _LCD_Busy
  3310                           ;!           _LCD_SendData
  3311                           ;!             _LCD_Busy
  3312                           ;!           _LCD_SendString
  3313                           ;!             _LCD_SendData
  3314                           ;!               _LCD_Busy
  3315                           ;!         _DisplayTime
  3316                           ;!           _LCD_SendString
  3317                           ;!             _LCD_SendData
  3318                           ;!               _LCD_Busy
  3319                           ;!           _RealTimeClock_get_hours
  3320                           ;!             _RealTimeClock_read_byte
  3321                           ;!             _RealTimeClock_write_byte
  3322                           ;!             ___hex_to_int
  3323                           ;!               ___awmod
  3324                           ;!           _RealTimeClock_get_minutes
  3325                           ;!             _RealTimeClock_read_byte
  3326                           ;!             _RealTimeClock_write_byte
  3327                           ;!             ___hex_to_int
  3328                           ;!               ___awmod
  3329                           ;!           _RealTimeClock_get_seconds
  3330                           ;!             _RealTimeClock_read_byte
  3331                           ;!             _RealTimeClock_write_byte
  3332                           ;!             ___hex_to_int
  3333                           ;!               ___awmod
  3334                           ;!           ___awdiv
  3335                           ;!           ___awmod
  3336                           ;!         _LCD_SecondLine
  3337                           ;!           _LCD_Command
  3338                           ;!             _LCD_Busy
  3339                           ;!         _LCD_SendString
  3340                           ;!           _LCD_SendData
  3341                           ;!             _LCD_Busy
  3342                           ;!       _Main_Delay
  3343                           ;!       _SoundOff
  3344                           ;!       _SwapToHeatingDisplay
  3345                           ;!         _Keypad_Scan
  3346                           ;!           _Key_Delay
  3347                           ;!         _LCD_Command
  3348                           ;!           _LCD_Busy
  3349                           ;!         _LCD_SendString
  3350                           ;!           _LCD_SendData
  3351                           ;!             _LCD_Busy
  3352                           ;!       ___wmul
  3353                           ;!     _Keypad_Scan
  3354                           ;!       _Key_Delay
  3355                           ;!     _LCD_Command
  3356                           ;!       _LCD_Busy
  3357                           ;!     _LCD_SendString
  3358                           ;!       _LCD_SendData
  3359                           ;!         _LCD_Busy
  3360                           ;!     _SoundOff
  3361                           ;!     _SoundOn
  3362                           ;!     _SwapToHeatingDisplay
  3363                           ;!       _Keypad_Scan
  3364                           ;!         _Key_Delay
  3365                           ;!       _LCD_Command
  3366                           ;!         _LCD_Busy
  3367                           ;!       _LCD_SendString
  3368                           ;!         _LCD_SendData
  3369                           ;!           _LCD_Busy
  3370                           ;!     ___wmul
  3371                           ;!   _SoundOff
  3372                           ;!   _SwapToHeatingDisplay
  3373                           ;!     _Keypad_Scan
  3374                           ;!       _Key_Delay
  3375                           ;!     _LCD_Command
  3376                           ;!       _LCD_Busy
  3377                           ;!     _LCD_SendString
  3378                           ;!       _LCD_SendData
  3379                           ;!         _LCD_Busy
  3380                           ;!   _Switch24Hour
  3381                           ;!     _LCD_Command
  3382                           ;!       _LCD_Busy
  3383                           ;!     _LCD_SendData
  3384                           ;!       _LCD_Busy
  3385                           ;!     ___awmod
  3386                           ;!   _Thermometer_Init
  3387                           ;!   ___wmul
  3388                           ;!
  3389                           
  3390                           ;! Address spaces:
  3391                           
  3392                           ;!Name               Size   Autos  Total    Cost      Usage
  3393                           ;!BANK3               60      0      1E       9       31.3%
  3394                           ;!BITBANK3            60      0       0       8        0.0%
  3395                           ;!SFR3                 0      0       0       4        0.0%
  3396                           ;!BITSFR3              0      0       0       4        0.0%
  3397                           ;!BANK2               60      0       0      11        0.0%
  3398                           ;!BITBANK2            60      0       0      10        0.0%
  3399                           ;!SFR2                 0      0       0       5        0.0%
  3400                           ;!BITSFR2              0      0       0       5        0.0%
  3401                           ;!BANK1               50      0      50       7      100.0%
  3402                           ;!BITBANK1            50      0       0       6        0.0%
  3403                           ;!SFR1                 0      0       0       2        0.0%
  3404                           ;!BITSFR1              0      0       0       2        0.0%
  3405                           ;!BANK0               50     36      50       5      100.0%
  3406                           ;!BITBANK0            50      0       0       4        0.0%
  3407                           ;!SFR0                 0      0       0       1        0.0%
  3408                           ;!BITSFR0              0      0       0       1        0.0%
  3409                           ;!COMMON               E      E       E       1      100.0%
  3410                           ;!BITCOMMON            E      0       0       0        0.0%
  3411                           ;!CODE                 0      0       0       0        0.0%
  3412                           ;!DATA                 0      0      CC      12        0.0%
  3413                           ;!ABS                  0      0      CC       3        0.0%
  3414                           ;!NULL                 0      0       0       0        0.0%
  3415                           ;!STACK                0      0       0       2        0.0%
  3416                           ;!EEDATA             100      0       0       0        0.0%
  3417                           
  3418                           	global	_main
  3419                           
  3420 ;; *************** function _main *****************
  3421 ;; Defined at:
  3422 ;;		line 760 in file "main.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  Key             2   52[BANK0 ] int 
  3427 ;;  temp3           2   50[BANK0 ] int 
  3428 ;;  temp2           2   48[BANK0 ] int 
  3429 ;;  temp            2   46[BANK0 ] int 
  3430 ;;  tempdectenth    2   44[BANK0 ] int 
  3431 ;;  tempdec         2   42[BANK0 ] int 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : B00/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3441 ;;      Params:         0       0       0       0       0
  3442 ;;      Locals:         0      12       0       0       0
  3443 ;;      Temps:          0       2       0       0       0
  3444 ;;      Totals:         0      14       0       0       0
  3445 ;;Total ram usage:       14 bytes
  3446 ;; Hardware stack levels required when called:    7
  3447 ;; This function calls:
  3448 ;;		_Buzzer_Init
  3449 ;;		_ChangeTrigger
  3450 ;;		_CheckDay
  3451 ;;		_CheckTime
  3452 ;;		_DateDayScreen
  3453 ;;		_HeatingControlOff
  3454 ;;		_Init_Keypad
  3455 ;;		_Keypad_Scan
  3456 ;;		_LCD_Command
  3457 ;;		_LCD_Init
  3458 ;;		_MainScreen
  3459 ;;		_Main_Delay
  3460 ;;		_RealTimeClock_get_day_of_week
  3461 ;;		_RealTimeClock_init
  3462 ;;		_SetDate
  3463 ;;		_SetTime
  3464 ;;		_SoundAlarm
  3465 ;;		_SoundOff
  3466 ;;		_SwapToHeatingDisplay
  3467 ;;		_Switch24Hour
  3468 ;;		_Thermometer_Init
  3469 ;;		___wmul
  3470 ;; This function is called by:
  3471 ;;		Startup code after reset
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  3475                           	file	"main.c"
  3476                           	line	760
  3477                           global __pmaintext
  3478                           __pmaintext:	;psect for function _main
  3479  02AC                     psect	maintext
  3480                           	file	"main.c"
  3481                           	line	760
  3482                           	global	__size_of_main
  3483                           	__size_of_main	equ	__end_of_main-_main
  3484  022C                     	
  3485                           _main:	
  3486  02AC                     ;incstack = 0
  3487                           	opt	stack 1
  3488                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3489                           	line	763
  3490                           	
  3491                           l4094:	
  3492  02AC                     ;main.c: 763:     SoundOff();
  3493                           	fcall	_LCD_Init
  3494  02AC  160A  158A  261D  120A  118A  	line	764
  3495                           ;main.c: 764: 
  3496                           	fcall	_Init_Keypad
  3497  02B1  160A  158A  262B  120A  118A  	line	765
  3498                           ;main.c: 765:     day_of_week = RealTimeClock_get_day_of_week();
  3499                           	fcall	_Thermometer_Init
  3500  02B6  160A  158A  2624  120A  118A  	line	766
  3501                           	
  3502                           l4096:	
  3503  02BB                     ;main.c: 766:     CheckDay();
  3504                           	fcall	_RealTimeClock_init
  3505  02BB  160A  118A  20E6  120A  118A  	line	770
  3506                           	
  3507                           l4098:	
  3508  02C0                     ;main.c: 770:     {
  3509                           	fcall	_Buzzer_Init
  3510  02C0  160A  158A  260A  120A  118A  	line	771
  3511                           	
  3512                           l4100:	
  3513  02C5                     ;main.c: 771:         day_of_week = RealTimeClock_get_day_of_week();
  3514                           	bcf	status, 5	;RP0=0, select bank0
  3515  02C5  1283               	bcf	status, 6	;RP1=0, select bank0
  3516  02C6  1303               	clrf	(main@Key)
  3517  02C7  01D4               	clrf	(main@Key+1)
  3518  02C8  01D5               	line	772
  3519                           	
  3520                           l4102:	
  3521  02C9                     ;main.c: 772: 
  3522                           	bsf	status, 5	;RP0=1, select bank1
  3523  02C9  1683               	bcf	status, 6	;RP1=0, select bank1
  3524  02CA  1303               	clrf	(_DisableAlarm)^080h
  3525  02CB  01EE               	clrf	(_DisableAlarm+1)^080h
  3526  02CC  01EF               	line	773
  3527                           	
  3528                           l4104:	
  3529  02CD                     ;main.c: 773:         LCD_Command(0x03);
  3530                           	movlw	01h
  3531  02CD  3001               	movwf	(_isWeekDay)^080h
  3532  02CE  00EA               	movlw	0
  3533  02CF  3000               	movwf	((_isWeekDay)^080h)+1
  3534  02D0  00EB               	line	775
  3535                           	
  3536                           l4106:	
  3537  02D1                     ;main.c: 774: ;main.c: 775: 
  3538                           	movlw	01h
  3539  02D1  3001               	bcf	status, 5	;RP0=0, select bank0
  3540  02D2  1283               	bcf	status, 6	;RP1=0, select bank0
  3541  02D3  1303               	movwf	(_IsHeatingOn)
  3542  02D4  00E0               	movlw	0
  3543  02D5  3000               	movwf	((_IsHeatingOn))+1
  3544  02D6  00E1               	line	776
  3545                           	
  3546                           l4108:	
  3547  02D7                     ;main.c: 776:         temp = tempBuffer[0] - 48;
  3548                           	movlw	01h
  3549  02D7  3001               	movwf	(_is24Hour)
  3550  02D8  00DE               	movlw	0
  3551  02D9  3000               	movwf	((_is24Hour))+1
  3552  02DA  00DF               	line	778
  3553                           	
  3554                           l4110:	
  3555  02DB                     ;main.c: 778:         temp3 = (temp * 10) + temp2;
  3556                           	movlw	low(0Ch)
  3557  02DB  300C               	fcall	_LCD_Command
  3558  02DC  160A  158A  2633  120A  118A  	line	780
  3559                           	
  3560                           l4112:	
  3561  02E1                     ;main.c: 780: 
  3562                           	movlw	low(01h)
  3563  02E1  3001               	fcall	_LCD_Command
  3564  02E2  160A  158A  2633  120A  118A  	line	782
  3565                           	
  3566                           l4114:	
  3567  02E7                     ;main.c: 782:         tempdec = tempBuffer[2];
  3568                           	movlw	low(03h)
  3569  02E7  3003               	fcall	_LCD_Command
  3570  02E8  160A  158A  2633  120A  118A  	line	784
  3571                           	
  3572                           l4116:	
  3573  02ED                     ;main.c: 784:         previousTemp[1] = tempdec;
  3574                           	movlw	low(038h)
  3575  02ED  3038               	fcall	_LCD_Command
  3576  02EE  160A  158A  2633  120A  118A  	line	785
  3577                           	
  3578                           l4118:	
  3579  02F3                     ;main.c: 785:         previousTemp[2] = tempdectenth;
  3580                           	fcall	_SoundOff
  3581  02F3  160A  158A  260E  120A  118A  	line	787
  3582                           	
  3583                           l4120:	
  3584  02F8                     ;main.c: 787:         Key = Keypad_Scan();
  3585                           	fcall	_RealTimeClock_get_day_of_week
  3586  02F8  160A  158A  27BC  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3587  02FD  1283               	bcf	status, 6	;RP1=0, select bank0
  3588  02FE  1303               	movf	(1+(?_RealTimeClock_get_day_of_week)),w
  3589  02FF  0826               	bsf	status, 5	;RP0=1, select bank1
  3590  0300  1683               	bcf	status, 6	;RP1=0, select bank1
  3591  0301  1303               	movwf	(_day_of_week+1)^080h
  3592  0302  00ED               	bcf	status, 5	;RP0=0, select bank0
  3593  0303  1283               	bcf	status, 6	;RP1=0, select bank0
  3594  0304  1303               	movf	(0+(?_RealTimeClock_get_day_of_week)),w
  3595  0305  0825               	bsf	status, 5	;RP0=1, select bank1
  3596  0306  1683               	bcf	status, 6	;RP1=0, select bank1
  3597  0307  1303               	movwf	(_day_of_week)^080h
  3598  0308  00EC               	line	788
  3599                           	
  3600                           l4122:	
  3601  0309                     ;main.c: 788:         MainScreen();
  3602                           	fcall	_CheckDay
  3603  0309  160A  118A  22A1  120A  118A  	line	789
  3604                           	
  3605                           l4124:	
  3606  030E                     ;main.c: 789: 
  3607                           	fcall	_CheckTime
  3608  030E  120A  158A  21A2  120A  118A  	line	790
  3609                           	
  3610                           l4126:	
  3611  0313                     ;main.c: 790: 
  3612                           	movlw	032h
  3613  0313  3032               	movwf	(Main_Delay@k)
  3614  0314  00F0               	movlw	0
  3615  0315  3000               	movwf	((Main_Delay@k))+1
  3616  0316  00F1               	fcall	_Main_Delay
  3617  0317  160A  118A  2263  120A  118A  	goto	l4128
  3618  031C  2B1D               	line	791
  3619                           ;main.c: 791:         temp = tempBuffer[0] - 48;
  3620                           	
  3621                           l284:	
  3622  031D                     	line	793
  3623                           	
  3624                           l4128:	
  3625  031D                     ;main.c: 792:         temp2 = tempBuffer[1] - 48;;main.c: 793:         temp3 = (temp * 1
                                 0) + temp2;
  3626                           	fcall	_RealTimeClock_get_day_of_week
  3627  031D  160A  158A  27BC  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3628  0322  1283               	bcf	status, 6	;RP1=0, select bank0
  3629  0323  1303               	movf	(1+(?_RealTimeClock_get_day_of_week)),w
  3630  0324  0826               	bsf	status, 5	;RP0=1, select bank1
  3631  0325  1683               	bcf	status, 6	;RP1=0, select bank1
  3632  0326  1303               	movwf	(_day_of_week+1)^080h
  3633  0327  00ED               	bcf	status, 5	;RP0=0, select bank0
  3634  0328  1283               	bcf	status, 6	;RP1=0, select bank0
  3635  0329  1303               	movf	(0+(?_RealTimeClock_get_day_of_week)),w
  3636  032A  0825               	bsf	status, 5	;RP0=1, select bank1
  3637  032B  1683               	bcf	status, 6	;RP1=0, select bank1
  3638  032C  1303               	movwf	(_day_of_week)^080h
  3639  032D  00EC               	line	795
  3640                           	
  3641                           l4130:	
  3642  032E                     ;main.c: 795: 
  3643                           	movlw	low(03h)
  3644  032E  3003               	fcall	_LCD_Command
  3645  032F  160A  158A  2633  120A  118A  	line	798
  3646                           	
  3647                           l4132:	
  3648  0334                     ;main.c: 798: 
  3649                           	bsf	status, 5	;RP0=1, select bank1
  3650  0334  1683               	bcf	status, 6	;RP1=0, select bank1
  3651  0335  1303               	movf	(_tempBuffer)^080h,w
  3652  0336  0855               	addlw	low(-48)
  3653  0337  3ED0               	bcf	status, 5	;RP0=0, select bank0
  3654  0338  1283               	bcf	status, 6	;RP1=0, select bank0
  3655  0339  1303               	movwf	(main@temp)
  3656  033A  00CE               	movlw	high(-48)
  3657  033B  30FF               	skipnc
  3658  033C  1803               	movlw	(high(-48)+1)&0ffh
  3659  033D  3000               	movwf	((main@temp))+1
  3660  033E  00CF               	line	799
  3661                           	
  3662                           l4134:	
  3663  033F                     ;main.c: 799:         if (Key == 1) {
  3664                           	bsf	status, 5	;RP0=1, select bank1
  3665  033F  1683               	bcf	status, 6	;RP1=0, select bank1
  3666  0340  1303               	movf	0+(_tempBuffer)^080h+01h,w
  3667  0341  0856               	addlw	low(-48)
  3668  0342  3ED0               	bcf	status, 5	;RP0=0, select bank0
  3669  0343  1283               	bcf	status, 6	;RP1=0, select bank0
  3670  0344  1303               	movwf	(main@temp2)
  3671  0345  00D0               	movlw	high(-48)
  3672  0346  30FF               	skipnc
  3673  0347  1803               	movlw	(high(-48)+1)&0ffh
  3674  0348  3000               	movwf	((main@temp2))+1
  3675  0349  00D1               	line	800
  3676                           	
  3677                           l4136:	
  3678  034A                     ;main.c: 800:             ChangeTrigger(Key);
  3679                           	movf	(main@temp+1),w
  3680  034A  084F               	movwf	(___wmul@multiplier+1)
  3681  034B  00F1               	movf	(main@temp),w
  3682  034C  084E               	movwf	(___wmul@multiplier)
  3683  034D  00F0               	movlw	0Ah
  3684  034E  300A               	movwf	(___wmul@multiplicand)
  3685  034F  00F2               	movlw	0
  3686  0350  3000               	movwf	((___wmul@multiplicand))+1
  3687  0351  00F3               	fcall	___wmul
  3688  0352  160A  118A  212A  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3689  0357  1283               	bcf	status, 6	;RP1=0, select bank0
  3690  0358  1303               	movf	(main@temp2),w
  3691  0359  0850               	addwf	(0+(?___wmul)),w
  3692  035A  0770               	movwf	(main@temp3)
  3693  035B  00D2               	movf	(main@temp2+1),w
  3694  035C  0851               	skipnc
  3695  035D  1803               	incf	(main@temp2+1),w
  3696  035E  0A51               	addwf	(1+(?___wmul)),w
  3697  035F  0771               	movwf	1+(main@temp3)
  3698  0360  00D3               	line	801
  3699                           	
  3700                           l4138:	
  3701  0361                     ;main.c: 801:         }
  3702                           	movf	(main@temp3+1),w
  3703  0361  0853               	bsf	status, 5	;RP0=1, select bank1
  3704  0362  1683               	bcf	status, 6	;RP1=0, select bank1
  3705  0363  1303               	movwf	(_previousTemp+1)^080h
  3706  0364  00DC               	bcf	status, 5	;RP0=0, select bank0
  3707  0365  1283               	bcf	status, 6	;RP1=0, select bank0
  3708  0366  1303               	movf	(main@temp3),w
  3709  0367  0852               	bsf	status, 5	;RP0=1, select bank1
  3710  0368  1683               	bcf	status, 6	;RP1=0, select bank1
  3711  0369  1303               	movwf	(_previousTemp)^080h
  3712  036A  00DB               	line	804
  3713                           	
  3714                           l4140:	
  3715  036B                     ;main.c: 804:             DateDayScreen(Key);
  3716                           	movf	0+(_tempBuffer)^080h+02h,w
  3717  036B  0857               	bcf	status, 5	;RP0=0, select bank0
  3718  036C  1283               	bcf	status, 6	;RP1=0, select bank0
  3719  036D  1303               	movwf	(??_main+0)+0
  3720  036E  00C8               	clrf	(??_main+0)+0+1
  3721  036F  01C9               	movf	0+(??_main+0)+0,w
  3722  0370  0848               	movwf	(main@tempdec)
  3723  0371  00CA               	movf	1+(??_main+0)+0,w
  3724  0372  0849               	movwf	(main@tempdec+1)
  3725  0373  00CB               	line	805
  3726                           	
  3727                           l4142:	
  3728  0374                     ;main.c: 805:         }
  3729                           	bsf	status, 5	;RP0=1, select bank1
  3730  0374  1683               	bcf	status, 6	;RP1=0, select bank1
  3731  0375  1303               	movf	0+(_tempBuffer)^080h+03h,w
  3732  0376  0858               	bcf	status, 5	;RP0=0, select bank0
  3733  0377  1283               	bcf	status, 6	;RP1=0, select bank0
  3734  0378  1303               	movwf	(??_main+0)+0
  3735  0379  00C8               	clrf	(??_main+0)+0+1
  3736  037A  01C9               	movf	0+(??_main+0)+0,w
  3737  037B  0848               	movwf	(main@tempdectenth)
  3738  037C  00CC               	movf	1+(??_main+0)+0,w
  3739  037D  0849               	movwf	(main@tempdectenth+1)
  3740  037E  00CD               	line	806
  3741                           	
  3742                           l4144:	
  3743  037F                     ;main.c: 806: 
  3744                           	movf	(main@tempdec+1),w
  3745  037F  084B               	bsf	status, 5	;RP0=1, select bank1
  3746  0380  1683               	bcf	status, 6	;RP1=0, select bank1
  3747  0381  1303               	movwf	1+(_previousTemp)^080h+02h
  3748  0382  00DE               	bcf	status, 5	;RP0=0, select bank0
  3749  0383  1283               	bcf	status, 6	;RP1=0, select bank0
  3750  0384  1303               	movf	(main@tempdec),w
  3751  0385  084A               	bsf	status, 5	;RP0=1, select bank1
  3752  0386  1683               	bcf	status, 6	;RP1=0, select bank1
  3753  0387  1303               	movwf	0+(_previousTemp)^080h+02h
  3754  0388  00DD               	line	807
  3755                           	
  3756                           l4146:	
  3757  0389                     ;main.c: 807:         if (Key == 7) {
  3758                           	bcf	status, 5	;RP0=0, select bank0
  3759  0389  1283               	bcf	status, 6	;RP1=0, select bank0
  3760  038A  1303               	movf	(main@tempdectenth+1),w
  3761  038B  084D               	bsf	status, 5	;RP0=1, select bank1
  3762  038C  1683               	bcf	status, 6	;RP1=0, select bank1
  3763  038D  1303               	movwf	1+(_previousTemp)^080h+04h
  3764  038E  00E0               	bcf	status, 5	;RP0=0, select bank0
  3765  038F  1283               	bcf	status, 6	;RP1=0, select bank0
  3766  0390  1303               	movf	(main@tempdectenth),w
  3767  0391  084C               	bsf	status, 5	;RP0=1, select bank1
  3768  0392  1683               	bcf	status, 6	;RP1=0, select bank1
  3769  0393  1303               	movwf	0+(_previousTemp)^080h+04h
  3770  0394  00DF               	line	809
  3771                           	
  3772                           l4148:	
  3773  0395                     ;main.c: 809:         }
  3774                           	fcall	_Keypad_Scan
  3775  0395  120A  118A  20E5  120A  118A  	movf	(1+(?_Keypad_Scan)),w
  3776  039A  0877               	bcf	status, 5	;RP0=0, select bank0
  3777  039B  1283               	bcf	status, 6	;RP1=0, select bank0
  3778  039C  1303               	movwf	(main@Key+1)
  3779  039D  00D5               	movf	(0+(?_Keypad_Scan)),w
  3780  039E  0876               	movwf	(main@Key)
  3781  039F  00D4               	line	810
  3782                           	
  3783                           l4150:	
  3784  03A0                     ;main.c: 810: 
  3785                           	fcall	_MainScreen
  3786  03A0  160A  118A  2184  120A  118A  	line	813
  3787                           	
  3788                           l4152:	
  3789  03A5                     ;main.c: 813:         }
  3790                           	bsf	status, 5	;RP0=1, select bank1
  3791  03A5  1683               	bcf	status, 6	;RP1=0, select bank1
  3792  03A6  1303               	movf	(_tempBuffer)^080h,w
  3793  03A7  0855               	addlw	low(-48)
  3794  03A8  3ED0               	bcf	status, 5	;RP0=0, select bank0
  3795  03A9  1283               	bcf	status, 6	;RP1=0, select bank0
  3796  03AA  1303               	movwf	(main@temp)
  3797  03AB  00CE               	movlw	high(-48)
  3798  03AC  30FF               	skipnc
  3799  03AD  1803               	movlw	(high(-48)+1)&0ffh
  3800  03AE  3000               	movwf	((main@temp))+1
  3801  03AF  00CF               	line	814
  3802                           	
  3803                           l4154:	
  3804  03B0                     ;main.c: 814: 
  3805                           	bsf	status, 5	;RP0=1, select bank1
  3806  03B0  1683               	bcf	status, 6	;RP1=0, select bank1
  3807  03B1  1303               	movf	0+(_tempBuffer)^080h+01h,w
  3808  03B2  0856               	addlw	low(-48)
  3809  03B3  3ED0               	bcf	status, 5	;RP0=0, select bank0
  3810  03B4  1283               	bcf	status, 6	;RP1=0, select bank0
  3811  03B5  1303               	movwf	(main@temp2)
  3812  03B6  00D0               	movlw	high(-48)
  3813  03B7  30FF               	skipnc
  3814  03B8  1803               	movlw	(high(-48)+1)&0ffh
  3815  03B9  3000               	movwf	((main@temp2))+1
  3816  03BA  00D1               	line	815
  3817                           ;main.c: 815:         if(Key == 8)
  3818                           	movf	(main@temp+1),w
  3819  03BB  084F               	movwf	(___wmul@multiplier+1)
  3820  03BC  00F1               	movf	(main@temp),w
  3821  03BD  084E               	movwf	(___wmul@multiplier)
  3822  03BE  00F0               	movlw	0Ah
  3823  03BF  300A               	movwf	(___wmul@multiplicand)
  3824  03C0  00F2               	movlw	0
  3825  03C1  3000               	movwf	((___wmul@multiplicand))+1
  3826  03C2  00F3               	fcall	___wmul
  3827  03C3  160A  118A  212A  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3828  03C8  1283               	bcf	status, 6	;RP1=0, select bank0
  3829  03C9  1303               	movf	(main@temp2),w
  3830  03CA  0850               	addwf	(0+(?___wmul)),w
  3831  03CB  0770               	movwf	(main@temp3)
  3832  03CC  00D2               	movf	(main@temp2+1),w
  3833  03CD  0851               	skipnc
  3834  03CE  1803               	incf	(main@temp2+1),w
  3835  03CF  0A51               	addwf	(1+(?___wmul)),w
  3836  03D0  0771               	movwf	1+(main@temp3)
  3837  03D1  00D3               	line	818
  3838                           	
  3839                           l4156:	
  3840  03D2                     ;main.c: 818:         }
  3841                           	bsf	status, 5	;RP0=1, select bank1
  3842  03D2  1683               	bcf	status, 6	;RP1=0, select bank1
  3843  03D3  1303               	movf	0+(_tempBuffer)^080h+03h,w
  3844  03D4  0858               	bcf	status, 5	;RP0=0, select bank0
  3845  03D5  1283               	bcf	status, 6	;RP1=0, select bank0
  3846  03D6  1303               	movwf	(??_main+0)+0
  3847  03D7  00C8               	clrf	(??_main+0)+0+1
  3848  03D8  01C9               	movf	0+(??_main+0)+0,w
  3849  03D9  0848               	movwf	(main@tempdec)
  3850  03DA  00CA               	movf	1+(??_main+0)+0,w
  3851  03DB  0849               	movwf	(main@tempdec+1)
  3852  03DC  00CB               	line	819
  3853                           	
  3854                           l4158:	
  3855  03DD                     ;main.c: 819: 
  3856                           	bsf	status, 5	;RP0=1, select bank1
  3857  03DD  1683               	bcf	status, 6	;RP1=0, select bank1
  3858  03DE  1303               	movf	0+(_tempBuffer)^080h+04h,w
  3859  03DF  0859               	bcf	status, 5	;RP0=0, select bank0
  3860  03E0  1283               	bcf	status, 6	;RP1=0, select bank0
  3861  03E1  1303               	movwf	(??_main+0)+0
  3862  03E2  00C8               	clrf	(??_main+0)+0+1
  3863  03E3  01C9               	movf	0+(??_main+0)+0,w
  3864  03E4  0848               	movwf	(main@tempdectenth)
  3865  03E5  00CC               	movf	1+(??_main+0)+0,w
  3866  03E6  0849               	movwf	(main@tempdectenth+1)
  3867  03E7  00CD               	line	821
  3868                           	
  3869                           l4160:	
  3870  03E8                     ;main.c: 821:         {
  3871                           		decf	((main@Key)),w
  3872  03E8  0354               iorwf	((main@Key+1)),w
  3873  03E9  0455               	btfss	status,2
  3874  03EA  1D03               	goto	u3301
  3875  03EB  2BED               	goto	u3300
  3876  03EC  2BEE               u3301:
  3877  03ED                     	goto	l4164
  3878  03ED  2BF5               u3300:
  3879  03EE                     	line	822
  3880                           	
  3881                           l4162:	
  3882  03EE                     ;main.c: 822:             SetDate(Key);
  3883                           	movf	(main@Key),w
  3884  03EE  0854               	fcall	_ChangeTrigger
  3885  03EF  120A  158A  2374  120A  118A  	goto	l4164
  3886  03F4  2BF5               	line	823
  3887                           ;main.c: 823:         }
  3888                           	
  3889                           l285:	
  3890  03F5                     	line	825
  3891                           	
  3892                           l4164:	
  3893  03F5                     ;main.c: 825:         if (temp3 >= triggerTemp[0]) {
  3894                           		movlw	6
  3895  03F5  3006               	bcf	status, 5	;RP0=0, select bank0
  3896  03F6  1283               	bcf	status, 6	;RP1=0, select bank0
  3897  03F7  1303               	xorwf	((main@Key)),w
  3898  03F8  0654               iorwf	((main@Key+1)),w
  3899  03F9  0455               	btfss	status,2
  3900  03FA  1D03               	goto	u3311
  3901  03FB  2BFD               	goto	u3310
  3902  03FC  2BFE               u3311:
  3903  03FD                     	goto	l4168
  3904  03FD  2C08               u3310:
  3905  03FE                     	line	826
  3906                           	
  3907                           l4166:	
  3908  03FE                     ;main.c: 826:             IsHeatingOn = 0;
  3909                           	movf	(main@Key+1),w
  3910  03FE  0855               	movwf	(DateDayScreen@Key+1)
  3911  03FF  00B2               	movf	(main@Key),w
  3912  0400  0854               	movwf	(DateDayScreen@Key)
  3913  0401  00B1               	fcall	_DateDayScreen
  3914  0402  160A  118A  26AE  120A  118A  	goto	l4168
  3915  0407  2C08               	line	827
  3916                           ;main.c: 827:             HeatingControlOff(Key, temp, temp2, temp3);
  3917                           	
  3918                           l286:	
  3919  0408                     	line	829
  3920                           	
  3921                           l4168:	
  3922  0408                     ;main.c: 829:         if (temp3 <= triggerTemp[0] && temp3 < previousTemp[0] && IsHeatin
                                 gOn == 1 && DisableAlarm == 0) {
  3923                           		movlw	7
  3924  0408  3007               	bcf	status, 5	;RP0=0, select bank0
  3925  0409  1283               	bcf	status, 6	;RP1=0, select bank0
  3926  040A  1303               	xorwf	((main@Key)),w
  3927  040B  0654               iorwf	((main@Key+1)),w
  3928  040C  0455               	btfss	status,2
  3929  040D  1D03               	goto	u3321
  3930  040E  2C10               	goto	u3320
  3931  040F  2C11               u3321:
  3932  0410                     	goto	l4172
  3933  0410  2C1B               u3320:
  3934  0411                     	line	830
  3935                           	
  3936                           l4170:	
  3937  0411                     ;main.c: 830:             SoundAlarm(Key, temp, temp2, temp3);
  3938                           	movf	(main@Key+1),w
  3939  0411  0855               	movwf	(SwapToHeatingDisplay@Key+1)
  3940  0412  00F9               	movf	(main@Key),w
  3941  0413  0854               	movwf	(SwapToHeatingDisplay@Key)
  3942  0414  00F8               	fcall	_SwapToHeatingDisplay
  3943  0415  160A  118A  263B  120A  118A  	goto	l4172
  3944  041A  2C1B               	line	831
  3945                           ;main.c: 831:         }
  3946                           	
  3947                           l287:	
  3948  041B                     	line	833
  3949                           	
  3950                           l4172:	
  3951  041B                     ;main.c: 833:         CheckTime();
  3952                           		movlw	9
  3953  041B  3009               	bcf	status, 5	;RP0=0, select bank0
  3954  041C  1283               	bcf	status, 6	;RP1=0, select bank0
  3955  041D  1303               	xorwf	((main@Key)),w
  3956  041E  0654               iorwf	((main@Key+1)),w
  3957  041F  0455               	btfss	status,2
  3958  0420  1D03               	goto	u3331
  3959  0421  2C23               	goto	u3330
  3960  0422  2C24               u3331:
  3961  0423                     	goto	l4176
  3962  0423  2C2E               u3330:
  3963  0424                     	line	834
  3964                           	
  3965                           l4174:	
  3966  0424                     ;main.c: 834:     }
  3967                           	movf	(main@Key+1),w
  3968  0424  0855               	movwf	(SetTime@Key+1)
  3969  0425  00A8               	movf	(main@Key),w
  3970  0426  0854               	movwf	(SetTime@Key)
  3971  0427  00A7               	fcall	_SetTime
  3972  0428  120A  118A  24D8  120A  118A  	goto	l4176
  3973  042D  2C2E               	line	835
  3974                           ;main.c: 835: }
  3975                           	
  3976                           l288:	
  3977  042E                     	line	837
  3978                           	
  3979                           l4176:	
  3980  042E                     		movlw	8
  3981  042E  3008               	bcf	status, 5	;RP0=0, select bank0
  3982  042F  1283               	bcf	status, 6	;RP1=0, select bank0
  3983  0430  1303               	xorwf	((main@Key)),w
  3984  0431  0654               iorwf	((main@Key+1)),w
  3985  0432  0455               	btfss	status,2
  3986  0433  1D03               	goto	u3341
  3987  0434  2C36               	goto	u3340
  3988  0435  2C37               u3341:
  3989  0436                     	goto	l4180
  3990  0436  2C41               u3340:
  3991  0437                     	line	839
  3992                           	
  3993                           l4178:	
  3994  0437                     	movf	(main@Key+1),w
  3995  0437  0855               	movwf	(Switch24Hour@Key+1)
  3996  0438  00F8               	movf	(main@Key),w
  3997  0439  0854               	movwf	(Switch24Hour@Key)
  3998  043A  00F7               	fcall	_Switch24Hour
  3999  043B  160A  118A  21B7  120A  118A  	goto	l4180
  4000  0440  2C41               	line	840
  4001                           	
  4002                           l289:	
  4003  0441                     	line	842
  4004                           	
  4005                           l4180:	
  4006  0441                     		movlw	13
  4007  0441  300D               	bcf	status, 5	;RP0=0, select bank0
  4008  0442  1283               	bcf	status, 6	;RP1=0, select bank0
  4009  0443  1303               	xorwf	((main@Key)),w
  4010  0444  0654               iorwf	((main@Key+1)),w
  4011  0445  0455               	btfss	status,2
  4012  0446  1D03               	goto	u3351
  4013  0447  2C49               	goto	u3350
  4014  0448  2C4A               u3351:
  4015  0449                     	goto	l4184
  4016  0449  2C54               u3350:
  4017  044A                     	line	844
  4018                           	
  4019                           l4182:	
  4020  044A                     	movf	(main@Key+1),w
  4021  044A  0855               	movwf	(SetDate@Key+1)
  4022  044B  00A8               	movf	(main@Key),w
  4023  044C  0854               	movwf	(SetDate@Key)
  4024  044D  00A7               	fcall	_SetDate
  4025  044E  120A  158A  24E1  120A  118A  	goto	l4184
  4026  0453  2C54               	line	845
  4027                           	
  4028                           l290:	
  4029  0454                     	line	847
  4030                           	
  4031                           l4184:	
  4032  0454                     	bcf	status, 5	;RP0=0, select bank0
  4033  0454  1283               	bcf	status, 6	;RP1=0, select bank0
  4034  0455  1303               	movf	(main@temp3+1),w
  4035  0456  0853               	xorlw	80h
  4036  0457  3A80               	movwf	(??_main+0)+0
  4037  0458  00C8               	movf	(_triggerTemp+1),w
  4038  0459  086D               	xorlw	80h
  4039  045A  3A80               	subwf	(??_main+0)+0,w
  4040  045B  0248               	skipz
  4041  045C  1D03               	goto	u3365
  4042  045D  2C60               	movf	(_triggerTemp),w
  4043  045E  086C               	subwf	(main@temp3),w
  4044  045F  0252               u3365:
  4045  0460                     
  4046                           	skipc
  4047  0460  1C03               	goto	u3361
  4048  0461  2C63               	goto	u3360
  4049  0462  2C64               u3361:
  4050  0463                     	goto	l4190
  4051  0463  2C7E               u3360:
  4052  0464                     	line	848
  4053                           	
  4054                           l4186:	
  4055  0464                     	bcf	status, 5	;RP0=0, select bank0
  4056  0464  1283               	bcf	status, 6	;RP1=0, select bank0
  4057  0465  1303               	clrf	(_IsHeatingOn)
  4058  0466  01E0               	clrf	(_IsHeatingOn+1)
  4059  0467  01E1               	line	849
  4060                           	
  4061                           l4188:	
  4062  0468                     	movf	(main@Key+1),w
  4063  0468  0855               	movwf	(HeatingControlOff@Key+1)
  4064  0469  00B2               	movf	(main@Key),w
  4065  046A  0854               	movwf	(HeatingControlOff@Key)
  4066  046B  00B1               	movf	(main@temp+1),w
  4067  046C  084F               	movwf	(HeatingControlOff@temp+1)
  4068  046D  00B4               	movf	(main@temp),w
  4069  046E  084E               	movwf	(HeatingControlOff@temp)
  4070  046F  00B3               	movf	(main@temp2+1),w
  4071  0470  0851               	movwf	(HeatingControlOff@temp2+1)
  4072  0471  00B6               	movf	(main@temp2),w
  4073  0472  0850               	movwf	(HeatingControlOff@temp2)
  4074  0473  00B5               	movf	(main@temp3+1),w
  4075  0474  0853               	movwf	(HeatingControlOff@temp3+1)
  4076  0475  00B8               	movf	(main@temp3),w
  4077  0476  0852               	movwf	(HeatingControlOff@temp3)
  4078  0477  00B7               	fcall	_HeatingControlOff
  4079  0478  120A  158A  228A  120A  118A  	goto	l4190
  4080  047D  2C7E               	line	850
  4081                           	
  4082                           l291:	
  4083  047E                     	line	851
  4084                           	
  4085                           l4190:	
  4086  047E                     	bcf	status, 5	;RP0=0, select bank0
  4087  047E  1283               	bcf	status, 6	;RP1=0, select bank0
  4088  047F  1303               	movf	(_triggerTemp+1),w
  4089  0480  086D               	xorlw	80h
  4090  0481  3A80               	movwf	(??_main+0)+0
  4091  0482  00C8               	movf	(main@temp3+1),w
  4092  0483  0853               	xorlw	80h
  4093  0484  3A80               	subwf	(??_main+0)+0,w
  4094  0485  0248               	skipz
  4095  0486  1D03               	goto	u3375
  4096  0487  2C8A               	movf	(main@temp3),w
  4097  0488  0852               	subwf	(_triggerTemp),w
  4098  0489  026C               u3375:
  4099  048A                     
  4100                           	skipc
  4101  048A  1C03               	goto	u3371
  4102  048B  2C8D               	goto	u3370
  4103  048C  2C8E               u3371:
  4104  048D                     	goto	l4200
  4105  048D  2CCE               u3370:
  4106  048E                     	
  4107                           l4192:	
  4108  048E                     	bcf	status, 5	;RP0=0, select bank0
  4109  048E  1283               	bcf	status, 6	;RP1=0, select bank0
  4110  048F  1303               	movf	(main@temp3+1),w
  4111  0490  0853               	xorlw	80h
  4112  0491  3A80               	movwf	(??_main+0)+0
  4113  0492  00C8               	bsf	status, 5	;RP0=1, select bank1
  4114  0493  1683               	bcf	status, 6	;RP1=0, select bank1
  4115  0494  1303               	movf	(_previousTemp+1)^080h,w
  4116  0495  085C               	xorlw	80h
  4117  0496  3A80               	bcf	status, 5	;RP0=0, select bank0
  4118  0497  1283               	bcf	status, 6	;RP1=0, select bank0
  4119  0498  1303               	subwf	(??_main+0)+0,w
  4120  0499  0248               	skipz
  4121  049A  1D03               	goto	u3385
  4122  049B  2CA2               	bsf	status, 5	;RP0=1, select bank1
  4123  049C  1683               	bcf	status, 6	;RP1=0, select bank1
  4124  049D  1303               	movf	(_previousTemp)^080h,w
  4125  049E  085B               	bcf	status, 5	;RP0=0, select bank0
  4126  049F  1283               	bcf	status, 6	;RP1=0, select bank0
  4127  04A0  1303               	subwf	(main@temp3),w
  4128  04A1  0252               u3385:
  4129  04A2                     
  4130                           	skipnc
  4131  04A2  1803               	goto	u3381
  4132  04A3  2CA5               	goto	u3380
  4133  04A4  2CA6               u3381:
  4134  04A5                     	goto	l4200
  4135  04A5  2CCE               u3380:
  4136  04A6                     	
  4137                           l4194:	
  4138  04A6                     	bcf	status, 5	;RP0=0, select bank0
  4139  04A6  1283               	bcf	status, 6	;RP1=0, select bank0
  4140  04A7  1303               		decf	((_IsHeatingOn)),w
  4141  04A8  0360               iorwf	((_IsHeatingOn+1)),w
  4142  04A9  0461               	btfss	status,2
  4143  04AA  1D03               	goto	u3391
  4144  04AB  2CAD               	goto	u3390
  4145  04AC  2CAE               u3391:
  4146  04AD                     	goto	l4200
  4147  04AD  2CCE               u3390:
  4148  04AE                     	
  4149                           l4196:	
  4150  04AE                     	bsf	status, 5	;RP0=1, select bank1
  4151  04AE  1683               	bcf	status, 6	;RP1=0, select bank1
  4152  04AF  1303               	movf	((_DisableAlarm)^080h),w
  4153  04B0  086E               iorwf	((_DisableAlarm+1)^080h),w
  4154  04B1  046F               	btfss	status,2
  4155  04B2  1D03               	goto	u3401
  4156  04B3  2CB5               	goto	u3400
  4157  04B4  2CB6               u3401:
  4158  04B5                     	goto	l4200
  4159  04B5  2CCE               u3400:
  4160  04B6                     	line	852
  4161                           	
  4162                           l4198:	
  4163  04B6                     	bcf	status, 5	;RP0=0, select bank0
  4164  04B6  1283               	bcf	status, 6	;RP1=0, select bank0
  4165  04B7  1303               	movf	(main@Key+1),w
  4166  04B8  0855               	movwf	(SoundAlarm@Key+1)
  4167  04B9  00BD               	movf	(main@Key),w
  4168  04BA  0854               	movwf	(SoundAlarm@Key)
  4169  04BB  00BC               	movf	(main@temp+1),w
  4170  04BC  084F               	movwf	(SoundAlarm@temp+1)
  4171  04BD  00BF               	movf	(main@temp),w
  4172  04BE  084E               	movwf	(SoundAlarm@temp)
  4173  04BF  00BE               	movf	(main@temp2+1),w
  4174  04C0  0851               	movwf	(SoundAlarm@temp2+1)
  4175  04C1  00C1               	movf	(main@temp2),w
  4176  04C2  0850               	movwf	(SoundAlarm@temp2)
  4177  04C3  00C0               	movf	(main@temp3+1),w
  4178  04C4  0853               	movwf	(SoundAlarm@temp3+1)
  4179  04C5  00C3               	movf	(main@temp3),w
  4180  04C6  0852               	movwf	(SoundAlarm@temp3)
  4181  04C7  00C2               	fcall	_SoundAlarm
  4182  04C8  160A  118A  272D  120A  118A  	goto	l4200
  4183  04CD  2CCE               	line	853
  4184                           	
  4185                           l292:	
  4186  04CE                     	line	855
  4187                           	
  4188                           l4200:	
  4189  04CE                     	fcall	_CheckTime
  4190  04CE  120A  158A  21A2  120A  118A  	goto	l4128
  4191  04D3  2B1D               	line	856
  4192                           	
  4193                           l293:	
  4194  04D4                     	goto	l4128
  4195  04D4  2B1D               	
  4196                           l294:	
  4197  04D5                     	line	857
  4198                           	
  4199                           l295:	
  4200  04D5                     	global	start
  4201                           	ljmp	start
  4202  04D5  120A  118A  2800   	opt stack 0
  4203                           GLOBAL	__end_of_main
  4204                           	__end_of_main:
  4205  04D8                     	signat	_main,89
  4206                           	global	_Thermometer_Init
  4207                           
  4208 ;; *************** function _Thermometer_Init *****************
  4209 ;; Defined at:
  4210 ;;		line 37 in file "Thermometer.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4224 ;;      Params:         0       0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0
  4227 ;;      Totals:         0       0       0       0       0
  4228 ;;Total ram usage:        0 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_main
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4237                           	file	"Thermometer.c"
  4238                           	line	37
  4239                           global __ptext1
  4240                           __ptext1:	;psect for function _Thermometer_Init
  4241  1E24                     psect	text1
  4242                           	file	"Thermometer.c"
  4243                           	line	37
  4244                           	global	__size_of_Thermometer_Init
  4245                           	__size_of_Thermometer_Init	equ	__end_of_Thermometer_Init-_Thermometer_Init
  4246  0007                     	
  4247                           _Thermometer_Init:	
  4248  1E24                     ;incstack = 0
  4249                           	opt	stack 7
  4250                           ; Regs used in _Thermometer_Init: [wreg+status,2]
  4251                           	line	39
  4252                           	
  4253                           l4066:	
  4254  1E24                     ;Thermometer.c: 39:   ADCON1=0X07;
  4255                           	movlw	low(07h)
  4256  1E24  3007               	bsf	status, 5	;RP0=1, select bank1
  4257  1E25  1683               	bcf	status, 6	;RP1=0, select bank1
  4258  1E26  1303               	movwf	(159)^080h	;volatile
  4259  1E27  009F               	line	40
  4260                           	
  4261                           l4068:	
  4262  1E28                     ;Thermometer.c: 40:   TRISA=0X00;
  4263                           	clrf	(133)^080h	;volatile
  4264  1E28  0185               	line	41
  4265                           	
  4266                           l4070:	
  4267  1E29                     ;Thermometer.c: 41:   TRISD=0X00;
  4268                           	clrf	(136)^080h	;volatile
  4269  1E29  0188               	line	42
  4270                           	
  4271                           l587:	
  4272  1E2A                     	return
  4273  1E2A  0008               	opt stack 0
  4274                           GLOBAL	__end_of_Thermometer_Init
  4275                           	__end_of_Thermometer_Init:
  4276  1E2B                     	signat	_Thermometer_Init,89
  4277                           	global	_Switch24Hour
  4278                           
  4279 ;; *************** function _Switch24Hour *****************
  4280 ;; Defined at:
  4281 ;;		line 402 in file "main.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;  Key             2    7[COMMON] int 
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  c               1   10[COMMON] unsigned char 
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  1    wreg      void 
  4288 ;; Registers used:
  4289 ;;		wreg, status,2, status,0, pclath, cstack
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4295 ;;      Params:         2       0       0       0       0
  4296 ;;      Locals:         1       0       0       0       0
  4297 ;;      Temps:          1       0       0       0       0
  4298 ;;      Totals:         4       0       0       0       0
  4299 ;;Total ram usage:        4 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; Hardware stack levels required when called:    2
  4302 ;; This function calls:
  4303 ;;		_LCD_Command
  4304 ;;		_LCD_SendData
  4305 ;;		___awmod
  4306 ;; This function is called by:
  4307 ;;		_main
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4311                           	file	"main.c"
  4312                           	line	402
  4313                           global __ptext2
  4314                           __ptext2:	;psect for function _Switch24Hour
  4315  11B7                     psect	text2
  4316                           	file	"main.c"
  4317                           	line	402
  4318                           	global	__size_of_Switch24Hour
  4319                           	__size_of_Switch24Hour	equ	__end_of_Switch24Hour-_Switch24Hour
  4320  0036                     	
  4321                           _Switch24Hour:	
  4322  11B7                     ;incstack = 0
  4323                           	opt	stack 5
  4324                           ; Regs used in _Switch24Hour: [wreg+status,2+status,0+pclath+cstack]
  4325                           	line	404
  4326                           	
  4327                           l3772:	
  4328  11B7                     ;main.c: 402:     while(1);main.c: 403:     {;main.c: 404:         Key = Keypad_Scan();

  4329                           	movlw	low(01h)
  4330  11B7  3001               	fcall	_LCD_Command
  4331  11B8  160A  158A  2633  160A  118A  	line	405
  4332                           ;main.c: 405:         LCD_Command(0x03);
  4333                           	movlw	0Ah
  4334  11BD  300A               	movwf	(___awmod@divisor)
  4335  11BE  00F0               	movlw	0
  4336  11BF  3000               	movwf	((___awmod@divisor))+1
  4337  11C0  00F1               	bcf	status, 5	;RP0=0, select bank0
  4338  11C1  1283               	bcf	status, 6	;RP1=0, select bank0
  4339  11C2  1303               	movf	(_is24Hour+1),w
  4340  11C3  085F               	movwf	(___awmod@dividend+1)
  4341  11C4  00F3               	movf	(_is24Hour),w
  4342  11C5  085E               	movwf	(___awmod@dividend)
  4343  11C6  00F2               	fcall	___awmod
  4344  11C7  160A  118A  2567  160A  118A  	movf	(0+(?___awmod)),w
  4345  11CC  0870               	movwf	(??_Switch24Hour+0)+0
  4346  11CD  00F9               	movf	(??_Switch24Hour+0)+0,w
  4347  11CE  0879               	movwf	(Switch24Hour@c)
  4348  11CF  00FA               	line	406
  4349                           ;main.c: 406:         LCD_SendString(date);
  4350                           	
  4351                           l174:	
  4352  11D0                     	line	408
  4353                           ;main.c: 407:         DisplayDate();;main.c: 408:         LCD_SecondLine();
  4354                           	movlw	low(03h)
  4355  11D0  3003               	fcall	_LCD_Command
  4356  11D1  160A  158A  2633  160A  118A  	line	409
  4357                           ;main.c: 409:         LCD_SendString(day);
  4358                           	movf	(Switch24Hour@c),w
  4359  11D6  087A               	fcall	_LCD_SendData
  4360  11D7  160A  158A  2642  160A  118A  	line	410
  4361                           	
  4362                           l3774:	
  4363  11DC                     ;main.c: 410:         DisplayDay();
  4364                           		movlw	8
  4365  11DC  3008               	xorwf	((Switch24Hour@Key)),w
  4366  11DD  0677               iorwf	((Switch24Hour@Key+1)),w
  4367  11DE  0478               	btfss	status,2
  4368  11DF  1D03               	goto	u3011
  4369  11E0  29E2               	goto	u3010
  4370  11E1  29E3               u3011:
  4371  11E2                     	goto	l174
  4372  11E2  29D0               u3010:
  4373  11E3                     	line	412
  4374                           	
  4375                           l3776:	
  4376  11E3                     ;main.c: 411:         if (Key == 1);main.c: 412:         {
  4377                           	movlw	low(01h)
  4378  11E3  3001               	fcall	_LCD_Command
  4379  11E4  160A  158A  2633  160A  118A  	line	413
  4380                           ;main.c: 413:             ChangeTrigger(Key);
  4381                           	goto	l178
  4382  11E9  29EC               	line	414
  4383                           ;main.c: 414:         }
  4384                           	
  4385                           l175:	
  4386  11EA                     	goto	l174
  4387  11EA  29D0               	line	415
  4388                           ;main.c: 415:         if (Key == 6)
  4389                           	
  4390                           l177:	
  4391  11EB                     	goto	l174
  4392  11EB  29D0               	
  4393                           l176:	
  4394  11EC                     	line	416
  4395                           	
  4396                           l178:	
  4397  11EC                     	return
  4398  11EC  0008               	opt stack 0
  4399                           GLOBAL	__end_of_Switch24Hour
  4400                           	__end_of_Switch24Hour:
  4401  11ED                     	signat	_Switch24Hour,4217
  4402                           	global	_SoundAlarm
  4403                           
  4404 ;; *************** function _SoundAlarm *****************
  4405 ;; Defined at:
  4406 ;;		line 355 in file "main.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  Key             2   28[BANK0 ] int 
  4409 ;;  temp            2   30[BANK0 ] int 
  4410 ;;  temp2           2   32[BANK0 ] int 
  4411 ;;  temp3           2   34[BANK0 ] int 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  Alarm           1   37[BANK0 ] PTR unsigned char 
  4414 ;;		 -> STR_17(16), 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4424 ;;      Params:         0       8       0       0       0
  4425 ;;      Locals:         0       1       0       0       0
  4426 ;;      Temps:          0       1       0       0       0
  4427 ;;      Totals:         0      10       0       0       0
  4428 ;;Total ram usage:       10 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    6
  4431 ;; This function calls:
  4432 ;;		_ChangeTrigger
  4433 ;;		_Get_Temp
  4434 ;;		_HeatingControlOff
  4435 ;;		_Keypad_Scan
  4436 ;;		_LCD_Command
  4437 ;;		_LCD_SendString
  4438 ;;		_SoundOff
  4439 ;;		_SoundOn
  4440 ;;		_SwapToHeatingDisplay
  4441 ;;		___wmul
  4442 ;; This function is called by:
  4443 ;;		_main
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4447                           	line	355
  4448                           global __ptext3
  4449                           __ptext3:	;psect for function _SoundAlarm
  4450  172D                     psect	text3
  4451                           	file	"main.c"
  4452                           	line	355
  4453                           	global	__size_of_SoundAlarm
  4454                           	__size_of_SoundAlarm	equ	__end_of_SoundAlarm-_SoundAlarm
  4455  00D3                     	
  4456                           _SoundAlarm:	
  4457  172D                     ;incstack = 0
  4458                           	opt	stack 1
  4459                           ; Regs used in _SoundAlarm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4460                           	line	358
  4461                           	
  4462                           l3730:	
  4463  172D                     ;main.c: 355:         };main.c: 356: ;main.c: 358:         {
  4464                           	movlw	(low((((STR_17)-__stringbase)|8000h)))&0ffh
  4465  172D  3001               	bcf	status, 5	;RP0=0, select bank0
  4466  172E  1283               	bcf	status, 6	;RP1=0, select bank0
  4467  172F  1303               	movwf	(??_SoundAlarm+0)+0
  4468  1730  00C4               	movf	(??_SoundAlarm+0)+0,w
  4469  1731  0844               	movwf	(SoundAlarm@Alarm)
  4470  1732  00C5               	line	359
  4471                           	
  4472                           l3732:	
  4473  1733                     ;main.c: 359:             SwapToHeatingDisplay(Key);
  4474                           	bsf	status, 5	;RP0=1, select bank1
  4475  1733  1683               	bcf	status, 6	;RP1=0, select bank1
  4476  1734  1303               	clrf	(_DisableAlarm)^080h
  4477  1735  01EE               	clrf	(_DisableAlarm+1)^080h
  4478  1736  01EF               	line	360
  4479                           	
  4480                           l3734:	
  4481  1737                     ;main.c: 360:         }
  4482                           	movlw	low(01h)
  4483  1737  3001               	fcall	_LCD_Command
  4484  1738  160A  158A  2633  160A  118A  	goto	l3736
  4485  173D  2F3E               	line	361
  4486                           ;main.c: 361: 
  4487                           	
  4488                           l164:	
  4489  173E                     	line	363
  4490                           	
  4491                           l3736:	
  4492  173E                     ;main.c: 362:         if(Key == 5);main.c: 363:         {
  4493                           	movlw	low(03h)
  4494  173E  3003               	fcall	_LCD_Command
  4495  173F  160A  158A  2633  160A  118A  	line	364
  4496                           	
  4497                           l3738:	
  4498  1744                     ;main.c: 364:             DisableAlarm = 1;
  4499                           	bcf	status, 5	;RP0=0, select bank0
  4500  1744  1283               	bcf	status, 6	;RP1=0, select bank0
  4501  1745  1303               		movf	(SoundAlarm@Alarm),w
  4502  1746  0845               	movwf	(LCD_SendString@string)
  4503  1747  00F1               	movlw	0
  4504  1748  3000               	btfss	status,2
  4505  1749  1D03               	movlw	080h
  4506  174A  3080               	movwf	(LCD_SendString@string+1)
  4507  174B  00F2               
  4508                           	fcall	_LCD_SendString
  4509  174C  160A  118A  2365  160A  118A  	line	366
  4510                           	
  4511                           l3740:	
  4512  1751                     ;main.c: 366:             LCD_Command(0x01);
  4513                           	fcall	_SoundOn
  4514  1751  160A  158A  2612  160A  118A  	line	368
  4515                           	
  4516                           l3742:	
  4517  1756                     ;main.c: 368:         }
  4518                           	movlw	(low(_tempBuffer|((0x0)<<8)))&0ffh
  4519  1756  30D5               	fcall	_Get_Temp
  4520  1757  120A  158A  2670  160A  118A  	line	369
  4521                           	
  4522                           l3744:	
  4523  175C                     ;main.c: 369: 
  4524                           	bsf	status, 5	;RP0=1, select bank1
  4525  175C  1683               	bcf	status, 6	;RP1=0, select bank1
  4526  175D  1303               	movf	(_tempBuffer)^080h,w
  4527  175E  0855               	addlw	low(-48)
  4528  175F  3ED0               	bcf	status, 5	;RP0=0, select bank0
  4529  1760  1283               	bcf	status, 6	;RP1=0, select bank0
  4530  1761  1303               	movwf	(SoundAlarm@temp)
  4531  1762  00BE               	movlw	high(-48)
  4532  1763  30FF               	skipnc
  4533  1764  1803               	movlw	(high(-48)+1)&0ffh
  4534  1765  3000               	movwf	((SoundAlarm@temp))+1
  4535  1766  00BF               	line	370
  4536                           	
  4537                           l3746:	
  4538  1767                     ;main.c: 370:         if(temp3 > triggerTemp[0])
  4539                           	bsf	status, 5	;RP0=1, select bank1
  4540  1767  1683               	bcf	status, 6	;RP1=0, select bank1
  4541  1768  1303               	movf	0+(_tempBuffer)^080h+01h,w
  4542  1769  0856               	addlw	low(-48)
  4543  176A  3ED0               	bcf	status, 5	;RP0=0, select bank0
  4544  176B  1283               	bcf	status, 6	;RP1=0, select bank0
  4545  176C  1303               	movwf	(SoundAlarm@temp2)
  4546  176D  00C0               	movlw	high(-48)
  4547  176E  30FF               	skipnc
  4548  176F  1803               	movlw	(high(-48)+1)&0ffh
  4549  1770  3000               	movwf	((SoundAlarm@temp2))+1
  4550  1771  00C1               	line	371
  4551                           	
  4552                           l3748:	
  4553  1772                     ;main.c: 371:         {
  4554                           	movf	(SoundAlarm@temp+1),w
  4555  1772  083F               	movwf	(___wmul@multiplier+1)
  4556  1773  00F1               	movf	(SoundAlarm@temp),w
  4557  1774  083E               	movwf	(___wmul@multiplier)
  4558  1775  00F0               	movlw	0Ah
  4559  1776  300A               	movwf	(___wmul@multiplicand)
  4560  1777  00F2               	movlw	0
  4561  1778  3000               	movwf	((___wmul@multiplicand))+1
  4562  1779  00F3               	fcall	___wmul
  4563  177A  160A  118A  212A  160A  118A  	bcf	status, 5	;RP0=0, select bank0
  4564  177F  1283               	bcf	status, 6	;RP1=0, select bank0
  4565  1780  1303               	movf	(SoundAlarm@temp2),w
  4566  1781  0840               	addwf	(0+(?___wmul)),w
  4567  1782  0770               	movwf	(SoundAlarm@temp3)
  4568  1783  00C2               	movf	(SoundAlarm@temp2+1),w
  4569  1784  0841               	skipnc
  4570  1785  1803               	incf	(SoundAlarm@temp2+1),w
  4571  1786  0A41               	addwf	(1+(?___wmul)),w
  4572  1787  0771               	movwf	1+(SoundAlarm@temp3)
  4573  1788  00C3               	line	372
  4574                           	
  4575                           l3750:	
  4576  1789                     ;main.c: 372:             LCD_Command(0x01);
  4577                           	fcall	_Keypad_Scan
  4578  1789  120A  118A  20E5  160A  118A  	movf	(1+(?_Keypad_Scan)),w
  4579  178E  0877               	bcf	status, 5	;RP0=0, select bank0
  4580  178F  1283               	bcf	status, 6	;RP1=0, select bank0
  4581  1790  1303               	movwf	(SoundAlarm@Key+1)
  4582  1791  00BD               	movf	(0+(?_Keypad_Scan)),w
  4583  1792  0876               	movwf	(SoundAlarm@Key)
  4584  1793  00BC               	line	374
  4585                           	
  4586                           l3752:	
  4587  1794                     ;main.c: 374:             break;
  4588                           		decf	((SoundAlarm@Key)),w
  4589  1794  033C               iorwf	((SoundAlarm@Key+1)),w
  4590  1795  043D               	btfss	status,2
  4591  1796  1D03               	goto	u2971
  4592  1797  2F99               	goto	u2970
  4593  1798  2F9A               u2971:
  4594  1799                     	goto	l3756
  4595  1799  2FA1               u2970:
  4596  179A                     	line	376
  4597                           	
  4598                           l3754:	
  4599  179A                     ;main.c: 375:         };main.c: 376:     }
  4600                           	movf	(SoundAlarm@Key),w
  4601  179A  083C               	fcall	_ChangeTrigger
  4602  179B  120A  158A  2374  160A  118A  	goto	l3756
  4603  17A0  2FA1               	line	377
  4604                           ;main.c: 377: }
  4605                           	
  4606                           l165:	
  4607  17A1                     	line	379
  4608                           	
  4609                           l3756:	
  4610  17A1                     ;main.c: 379: 
  4611                           		movlw	7
  4612  17A1  3007               	bcf	status, 5	;RP0=0, select bank0
  4613  17A2  1283               	bcf	status, 6	;RP1=0, select bank0
  4614  17A3  1303               	xorwf	((SoundAlarm@Key)),w
  4615  17A4  063C               iorwf	((SoundAlarm@Key+1)),w
  4616  17A5  043D               	btfss	status,2
  4617  17A6  1D03               	goto	u2981
  4618  17A7  2FA9               	goto	u2980
  4619  17A8  2FAA               u2981:
  4620  17A9                     	goto	l3760
  4621  17A9  2FB4               u2980:
  4622  17AA                     	line	381
  4623                           	
  4624                           l3758:	
  4625  17AA                     ;main.c: 380: void Switch24Hour(int Key);main.c: 381: {
  4626                           	movf	(SoundAlarm@Key+1),w
  4627  17AA  083D               	movwf	(SwapToHeatingDisplay@Key+1)
  4628  17AB  00F9               	movf	(SoundAlarm@Key),w
  4629  17AC  083C               	movwf	(SwapToHeatingDisplay@Key)
  4630  17AD  00F8               	fcall	_SwapToHeatingDisplay
  4631  17AE  160A  118A  263B  160A  118A  	goto	l3760
  4632  17B3  2FB4               	line	382
  4633                           ;main.c: 382:     LCD_Command(0x01);
  4634                           	
  4635                           l166:	
  4636  17B4                     	line	384
  4637                           	
  4638                           l3760:	
  4639  17B4                     ;main.c: 384:     while(1)
  4640                           		movlw	5
  4641  17B4  3005               	bcf	status, 5	;RP0=0, select bank0
  4642  17B5  1283               	bcf	status, 6	;RP1=0, select bank0
  4643  17B6  1303               	xorwf	((SoundAlarm@Key)),w
  4644  17B7  063C               iorwf	((SoundAlarm@Key+1)),w
  4645  17B8  043D               	btfss	status,2
  4646  17B9  1D03               	goto	u2991
  4647  17BA  2FBC               	goto	u2990
  4648  17BB  2FBD               u2991:
  4649  17BC                     	goto	l3766
  4650  17BC  2FCF               u2990:
  4651  17BD                     	line	386
  4652                           	
  4653                           l3762:	
  4654  17BD                     ;main.c: 385:     {;main.c: 386:         LCD_Command(0x03);
  4655                           	movlw	01h
  4656  17BD  3001               	bsf	status, 5	;RP0=1, select bank1
  4657  17BE  1683               	bcf	status, 6	;RP1=0, select bank1
  4658  17BF  1303               	movwf	(_DisableAlarm)^080h
  4659  17C0  00EE               	movlw	0
  4660  17C1  3000               	movwf	((_DisableAlarm)^080h)+1
  4661  17C2  00EF               	line	387
  4662                           	
  4663                           l3764:	
  4664  17C3                     ;main.c: 387:         LCD_SendData(c);
  4665                           	fcall	_SoundOff
  4666  17C3  160A  158A  260E  160A  118A  	line	388
  4667                           ;main.c: 388:         if (Key == 8)
  4668                           	movlw	low(01h)
  4669  17C8  3001               	fcall	_LCD_Command
  4670  17C9  160A  158A  2633  160A  118A  	line	389
  4671                           ;main.c: 389:         {
  4672                           	goto	l171
  4673  17CE  2FFF               	line	390
  4674                           ;main.c: 390:             LCD_Command(0x01);
  4675                           	
  4676                           l167:	
  4677  17CF                     	line	392
  4678                           	
  4679                           l3766:	
  4680  17CF                     ;main.c: 392:         }
  4681                           	bcf	status, 5	;RP0=0, select bank0
  4682  17CF  1283               	bcf	status, 6	;RP1=0, select bank0
  4683  17D0  1303               	movf	(_triggerTemp+1),w
  4684  17D1  086D               	xorlw	80h
  4685  17D2  3A80               	movwf	(??_SoundAlarm+0)+0
  4686  17D3  00C4               	movf	(SoundAlarm@temp3+1),w
  4687  17D4  0843               	xorlw	80h
  4688  17D5  3A80               	subwf	(??_SoundAlarm+0)+0,w
  4689  17D6  0244               	skipz
  4690  17D7  1D03               	goto	u3005
  4691  17D8  2FDB               	movf	(SoundAlarm@temp3),w
  4692  17D9  0842               	subwf	(_triggerTemp),w
  4693  17DA  026C               u3005:
  4694  17DB                     
  4695                           	skipnc
  4696  17DB  1803               	goto	u3001
  4697  17DC  2FDE               	goto	u3000
  4698  17DD  2FDF               u3001:
  4699  17DE                     	goto	l3736
  4700  17DE  2F3E               u3000:
  4701  17DF                     	line	394
  4702                           	
  4703                           l3768:	
  4704  17DF                     ;main.c: 393:     };main.c: 394: }
  4705                           	movlw	low(01h)
  4706  17DF  3001               	fcall	_LCD_Command
  4707  17E0  160A  158A  2633  160A  118A  	line	395
  4708                           	
  4709                           l3770:	
  4710  17E5                     ;main.c: 395: 
  4711                           	bcf	status, 5	;RP0=0, select bank0
  4712  17E5  1283               	bcf	status, 6	;RP1=0, select bank0
  4713  17E6  1303               	movf	(SoundAlarm@Key+1),w
  4714  17E7  083D               	movwf	(HeatingControlOff@Key+1)
  4715  17E8  00B2               	movf	(SoundAlarm@Key),w
  4716  17E9  083C               	movwf	(HeatingControlOff@Key)
  4717  17EA  00B1               	movf	(SoundAlarm@temp+1),w
  4718  17EB  083F               	movwf	(HeatingControlOff@temp+1)
  4719  17EC  00B4               	movf	(SoundAlarm@temp),w
  4720  17ED  083E               	movwf	(HeatingControlOff@temp)
  4721  17EE  00B3               	movf	(SoundAlarm@temp2+1),w
  4722  17EF  0841               	movwf	(HeatingControlOff@temp2+1)
  4723  17F0  00B6               	movf	(SoundAlarm@temp2),w
  4724  17F1  0840               	movwf	(HeatingControlOff@temp2)
  4725  17F2  00B5               	movf	(SoundAlarm@temp3+1),w
  4726  17F3  0843               	movwf	(HeatingControlOff@temp3+1)
  4727  17F4  00B8               	movf	(SoundAlarm@temp3),w
  4728  17F5  0842               	movwf	(HeatingControlOff@temp3)
  4729  17F6  00B7               	fcall	_HeatingControlOff
  4730  17F7  120A  158A  228A  160A  118A  	line	396
  4731                           ;main.c: 396: 
  4732                           	goto	l171
  4733  17FC  2FFF               	line	397
  4734                           ;main.c: 397: void DateDayScreen(int Key)
  4735                           	
  4736                           l169:	
  4737  17FD                     	goto	l3736
  4738  17FD  2F3E               	line	398
  4739                           ;main.c: 398: {
  4740                           	
  4741                           l170:	
  4742  17FE                     	goto	l3736
  4743  17FE  2F3E               	
  4744                           l168:	
  4745  17FF                     	line	399
  4746                           	
  4747                           l171:	
  4748  17FF                     	return
  4749  17FF  0008               	opt stack 0
  4750                           GLOBAL	__end_of_SoundAlarm
  4751                           	__end_of_SoundAlarm:
  4752  1800                     	signat	_SoundAlarm,16505
  4753                           	global	_SoundOn
  4754                           
  4755 ;; *************** function _SoundOn *****************
  4756 ;; Defined at:
  4757 ;;		line 12 in file "Buzzer.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;		None
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  1    wreg      void 
  4764 ;; Registers used:
  4765 ;;		None
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4771 ;;      Params:         0       0       0       0       0
  4772 ;;      Locals:         0       0       0       0       0
  4773 ;;      Temps:          0       0       0       0       0
  4774 ;;      Totals:         0       0       0       0       0
  4775 ;;Total ram usage:        0 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_SoundAlarm
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4784                           	file	"Buzzer.c"
  4785                           	line	12
  4786                           global __ptext4
  4787                           __ptext4:	;psect for function _SoundOn
  4788  1E12                     psect	text4
  4789                           	file	"Buzzer.c"
  4790                           	line	12
  4791                           	global	__size_of_SoundOn
  4792                           	__size_of_SoundOn	equ	__end_of_SoundOn-_SoundOn
  4793  0004                     	
  4794                           _SoundOn:	
  4795  1E12                     ;incstack = 0
  4796                           	opt	stack 6
  4797                           ; Regs used in _SoundOn: []
  4798                           	line	14
  4799                           	
  4800                           l3682:	
  4801  1E12                     ;Buzzer.c: 14:     RB1 = 1;
  4802                           	bcf	status, 5	;RP0=0, select bank0
  4803  1E12  1283               	bcf	status, 6	;RP1=0, select bank0
  4804  1E13  1303               	bsf	(49/8),(49)&7	;volatile
  4805  1E14  1486               	line	15
  4806                           	
  4807                           l540:	
  4808  1E15                     	return
  4809  1E15  0008               	opt stack 0
  4810                           GLOBAL	__end_of_SoundOn
  4811                           	__end_of_SoundOn:
  4812  1E16                     	signat	_SoundOn,89
  4813                           	global	_HeatingControlOff
  4814                           
  4815 ;; *************** function _HeatingControlOff *****************
  4816 ;; Defined at:
  4817 ;;		line 296 in file "main.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  Key             2   17[BANK0 ] int 
  4820 ;;  temp            2   19[BANK0 ] int 
  4821 ;;  temp2           2   21[BANK0 ] int 
  4822 ;;  temp3           2   23[BANK0 ] int 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  On              1   27[BANK0 ] PTR unsigned char 
  4825 ;;		 -> STR_16(11), 
  4826 ;;  Off             1   26[BANK0 ] PTR unsigned char 
  4827 ;;		 -> STR_15(12), 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4837 ;;      Params:         0       8       0       0       0
  4838 ;;      Locals:         0       2       0       0       0
  4839 ;;      Temps:          0       1       0       0       0
  4840 ;;      Totals:         0      11       0       0       0
  4841 ;;Total ram usage:       11 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:    5
  4844 ;; This function calls:
  4845 ;;		_ChangeTrigger
  4846 ;;		_Get_Temp
  4847 ;;		_Keypad_Scan
  4848 ;;		_LCD_Command
  4849 ;;		_LCD_SendString
  4850 ;;		_MainScreen
  4851 ;;		_Main_Delay
  4852 ;;		_SoundOff
  4853 ;;		_SwapToHeatingDisplay
  4854 ;;		___wmul
  4855 ;; This function is called by:
  4856 ;;		_SoundAlarm
  4857 ;;		_main
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4861                           	file	"main.c"
  4862                           	line	296
  4863                           global __ptext5
  4864                           __ptext5:	;psect for function _HeatingControlOff
  4865  0A8A                     psect	text5
  4866                           	file	"main.c"
  4867                           	line	296
  4868                           	global	__size_of_HeatingControlOff
  4869                           	__size_of_HeatingControlOff	equ	__end_of_HeatingControlOff-_HeatingControlOff
  4870  00EA                     	
  4871                           _HeatingControlOff:	
  4872  0A8A                     ;incstack = 0
  4873                           	opt	stack 1
  4874                           ; Regs used in _HeatingControlOff: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]

  4875                           	line	299
  4876                           	
  4877                           l3634:	
  4878  0A8A                     ;main.c: 296:         Key = Keypad_Scan();;main.c: 297: ;main.c: 299:         {
  4879                           	movlw	01h
  4880  0A8A  3001               	bsf	status, 5	;RP0=1, select bank1
  4881  0A8B  1683               	bcf	status, 6	;RP1=0, select bank1
  4882  0A8C  1303               	movwf	(_DisableAlarm)^080h
  4883  0A8D  00EE               	movlw	0
  4884  0A8E  3000               	movwf	((_DisableAlarm)^080h)+1
  4885  0A8F  00EF               	line	300
  4886                           	
  4887                           l3636:	
  4888  0A90                     ;main.c: 300:            ChangeTrigger(Key);
  4889                           	fcall	_SoundOff
  4890  0A90  160A  158A  260E  120A  158A  	line	301
  4891                           	
  4892                           l3638:	
  4893  0A95                     ;main.c: 301:         }
  4894                           	movlw	(low((((STR_15)-__stringbase)|8000h)))&0ffh
  4895  0A95  301E               	bcf	status, 5	;RP0=0, select bank0
  4896  0A96  1283               	bcf	status, 6	;RP1=0, select bank0
  4897  0A97  1303               	movwf	(??_HeatingControlOff+0)+0
  4898  0A98  00B9               	movf	(??_HeatingControlOff+0)+0,w
  4899  0A99  0839               	movwf	(HeatingControlOff@Off)
  4900  0A9A  00BA               	line	302
  4901                           	
  4902                           l3640:	
  4903  0A9B                     ;main.c: 302: 
  4904                           	movlw	(low((((STR_16)-__stringbase)|8000h)))&0ffh
  4905  0A9B  3036               	movwf	(??_HeatingControlOff+0)+0
  4906  0A9C  00B9               	movf	(??_HeatingControlOff+0)+0,w
  4907  0A9D  0839               	movwf	(HeatingControlOff@On)
  4908  0A9E  00BB               	line	304
  4909                           ;main.c: 304:         {
  4910                           	movlw	low(01h)
  4911  0A9F  3001               	fcall	_LCD_Command
  4912  0AA0  160A  158A  2633  120A  158A  	line	306
  4913                           ;main.c: 306:         }
  4914                           	movlw	low(03h)
  4915  0AA5  3003               	fcall	_LCD_Command
  4916  0AA6  160A  158A  2633  120A  158A  	line	308
  4917                           	
  4918                           l3642:	
  4919  0AAB                     ;main.c: 308:         Get_Temp(tempBuffer);
  4920                           	bcf	status, 5	;RP0=0, select bank0
  4921  0AAB  1283               	bcf	status, 6	;RP1=0, select bank0
  4922  0AAC  1303               		movf	(HeatingControlOff@Off),w
  4923  0AAD  083A               	movwf	(LCD_SendString@string)
  4924  0AAE  00F1               	movlw	0
  4925  0AAF  3000               	btfss	status,2
  4926  0AB0  1D03               	movlw	080h
  4927  0AB1  3080               	movwf	(LCD_SendString@string+1)
  4928  0AB2  00F2               
  4929                           	fcall	_LCD_SendString
  4930  0AB3  160A  118A  2365  120A  158A  	line	310
  4931                           	
  4932                           l3644:	
  4933  0AB8                     ;main.c: 310:         temp = tempBuffer[0] - 48;
  4934                           	movlw	0C8h
  4935  0AB8  30C8               	movwf	(Main_Delay@k)
  4936  0AB9  00F0               	movlw	0
  4937  0ABA  3000               	movwf	((Main_Delay@k))+1
  4938  0ABB  00F1               	fcall	_Main_Delay
  4939  0ABC  160A  118A  2263  120A  158A  	line	312
  4940                           	
  4941                           l3646:	
  4942  0AC1                     ;main.c: 312:         temp3 = (temp* 10) + temp2;
  4943                           	movlw	low(01h)
  4944  0AC1  3001               	fcall	_LCD_Command
  4945  0AC2  160A  158A  2633  120A  158A  	goto	l3648
  4946  0AC7  2AC8               	line	313
  4947                           ;main.c: 313: 
  4948                           	
  4949                           l155:	
  4950  0AC8                     	line	315
  4951                           	
  4952                           l3648:	
  4953  0AC8                     ;main.c: 314:         if(triggerTemp[0] > temp3);main.c: 315:         {
  4954                           	movlw	low(03h)
  4955  0AC8  3003               	fcall	_LCD_Command
  4956  0AC9  160A  158A  2633  120A  158A  	line	317
  4957                           	
  4958                           l3650:	
  4959  0ACE                     ;main.c: 317:             LCD_Command(0x03);
  4960                           	fcall	_MainScreen
  4961  0ACE  160A  118A  2184  120A  158A  	line	318
  4962                           	
  4963                           l3652:	
  4964  0AD3                     ;main.c: 318:             LCD_SendString(On);
  4965                           	fcall	_Keypad_Scan
  4966  0AD3  120A  118A  20E5  120A  158A  	movf	(1+(?_Keypad_Scan)),w
  4967  0AD8  0877               	bcf	status, 5	;RP0=0, select bank0
  4968  0AD9  1283               	bcf	status, 6	;RP1=0, select bank0
  4969  0ADA  1303               	movwf	(HeatingControlOff@Key+1)
  4970  0ADB  00B2               	movf	(0+(?_Keypad_Scan)),w
  4971  0ADC  0876               	movwf	(HeatingControlOff@Key)
  4972  0ADD  00B1               	line	320
  4973                           	
  4974                           l3654:	
  4975  0ADE                     ;main.c: 320: 
  4976                           		decf	((HeatingControlOff@Key)),w
  4977  0ADE  0331               iorwf	((HeatingControlOff@Key+1)),w
  4978  0ADF  0432               	btfss	status,2
  4979  0AE0  1D03               	goto	u2941
  4980  0AE1  2AE3               	goto	u2940
  4981  0AE2  2AE4               u2941:
  4982  0AE3                     	goto	l3658
  4983  0AE3  2AEB               u2940:
  4984  0AE4                     	line	322
  4985                           	
  4986                           l3656:	
  4987  0AE4                     ;main.c: 321:             Main_Delay(200);;main.c: 322:             LCD_Command(0x01);
  4988                           	movf	(HeatingControlOff@Key),w
  4989  0AE4  0831               	fcall	_ChangeTrigger
  4990  0AE5  120A  158A  2374  120A  158A  	goto	l3658
  4991  0AEA  2AEB               	line	323
  4992                           ;main.c: 323: 
  4993                           	
  4994                           l156:	
  4995  0AEB                     	line	325
  4996                           	
  4997                           l3658:	
  4998  0AEB                     ;main.c: 325: 
  4999                           		movlw	7
  5000  0AEB  3007               	bcf	status, 5	;RP0=0, select bank0
  5001  0AEC  1283               	bcf	status, 6	;RP1=0, select bank0
  5002  0AED  1303               	xorwf	((HeatingControlOff@Key)),w
  5003  0AEE  0631               iorwf	((HeatingControlOff@Key+1)),w
  5004  0AEF  0432               	btfss	status,2
  5005  0AF0  1D03               	goto	u2951
  5006  0AF1  2AF3               	goto	u2950
  5007  0AF2  2AF4               u2951:
  5008  0AF3                     	goto	l157
  5009  0AF3  2AFD               u2950:
  5010  0AF4                     	line	327
  5011                           	
  5012                           l3660:	
  5013  0AF4                     ;main.c: 326:             DisableAlarm = 0;;main.c: 327:             break;
  5014                           	movf	(HeatingControlOff@Key+1),w
  5015  0AF4  0832               	movwf	(SwapToHeatingDisplay@Key+1)
  5016  0AF5  00F9               	movf	(HeatingControlOff@Key),w
  5017  0AF6  0831               	movwf	(SwapToHeatingDisplay@Key)
  5018  0AF7  00F8               	fcall	_SwapToHeatingDisplay
  5019  0AF8  160A  118A  263B  120A  158A  	line	328
  5020                           ;main.c: 328:         }
  5021                           	
  5022                           l157:	
  5023  0AFD                     	line	330
  5024                           ;main.c: 330: }
  5025                           	movlw	(low(_tempBuffer|((0x0)<<8)))&0ffh
  5026  0AFD  30D5               	fcall	_Get_Temp
  5027  0AFE  120A  158A  2670  120A  158A  	line	332
  5028                           	
  5029                           l3662:	
  5030  0B03                     ;main.c: 332: 
  5031                           	bsf	status, 5	;RP0=1, select bank1
  5032  0B03  1683               	bcf	status, 6	;RP1=0, select bank1
  5033  0B04  1303               	movf	(_tempBuffer)^080h,w
  5034  0B05  0855               	addlw	low(-48)
  5035  0B06  3ED0               	bcf	status, 5	;RP0=0, select bank0
  5036  0B07  1283               	bcf	status, 6	;RP1=0, select bank0
  5037  0B08  1303               	movwf	(HeatingControlOff@temp)
  5038  0B09  00B3               	movlw	high(-48)
  5039  0B0A  30FF               	skipnc
  5040  0B0B  1803               	movlw	(high(-48)+1)&0ffh
  5041  0B0C  3000               	movwf	((HeatingControlOff@temp))+1
  5042  0B0D  00B4               	line	333
  5043                           	
  5044                           l3664:	
  5045  0B0E                     ;main.c: 333: void SoundAlarm(int Key, int temp, int temp2, int temp3)
  5046                           	bsf	status, 5	;RP0=1, select bank1
  5047  0B0E  1683               	bcf	status, 6	;RP1=0, select bank1
  5048  0B0F  1303               	movf	0+(_tempBuffer)^080h+01h,w
  5049  0B10  0856               	addlw	low(-48)
  5050  0B11  3ED0               	bcf	status, 5	;RP0=0, select bank0
  5051  0B12  1283               	bcf	status, 6	;RP1=0, select bank0
  5052  0B13  1303               	movwf	(HeatingControlOff@temp2)
  5053  0B14  00B5               	movlw	high(-48)
  5054  0B15  30FF               	skipnc
  5055  0B16  1803               	movlw	(high(-48)+1)&0ffh
  5056  0B17  3000               	movwf	((HeatingControlOff@temp2))+1
  5057  0B18  00B6               	line	334
  5058                           	
  5059                           l3666:	
  5060  0B19                     ;main.c: 334: {
  5061                           	movf	(HeatingControlOff@temp+1),w
  5062  0B19  0834               	movwf	(___wmul@multiplier+1)
  5063  0B1A  00F1               	movf	(HeatingControlOff@temp),w
  5064  0B1B  0833               	movwf	(___wmul@multiplier)
  5065  0B1C  00F0               	movlw	0Ah
  5066  0B1D  300A               	movwf	(___wmul@multiplicand)
  5067  0B1E  00F2               	movlw	0
  5068  0B1F  3000               	movwf	((___wmul@multiplicand))+1
  5069  0B20  00F3               	fcall	___wmul
  5070  0B21  160A  118A  212A  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5071  0B26  1283               	bcf	status, 6	;RP1=0, select bank0
  5072  0B27  1303               	movf	(HeatingControlOff@temp2),w
  5073  0B28  0835               	addwf	(0+(?___wmul)),w
  5074  0B29  0770               	movwf	(HeatingControlOff@temp3)
  5075  0B2A  00B7               	movf	(HeatingControlOff@temp2+1),w
  5076  0B2B  0836               	skipnc
  5077  0B2C  1803               	incf	(HeatingControlOff@temp2+1),w
  5078  0B2D  0A36               	addwf	(1+(?___wmul)),w
  5079  0B2E  0771               	movwf	1+(HeatingControlOff@temp3)
  5080  0B2F  00B8               	line	336
  5081                           	
  5082                           l3668:	
  5083  0B30                     ;main.c: 336:     char* Alarm = "Heating Failure";
  5084                           	movf	(HeatingControlOff@temp3+1),w
  5085  0B30  0838               	xorlw	80h
  5086  0B31  3A80               	movwf	(??_HeatingControlOff+0)+0
  5087  0B32  00B9               	movf	(_triggerTemp+1),w
  5088  0B33  086D               	xorlw	80h
  5089  0B34  3A80               	subwf	(??_HeatingControlOff+0)+0,w
  5090  0B35  0239               	skipz
  5091  0B36  1D03               	goto	u2965
  5092  0B37  2B3A               	movf	(_triggerTemp),w
  5093  0B38  086C               	subwf	(HeatingControlOff@temp3),w
  5094  0B39  0237               u2965:
  5095  0B3A                     
  5096                           	skipnc
  5097  0B3A  1803               	goto	u2961
  5098  0B3B  2B3D               	goto	u2960
  5099  0B3C  2B3E               u2961:
  5100  0B3D                     	goto	l3648
  5101  0B3D  2AC8               u2960:
  5102  0B3E                     	line	338
  5103                           	
  5104                           l3670:	
  5105  0B3E                     ;main.c: 337:     DisableAlarm = 0;;main.c: 338:     LCD_Command(0x01);
  5106                           	movlw	low(01h)
  5107  0B3E  3001               	fcall	_LCD_Command
  5108  0B3F  160A  158A  2633  120A  158A  	line	339
  5109                           ;main.c: 339:     while(1)
  5110                           	movlw	low(03h)
  5111  0B44  3003               	fcall	_LCD_Command
  5112  0B45  160A  158A  2633  120A  158A  	line	340
  5113                           	
  5114                           l3672:	
  5115  0B4A                     ;main.c: 340:     {
  5116                           	bcf	status, 5	;RP0=0, select bank0
  5117  0B4A  1283               	bcf	status, 6	;RP1=0, select bank0
  5118  0B4B  1303               		movf	(HeatingControlOff@On),w
  5119  0B4C  083B               	movwf	(LCD_SendString@string)
  5120  0B4D  00F1               	movlw	0
  5121  0B4E  3000               	btfss	status,2
  5122  0B4F  1D03               	movlw	080h
  5123  0B50  3080               	movwf	(LCD_SendString@string+1)
  5124  0B51  00F2               
  5125                           	fcall	_LCD_SendString
  5126  0B52  160A  118A  2365  120A  158A  	line	343
  5127                           	
  5128                           l3674:	
  5129  0B57                     ;main.c: 343: 
  5130                           	movlw	0C8h
  5131  0B57  30C8               	movwf	(Main_Delay@k)
  5132  0B58  00F0               	movlw	0
  5133  0B59  3000               	movwf	((Main_Delay@k))+1
  5134  0B5A  00F1               	fcall	_Main_Delay
  5135  0B5B  160A  118A  2263  120A  158A  	line	344
  5136                           	
  5137                           l3676:	
  5138  0B60                     ;main.c: 344:         SoundOn();
  5139                           	movlw	low(01h)
  5140  0B60  3001               	fcall	_LCD_Command
  5141  0B61  160A  158A  2633  120A  158A  	line	346
  5142                           	
  5143                           l3678:	
  5144  0B66                     ;main.c: 346:         Get_Temp(tempBuffer);
  5145                           	movlw	01h
  5146  0B66  3001               	bcf	status, 5	;RP0=0, select bank0
  5147  0B67  1283               	bcf	status, 6	;RP1=0, select bank0
  5148  0B68  1303               	movwf	(_IsHeatingOn)
  5149  0B69  00E0               	movlw	0
  5150  0B6A  3000               	movwf	((_IsHeatingOn))+1
  5151  0B6B  00E1               	line	348
  5152                           	
  5153                           l3680:	
  5154  0B6C                     ;main.c: 348:         temp2 = tempBuffer[1] - 48;
  5155                           	bsf	status, 5	;RP0=1, select bank1
  5156  0B6C  1683               	bcf	status, 6	;RP1=0, select bank1
  5157  0B6D  1303               	clrf	(_DisableAlarm)^080h
  5158  0B6E  01EE               	clrf	(_DisableAlarm+1)^080h
  5159  0B6F  01EF               	line	349
  5160                           ;main.c: 349:         temp3 = (temp* 10) + temp2;
  5161                           	goto	l161
  5162  0B70  2B73               	line	350
  5163                           ;main.c: 350:         Key = Keypad_Scan();
  5164                           	
  5165                           l158:	
  5166  0B71                     	goto	l3648
  5167  0B71  2AC8               	line	351
  5168                           ;main.c: 351: 
  5169                           	
  5170                           l160:	
  5171  0B72                     	goto	l3648
  5172  0B72  2AC8               	
  5173                           l159:	
  5174  0B73                     	line	352
  5175                           	
  5176                           l161:	
  5177  0B73                     	return
  5178  0B73  0008               	opt stack 0
  5179                           GLOBAL	__end_of_HeatingControlOff
  5180                           	__end_of_HeatingControlOff:
  5181  0B74                     	signat	_HeatingControlOff,16505
  5182                           	global	___wmul
  5183                           
  5184 ;; *************** function ___wmul *****************
  5185 ;; Defined at:
  5186 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  multiplier      2    0[COMMON] unsigned int 
  5189 ;;  multiplicand    2    2[COMMON] unsigned int 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;  product         2    4[COMMON] unsigned int 
  5192 ;; Return value:  Size  Location     Type
  5193 ;;                  2    0[COMMON] unsigned int 
  5194 ;; Registers used:
  5195 ;;		wreg, status,2, status,0
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5201 ;;      Params:         4       0       0       0       0
  5202 ;;      Locals:         2       0       0       0       0
  5203 ;;      Temps:          0       0       0       0       0
  5204 ;;      Totals:         6       0       0       0       0
  5205 ;;Total ram usage:        6 bytes
  5206 ;; Hardware stack levels used:    1
  5207 ;; This function calls:
  5208 ;;		Nothing
  5209 ;; This function is called by:
  5210 ;;		_HeatingControlOff
  5211 ;;		_SoundAlarm
  5212 ;;		_main
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  5216                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  5217                           	line	15
  5218                           global __ptext6
  5219                           __ptext6:	;psect for function ___wmul
  5220  112A                     psect	text6
  5221                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  5222                           	line	15
  5223                           	global	__size_of___wmul
  5224                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  5225  0028                     	
  5226                           ___wmul:	
  5227  112A                     ;incstack = 0
  5228                           	opt	stack 7
  5229                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5230                           	line	43
  5231                           	
  5232                           l3562:	
  5233  112A                     	clrf	(___wmul@product)
  5234  112A  01F4               	clrf	(___wmul@product+1)
  5235  112B  01F5               	goto	l3564
  5236  112C  292D               	line	44
  5237                           	
  5238                           l702:	
  5239  112D                     	line	45
  5240                           	
  5241                           l3564:	
  5242  112D                     	btfss	(___wmul@multiplier),(0)&7
  5243  112D  1C70               	goto	u2901
  5244  112E  2930               	goto	u2900
  5245  112F  2931               u2901:
  5246  1130                     	goto	l703
  5247  1130  2937               u2900:
  5248  1131                     	line	46
  5249                           	
  5250                           l3566:	
  5251  1131                     	movf	(___wmul@multiplicand),w
  5252  1131  0872               	addwf	(___wmul@product),f
  5253  1132  07F4               	skipnc
  5254  1133  1803               	incf	(___wmul@product+1),f
  5255  1134  0AF5               	movf	(___wmul@multiplicand+1),w
  5256  1135  0873               	addwf	(___wmul@product+1),f
  5257  1136  07F5               	
  5258                           l703:	
  5259  1137                     	line	47
  5260                           	movlw	01h
  5261  1137  3001               	
  5262                           u2915:
  5263  1138                     	clrc
  5264  1138  1003               	rlf	(___wmul@multiplicand),f
  5265  1139  0DF2               	rlf	(___wmul@multiplicand+1),f
  5266  113A  0DF3               	addlw	-1
  5267  113B  3EFF               	skipz
  5268  113C  1D03               	goto	u2915
  5269  113D  2938               	line	48
  5270                           	
  5271                           l3568:	
  5272  113E                     	movlw	01h
  5273  113E  3001               	
  5274                           u2925:
  5275  113F                     	clrc
  5276  113F  1003               	rrf	(___wmul@multiplier+1),f
  5277  1140  0CF1               	rrf	(___wmul@multiplier),f
  5278  1141  0CF0               	addlw	-1
  5279  1142  3EFF               	skipz
  5280  1143  1D03               	goto	u2925
  5281  1144  293F               	line	49
  5282                           	
  5283                           l3570:	
  5284  1145                     	movf	((___wmul@multiplier)),w
  5285  1145  0870               iorwf	((___wmul@multiplier+1)),w
  5286  1146  0471               	btfss	status,2
  5287  1147  1D03               	goto	u2931
  5288  1148  294A               	goto	u2930
  5289  1149  294B               u2931:
  5290  114A                     	goto	l3564
  5291  114A  292D               u2930:
  5292  114B                     	goto	l3572
  5293  114B  294C               	
  5294                           l704:	
  5295  114C                     	line	52
  5296                           	
  5297                           l3572:	
  5298  114C                     	movf	(___wmul@product+1),w
  5299  114C  0875               	movwf	(?___wmul+1)
  5300  114D  00F1               	movf	(___wmul@product),w
  5301  114E  0874               	movwf	(?___wmul)
  5302  114F  00F0               	goto	l705
  5303  1150  2951               	
  5304                           l3574:	
  5305  1151                     	line	53
  5306                           	
  5307                           l705:	
  5308  1151                     	return
  5309  1151  0008               	opt stack 0
  5310                           GLOBAL	__end_of___wmul
  5311                           	__end_of___wmul:
  5312  1152                     	signat	___wmul,8314
  5313                           	global	_SoundOff
  5314                           
  5315 ;; *************** function _SoundOff *****************
  5316 ;; Defined at:
  5317 ;;		line 18 in file "Buzzer.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;		None
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;		None
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1    wreg      void 
  5324 ;; Registers used:
  5325 ;;		None
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5331 ;;      Params:         0       0       0       0       0
  5332 ;;      Locals:         0       0       0       0       0
  5333 ;;      Temps:          0       0       0       0       0
  5334 ;;      Totals:         0       0       0       0       0
  5335 ;;Total ram usage:        0 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_HeatingControlOff
  5341 ;;		_SoundAlarm
  5342 ;;		_main
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  5346                           	file	"Buzzer.c"
  5347                           	line	18
  5348                           global __ptext7
  5349                           __ptext7:	;psect for function _SoundOff
  5350  1E0E                     psect	text7
  5351                           	file	"Buzzer.c"
  5352                           	line	18
  5353                           	global	__size_of_SoundOff
  5354                           	__size_of_SoundOff	equ	__end_of_SoundOff-_SoundOff
  5355  0004                     	
  5356                           _SoundOff:	
  5357  1E0E                     ;incstack = 0
  5358                           	opt	stack 7
  5359                           ; Regs used in _SoundOff: []
  5360                           	line	20
  5361                           	
  5362                           l3546:	
  5363  1E0E                     ;Buzzer.c: 20:     RB1 = 0;
  5364                           	bcf	status, 5	;RP0=0, select bank0
  5365  1E0E  1283               	bcf	status, 6	;RP1=0, select bank0
  5366  1E0F  1303               	bcf	(49/8),(49)&7	;volatile
  5367  1E10  1086               	line	21
  5368                           	
  5369                           l543:	
  5370  1E11                     	return
  5371  1E11  0008               	opt stack 0
  5372                           GLOBAL	__end_of_SoundOff
  5373                           	__end_of_SoundOff:
  5374  1E12                     	signat	_SoundOff,89
  5375                           	global	_MainScreen
  5376                           
  5377 ;; *************** function _MainScreen *****************
  5378 ;; Defined at:
  5379 ;;		line 157 in file "main.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;		None
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  Temp            1   10[BANK0 ] PTR unsigned char 
  5384 ;;		 -> STR_9(6), 
  5385 ;;  Time            1    9[BANK0 ] PTR unsigned char 
  5386 ;;		 -> STR_8(6), 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  1    wreg      void 
  5389 ;; Registers used:
  5390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5396 ;;      Params:         0       0       0       0       0
  5397 ;;      Locals:         0       2       0       0       0
  5398 ;;      Temps:          0       1       0       0       0
  5399 ;;      Totals:         0       3       0       0       0
  5400 ;;Total ram usage:        3 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; Hardware stack levels required when called:    4
  5403 ;; This function calls:
  5404 ;;		_DisplayTemp
  5405 ;;		_DisplayTime
  5406 ;;		_LCD_SecondLine
  5407 ;;		_LCD_SendString
  5408 ;; This function is called by:
  5409 ;;		_HeatingControlOff
  5410 ;;		_main
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5414                           	file	"main.c"
  5415                           	line	157
  5416                           global __ptext8
  5417                           __ptext8:	;psect for function _MainScreen
  5418  1184                     psect	text8
  5419                           	file	"main.c"
  5420                           	line	157
  5421                           	global	__size_of_MainScreen
  5422                           	__size_of_MainScreen	equ	__end_of_MainScreen-_MainScreen
  5423  0033                     	
  5424                           _MainScreen:	
  5425  1184                     ;incstack = 0
  5426                           	opt	stack 1
  5427                           ; Regs used in _MainScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5428                           	line	160
  5429                           	
  5430                           l3420:	
  5431  1184                     ;main.c: 160:     int i = 0;
  5432                           	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  5433  1184  30A2               	bcf	status, 5	;RP0=0, select bank0
  5434  1185  1283               	bcf	status, 6	;RP1=0, select bank0
  5435  1186  1303               	movwf	(??_MainScreen+0)+0
  5436  1187  00A8               	movf	(??_MainScreen+0)+0,w
  5437  1188  0828               	movwf	(MainScreen@Time)
  5438  1189  00A9               	line	161
  5439                           ;main.c: 161:     char* Trigger = "Trigger:";
  5440                           	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  5441  118A  30AE               	movwf	(??_MainScreen+0)+0
  5442  118B  00A8               	movf	(??_MainScreen+0)+0,w
  5443  118C  0828               	movwf	(MainScreen@Temp)
  5444  118D  00AA               	line	162
  5445                           	
  5446                           l3422:	
  5447  118E                     ;main.c: 162:     char* TriggerSet = "Trigger Set";
  5448                           		movf	(MainScreen@Time),w
  5449  118E  0829               	movwf	(LCD_SendString@string)
  5450  118F  00F1               	movlw	0
  5451  1190  3000               	btfss	status,2
  5452  1191  1D03               	movlw	080h
  5453  1192  3080               	movwf	(LCD_SendString@string+1)
  5454  1193  00F2               
  5455                           	fcall	_LCD_SendString
  5456  1194  160A  118A  2365  160A  118A  	line	164
  5457                           	
  5458                           l3424:	
  5459  1199                     ;main.c: 164:         {
  5460                           	fcall	_DisplayTime
  5461  1199  120A  158A  20BC  160A  118A  	line	166
  5462                           	
  5463                           l3426:	
  5464  119E                     ;main.c: 166:             char decimal;
  5465                           	fcall	_LCD_SecondLine
  5466  119E  160A  158A  2616  160A  118A  	line	169
  5467                           	
  5468                           l3428:	
  5469  11A3                     ;main.c: 169: 
  5470                           	bcf	status, 5	;RP0=0, select bank0
  5471  11A3  1283               	bcf	status, 6	;RP1=0, select bank0
  5472  11A4  1303               		movf	(MainScreen@Temp),w
  5473  11A5  082A               	movwf	(LCD_SendString@string)
  5474  11A6  00F1               	movlw	0
  5475  11A7  3000               	btfss	status,2
  5476  11A8  1D03               	movlw	080h
  5477  11A9  3080               	movwf	(LCD_SendString@string+1)
  5478  11AA  00F2               
  5479                           	fcall	_LCD_SendString
  5480  11AB  160A  118A  2365  160A  118A  	line	171
  5481                           	
  5482                           l3430:	
  5483  11B0                     ;main.c: 171: 
  5484                           	movlw	(low(_tempBuffer|((0x0)<<8)))&0ffh
  5485  11B0  30D5               	fcall	_DisplayTemp
  5486  11B1  160A  118A  2104  160A  118A  	line	174
  5487                           	
  5488                           l124:	
  5489  11B6                     	return
  5490  11B6  0008               	opt stack 0
  5491                           GLOBAL	__end_of_MainScreen
  5492                           	__end_of_MainScreen:
  5493  11B7                     	signat	_MainScreen,89
  5494                           	global	_DisplayTime
  5495                           
  5496 ;; *************** function _DisplayTime *****************
  5497 ;; Defined at:
  5498 ;;		line 62 in file "main.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5512 ;;      Params:         0       0       0       0       0
  5513 ;;      Locals:         0       0       0       0       0
  5514 ;;      Temps:          1       0       0       0       0
  5515 ;;      Totals:         1       0       0       0       0
  5516 ;;Total ram usage:        1 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    3
  5519 ;; This function calls:
  5520 ;;		_LCD_SendString
  5521 ;;		_RealTimeClock_get_hours
  5522 ;;		_RealTimeClock_get_minutes
  5523 ;;		_RealTimeClock_get_seconds
  5524 ;;		___awdiv
  5525 ;;		___awmod
  5526 ;; This function is called by:
  5527 ;;		_MainScreen
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5531                           	line	62
  5532                           global __ptext9
  5533                           __ptext9:	;psect for function _DisplayTime
  5534  08BC                     psect	text9
  5535                           	file	"main.c"
  5536                           	line	62
  5537                           	global	__size_of_DisplayTime
  5538                           	__size_of_DisplayTime	equ	__end_of_DisplayTime-_DisplayTime
  5539  00E6                     	
  5540                           _DisplayTime:	
  5541  08BC                     ;incstack = 0
  5542                           	opt	stack 1
  5543                           ; Regs used in _DisplayTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5544                           	line	65
  5545                           	
  5546                           l3246:	
  5547  08BC                     ;main.c: 65: 
  5548                           	fcall	_RealTimeClock_get_seconds
  5549  08BC  160A  158A  27DE  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5550  08C1  1283               	bcf	status, 6	;RP1=0, select bank0
  5551  08C2  1303               	movf	(1+(?_RealTimeClock_get_seconds)),w
  5552  08C3  0826               	movwf	(_timeSecs+1)
  5553  08C4  00D9               	movf	(0+(?_RealTimeClock_get_seconds)),w
  5554  08C5  0825               	movwf	(_timeSecs)
  5555  08C6  00D8               	line	66
  5556                           ;main.c: 66:     int month = RealTimeClock_get_month();
  5557                           	fcall	_RealTimeClock_get_minutes
  5558  08C7  160A  158A  2734  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5559  08CC  1283               	bcf	status, 6	;RP1=0, select bank0
  5560  08CD  1303               	movf	(1+(?_RealTimeClock_get_minutes)),w
  5561  08CE  0826               	movwf	(_timeMins+1)
  5562  08CF  00DB               	movf	(0+(?_RealTimeClock_get_minutes)),w
  5563  08D0  0825               	movwf	(_timeMins)
  5564  08D1  00DA               	line	67
  5565                           ;main.c: 67:     int day = RealTimeClock_get_day_of_month();
  5566                           	fcall	_RealTimeClock_get_hours
  5567  08D2  160A  158A  2712  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  5568  08D7  1283               	bcf	status, 6	;RP1=0, select bank0
  5569  08D8  1303               	movf	(1+(?_RealTimeClock_get_hours)),w
  5570  08D9  0826               	movwf	(_timeHours+1)
  5571  08DA  00DD               	movf	(0+(?_RealTimeClock_get_hours)),w
  5572  08DB  0825               	movwf	(_timeHours)
  5573  08DC  00DC               	line	69
  5574                           	
  5575                           l3248:	
  5576  08DD                     ;main.c: 69: 
  5577                           	movlw	0Ah
  5578  08DD  300A               	movwf	(___awmod@divisor)
  5579  08DE  00F0               	movlw	0
  5580  08DF  3000               	movwf	((___awmod@divisor))+1
  5581  08E0  00F1               	movf	(_timeHours+1),w
  5582  08E1  085D               	movwf	(___awmod@dividend+1)
  5583  08E2  00F3               	movf	(_timeHours),w
  5584  08E3  085C               	movwf	(___awmod@dividend)
  5585  08E4  00F2               	fcall	___awmod
  5586  08E5  160A  118A  2567  120A  158A  	movf	(0+(?___awmod)),w
  5587  08EA  0870               	addlw	030h
  5588  08EB  3E30               	movwf	(??_DisplayTime+0)+0
  5589  08EC  00FC               	movf	(??_DisplayTime+0)+0,w
  5590  08ED  087C               	bsf	status, 5	;RP0=1, select bank1
  5591  08EE  1683               	bcf	status, 6	;RP1=0, select bank1
  5592  08EF  1303               	movwf	0+(_timeDisplayer)^080h+01h
  5593  08F0  00CD               	line	70
  5594                           	
  5595                           l3250:	
  5596  08F1                     ;main.c: 70:     dateDisplayer[1] = month % 10 + 48;
  5597                           	movlw	0Ah
  5598  08F1  300A               	movwf	(___awdiv@divisor)
  5599  08F2  00F0               	movlw	0
  5600  08F3  3000               	movwf	((___awdiv@divisor))+1
  5601  08F4  00F1               	bcf	status, 5	;RP0=0, select bank0
  5602  08F5  1283               	bcf	status, 6	;RP1=0, select bank0
  5603  08F6  1303               	movf	(_timeHours+1),w
  5604  08F7  085D               	movwf	(___awdiv@dividend+1)
  5605  08F8  00F3               	movf	(_timeHours),w
  5606  08F9  085C               	movwf	(___awdiv@dividend)
  5607  08FA  00F2               	fcall	___awdiv
  5608  08FB  160A  118A  25CA  120A  158A  	movf	(1+(?___awdiv)),w
  5609  0900  0871               	bcf	status, 5	;RP0=0, select bank0
  5610  0901  1283               	bcf	status, 6	;RP1=0, select bank0
  5611  0902  1303               	movwf	(_timeHours+1)
  5612  0903  00DD               	movf	(0+(?___awdiv)),w
  5613  0904  0870               	movwf	(_timeHours)
  5614  0905  00DC               	line	71
  5615                           	
  5616                           l3252:	
  5617  0906                     ;main.c: 71:     month /= 10;
  5618                           	movlw	0Ah
  5619  0906  300A               	movwf	(___awmod@divisor)
  5620  0907  00F0               	movlw	0
  5621  0908  3000               	movwf	((___awmod@divisor))+1
  5622  0909  00F1               	movf	(_timeHours+1),w
  5623  090A  085D               	movwf	(___awmod@dividend+1)
  5624  090B  00F3               	movf	(_timeHours),w
  5625  090C  085C               	movwf	(___awmod@dividend)
  5626  090D  00F2               	fcall	___awmod
  5627  090E  160A  118A  2567  120A  158A  	movf	(0+(?___awmod)),w
  5628  0913  0870               	addlw	030h
  5629  0914  3E30               	movwf	(??_DisplayTime+0)+0
  5630  0915  00FC               	movf	(??_DisplayTime+0)+0,w
  5631  0916  087C               	bsf	status, 5	;RP0=1, select bank1
  5632  0917  1683               	bcf	status, 6	;RP1=0, select bank1
  5633  0918  1303               	movwf	(_timeDisplayer)^080h
  5634  0919  00CC               	line	73
  5635                           	
  5636                           l3254:	
  5637  091A                     ;main.c: 73:     dateDisplayer[3] = day % 10 + 48;
  5638                           	movlw	0Ah
  5639  091A  300A               	movwf	(___awmod@divisor)
  5640  091B  00F0               	movlw	0
  5641  091C  3000               	movwf	((___awmod@divisor))+1
  5642  091D  00F1               	bcf	status, 5	;RP0=0, select bank0
  5643  091E  1283               	bcf	status, 6	;RP1=0, select bank0
  5644  091F  1303               	movf	(_timeMins+1),w
  5645  0920  085B               	movwf	(___awmod@dividend+1)
  5646  0921  00F3               	movf	(_timeMins),w
  5647  0922  085A               	movwf	(___awmod@dividend)
  5648  0923  00F2               	fcall	___awmod
  5649  0924  160A  118A  2567  120A  158A  	movf	(0+(?___awmod)),w
  5650  0929  0870               	addlw	030h
  5651  092A  3E30               	movwf	(??_DisplayTime+0)+0
  5652  092B  00FC               	movf	(??_DisplayTime+0)+0,w
  5653  092C  087C               	bsf	status, 5	;RP0=1, select bank1
  5654  092D  1683               	bcf	status, 6	;RP1=0, select bank1
  5655  092E  1303               	movwf	0+(_timeDisplayer)^080h+04h
  5656  092F  00D0               	line	74
  5657                           	
  5658                           l3256:	
  5659  0930                     ;main.c: 74:     day /= 10;
  5660                           	movlw	0Ah
  5661  0930  300A               	movwf	(___awdiv@divisor)
  5662  0931  00F0               	movlw	0
  5663  0932  3000               	movwf	((___awdiv@divisor))+1
  5664  0933  00F1               	bcf	status, 5	;RP0=0, select bank0
  5665  0934  1283               	bcf	status, 6	;RP1=0, select bank0
  5666  0935  1303               	movf	(_timeMins+1),w
  5667  0936  085B               	movwf	(___awdiv@dividend+1)
  5668  0937  00F3               	movf	(_timeMins),w
  5669  0938  085A               	movwf	(___awdiv@dividend)
  5670  0939  00F2               	fcall	___awdiv
  5671  093A  160A  118A  25CA  120A  158A  	movf	(1+(?___awdiv)),w
  5672  093F  0871               	bcf	status, 5	;RP0=0, select bank0
  5673  0940  1283               	bcf	status, 6	;RP1=0, select bank0
  5674  0941  1303               	movwf	(_timeMins+1)
  5675  0942  00DB               	movf	(0+(?___awdiv)),w
  5676  0943  0870               	movwf	(_timeMins)
  5677  0944  00DA               	line	75
  5678                           	
  5679                           l3258:	
  5680  0945                     ;main.c: 75:     dateDisplayer[4] = day % 10 + 48;
  5681                           	movlw	0Ah
  5682  0945  300A               	movwf	(___awmod@divisor)
  5683  0946  00F0               	movlw	0
  5684  0947  3000               	movwf	((___awmod@divisor))+1
  5685  0948  00F1               	movf	(_timeMins+1),w
  5686  0949  085B               	movwf	(___awmod@dividend+1)
  5687  094A  00F3               	movf	(_timeMins),w
  5688  094B  085A               	movwf	(___awmod@dividend)
  5689  094C  00F2               	fcall	___awmod
  5690  094D  160A  118A  2567  120A  158A  	movf	(0+(?___awmod)),w
  5691  0952  0870               	addlw	030h
  5692  0953  3E30               	movwf	(??_DisplayTime+0)+0
  5693  0954  00FC               	movf	(??_DisplayTime+0)+0,w
  5694  0955  087C               	bsf	status, 5	;RP0=1, select bank1
  5695  0956  1683               	bcf	status, 6	;RP1=0, select bank1
  5696  0957  1303               	movwf	0+(_timeDisplayer)^080h+03h
  5697  0958  00CF               	line	77
  5698                           	
  5699                           l3260:	
  5700  0959                     ;main.c: 77:     year /= 10;
  5701                           	movlw	0Ah
  5702  0959  300A               	movwf	(___awmod@divisor)
  5703  095A  00F0               	movlw	0
  5704  095B  3000               	movwf	((___awmod@divisor))+1
  5705  095C  00F1               	bcf	status, 5	;RP0=0, select bank0
  5706  095D  1283               	bcf	status, 6	;RP1=0, select bank0
  5707  095E  1303               	movf	(_timeSecs+1),w
  5708  095F  0859               	movwf	(___awmod@dividend+1)
  5709  0960  00F3               	movf	(_timeSecs),w
  5710  0961  0858               	movwf	(___awmod@dividend)
  5711  0962  00F2               	fcall	___awmod
  5712  0963  160A  118A  2567  120A  158A  	movf	(0+(?___awmod)),w
  5713  0968  0870               	addlw	030h
  5714  0969  3E30               	movwf	(??_DisplayTime+0)+0
  5715  096A  00FC               	movf	(??_DisplayTime+0)+0,w
  5716  096B  087C               	bsf	status, 5	;RP0=1, select bank1
  5717  096C  1683               	bcf	status, 6	;RP1=0, select bank1
  5718  096D  1303               	movwf	0+(_timeDisplayer)^080h+07h
  5719  096E  00D3               	line	78
  5720                           	
  5721                           l3262:	
  5722  096F                     ;main.c: 78:     dateDisplayer[6] = year % 10 + 48;
  5723                           	movlw	0Ah
  5724  096F  300A               	movwf	(___awdiv@divisor)
  5725  0970  00F0               	movlw	0
  5726  0971  3000               	movwf	((___awdiv@divisor))+1
  5727  0972  00F1               	bcf	status, 5	;RP0=0, select bank0
  5728  0973  1283               	bcf	status, 6	;RP1=0, select bank0
  5729  0974  1303               	movf	(_timeSecs+1),w
  5730  0975  0859               	movwf	(___awdiv@dividend+1)
  5731  0976  00F3               	movf	(_timeSecs),w
  5732  0977  0858               	movwf	(___awdiv@dividend)
  5733  0978  00F2               	fcall	___awdiv
  5734  0979  160A  118A  25CA  120A  158A  	movf	(1+(?___awdiv)),w
  5735  097E  0871               	bcf	status, 5	;RP0=0, select bank0
  5736  097F  1283               	bcf	status, 6	;RP1=0, select bank0
  5737  0980  1303               	movwf	(_timeSecs+1)
  5738  0981  00D9               	movf	(0+(?___awdiv)),w
  5739  0982  0870               	movwf	(_timeSecs)
  5740  0983  00D8               	line	79
  5741                           	
  5742                           l3264:	
  5743  0984                     ;main.c: 79: }
  5744                           	movlw	0Ah
  5745  0984  300A               	movwf	(___awmod@divisor)
  5746  0985  00F0               	movlw	0
  5747  0986  3000               	movwf	((___awmod@divisor))+1
  5748  0987  00F1               	movf	(_timeSecs+1),w
  5749  0988  0859               	movwf	(___awmod@dividend+1)
  5750  0989  00F3               	movf	(_timeSecs),w
  5751  098A  0858               	movwf	(___awmod@dividend)
  5752  098B  00F2               	fcall	___awmod
  5753  098C  160A  118A  2567  120A  158A  	movf	(0+(?___awmod)),w
  5754  0991  0870               	addlw	030h
  5755  0992  3E30               	movwf	(??_DisplayTime+0)+0
  5756  0993  00FC               	movf	(??_DisplayTime+0)+0,w
  5757  0994  087C               	bsf	status, 5	;RP0=1, select bank1
  5758  0995  1683               	bcf	status, 6	;RP1=0, select bank1
  5759  0996  1303               	movwf	0+(_timeDisplayer)^080h+06h
  5760  0997  00D2               	line	81
  5761                           	
  5762                           l3266:	
  5763  0998                     ;main.c: 81: 
  5764                           	movlw	(low(_timeDisplayer|((0x0)<<8))&0ffh)
  5765  0998  30CC               	movwf	(LCD_SendString@string)
  5766  0999  00F1               	movlw	(0x0)
  5767  099A  3000               	movwf	(LCD_SendString@string+1)
  5768  099B  00F2               	fcall	_LCD_SendString
  5769  099C  160A  118A  2365  120A  158A  	line	82
  5770                           	
  5771                           l103:	
  5772  09A1                     	return
  5773  09A1  0008               	opt stack 0
  5774                           GLOBAL	__end_of_DisplayTime
  5775                           	__end_of_DisplayTime:
  5776  09A2                     	signat	_DisplayTime,89
  5777                           	global	_DisplayTemp
  5778                           
  5779 ;; *************** function _DisplayTemp *****************
  5780 ;; Defined at:
  5781 ;;		line 143 in file "main.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  tempBuffer      1    wreg     PTR unsigned char 
  5784 ;;		 -> tempBuffer(6), 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  tempBuffer      1    7[BANK0 ] PTR unsigned char 
  5787 ;;		 -> tempBuffer(6), 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  1    wreg      void 
  5790 ;; Registers used:
  5791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5797 ;;      Params:         0       0       0       0       0
  5798 ;;      Locals:         0       1       0       0       0
  5799 ;;      Temps:          0       0       0       0       0
  5800 ;;      Totals:         0       1       0       0       0
  5801 ;;Total ram usage:        1 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:    3
  5804 ;; This function calls:
  5805 ;;		_Get_Temp
  5806 ;;		_LCD_Busy
  5807 ;;		_LCD_SendData
  5808 ;;		_LCD_SendString
  5809 ;; This function is called by:
  5810 ;;		_MainScreen
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5814                           	line	143
  5815                           global __ptext10
  5816                           __ptext10:	;psect for function _DisplayTemp
  5817  1104                     psect	text10
  5818                           	file	"main.c"
  5819                           	line	143
  5820                           	global	__size_of_DisplayTemp
  5821                           	__size_of_DisplayTemp	equ	__end_of_DisplayTemp-_DisplayTemp
  5822  0026                     	
  5823                           _DisplayTemp:	
  5824  1104                     ;incstack = 0
  5825                           	opt	stack 1
  5826                           ; Regs used in _DisplayTemp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5827                           ;DisplayTemp@tempBuffer stored from wreg
  5828                           	bcf	status, 5	;RP0=0, select bank0
  5829  1104  1283               	bcf	status, 6	;RP1=0, select bank0
  5830  1105  1303               	movwf	(DisplayTemp@tempBuffer)
  5831  1106  00A7               	line	146
  5832                           	
  5833                           l3268:	
  5834  1107                     ;main.c: 143: ;main.c: 144:     LCD_SecondLine();;main.c: 146: 
  5835                           	movf	(DisplayTemp@tempBuffer),w
  5836  1107  0827               	fcall	_Get_Temp
  5837  1108  120A  158A  2670  160A  118A  	line	148
  5838                           ;main.c: 148: 
  5839                           	bcf	status, 5	;RP0=0, select bank0
  5840  110D  1283               	bcf	status, 6	;RP1=0, select bank0
  5841  110E  1303               	movf	(DisplayTemp@tempBuffer),w
  5842  110F  0827               	movwf	(LCD_SendString@string)
  5843  1110  00F1               	movlw	(0x0)
  5844  1111  3000               	movwf	(LCD_SendString@string+1)
  5845  1112  00F2               	fcall	_LCD_SendString
  5846  1113  160A  118A  2365  160A  118A  	line	150
  5847                           	
  5848                           l3270:	
  5849  1118                     ;main.c: 150: 
  5850                           	movlw	low(0DFh)
  5851  1118  30DF               	fcall	_LCD_SendData
  5852  1119  160A  158A  2642  160A  118A  	line	151
  5853                           	
  5854                           l3272:	
  5855  111E                     ;main.c: 151: 
  5856                           	fcall	_LCD_Busy
  5857  111E  160A  158A  2674  160A  118A  	line	153
  5858                           	
  5859                           l3274:	
  5860  1123                     ;main.c: 153: 
  5861                           	movlw	low(043h)
  5862  1123  3043               	fcall	_LCD_SendData
  5863  1124  160A  158A  2642  160A  118A  	line	154
  5864                           	
  5865                           l121:	
  5866  1129                     	return
  5867  1129  0008               	opt stack 0
  5868                           GLOBAL	__end_of_DisplayTemp
  5869                           	__end_of_DisplayTemp:
  5870  112A                     	signat	_DisplayTemp,4217
  5871                           	global	_Get_Temp
  5872                           
  5873 ;; *************** function _Get_Temp *****************
  5874 ;; Defined at:
  5875 ;;		line 129 in file "Thermometer.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;  buffer          1    wreg     PTR unsigned char 
  5878 ;;		 -> tempBuffer(6), 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;  buffer          1    4[BANK0 ] PTR unsigned char 
  5881 ;;		 -> tempBuffer(6), 
  5882 ;;  i               2    5[BANK0 ] int 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      void 
  5885 ;; Registers used:
  5886 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5892 ;;      Params:         0       0       0       0       0
  5893 ;;      Locals:         0       3       0       0       0
  5894 ;;      Temps:          0       4       0       0       0
  5895 ;;      Totals:         0       7       0       0       0
  5896 ;;Total ram usage:        7 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    2
  5899 ;; This function calls:
  5900 ;;		_Delay
  5901 ;;		_Read_Byte
  5902 ;;		_Reset
  5903 ;;		_Write_Byte
  5904 ;;		___awdiv
  5905 ;;		___awmod
  5906 ;;		___lwdiv
  5907 ;;		___lwmod
  5908 ;; This function is called by:
  5909 ;;		_DisplayTemp
  5910 ;;		_HeatingControlOff
  5911 ;;		_SoundAlarm
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5915                           	file	"Thermometer.c"
  5916                           	line	129
  5917                           global __ptext11
  5918                           __ptext11:	;psect for function _Get_Temp
  5919  0E70                     psect	text11
  5920                           	file	"Thermometer.c"
  5921                           	line	129
  5922                           	global	__size_of_Get_Temp
  5923                           	__size_of_Get_Temp	equ	__end_of_Get_Temp-_Get_Temp
  5924  0190                     	
  5925                           _Get_Temp:	
  5926  0E70                     ;incstack = 0
  5927                           	opt	stack 1
  5928                           ; Regs used in _Get_Temp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5929                           ;Get_Temp@buffer stored from wreg
  5930                           	bcf	status, 5	;RP0=0, select bank0
  5931  0E70  1283               	bcf	status, 6	;RP1=0, select bank0
  5932  0E71  1303               	movwf	(Get_Temp@buffer)
  5933  0E72  00A4               	line	132
  5934                           	
  5935                           l3136:	
  5936  0E73                     ;Thermometer.c: 129: void Get_Temp(char* buffer);Thermometer.c: 130: {;Thermometer.c: 13
                                 1: int i;;Thermometer.c: 132: TRISA0 =1;
  5937                           	bsf	status, 5	;RP0=1, select bank1
  5938  0E73  1683               	bcf	status, 6	;RP1=0, select bank1
  5939  0E74  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
  5940  0E75  1405               	line	134
  5941                           	
  5942                           l3138:	
  5943  0E76                     ;Thermometer.c: 134: Reset();
  5944                           	fcall	_Reset
  5945  0E76  160A  118A  2512  120A  158A  	line	136
  5946                           	
  5947                           l3140:	
  5948  0E7B                     ;Thermometer.c: 136: Write_Byte(0XCC);
  5949                           	movlw	low(0CCh)
  5950  0E7B  30CC               	fcall	_Write_Byte
  5951  0E7C  160A  118A  23ED  120A  158A  	line	138
  5952                           	
  5953                           l3142:	
  5954  0E81                     ;Thermometer.c: 138: Write_Byte(0X44);
  5955                           	movlw	low(044h)
  5956  0E81  3044               	fcall	_Write_Byte
  5957  0E82  160A  118A  23ED  120A  158A  	line	140
  5958                           	
  5959                           l3144:	
  5960  0E87                     ;Thermometer.c: 140: Temp[0] = numberTable[tenbit];
  5961                           	bcf	status, 5	;RP0=0, select bank0
  5962  0E87  1283               	bcf	status, 6	;RP1=0, select bank0
  5963  0E88  1303               	movf	(_tenbit),w
  5964  0E89  0866               	addlw	low(_numberTable|((0x0)<<8))&0ffh
  5965  0E8A  3EA0               	movwf	fsr0
  5966  0E8B  0084               	bcf	status, 7	;select IRP bank1
  5967  0E8C  1383               	movf	indf,w
  5968  0E8D  0800               	movwf	(??_Get_Temp+0)+0
  5969  0E8E  00A0               	movf	(??_Get_Temp+0)+0,w
  5970  0E8F  0820               	bsf	status, 5	;RP0=1, select bank1
  5971  0E90  1683               	bcf	status, 6	;RP1=0, select bank1
  5972  0E91  1303               	movwf	(_Temp)^080h
  5973  0E92  00E1               	line	141
  5974                           	
  5975                           l3146:	
  5976  0E93                     ;Thermometer.c: 141: Temp[1] = numberTable[intent];
  5977                           	bcf	status, 5	;RP0=0, select bank0
  5978  0E93  1283               	bcf	status, 6	;RP1=0, select bank0
  5979  0E94  1303               	movf	(_intent),w
  5980  0E95  0865               	addlw	low(_numberTable|((0x0)<<8))&0ffh
  5981  0E96  3EA0               	movwf	fsr0
  5982  0E97  0084               	movf	indf,w
  5983  0E98  0800               	movwf	(??_Get_Temp+0)+0
  5984  0E99  00A0               	movf	(??_Get_Temp+0)+0,w
  5985  0E9A  0820               	bsf	status, 5	;RP0=1, select bank1
  5986  0E9B  1683               	bcf	status, 6	;RP1=0, select bank1
  5987  0E9C  1303               	movwf	0+(_Temp)^080h+01h
  5988  0E9D  00E2               	line	142
  5989                           	
  5990                           l3148:	
  5991  0E9E                     ;Thermometer.c: 142: Temp[2] = '.';
  5992                           	movlw	low(02Eh)
  5993  0E9E  302E               	bcf	status, 5	;RP0=0, select bank0
  5994  0E9F  1283               	bcf	status, 6	;RP1=0, select bank0
  5995  0EA0  1303               	movwf	(??_Get_Temp+0)+0
  5996  0EA1  00A0               	movf	(??_Get_Temp+0)+0,w
  5997  0EA2  0820               	bsf	status, 5	;RP0=1, select bank1
  5998  0EA3  1683               	bcf	status, 6	;RP1=0, select bank1
  5999  0EA4  1303               	movwf	0+(_Temp)^080h+02h
  6000  0EA5  00E3               	line	143
  6001                           	
  6002                           l3150:	
  6003  0EA6                     ;Thermometer.c: 143: Temp[3] = numberTable[tenthbit];
  6004                           	bcf	status, 5	;RP0=0, select bank0
  6005  0EA6  1283               	bcf	status, 6	;RP1=0, select bank0
  6006  0EA7  1303               	movf	(_tenthbit),w
  6007  0EA8  0864               	addlw	low(_numberTable|((0x0)<<8))&0ffh
  6008  0EA9  3EA0               	movwf	fsr0
  6009  0EAA  0084               	movf	indf,w
  6010  0EAB  0800               	movwf	(??_Get_Temp+0)+0
  6011  0EAC  00A0               	movf	(??_Get_Temp+0)+0,w
  6012  0EAD  0820               	bsf	status, 5	;RP0=1, select bank1
  6013  0EAE  1683               	bcf	status, 6	;RP1=0, select bank1
  6014  0EAF  1303               	movwf	0+(_Temp)^080h+03h
  6015  0EB0  00E4               	line	144
  6016                           	
  6017                           l3152:	
  6018  0EB1                     ;Thermometer.c: 144: Temp[4] = numberTable[hundredthbit];
  6019                           	bcf	status, 5	;RP0=0, select bank0
  6020  0EB1  1283               	bcf	status, 6	;RP1=0, select bank0
  6021  0EB2  1303               	movf	(_hundredthbit),w
  6022  0EB3  0863               	addlw	low(_numberTable|((0x0)<<8))&0ffh
  6023  0EB4  3EA0               	movwf	fsr0
  6024  0EB5  0084               	movf	indf,w
  6025  0EB6  0800               	movwf	(??_Get_Temp+0)+0
  6026  0EB7  00A0               	movf	(??_Get_Temp+0)+0,w
  6027  0EB8  0820               	bsf	status, 5	;RP0=1, select bank1
  6028  0EB9  1683               	bcf	status, 6	;RP1=0, select bank1
  6029  0EBA  1303               	movwf	0+(_Temp)^080h+04h
  6030  0EBB  00E5               	line	146
  6031                           	
  6032                           l3154:	
  6033  0EBC                     ;Thermometer.c: 146: for(i = 0; i < 5; i++)
  6034                           	bcf	status, 5	;RP0=0, select bank0
  6035  0EBC  1283               	bcf	status, 6	;RP1=0, select bank0
  6036  0EBD  1303               	clrf	(Get_Temp@i)
  6037  0EBE  01A5               	clrf	(Get_Temp@i+1)
  6038  0EBF  01A6               	
  6039                           l3156:	
  6040  0EC0                     	movf	(Get_Temp@i+1),w
  6041  0EC0  0826               	xorlw	80h
  6042  0EC1  3A80               	movwf	btemp+1
  6043  0EC2  00FF               	movlw	(0)^80h
  6044  0EC3  3080               	subwf	btemp+1,w
  6045  0EC4  027F               	skipz
  6046  0EC5  1D03               	goto	u2305
  6047  0EC6  2EC9               	movlw	05h
  6048  0EC7  3005               	subwf	(Get_Temp@i),w
  6049  0EC8  0225               u2305:
  6050  0EC9                     
  6051                           	skipc
  6052  0EC9  1C03               	goto	u2301
  6053  0ECA  2ECC               	goto	u2300
  6054  0ECB  2ECD               u2301:
  6055  0ECC                     	goto	l3160
  6056  0ECC  2ECF               u2300:
  6057  0ECD                     	goto	l3166
  6058  0ECD  2EF2               	
  6059                           l3158:	
  6060  0ECE                     	goto	l3166
  6061  0ECE  2EF2               	
  6062                           l610:	
  6063  0ECF                     	line	148
  6064                           	
  6065                           l3160:	
  6066  0ECF                     ;Thermometer.c: 147: {;Thermometer.c: 148:     buffer[i] = Temp[i];
  6067                           	bcf	status, 5	;RP0=0, select bank0
  6068  0ECF  1283               	bcf	status, 6	;RP1=0, select bank0
  6069  0ED0  1303               	movf	(Get_Temp@i),w
  6070  0ED1  0825               	addlw	low(_Temp|((0x0)<<8))&0ffh
  6071  0ED2  3EE1               	movwf	fsr0
  6072  0ED3  0084               	bcf	status, 7	;select IRP bank1
  6073  0ED4  1383               	movf	indf,w
  6074  0ED5  0800               	movwf	(??_Get_Temp+0)+0
  6075  0ED6  00A0               	movf	(Get_Temp@i),w
  6076  0ED7  0825               	addwf	(Get_Temp@buffer),w
  6077  0ED8  0724               	movwf	(??_Get_Temp+1)+0
  6078  0ED9  00A1               	movf	0+(??_Get_Temp+1)+0,w
  6079  0EDA  0821               	movwf	fsr0
  6080  0EDB  0084               	movf	(??_Get_Temp+0)+0,w
  6081  0EDC  0820               	movwf	indf
  6082  0EDD  0080               	line	149
  6083                           	
  6084                           l3162:	
  6085  0EDE                     ;Thermometer.c: 149: }
  6086                           	movlw	01h
  6087  0EDE  3001               	addwf	(Get_Temp@i),f
  6088  0EDF  07A5               	skipnc
  6089  0EE0  1803               	incf	(Get_Temp@i+1),f
  6090  0EE1  0AA6               	movlw	0
  6091  0EE2  3000               	addwf	(Get_Temp@i+1),f
  6092  0EE3  07A6               	
  6093                           l3164:	
  6094  0EE4                     	movf	(Get_Temp@i+1),w
  6095  0EE4  0826               	xorlw	80h
  6096  0EE5  3A80               	movwf	btemp+1
  6097  0EE6  00FF               	movlw	(0)^80h
  6098  0EE7  3080               	subwf	btemp+1,w
  6099  0EE8  027F               	skipz
  6100  0EE9  1D03               	goto	u2315
  6101  0EEA  2EED               	movlw	05h
  6102  0EEB  3005               	subwf	(Get_Temp@i),w
  6103  0EEC  0225               u2315:
  6104  0EED                     
  6105                           	skipc
  6106  0EED  1C03               	goto	u2311
  6107  0EEE  2EF0               	goto	u2310
  6108  0EEF  2EF1               u2311:
  6109  0EF0                     	goto	l3160
  6110  0EF0  2ECF               u2310:
  6111  0EF1                     	goto	l3166
  6112  0EF1  2EF2               	
  6113                           l611:	
  6114  0EF2                     	line	150
  6115                           	
  6116                           l3166:	
  6117  0EF2                     ;Thermometer.c: 150: Delay(10,70);
  6118                           	movlw	low(046h)
  6119  0EF2  3046               	bcf	status, 5	;RP0=0, select bank0
  6120  0EF3  1283               	bcf	status, 6	;RP1=0, select bank0
  6121  0EF4  1303               	movwf	(??_Get_Temp+0)+0
  6122  0EF5  00A0               	movf	(??_Get_Temp+0)+0,w
  6123  0EF6  0820               	movwf	(Delay@y)
  6124  0EF7  00F0               	movlw	low(0Ah)
  6125  0EF8  300A               	fcall	_Delay
  6126  0EF9  160A  158A  2689  120A  158A  	line	152
  6127                           	
  6128                           l3168:	
  6129  0EFE                     ;Thermometer.c: 152: Reset();
  6130                           	fcall	_Reset
  6131  0EFE  160A  118A  2512  120A  158A  	line	154
  6132                           	
  6133                           l3170:	
  6134  0F03                     ;Thermometer.c: 154: Write_Byte(0XCC);
  6135                           	movlw	low(0CCh)
  6136  0F03  30CC               	fcall	_Write_Byte
  6137  0F04  160A  118A  23ED  120A  158A  	line	156
  6138                           	
  6139                           l3172:	
  6140  0F09                     ;Thermometer.c: 156: Write_Byte(0XBE);
  6141                           	movlw	low(0BEh)
  6142  0F09  30BE               	fcall	_Write_Byte
  6143  0F0A  160A  118A  23ED  120A  158A  	line	158
  6144                           	
  6145                           l3174:	
  6146  0F0F                     ;Thermometer.c: 158: TLB = Read_Byte();
  6147                           	fcall	_Read_Byte
  6148  0F0F  160A  118A  23A9  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  6149  0F14  1283               	bcf	status, 6	;RP1=0, select bank0
  6150  0F15  1303               	movwf	(??_Get_Temp+0)+0
  6151  0F16  00A0               	movf	(??_Get_Temp+0)+0,w
  6152  0F17  0820               	movwf	(_TLB)
  6153  0F18  00EA               	line	160
  6154                           	
  6155                           l3176:	
  6156  0F19                     ;Thermometer.c: 160: THB = Read_Byte();
  6157                           	fcall	_Read_Byte
  6158  0F19  160A  118A  23A9  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  6159  0F1E  1283               	bcf	status, 6	;RP1=0, select bank0
  6160  0F1F  1303               	movwf	(??_Get_Temp+0)+0
  6161  0F20  00A0               	movf	(??_Get_Temp+0)+0,w
  6162  0F21  0820               	movwf	(_THB)
  6163  0F22  00E9               	line	162
  6164                           	
  6165                           l3178:	
  6166  0F23                     ;Thermometer.c: 162: TRISA0 =1;
  6167                           	bsf	status, 5	;RP0=1, select bank1
  6168  0F23  1683               	bcf	status, 6	;RP1=0, select bank1
  6169  0F24  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
  6170  0F25  1405               	line	164
  6171                           	
  6172                           l3180:	
  6173  0F26                     ;Thermometer.c: 164: TempInt=(TLB>>4)|((THB<<4)&(0X3f));
  6174                           	bcf	status, 5	;RP0=0, select bank0
  6175  0F26  1283               	bcf	status, 6	;RP1=0, select bank0
  6176  0F27  1303               	movf	(_THB),w
  6177  0F28  0869               	movwf	(??_Get_Temp+0)+0
  6178  0F29  00A0               	movlw	04h
  6179  0F2A  3004               u2325:
  6180  0F2B                     	clrc
  6181  0F2B  1003               	rlf	(??_Get_Temp+0)+0,f
  6182  0F2C  0DA0               	addlw	-1
  6183  0F2D  3EFF               	skipz
  6184  0F2E  1D03               	goto	u2325
  6185  0F2F  2F2B               	movlw	low(03Fh)
  6186  0F30  303F               	andwf	0+(??_Get_Temp+0)+0,w
  6187  0F31  0520               	movwf	(??_Get_Temp+1)+0
  6188  0F32  00A1               	movf	(_TLB),w
  6189  0F33  086A               	movwf	(??_Get_Temp+2)+0
  6190  0F34  00A2               	movlw	04h
  6191  0F35  3004               u2335:
  6192  0F36                     	clrc
  6193  0F36  1003               	rrf	(??_Get_Temp+2)+0,f
  6194  0F37  0CA2               	addlw	-1
  6195  0F38  3EFF               	skipz
  6196  0F39  1D03               	goto	u2335
  6197  0F3A  2F36               	movf	0+(??_Get_Temp+2)+0,w
  6198  0F3B  0822               	iorwf	0+(??_Get_Temp+1)+0,w
  6199  0F3C  0421               	movwf	(??_Get_Temp+3)+0
  6200  0F3D  00A3               	movf	(??_Get_Temp+3)+0,w
  6201  0F3E  0823               	movwf	(_TempInt)
  6202  0F3F  00E8               	line	166
  6203                           	
  6204                           l3182:	
  6205  0F40                     ;Thermometer.c: 166: TempDec=TLB<<4;
  6206                           	movf	(_TLB),w
  6207  0F40  086A               	movwf	(??_Get_Temp+0)+0
  6208  0F41  00A0               	movlw	(04h)-1
  6209  0F42  3003               u2345:
  6210  0F43                     	clrc
  6211  0F43  1003               	rlf	(??_Get_Temp+0)+0,f
  6212  0F44  0DA0               	addlw	-1
  6213  0F45  3EFF               	skipz
  6214  0F46  1D03               	goto	u2345
  6215  0F47  2F43               	clrc
  6216  0F48  1003               	rlf	(??_Get_Temp+0)+0,w
  6217  0F49  0D20               	movwf	(??_Get_Temp+1)+0
  6218  0F4A  00A1               	movf	(??_Get_Temp+1)+0,w
  6219  0F4B  0821               	movwf	(_TempDec)
  6220  0F4C  00E7               	line	168
  6221                           	
  6222                           l3184:	
  6223  0F4D                     ;Thermometer.c: 168: if(TempInt>100) TempInt = TempInt/100;
  6224                           	movlw	low(065h)
  6225  0F4D  3065               	subwf	(_TempInt),w
  6226  0F4E  0268               	skipc
  6227  0F4F  1C03               	goto	u2351
  6228  0F50  2F52               	goto	u2350
  6229  0F51  2F53               u2351:
  6230  0F52                     	goto	l612
  6231  0F52  2F69               u2350:
  6232  0F53                     	
  6233                           l3186:	
  6234  0F53                     	movlw	064h
  6235  0F53  3064               	movwf	(___awdiv@divisor)
  6236  0F54  00F0               	movlw	0
  6237  0F55  3000               	movwf	((___awdiv@divisor))+1
  6238  0F56  00F1               	movf	(_TempInt),w
  6239  0F57  0868               	movwf	(??_Get_Temp+0)+0
  6240  0F58  00A0               	clrf	(??_Get_Temp+0)+0+1
  6241  0F59  01A1               	movf	0+(??_Get_Temp+0)+0,w
  6242  0F5A  0820               	movwf	(___awdiv@dividend)
  6243  0F5B  00F2               	movf	1+(??_Get_Temp+0)+0,w
  6244  0F5C  0821               	movwf	(___awdiv@dividend+1)
  6245  0F5D  00F3               	fcall	___awdiv
  6246  0F5E  160A  118A  25CA  120A  158A  	movf	(0+(?___awdiv)),w
  6247  0F63  0870               	bcf	status, 5	;RP0=0, select bank0
  6248  0F64  1283               	bcf	status, 6	;RP1=0, select bank0
  6249  0F65  1303               	movwf	(??_Get_Temp+2)+0
  6250  0F66  00A2               	movf	(??_Get_Temp+2)+0,w
  6251  0F67  0822               	movwf	(_TempInt)
  6252  0F68  00E8               	
  6253                           l612:	
  6254  0F69                     	line	170
  6255                           ;Thermometer.c: 170: intent=TempInt%10;
  6256                           	movlw	0Ah
  6257  0F69  300A               	movwf	(___awmod@divisor)
  6258  0F6A  00F0               	movlw	0
  6259  0F6B  3000               	movwf	((___awmod@divisor))+1
  6260  0F6C  00F1               	movf	(_TempInt),w
  6261  0F6D  0868               	movwf	(??_Get_Temp+0)+0
  6262  0F6E  00A0               	clrf	(??_Get_Temp+0)+0+1
  6263  0F6F  01A1               	movf	0+(??_Get_Temp+0)+0,w
  6264  0F70  0820               	movwf	(___awmod@dividend)
  6265  0F71  00F2               	movf	1+(??_Get_Temp+0)+0,w
  6266  0F72  0821               	movwf	(___awmod@dividend+1)
  6267  0F73  00F3               	fcall	___awmod
  6268  0F74  160A  118A  2567  120A  158A  	movf	(0+(?___awmod)),w
  6269  0F79  0870               	bcf	status, 5	;RP0=0, select bank0
  6270  0F7A  1283               	bcf	status, 6	;RP1=0, select bank0
  6271  0F7B  1303               	movwf	(??_Get_Temp+2)+0
  6272  0F7C  00A2               	movf	(??_Get_Temp+2)+0,w
  6273  0F7D  0822               	movwf	(_intent)
  6274  0F7E  00E5               	line	172
  6275                           ;Thermometer.c: 172: tenbit=TempInt/10;
  6276                           	movlw	0Ah
  6277  0F7F  300A               	movwf	(___awdiv@divisor)
  6278  0F80  00F0               	movlw	0
  6279  0F81  3000               	movwf	((___awdiv@divisor))+1
  6280  0F82  00F1               	movf	(_TempInt),w
  6281  0F83  0868               	movwf	(??_Get_Temp+0)+0
  6282  0F84  00A0               	clrf	(??_Get_Temp+0)+0+1
  6283  0F85  01A1               	movf	0+(??_Get_Temp+0)+0,w
  6284  0F86  0820               	movwf	(___awdiv@dividend)
  6285  0F87  00F2               	movf	1+(??_Get_Temp+0)+0,w
  6286  0F88  0821               	movwf	(___awdiv@dividend+1)
  6287  0F89  00F3               	fcall	___awdiv
  6288  0F8A  160A  118A  25CA  120A  158A  	movf	(0+(?___awdiv)),w
  6289  0F8F  0870               	bcf	status, 5	;RP0=0, select bank0
  6290  0F90  1283               	bcf	status, 6	;RP1=0, select bank0
  6291  0F91  1303               	movwf	(??_Get_Temp+2)+0
  6292  0F92  00A2               	movf	(??_Get_Temp+2)+0,w
  6293  0F93  0822               	movwf	(_tenbit)
  6294  0F94  00E6               	line	174
  6295                           	
  6296                           l3188:	
  6297  0F95                     ;Thermometer.c: 174: TempBCD=0;
  6298                           	clrf	(_TempBCD)
  6299  0F95  01D6               	clrf	(_TempBCD+1)
  6300  0F96  01D7               	line	176
  6301                           	
  6302                           l3190:	
  6303  0F97                     ;Thermometer.c: 176: if (TempDec & 0x80) TempBCD=TempBCD+5000;
  6304                           	btfss	(_TempDec),(7)&7
  6305  0F97  1FE7               	goto	u2361
  6306  0F98  2F9A               	goto	u2360
  6307  0F99  2F9B               u2361:
  6308  0F9A                     	goto	l3194
  6309  0F9A  2FA4               u2360:
  6310  0F9B                     	
  6311                           l3192:	
  6312  0F9B                     	movf	(_TempBCD),w
  6313  0F9B  0856               	addlw	low(01388h)
  6314  0F9C  3E88               	movwf	(_TempBCD)
  6315  0F9D  00D6               	movf	(_TempBCD+1),w
  6316  0F9E  0857               	skipnc
  6317  0F9F  1803               	addlw	1
  6318  0FA0  3E01               	addlw	high(01388h)
  6319  0FA1  3E13               	movwf	1+(_TempBCD)
  6320  0FA2  00D7               	goto	l3194
  6321  0FA3  2FA4               	
  6322                           l613:	
  6323  0FA4                     	line	177
  6324                           	
  6325                           l3194:	
  6326  0FA4                     ;Thermometer.c: 177: if (TempDec & 0x40) TempBCD=TempBCD+2500;
  6327                           	btfss	(_TempDec),(6)&7
  6328  0FA4  1F67               	goto	u2371
  6329  0FA5  2FA7               	goto	u2370
  6330  0FA6  2FA8               u2371:
  6331  0FA7                     	goto	l3198
  6332  0FA7  2FB1               u2370:
  6333  0FA8                     	
  6334                           l3196:	
  6335  0FA8                     	movf	(_TempBCD),w
  6336  0FA8  0856               	addlw	low(09C4h)
  6337  0FA9  3EC4               	movwf	(_TempBCD)
  6338  0FAA  00D6               	movf	(_TempBCD+1),w
  6339  0FAB  0857               	skipnc
  6340  0FAC  1803               	addlw	1
  6341  0FAD  3E01               	addlw	high(09C4h)
  6342  0FAE  3E09               	movwf	1+(_TempBCD)
  6343  0FAF  00D7               	goto	l3198
  6344  0FB0  2FB1               	
  6345                           l614:	
  6346  0FB1                     	line	178
  6347                           	
  6348                           l3198:	
  6349  0FB1                     ;Thermometer.c: 178: if (TempDec & 0x20) TempBCD=TempBCD+1250;
  6350                           	btfss	(_TempDec),(5)&7
  6351  0FB1  1EE7               	goto	u2381
  6352  0FB2  2FB4               	goto	u2380
  6353  0FB3  2FB5               u2381:
  6354  0FB4                     	goto	l3202
  6355  0FB4  2FBE               u2380:
  6356  0FB5                     	
  6357                           l3200:	
  6358  0FB5                     	movf	(_TempBCD),w
  6359  0FB5  0856               	addlw	low(04E2h)
  6360  0FB6  3EE2               	movwf	(_TempBCD)
  6361  0FB7  00D6               	movf	(_TempBCD+1),w
  6362  0FB8  0857               	skipnc
  6363  0FB9  1803               	addlw	1
  6364  0FBA  3E01               	addlw	high(04E2h)
  6365  0FBB  3E04               	movwf	1+(_TempBCD)
  6366  0FBC  00D7               	goto	l3202
  6367  0FBD  2FBE               	
  6368                           l615:	
  6369  0FBE                     	line	179
  6370                           	
  6371                           l3202:	
  6372  0FBE                     ;Thermometer.c: 179: if (TempDec & 0x10) TempBCD=TempBCD+625;
  6373                           	btfss	(_TempDec),(4)&7
  6374  0FBE  1E67               	goto	u2391
  6375  0FBF  2FC1               	goto	u2390
  6376  0FC0  2FC2               u2391:
  6377  0FC1                     	goto	l3206
  6378  0FC1  2FCB               u2390:
  6379  0FC2                     	
  6380                           l3204:	
  6381  0FC2                     	movf	(_TempBCD),w
  6382  0FC2  0856               	addlw	low(0271h)
  6383  0FC3  3E71               	movwf	(_TempBCD)
  6384  0FC4  00D6               	movf	(_TempBCD+1),w
  6385  0FC5  0857               	skipnc
  6386  0FC6  1803               	addlw	1
  6387  0FC7  3E01               	addlw	high(0271h)
  6388  0FC8  3E02               	movwf	1+(_TempBCD)
  6389  0FC9  00D7               	goto	l3206
  6390  0FCA  2FCB               	
  6391                           l616:	
  6392  0FCB                     	line	181
  6393                           	
  6394                           l3206:	
  6395  0FCB                     ;Thermometer.c: 181: tenthbit=TempBCD/1000;
  6396                           	movlw	0E8h
  6397  0FCB  30E8               	movwf	(___lwdiv@divisor)
  6398  0FCC  00F6               	movlw	03h
  6399  0FCD  3003               	movwf	((___lwdiv@divisor))+1
  6400  0FCE  00F7               	movf	(_TempBCD+1),w
  6401  0FCF  0857               	movwf	(___lwdiv@dividend+1)
  6402  0FD0  00F9               	movf	(_TempBCD),w
  6403  0FD1  0856               	movwf	(___lwdiv@dividend)
  6404  0FD2  00F8               	fcall	___lwdiv
  6405  0FD3  160A  118A  2478  120A  158A  	movf	(0+(?___lwdiv)),w
  6406  0FD8  0876               	bcf	status, 5	;RP0=0, select bank0
  6407  0FD9  1283               	bcf	status, 6	;RP1=0, select bank0
  6408  0FDA  1303               	movwf	(??_Get_Temp+0)+0
  6409  0FDB  00A0               	movf	(??_Get_Temp+0)+0,w
  6410  0FDC  0820               	movwf	(_tenthbit)
  6411  0FDD  00E4               	line	183
  6412                           	
  6413                           l3208:	
  6414  0FDE                     ;Thermometer.c: 183: hundredthbit=(TempBCD%1000)/100;
  6415                           	movlw	064h
  6416  0FDE  3064               	movwf	(___lwdiv@divisor)
  6417  0FDF  00F6               	movlw	0
  6418  0FE0  3000               	movwf	((___lwdiv@divisor))+1
  6419  0FE1  00F7               	movf	(_TempBCD+1),w
  6420  0FE2  0857               	movwf	(___lwmod@dividend+1)
  6421  0FE3  00F3               	movf	(_TempBCD),w
  6422  0FE4  0856               	movwf	(___lwmod@dividend)
  6423  0FE5  00F2               	movlw	0E8h
  6424  0FE6  30E8               	movwf	(___lwmod@divisor)
  6425  0FE7  00F0               	movlw	03h
  6426  0FE8  3003               	movwf	((___lwmod@divisor))+1
  6427  0FE9  00F1               	fcall	___lwmod
  6428  0FEA  160A  118A  22E2  120A  158A  	movf	(1+(?___lwmod)),w
  6429  0FEF  0871               	movwf	(___lwdiv@dividend+1)
  6430  0FF0  00F9               	movf	(0+(?___lwmod)),w
  6431  0FF1  0870               	movwf	(___lwdiv@dividend)
  6432  0FF2  00F8               	fcall	___lwdiv
  6433  0FF3  160A  118A  2478  120A  158A  	movf	(0+(?___lwdiv)),w
  6434  0FF8  0876               	bcf	status, 5	;RP0=0, select bank0
  6435  0FF9  1283               	bcf	status, 6	;RP1=0, select bank0
  6436  0FFA  1303               	movwf	(??_Get_Temp+0)+0
  6437  0FFB  00A0               	movf	(??_Get_Temp+0)+0,w
  6438  0FFC  0820               	movwf	(_hundredthbit)
  6439  0FFD  00E3               	line	184
  6440                           	
  6441                           l3210:	
  6442  0FFE                     ;Thermometer.c: 184: __nop();
  6443                           	opt	asmopt_push
  6444                           	opt	asmopt_off
  6445                           	nop
  6446  0FFE  0000               	opt	asmopt_pop
  6447                           	line	185
  6448                           	
  6449                           l617:	
  6450  0FFF                     	return
  6451  0FFF  0008               	opt stack 0
  6452                           GLOBAL	__end_of_Get_Temp
  6453                           	__end_of_Get_Temp:
  6454  1000                     	signat	_Get_Temp,4217
  6455                           	global	___lwmod
  6456                           
  6457 ;; *************** function ___lwmod *****************
  6458 ;; Defined at:
  6459 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;  divisor         2    0[COMMON] unsigned int 
  6462 ;;  dividend        2    2[COMMON] unsigned int 
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;  counter         1    5[COMMON] unsigned char 
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  2    0[COMMON] unsigned int 
  6467 ;; Registers used:
  6468 ;;		wreg, status,2, status,0
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6474 ;;      Params:         4       0       0       0       0
  6475 ;;      Locals:         1       0       0       0       0
  6476 ;;      Temps:          1       0       0       0       0
  6477 ;;      Totals:         6       0       0       0       0
  6478 ;;Total ram usage:        6 bytes
  6479 ;; Hardware stack levels used:    1
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_Get_Temp
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           psect	text12,local,class=CODE,delta=2,merge=1,group=1
  6487                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  6488                           	line	5
  6489                           global __ptext12
  6490                           __ptext12:	;psect for function ___lwmod
  6491  12E2                     psect	text12
  6492                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  6493                           	line	5
  6494                           	global	__size_of___lwmod
  6495                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  6496  0041                     	
  6497                           ___lwmod:	
  6498  12E2                     ;incstack = 0
  6499                           	opt	stack 2
  6500                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6501                           	line	12
  6502                           	
  6503                           l3076:	
  6504  12E2                     	movf	((___lwmod@divisor)),w
  6505  12E2  0870               iorwf	((___lwmod@divisor+1)),w
  6506  12E3  0471               	btfsc	status,2
  6507  12E4  1903               	goto	u2211
  6508  12E5  2AE7               	goto	u2210
  6509  12E6  2AE8               u2211:
  6510  12E7                     	goto	l3094
  6511  12E7  2B1D               u2210:
  6512  12E8                     	line	13
  6513                           	
  6514                           l3078:	
  6515  12E8                     	clrf	(___lwmod@counter)
  6516  12E8  01F5               	incf	(___lwmod@counter),f
  6517  12E9  0AF5               	line	14
  6518                           	goto	l3084
  6519  12EA  2AF7               	
  6520                           l980:	
  6521  12EB                     	line	15
  6522                           	
  6523                           l3080:	
  6524  12EB                     	movlw	01h
  6525  12EB  3001               	
  6526                           u2225:
  6527  12EC                     	clrc
  6528  12EC  1003               	rlf	(___lwmod@divisor),f
  6529  12ED  0DF0               	rlf	(___lwmod@divisor+1),f
  6530  12EE  0DF1               	addlw	-1
  6531  12EF  3EFF               	skipz
  6532  12F0  1D03               	goto	u2225
  6533  12F1  2AEC               	line	16
  6534                           	
  6535                           l3082:	
  6536  12F2                     	movlw	low(01h)
  6537  12F2  3001               	movwf	(??___lwmod+0)+0
  6538  12F3  00F4               	movf	(??___lwmod+0)+0,w
  6539  12F4  0874               	addwf	(___lwmod@counter),f
  6540  12F5  07F5               	goto	l3084
  6541  12F6  2AF7               	line	17
  6542                           	
  6543                           l979:	
  6544  12F7                     	line	14
  6545                           	
  6546                           l3084:	
  6547  12F7                     	btfss	(___lwmod@divisor+1),(15)&7
  6548  12F7  1FF1               	goto	u2231
  6549  12F8  2AFA               	goto	u2230
  6550  12F9  2AFB               u2231:
  6551  12FA                     	goto	l3080
  6552  12FA  2AEB               u2230:
  6553  12FB                     	goto	l3086
  6554  12FB  2AFD               	
  6555                           l981:	
  6556  12FC                     	goto	l3086
  6557  12FC  2AFD               	line	18
  6558                           	
  6559                           l982:	
  6560  12FD                     	line	19
  6561                           	
  6562                           l3086:	
  6563  12FD                     	movf	(___lwmod@divisor+1),w
  6564  12FD  0871               	subwf	(___lwmod@dividend+1),w
  6565  12FE  0273               	skipz
  6566  12FF  1D03               	goto	u2245
  6567  1300  2B03               	movf	(___lwmod@divisor),w
  6568  1301  0870               	subwf	(___lwmod@dividend),w
  6569  1302  0272               u2245:
  6570  1303                     	skipc
  6571  1303  1C03               	goto	u2241
  6572  1304  2B06               	goto	u2240
  6573  1305  2B07               u2241:
  6574  1306                     	goto	l3090
  6575  1306  2B0E               u2240:
  6576  1307                     	line	20
  6577                           	
  6578                           l3088:	
  6579  1307                     	movf	(___lwmod@divisor),w
  6580  1307  0870               	subwf	(___lwmod@dividend),f
  6581  1308  02F2               	movf	(___lwmod@divisor+1),w
  6582  1309  0871               	skipc
  6583  130A  1C03               	decf	(___lwmod@dividend+1),f
  6584  130B  03F3               	subwf	(___lwmod@dividend+1),f
  6585  130C  02F3               	goto	l3090
  6586  130D  2B0E               	
  6587                           l983:	
  6588  130E                     	line	21
  6589                           	
  6590                           l3090:	
  6591  130E                     	movlw	01h
  6592  130E  3001               	
  6593                           u2255:
  6594  130F                     	clrc
  6595  130F  1003               	rrf	(___lwmod@divisor+1),f
  6596  1310  0CF1               	rrf	(___lwmod@divisor),f
  6597  1311  0CF0               	addlw	-1
  6598  1312  3EFF               	skipz
  6599  1313  1D03               	goto	u2255
  6600  1314  2B0F               	line	22
  6601                           	
  6602                           l3092:	
  6603  1315                     	movlw	01h
  6604  1315  3001               	subwf	(___lwmod@counter),f
  6605  1316  02F5               	btfss	status,2
  6606  1317  1D03               	goto	u2261
  6607  1318  2B1A               	goto	u2260
  6608  1319  2B1B               u2261:
  6609  131A                     	goto	l3086
  6610  131A  2AFD               u2260:
  6611  131B                     	goto	l3094
  6612  131B  2B1D               	
  6613                           l984:	
  6614  131C                     	goto	l3094
  6615  131C  2B1D               	line	23
  6616                           	
  6617                           l978:	
  6618  131D                     	line	24
  6619                           	
  6620                           l3094:	
  6621  131D                     	movf	(___lwmod@dividend+1),w
  6622  131D  0873               	movwf	(?___lwmod+1)
  6623  131E  00F1               	movf	(___lwmod@dividend),w
  6624  131F  0872               	movwf	(?___lwmod)
  6625  1320  00F0               	goto	l985
  6626  1321  2B22               	
  6627                           l3096:	
  6628  1322                     	line	25
  6629                           	
  6630                           l985:	
  6631  1322                     	return
  6632  1322  0008               	opt stack 0
  6633                           GLOBAL	__end_of___lwmod
  6634                           	__end_of___lwmod:
  6635  1323                     	signat	___lwmod,8314
  6636                           	global	___lwdiv
  6637                           
  6638 ;; *************** function ___lwdiv *****************
  6639 ;; Defined at:
  6640 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  6641 ;; Parameters:    Size  Location     Type
  6642 ;;  divisor         2    6[COMMON] unsigned int 
  6643 ;;  dividend        2    8[COMMON] unsigned int 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  quotient        2   11[COMMON] unsigned int 
  6646 ;;  counter         1   13[COMMON] unsigned char 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  2    6[COMMON] unsigned int 
  6649 ;; Registers used:
  6650 ;;		wreg, status,2, status,0
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6656 ;;      Params:         4       0       0       0       0
  6657 ;;      Locals:         3       0       0       0       0
  6658 ;;      Temps:          1       0       0       0       0
  6659 ;;      Totals:         8       0       0       0       0
  6660 ;;Total ram usage:        8 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; This function calls:
  6663 ;;		Nothing
  6664 ;; This function is called by:
  6665 ;;		_Get_Temp
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           psect	text13,local,class=CODE,delta=2,merge=1,group=1
  6669                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  6670                           	line	5
  6671                           global __ptext13
  6672                           __ptext13:	;psect for function ___lwdiv
  6673  1478                     psect	text13
  6674                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  6675                           	line	5
  6676                           	global	__size_of___lwdiv
  6677                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  6678  004B                     	
  6679                           ___lwdiv:	
  6680  1478                     ;incstack = 0
  6681                           	opt	stack 2
  6682                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6683                           	line	13
  6684                           	
  6685                           l3050:	
  6686  1478                     	clrf	(___lwdiv@quotient)
  6687  1478  01FB               	clrf	(___lwdiv@quotient+1)
  6688  1479  01FC               	line	14
  6689                           	
  6690                           l3052:	
  6691  147A                     	movf	((___lwdiv@divisor)),w
  6692  147A  0876               iorwf	((___lwdiv@divisor+1)),w
  6693  147B  0477               	btfsc	status,2
  6694  147C  1903               	goto	u2141
  6695  147D  2C7F               	goto	u2140
  6696  147E  2C80               u2141:
  6697  147F                     	goto	l3072
  6698  147F  2CBD               u2140:
  6699  1480                     	line	15
  6700                           	
  6701                           l3054:	
  6702  1480                     	clrf	(___lwdiv@counter)
  6703  1480  01FD               	incf	(___lwdiv@counter),f
  6704  1481  0AFD               	line	16
  6705                           	goto	l3060
  6706  1482  2C8F               	
  6707                           l970:	
  6708  1483                     	line	17
  6709                           	
  6710                           l3056:	
  6711  1483                     	movlw	01h
  6712  1483  3001               	
  6713                           u2155:
  6714  1484                     	clrc
  6715  1484  1003               	rlf	(___lwdiv@divisor),f
  6716  1485  0DF6               	rlf	(___lwdiv@divisor+1),f
  6717  1486  0DF7               	addlw	-1
  6718  1487  3EFF               	skipz
  6719  1488  1D03               	goto	u2155
  6720  1489  2C84               	line	18
  6721                           	
  6722                           l3058:	
  6723  148A                     	movlw	low(01h)
  6724  148A  3001               	movwf	(??___lwdiv+0)+0
  6725  148B  00FA               	movf	(??___lwdiv+0)+0,w
  6726  148C  087A               	addwf	(___lwdiv@counter),f
  6727  148D  07FD               	goto	l3060
  6728  148E  2C8F               	line	19
  6729                           	
  6730                           l969:	
  6731  148F                     	line	16
  6732                           	
  6733                           l3060:	
  6734  148F                     	btfss	(___lwdiv@divisor+1),(15)&7
  6735  148F  1FF7               	goto	u2161
  6736  1490  2C92               	goto	u2160
  6737  1491  2C93               u2161:
  6738  1492                     	goto	l3056
  6739  1492  2C83               u2160:
  6740  1493                     	goto	l3062
  6741  1493  2C95               	
  6742                           l971:	
  6743  1494                     	goto	l3062
  6744  1494  2C95               	line	20
  6745                           	
  6746                           l972:	
  6747  1495                     	line	21
  6748                           	
  6749                           l3062:	
  6750  1495                     	movlw	01h
  6751  1495  3001               	
  6752                           u2175:
  6753  1496                     	clrc
  6754  1496  1003               	rlf	(___lwdiv@quotient),f
  6755  1497  0DFB               	rlf	(___lwdiv@quotient+1),f
  6756  1498  0DFC               	addlw	-1
  6757  1499  3EFF               	skipz
  6758  149A  1D03               	goto	u2175
  6759  149B  2C96               	line	22
  6760                           	movf	(___lwdiv@divisor+1),w
  6761  149C  0877               	subwf	(___lwdiv@dividend+1),w
  6762  149D  0279               	skipz
  6763  149E  1D03               	goto	u2185
  6764  149F  2CA2               	movf	(___lwdiv@divisor),w
  6765  14A0  0876               	subwf	(___lwdiv@dividend),w
  6766  14A1  0278               u2185:
  6767  14A2                     	skipc
  6768  14A2  1C03               	goto	u2181
  6769  14A3  2CA5               	goto	u2180
  6770  14A4  2CA6               u2181:
  6771  14A5                     	goto	l3068
  6772  14A5  2CAE               u2180:
  6773  14A6                     	line	23
  6774                           	
  6775                           l3064:	
  6776  14A6                     	movf	(___lwdiv@divisor),w
  6777  14A6  0876               	subwf	(___lwdiv@dividend),f
  6778  14A7  02F8               	movf	(___lwdiv@divisor+1),w
  6779  14A8  0877               	skipc
  6780  14A9  1C03               	decf	(___lwdiv@dividend+1),f
  6781  14AA  03F9               	subwf	(___lwdiv@dividend+1),f
  6782  14AB  02F9               	line	24
  6783                           	
  6784                           l3066:	
  6785  14AC                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  6786  14AC  147B               	goto	l3068
  6787  14AD  2CAE               	line	25
  6788                           	
  6789                           l973:	
  6790  14AE                     	line	26
  6791                           	
  6792                           l3068:	
  6793  14AE                     	movlw	01h
  6794  14AE  3001               	
  6795                           u2195:
  6796  14AF                     	clrc
  6797  14AF  1003               	rrf	(___lwdiv@divisor+1),f
  6798  14B0  0CF7               	rrf	(___lwdiv@divisor),f
  6799  14B1  0CF6               	addlw	-1
  6800  14B2  3EFF               	skipz
  6801  14B3  1D03               	goto	u2195
  6802  14B4  2CAF               	line	27
  6803                           	
  6804                           l3070:	
  6805  14B5                     	movlw	01h
  6806  14B5  3001               	subwf	(___lwdiv@counter),f
  6807  14B6  02FD               	btfss	status,2
  6808  14B7  1D03               	goto	u2201
  6809  14B8  2CBA               	goto	u2200
  6810  14B9  2CBB               u2201:
  6811  14BA                     	goto	l3062
  6812  14BA  2C95               u2200:
  6813  14BB                     	goto	l3072
  6814  14BB  2CBD               	
  6815                           l974:	
  6816  14BC                     	goto	l3072
  6817  14BC  2CBD               	line	28
  6818                           	
  6819                           l968:	
  6820  14BD                     	line	29
  6821                           	
  6822                           l3072:	
  6823  14BD                     	movf	(___lwdiv@quotient+1),w
  6824  14BD  087C               	movwf	(?___lwdiv+1)
  6825  14BE  00F7               	movf	(___lwdiv@quotient),w
  6826  14BF  087B               	movwf	(?___lwdiv)
  6827  14C0  00F6               	goto	l975
  6828  14C1  2CC2               	
  6829                           l3074:	
  6830  14C2                     	line	30
  6831                           	
  6832                           l975:	
  6833  14C2                     	return
  6834  14C2  0008               	opt stack 0
  6835                           GLOBAL	__end_of___lwdiv
  6836                           	__end_of___lwdiv:
  6837  14C3                     	signat	___lwdiv,8314
  6838                           	global	_Write_Byte
  6839                           
  6840 ;; *************** function _Write_Byte *****************
  6841 ;; Defined at:
  6842 ;;		line 67 in file "Thermometer.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  val             1    wreg     unsigned char 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;  val             1    7[COMMON] unsigned char 
  6847 ;;  i               1    8[COMMON] unsigned char 
  6848 ;;  temp            1    6[COMMON] unsigned char 
  6849 ;; Return value:  Size  Location     Type
  6850 ;;                  1    wreg      void 
  6851 ;; Registers used:
  6852 ;;		wreg, status,2, status,0, pclath, cstack
  6853 ;; Tracked objects:
  6854 ;;		On entry : 0/0
  6855 ;;		On exit  : 0/0
  6856 ;;		Unchanged: 0/0
  6857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6858 ;;      Params:         0       0       0       0       0
  6859 ;;      Locals:         3       0       0       0       0
  6860 ;;      Temps:          2       0       0       0       0
  6861 ;;      Totals:         5       0       0       0       0
  6862 ;;Total ram usage:        5 bytes
  6863 ;; Hardware stack levels used:    1
  6864 ;; Hardware stack levels required when called:    1
  6865 ;; This function calls:
  6866 ;;		_Delay
  6867 ;; This function is called by:
  6868 ;;		_Get_Temp
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  6872                           	file	"Thermometer.c"
  6873                           	line	67
  6874                           global __ptext14
  6875                           __ptext14:	;psect for function _Write_Byte
  6876  13ED                     psect	text14
  6877                           	file	"Thermometer.c"
  6878                           	line	67
  6879                           	global	__size_of_Write_Byte
  6880                           	__size_of_Write_Byte	equ	__end_of_Write_Byte-_Write_Byte
  6881  0044                     	
  6882                           _Write_Byte:	
  6883  13ED                     ;incstack = 0
  6884                           	opt	stack 1
  6885                           ; Regs used in _Write_Byte: [wreg+status,2+status,0+pclath+cstack]
  6886                           ;Write_Byte@val stored from wreg
  6887                           	movwf	(Write_Byte@val)
  6888  13ED  00F7               	line	71
  6889                           	
  6890                           l2912:	
  6891  13EE                     ;Thermometer.c: 67: void Write_Byte(unsigned char val);Thermometer.c: 68: {;Thermometer.
                                 c: 69:  unsigned char i;;Thermometer.c: 70:  unsigned char temp;;Thermometer.c: 71:  for
                                 (i=8;i>0;i--)
  6892                           	movlw	low(08h)
  6893  13EE  3008               	movwf	(??_Write_Byte+0)+0
  6894  13EF  00F4               	movf	(??_Write_Byte+0)+0,w
  6895  13F0  0874               	movwf	(Write_Byte@i)
  6896  13F1  00F8               	
  6897                           l2914:	
  6898  13F2                     	movf	((Write_Byte@i)),w
  6899  13F2  0878               	btfss	status,2
  6900  13F3  1D03               	goto	u1981
  6901  13F4  2BF6               	goto	u1980
  6902  13F5  2BF7               u1981:
  6903  13F6                     	goto	l2918
  6904  13F6  2BF9               u1980:
  6905  13F7                     	goto	l599
  6906  13F7  2C30               	
  6907                           l2916:	
  6908  13F8                     	goto	l599
  6909  13F8  2C30               	
  6910                           l596:	
  6911  13F9                     	line	74
  6912                           	
  6913                           l2918:	
  6914  13F9                     ;Thermometer.c: 72:  {;Thermometer.c: 74:    temp=val&0x01;
  6915                           	movf	(Write_Byte@val),w
  6916  13F9  0877               	andlw	01h
  6917  13FA  3901               	movwf	(??_Write_Byte+0)+0
  6918  13FB  00F4               	movf	(??_Write_Byte+0)+0,w
  6919  13FC  0874               	movwf	(Write_Byte@temp)
  6920  13FD  00F6               	line	76
  6921                           	
  6922                           l2920:	
  6923  13FE                     ;Thermometer.c: 76:    RA0 = 0; TRISA0 = 0;
  6924                           	bcf	status, 5	;RP0=0, select bank0
  6925  13FE  1283               	bcf	status, 6	;RP1=0, select bank0
  6926  13FF  1303               	bcf	(40/8),(40)&7	;volatile
  6927  1400  1005               	
  6928                           l2922:	
  6929  1401                     	bsf	status, 5	;RP0=1, select bank1
  6930  1401  1683               	bcf	status, 6	;RP1=0, select bank1
  6931  1402  1303               	bcf	(1064/8)^080h,(1064)&7	;volatile
  6932  1403  1005               	line	77
  6933                           	
  6934                           l2924:	
  6935  1404                     ;Thermometer.c: 77:    __nop();
  6936                           	opt	asmopt_push
  6937                           	opt	asmopt_off
  6938                           	nop
  6939  1404  0000               	opt	asmopt_pop
  6940                           	line	78
  6941                           	
  6942                           l2926:	
  6943  1405                     ;Thermometer.c: 78:    __nop();
  6944                           	opt	asmopt_push
  6945                           	opt	asmopt_off
  6946                           	nop
  6947  1405  0000               	opt	asmopt_pop
  6948                           	line	79
  6949                           	
  6950                           l2928:	
  6951  1406                     ;Thermometer.c: 79:    __nop();
  6952                           	opt	asmopt_push
  6953                           	opt	asmopt_off
  6954                           	nop
  6955  1406  0000               	opt	asmopt_pop
  6956                           	line	80
  6957                           	
  6958                           l2930:	
  6959  1407                     ;Thermometer.c: 80:    __nop();
  6960                           	opt	asmopt_push
  6961                           	opt	asmopt_off
  6962                           	nop
  6963  1407  0000               	opt	asmopt_pop
  6964                           	line	81
  6965                           	
  6966                           l2932:	
  6967  1408                     ;Thermometer.c: 81:    __nop();
  6968                           	opt	asmopt_push
  6969                           	opt	asmopt_off
  6970                           	nop
  6971  1408  0000               	opt	asmopt_pop
  6972                           	line	83
  6973                           	
  6974                           l2934:	
  6975  1409                     ;Thermometer.c: 83:    if(temp==1) TRISA0 =1;
  6976                           		decf	((Write_Byte@temp)),w
  6977  1409  0376               	btfss	status,2
  6978  140A  1D03               	goto	u1991
  6979  140B  2C0D               	goto	u1990
  6980  140C  2C0E               u1991:
  6981  140D                     	goto	l2938
  6982  140D  2C12               u1990:
  6983  140E                     	
  6984                           l2936:	
  6985  140E                     	bsf	status, 5	;RP0=1, select bank1
  6986  140E  1683               	bcf	status, 6	;RP1=0, select bank1
  6987  140F  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
  6988  1410  1405               	goto	l2938
  6989  1411  2C12               	
  6990                           l598:	
  6991  1412                     	line	85
  6992                           	
  6993                           l2938:	
  6994  1412                     ;Thermometer.c: 85:    Delay(2,7);
  6995                           	movlw	low(07h)
  6996  1412  3007               	movwf	(??_Write_Byte+0)+0
  6997  1413  00F4               	movf	(??_Write_Byte+0)+0,w
  6998  1414  0874               	movwf	(Delay@y)
  6999  1415  00F0               	movlw	low(02h)
  7000  1416  3002               	fcall	_Delay
  7001  1417  160A  158A  2689  160A  118A  	line	86
  7002                           	
  7003                           l2940:	
  7004  141C                     ;Thermometer.c: 86:    TRISA0 =1;
  7005                           	bsf	status, 5	;RP0=1, select bank1
  7006  141C  1683               	bcf	status, 6	;RP1=0, select bank1
  7007  141D  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
  7008  141E  1405               	line	87
  7009                           	
  7010                           l2942:	
  7011  141F                     ;Thermometer.c: 87:    __nop();
  7012                           	opt	asmopt_push
  7013                           	opt	asmopt_off
  7014                           	nop
  7015  141F  0000               	opt	asmopt_pop
  7016                           	line	88
  7017                           	
  7018                           l2944:	
  7019  1420                     ;Thermometer.c: 88:    __nop();
  7020                           	opt	asmopt_push
  7021                           	opt	asmopt_off
  7022                           	nop
  7023  1420  0000               	opt	asmopt_pop
  7024                           	line	90
  7025                           	
  7026                           l2946:	
  7027  1421                     ;Thermometer.c: 90:    val=val>>1;
  7028                           	movf	(Write_Byte@val),w
  7029  1421  0877               	movwf	(??_Write_Byte+0)+0
  7030  1422  00F4               	clrc
  7031  1423  1003               	rrf	(??_Write_Byte+0)+0,w
  7032  1424  0C74               	movwf	(??_Write_Byte+1)+0
  7033  1425  00F5               	movf	(??_Write_Byte+1)+0,w
  7034  1426  0875               	movwf	(Write_Byte@val)
  7035  1427  00F7               	line	91
  7036                           	
  7037                           l2948:	
  7038  1428                     ;Thermometer.c: 91:   }
  7039                           	movlw	01h
  7040  1428  3001               	subwf	(Write_Byte@i),f
  7041  1429  02F8               	
  7042                           l2950:	
  7043  142A                     	movf	((Write_Byte@i)),w
  7044  142A  0878               	btfss	status,2
  7045  142B  1D03               	goto	u2001
  7046  142C  2C2E               	goto	u2000
  7047  142D  2C2F               u2001:
  7048  142E                     	goto	l2918
  7049  142E  2BF9               u2000:
  7050  142F                     	goto	l599
  7051  142F  2C30               	
  7052                           l597:	
  7053  1430                     	line	92
  7054                           	
  7055                           l599:	
  7056  1430                     	return
  7057  1430  0008               	opt stack 0
  7058                           GLOBAL	__end_of_Write_Byte
  7059                           	__end_of_Write_Byte:
  7060  1431                     	signat	_Write_Byte,4217
  7061                           	global	_Reset
  7062                           
  7063 ;; *************** function _Reset *****************
  7064 ;; Defined at:
  7065 ;;		line 45 in file "Thermometer.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;		None
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;  i               2    5[COMMON] int 
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      void 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7079 ;;      Params:         0       0       0       0       0
  7080 ;;      Locals:         2       0       0       0       0
  7081 ;;      Temps:          1       0       0       0       0
  7082 ;;      Totals:         3       0       0       0       0
  7083 ;;Total ram usage:        3 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; Hardware stack levels required when called:    1
  7086 ;; This function calls:
  7087 ;;		_Delay
  7088 ;; This function is called by:
  7089 ;;		_Get_Temp
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  7093                           	line	45
  7094                           global __ptext15
  7095                           __ptext15:	;psect for function _Reset
  7096  1512                     psect	text15
  7097                           	file	"Thermometer.c"
  7098                           	line	45
  7099                           	global	__size_of_Reset
  7100                           	__size_of_Reset	equ	__end_of_Reset-_Reset
  7101  0055                     	
  7102                           _Reset:	
  7103  1512                     ;incstack = 0
  7104                           	opt	stack 1
  7105                           ; Regs used in _Reset: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7106                           	line	48
  7107                           	
  7108                           l2892:	
  7109  1512                     ;Thermometer.c: 48:     for(int i = 0; i < 100; ++i)
  7110                           	clrf	(Reset@i)
  7111  1512  01F5               	clrf	(Reset@i+1)
  7112  1513  01F6               	
  7113                           l2894:	
  7114  1514                     	movf	(Reset@i+1),w
  7115  1514  0876               	xorlw	80h
  7116  1515  3A80               	movwf	btemp+1
  7117  1516  00FF               	movlw	(0)^80h
  7118  1517  3080               	subwf	btemp+1,w
  7119  1518  027F               	skipz
  7120  1519  1D03               	goto	u1955
  7121  151A  2D1D               	movlw	064h
  7122  151B  3064               	subwf	(Reset@i),w
  7123  151C  0275               u1955:
  7124  151D                     
  7125                           	skipc
  7126  151D  1C03               	goto	u1951
  7127  151E  2D20               	goto	u1950
  7128  151F  2D21               u1951:
  7129  1520                     	goto	l590
  7130  1520  2D23               u1950:
  7131  1521                     	goto	l593
  7132  1521  2D66               	
  7133                           l2896:	
  7134  1522                     	goto	l593
  7135  1522  2D66               	
  7136                           l590:	
  7137  1523                     	line	51
  7138                           ;Thermometer.c: 49:   {;Thermometer.c: 51:     RA0 = 0; TRISA0 = 0;
  7139                           	bcf	status, 5	;RP0=0, select bank0
  7140  1523  1283               	bcf	status, 6	;RP1=0, select bank0
  7141  1524  1303               	bcf	(40/8),(40)&7	;volatile
  7142  1525  1005               	bsf	status, 5	;RP0=1, select bank1
  7143  1526  1683               	bcf	status, 6	;RP1=0, select bank1
  7144  1527  1303               	bcf	(1064/8)^080h,(1064)&7	;volatile
  7145  1528  1005               	line	53
  7146                           	
  7147                           l2898:	
  7148  1529                     ;Thermometer.c: 53:     Delay(2,70);
  7149                           	movlw	low(046h)
  7150  1529  3046               	movwf	(??_Reset+0)+0
  7151  152A  00F4               	movf	(??_Reset+0)+0,w
  7152  152B  0874               	movwf	(Delay@y)
  7153  152C  00F0               	movlw	low(02h)
  7154  152D  3002               	fcall	_Delay
  7155  152E  160A  158A  2689  160A  118A  	line	55
  7156                           	
  7157                           l2900:	
  7158  1533                     ;Thermometer.c: 55:     TRISA0 =1;
  7159                           	bsf	status, 5	;RP0=1, select bank1
  7160  1533  1683               	bcf	status, 6	;RP1=0, select bank1
  7161  1534  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
  7162  1535  1405               	line	57
  7163                           ;Thermometer.c: 57:     Delay(2,8);
  7164                           	movlw	low(08h)
  7165  1536  3008               	movwf	(??_Reset+0)+0
  7166  1537  00F4               	movf	(??_Reset+0)+0,w
  7167  1538  0874               	movwf	(Delay@y)
  7168  1539  00F0               	movlw	low(02h)
  7169  153A  3002               	fcall	_Delay
  7170  153B  160A  158A  2689  160A  118A  	line	60
  7171                           	
  7172                           l2902:	
  7173  1540                     ;Thermometer.c: 60:     if(!RA0) break;
  7174                           	bcf	status, 5	;RP0=0, select bank0
  7175  1540  1283               	bcf	status, 6	;RP1=0, select bank0
  7176  1541  1303               	btfsc	(40/8),(40)&7	;volatile
  7177  1542  1805               	goto	u1961
  7178  1543  2D45               	goto	u1960
  7179  1544  2D46               u1961:
  7180  1545                     	goto	l2906
  7181  1545  2D48               u1960:
  7182  1546                     	goto	l593
  7183  1546  2D66               	
  7184                           l2904:	
  7185  1547                     	goto	l593
  7186  1547  2D66               	
  7187                           l592:	
  7188  1548                     	line	62
  7189                           	
  7190                           l2906:	
  7191  1548                     ;Thermometer.c: 62:     Delay(2,60);
  7192                           	movlw	low(03Ch)
  7193  1548  303C               	movwf	(??_Reset+0)+0
  7194  1549  00F4               	movf	(??_Reset+0)+0,w
  7195  154A  0874               	movwf	(Delay@y)
  7196  154B  00F0               	movlw	low(02h)
  7197  154C  3002               	fcall	_Delay
  7198  154D  160A  158A  2689  160A  118A  	line	63
  7199                           	
  7200                           l2908:	
  7201  1552                     ;Thermometer.c: 63:    }
  7202                           	movlw	01h
  7203  1552  3001               	addwf	(Reset@i),f
  7204  1553  07F5               	skipnc
  7205  1554  1803               	incf	(Reset@i+1),f
  7206  1555  0AF6               	movlw	0
  7207  1556  3000               	addwf	(Reset@i+1),f
  7208  1557  07F6               	
  7209                           l2910:	
  7210  1558                     	movf	(Reset@i+1),w
  7211  1558  0876               	xorlw	80h
  7212  1559  3A80               	movwf	btemp+1
  7213  155A  00FF               	movlw	(0)^80h
  7214  155B  3080               	subwf	btemp+1,w
  7215  155C  027F               	skipz
  7216  155D  1D03               	goto	u1975
  7217  155E  2D61               	movlw	064h
  7218  155F  3064               	subwf	(Reset@i),w
  7219  1560  0275               u1975:
  7220  1561                     
  7221                           	skipc
  7222  1561  1C03               	goto	u1971
  7223  1562  2D64               	goto	u1970
  7224  1563  2D65               u1971:
  7225  1564                     	goto	l590
  7226  1564  2D23               u1970:
  7227  1565                     	goto	l593
  7228  1565  2D66               	
  7229                           l591:	
  7230  1566                     	line	64
  7231                           	
  7232                           l593:	
  7233  1566                     	return
  7234  1566  0008               	opt stack 0
  7235                           GLOBAL	__end_of_Reset
  7236                           	__end_of_Reset:
  7237  1567                     	signat	_Reset,89
  7238                           	global	_Read_Byte
  7239                           
  7240 ;; *************** function _Read_Byte *****************
  7241 ;; Defined at:
  7242 ;;		line 95 in file "Thermometer.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;		None
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;  i               1    6[COMMON] unsigned char 
  7247 ;;  value           1    5[COMMON] unsigned char 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  1    wreg      unsigned char 
  7250 ;; Registers used:
  7251 ;;		wreg, status,2, status,0, pclath, cstack
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7257 ;;      Params:         0       0       0       0       0
  7258 ;;      Locals:         2       0       0       0       0
  7259 ;;      Temps:          1       0       0       0       0
  7260 ;;      Totals:         3       0       0       0       0
  7261 ;;Total ram usage:        3 bytes
  7262 ;; Hardware stack levels used:    1
  7263 ;; Hardware stack levels required when called:    1
  7264 ;; This function calls:
  7265 ;;		_Delay
  7266 ;; This function is called by:
  7267 ;;		_Get_Temp
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  7271                           	line	95
  7272                           global __ptext16
  7273                           __ptext16:	;psect for function _Read_Byte
  7274  13A9                     psect	text16
  7275                           	file	"Thermometer.c"
  7276                           	line	95
  7277                           	global	__size_of_Read_Byte
  7278                           	__size_of_Read_Byte	equ	__end_of_Read_Byte-_Read_Byte
  7279  0044                     	
  7280                           _Read_Byte:	
  7281  13A9                     ;incstack = 0
  7282                           	opt	stack 1
  7283                           ; Regs used in _Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  7284                           	line	98
  7285                           	
  7286                           l2952:	
  7287  13A9                     ;Thermometer.c: 97:  unsigned char i;;Thermometer.c: 98:  unsigned char value=0;
  7288                           	clrf	(Read_Byte@value)
  7289  13A9  01F5               	line	100
  7290                           	
  7291                           l2954:	
  7292  13AA                     ;Thermometer.c: 99:  static char j;;Thermometer.c: 100:  for(i=8;i>0;i--)
  7293                           	movlw	low(08h)
  7294  13AA  3008               	movwf	(??_Read_Byte+0)+0
  7295  13AB  00F4               	movf	(??_Read_Byte+0)+0,w
  7296  13AC  0874               	movwf	(Read_Byte@i)
  7297  13AD  00F6               	
  7298                           l2956:	
  7299  13AE                     	movf	((Read_Byte@i)),w
  7300  13AE  0876               	btfss	status,2
  7301  13AF  1D03               	goto	u2011
  7302  13B0  2BB2               	goto	u2010
  7303  13B1  2BB3               u2011:
  7304  13B2                     	goto	l2960
  7305  13B2  2BB5               u2010:
  7306  13B3                     	goto	l3002
  7307  13B3  2BEA               	
  7308                           l2958:	
  7309  13B4                     	goto	l3002
  7310  13B4  2BEA               	
  7311                           l604:	
  7312  13B5                     	line	102
  7313                           	
  7314                           l2960:	
  7315  13B5                     ;Thermometer.c: 101:  {;Thermometer.c: 102:    value>>=1;
  7316                           	clrc
  7317  13B5  1003               	rrf	(Read_Byte@value),f
  7318  13B6  0CF5               
  7319                           	line	104
  7320                           	
  7321                           l2962:	
  7322  13B7                     ;Thermometer.c: 104:    RA0 = 0; TRISA0 = 0;
  7323                           	bcf	status, 5	;RP0=0, select bank0
  7324  13B7  1283               	bcf	status, 6	;RP1=0, select bank0
  7325  13B8  1303               	bcf	(40/8),(40)&7	;volatile
  7326  13B9  1005               	
  7327                           l2964:	
  7328  13BA                     	bsf	status, 5	;RP0=1, select bank1
  7329  13BA  1683               	bcf	status, 6	;RP1=0, select bank1
  7330  13BB  1303               	bcf	(1064/8)^080h,(1064)&7	;volatile
  7331  13BC  1005               	line	106
  7332                           	
  7333                           l2966:	
  7334  13BD                     ;Thermometer.c: 106:    __nop();
  7335                           	opt	asmopt_push
  7336                           	opt	asmopt_off
  7337                           	nop
  7338  13BD  0000               	opt	asmopt_pop
  7339                           	line	107
  7340                           	
  7341                           l2968:	
  7342  13BE                     ;Thermometer.c: 107:    __nop();
  7343                           	opt	asmopt_push
  7344                           	opt	asmopt_off
  7345                           	nop
  7346  13BE  0000               	opt	asmopt_pop
  7347                           	line	108
  7348                           	
  7349                           l2970:	
  7350  13BF                     ;Thermometer.c: 108:    __nop();
  7351                           	opt	asmopt_push
  7352                           	opt	asmopt_off
  7353                           	nop
  7354  13BF  0000               	opt	asmopt_pop
  7355                           	line	109
  7356                           	
  7357                           l2972:	
  7358  13C0                     ;Thermometer.c: 109:    __nop();
  7359                           	opt	asmopt_push
  7360                           	opt	asmopt_off
  7361                           	nop
  7362  13C0  0000               	opt	asmopt_pop
  7363                           	line	110
  7364                           	
  7365                           l2974:	
  7366  13C1                     ;Thermometer.c: 110:    __nop();
  7367                           	opt	asmopt_push
  7368                           	opt	asmopt_off
  7369                           	nop
  7370  13C1  0000               	opt	asmopt_pop
  7371                           	line	111
  7372                           	
  7373                           l2976:	
  7374  13C2                     ;Thermometer.c: 111:    __nop();
  7375                           	opt	asmopt_push
  7376                           	opt	asmopt_off
  7377                           	nop
  7378  13C2  0000               	opt	asmopt_pop
  7379                           	line	113
  7380                           	
  7381                           l2978:	
  7382  13C3                     ;Thermometer.c: 113:    TRISA0 =1;
  7383                           	bsf	status, 5	;RP0=1, select bank1
  7384  13C3  1683               	bcf	status, 6	;RP1=0, select bank1
  7385  13C4  1303               	bsf	(1064/8)^080h,(1064)&7	;volatile
  7386  13C5  1405               	line	115
  7387                           	
  7388                           l2980:	
  7389  13C6                     ;Thermometer.c: 115:    __nop();
  7390                           	opt	asmopt_push
  7391                           	opt	asmopt_off
  7392                           	nop
  7393  13C6  0000               	opt	asmopt_pop
  7394                           	line	116
  7395                           	
  7396                           l2982:	
  7397  13C7                     ;Thermometer.c: 116:    __nop();
  7398                           	opt	asmopt_push
  7399                           	opt	asmopt_off
  7400                           	nop
  7401  13C7  0000               	opt	asmopt_pop
  7402                           	line	117
  7403                           	
  7404                           l2984:	
  7405  13C8                     ;Thermometer.c: 117:    __nop();
  7406                           	opt	asmopt_push
  7407                           	opt	asmopt_off
  7408                           	nop
  7409  13C8  0000               	opt	asmopt_pop
  7410                           	line	118
  7411                           	
  7412                           l2986:	
  7413  13C9                     ;Thermometer.c: 118:    __nop();
  7414                           	opt	asmopt_push
  7415                           	opt	asmopt_off
  7416                           	nop
  7417  13C9  0000               	opt	asmopt_pop
  7418                           	line	119
  7419                           	
  7420                           l2988:	
  7421  13CA                     ;Thermometer.c: 119:    __nop();
  7422                           	opt	asmopt_push
  7423                           	opt	asmopt_off
  7424                           	nop
  7425  13CA  0000               	opt	asmopt_pop
  7426                           	line	120
  7427                           	
  7428                           l2990:	
  7429  13CB                     ;Thermometer.c: 120:    j=RA0;
  7430                           	movlw	0
  7431  13CB  3000               	bcf	status, 5	;RP0=0, select bank0
  7432  13CC  1283               	bcf	status, 6	;RP1=0, select bank0
  7433  13CD  1303               	btfsc	(40/8),(40)&7	;volatile
  7434  13CE  1805               	movlw	1
  7435  13CF  3001               	movwf	(Read_Byte@j)
  7436  13D0  00E2               	line	121
  7437                           	
  7438                           l2992:	
  7439  13D1                     ;Thermometer.c: 121:    if(j) value|=0x80;
  7440                           	movf	((Read_Byte@j)),w
  7441  13D1  0862               	btfsc	status,2
  7442  13D2  1903               	goto	u2021
  7443  13D3  2BD5               	goto	u2020
  7444  13D4  2BD6               u2021:
  7445  13D5                     	goto	l2996
  7446  13D5  2BD8               u2020:
  7447  13D6                     	
  7448                           l2994:	
  7449  13D6                     	bsf	(Read_Byte@value)+(7/8),(7)&7
  7450  13D6  17F5               	goto	l2996
  7451  13D7  2BD8               	
  7452                           l606:	
  7453  13D8                     	line	123
  7454                           	
  7455                           l2996:	
  7456  13D8                     ;Thermometer.c: 123:    Delay(2,7);
  7457                           	movlw	low(07h)
  7458  13D8  3007               	movwf	(??_Read_Byte+0)+0
  7459  13D9  00F4               	movf	(??_Read_Byte+0)+0,w
  7460  13DA  0874               	movwf	(Delay@y)
  7461  13DB  00F0               	movlw	low(02h)
  7462  13DC  3002               	fcall	_Delay
  7463  13DD  160A  158A  2689  160A  118A  	line	124
  7464                           	
  7465                           l2998:	
  7466  13E2                     ;Thermometer.c: 124:   }
  7467                           	movlw	01h
  7468  13E2  3001               	subwf	(Read_Byte@i),f
  7469  13E3  02F6               	
  7470                           l3000:	
  7471  13E4                     	movf	((Read_Byte@i)),w
  7472  13E4  0876               	btfss	status,2
  7473  13E5  1D03               	goto	u2031
  7474  13E6  2BE8               	goto	u2030
  7475  13E7  2BE9               u2031:
  7476  13E8                     	goto	l2960
  7477  13E8  2BB5               u2030:
  7478  13E9                     	goto	l3002
  7479  13E9  2BEA               	
  7480                           l605:	
  7481  13EA                     	line	125
  7482                           	
  7483                           l3002:	
  7484  13EA                     ;Thermometer.c: 125:   return(value);
  7485                           	movf	(Read_Byte@value),w
  7486  13EA  0875               	goto	l607
  7487  13EB  2BEC               	
  7488                           l3004:	
  7489  13EC                     	line	126
  7490                           	
  7491                           l607:	
  7492  13EC                     	return
  7493  13EC  0008               	opt stack 0
  7494                           GLOBAL	__end_of_Read_Byte
  7495                           	__end_of_Read_Byte:
  7496  13ED                     	signat	_Read_Byte,89
  7497                           	global	_Delay
  7498                           
  7499 ;; *************** function _Delay *****************
  7500 ;; Defined at:
  7501 ;;		line 28 in file "Thermometer.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;  x               1    wreg     unsigned char 
  7504 ;;  y               1    0[COMMON] unsigned char 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;  x               1    2[COMMON] unsigned char 
  7507 ;;  z               1    3[COMMON] unsigned char 
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  1    wreg      void 
  7510 ;; Registers used:
  7511 ;;		wreg, status,2, status,0
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7517 ;;      Params:         1       0       0       0       0
  7518 ;;      Locals:         2       0       0       0       0
  7519 ;;      Temps:          1       0       0       0       0
  7520 ;;      Totals:         4       0       0       0       0
  7521 ;;Total ram usage:        4 bytes
  7522 ;; Hardware stack levels used:    1
  7523 ;; This function calls:
  7524 ;;		Nothing
  7525 ;; This function is called by:
  7526 ;;		_Reset
  7527 ;;		_Write_Byte
  7528 ;;		_Read_Byte
  7529 ;;		_Get_Temp
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  7533                           	line	28
  7534                           global __ptext17
  7535                           __ptext17:	;psect for function _Delay
  7536  1E89                     psect	text17
  7537                           	file	"Thermometer.c"
  7538                           	line	28
  7539                           	global	__size_of_Delay
  7540                           	__size_of_Delay	equ	__end_of_Delay-_Delay
  7541  0015                     	
  7542                           _Delay:	
  7543  1E89                     ;incstack = 0
  7544                           	opt	stack 1
  7545                           ; Regs used in _Delay: [wreg+status,2+status,0]
  7546                           ;Delay@x stored from wreg
  7547                           	movwf	(Delay@x)
  7548  1E89  00F2               	line	31
  7549                           ;Thermometer.c: 28: void Delay(char x,char y);Thermometer.c: 29: {;Thermometer.c: 30:   
                                 char z;;Thermometer.c: 31:   do{
  7550                           	
  7551                           l580:	
  7552  1E8A                     	line	32
  7553                           	
  7554                           l2790:	
  7555  1E8A                     ;Thermometer.c: 32:       z=y;
  7556                           	movf	(Delay@y),w
  7557  1E8A  0870               	movwf	(??_Delay+0)+0
  7558  1E8B  00F1               	movf	(??_Delay+0)+0,w
  7559  1E8C  0871               	movwf	(Delay@z)
  7560  1E8D  00F3               	goto	l2792
  7561  1E8E  2E8F               	line	33
  7562                           ;Thermometer.c: 33:       do{;}while(--z);
  7563                           	
  7564                           l581:	
  7565  1E8F                     	
  7566                           l2792:	
  7567  1E8F                     	movlw	01h
  7568  1E8F  3001               	subwf	(Delay@z),f
  7569  1E90  02F3               	btfss	status,2
  7570  1E91  1D03               	goto	u1741
  7571  1E92  2E94               	goto	u1740
  7572  1E93  2E95               u1741:
  7573  1E94                     	goto	l2792
  7574  1E94  2E8F               u1740:
  7575  1E95                     	goto	l2794
  7576  1E95  2E96               	
  7577                           l582:	
  7578  1E96                     	line	34
  7579                           	
  7580                           l2794:	
  7581  1E96                     ;Thermometer.c: 34:      }while(--x);
  7582                           	movlw	01h
  7583  1E96  3001               	subwf	(Delay@x),f
  7584  1E97  02F2               	btfss	status,2
  7585  1E98  1D03               	goto	u1751
  7586  1E99  2E9B               	goto	u1750
  7587  1E9A  2E9C               u1751:
  7588  1E9B                     	goto	l580
  7589  1E9B  2E8A               u1750:
  7590  1E9C                     	goto	l584
  7591  1E9C  2E9D               	
  7592                           l583:	
  7593  1E9D                     	line	35
  7594                           	
  7595                           l584:	
  7596  1E9D                     	return
  7597  1E9D  0008               	opt stack 0
  7598                           GLOBAL	__end_of_Delay
  7599                           	__end_of_Delay:
  7600  1E9E                     	signat	_Delay,8313
  7601                           	global	_SetTime
  7602                           
  7603 ;; *************** function _SetTime *****************
  7604 ;; Defined at:
  7605 ;;		line 450 in file "main.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;  Key             2    7[BANK0 ] int 
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;  digits          9   15[BANK0 ] unsigned char [9]
  7610 ;;  setTime         6   32[BANK0 ] int [3]
  7611 ;;  i               2   38[BANK0 ] int 
  7612 ;;  sec             2   30[BANK0 ] int 
  7613 ;;  min             2   28[BANK0 ] int 
  7614 ;;  hour            2   26[BANK0 ] int 
  7615 ;;  TimeSet         1   25[BANK0 ] PTR unsigned char 
  7616 ;;		 -> STR_21(9), 
  7617 ;;  Time            1   24[BANK0 ] PTR unsigned char 
  7618 ;;		 -> STR_20(6), 
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1    wreg      void 
  7621 ;; Registers used:
  7622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7628 ;;      Params:         0       2       0       0       0
  7629 ;;      Locals:         0      25       0       0       0
  7630 ;;      Temps:          0       6       0       0       0
  7631 ;;      Totals:         0      33       0       0       0
  7632 ;;Total ram usage:       33 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; Hardware stack levels required when called:    3
  7635 ;; This function calls:
  7636 ;;		_Keypad_Scan
  7637 ;;		_LCD_Command
  7638 ;;		_LCD_SendString
  7639 ;;		_Main_Delay
  7640 ;;		_RealTimeClock_get_hours
  7641 ;;		_RealTimeClock_get_minutes
  7642 ;;		_RealTimeClock_get_seconds
  7643 ;;		_RealTimeClock_set_hours
  7644 ;;		_RealTimeClock_set_minutes
  7645 ;;		_RealTimeClock_set_seconds
  7646 ;;		___awdiv
  7647 ;;		___awmod
  7648 ;; This function is called by:
  7649 ;;		_main
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  7653                           	file	"main.c"
  7654                           	line	450
  7655                           global __ptext18
  7656                           __ptext18:	;psect for function _SetTime
  7657  04D8                     psect	text18
  7658                           	file	"main.c"
  7659                           	line	450
  7660                           	global	__size_of_SetTime
  7661                           	__size_of_SetTime	equ	__end_of_SetTime-_SetTime
  7662  02E1                     	
  7663                           _SetTime:	
  7664  04D8                     ;incstack = 0
  7665                           	opt	stack 4
  7666                           ; Regs used in _SetTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7667                           	line	453
  7668                           	
  7669                           l3806:	
  7670  04D8                     ;main.c: 450:         char digits[9] = {'0', '0', ':', '0', '0', '.', '0', '0', '\0'};;m
                                 ain.c: 451: ;main.c: 453:         LCD_SendString(Time);
  7671                           	movlw	low(01h)
  7672  04D8  3001               	fcall	_LCD_Command
  7673  04D9  160A  158A  2633  120A  118A  	line	455
  7674                           	
  7675                           l3808:	
  7676  04DE                     ;main.c: 455:         Key = Keypad_Scan();
  7677                           	bcf	status, 5	;RP0=0, select bank0
  7678  04DE  1283               	bcf	status, 6	;RP1=0, select bank0
  7679  04DF  1303               	clrf	(SetTime@i)
  7680  04E0  01C6               	clrf	(SetTime@i+1)
  7681  04E1  01C7               	line	458
  7682                           	
  7683                           l3810:	
  7684  04E2                     ;main.c: 457:         if(Key == 9);main.c: 458:         {
  7685                           	movlw	(low((((STR_20)-__stringbase)|8000h)))&0ffh
  7686  04E2  30A2               	movwf	(??_SetTime+0)+0
  7687  04E3  00A9               	movf	(??_SetTime+0)+0,w
  7688  04E4  0829               	movwf	(SetTime@Time)
  7689  04E5  00B8               	line	459
  7690                           	
  7691                           l3812:	
  7692  04E6                     ;main.c: 459: 
  7693                           	movlw	(low((((STR_21)-__stringbase)|8000h)))&0ffh
  7694  04E6  305D               	movwf	(??_SetTime+0)+0
  7695  04E7  00A9               	movf	(??_SetTime+0)+0,w
  7696  04E8  0829               	movwf	(SetTime@TimeSet)
  7697  04E9  00B9               	line	461
  7698                           	
  7699                           l3814:	
  7700  04EA                     ;main.c: 461:             RealTimeClock_set_minutes(setTime[1]);
  7701                           	fcall	_RealTimeClock_get_seconds
  7702  04EA  160A  158A  27DE  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7703  04EF  1283               	bcf	status, 6	;RP1=0, select bank0
  7704  04F0  1303               	movf	(1+(?_RealTimeClock_get_seconds)),w
  7705  04F1  0826               	movwf	(_timeSecs+1)
  7706  04F2  00D9               	movf	(0+(?_RealTimeClock_get_seconds)),w
  7707  04F3  0825               	movwf	(_timeSecs)
  7708  04F4  00D8               	line	462
  7709                           	
  7710                           l3816:	
  7711  04F5                     ;main.c: 462:             RealTimeClock_set_seconds(setTime[2]);
  7712                           	fcall	_RealTimeClock_get_minutes
  7713  04F5  160A  158A  2734  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7714  04FA  1283               	bcf	status, 6	;RP1=0, select bank0
  7715  04FB  1303               	movf	(1+(?_RealTimeClock_get_minutes)),w
  7716  04FC  0826               	movwf	(_timeMins+1)
  7717  04FD  00DB               	movf	(0+(?_RealTimeClock_get_minutes)),w
  7718  04FE  0825               	movwf	(_timeMins)
  7719  04FF  00DA               	line	463
  7720                           	
  7721                           l3818:	
  7722  0500                     ;main.c: 463: 
  7723                           	fcall	_RealTimeClock_get_hours
  7724  0500  160A  158A  2712  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7725  0505  1283               	bcf	status, 6	;RP1=0, select bank0
  7726  0506  1303               	movf	(1+(?_RealTimeClock_get_hours)),w
  7727  0507  0826               	movwf	(_timeHours+1)
  7728  0508  00DD               	movf	(0+(?_RealTimeClock_get_hours)),w
  7729  0509  0825               	movwf	(_timeHours)
  7730  050A  00DC               	line	466
  7731                           	
  7732                           l3820:	
  7733  050B                     ;main.c: 465:             LCD_Command(0x03);;main.c: 466: 
  7734                           	movf	(_timeHours+1),w
  7735  050B  085D               	movwf	(SetTime@setTime+1)
  7736  050C  00C1               	movf	(_timeHours),w
  7737  050D  085C               	movwf	(SetTime@setTime)
  7738  050E  00C0               	line	467
  7739                           	
  7740                           l3822:	
  7741  050F                     ;main.c: 467:             LCD_SendString(TimeSet);
  7742                           	movf	(_timeMins+1),w
  7743  050F  085B               	movwf	1+(SetTime@setTime)+02h
  7744  0510  00C3               	movf	(_timeMins),w
  7745  0511  085A               	movwf	0+(SetTime@setTime)+02h
  7746  0512  00C2               	line	468
  7747                           	
  7748                           l3824:	
  7749  0513                     ;main.c: 468:             Main_Delay(200);
  7750                           	movf	(_timeSecs+1),w
  7751  0513  0859               	movwf	1+(SetTime@setTime)+04h
  7752  0514  00C5               	movf	(_timeSecs),w
  7753  0515  0858               	movwf	0+(SetTime@setTime)+04h
  7754  0516  00C4               	goto	l3826
  7755  0517  2D18               	line	469
  7756                           ;main.c: 469:             LCD_Command(0x01);
  7757                           	
  7758                           l190:	
  7759  0518                     	line	472
  7760                           	
  7761                           l3826:	
  7762  0518                     ;main.c: 470:             break;;main.c: 472:         switch(Key)
  7763                           	movlw	(SetTime@digits)&0ffh
  7764  0518  302F               	movwf	fsr0
  7765  0519  0084               	movlw	low(SetTime@F993)
  7766  051A  30AA               	bcf	status, 5	;RP0=0, select bank0
  7767  051B  1283               	bcf	status, 6	;RP1=0, select bank0
  7768  051C  1303               	movwf	(??_SetTime+0)+0
  7769  051D  00A9               	movf	fsr0,w
  7770  051E  0804               	movwf	((??_SetTime+0)+0+1)
  7771  051F  00AA               	movlw	9
  7772  0520  3009               	movwf	((??_SetTime+0)+0+2)
  7773  0521  00AB               u3050:
  7774  0522                     	movf	(??_SetTime+0)+0,w
  7775  0522  0829               	movwf	fsr0
  7776  0523  0084               	bcf	status, 7	;select IRP bank1
  7777  0524  1383               	
  7778                           	movf	indf,w
  7779  0525  0800               	movwf	((??_SetTime+0)+0+3)
  7780  0526  00AC               	incf	(??_SetTime+0)+0,f
  7781  0527  0AA9               	movf	((??_SetTime+0)+0+1),w
  7782  0528  082A               	movwf	fsr0
  7783  0529  0084               	
  7784                           	movf	((??_SetTime+0)+0+3),w
  7785  052A  082C               	movwf	indf
  7786  052B  0080               	incf	((??_SetTime+0)+0+1),f
  7787  052C  0AAA               	decfsz	((??_SetTime+0)+0+2),f
  7788  052D  0BAB               	goto	u3050
  7789  052E  2D22               	
  7790                           	line	474
  7791                           	
  7792                           l3828:	
  7793  052F                     ;main.c: 474: 
  7794                           	movlw	low(03h)
  7795  052F  3003               	fcall	_LCD_Command
  7796  0530  160A  158A  2633  120A  118A  	line	475
  7797                           	
  7798                           l3830:	
  7799  0535                     ;main.c: 475:             case 10:
  7800                           	bcf	status, 5	;RP0=0, select bank0
  7801  0535  1283               	bcf	status, 6	;RP1=0, select bank0
  7802  0536  1303               		movf	(SetTime@Time),w
  7803  0537  0838               	movwf	(LCD_SendString@string)
  7804  0538  00F1               	movlw	0
  7805  0539  3000               	btfss	status,2
  7806  053A  1D03               	movlw	080h
  7807  053B  3080               	movwf	(LCD_SendString@string+1)
  7808  053C  00F2               
  7809                           	fcall	_LCD_SendString
  7810  053D  160A  118A  2365  120A  118A  	line	477
  7811                           	
  7812                           l3832:	
  7813  0542                     ;main.c: 477:             if(i == 2)
  7814                           	fcall	_Keypad_Scan
  7815  0542  120A  118A  20E5  120A  118A  	movf	(1+(?_Keypad_Scan)),w
  7816  0547  0877               	bcf	status, 5	;RP0=0, select bank0
  7817  0548  1283               	bcf	status, 6	;RP1=0, select bank0
  7818  0549  1303               	movwf	(SetTime@Key+1)
  7819  054A  00A8               	movf	(0+(?_Keypad_Scan)),w
  7820  054B  0876               	movwf	(SetTime@Key)
  7821  054C  00A7               	line	479
  7822                           	
  7823                           l3834:	
  7824  054D                     ;main.c: 479: 
  7825                           		movlw	9
  7826  054D  3009               	xorwf	((SetTime@Key)),w
  7827  054E  0627               iorwf	((SetTime@Key+1)),w
  7828  054F  0428               	btfss	status,2
  7829  0550  1D03               	goto	u3061
  7830  0551  2D53               	goto	u3060
  7831  0552  2D54               u3061:
  7832  0553                     	goto	l3896
  7833  0553  2EDE               u3060:
  7834  0554                     	line	482
  7835                           	
  7836                           l3836:	
  7837  0554                     ;main.c: 480:             else;main.c: 482:             break;
  7838                           	movf	(SetTime@setTime+1),w
  7839  0554  0841               	movwf	(RealTimeClock_set_hours@hours+1)
  7840  0555  00A1               	movf	(SetTime@setTime),w
  7841  0556  0840               	movwf	(RealTimeClock_set_hours@hours)
  7842  0557  00A0               	fcall	_RealTimeClock_set_hours
  7843  0558  160A  158A  26BB  120A  118A  	line	483
  7844                           ;main.c: 483: 
  7845                           	bcf	status, 5	;RP0=0, select bank0
  7846  055D  1283               	bcf	status, 6	;RP1=0, select bank0
  7847  055E  1303               	movf	1+(SetTime@setTime)+02h,w
  7848  055F  0843               	movwf	(RealTimeClock_set_minutes@minutes+1)
  7849  0560  00A1               	movf	0+(SetTime@setTime)+02h,w
  7850  0561  0842               	movwf	(RealTimeClock_set_minutes@minutes)
  7851  0562  00A0               	fcall	_RealTimeClock_set_minutes
  7852  0563  160A  158A  26D8  120A  118A  	line	484
  7853                           ;main.c: 484:             case 11:
  7854                           	bcf	status, 5	;RP0=0, select bank0
  7855  0568  1283               	bcf	status, 6	;RP1=0, select bank0
  7856  0569  1303               	movf	1+(SetTime@setTime)+04h,w
  7857  056A  0845               	movwf	(RealTimeClock_set_seconds@seconds+1)
  7858  056B  00A1               	movf	0+(SetTime@setTime)+04h,w
  7859  056C  0844               	movwf	(RealTimeClock_set_seconds@seconds)
  7860  056D  00A0               	fcall	_RealTimeClock_set_seconds
  7861  056E  160A  158A  26F5  120A  118A  	line	486
  7862                           	
  7863                           l3838:	
  7864  0573                     ;main.c: 486:                 if(i == 0)
  7865                           	movlw	low(01h)
  7866  0573  3001               	fcall	_LCD_Command
  7867  0574  160A  158A  2633  120A  118A  	line	487
  7868                           	
  7869                           l3840:	
  7870  0579                     ;main.c: 487:                 {
  7871                           	movlw	low(03h)
  7872  0579  3003               	fcall	_LCD_Command
  7873  057A  160A  158A  2633  120A  118A  	line	489
  7874                           	
  7875                           l3842:	
  7876  057F                     ;main.c: 489:                     {
  7877                           	bcf	status, 5	;RP0=0, select bank0
  7878  057F  1283               	bcf	status, 6	;RP1=0, select bank0
  7879  0580  1303               		movf	(SetTime@TimeSet),w
  7880  0581  0839               	movwf	(LCD_SendString@string)
  7881  0582  00F1               	movlw	0
  7882  0583  3000               	btfss	status,2
  7883  0584  1D03               	movlw	080h
  7884  0585  3080               	movwf	(LCD_SendString@string+1)
  7885  0586  00F2               
  7886                           	fcall	_LCD_SendString
  7887  0587  160A  118A  2365  120A  118A  	line	490
  7888                           	
  7889                           l3844:	
  7890  058C                     ;main.c: 490:                         if(setTime[i] == 0)
  7891                           	movlw	0C8h
  7892  058C  30C8               	movwf	(Main_Delay@k)
  7893  058D  00F0               	movlw	0
  7894  058E  3000               	movwf	((Main_Delay@k))+1
  7895  058F  00F1               	fcall	_Main_Delay
  7896  0590  160A  118A  2263  120A  118A  	line	491
  7897                           	
  7898                           l3846:	
  7899  0595                     ;main.c: 491:                         {
  7900                           	movlw	low(01h)
  7901  0595  3001               	fcall	_LCD_Command
  7902  0596  160A  158A  2633  120A  118A  	line	492
  7903                           ;main.c: 492:                             setTime[i] = 23;
  7904                           	goto	l222
  7905  059B  2FB8               	line	493
  7906                           ;main.c: 493:                         }
  7907                           	
  7908                           l193:	
  7909  059C                     	line	494
  7910                           ;main.c: 494: 
  7911                           	goto	l3896
  7912  059C  2EDE               	line	497
  7913                           ;main.c: 495:                         else;main.c: 497:                             setT
                                 ime[i] = setTime[i] - 1;
  7914                           	
  7915                           l196:	
  7916  059D                     	line	499
  7917                           	
  7918                           l3848:	
  7919  059D                     ;main.c: 499:                     }
  7920                           		movlw	2
  7921  059D  3002               	bcf	status, 5	;RP0=0, select bank0
  7922  059E  1283               	bcf	status, 6	;RP1=0, select bank0
  7923  059F  1303               	xorwf	((SetTime@i)),w
  7924  05A0  0646               iorwf	((SetTime@i+1)),w
  7925  05A1  0447               	btfss	status,2
  7926  05A2  1D03               	goto	u3071
  7927  05A3  2DA5               	goto	u3070
  7928  05A4  2DA6               u3071:
  7929  05A5                     	goto	l3852
  7930  05A5  2DA9               u3070:
  7931  05A6                     	line	500
  7932                           	
  7933                           l3850:	
  7934  05A6                     ;main.c: 500:                     else if(is24Hour == 0)
  7935                           	clrf	(SetTime@i)
  7936  05A6  01C6               	clrf	(SetTime@i+1)
  7937  05A7  01C7               	goto	l3898
  7938  05A8  2EF0               	line	502
  7939                           ;main.c: 502: 
  7940                           	
  7941                           l197:	
  7942  05A9                     	line	503
  7943                           	
  7944                           l3852:	
  7945  05A9                     ;main.c: 503:                     }
  7946                           	movlw	01h
  7947  05A9  3001               	addwf	(SetTime@i),f
  7948  05AA  07C6               	skipnc
  7949  05AB  1803               	incf	(SetTime@i+1),f
  7950  05AC  0AC7               	movlw	0
  7951  05AD  3000               	addwf	(SetTime@i+1),f
  7952  05AE  07C7               	goto	l3898
  7953  05AF  2EF0               	
  7954                           l198:	
  7955  05B0                     	line	504
  7956                           ;main.c: 504:                     else
  7957                           	goto	l3898
  7958  05B0  2EF0               	line	506
  7959                           ;main.c: 506:                 }
  7960                           	
  7961                           l200:	
  7962  05B1                     	line	508
  7963                           	
  7964                           l3854:	
  7965  05B1                     ;main.c: 508:                 else if(setTime[i] == 0)
  7966                           	movf	((SetTime@i)),w
  7967  05B1  0846               iorwf	((SetTime@i+1)),w
  7968  05B2  0447               	btfss	status,2
  7969  05B3  1D03               	goto	u3081
  7970  05B4  2DB6               	goto	u3080
  7971  05B5  2DB7               u3081:
  7972  05B6                     	goto	l3870
  7973  05B6  2E1F               u3080:
  7974  05B7                     	line	510
  7975                           	
  7976                           l3856:	
  7977  05B7                     ;main.c: 509:                 {;main.c: 510:                     setTime[i] = 59;
  7978                           		decf	((_is24Hour)),w
  7979  05B7  035E               iorwf	((_is24Hour+1)),w
  7980  05B8  045F               	btfss	status,2
  7981  05B9  1D03               	goto	u3091
  7982  05BA  2DBC               	goto	u3090
  7983  05BB  2DBD               u3091:
  7984  05BC                     	goto	l3864
  7985  05BC  2DF7               u3090:
  7986  05BD                     	line	512
  7987                           	
  7988                           l3858:	
  7989  05BD                     ;main.c: 511:                 };main.c: 512: 
  7990                           	movf	(SetTime@i),w
  7991  05BD  0846               	movwf	(??_SetTime+0)+0
  7992  05BE  00A9               	addwf	(??_SetTime+0)+0,w
  7993  05BF  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  7994  05C0  3E40               	movwf	fsr0
  7995  05C1  0084               	bcf	status, 7	;select IRP bank0
  7996  05C2  1383               	movf	indf,w
  7997  05C3  0800               	movwf	(??_SetTime+1)+0+0
  7998  05C4  00AA               	incf	fsr0,f
  7999  05C5  0A84               	movf	indf,w
  8000  05C6  0800               	movwf	(??_SetTime+1)+0+1
  8001  05C7  00AB               	movf	((??_SetTime+1)+0),w
  8002  05C8  082A               iorwf	((??_SetTime+1)+1),w
  8003  05C9  042B               	btfss	status,2
  8004  05CA  1D03               	goto	u3101
  8005  05CB  2DCD               	goto	u3100
  8006  05CC  2DCE               u3101:
  8007  05CD                     	goto	l3862
  8008  05CD  2DD9               u3100:
  8009  05CE                     	line	514
  8010                           	
  8011                           l3860:	
  8012  05CE                     ;main.c: 513:                 else;main.c: 514:                     setTime[i] = setTime
                                 [i] - 1;
  8013                           	movf	(SetTime@i),w
  8014  05CE  0846               	movwf	(??_SetTime+0)+0
  8015  05CF  00A9               	addwf	(??_SetTime+0)+0,w
  8016  05D0  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8017  05D1  3E40               	movwf	fsr0
  8018  05D2  0084               	movlw	017h
  8019  05D3  3017               	movwf	indf
  8020  05D4  0080               	incf	fsr0,f
  8021  05D5  0A84               	movlw	0
  8022  05D6  3000               	movwf	indf
  8023  05D7  0080               	line	515
  8024                           ;main.c: 515:                 break;
  8025                           	goto	l3898
  8026  05D8  2EF0               	line	517
  8027                           ;main.c: 517:             case 12:
  8028                           	
  8029                           l203:	
  8030  05D9                     	line	519
  8031                           	
  8032                           l3862:	
  8033  05D9                     ;main.c: 518: ;main.c: 519:                 if(i == 0)
  8034                           	movf	(SetTime@i),w
  8035  05D9  0846               	movwf	(??_SetTime+0)+0
  8036  05DA  00A9               	addwf	(??_SetTime+0)+0,w
  8037  05DB  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8038  05DC  3E40               	movwf	fsr0
  8039  05DD  0084               	movf	indf,w
  8040  05DE  0800               	movwf	(??_SetTime+1)+0+0
  8041  05DF  00AA               	incf	fsr0,f
  8042  05E0  0A84               	movf	indf,w
  8043  05E1  0800               	movwf	(??_SetTime+1)+0+1
  8044  05E2  00AB               	movf	0+(??_SetTime+1)+0,w
  8045  05E3  082A               	addlw	low(-1)
  8046  05E4  3EFF               	movwf	(??_SetTime+3)+0
  8047  05E5  00AC               	movf	1+(??_SetTime+1)+0,w
  8048  05E6  082B               	skipnc
  8049  05E7  1803               	addlw	1
  8050  05E8  3E01               	addlw	high(-1)
  8051  05E9  3EFF               	movwf	1+(??_SetTime+3)+0
  8052  05EA  00AD               	movf	(SetTime@i),w
  8053  05EB  0846               	movwf	(??_SetTime+5)+0
  8054  05EC  00AE               	addwf	(??_SetTime+5)+0,w
  8055  05ED  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8056  05EE  3E40               	movwf	fsr0
  8057  05EF  0084               	movf	0+(??_SetTime+3)+0,w
  8058  05F0  082C               	movwf	indf
  8059  05F1  0080               	incf	fsr0,f
  8060  05F2  0A84               	movf	1+(??_SetTime+3)+0,w
  8061  05F3  082D               	movwf	indf
  8062  05F4  0080               	goto	l3898
  8063  05F5  2EF0               	line	520
  8064                           ;main.c: 520:                 {
  8065                           	
  8066                           l204:	
  8067  05F6                     	line	521
  8068                           ;main.c: 521: 
  8069                           	goto	l3898
  8070  05F6  2EF0               	line	522
  8071                           ;main.c: 522:                     if(is24Hour == 1)
  8072                           	
  8073                           l202:	
  8074  05F7                     	
  8075                           l3864:	
  8076  05F7                     	movf	((_is24Hour)),w
  8077  05F7  085E               iorwf	((_is24Hour+1)),w
  8078  05F8  045F               	btfss	status,2
  8079  05F9  1D03               	goto	u3111
  8080  05FA  2DFC               	goto	u3110
  8081  05FB  2DFD               u3111:
  8082  05FC                     	goto	l3868
  8083  05FC  2DFF               u3110:
  8084  05FD                     	goto	l3898
  8085  05FD  2EF0               	line	525
  8086                           	
  8087                           l3866:	
  8088  05FE                     ;main.c: 523:                     {;main.c: 525:                         {
  8089                           	goto	l3898
  8090  05FE  2EF0               	line	526
  8091                           ;main.c: 526:                             setTime[i] = 0;
  8092                           	
  8093                           l206:	
  8094  05FF                     	line	527
  8095                           	
  8096                           l3868:	
  8097  05FF                     ;main.c: 527:                         }
  8098                           	movf	(SetTime@i),w
  8099  05FF  0846               	movwf	(??_SetTime+0)+0
  8100  0600  00A9               	addwf	(??_SetTime+0)+0,w
  8101  0601  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8102  0602  3E40               	movwf	fsr0
  8103  0603  0084               	bcf	status, 7	;select IRP bank0
  8104  0604  1383               	movf	indf,w
  8105  0605  0800               	movwf	(??_SetTime+1)+0+0
  8106  0606  00AA               	incf	fsr0,f
  8107  0607  0A84               	movf	indf,w
  8108  0608  0800               	movwf	(??_SetTime+1)+0+1
  8109  0609  00AB               	movf	0+(??_SetTime+1)+0,w
  8110  060A  082A               	addlw	low(-1)
  8111  060B  3EFF               	movwf	(??_SetTime+3)+0
  8112  060C  00AC               	movf	1+(??_SetTime+1)+0,w
  8113  060D  082B               	skipnc
  8114  060E  1803               	addlw	1
  8115  060F  3E01               	addlw	high(-1)
  8116  0610  3EFF               	movwf	1+(??_SetTime+3)+0
  8117  0611  00AD               	movf	(SetTime@i),w
  8118  0612  0846               	movwf	(??_SetTime+5)+0
  8119  0613  00AE               	addwf	(??_SetTime+5)+0,w
  8120  0614  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8121  0615  3E40               	movwf	fsr0
  8122  0616  0084               	movf	0+(??_SetTime+3)+0,w
  8123  0617  082C               	movwf	indf
  8124  0618  0080               	incf	fsr0,f
  8125  0619  0A84               	movf	1+(??_SetTime+3)+0,w
  8126  061A  082D               	movwf	indf
  8127  061B  0080               	goto	l3898
  8128  061C  2EF0               	
  8129                           l207:	
  8130  061D                     	goto	l3898
  8131  061D  2EF0               	
  8132                           l205:	
  8133  061E                     	line	528
  8134                           ;main.c: 528: 
  8135                           	goto	l3898
  8136  061E  2EF0               	line	530
  8137                           ;main.c: 530:                         {
  8138                           	
  8139                           l201:	
  8140  061F                     	
  8141                           l3870:	
  8142  061F                     	movf	(SetTime@i),w
  8143  061F  0846               	movwf	(??_SetTime+0)+0
  8144  0620  00A9               	addwf	(??_SetTime+0)+0,w
  8145  0621  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8146  0622  3E40               	movwf	fsr0
  8147  0623  0084               	bcf	status, 7	;select IRP bank0
  8148  0624  1383               	movf	indf,w
  8149  0625  0800               	movwf	(??_SetTime+1)+0+0
  8150  0626  00AA               	incf	fsr0,f
  8151  0627  0A84               	movf	indf,w
  8152  0628  0800               	movwf	(??_SetTime+1)+0+1
  8153  0629  00AB               	movf	((??_SetTime+1)+0),w
  8154  062A  082A               iorwf	((??_SetTime+1)+1),w
  8155  062B  042B               	btfss	status,2
  8156  062C  1D03               	goto	u3121
  8157  062D  2E2F               	goto	u3120
  8158  062E  2E30               u3121:
  8159  062F                     	goto	l3874
  8160  062F  2E3B               u3120:
  8161  0630                     	line	532
  8162                           	
  8163                           l3872:	
  8164  0630                     ;main.c: 531:                             setTime[i] = setTime[i] + 1;;main.c: 532:     
                                                     }
  8165                           	movf	(SetTime@i),w
  8166  0630  0846               	movwf	(??_SetTime+0)+0
  8167  0631  00A9               	addwf	(??_SetTime+0)+0,w
  8168  0632  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8169  0633  3E40               	movwf	fsr0
  8170  0634  0084               	movlw	03Bh
  8171  0635  303B               	movwf	indf
  8172  0636  0080               	incf	fsr0,f
  8173  0637  0A84               	movlw	0
  8174  0638  3000               	movwf	indf
  8175  0639  0080               	line	533
  8176                           ;main.c: 533:                     }
  8177                           	goto	l3898
  8178  063A  2EF0               	line	535
  8179                           ;main.c: 535:                     {
  8180                           	
  8181                           l209:	
  8182  063B                     	line	536
  8183                           	
  8184                           l3874:	
  8185  063B                     ;main.c: 536: 
  8186                           	movf	(SetTime@i),w
  8187  063B  0846               	movwf	(??_SetTime+0)+0
  8188  063C  00A9               	addwf	(??_SetTime+0)+0,w
  8189  063D  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8190  063E  3E40               	movwf	fsr0
  8191  063F  0084               	movf	indf,w
  8192  0640  0800               	movwf	(??_SetTime+1)+0+0
  8193  0641  00AA               	incf	fsr0,f
  8194  0642  0A84               	movf	indf,w
  8195  0643  0800               	movwf	(??_SetTime+1)+0+1
  8196  0644  00AB               	movf	0+(??_SetTime+1)+0,w
  8197  0645  082A               	addlw	low(-1)
  8198  0646  3EFF               	movwf	(??_SetTime+3)+0
  8199  0647  00AC               	movf	1+(??_SetTime+1)+0,w
  8200  0648  082B               	skipnc
  8201  0649  1803               	addlw	1
  8202  064A  3E01               	addlw	high(-1)
  8203  064B  3EFF               	movwf	1+(??_SetTime+3)+0
  8204  064C  00AD               	movf	(SetTime@i),w
  8205  064D  0846               	movwf	(??_SetTime+5)+0
  8206  064E  00AE               	addwf	(??_SetTime+5)+0,w
  8207  064F  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8208  0650  3E40               	movwf	fsr0
  8209  0651  0084               	movf	0+(??_SetTime+3)+0,w
  8210  0652  082C               	movwf	indf
  8211  0653  0080               	incf	fsr0,f
  8212  0654  0A84               	movf	1+(??_SetTime+3)+0,w
  8213  0655  082D               	movwf	indf
  8214  0656  0080               	goto	l3898
  8215  0657  2EF0               	
  8216                           l210:	
  8217  0658                     	goto	l3898
  8218  0658  2EF0               	
  8219                           l208:	
  8220  0659                     	line	537
  8221                           ;main.c: 537:                     }
  8222                           	goto	l3898
  8223  0659  2EF0               	line	539
  8224                           ;main.c: 539: 
  8225                           	
  8226                           l211:	
  8227  065A                     	line	541
  8228                           	
  8229                           l3876:	
  8230  065A                     ;main.c: 541:                 {
  8231                           	movf	((SetTime@i)),w
  8232  065A  0846               iorwf	((SetTime@i+1)),w
  8233  065B  0447               	btfss	status,2
  8234  065C  1D03               	goto	u3131
  8235  065D  2E5F               	goto	u3130
  8236  065E  2E60               u3131:
  8237  065F                     	goto	l3888
  8238  065F  2EA3               u3130:
  8239  0660                     	line	544
  8240                           	
  8241                           l3878:	
  8242  0660                     ;main.c: 542:                     setTime[i] = 0;;main.c: 544:                 else
  8243                           		decf	((_is24Hour)),w
  8244  0660  035E               iorwf	((_is24Hour+1)),w
  8245  0661  045F               	btfss	status,2
  8246  0662  1D03               	goto	u3141
  8247  0663  2E65               	goto	u3140
  8248  0664  2E66               u3141:
  8249  0665                     	goto	l3898
  8250  0665  2EF0               u3140:
  8251  0666                     	line	546
  8252                           	
  8253                           l3880:	
  8254  0666                     ;main.c: 545:                     setTime[i] = setTime[i] + 1;;main.c: 546:             
                                     break;
  8255                           	movf	(SetTime@i),w
  8256  0666  0846               	movwf	(??_SetTime+0)+0
  8257  0667  00A9               	addwf	(??_SetTime+0)+0,w
  8258  0668  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8259  0669  3E40               	movwf	fsr0
  8260  066A  0084               	bcf	status, 7	;select IRP bank0
  8261  066B  1383               	movf	indf,w
  8262  066C  0800               	movwf	(??_SetTime+1)+0+0
  8263  066D  00AA               	incf	fsr0,f
  8264  066E  0A84               	movf	indf,w
  8265  066F  0800               	movwf	(??_SetTime+1)+0+1
  8266  0670  00AB               		movlw	23
  8267  0671  3017               	xorwf	((??_SetTime+1)+0),w
  8268  0672  062A               iorwf	((??_SetTime+1)+1),w
  8269  0673  042B               	btfss	status,2
  8270  0674  1D03               	goto	u3151
  8271  0675  2E77               	goto	u3150
  8272  0676  2E78               u3151:
  8273  0677                     	goto	l3884
  8274  0677  2E81               u3150:
  8275  0678                     	line	548
  8276                           	
  8277                           l3882:	
  8278  0678                     ;main.c: 547:         };main.c: 548: 
  8279                           	movf	(SetTime@i),w
  8280  0678  0846               	movwf	(??_SetTime+0)+0
  8281  0679  00A9               	addwf	(??_SetTime+0)+0,w
  8282  067A  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8283  067B  3E40               	movwf	fsr0
  8284  067C  0084               	clrf	indf
  8285  067D  0180               	incf	fsr0,f
  8286  067E  0A84               	clrf	indf
  8287  067F  0180               	line	549
  8288                           ;main.c: 549: 
  8289                           	goto	l3898
  8290  0680  2EF0               	line	551
  8291                           ;main.c: 551:         min = setTime[1];
  8292                           	
  8293                           l214:	
  8294  0681                     	line	553
  8295                           	
  8296                           l3884:	
  8297  0681                     ;main.c: 552:         sec = setTime[2];;main.c: 553:         digits[1] = hour % 10 + 48;
                                 
  8298                           	movf	(SetTime@i),w
  8299  0681  0846               	movwf	(??_SetTime+0)+0
  8300  0682  00A9               	addwf	(??_SetTime+0)+0,w
  8301  0683  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8302  0684  3E40               	movwf	fsr0
  8303  0685  0084               	movf	indf,w
  8304  0686  0800               	movwf	(??_SetTime+1)+0+0
  8305  0687  00AA               	incf	fsr0,f
  8306  0688  0A84               	movf	indf,w
  8307  0689  0800               	movwf	(??_SetTime+1)+0+1
  8308  068A  00AB               	movf	0+(??_SetTime+1)+0,w
  8309  068B  082A               	addlw	low(01h)
  8310  068C  3E01               	movwf	(??_SetTime+3)+0
  8311  068D  00AC               	movf	1+(??_SetTime+1)+0,w
  8312  068E  082B               	skipnc
  8313  068F  1803               	addlw	1
  8314  0690  3E01               	addlw	high(01h)
  8315  0691  3E00               	movwf	1+(??_SetTime+3)+0
  8316  0692  00AD               	movf	(SetTime@i),w
  8317  0693  0846               	movwf	(??_SetTime+5)+0
  8318  0694  00AE               	addwf	(??_SetTime+5)+0,w
  8319  0695  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8320  0696  3E40               	movwf	fsr0
  8321  0697  0084               	movf	0+(??_SetTime+3)+0,w
  8322  0698  082C               	movwf	indf
  8323  0699  0080               	incf	fsr0,f
  8324  069A  0A84               	movf	1+(??_SetTime+3)+0,w
  8325  069B  082D               	movwf	indf
  8326  069C  0080               	goto	l3898
  8327  069D  2EF0               	line	554
  8328                           ;main.c: 554:         hour /= 10;
  8329                           	
  8330                           l215:	
  8331  069E                     	line	555
  8332                           ;main.c: 555:         digits[0] = hour % 10 + 48;
  8333                           	goto	l3898
  8334  069E  2EF0               	line	556
  8335                           ;main.c: 556:         digits[4] = min % 10 + 48;
  8336                           	
  8337                           l213:	
  8338  069F                     	goto	l3898
  8339  069F  2EF0               	
  8340                           l3886:	
  8341  06A0                     	goto	l3898
  8342  06A0  2EF0               	line	559
  8343                           ;main.c: 557:         min /= 10;;main.c: 559:         digits[7] = sec % 10 + 48;
  8344                           	
  8345                           l217:	
  8346  06A1                     	goto	l3898
  8347  06A1  2EF0               	
  8348                           l216:	
  8349  06A2                     	line	560
  8350                           ;main.c: 560:         sec /= 10;
  8351                           	goto	l3898
  8352  06A2  2EF0               	line	562
  8353                           ;main.c: 562:         LCD_SendString(digits);
  8354                           	
  8355                           l212:	
  8356  06A3                     	
  8357                           l3888:	
  8358  06A3                     	movf	(SetTime@i),w
  8359  06A3  0846               	movwf	(??_SetTime+0)+0
  8360  06A4  00A9               	addwf	(??_SetTime+0)+0,w
  8361  06A5  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8362  06A6  3E40               	movwf	fsr0
  8363  06A7  0084               	bcf	status, 7	;select IRP bank0
  8364  06A8  1383               	movf	indf,w
  8365  06A9  0800               	movwf	(??_SetTime+1)+0+0
  8366  06AA  00AA               	incf	fsr0,f
  8367  06AB  0A84               	movf	indf,w
  8368  06AC  0800               	movwf	(??_SetTime+1)+0+1
  8369  06AD  00AB               		movlw	59
  8370  06AE  303B               	xorwf	((??_SetTime+1)+0),w
  8371  06AF  062A               iorwf	((??_SetTime+1)+1),w
  8372  06B0  042B               	btfss	status,2
  8373  06B1  1D03               	goto	u3161
  8374  06B2  2EB4               	goto	u3160
  8375  06B3  2EB5               u3161:
  8376  06B4                     	goto	l3892
  8377  06B4  2EBE               u3160:
  8378  06B5                     	line	564
  8379                           	
  8380                           l3890:	
  8381  06B5                     ;main.c: 563:     };main.c: 564: }
  8382                           	movf	(SetTime@i),w
  8383  06B5  0846               	movwf	(??_SetTime+0)+0
  8384  06B6  00A9               	addwf	(??_SetTime+0)+0,w
  8385  06B7  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8386  06B8  3E40               	movwf	fsr0
  8387  06B9  0084               	clrf	indf
  8388  06BA  0180               	incf	fsr0,f
  8389  06BB  0A84               	clrf	indf
  8390  06BC  0180               	line	565
  8391                           ;main.c: 565: 
  8392                           	goto	l3898
  8393  06BD  2EF0               	line	566
  8394                           ;main.c: 566: 
  8395                           	
  8396                           l219:	
  8397  06BE                     	line	567
  8398                           	
  8399                           l3892:	
  8400  06BE                     ;main.c: 567: void CheckDay(void)
  8401                           	movf	(SetTime@i),w
  8402  06BE  0846               	movwf	(??_SetTime+0)+0
  8403  06BF  00A9               	addwf	(??_SetTime+0)+0,w
  8404  06C0  0729               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8405  06C1  3E40               	movwf	fsr0
  8406  06C2  0084               	movf	indf,w
  8407  06C3  0800               	movwf	(??_SetTime+1)+0+0
  8408  06C4  00AA               	incf	fsr0,f
  8409  06C5  0A84               	movf	indf,w
  8410  06C6  0800               	movwf	(??_SetTime+1)+0+1
  8411  06C7  00AB               	movf	0+(??_SetTime+1)+0,w
  8412  06C8  082A               	addlw	low(01h)
  8413  06C9  3E01               	movwf	(??_SetTime+3)+0
  8414  06CA  00AC               	movf	1+(??_SetTime+1)+0,w
  8415  06CB  082B               	skipnc
  8416  06CC  1803               	addlw	1
  8417  06CD  3E01               	addlw	high(01h)
  8418  06CE  3E00               	movwf	1+(??_SetTime+3)+0
  8419  06CF  00AD               	movf	(SetTime@i),w
  8420  06D0  0846               	movwf	(??_SetTime+5)+0
  8421  06D1  00AE               	addwf	(??_SetTime+5)+0,w
  8422  06D2  072E               	addlw	low(SetTime@setTime|((0x0)<<8))&0ffh
  8423  06D3  3E40               	movwf	fsr0
  8424  06D4  0084               	movf	0+(??_SetTime+3)+0,w
  8425  06D5  082C               	movwf	indf
  8426  06D6  0080               	incf	fsr0,f
  8427  06D7  0A84               	movf	1+(??_SetTime+3)+0,w
  8428  06D8  082D               	movwf	indf
  8429  06D9  0080               	goto	l3898
  8430  06DA  2EF0               	
  8431                           l220:	
  8432  06DB                     	goto	l3898
  8433  06DB  2EF0               	
  8434                           l218:	
  8435  06DC                     	line	568
  8436                           ;main.c: 568: {
  8437                           	goto	l3898
  8438  06DC  2EF0               	line	569
  8439                           	
  8440                           l3894:	
  8441  06DD                     ;main.c: 569:     switch(day_of_week)
  8442                           	goto	l3898
  8443  06DD  2EF0               	
  8444                           l195:	
  8445  06DE                     	
  8446                           l3896:	
  8447  06DE                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8448                           ; Switch size 1, requested type "space"
  8449                           ; Number of cases is 1, Range of values is 0 to 0
  8450                           ; switch strategies available:
  8451                           ; Name         Instructions Cycles
  8452                           ; simple_byte            4     3 (average)
  8453                           ; direct_byte           11     8 (fixed)
  8454                           ; jumptable            260     6 (fixed)
  8455                           ;	Chosen strategy is simple_byte
  8456                           
  8457                           	bcf	status, 5	;RP0=0, select bank0
  8458  06DE  1283               	bcf	status, 6	;RP1=0, select bank0
  8459  06DF  1303               	movf (SetTime@Key+1),w
  8460  06E0  0828               	opt asmopt_push
  8461                           	opt asmopt_off
  8462                           	xorlw	0^0	; case 0
  8463  06E1  3A00               	skipnz
  8464  06E2  1903               	goto	l4370
  8465  06E3  2EE5               	goto	l3898
  8466  06E4  2EF0               	opt asmopt_pop
  8467                           	
  8468                           l4370:	
  8469  06E5                     ; Switch size 1, requested type "space"
  8470                           ; Number of cases is 3, Range of values is 10 to 12
  8471                           ; switch strategies available:
  8472                           ; Name         Instructions Cycles
  8473                           ; simple_byte           10     6 (average)
  8474                           ; direct_byte           20    11 (fixed)
  8475                           ; jumptable            263     9 (fixed)
  8476                           ;	Chosen strategy is simple_byte
  8477                           
  8478                           	movf (SetTime@Key),w
  8479  06E5  0827               	opt asmopt_push
  8480                           	opt asmopt_off
  8481                           	xorlw	10^0	; case 10
  8482  06E6  3A0A               	skipnz
  8483  06E7  1903               	goto	l3848
  8484  06E8  2D9D               	xorlw	11^10	; case 11
  8485  06E9  3A01               	skipnz
  8486  06EA  1903               	goto	l3854
  8487  06EB  2DB1               	xorlw	12^11	; case 12
  8488  06EC  3A07               	skipnz
  8489  06ED  1903               	goto	l3876
  8490  06EE  2E5A               	goto	l3898
  8491  06EF  2EF0               	opt asmopt_pop
  8492                           
  8493                           	
  8494                           l199:	
  8495  06F0                     	line	572
  8496                           	
  8497                           l3898:	
  8498  06F0                     ;main.c: 572: 
  8499                           	movf	(SetTime@setTime+1),w
  8500  06F0  0841               	movwf	(SetTime@hour+1)
  8501  06F1  00BB               	movf	(SetTime@setTime),w
  8502  06F2  0840               	movwf	(SetTime@hour)
  8503  06F3  00BA               	line	573
  8504                           ;main.c: 573:         case 1:
  8505                           	movf	1+(SetTime@setTime)+02h,w
  8506  06F4  0843               	movwf	(SetTime@min+1)
  8507  06F5  00BD               	movf	0+(SetTime@setTime)+02h,w
  8508  06F6  0842               	movwf	(SetTime@min)
  8509  06F7  00BC               	line	574
  8510                           ;main.c: 574:             isWeekDay = 1;
  8511                           	movf	1+(SetTime@setTime)+04h,w
  8512  06F8  0845               	movwf	(SetTime@sec+1)
  8513  06F9  00BF               	movf	0+(SetTime@setTime)+04h,w
  8514  06FA  0844               	movwf	(SetTime@sec)
  8515  06FB  00BE               	line	575
  8516                           	
  8517                           l3900:	
  8518  06FC                     ;main.c: 575:             break;
  8519                           	movlw	0Ah
  8520  06FC  300A               	movwf	(___awmod@divisor)
  8521  06FD  00F0               	movlw	0
  8522  06FE  3000               	movwf	((___awmod@divisor))+1
  8523  06FF  00F1               	movf	(SetTime@hour+1),w
  8524  0700  083B               	movwf	(___awmod@dividend+1)
  8525  0701  00F3               	movf	(SetTime@hour),w
  8526  0702  083A               	movwf	(___awmod@dividend)
  8527  0703  00F2               	fcall	___awmod
  8528  0704  160A  118A  2567  120A  118A  	movf	(0+(?___awmod)),w
  8529  0709  0870               	addlw	030h
  8530  070A  3E30               	bcf	status, 5	;RP0=0, select bank0
  8531  070B  1283               	bcf	status, 6	;RP1=0, select bank0
  8532  070C  1303               	movwf	(??_SetTime+0)+0
  8533  070D  00A9               	movf	(??_SetTime+0)+0,w
  8534  070E  0829               	movwf	0+(SetTime@digits)+01h
  8535  070F  00B0               	line	576
  8536                           	
  8537                           l3902:	
  8538  0710                     ;main.c: 576:         case 2:
  8539                           	movlw	0Ah
  8540  0710  300A               	movwf	(___awdiv@divisor)
  8541  0711  00F0               	movlw	0
  8542  0712  3000               	movwf	((___awdiv@divisor))+1
  8543  0713  00F1               	movf	(SetTime@hour+1),w
  8544  0714  083B               	movwf	(___awdiv@dividend+1)
  8545  0715  00F3               	movf	(SetTime@hour),w
  8546  0716  083A               	movwf	(___awdiv@dividend)
  8547  0717  00F2               	fcall	___awdiv
  8548  0718  160A  118A  25CA  120A  118A  	movf	(1+(?___awdiv)),w
  8549  071D  0871               	bcf	status, 5	;RP0=0, select bank0
  8550  071E  1283               	bcf	status, 6	;RP1=0, select bank0
  8551  071F  1303               	movwf	(SetTime@hour+1)
  8552  0720  00BB               	movf	(0+(?___awdiv)),w
  8553  0721  0870               	movwf	(SetTime@hour)
  8554  0722  00BA               	line	577
  8555                           	
  8556                           l3904:	
  8557  0723                     ;main.c: 577:             isWeekDay = 1;
  8558                           	movlw	0Ah
  8559  0723  300A               	movwf	(___awmod@divisor)
  8560  0724  00F0               	movlw	0
  8561  0725  3000               	movwf	((___awmod@divisor))+1
  8562  0726  00F1               	movf	(SetTime@hour+1),w
  8563  0727  083B               	movwf	(___awmod@dividend+1)
  8564  0728  00F3               	movf	(SetTime@hour),w
  8565  0729  083A               	movwf	(___awmod@dividend)
  8566  072A  00F2               	fcall	___awmod
  8567  072B  160A  118A  2567  120A  118A  	movf	(0+(?___awmod)),w
  8568  0730  0870               	addlw	030h
  8569  0731  3E30               	bcf	status, 5	;RP0=0, select bank0
  8570  0732  1283               	bcf	status, 6	;RP1=0, select bank0
  8571  0733  1303               	movwf	(??_SetTime+0)+0
  8572  0734  00A9               	movf	(??_SetTime+0)+0,w
  8573  0735  0829               	movwf	(SetTime@digits)
  8574  0736  00AF               	line	578
  8575                           	
  8576                           l3906:	
  8577  0737                     ;main.c: 578:             break;
  8578                           	movlw	0Ah
  8579  0737  300A               	movwf	(___awmod@divisor)
  8580  0738  00F0               	movlw	0
  8581  0739  3000               	movwf	((___awmod@divisor))+1
  8582  073A  00F1               	movf	(SetTime@min+1),w
  8583  073B  083D               	movwf	(___awmod@dividend+1)
  8584  073C  00F3               	movf	(SetTime@min),w
  8585  073D  083C               	movwf	(___awmod@dividend)
  8586  073E  00F2               	fcall	___awmod
  8587  073F  160A  118A  2567  120A  118A  	movf	(0+(?___awmod)),w
  8588  0744  0870               	addlw	030h
  8589  0745  3E30               	bcf	status, 5	;RP0=0, select bank0
  8590  0746  1283               	bcf	status, 6	;RP1=0, select bank0
  8591  0747  1303               	movwf	(??_SetTime+0)+0
  8592  0748  00A9               	movf	(??_SetTime+0)+0,w
  8593  0749  0829               	movwf	0+(SetTime@digits)+04h
  8594  074A  00B3               	line	579
  8595                           	
  8596                           l3908:	
  8597  074B                     ;main.c: 579:         case 3:
  8598                           	movlw	0Ah
  8599  074B  300A               	movwf	(___awdiv@divisor)
  8600  074C  00F0               	movlw	0
  8601  074D  3000               	movwf	((___awdiv@divisor))+1
  8602  074E  00F1               	movf	(SetTime@min+1),w
  8603  074F  083D               	movwf	(___awdiv@dividend+1)
  8604  0750  00F3               	movf	(SetTime@min),w
  8605  0751  083C               	movwf	(___awdiv@dividend)
  8606  0752  00F2               	fcall	___awdiv
  8607  0753  160A  118A  25CA  120A  118A  	movf	(1+(?___awdiv)),w
  8608  0758  0871               	bcf	status, 5	;RP0=0, select bank0
  8609  0759  1283               	bcf	status, 6	;RP1=0, select bank0
  8610  075A  1303               	movwf	(SetTime@min+1)
  8611  075B  00BD               	movf	(0+(?___awdiv)),w
  8612  075C  0870               	movwf	(SetTime@min)
  8613  075D  00BC               	line	580
  8614                           	
  8615                           l3910:	
  8616  075E                     ;main.c: 580:             isWeekDay = 1;
  8617                           	movlw	0Ah
  8618  075E  300A               	movwf	(___awmod@divisor)
  8619  075F  00F0               	movlw	0
  8620  0760  3000               	movwf	((___awmod@divisor))+1
  8621  0761  00F1               	movf	(SetTime@min+1),w
  8622  0762  083D               	movwf	(___awmod@dividend+1)
  8623  0763  00F3               	movf	(SetTime@min),w
  8624  0764  083C               	movwf	(___awmod@dividend)
  8625  0765  00F2               	fcall	___awmod
  8626  0766  160A  118A  2567  120A  118A  	movf	(0+(?___awmod)),w
  8627  076B  0870               	addlw	030h
  8628  076C  3E30               	bcf	status, 5	;RP0=0, select bank0
  8629  076D  1283               	bcf	status, 6	;RP1=0, select bank0
  8630  076E  1303               	movwf	(??_SetTime+0)+0
  8631  076F  00A9               	movf	(??_SetTime+0)+0,w
  8632  0770  0829               	movwf	0+(SetTime@digits)+03h
  8633  0771  00B2               	line	581
  8634                           	
  8635                           l3912:	
  8636  0772                     ;main.c: 581:             break;
  8637                           	movlw	0Ah
  8638  0772  300A               	movwf	(___awmod@divisor)
  8639  0773  00F0               	movlw	0
  8640  0774  3000               	movwf	((___awmod@divisor))+1
  8641  0775  00F1               	movf	(SetTime@sec+1),w
  8642  0776  083F               	movwf	(___awmod@dividend+1)
  8643  0777  00F3               	movf	(SetTime@sec),w
  8644  0778  083E               	movwf	(___awmod@dividend)
  8645  0779  00F2               	fcall	___awmod
  8646  077A  160A  118A  2567  120A  118A  	movf	(0+(?___awmod)),w
  8647  077F  0870               	addlw	030h
  8648  0780  3E30               	bcf	status, 5	;RP0=0, select bank0
  8649  0781  1283               	bcf	status, 6	;RP1=0, select bank0
  8650  0782  1303               	movwf	(??_SetTime+0)+0
  8651  0783  00A9               	movf	(??_SetTime+0)+0,w
  8652  0784  0829               	movwf	0+(SetTime@digits)+07h
  8653  0785  00B6               	line	582
  8654                           	
  8655                           l3914:	
  8656  0786                     ;main.c: 582:         case 4:
  8657                           	movlw	0Ah
  8658  0786  300A               	movwf	(___awdiv@divisor)
  8659  0787  00F0               	movlw	0
  8660  0788  3000               	movwf	((___awdiv@divisor))+1
  8661  0789  00F1               	movf	(SetTime@sec+1),w
  8662  078A  083F               	movwf	(___awdiv@dividend+1)
  8663  078B  00F3               	movf	(SetTime@sec),w
  8664  078C  083E               	movwf	(___awdiv@dividend)
  8665  078D  00F2               	fcall	___awdiv
  8666  078E  160A  118A  25CA  120A  118A  	movf	(1+(?___awdiv)),w
  8667  0793  0871               	bcf	status, 5	;RP0=0, select bank0
  8668  0794  1283               	bcf	status, 6	;RP1=0, select bank0
  8669  0795  1303               	movwf	(SetTime@sec+1)
  8670  0796  00BF               	movf	(0+(?___awdiv)),w
  8671  0797  0870               	movwf	(SetTime@sec)
  8672  0798  00BE               	line	583
  8673                           	
  8674                           l3916:	
  8675  0799                     ;main.c: 583:             isWeekDay = 1;
  8676                           	movlw	0Ah
  8677  0799  300A               	movwf	(___awmod@divisor)
  8678  079A  00F0               	movlw	0
  8679  079B  3000               	movwf	((___awmod@divisor))+1
  8680  079C  00F1               	movf	(SetTime@sec+1),w
  8681  079D  083F               	movwf	(___awmod@dividend+1)
  8682  079E  00F3               	movf	(SetTime@sec),w
  8683  079F  083E               	movwf	(___awmod@dividend)
  8684  07A0  00F2               	fcall	___awmod
  8685  07A1  160A  118A  2567  120A  118A  	movf	(0+(?___awmod)),w
  8686  07A6  0870               	addlw	030h
  8687  07A7  3E30               	bcf	status, 5	;RP0=0, select bank0
  8688  07A8  1283               	bcf	status, 6	;RP1=0, select bank0
  8689  07A9  1303               	movwf	(??_SetTime+0)+0
  8690  07AA  00A9               	movf	(??_SetTime+0)+0,w
  8691  07AB  0829               	movwf	0+(SetTime@digits)+06h
  8692  07AC  00B5               	line	584
  8693                           	
  8694                           l3918:	
  8695  07AD                     ;main.c: 584:             break;
  8696                           	movlw	(low(SetTime@digits|((0x0)<<8))&0ffh)
  8697  07AD  302F               	movwf	(LCD_SendString@string)
  8698  07AE  00F1               	movlw	(0x0)
  8699  07AF  3000               	movwf	(LCD_SendString@string+1)
  8700  07B0  00F2               	fcall	_LCD_SendString
  8701  07B1  160A  118A  2365  120A  118A  	goto	l3826
  8702  07B6  2D18               	line	585
  8703                           ;main.c: 585:         case 5:
  8704                           	
  8705                           l221:	
  8706  07B7                     	goto	l3826
  8707  07B7  2D18               	
  8708                           l194:	
  8709  07B8                     	line	586
  8710                           	
  8711                           l222:	
  8712  07B8                     	return
  8713  07B8  0008               	opt stack 0
  8714                           GLOBAL	__end_of_SetTime
  8715                           	__end_of_SetTime:
  8716  07B9                     	signat	_SetTime,4217
  8717                           	global	_RealTimeClock_set_seconds
  8718                           
  8719 ;; *************** function _RealTimeClock_set_seconds *****************
  8720 ;; Defined at:
  8721 ;;		line 144 in file "realtimeclock.c"
  8722 ;; Parameters:    Size  Location     Type
  8723 ;;  seconds         2    0[BANK0 ] int 
  8724 ;; Auto vars:     Size  Location     Type
  8725 ;;		None
  8726 ;; Return value:  Size  Location     Type
  8727 ;;                  1    wreg      void 
  8728 ;; Registers used:
  8729 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8730 ;; Tracked objects:
  8731 ;;		On entry : 0/0
  8732 ;;		On exit  : 0/0
  8733 ;;		Unchanged: 0/0
  8734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8735 ;;      Params:         0       2       0       0       0
  8736 ;;      Locals:         0       0       0       0       0
  8737 ;;      Temps:          0       0       0       0       0
  8738 ;;      Totals:         0       2       0       0       0
  8739 ;;Total ram usage:        2 bytes
  8740 ;; Hardware stack levels used:    1
  8741 ;; Hardware stack levels required when called:    2
  8742 ;; This function calls:
  8743 ;;		_RealTimeClock_write_byte
  8744 ;;		___int_to_hex
  8745 ;; This function is called by:
  8746 ;;		_SetTime
  8747 ;; This function uses a non-reentrant model
  8748 ;;
  8749                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  8750                           	file	"realtimeclock.c"
  8751                           	line	144
  8752                           global __ptext19
  8753                           __ptext19:	;psect for function _RealTimeClock_set_seconds
  8754  1EF5                     psect	text19
  8755                           	file	"realtimeclock.c"
  8756                           	line	144
  8757                           	global	__size_of_RealTimeClock_set_seconds
  8758                           	__size_of_RealTimeClock_set_seconds	equ	__end_of_RealTimeClock_set_seconds-_RealTimeClo
                                 ck_set_seconds
  8759  001D                     	
  8760                           _RealTimeClock_set_seconds:	
  8761  1EF5                     ;incstack = 0
  8762                           	opt	stack 4
  8763                           ; Regs used in _RealTimeClock_set_seconds: [wreg+status,2+status,0+btemp+1+pclath+cstack
                                 ]
  8764                           	line	145
  8765                           	
  8766                           l3696:	
  8767  1EF5                     ;realtimeclock.c: 145:     RB5 = 1;
  8768                           	bcf	status, 5	;RP0=0, select bank0
  8769  1EF5  1283               	bcf	status, 6	;RP1=0, select bank0
  8770  1EF6  1303               	bsf	(53/8),(53)&7	;volatile
  8771  1EF7  1686               	line	146
  8772                           	
  8773                           l3698:	
  8774  1EF8                     ;realtimeclock.c: 146:     RealTimeClock_write_byte(0x80);
  8775                           	movlw	low(080h)
  8776  1EF8  3080               	fcall	_RealTimeClock_write_byte
  8777  1EF9  160A  118A  21ED  160A  158A  	line	147
  8778                           ;realtimeclock.c: 147:     RealTimeClock_write_byte(__int_to_hex(seconds));
  8779                           	bcf	status, 5	;RP0=0, select bank0
  8780  1EFE  1283               	bcf	status, 6	;RP1=0, select bank0
  8781  1EFF  1303               	movf	(RealTimeClock_set_seconds@seconds+1),w
  8782  1F00  0821               	movwf	(___int_to_hex@integer+1)
  8783  1F01  00F8               	movf	(RealTimeClock_set_seconds@seconds),w
  8784  1F02  0820               	movwf	(___int_to_hex@integer)
  8785  1F03  00F7               	fcall	___int_to_hex
  8786  1F04  160A  118A  2323  160A  158A  	fcall	_RealTimeClock_write_byte
  8787  1F09  160A  118A  21ED  160A  158A  	line	148
  8788                           	
  8789                           l3700:	
  8790  1F0E                     ;realtimeclock.c: 148:     RB5 = 0;
  8791                           	bcf	status, 5	;RP0=0, select bank0
  8792  1F0E  1283               	bcf	status, 6	;RP1=0, select bank0
  8793  1F0F  1303               	bcf	(53/8),(53)&7	;volatile
  8794  1F10  1286               	line	149
  8795                           	
  8796                           l374:	
  8797  1F11                     	return
  8798  1F11  0008               	opt stack 0
  8799                           GLOBAL	__end_of_RealTimeClock_set_seconds
  8800                           	__end_of_RealTimeClock_set_seconds:
  8801  1F12                     	signat	_RealTimeClock_set_seconds,4217
  8802                           	global	_RealTimeClock_set_minutes
  8803                           
  8804 ;; *************** function _RealTimeClock_set_minutes *****************
  8805 ;; Defined at:
  8806 ;;		line 151 in file "realtimeclock.c"
  8807 ;; Parameters:    Size  Location     Type
  8808 ;;  minutes         2    0[BANK0 ] int 
  8809 ;; Auto vars:     Size  Location     Type
  8810 ;;		None
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  1    wreg      void 
  8813 ;; Registers used:
  8814 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8820 ;;      Params:         0       2       0       0       0
  8821 ;;      Locals:         0       0       0       0       0
  8822 ;;      Temps:          0       0       0       0       0
  8823 ;;      Totals:         0       2       0       0       0
  8824 ;;Total ram usage:        2 bytes
  8825 ;; Hardware stack levels used:    1
  8826 ;; Hardware stack levels required when called:    2
  8827 ;; This function calls:
  8828 ;;		_RealTimeClock_write_byte
  8829 ;;		___int_to_hex
  8830 ;; This function is called by:
  8831 ;;		_SetTime
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  8835                           	line	151
  8836                           global __ptext20
  8837                           __ptext20:	;psect for function _RealTimeClock_set_minutes
  8838  1ED8                     psect	text20
  8839                           	file	"realtimeclock.c"
  8840                           	line	151
  8841                           	global	__size_of_RealTimeClock_set_minutes
  8842                           	__size_of_RealTimeClock_set_minutes	equ	__end_of_RealTimeClock_set_minutes-_RealTimeClo
                                 ck_set_minutes
  8843  001D                     	
  8844                           _RealTimeClock_set_minutes:	
  8845  1ED8                     ;incstack = 0
  8846                           	opt	stack 4
  8847                           ; Regs used in _RealTimeClock_set_minutes: [wreg+status,2+status,0+btemp+1+pclath+cstack
                                 ]
  8848                           	line	152
  8849                           	
  8850                           l3690:	
  8851  1ED8                     ;realtimeclock.c: 152:     RB5 = 1;
  8852                           	bcf	status, 5	;RP0=0, select bank0
  8853  1ED8  1283               	bcf	status, 6	;RP1=0, select bank0
  8854  1ED9  1303               	bsf	(53/8),(53)&7	;volatile
  8855  1EDA  1686               	line	153
  8856                           	
  8857                           l3692:	
  8858  1EDB                     ;realtimeclock.c: 153:     RealTimeClock_write_byte(0x82);
  8859                           	movlw	low(082h)
  8860  1EDB  3082               	fcall	_RealTimeClock_write_byte
  8861  1EDC  160A  118A  21ED  160A  158A  	line	154
  8862                           ;realtimeclock.c: 154:     RealTimeClock_write_byte(__int_to_hex(minutes));
  8863                           	bcf	status, 5	;RP0=0, select bank0
  8864  1EE1  1283               	bcf	status, 6	;RP1=0, select bank0
  8865  1EE2  1303               	movf	(RealTimeClock_set_minutes@minutes+1),w
  8866  1EE3  0821               	movwf	(___int_to_hex@integer+1)
  8867  1EE4  00F8               	movf	(RealTimeClock_set_minutes@minutes),w
  8868  1EE5  0820               	movwf	(___int_to_hex@integer)
  8869  1EE6  00F7               	fcall	___int_to_hex
  8870  1EE7  160A  118A  2323  160A  158A  	fcall	_RealTimeClock_write_byte
  8871  1EEC  160A  118A  21ED  160A  158A  	line	155
  8872                           	
  8873                           l3694:	
  8874  1EF1                     ;realtimeclock.c: 155:     RB5 = 0;
  8875                           	bcf	status, 5	;RP0=0, select bank0
  8876  1EF1  1283               	bcf	status, 6	;RP1=0, select bank0
  8877  1EF2  1303               	bcf	(53/8),(53)&7	;volatile
  8878  1EF3  1286               	line	156
  8879                           	
  8880                           l377:	
  8881  1EF4                     	return
  8882  1EF4  0008               	opt stack 0
  8883                           GLOBAL	__end_of_RealTimeClock_set_minutes
  8884                           	__end_of_RealTimeClock_set_minutes:
  8885  1EF5                     	signat	_RealTimeClock_set_minutes,4217
  8886                           	global	_RealTimeClock_set_hours
  8887                           
  8888 ;; *************** function _RealTimeClock_set_hours *****************
  8889 ;; Defined at:
  8890 ;;		line 158 in file "realtimeclock.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;  hours           2    0[BANK0 ] int 
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;		None
  8895 ;; Return value:  Size  Location     Type
  8896 ;;                  1    wreg      void 
  8897 ;; Registers used:
  8898 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8899 ;; Tracked objects:
  8900 ;;		On entry : 0/0
  8901 ;;		On exit  : 0/0
  8902 ;;		Unchanged: 0/0
  8903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8904 ;;      Params:         0       2       0       0       0
  8905 ;;      Locals:         0       0       0       0       0
  8906 ;;      Temps:          0       0       0       0       0
  8907 ;;      Totals:         0       2       0       0       0
  8908 ;;Total ram usage:        2 bytes
  8909 ;; Hardware stack levels used:    1
  8910 ;; Hardware stack levels required when called:    2
  8911 ;; This function calls:
  8912 ;;		_RealTimeClock_write_byte
  8913 ;;		___int_to_hex
  8914 ;; This function is called by:
  8915 ;;		_SetTime
  8916 ;; This function uses a non-reentrant model
  8917 ;;
  8918                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  8919                           	line	158
  8920                           global __ptext21
  8921                           __ptext21:	;psect for function _RealTimeClock_set_hours
  8922  1EBB                     psect	text21
  8923                           	file	"realtimeclock.c"
  8924                           	line	158
  8925                           	global	__size_of_RealTimeClock_set_hours
  8926                           	__size_of_RealTimeClock_set_hours	equ	__end_of_RealTimeClock_set_hours-_RealTimeClock_s
                                 et_hours
  8927  001D                     	
  8928                           _RealTimeClock_set_hours:	
  8929  1EBB                     ;incstack = 0
  8930                           	opt	stack 4
  8931                           ; Regs used in _RealTimeClock_set_hours: [wreg+status,2+status,0+btemp+1+pclath+cstack]

  8932                           	line	159
  8933                           	
  8934                           l3684:	
  8935  1EBB                     ;realtimeclock.c: 159:     RB5 = 1;
  8936                           	bcf	status, 5	;RP0=0, select bank0
  8937  1EBB  1283               	bcf	status, 6	;RP1=0, select bank0
  8938  1EBC  1303               	bsf	(53/8),(53)&7	;volatile
  8939  1EBD  1686               	line	160
  8940                           	
  8941                           l3686:	
  8942  1EBE                     ;realtimeclock.c: 160:     RealTimeClock_write_byte(0x84);
  8943                           	movlw	low(084h)
  8944  1EBE  3084               	fcall	_RealTimeClock_write_byte
  8945  1EBF  160A  118A  21ED  160A  158A  	line	161
  8946                           ;realtimeclock.c: 161:     RealTimeClock_write_byte(__int_to_hex(hours));
  8947                           	bcf	status, 5	;RP0=0, select bank0
  8948  1EC4  1283               	bcf	status, 6	;RP1=0, select bank0
  8949  1EC5  1303               	movf	(RealTimeClock_set_hours@hours+1),w
  8950  1EC6  0821               	movwf	(___int_to_hex@integer+1)
  8951  1EC7  00F8               	movf	(RealTimeClock_set_hours@hours),w
  8952  1EC8  0820               	movwf	(___int_to_hex@integer)
  8953  1EC9  00F7               	fcall	___int_to_hex
  8954  1ECA  160A  118A  2323  160A  158A  	fcall	_RealTimeClock_write_byte
  8955  1ECF  160A  118A  21ED  160A  158A  	line	162
  8956                           	
  8957                           l3688:	
  8958  1ED4                     ;realtimeclock.c: 162:     RB5 = 0;
  8959                           	bcf	status, 5	;RP0=0, select bank0
  8960  1ED4  1283               	bcf	status, 6	;RP1=0, select bank0
  8961  1ED5  1303               	bcf	(53/8),(53)&7	;volatile
  8962  1ED6  1286               	line	163
  8963                           	
  8964                           l380:	
  8965  1ED7                     	return
  8966  1ED7  0008               	opt stack 0
  8967                           GLOBAL	__end_of_RealTimeClock_set_hours
  8968                           	__end_of_RealTimeClock_set_hours:
  8969  1ED8                     	signat	_RealTimeClock_set_hours,4217
  8970                           	global	_RealTimeClock_get_seconds
  8971                           
  8972 ;; *************** function _RealTimeClock_get_seconds *****************
  8973 ;; Defined at:
  8974 ;;		line 88 in file "realtimeclock.c"
  8975 ;; Parameters:    Size  Location     Type
  8976 ;;		None
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;  c               1   11[COMMON] unsigned char 
  8979 ;; Return value:  Size  Location     Type
  8980 ;;                  2    5[BANK0 ] int 
  8981 ;; Registers used:
  8982 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8983 ;; Tracked objects:
  8984 ;;		On entry : 0/0
  8985 ;;		On exit  : 0/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8988 ;;      Params:         0       2       0       0       0
  8989 ;;      Locals:         1       0       0       0       0
  8990 ;;      Temps:          1       0       0       0       0
  8991 ;;      Totals:         2       2       0       0       0
  8992 ;;Total ram usage:        4 bytes
  8993 ;; Hardware stack levels used:    1
  8994 ;; Hardware stack levels required when called:    2
  8995 ;; This function calls:
  8996 ;;		_RealTimeClock_read_byte
  8997 ;;		_RealTimeClock_write_byte
  8998 ;;		___hex_to_int
  8999 ;; This function is called by:
  9000 ;;		_DisplayTime
  9001 ;;		_SetTime
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  9005                           	line	88
  9006                           global __ptext22
  9007                           __ptext22:	;psect for function _RealTimeClock_get_seconds
  9008  1FDE                     psect	text22
  9009                           	file	"realtimeclock.c"
  9010                           	line	88
  9011                           	global	__size_of_RealTimeClock_get_seconds
  9012                           	__size_of_RealTimeClock_get_seconds	equ	__end_of_RealTimeClock_get_seconds-_RealTimeClo
                                 ck_get_seconds
  9013  0022                     	
  9014                           _RealTimeClock_get_seconds:	
  9015  1FDE                     ;incstack = 0
  9016                           	opt	stack 1
  9017                           ; Regs used in _RealTimeClock_get_seconds: [wreg+status,2+status,0+btemp+1+pclath+cstack
                                 ]
  9018                           	line	89
  9019                           	
  9020                           l3098:	
  9021  1FDE                     ;realtimeclock.c: 89:     RB5 = 1;
  9022                           	bcf	status, 5	;RP0=0, select bank0
  9023  1FDE  1283               	bcf	status, 6	;RP1=0, select bank0
  9024  1FDF  1303               	bsf	(53/8),(53)&7	;volatile
  9025  1FE0  1686               	line	90
  9026                           	
  9027                           l3100:	
  9028  1FE1                     ;realtimeclock.c: 90:     RealTimeClock_write_byte(0x81);
  9029                           	movlw	low(081h)
  9030  1FE1  3081               	fcall	_RealTimeClock_write_byte
  9031  1FE2  160A  118A  21ED  160A  158A  	line	91
  9032                           ;realtimeclock.c: 91:     unsigned char c = RealTimeClock_read_byte();
  9033                           	fcall	_RealTimeClock_read_byte
  9034  1FE7  160A  118A  2431  160A  158A  	movwf	(??_RealTimeClock_get_seconds+0)+0
  9035  1FEC  00FA               	movf	(??_RealTimeClock_get_seconds+0)+0,w
  9036  1FED  087A               	movwf	(RealTimeClock_get_seconds@c)
  9037  1FEE  00FB               	line	92
  9038                           	
  9039                           l3102:	
  9040  1FEF                     ;realtimeclock.c: 92:     RB5 = 0;
  9041                           	bcf	status, 5	;RP0=0, select bank0
  9042  1FEF  1283               	bcf	status, 6	;RP1=0, select bank0
  9043  1FF0  1303               	bcf	(53/8),(53)&7	;volatile
  9044  1FF1  1286               	line	93
  9045                           	
  9046                           l3104:	
  9047  1FF2                     ;realtimeclock.c: 93:     return __hex_to_int(c);
  9048                           	movf	(RealTimeClock_get_seconds@c),w
  9049  1FF2  087B               	fcall	___hex_to_int
  9050  1FF3  160A  118A  24C3  160A  158A  	movf	(1+(?___hex_to_int)),w
  9051  1FF8  0878               	bcf	status, 5	;RP0=0, select bank0
  9052  1FF9  1283               	bcf	status, 6	;RP1=0, select bank0
  9053  1FFA  1303               	movwf	(?_RealTimeClock_get_seconds+1)
  9054  1FFB  00A6               	movf	(0+(?___hex_to_int)),w
  9055  1FFC  0877               	movwf	(?_RealTimeClock_get_seconds)
  9056  1FFD  00A5               	goto	l353
  9057  1FFE  2FFF               	
  9058                           l3106:	
  9059  1FFF                     	line	94
  9060                           	
  9061                           l353:	
  9062  1FFF                     	return
  9063  1FFF  0008               	opt stack 0
  9064                           GLOBAL	__end_of_RealTimeClock_get_seconds
  9065                           	__end_of_RealTimeClock_get_seconds:
  9066  2000                     	signat	_RealTimeClock_get_seconds,90
  9067                           	global	_SetDate
  9068                           
  9069 ;; *************** function _SetDate *****************
  9070 ;; Defined at:
  9071 ;;		line 619 in file "main.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;  Key             2    7[BANK0 ] int 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;  dayInt          2   22[BANK0 ] int 
  9076 ;;  i               2   20[BANK0 ] int 
  9077 ;;  Sunday          1   19[BANK0 ] PTR unsigned char 
  9078 ;;		 -> STR_31(4), 
  9079 ;;  Saturday        1   18[BANK0 ] PTR unsigned char 
  9080 ;;		 -> STR_30(4), 
  9081 ;;  Friday          1   17[BANK0 ] PTR unsigned char 
  9082 ;;		 -> STR_29(4), 
  9083 ;;  Thursday        1   16[BANK0 ] PTR unsigned char 
  9084 ;;		 -> STR_28(4), 
  9085 ;;  Wednesday       1   15[BANK0 ] PTR unsigned char 
  9086 ;;		 -> STR_27(4), 
  9087 ;;  Tuesday         1   14[BANK0 ] PTR unsigned char 
  9088 ;;		 -> STR_26(4), 
  9089 ;;  Monday          1   13[BANK0 ] PTR unsigned char 
  9090 ;;		 -> STR_25(4), 
  9091 ;;  DateSet         1   12[BANK0 ] PTR unsigned char 
  9092 ;;		 -> STR_24(13), 
  9093 ;;  Date            1   11[BANK0 ] PTR unsigned char 
  9094 ;;		 -> STR_23(6), 
  9095 ;;  Day             1   10[BANK0 ] PTR unsigned char 
  9096 ;;		 -> STR_22(5), 
  9097 ;; Return value:  Size  Location     Type
  9098 ;;                  1    wreg      void 
  9099 ;; Registers used:
  9100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9101 ;; Tracked objects:
  9102 ;;		On entry : 0/0
  9103 ;;		On exit  : 0/0
  9104 ;;		Unchanged: 0/0
  9105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9106 ;;      Params:         0       2       0       0       0
  9107 ;;      Locals:         0      14       0       0       0
  9108 ;;      Temps:          0       1       0       0       0
  9109 ;;      Totals:         0      17       0       0       0
  9110 ;;Total ram usage:       17 bytes
  9111 ;; Hardware stack levels used:    1
  9112 ;; Hardware stack levels required when called:    3
  9113 ;; This function calls:
  9114 ;;		_CheckDay
  9115 ;;		_Keypad_Scan
  9116 ;;		_LCD_Command
  9117 ;;		_LCD_SecondLine
  9118 ;;		_LCD_SendString
  9119 ;;		_Main_Delay
  9120 ;;		_RealTimeClock_get_day_of_week
  9121 ;;		_RealTimeClock_set_day_of_week
  9122 ;; This function is called by:
  9123 ;;		_main
  9124 ;; This function uses a non-reentrant model
  9125 ;;
  9126                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  9127                           	file	"main.c"
  9128                           	line	619
  9129                           global __ptext23
  9130                           __ptext23:	;psect for function _SetDate
  9131  0CE1                     psect	text23
  9132                           	file	"main.c"
  9133                           	line	619
  9134                           	global	__size_of_SetDate
  9135                           	__size_of_SetDate	equ	__end_of_SetDate-_SetDate
  9136  018F                     	
  9137                           _SetDate:	
  9138  0CE1                     ;incstack = 0
  9139                           	opt	stack 4
  9140                           ; Regs used in _SetDate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9141                           	line	622
  9142                           	
  9143                           l3924:	
  9144  0CE1                     ;main.c: 619:         if(Key == 13);main.c: 620:         {;main.c: 622:             LCD_
                                 Command(0x03);
  9145                           	movlw	low(01h)
  9146  0CE1  3001               	fcall	_LCD_Command
  9147  0CE2  160A  158A  2633  120A  158A  	line	623
  9148                           	
  9149                           l3926:	
  9150  0CE7                     ;main.c: 623: 
  9151                           	bcf	status, 5	;RP0=0, select bank0
  9152  0CE7  1283               	bcf	status, 6	;RP1=0, select bank0
  9153  0CE8  1303               	clrf	(SetDate@i)
  9154  0CE9  01B4               	clrf	(SetDate@i+1)
  9155  0CEA  01B5               	line	624
  9156                           	
  9157                           l3928:	
  9158  0CEB                     ;main.c: 624:             CheckDay();
  9159                           	movlw	(low((((STR_22)-__stringbase)|8000h)))&0ffh
  9160  0CEB  30B4               	movwf	(??_SetDate+0)+0
  9161  0CEC  00A9               	movf	(??_SetDate+0)+0,w
  9162  0CED  0829               	movwf	(SetDate@Day)
  9163  0CEE  00AA               	line	625
  9164                           	
  9165                           l3930:	
  9166  0CEF                     ;main.c: 625: 
  9167                           	movlw	(low((((STR_23)-__stringbase)|8000h)))&0ffh
  9168  0CEF  30A8               	movwf	(??_SetDate+0)+0
  9169  0CF0  00A9               	movf	(??_SetDate+0)+0,w
  9170  0CF1  0829               	movwf	(SetDate@Date)
  9171  0CF2  00AB               	line	626
  9172                           	
  9173                           l3932:	
  9174  0CF3                     ;main.c: 626:             day_of_week = dayInt;
  9175                           	movlw	(low((((STR_24)-__stringbase)|8000h)))&0ffh
  9176  0CF3  3011               	movwf	(??_SetDate+0)+0
  9177  0CF4  00A9               	movf	(??_SetDate+0)+0,w
  9178  0CF5  0829               	movwf	(SetDate@DateSet)
  9179  0CF6  00AC               	line	627
  9180                           	
  9181                           l3934:	
  9182  0CF7                     ;main.c: 627: 
  9183                           	movlw	(low((((STR_25)-__stringbase)|8000h)))&0ffh
  9184  0CF7  30C5               	movwf	(??_SetDate+0)+0
  9185  0CF8  00A9               	movf	(??_SetDate+0)+0,w
  9186  0CF9  0829               	movwf	(SetDate@Monday)
  9187  0CFA  00AD               	line	628
  9188                           	
  9189                           l3936:	
  9190  0CFB                     ;main.c: 628:             RealTimeClock_set_day_of_week(dayInt);
  9191                           	movlw	(low((((STR_26)-__stringbase)|8000h)))&0ffh
  9192  0CFB  30BD               	movwf	(??_SetDate+0)+0
  9193  0CFC  00A9               	movf	(??_SetDate+0)+0,w
  9194  0CFD  0829               	movwf	(SetDate@Tuesday)
  9195  0CFE  00AE               	line	629
  9196                           	
  9197                           l3938:	
  9198  0CFF                     ;main.c: 629: 
  9199                           	movlw	(low((((STR_27)-__stringbase)|8000h)))&0ffh
  9200  0CFF  30B9               	movwf	(??_SetDate+0)+0
  9201  0D00  00A9               	movf	(??_SetDate+0)+0,w
  9202  0D01  0829               	movwf	(SetDate@Wednesday)
  9203  0D02  00AF               	line	630
  9204                           	
  9205                           l3940:	
  9206  0D03                     ;main.c: 630:             LCD_SendString(DateSet);
  9207                           	movlw	(low((((STR_28)-__stringbase)|8000h)))&0ffh
  9208  0D03  30D1               	movwf	(??_SetDate+0)+0
  9209  0D04  00A9               	movf	(??_SetDate+0)+0,w
  9210  0D05  0829               	movwf	(SetDate@Thursday)
  9211  0D06  00B0               	line	631
  9212                           	
  9213                           l3942:	
  9214  0D07                     ;main.c: 631:             Main_Delay(200);
  9215                           	movlw	(low((((STR_29)-__stringbase)|8000h)))&0ffh
  9216  0D07  30C1               	movwf	(??_SetDate+0)+0
  9217  0D08  00A9               	movf	(??_SetDate+0)+0,w
  9218  0D09  0829               	movwf	(SetDate@Friday)
  9219  0D0A  00B1               	line	632
  9220                           	
  9221                           l3944:	
  9222  0D0B                     ;main.c: 632:             LCD_Command(0x01);
  9223                           	movlw	(low((((STR_30)-__stringbase)|8000h)))&0ffh
  9224  0D0B  30CD               	movwf	(??_SetDate+0)+0
  9225  0D0C  00A9               	movf	(??_SetDate+0)+0,w
  9226  0D0D  0829               	movwf	(SetDate@Saturday)
  9227  0D0E  00B2               	line	633
  9228                           	
  9229                           l3946:	
  9230  0D0F                     ;main.c: 633:             break;
  9231                           	movlw	(low((((STR_31)-__stringbase)|8000h)))&0ffh
  9232  0D0F  30C9               	movwf	(??_SetDate+0)+0
  9233  0D10  00A9               	movf	(??_SetDate+0)+0,w
  9234  0D11  0829               	movwf	(SetDate@Sunday)
  9235  0D12  00B3               	line	635
  9236                           	
  9237                           l3948:	
  9238  0D13                     ;main.c: 634:         };main.c: 635:         switch(Key)
  9239                           	fcall	_RealTimeClock_get_day_of_week
  9240  0D13  160A  158A  27BC  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  9241  0D18  1283               	bcf	status, 6	;RP1=0, select bank0
  9242  0D19  1303               	movf	(1+(?_RealTimeClock_get_day_of_week)),w
  9243  0D1A  0826               	movwf	(SetDate@dayInt+1)
  9244  0D1B  00B7               	movf	(0+(?_RealTimeClock_get_day_of_week)),w
  9245  0D1C  0825               	movwf	(SetDate@dayInt)
  9246  0D1D  00B6               	goto	l3950
  9247  0D1E  2D1F               	line	636
  9248                           ;main.c: 636:         {
  9249                           	
  9250                           l237:	
  9251  0D1F                     	line	638
  9252                           	
  9253                           l3950:	
  9254  0D1F                     ;main.c: 637:             case 14:;main.c: 638:                 break;
  9255                           	movlw	low(03h)
  9256  0D1F  3003               	fcall	_LCD_Command
  9257  0D20  160A  158A  2633  120A  158A  	line	639
  9258                           	
  9259                           l3952:	
  9260  0D25                     ;main.c: 639:             case 15:
  9261                           	bcf	status, 5	;RP0=0, select bank0
  9262  0D25  1283               	bcf	status, 6	;RP1=0, select bank0
  9263  0D26  1303               		movf	(SetDate@Date),w
  9264  0D27  082B               	movwf	(LCD_SendString@string)
  9265  0D28  00F1               	movlw	0
  9266  0D29  3000               	btfss	status,2
  9267  0D2A  1D03               	movlw	080h
  9268  0D2B  3080               	movwf	(LCD_SendString@string+1)
  9269  0D2C  00F2               
  9270                           	fcall	_LCD_SendString
  9271  0D2D  160A  118A  2365  120A  158A  	line	640
  9272                           	
  9273                           l3954:	
  9274  0D32                     ;main.c: 640:                 if(i == 0)
  9275                           	fcall	_Keypad_Scan
  9276  0D32  120A  118A  20E5  120A  158A  	movf	(1+(?_Keypad_Scan)),w
  9277  0D37  0877               	bcf	status, 5	;RP0=0, select bank0
  9278  0D38  1283               	bcf	status, 6	;RP1=0, select bank0
  9279  0D39  1303               	movwf	(SetDate@Key+1)
  9280  0D3A  00A8               	movf	(0+(?_Keypad_Scan)),w
  9281  0D3B  0876               	movwf	(SetDate@Key)
  9282  0D3C  00A7               	line	641
  9283                           	
  9284                           l3956:	
  9285  0D3D                     ;main.c: 641:                 {
  9286                           		movlw	13
  9287  0D3D  300D               	xorwf	((SetDate@Key)),w
  9288  0D3E  0627               iorwf	((SetDate@Key+1)),w
  9289  0D3F  0428               	btfss	status,2
  9290  0D40  1D03               	goto	u3171
  9291  0D41  2D43               	goto	u3170
  9292  0D42  2D44               u3171:
  9293  0D43                     	goto	l3990
  9294  0D43  2DC7               u3170:
  9295  0D44                     	line	643
  9296                           	
  9297                           l3958:	
  9298  0D44                     ;main.c: 642:                     if(dayInt == 1);main.c: 643:                         d
                                 ayInt = 7;
  9299                           	movlw	low(01h)
  9300  0D44  3001               	fcall	_LCD_Command
  9301  0D45  160A  158A  2633  120A  158A  	line	644
  9302                           ;main.c: 644:                     else
  9303                           	movlw	low(03h)
  9304  0D4A  3003               	fcall	_LCD_Command
  9305  0D4B  160A  158A  2633  120A  158A  	line	646
  9306                           	
  9307                           l3960:	
  9308  0D50                     ;main.c: 646:                 }
  9309                           	fcall	_CheckDay
  9310  0D50  160A  118A  22A1  120A  158A  	line	648
  9311                           	
  9312                           l3962:	
  9313  0D55                     ;main.c: 648:             case 16:
  9314                           	bcf	status, 5	;RP0=0, select bank0
  9315  0D55  1283               	bcf	status, 6	;RP1=0, select bank0
  9316  0D56  1303               	movf	(SetDate@dayInt+1),w
  9317  0D57  0837               	bsf	status, 5	;RP0=1, select bank1
  9318  0D58  1683               	bcf	status, 6	;RP1=0, select bank1
  9319  0D59  1303               	movwf	(_day_of_week+1)^080h
  9320  0D5A  00ED               	bcf	status, 5	;RP0=0, select bank0
  9321  0D5B  1283               	bcf	status, 6	;RP1=0, select bank0
  9322  0D5C  1303               	movf	(SetDate@dayInt),w
  9323  0D5D  0836               	bsf	status, 5	;RP0=1, select bank1
  9324  0D5E  1683               	bcf	status, 6	;RP1=0, select bank1
  9325  0D5F  1303               	movwf	(_day_of_week)^080h
  9326  0D60  00EC               	line	650
  9327                           	
  9328                           l3964:	
  9329  0D61                     ;main.c: 650:                 {
  9330                           	bcf	status, 5	;RP0=0, select bank0
  9331  0D61  1283               	bcf	status, 6	;RP1=0, select bank0
  9332  0D62  1303               	movf	(SetDate@dayInt+1),w
  9333  0D63  0837               	movwf	(RealTimeClock_set_day_of_week@day+1)
  9334  0D64  00A1               	movf	(SetDate@dayInt),w
  9335  0D65  0836               	movwf	(RealTimeClock_set_day_of_week@day)
  9336  0D66  00A0               	fcall	_RealTimeClock_set_day_of_week
  9337  0D67  160A  158A  269E  120A  158A  	line	652
  9338                           	
  9339                           l3966:	
  9340  0D6C                     ;main.c: 652:                         dayInt = 1;
  9341                           	bcf	status, 5	;RP0=0, select bank0
  9342  0D6C  1283               	bcf	status, 6	;RP1=0, select bank0
  9343  0D6D  1303               		movf	(SetDate@DateSet),w
  9344  0D6E  082C               	movwf	(LCD_SendString@string)
  9345  0D6F  00F1               	movlw	0
  9346  0D70  3000               	btfss	status,2
  9347  0D71  1D03               	movlw	080h
  9348  0D72  3080               	movwf	(LCD_SendString@string+1)
  9349  0D73  00F2               
  9350                           	fcall	_LCD_SendString
  9351  0D74  160A  118A  2365  120A  158A  	line	653
  9352                           	
  9353                           l3968:	
  9354  0D79                     ;main.c: 653:                     else
  9355                           	movlw	0C8h
  9356  0D79  30C8               	movwf	(Main_Delay@k)
  9357  0D7A  00F0               	movlw	0
  9358  0D7B  3000               	movwf	((Main_Delay@k))+1
  9359  0D7C  00F1               	fcall	_Main_Delay
  9360  0D7D  160A  118A  2263  120A  158A  	line	654
  9361                           	
  9362                           l3970:	
  9363  0D82                     ;main.c: 654:                         dayInt = dayInt + 1;
  9364                           	movlw	low(01h)
  9365  0D82  3001               	fcall	_LCD_Command
  9366  0D83  160A  158A  2633  120A  158A  	line	655
  9367                           ;main.c: 655:                 }
  9368                           	goto	l261
  9369  0D88  2E6F               	line	656
  9370                           ;main.c: 656:                 break;
  9371                           	
  9372                           l238:	
  9373  0D89                     	line	657
  9374                           ;main.c: 657:         }
  9375                           	goto	l3990
  9376  0D89  2DC7               	line	659
  9377                           ;main.c: 658:         LCD_SecondLine();;main.c: 659:         LCD_SendString(Day);
  9378                           	
  9379                           l241:	
  9380  0D8A                     	line	660
  9381                           ;main.c: 660:         switch(dayInt)
  9382                           	goto	l3992
  9383  0D8A  2DD9               	line	661
  9384                           ;main.c: 661:         {
  9385                           	
  9386                           l243:	
  9387  0D8B                     	line	662
  9388                           	
  9389                           l3972:	
  9390  0D8B                     ;main.c: 662:             case 1:
  9391                           	bcf	status, 5	;RP0=0, select bank0
  9392  0D8B  1283               	bcf	status, 6	;RP1=0, select bank0
  9393  0D8C  1303               	movf	((SetDate@i)),w
  9394  0D8D  0834               iorwf	((SetDate@i+1)),w
  9395  0D8E  0435               	btfss	status,2
  9396  0D8F  1D03               	goto	u3181
  9397  0D90  2D92               	goto	u3180
  9398  0D91  2D93               u3181:
  9399  0D92                     	goto	l3992
  9400  0D92  2DD9               u3180:
  9401  0D93                     	line	664
  9402                           	
  9403                           l3974:	
  9404  0D93                     ;main.c: 663:                 LCD_SendString(Monday);;main.c: 664:                 break
                                 ;
  9405                           		decf	((SetDate@dayInt)),w
  9406  0D93  0336               iorwf	((SetDate@dayInt+1)),w
  9407  0D94  0437               	btfss	status,2
  9408  0D95  1D03               	goto	u3191
  9409  0D96  2D98               	goto	u3190
  9410  0D97  2D99               u3191:
  9411  0D98                     	goto	l3978
  9412  0D98  2D9E               u3190:
  9413  0D99                     	line	665
  9414                           	
  9415                           l3976:	
  9416  0D99                     ;main.c: 665:             case 2:
  9417                           	movlw	07h
  9418  0D99  3007               	movwf	(SetDate@dayInt)
  9419  0D9A  00B6               	movlw	0
  9420  0D9B  3000               	movwf	((SetDate@dayInt))+1
  9421  0D9C  00B7               	goto	l3992
  9422  0D9D  2DD9               	line	666
  9423                           ;main.c: 666:                 LCD_SendString(Tuesday);
  9424                           	
  9425                           l245:	
  9426  0D9E                     	line	667
  9427                           	
  9428                           l3978:	
  9429  0D9E                     ;main.c: 667:                 break;
  9430                           	movf	(SetDate@dayInt),w
  9431  0D9E  0836               	addlw	low(-1)
  9432  0D9F  3EFF               	movwf	(SetDate@dayInt)
  9433  0DA0  00B6               	movf	(SetDate@dayInt+1),w
  9434  0DA1  0837               	skipnc
  9435  0DA2  1803               	addlw	1
  9436  0DA3  3E01               	addlw	high(-1)
  9437  0DA4  3EFF               	movwf	1+(SetDate@dayInt)
  9438  0DA5  00B7               	goto	l3992
  9439  0DA6  2DD9               	
  9440                           l246:	
  9441  0DA7                     	goto	l3992
  9442  0DA7  2DD9               	line	668
  9443                           ;main.c: 668:             case 3:
  9444                           	
  9445                           l244:	
  9446  0DA8                     	line	669
  9447                           ;main.c: 669:                 LCD_SendString(Wednesday);
  9448                           	goto	l3992
  9449  0DA8  2DD9               	line	670
  9450                           ;main.c: 670:                 break;
  9451                           	
  9452                           l247:	
  9453  0DA9                     	line	671
  9454                           	
  9455                           l3980:	
  9456  0DA9                     ;main.c: 671:             case 4:
  9457                           	movf	((SetDate@i)),w
  9458  0DA9  0834               iorwf	((SetDate@i+1)),w
  9459  0DAA  0435               	btfss	status,2
  9460  0DAB  1D03               	goto	u3201
  9461  0DAC  2DAE               	goto	u3200
  9462  0DAD  2DAF               u3201:
  9463  0DAE                     	goto	l3992
  9464  0DAE  2DD9               u3200:
  9465  0DAF                     	line	673
  9466                           	
  9467                           l3982:	
  9468  0DAF                     ;main.c: 672:                 LCD_SendString(Thursday);;main.c: 673:                 bre
                                 ak;
  9469                           		movlw	7
  9470  0DAF  3007               	xorwf	((SetDate@dayInt)),w
  9471  0DB0  0636               iorwf	((SetDate@dayInt+1)),w
  9472  0DB1  0437               	btfss	status,2
  9473  0DB2  1D03               	goto	u3211
  9474  0DB3  2DB5               	goto	u3210
  9475  0DB4  2DB6               u3211:
  9476  0DB5                     	goto	l3986
  9477  0DB5  2DBB               u3210:
  9478  0DB6                     	line	674
  9479                           	
  9480                           l3984:	
  9481  0DB6                     ;main.c: 674:             case 5:
  9482                           	movlw	01h
  9483  0DB6  3001               	movwf	(SetDate@dayInt)
  9484  0DB7  00B6               	movlw	0
  9485  0DB8  3000               	movwf	((SetDate@dayInt))+1
  9486  0DB9  00B7               	goto	l3992
  9487  0DBA  2DD9               	line	675
  9488                           ;main.c: 675:                 LCD_SendString(Friday);
  9489                           	
  9490                           l249:	
  9491  0DBB                     	line	676
  9492                           	
  9493                           l3986:	
  9494  0DBB                     ;main.c: 676:                 break;
  9495                           	movf	(SetDate@dayInt),w
  9496  0DBB  0836               	addlw	low(01h)
  9497  0DBC  3E01               	movwf	(SetDate@dayInt)
  9498  0DBD  00B6               	movf	(SetDate@dayInt+1),w
  9499  0DBE  0837               	skipnc
  9500  0DBF  1803               	addlw	1
  9501  0DC0  3E01               	addlw	high(01h)
  9502  0DC1  3E00               	movwf	1+(SetDate@dayInt)
  9503  0DC2  00B7               	goto	l3992
  9504  0DC3  2DD9               	
  9505                           l250:	
  9506  0DC4                     	goto	l3992
  9507  0DC4  2DD9               	line	677
  9508                           ;main.c: 677:             case 6:
  9509                           	
  9510                           l248:	
  9511  0DC5                     	line	678
  9512                           ;main.c: 678:                 LCD_SendString(Saturday);
  9513                           	goto	l3992
  9514  0DC5  2DD9               	line	679
  9515                           	
  9516                           l3988:	
  9517  0DC6                     ;main.c: 679:                 break;
  9518                           	goto	l3992
  9519  0DC6  2DD9               	
  9520                           l240:	
  9521  0DC7                     	
  9522                           l3990:	
  9523  0DC7                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9524                           ; Switch size 1, requested type "space"
  9525                           ; Number of cases is 1, Range of values is 0 to 0
  9526                           ; switch strategies available:
  9527                           ; Name         Instructions Cycles
  9528                           ; simple_byte            4     3 (average)
  9529                           ; direct_byte           11     8 (fixed)
  9530                           ; jumptable            260     6 (fixed)
  9531                           ;	Chosen strategy is simple_byte
  9532                           
  9533                           	bcf	status, 5	;RP0=0, select bank0
  9534  0DC7  1283               	bcf	status, 6	;RP1=0, select bank0
  9535  0DC8  1303               	movf (SetDate@Key+1),w
  9536  0DC9  0828               	opt asmopt_push
  9537                           	opt asmopt_off
  9538                           	xorlw	0^0	; case 0
  9539  0DCA  3A00               	skipnz
  9540  0DCB  1903               	goto	l4372
  9541  0DCC  2DCE               	goto	l3992
  9542  0DCD  2DD9               	opt asmopt_pop
  9543                           	
  9544                           l4372:	
  9545  0DCE                     ; Switch size 1, requested type "space"
  9546                           ; Number of cases is 3, Range of values is 14 to 16
  9547                           ; switch strategies available:
  9548                           ; Name         Instructions Cycles
  9549                           ; simple_byte           10     6 (average)
  9550                           ; direct_byte           20    11 (fixed)
  9551                           ; jumptable            263     9 (fixed)
  9552                           ;	Chosen strategy is simple_byte
  9553                           
  9554                           	movf (SetDate@Key),w
  9555  0DCE  0827               	opt asmopt_push
  9556                           	opt asmopt_off
  9557                           	xorlw	14^0	; case 14
  9558  0DCF  3A0E               	skipnz
  9559  0DD0  1903               	goto	l3992
  9560  0DD1  2DD9               	xorlw	15^14	; case 15
  9561  0DD2  3A01               	skipnz
  9562  0DD3  1903               	goto	l3972
  9563  0DD4  2D8B               	xorlw	16^15	; case 16
  9564  0DD5  3A1F               	skipnz
  9565  0DD6  1903               	goto	l3980
  9566  0DD7  2DA9               	goto	l3992
  9567  0DD8  2DD9               	opt asmopt_pop
  9568                           
  9569                           	
  9570                           l242:	
  9571  0DD9                     	line	680
  9572                           	
  9573                           l3992:	
  9574  0DD9                     ;main.c: 680:             case 7:
  9575                           	fcall	_LCD_SecondLine
  9576  0DD9  160A  158A  2616  120A  158A  	line	681
  9577                           	
  9578                           l3994:	
  9579  0DDE                     ;main.c: 681:                 LCD_SendString(Sunday);
  9580                           	bcf	status, 5	;RP0=0, select bank0
  9581  0DDE  1283               	bcf	status, 6	;RP1=0, select bank0
  9582  0DDF  1303               		movf	(SetDate@Day),w
  9583  0DE0  082A               	movwf	(LCD_SendString@string)
  9584  0DE1  00F1               	movlw	0
  9585  0DE2  3000               	btfss	status,2
  9586  0DE3  1D03               	movlw	080h
  9587  0DE4  3080               	movwf	(LCD_SendString@string+1)
  9588  0DE5  00F2               
  9589                           	fcall	_LCD_SendString
  9590  0DE6  160A  118A  2365  120A  158A  	line	682
  9591                           ;main.c: 682:                 break;
  9592                           	goto	l4012
  9593  0DEB  2E4F               	line	684
  9594                           ;main.c: 683:         };main.c: 684:     }
  9595                           	
  9596                           l252:	
  9597  0DEC                     	line	685
  9598                           	
  9599                           l3996:	
  9600  0DEC                     ;main.c: 685: }
  9601                           	bcf	status, 5	;RP0=0, select bank0
  9602  0DEC  1283               	bcf	status, 6	;RP1=0, select bank0
  9603  0DED  1303               		movf	(SetDate@Monday),w
  9604  0DEE  082D               	movwf	(LCD_SendString@string)
  9605  0DEF  00F1               	movlw	0
  9606  0DF0  3000               	btfss	status,2
  9607  0DF1  1D03               	movlw	080h
  9608  0DF2  3080               	movwf	(LCD_SendString@string+1)
  9609  0DF3  00F2               
  9610                           	fcall	_LCD_SendString
  9611  0DF4  160A  118A  2365  120A  158A  	line	686
  9612                           ;main.c: 686: 
  9613                           	goto	l3950
  9614  0DF9  2D1F               	line	687
  9615                           ;main.c: 687: 
  9616                           	
  9617                           l254:	
  9618  0DFA                     	line	688
  9619                           	
  9620                           l3998:	
  9621  0DFA                     ;main.c: 688: void CheckTime(void)
  9622                           	bcf	status, 5	;RP0=0, select bank0
  9623  0DFA  1283               	bcf	status, 6	;RP1=0, select bank0
  9624  0DFB  1303               		movf	(SetDate@Tuesday),w
  9625  0DFC  082E               	movwf	(LCD_SendString@string)
  9626  0DFD  00F1               	movlw	0
  9627  0DFE  3000               	btfss	status,2
  9628  0DFF  1D03               	movlw	080h
  9629  0E00  3080               	movwf	(LCD_SendString@string+1)
  9630  0E01  00F2               
  9631                           	fcall	_LCD_SendString
  9632  0E02  160A  118A  2365  120A  158A  	line	689
  9633                           ;main.c: 689: {
  9634                           	goto	l3950
  9635  0E07  2D1F               	line	690
  9636                           ;main.c: 690: 
  9637                           	
  9638                           l255:	
  9639  0E08                     	line	691
  9640                           	
  9641                           l4000:	
  9642  0E08                     ;main.c: 691: 
  9643                           	bcf	status, 5	;RP0=0, select bank0
  9644  0E08  1283               	bcf	status, 6	;RP1=0, select bank0
  9645  0E09  1303               		movf	(SetDate@Wednesday),w
  9646  0E0A  082F               	movwf	(LCD_SendString@string)
  9647  0E0B  00F1               	movlw	0
  9648  0E0C  3000               	btfss	status,2
  9649  0E0D  1D03               	movlw	080h
  9650  0E0E  3080               	movwf	(LCD_SendString@string+1)
  9651  0E0F  00F2               
  9652                           	fcall	_LCD_SendString
  9653  0E10  160A  118A  2365  120A  158A  	line	692
  9654                           ;main.c: 692:     if (isWeekDay == 1)
  9655                           	goto	l3950
  9656  0E15  2D1F               	line	693
  9657                           ;main.c: 693:     {
  9658                           	
  9659                           l256:	
  9660  0E16                     	line	694
  9661                           	
  9662                           l4002:	
  9663  0E16                     ;main.c: 694:         timeMins = RealTimeClock_get_minutes();
  9664                           	bcf	status, 5	;RP0=0, select bank0
  9665  0E16  1283               	bcf	status, 6	;RP1=0, select bank0
  9666  0E17  1303               		movf	(SetDate@Thursday),w
  9667  0E18  0830               	movwf	(LCD_SendString@string)
  9668  0E19  00F1               	movlw	0
  9669  0E1A  3000               	btfss	status,2
  9670  0E1B  1D03               	movlw	080h
  9671  0E1C  3080               	movwf	(LCD_SendString@string+1)
  9672  0E1D  00F2               
  9673                           	fcall	_LCD_SendString
  9674  0E1E  160A  118A  2365  120A  158A  	line	695
  9675                           ;main.c: 695:         timeHours = RealTimeClock_get_hours();
  9676                           	goto	l3950
  9677  0E23  2D1F               	line	696
  9678                           ;main.c: 696:         if (timeHours < weekDayStart[0])
  9679                           	
  9680                           l257:	
  9681  0E24                     	line	697
  9682                           	
  9683                           l4004:	
  9684  0E24                     ;main.c: 697:         {
  9685                           	bcf	status, 5	;RP0=0, select bank0
  9686  0E24  1283               	bcf	status, 6	;RP1=0, select bank0
  9687  0E25  1303               		movf	(SetDate@Friday),w
  9688  0E26  0831               	movwf	(LCD_SendString@string)
  9689  0E27  00F1               	movlw	0
  9690  0E28  3000               	btfss	status,2
  9691  0E29  1D03               	movlw	080h
  9692  0E2A  3080               	movwf	(LCD_SendString@string+1)
  9693  0E2B  00F2               
  9694                           	fcall	_LCD_SendString
  9695  0E2C  160A  118A  2365  120A  158A  	line	698
  9696                           ;main.c: 698:             if(timeMins < weekDayStart[1])
  9697                           	goto	l3950
  9698  0E31  2D1F               	line	699
  9699                           ;main.c: 699:                 IsHeatingOn = 0;
  9700                           	
  9701                           l258:	
  9702  0E32                     	line	700
  9703                           	
  9704                           l4006:	
  9705  0E32                     ;main.c: 700:             else
  9706                           	bcf	status, 5	;RP0=0, select bank0
  9707  0E32  1283               	bcf	status, 6	;RP1=0, select bank0
  9708  0E33  1303               		movf	(SetDate@Saturday),w
  9709  0E34  0832               	movwf	(LCD_SendString@string)
  9710  0E35  00F1               	movlw	0
  9711  0E36  3000               	btfss	status,2
  9712  0E37  1D03               	movlw	080h
  9713  0E38  3080               	movwf	(LCD_SendString@string+1)
  9714  0E39  00F2               
  9715                           	fcall	_LCD_SendString
  9716  0E3A  160A  118A  2365  120A  158A  	line	701
  9717                           ;main.c: 701:                 IsHeatingOn = 1;
  9718                           	goto	l3950
  9719  0E3F  2D1F               	line	702
  9720                           ;main.c: 702:         }
  9721                           	
  9722                           l259:	
  9723  0E40                     	line	703
  9724                           	
  9725                           l4008:	
  9726  0E40                     ;main.c: 703:         else if(timeHours > weekDayEnd[0])
  9727                           	bcf	status, 5	;RP0=0, select bank0
  9728  0E40  1283               	bcf	status, 6	;RP1=0, select bank0
  9729  0E41  1303               		movf	(SetDate@Sunday),w
  9730  0E42  0833               	movwf	(LCD_SendString@string)
  9731  0E43  00F1               	movlw	0
  9732  0E44  3000               	btfss	status,2
  9733  0E45  1D03               	movlw	080h
  9734  0E46  3080               	movwf	(LCD_SendString@string+1)
  9735  0E47  00F2               
  9736                           	fcall	_LCD_SendString
  9737  0E48  160A  118A  2365  120A  158A  	line	704
  9738                           ;main.c: 704:         {
  9739                           	goto	l3950
  9740  0E4D  2D1F               	line	705
  9741                           	
  9742                           l4010:	
  9743  0E4E                     ;main.c: 705:             if(timeMins > weekDayEnd[1])
  9744                           	goto	l3950
  9745  0E4E  2D1F               	
  9746                           l251:	
  9747  0E4F                     	
  9748                           l4012:	
  9749  0E4F                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9750                           ; Switch size 1, requested type "space"
  9751                           ; Number of cases is 1, Range of values is 0 to 0
  9752                           ; switch strategies available:
  9753                           ; Name         Instructions Cycles
  9754                           ; simple_byte            4     3 (average)
  9755                           ; direct_byte           11     8 (fixed)
  9756                           ; jumptable            260     6 (fixed)
  9757                           ;	Chosen strategy is simple_byte
  9758                           
  9759                           	bcf	status, 5	;RP0=0, select bank0
  9760  0E4F  1283               	bcf	status, 6	;RP1=0, select bank0
  9761  0E50  1303               	movf (SetDate@dayInt+1),w
  9762  0E51  0837               	opt asmopt_push
  9763                           	opt asmopt_off
  9764                           	xorlw	0^0	; case 0
  9765  0E52  3A00               	skipnz
  9766  0E53  1903               	goto	l4374
  9767  0E54  2E56               	goto	l3950
  9768  0E55  2D1F               	opt asmopt_pop
  9769                           	
  9770                           l4374:	
  9771  0E56                     ; Switch size 1, requested type "space"
  9772                           ; Number of cases is 7, Range of values is 1 to 7
  9773                           ; switch strategies available:
  9774                           ; Name         Instructions Cycles
  9775                           ; simple_byte           22    12 (average)
  9776                           ; direct_byte           32    11 (fixed)
  9777                           ; jumptable            263     9 (fixed)
  9778                           ;	Chosen strategy is simple_byte
  9779                           
  9780                           	movf (SetDate@dayInt),w
  9781  0E56  0836               	opt asmopt_push
  9782                           	opt asmopt_off
  9783                           	xorlw	1^0	; case 1
  9784  0E57  3A01               	skipnz
  9785  0E58  1903               	goto	l3996
  9786  0E59  2DEC               	xorlw	2^1	; case 2
  9787  0E5A  3A03               	skipnz
  9788  0E5B  1903               	goto	l3998
  9789  0E5C  2DFA               	xorlw	3^2	; case 3
  9790  0E5D  3A01               	skipnz
  9791  0E5E  1903               	goto	l4000
  9792  0E5F  2E08               	xorlw	4^3	; case 4
  9793  0E60  3A07               	skipnz
  9794  0E61  1903               	goto	l4002
  9795  0E62  2E16               	xorlw	5^4	; case 5
  9796  0E63  3A01               	skipnz
  9797  0E64  1903               	goto	l4004
  9798  0E65  2E24               	xorlw	6^5	; case 6
  9799  0E66  3A03               	skipnz
  9800  0E67  1903               	goto	l4006
  9801  0E68  2E32               	xorlw	7^6	; case 7
  9802  0E69  3A01               	skipnz
  9803  0E6A  1903               	goto	l4008
  9804  0E6B  2E40               	goto	l3950
  9805  0E6C  2D1F               	opt asmopt_pop
  9806                           
  9807                           	
  9808                           l253:	
  9809  0E6D                     	goto	l3950
  9810  0E6D  2D1F               	line	706
  9811                           ;main.c: 706:                 IsHeatingOn = 0;
  9812                           	
  9813                           l260:	
  9814  0E6E                     	goto	l3950
  9815  0E6E  2D1F               	
  9816                           l239:	
  9817  0E6F                     	line	707
  9818                           	
  9819                           l261:	
  9820  0E6F                     	return
  9821  0E6F  0008               	opt stack 0
  9822                           GLOBAL	__end_of_SetDate
  9823                           	__end_of_SetDate:
  9824  0E70                     	signat	_SetDate,4217
  9825                           	global	_RealTimeClock_set_day_of_week
  9826                           
  9827 ;; *************** function _RealTimeClock_set_day_of_week *****************
  9828 ;; Defined at:
  9829 ;;		line 179 in file "realtimeclock.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;  day             2    0[BANK0 ] int 
  9832 ;; Auto vars:     Size  Location     Type
  9833 ;;		None
  9834 ;; Return value:  Size  Location     Type
  9835 ;;                  1    wreg      void 
  9836 ;; Registers used:
  9837 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9838 ;; Tracked objects:
  9839 ;;		On entry : 0/0
  9840 ;;		On exit  : 0/0
  9841 ;;		Unchanged: 0/0
  9842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9843 ;;      Params:         0       2       0       0       0
  9844 ;;      Locals:         0       0       0       0       0
  9845 ;;      Temps:          0       0       0       0       0
  9846 ;;      Totals:         0       2       0       0       0
  9847 ;;Total ram usage:        2 bytes
  9848 ;; Hardware stack levels used:    1
  9849 ;; Hardware stack levels required when called:    2
  9850 ;; This function calls:
  9851 ;;		_RealTimeClock_write_byte
  9852 ;;		___int_to_hex
  9853 ;; This function is called by:
  9854 ;;		_SetDate
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  9858                           	file	"realtimeclock.c"
  9859                           	line	179
  9860                           global __ptext24
  9861                           __ptext24:	;psect for function _RealTimeClock_set_day_of_week
  9862  1E9E                     psect	text24
  9863                           	file	"realtimeclock.c"
  9864                           	line	179
  9865                           	global	__size_of_RealTimeClock_set_day_of_week
  9866                           	__size_of_RealTimeClock_set_day_of_week	equ	__end_of_RealTimeClock_set_day_of_week-_Rea
                                 lTimeClock_set_day_of_week
  9867  001D                     	
  9868                           _RealTimeClock_set_day_of_week:	
  9869  1E9E                     ;incstack = 0
  9870                           	opt	stack 4
  9871                           ; Regs used in _RealTimeClock_set_day_of_week: [wreg+status,2+status,0+btemp+1+pclath+cs
                                 tack]
  9872                           	line	180
  9873                           	
  9874                           l3724:	
  9875  1E9E                     ;realtimeclock.c: 180:     RB5 = 1;
  9876                           	bcf	status, 5	;RP0=0, select bank0
  9877  1E9E  1283               	bcf	status, 6	;RP1=0, select bank0
  9878  1E9F  1303               	bsf	(53/8),(53)&7	;volatile
  9879  1EA0  1686               	line	181
  9880                           	
  9881                           l3726:	
  9882  1EA1                     ;realtimeclock.c: 181:     RealTimeClock_write_byte(0x8a);
  9883                           	movlw	low(08Ah)
  9884  1EA1  308A               	fcall	_RealTimeClock_write_byte
  9885  1EA2  160A  118A  21ED  160A  158A  	line	182
  9886                           ;realtimeclock.c: 182:     RealTimeClock_write_byte(__int_to_hex(day));
  9887                           	bcf	status, 5	;RP0=0, select bank0
  9888  1EA7  1283               	bcf	status, 6	;RP1=0, select bank0
  9889  1EA8  1303               	movf	(RealTimeClock_set_day_of_week@day+1),w
  9890  1EA9  0821               	movwf	(___int_to_hex@integer+1)
  9891  1EAA  00F8               	movf	(RealTimeClock_set_day_of_week@day),w
  9892  1EAB  0820               	movwf	(___int_to_hex@integer)
  9893  1EAC  00F7               	fcall	___int_to_hex
  9894  1EAD  160A  118A  2323  160A  158A  	fcall	_RealTimeClock_write_byte
  9895  1EB2  160A  118A  21ED  160A  158A  	line	183
  9896                           	
  9897                           l3728:	
  9898  1EB7                     ;realtimeclock.c: 183:     RB5 = 0;
  9899                           	bcf	status, 5	;RP0=0, select bank0
  9900  1EB7  1283               	bcf	status, 6	;RP1=0, select bank0
  9901  1EB8  1303               	bcf	(53/8),(53)&7	;volatile
  9902  1EB9  1286               	line	184
  9903                           	
  9904                           l389:	
  9905  1EBA                     	return
  9906  1EBA  0008               	opt stack 0
  9907                           GLOBAL	__end_of_RealTimeClock_set_day_of_week
  9908                           	__end_of_RealTimeClock_set_day_of_week:
  9909  1EBB                     	signat	_RealTimeClock_set_day_of_week,4217
  9910                           	global	___int_to_hex
  9911                           
  9912 ;; *************** function ___int_to_hex *****************
  9913 ;; Defined at:
  9914 ;;		line 15 in file "realtimeclock.c"
  9915 ;; Parameters:    Size  Location     Type
  9916 ;;  integer         2    7[COMMON] int 
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;  i               2   12[COMMON] int 
  9919 ;;  t               2   10[COMMON] int 
  9920 ;; Return value:  Size  Location     Type
  9921 ;;                  1    wreg      unsigned char 
  9922 ;; Registers used:
  9923 ;;		wreg, status,2, status,0, pclath, cstack
  9924 ;; Tracked objects:
  9925 ;;		On entry : 0/0
  9926 ;;		On exit  : 0/0
  9927 ;;		Unchanged: 0/0
  9928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9929 ;;      Params:         2       0       0       0       0
  9930 ;;      Locals:         4       0       0       0       0
  9931 ;;      Temps:          1       0       0       0       0
  9932 ;;      Totals:         7       0       0       0       0
  9933 ;;Total ram usage:        7 bytes
  9934 ;; Hardware stack levels used:    1
  9935 ;; Hardware stack levels required when called:    1
  9936 ;; This function calls:
  9937 ;;		___awmod
  9938 ;; This function is called by:
  9939 ;;		_RealTimeClock_set_seconds
  9940 ;;		_RealTimeClock_set_minutes
  9941 ;;		_RealTimeClock_set_hours
  9942 ;;		_RealTimeClock_set_day_of_week
  9943 ;;		_RealTimeClock_set_burst_time
  9944 ;;		_RealTimeClock_set_day_of_month
  9945 ;;		_RealTimeClock_set_month
  9946 ;;		_RealTimeClock_set_year
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  9950                           	line	15
  9951                           global __ptext25
  9952                           __ptext25:	;psect for function ___int_to_hex
  9953  1323                     psect	text25
  9954                           	file	"realtimeclock.c"
  9955                           	line	15
  9956                           	global	__size_of___int_to_hex
  9957                           	__size_of___int_to_hex	equ	__end_of___int_to_hex-___int_to_hex
  9958  0042                     	
  9959                           ___int_to_hex:	
  9960  1323                     ;incstack = 0
  9961                           	opt	stack 4
  9962                           ; Regs used in ___int_to_hex: [wreg+status,2+status,0+pclath+cstack]
  9963                           	line	16
  9964                           	
  9965                           l3548:	
  9966  1323                     ;realtimeclock.c: 16:     int t = 0;
  9967                           	clrf	(___int_to_hex@t)
  9968  1323  01FA               	clrf	(___int_to_hex@t+1)
  9969  1324  01FB               	line	17
  9970                           ;realtimeclock.c: 17:     for(int i = 0; i < integer; ++i) {
  9971                           	clrf	(___int_to_hex@i)
  9972  1325  01FC               	clrf	(___int_to_hex@i+1)
  9973  1326  01FD               	goto	l321
  9974  1327  2B53               	
  9975                           l322:	
  9976  1328                     	line	18
  9977                           	
  9978                           l3550:	
  9979  1328                     ;realtimeclock.c: 18:         ++t;
  9980                           	movlw	01h
  9981  1328  3001               	addwf	(___int_to_hex@t),f
  9982  1329  07FA               	skipnc
  9983  132A  1803               	incf	(___int_to_hex@t+1),f
  9984  132B  0AFB               	movlw	0
  9985  132C  3000               	addwf	(___int_to_hex@t+1),f
  9986  132D  07FB               	line	19
  9987                           	
  9988                           l3552:	
  9989  132E                     ;realtimeclock.c: 19:         if(i && i % 10 == 0) {
  9990                           	movf	((___int_to_hex@i)),w
  9991  132E  087C               iorwf	((___int_to_hex@i+1)),w
  9992  132F  047D               	btfsc	status,2
  9993  1330  1903               	goto	u2871
  9994  1331  2B33               	goto	u2870
  9995  1332  2B34               u2871:
  9996  1333                     	goto	l323
  9997  1333  2B4D               u2870:
  9998  1334                     	
  9999                           l3554:	
 10000  1334                     	movlw	0Ah
 10001  1334  300A               	movwf	(___awmod@divisor)
 10002  1335  00F0               	movlw	0
 10003  1336  3000               	movwf	((___awmod@divisor))+1
 10004  1337  00F1               	movf	(___int_to_hex@i+1),w
 10005  1338  087D               	movwf	(___awmod@dividend+1)
 10006  1339  00F3               	movf	(___int_to_hex@i),w
 10007  133A  087C               	movwf	(___awmod@dividend)
 10008  133B  00F2               	fcall	___awmod
 10009  133C  160A  118A  2567  160A  118A  	movf	((0+(?___awmod))),w
 10010  1341  0870               iorwf	((1+(?___awmod))),w
 10011  1342  0471               	btfss	status,2
 10012  1343  1D03               	goto	u2881
 10013  1344  2B46               	goto	u2880
 10014  1345  2B47               u2881:
 10015  1346                     	goto	l323
 10016  1346  2B4D               u2880:
 10017  1347                     	line	20
 10018                           	
 10019                           l3556:	
 10020  1347                     ;realtimeclock.c: 20:             t+=6;
 10021                           	movlw	06h
 10022  1347  3006               	addwf	(___int_to_hex@t),f
 10023  1348  07FA               	skipnc
 10024  1349  1803               	incf	(___int_to_hex@t+1),f
 10025  134A  0AFB               	movlw	0
 10026  134B  3000               	addwf	(___int_to_hex@t+1),f
 10027  134C  07FB               	line	21
 10028                           ;realtimeclock.c: 21:         }
 10029                           	
 10030                           l323:	
 10031  134D                     	line	22
 10032                           ;realtimeclock.c: 22:     }
 10033                           	movlw	01h
 10034  134D  3001               	addwf	(___int_to_hex@i),f
 10035  134E  07FC               	skipnc
 10036  134F  1803               	incf	(___int_to_hex@i+1),f
 10037  1350  0AFD               	movlw	0
 10038  1351  3000               	addwf	(___int_to_hex@i+1),f
 10039  1352  07FD               	
 10040                           l321:	
 10041  1353                     	movf	(___int_to_hex@i+1),w
 10042  1353  087D               	xorlw	80h
 10043  1354  3A80               	movwf	(??___int_to_hex+0)+0
 10044  1355  00F9               	movf	(___int_to_hex@integer+1),w
 10045  1356  0878               	xorlw	80h
 10046  1357  3A80               	subwf	(??___int_to_hex+0)+0,w
 10047  1358  0279               	skipz
 10048  1359  1D03               	goto	u2895
 10049  135A  2B5D               	movf	(___int_to_hex@integer),w
 10050  135B  0877               	subwf	(___int_to_hex@i),w
 10051  135C  027C               u2895:
 10052  135D                     
 10053                           	skipc
 10054  135D  1C03               	goto	u2891
 10055  135E  2B60               	goto	u2890
 10056  135F  2B61               u2891:
 10057  1360                     	goto	l3550
 10058  1360  2B28               u2890:
 10059  1361                     	goto	l3558
 10060  1361  2B62               	
 10061                           l324:	
 10062  1362                     	line	23
 10063                           	
 10064                           l3558:	
 10065  1362                     ;realtimeclock.c: 23:     return t;
 10066                           	movf	(___int_to_hex@t),w
 10067  1362  087A               	goto	l325
 10068  1363  2B64               	
 10069                           l3560:	
 10070  1364                     	line	24
 10071                           	
 10072                           l325:	
 10073  1364                     	return
 10074  1364  0008               	opt stack 0
 10075                           GLOBAL	__end_of___int_to_hex
 10076                           	__end_of___int_to_hex:
 10077  1365                     	signat	___int_to_hex,4217
 10078                           	global	_CheckDay
 10079                           
 10080 ;; *************** function _CheckDay *****************
 10081 ;; Defined at:
 10082 ;;		line 589 in file "main.c"
 10083 ;; Parameters:    Size  Location     Type
 10084 ;;		None
 10085 ;; Auto vars:     Size  Location     Type
 10086 ;;		None
 10087 ;; Return value:  Size  Location     Type
 10088 ;;                  1    wreg      void 
 10089 ;; Registers used:
 10090 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10091 ;; Tracked objects:
 10092 ;;		On entry : 0/0
 10093 ;;		On exit  : 0/0
 10094 ;;		Unchanged: 0/0
 10095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10096 ;;      Params:         0       0       0       0       0
 10097 ;;      Locals:         0       0       0       0       0
 10098 ;;      Temps:          0       0       0       0       0
 10099 ;;      Totals:         0       0       0       0       0
 10100 ;;Total ram usage:        0 bytes
 10101 ;; Hardware stack levels used:    1
 10102 ;; This function calls:
 10103 ;;		Nothing
 10104 ;; This function is called by:
 10105 ;;		_SetDate
 10106 ;;		_main
 10107 ;; This function uses a non-reentrant model
 10108 ;;
 10109                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
 10110                           	file	"main.c"
 10111                           	line	589
 10112                           global __ptext26
 10113                           __ptext26:	;psect for function _CheckDay
 10114  12A1                     psect	text26
 10115                           	file	"main.c"
 10116                           	line	589
 10117                           	global	__size_of_CheckDay
 10118                           	__size_of_CheckDay	equ	__end_of_CheckDay-_CheckDay
 10119  0041                     	
 10120                           _CheckDay:	
 10121  12A1                     ;incstack = 0
 10122                           	opt	stack 6
 10123                           ; Regs used in _CheckDay: [wreg-fsr0h+status,2+status,0]
 10124                           	line	591
 10125                           	
 10126                           l3702:	
 10127  12A1                     ;main.c: 591:         case 7:
 10128                           	goto	l3718
 10129  12A1  2AC3               	line	595
 10130                           ;main.c: 592:             isWeekDay = 0;;main.c: 595: 
 10131                           	
 10132                           l226:	
 10133  12A2                     	line	596
 10134                           	
 10135                           l3704:	
 10136  12A2                     ;main.c: 596: 
 10137                           	movlw	01h
 10138  12A2  3001               	bsf	status, 5	;RP0=1, select bank1
 10139  12A3  1683               	bcf	status, 6	;RP1=0, select bank1
 10140  12A4  1303               	movwf	(_isWeekDay)^080h
 10141  12A5  00EA               	movlw	0
 10142  12A6  3000               	movwf	((_isWeekDay)^080h)+1
 10143  12A7  00EB               	line	597
 10144                           ;main.c: 597: void SetDate(int Key)
 10145                           	goto	l234
 10146  12A8  2AE1               	line	598
 10147                           ;main.c: 598: {
 10148                           	
 10149                           l228:	
 10150  12A9                     	line	599
 10151                           	
 10152                           l3706:	
 10153  12A9                     ;main.c: 599: 
 10154                           	movlw	01h
 10155  12A9  3001               	movwf	(_isWeekDay)^080h
 10156  12AA  00EA               	movlw	0
 10157  12AB  3000               	movwf	((_isWeekDay)^080h)+1
 10158  12AC  00EB               	line	600
 10159                           ;main.c: 600:     LCD_Command(0x01);
 10160                           	goto	l234
 10161  12AD  2AE1               	line	601
 10162                           ;main.c: 601:     int i = 0;
 10163                           	
 10164                           l229:	
 10165  12AE                     	line	602
 10166                           	
 10167                           l3708:	
 10168  12AE                     ;main.c: 602:     char* Day = ("Day:");
 10169                           	movlw	01h
 10170  12AE  3001               	movwf	(_isWeekDay)^080h
 10171  12AF  00EA               	movlw	0
 10172  12B0  3000               	movwf	((_isWeekDay)^080h)+1
 10173  12B1  00EB               	line	603
 10174                           ;main.c: 603:     char* Date = ("Date:");
 10175                           	goto	l234
 10176  12B2  2AE1               	line	604
 10177                           ;main.c: 604:     char* DateSet = ("Date/Day Set");
 10178                           	
 10179                           l230:	
 10180  12B3                     	line	605
 10181                           	
 10182                           l3710:	
 10183  12B3                     ;main.c: 605:     char* Monday = ("Mon");
 10184                           	movlw	01h
 10185  12B3  3001               	movwf	(_isWeekDay)^080h
 10186  12B4  00EA               	movlw	0
 10187  12B5  3000               	movwf	((_isWeekDay)^080h)+1
 10188  12B6  00EB               	line	606
 10189                           ;main.c: 606:     char* Tuesday = ("Tue");
 10190                           	goto	l234
 10191  12B7  2AE1               	line	607
 10192                           ;main.c: 607:     char* Wednesday = ("Wed");
 10193                           	
 10194                           l231:	
 10195  12B8                     	line	608
 10196                           	
 10197                           l3712:	
 10198  12B8                     ;main.c: 608:     char* Thursday = ("Thu");
 10199                           	movlw	01h
 10200  12B8  3001               	movwf	(_isWeekDay)^080h
 10201  12B9  00EA               	movlw	0
 10202  12BA  3000               	movwf	((_isWeekDay)^080h)+1
 10203  12BB  00EB               	line	609
 10204                           ;main.c: 609:     char* Friday = ("Fri");
 10205                           	goto	l234
 10206  12BC  2AE1               	line	610
 10207                           ;main.c: 610:     char* Saturday = ("Sat");
 10208                           	
 10209                           l232:	
 10210  12BD                     	line	611
 10211                           	
 10212                           l3714:	
 10213  12BD                     ;main.c: 611:     char* Sunday = ("Sun");
 10214                           	clrf	(_isWeekDay)^080h
 10215  12BD  01EA               	clrf	(_isWeekDay+1)^080h
 10216  12BE  01EB               	line	612
 10217                           ;main.c: 612:     int dayInt;
 10218                           	goto	l234
 10219  12BF  2AE1               	line	613
 10220                           ;main.c: 613:     dayInt = RealTimeClock_get_day_of_week();
 10221                           	
 10222                           l233:	
 10223  12C0                     	line	614
 10224                           	
 10225                           l3716:	
 10226  12C0                     ;main.c: 614:     while(1)
 10227                           	clrf	(_isWeekDay)^080h
 10228  12C0  01EA               	clrf	(_isWeekDay+1)^080h
 10229  12C1  01EB               	line	615
 10230                           ;main.c: 615:     {
 10231                           	goto	l234
 10232  12C2  2AE1               	
 10233                           l225:	
 10234  12C3                     	
 10235                           l3718:	
 10236  12C3                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10237                           ; Switch size 1, requested type "space"
 10238                           ; Number of cases is 1, Range of values is 0 to 0
 10239                           ; switch strategies available:
 10240                           ; Name         Instructions Cycles
 10241                           ; simple_byte            4     3 (average)
 10242                           ; direct_byte           11     8 (fixed)
 10243                           ; jumptable            260     6 (fixed)
 10244                           ;	Chosen strategy is simple_byte
 10245                           
 10246                           	bsf	status, 5	;RP0=1, select bank1
 10247  12C3  1683               	bcf	status, 6	;RP1=0, select bank1
 10248  12C4  1303               	movf (_day_of_week+1)^080h,w
 10249  12C5  086D               	opt asmopt_push
 10250                           	opt asmopt_off
 10251                           	xorlw	0^0	; case 0
 10252  12C6  3A00               	skipnz
 10253  12C7  1903               	goto	l4376
 10254  12C8  2ACA               	goto	l234
 10255  12C9  2AE1               	opt asmopt_pop
 10256                           	
 10257                           l4376:	
 10258  12CA                     ; Switch size 1, requested type "space"
 10259                           ; Number of cases is 7, Range of values is 1 to 7
 10260                           ; switch strategies available:
 10261                           ; Name         Instructions Cycles
 10262                           ; simple_byte           22    12 (average)
 10263                           ; direct_byte           32    11 (fixed)
 10264                           ; jumptable            263     9 (fixed)
 10265                           ;	Chosen strategy is simple_byte
 10266                           
 10267                           	movf (_day_of_week)^080h,w
 10268  12CA  086C               	opt asmopt_push
 10269                           	opt asmopt_off
 10270                           	xorlw	1^0	; case 1
 10271  12CB  3A01               	skipnz
 10272  12CC  1903               	goto	l3704
 10273  12CD  2AA2               	xorlw	2^1	; case 2
 10274  12CE  3A03               	skipnz
 10275  12CF  1903               	goto	l3706
 10276  12D0  2AA9               	xorlw	3^2	; case 3
 10277  12D1  3A01               	skipnz
 10278  12D2  1903               	goto	l3708
 10279  12D3  2AAE               	xorlw	4^3	; case 4
 10280  12D4  3A07               	skipnz
 10281  12D5  1903               	goto	l3710
 10282  12D6  2AB3               	xorlw	5^4	; case 5
 10283  12D7  3A01               	skipnz
 10284  12D8  1903               	goto	l3712
 10285  12D9  2AB8               	xorlw	6^5	; case 6
 10286  12DA  3A03               	skipnz
 10287  12DB  1903               	goto	l3714
 10288  12DC  2ABD               	xorlw	7^6	; case 7
 10289  12DD  3A01               	skipnz
 10290  12DE  1903               	goto	l3716
 10291  12DF  2AC0               	goto	l234
 10292  12E0  2AE1               	opt asmopt_pop
 10293                           
 10294                           	
 10295                           l227:	
 10296  12E1                     	line	616
 10297                           	
 10298                           l234:	
 10299  12E1                     	return
 10300  12E1  0008               	opt stack 0
 10301                           GLOBAL	__end_of_CheckDay
 10302                           	__end_of_CheckDay:
 10303  12E2                     	signat	_CheckDay,89
 10304                           	global	_RealTimeClock_init
 10305                           
 10306 ;; *************** function _RealTimeClock_init *****************
 10307 ;; Defined at:
 10308 ;;		line 74 in file "realtimeclock.c"
 10309 ;; Parameters:    Size  Location     Type
 10310 ;;		None
 10311 ;; Auto vars:     Size  Location     Type
 10312 ;;		None
 10313 ;; Return value:  Size  Location     Type
 10314 ;;                  1    wreg      void 
 10315 ;; Registers used:
 10316 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10317 ;; Tracked objects:
 10318 ;;		On entry : 0/0
 10319 ;;		On exit  : 0/0
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10322 ;;      Params:         0       0       0       0       0
 10323 ;;      Locals:         0       0       0       0       0
 10324 ;;      Temps:          0       0       0       0       0
 10325 ;;      Totals:         0       0       0       0       0
 10326 ;;Total ram usage:        0 bytes
 10327 ;; Hardware stack levels used:    1
 10328 ;; Hardware stack levels required when called:    1
 10329 ;; This function calls:
 10330 ;;		_RealTimeClock_write_byte
 10331 ;; This function is called by:
 10332 ;;		_main
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
 10336                           	file	"realtimeclock.c"
 10337                           	line	74
 10338                           global __ptext27
 10339                           __ptext27:	;psect for function _RealTimeClock_init
 10340  10E6                     psect	text27
 10341                           	file	"realtimeclock.c"
 10342                           	line	74
 10343                           	global	__size_of_RealTimeClock_init
 10344                           	__size_of_RealTimeClock_init	equ	__end_of_RealTimeClock_init-_RealTimeClock_init
 10345  001E                     	
 10346                           _RealTimeClock_init:	
 10347  10E6                     ;incstack = 0
 10348                           	opt	stack 6
 10349                           ; Regs used in _RealTimeClock_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10350                           	line	75
 10351                           	
 10352                           l4072:	
 10353  10E6                     ;realtimeclock.c: 75:     RB5 = 0;
 10354                           	bcf	status, 5	;RP0=0, select bank0
 10355  10E6  1283               	bcf	status, 6	;RP1=0, select bank0
 10356  10E7  1303               	bcf	(53/8),(53)&7	;volatile
 10357  10E8  1286               	line	76
 10358                           	
 10359                           l4074:	
 10360  10E9                     ;realtimeclock.c: 76:     ADCON1 = 0x06;
 10361                           	movlw	low(06h)
 10362  10E9  3006               	bsf	status, 5	;RP0=1, select bank1
 10363  10EA  1683               	bcf	status, 6	;RP1=0, select bank1
 10364  10EB  1303               	movwf	(159)^080h	;volatile
 10365  10EC  009F               	line	78
 10366                           	
 10367                           l4076:	
 10368  10ED                     ;realtimeclock.c: 78:     TRISB0 = 0;
 10369                           	bcf	(1072/8)^080h,(1072)&7	;volatile
 10370  10ED  1006               	line	79
 10371                           	
 10372                           l4078:	
 10373  10EE                     ;realtimeclock.c: 79:     TRISB4 = 0;
 10374                           	bcf	(1076/8)^080h,(1076)&7	;volatile
 10375  10EE  1206               	line	80
 10376                           	
 10377                           l4080:	
 10378  10EF                     ;realtimeclock.c: 80:     TRISB5 = 0;
 10379                           	bcf	(1077/8)^080h,(1077)&7	;volatile
 10380  10EF  1286               	line	81
 10381                           	
 10382                           l4082:	
 10383  10F0                     ;realtimeclock.c: 81:     RB0 = 0;
 10384                           	bcf	status, 5	;RP0=0, select bank0
 10385  10F0  1283               	bcf	status, 6	;RP1=0, select bank0
 10386  10F1  1303               	bcf	(48/8),(48)&7	;volatile
 10387  10F2  1006               	line	82
 10388                           	
 10389                           l4084:	
 10390  10F3                     ;realtimeclock.c: 82:     RB5 = 1;
 10391                           	bsf	(53/8),(53)&7	;volatile
 10392  10F3  1686               	line	83
 10393                           	
 10394                           l4086:	
 10395  10F4                     ;realtimeclock.c: 83:     RealTimeClock_write_byte(0x8e);
 10396                           	movlw	low(08Eh)
 10397  10F4  308E               	fcall	_RealTimeClock_write_byte
 10398  10F5  160A  118A  21ED  160A  118A  	line	84
 10399                           	
 10400                           l4088:	
 10401  10FA                     ;realtimeclock.c: 84:     RealTimeClock_write_byte(0);
 10402                           	movlw	low(0)
 10403  10FA  3000               	fcall	_RealTimeClock_write_byte
 10404  10FB  160A  118A  21ED  160A  118A  	line	85
 10405                           	
 10406                           l4090:	
 10407  1100                     ;realtimeclock.c: 85:     RB5 = 0;
 10408                           	bcf	status, 5	;RP0=0, select bank0
 10409  1100  1283               	bcf	status, 6	;RP1=0, select bank0
 10410  1101  1303               	bcf	(53/8),(53)&7	;volatile
 10411  1102  1286               	line	86
 10412                           	
 10413                           l350:	
 10414  1103                     	return
 10415  1103  0008               	opt stack 0
 10416                           GLOBAL	__end_of_RealTimeClock_init
 10417                           	__end_of_RealTimeClock_init:
 10418  1104                     	signat	_RealTimeClock_init,89
 10419                           	global	_LCD_Init
 10420                           
 10421 ;; *************** function _LCD_Init *****************
 10422 ;; Defined at:
 10423 ;;		line 26 in file "LCD.c"
 10424 ;; Parameters:    Size  Location     Type
 10425 ;;		None
 10426 ;; Auto vars:     Size  Location     Type
 10427 ;;		None
 10428 ;; Return value:  Size  Location     Type
 10429 ;;                  1    wreg      void 
 10430 ;; Registers used:
 10431 ;;		wreg, status,2
 10432 ;; Tracked objects:
 10433 ;;		On entry : 0/0
 10434 ;;		On exit  : 0/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10437 ;;      Params:         0       0       0       0       0
 10438 ;;      Locals:         0       0       0       0       0
 10439 ;;      Temps:          0       0       0       0       0
 10440 ;;      Totals:         0       0       0       0       0
 10441 ;;Total ram usage:        0 bytes
 10442 ;; Hardware stack levels used:    1
 10443 ;; This function calls:
 10444 ;;		Nothing
 10445 ;; This function is called by:
 10446 ;;		_main
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
 10450                           	file	"LCD.c"
 10451                           	line	26
 10452                           global __ptext28
 10453                           __ptext28:	;psect for function _LCD_Init
 10454  1E1D                     psect	text28
 10455                           	file	"LCD.c"
 10456                           	line	26
 10457                           	global	__size_of_LCD_Init
 10458                           	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_Init
 10459  0007                     	
 10460                           _LCD_Init:	
 10461  1E1D                     ;incstack = 0
 10462                           	opt	stack 7
 10463                           ; Regs used in _LCD_Init: [wreg+status,2]
 10464                           	line	28
 10465                           	
 10466                           l4058:	
 10467  1E1D                     ;LCD.c: 28:     TRISD = 0x00;
 10468                           	bsf	status, 5	;RP0=1, select bank1
 10469  1E1D  1683               	bcf	status, 6	;RP1=0, select bank1
 10470  1E1E  1303               	clrf	(136)^080h	;volatile
 10471  1E1F  0188               	line	29
 10472                           ;LCD.c: 29:     TRISA = 0x00;
 10473                           	clrf	(133)^080h	;volatile
 10474  1E20  0185               	line	30
 10475                           	
 10476                           l4060:	
 10477  1E21                     ;LCD.c: 30:     ADCON1 = 0x06;
 10478                           	movlw	low(06h)
 10479  1E21  3006               	movwf	(159)^080h	;volatile
 10480  1E22  009F               	line	31
 10481                           	
 10482                           l515:	
 10483  1E23                     	return
 10484  1E23  0008               	opt stack 0
 10485                           GLOBAL	__end_of_LCD_Init
 10486                           	__end_of_LCD_Init:
 10487  1E24                     	signat	_LCD_Init,89
 10488                           	global	_Init_Keypad
 10489                           
 10490 ;; *************** function _Init_Keypad *****************
 10491 ;; Defined at:
 10492 ;;		line 11 in file "KeyMatrix.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;		None
 10495 ;; Auto vars:     Size  Location     Type
 10496 ;;		None
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  1    wreg      void 
 10499 ;; Registers used:
 10500 ;;		wreg, status,2
 10501 ;; Tracked objects:
 10502 ;;		On entry : 0/0
 10503 ;;		On exit  : 0/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10506 ;;      Params:         0       0       0       0       0
 10507 ;;      Locals:         0       0       0       0       0
 10508 ;;      Temps:          0       0       0       0       0
 10509 ;;      Totals:         0       0       0       0       0
 10510 ;;Total ram usage:        0 bytes
 10511 ;; Hardware stack levels used:    1
 10512 ;; This function calls:
 10513 ;;		Nothing
 10514 ;; This function is called by:
 10515 ;;		_main
 10516 ;; This function uses a non-reentrant model
 10517 ;;
 10518                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
 10519                           	file	"KeyMatrix.c"
 10520                           	line	11
 10521                           global __ptext29
 10522                           __ptext29:	;psect for function _Init_Keypad
 10523  1E2B                     psect	text29
 10524                           	file	"KeyMatrix.c"
 10525                           	line	11
 10526                           	global	__size_of_Init_Keypad
 10527                           	__size_of_Init_Keypad	equ	__end_of_Init_Keypad-_Init_Keypad
 10528  0008                     	
 10529                           _Init_Keypad:	
 10530  1E2B                     ;incstack = 0
 10531                           	opt	stack 7
 10532                           ; Regs used in _Init_Keypad: [wreg+status,2]
 10533                           	line	13
 10534                           	
 10535                           l4062:	
 10536  1E2B                     ;KeyMatrix.c: 13:     PORTC = 0x00;
 10537                           	bcf	status, 5	;RP0=0, select bank0
 10538  1E2B  1283               	bcf	status, 6	;RP1=0, select bank0
 10539  1E2C  1303               	clrf	(7)	;volatile
 10540  1E2D  0187               	line	14
 10541                           	
 10542                           l4064:	
 10543  1E2E                     ;KeyMatrix.c: 14:     TRISC = 0xF;
 10544                           	movlw	low(0Fh)
 10545  1E2E  300F               	bsf	status, 5	;RP0=1, select bank1
 10546  1E2F  1683               	bcf	status, 6	;RP1=0, select bank1
 10547  1E30  1303               	movwf	(135)^080h	;volatile
 10548  1E31  0087               	line	15
 10549                           	
 10550                           l423:	
 10551  1E32                     	return
 10552  1E32  0008               	opt stack 0
 10553                           GLOBAL	__end_of_Init_Keypad
 10554                           	__end_of_Init_Keypad:
 10555  1E33                     	signat	_Init_Keypad,89
 10556                           	global	_DateDayScreen
 10557                           
 10558 ;; *************** function _DateDayScreen *****************
 10559 ;; Defined at:
 10560 ;;		line 419 in file "main.c"
 10561 ;; Parameters:    Size  Location     Type
 10562 ;;  Key             2   17[BANK0 ] int 
 10563 ;; Auto vars:     Size  Location     Type
 10564 ;;  day             1   21[BANK0 ] PTR unsigned char 
 10565 ;;		 -> STR_19(6), 
 10566 ;;  date            1   20[BANK0 ] PTR unsigned char 
 10567 ;;		 -> STR_18(7), 
 10568 ;; Return value:  Size  Location     Type
 10569 ;;                  1    wreg      void 
 10570 ;; Registers used:
 10571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10572 ;; Tracked objects:
 10573 ;;		On entry : 0/0
 10574 ;;		On exit  : 0/0
 10575 ;;		Unchanged: 0/0
 10576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10577 ;;      Params:         0       2       0       0       0
 10578 ;;      Locals:         0       2       0       0       0
 10579 ;;      Temps:          0       1       0       0       0
 10580 ;;      Totals:         0       5       0       0       0
 10581 ;;Total ram usage:        5 bytes
 10582 ;; Hardware stack levels used:    1
 10583 ;; Hardware stack levels required when called:    4
 10584 ;; This function calls:
 10585 ;;		_ChangeTrigger
 10586 ;;		_DisplayDate
 10587 ;;		_DisplayDay
 10588 ;;		_Keypad_Scan
 10589 ;;		_LCD_Command
 10590 ;;		_LCD_SecondLine
 10591 ;;		_LCD_SendString
 10592 ;;		_SwapToHeatingDisplay
 10593 ;; This function is called by:
 10594 ;;		_main
 10595 ;; This function uses a non-reentrant model
 10596 ;;
 10597                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 10598                           	file	"main.c"
 10599                           	line	419
 10600                           global __ptext30
 10601                           __ptext30:	;psect for function _DateDayScreen
 10602  16AE                     psect	text30
 10603                           	file	"main.c"
 10604                           	line	419
 10605                           	global	__size_of_DateDayScreen
 10606                           	__size_of_DateDayScreen	equ	__end_of_DateDayScreen-_DateDayScreen
 10607  007F                     	
 10608                           _DateDayScreen:	
 10609  16AE                     ;incstack = 0
 10610                           	opt	stack 3
 10611                           ; Regs used in _DateDayScreen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10612                           	line	421
 10613                           	
 10614                           l3778:	
 10615  16AE                     ;main.c: 419:         };main.c: 420:         if (Key == 7);main.c: 421:         {
 10616                           	movlw	low(01h)
 10617  16AE  3001               	fcall	_LCD_Command
 10618  16AF  160A  158A  2633  160A  118A  	line	422
 10619                           	
 10620                           l3780:	
 10621  16B4                     ;main.c: 422:             SwapToHeatingDisplay(Key);
 10622                           	movlw	(low((((STR_18)-__stringbase)|8000h)))&0ffh
 10623  16B4  3080               	bcf	status, 5	;RP0=0, select bank0
 10624  16B5  1283               	bcf	status, 6	;RP1=0, select bank0
 10625  16B6  1303               	movwf	(??_DateDayScreen+0)+0
 10626  16B7  00B3               	movf	(??_DateDayScreen+0)+0,w
 10627  16B8  0833               	movwf	(DateDayScreen@date)
 10628  16B9  00B4               	line	423
 10629                           	
 10630                           l3782:	
 10631  16BA                     ;main.c: 423:         }
 10632                           	movlw	(low((((STR_19)-__stringbase)|8000h)))&0ffh
 10633  16BA  309C               	movwf	(??_DateDayScreen+0)+0
 10634  16BB  00B3               	movf	(??_DateDayScreen+0)+0,w
 10635  16BC  0833               	movwf	(DateDayScreen@day)
 10636  16BD  00B5               	line	424
 10637                           ;main.c: 424:     }
 10638                           	
 10639                           l181:	
 10640  16BE                     	line	426
 10641                           ;main.c: 425: };main.c: 426: 
 10642                           	fcall	_Keypad_Scan
 10643  16BE  120A  118A  20E5  160A  118A  	movf	(1+(?_Keypad_Scan)),w
 10644  16C3  0877               	bcf	status, 5	;RP0=0, select bank0
 10645  16C4  1283               	bcf	status, 6	;RP1=0, select bank0
 10646  16C5  1303               	movwf	(DateDayScreen@Key+1)
 10647  16C6  00B2               	movf	(0+(?_Keypad_Scan)),w
 10648  16C7  0876               	movwf	(DateDayScreen@Key)
 10649  16C8  00B1               	line	427
 10650                           ;main.c: 427: 
 10651                           	movlw	low(03h)
 10652  16C9  3003               	fcall	_LCD_Command
 10653  16CA  160A  158A  2633  160A  118A  	line	428
 10654                           	
 10655                           l3784:	
 10656  16CF                     ;main.c: 428: void SetTime(int Key)
 10657                           	bcf	status, 5	;RP0=0, select bank0
 10658  16CF  1283               	bcf	status, 6	;RP1=0, select bank0
 10659  16D0  1303               		movf	(DateDayScreen@date),w
 10660  16D1  0834               	movwf	(LCD_SendString@string)
 10661  16D2  00F1               	movlw	0
 10662  16D3  3000               	btfss	status,2
 10663  16D4  1D03               	movlw	080h
 10664  16D5  3080               	movwf	(LCD_SendString@string+1)
 10665  16D6  00F2               
 10666                           	fcall	_LCD_SendString
 10667  16D7  160A  118A  2365  160A  118A  	line	429
 10668                           	
 10669                           l3786:	
 10670  16DC                     ;main.c: 429: {
 10671                           	fcall	_DisplayDate
 10672  16DC  120A  118A  2008  160A  118A  	line	430
 10673                           	
 10674                           l3788:	
 10675  16E1                     ;main.c: 430: 
 10676                           	fcall	_LCD_SecondLine
 10677  16E1  160A  158A  2616  160A  118A  	line	431
 10678                           	
 10679                           l3790:	
 10680  16E6                     ;main.c: 431:     LCD_Command(0x01);
 10681                           	bcf	status, 5	;RP0=0, select bank0
 10682  16E6  1283               	bcf	status, 6	;RP1=0, select bank0
 10683  16E7  1303               		movf	(DateDayScreen@day),w
 10684  16E8  0835               	movwf	(LCD_SendString@string)
 10685  16E9  00F1               	movlw	0
 10686  16EA  3000               	btfss	status,2
 10687  16EB  1D03               	movlw	080h
 10688  16EC  3080               	movwf	(LCD_SendString@string+1)
 10689  16ED  00F2               
 10690                           	fcall	_LCD_SendString
 10691  16EE  160A  118A  2365  160A  118A  	line	432
 10692                           	
 10693                           l3792:	
 10694  16F3                     ;main.c: 432: 
 10695                           	fcall	_DisplayDay
 10696  16F3  120A  158A  200B  160A  118A  	line	433
 10697                           	
 10698                           l3794:	
 10699  16F8                     ;main.c: 433:     int i = 0;
 10700                           	bcf	status, 5	;RP0=0, select bank0
 10701  16F8  1283               	bcf	status, 6	;RP1=0, select bank0
 10702  16F9  1303               		decf	((DateDayScreen@Key)),w
 10703  16FA  0331               iorwf	((DateDayScreen@Key+1)),w
 10704  16FB  0432               	btfss	status,2
 10705  16FC  1D03               	goto	u3021
 10706  16FD  2EFF               	goto	u3020
 10707  16FE  2F00               u3021:
 10708  16FF                     	goto	l3798
 10709  16FF  2F07               u3020:
 10710  1700                     	line	435
 10711                           	
 10712                           l3796:	
 10713  1700                     ;main.c: 434: ;main.c: 435:     int hour, min, sec;
 10714                           	movf	(DateDayScreen@Key),w
 10715  1700  0831               	fcall	_ChangeTrigger
 10716  1701  120A  158A  2374  160A  118A  	goto	l3798
 10717  1706  2F07               	line	436
 10718                           ;main.c: 436:     char* Time = "Time:";
 10719                           	
 10720                           l182:	
 10721  1707                     	line	437
 10722                           	
 10723                           l3798:	
 10724  1707                     ;main.c: 437:     char* TimeSet = "Time Set";
 10725                           		movlw	6
 10726  1707  3006               	bcf	status, 5	;RP0=0, select bank0
 10727  1708  1283               	bcf	status, 6	;RP1=0, select bank0
 10728  1709  1303               	xorwf	((DateDayScreen@Key)),w
 10729  170A  0631               iorwf	((DateDayScreen@Key+1)),w
 10730  170B  0432               	btfss	status,2
 10731  170C  1D03               	goto	u3031
 10732  170D  2F0F               	goto	u3030
 10733  170E  2F10               u3031:
 10734  170F                     	goto	l3802
 10735  170F  2F17               u3030:
 10736  1710                     	line	439
 10737                           	
 10738                           l3800:	
 10739  1710                     ;main.c: 438: ;main.c: 439:     timeSecs = RealTimeClock_get_seconds();
 10740                           	movlw	low(01h)
 10741  1710  3001               	fcall	_LCD_Command
 10742  1711  160A  158A  2633  160A  118A  	line	440
 10743                           ;main.c: 440:     timeMins = RealTimeClock_get_minutes();
 10744                           	goto	l187
 10745  1716  2F2C               	line	441
 10746                           ;main.c: 441:     timeHours = RealTimeClock_get_hours();
 10747                           	
 10748                           l183:	
 10749  1717                     	line	442
 10750                           	
 10751                           l3802:	
 10752  1717                     ;main.c: 442: 
 10753                           		movlw	7
 10754  1717  3007               	bcf	status, 5	;RP0=0, select bank0
 10755  1718  1283               	bcf	status, 6	;RP1=0, select bank0
 10756  1719  1303               	xorwf	((DateDayScreen@Key)),w
 10757  171A  0631               iorwf	((DateDayScreen@Key+1)),w
 10758  171B  0432               	btfss	status,2
 10759  171C  1D03               	goto	u3041
 10760  171D  2F1F               	goto	u3040
 10761  171E  2F20               u3041:
 10762  171F                     	goto	l181
 10763  171F  2EBE               u3040:
 10764  1720                     	line	444
 10765                           	
 10766                           l3804:	
 10767  1720                     ;main.c: 443:     int setTime[3];;main.c: 444:     setTime[0] = timeHours;
 10768                           	movf	(DateDayScreen@Key+1),w
 10769  1720  0832               	movwf	(SwapToHeatingDisplay@Key+1)
 10770  1721  00F9               	movf	(DateDayScreen@Key),w
 10771  1722  0831               	movwf	(SwapToHeatingDisplay@Key)
 10772  1723  00F8               	fcall	_SwapToHeatingDisplay
 10773  1724  160A  118A  263B  160A  118A  	goto	l181
 10774  1729  2EBE               	line	445
 10775                           ;main.c: 445:     setTime[1] = timeMins;
 10776                           	
 10777                           l185:	
 10778  172A                     	goto	l181
 10779  172A  2EBE               	line	446
 10780                           ;main.c: 446:     setTime[2] = timeSecs;
 10781                           	
 10782                           l186:	
 10783  172B                     	goto	l181
 10784  172B  2EBE               	
 10785                           l184:	
 10786  172C                     	line	447
 10787                           	
 10788                           l187:	
 10789  172C                     	return
 10790  172C  0008               	opt stack 0
 10791                           GLOBAL	__end_of_DateDayScreen
 10792                           	__end_of_DateDayScreen:
 10793  172D                     	signat	_DateDayScreen,4217
 10794                           	global	_SwapToHeatingDisplay
 10795                           
 10796 ;; *************** function _SwapToHeatingDisplay *****************
 10797 ;; Defined at:
 10798 ;;		line 263 in file "main.c"
 10799 ;; Parameters:    Size  Location     Type
 10800 ;;  Key             2    8[COMMON] int 
 10801 ;; Auto vars:     Size  Location     Type
 10802 ;;  Off             1   13[COMMON] PTR unsigned char 
 10803 ;;		 -> STR_14(4), 
 10804 ;;  On              1   12[COMMON] PTR unsigned char 
 10805 ;;		 -> STR_13(3), 
 10806 ;;  Heat            1   11[COMMON] PTR unsigned char 
 10807 ;;		 -> STR_12(9), 
 10808 ;; Return value:  Size  Location     Type
 10809 ;;                  1    wreg      void 
 10810 ;; Registers used:
 10811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10812 ;; Tracked objects:
 10813 ;;		On entry : 0/0
 10814 ;;		On exit  : 0/0
 10815 ;;		Unchanged: 0/0
 10816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10817 ;;      Params:         2       0       0       0       0
 10818 ;;      Locals:         3       0       0       0       0
 10819 ;;      Temps:          1       0       0       0       0
 10820 ;;      Totals:         6       0       0       0       0
 10821 ;;Total ram usage:        6 bytes
 10822 ;; Hardware stack levels used:    1
 10823 ;; Hardware stack levels required when called:    3
 10824 ;; This function calls:
 10825 ;;		_Keypad_Scan
 10826 ;;		_LCD_Command
 10827 ;;		_LCD_SendString
 10828 ;; This function is called by:
 10829 ;;		_HeatingControlOff
 10830 ;;		_SoundAlarm
 10831 ;;		_DateDayScreen
 10832 ;;		_main
 10833 ;; This function uses a non-reentrant model
 10834 ;;
 10835                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 10836                           	line	263
 10837                           global __ptext31
 10838                           __ptext31:	;psect for function _SwapToHeatingDisplay
 10839  163B                     psect	text31
 10840                           	file	"main.c"
 10841                           	line	263
 10842                           	global	__size_of_SwapToHeatingDisplay
 10843                           	__size_of_SwapToHeatingDisplay	equ	__end_of_SwapToHeatingDisplay-_SwapToHeatingDisplay

 10844  0073                     	
 10845                           _SwapToHeatingDisplay:	
 10846  163B                     ;incstack = 0
 10847                           	opt	stack 4
 10848                           ; Regs used in _SwapToHeatingDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
                                 k]
 10849                           	line	265
 10850                           	
 10851                           l3516:	
 10852  163B                     ;main.c: 263:             LCD_SendString(On);;main.c: 264:         };main.c: 265:       
                                   else if(IsHeatingOn == 0)
 10853                           	movlw	(low((((STR_12)-__stringbase)|8000h)))&0ffh
 10854  163B  304B               	movwf	(??_SwapToHeatingDisplay+0)+0
 10855  163C  00FA               	movf	(??_SwapToHeatingDisplay+0)+0,w
 10856  163D  087A               	movwf	(SwapToHeatingDisplay@Heat)
 10857  163E  00FB               	line	267
 10858                           	
 10859                           l3518:	
 10860  163F                     ;main.c: 267:             LCD_Command(0x14);
 10861                           	movlw	low(01h)
 10862  163F  3001               	fcall	_LCD_Command
 10863  1640  160A  158A  2633  160A  118A  	line	268
 10864                           	
 10865                           l3520:	
 10866  1645                     ;main.c: 268:             LCD_SendString(Off);
 10867                           	movlw	(low((((STR_13)-__stringbase)|8000h)))&0ffh
 10868  1645  303E               	movwf	(??_SwapToHeatingDisplay+0)+0
 10869  1646  00FA               	movf	(??_SwapToHeatingDisplay+0)+0,w
 10870  1647  087A               	movwf	(SwapToHeatingDisplay@On)
 10871  1648  00FC               	line	269
 10872                           	
 10873                           l3522:	
 10874  1649                     ;main.c: 269:         }
 10875                           	movlw	(low((((STR_14)-__stringbase)|8000h)))&0ffh
 10876  1649  3026               	movwf	(??_SwapToHeatingDisplay+0)+0
 10877  164A  00FA               	movf	(??_SwapToHeatingDisplay+0)+0,w
 10878  164B  087A               	movwf	(SwapToHeatingDisplay@Off)
 10879  164C  00FD               	goto	l3524
 10880  164D  2E4E               	line	270
 10881                           ;main.c: 270:     }
 10882                           	
 10883                           l145:	
 10884  164E                     	line	273
 10885                           	
 10886                           l3524:	
 10887  164E                     ;main.c: 271: };main.c: 273: 
 10888                           	fcall	_Keypad_Scan
 10889  164E  120A  118A  20E5  160A  118A  	movf	(1+(?_Keypad_Scan)),w
 10890  1653  0877               	movwf	(SwapToHeatingDisplay@Key+1)
 10891  1654  00F9               	movf	(0+(?_Keypad_Scan)),w
 10892  1655  0876               	movwf	(SwapToHeatingDisplay@Key)
 10893  1656  00F8               	line	274
 10894                           	
 10895                           l3526:	
 10896  1657                     ;main.c: 274: void HeatingControlOff(int Key, int temp, int temp2, int temp3)
 10897                           		movlw	7
 10898  1657  3007               	xorwf	((SwapToHeatingDisplay@Key)),w
 10899  1658  0678               iorwf	((SwapToHeatingDisplay@Key+1)),w
 10900  1659  0479               	btfss	status,2
 10901  165A  1D03               	goto	u2841
 10902  165B  2E5D               	goto	u2840
 10903  165C  2E5E               u2841:
 10904  165D                     	goto	l3530
 10905  165D  2E65               u2840:
 10906  165E                     	line	276
 10907                           	
 10908                           l3528:	
 10909  165E                     ;main.c: 275: {;main.c: 276: 
 10910                           	movlw	low(01h)
 10911  165E  3001               	fcall	_LCD_Command
 10912  165F  160A  158A  2633  160A  118A  	line	277
 10913                           ;main.c: 277:     DisableAlarm = 1;
 10914                           	goto	l152
 10915  1664  2EAD               	line	278
 10916                           ;main.c: 278:     SoundOff();
 10917                           	
 10918                           l146:	
 10919  1665                     	line	279
 10920                           	
 10921                           l3530:	
 10922  1665                     ;main.c: 279:     char* Off = "Heating Off";
 10923                           	movlw	low(03h)
 10924  1665  3003               	fcall	_LCD_Command
 10925  1666  160A  158A  2633  160A  118A  	line	280
 10926                           	
 10927                           l3532:	
 10928  166B                     ;main.c: 280:     char* On = "Heating On";
 10929                           		movf	(SwapToHeatingDisplay@Heat),w
 10930  166B  087B               	movwf	(LCD_SendString@string)
 10931  166C  00F1               	movlw	0
 10932  166D  3000               	btfss	status,2
 10933  166E  1D03               	movlw	080h
 10934  166F  3080               	movwf	(LCD_SendString@string+1)
 10935  1670  00F2               
 10936                           	fcall	_LCD_SendString
 10937  1671  160A  118A  2365  160A  118A  	line	282
 10938                           	
 10939                           l3534:	
 10940  1676                     ;main.c: 282:     LCD_Command(0x01);
 10941                           	bcf	status, 5	;RP0=0, select bank0
 10942  1676  1283               	bcf	status, 6	;RP1=0, select bank0
 10943  1677  1303               		decf	((_IsHeatingOn)),w
 10944  1678  0360               iorwf	((_IsHeatingOn+1)),w
 10945  1679  0461               	btfss	status,2
 10946  167A  1D03               	goto	u2851
 10947  167B  2E7D               	goto	u2850
 10948  167C  2E7E               u2851:
 10949  167D                     	goto	l3540
 10950  167D  2E90               u2850:
 10951  167E                     	line	284
 10952                           	
 10953                           l3536:	
 10954  167E                     ;main.c: 283: ;main.c: 284:     LCD_Command(0x03);
 10955                           	movlw	low(014h)
 10956  167E  3014               	fcall	_LCD_Command
 10957  167F  160A  158A  2633  160A  118A  	line	285
 10958                           	
 10959                           l3538:	
 10960  1684                     ;main.c: 285: 
 10961                           		movf	(SwapToHeatingDisplay@On),w
 10962  1684  087C               	movwf	(LCD_SendString@string)
 10963  1685  00F1               	movlw	0
 10964  1686  3000               	btfss	status,2
 10965  1687  1D03               	movlw	080h
 10966  1688  3080               	movwf	(LCD_SendString@string+1)
 10967  1689  00F2               
 10968                           	fcall	_LCD_SendString
 10969  168A  160A  118A  2365  160A  118A  	line	286
 10970                           ;main.c: 286:     LCD_SendString(Off);
 10971                           	goto	l3524
 10972  168F  2E4E               	line	287
 10973                           ;main.c: 287: 
 10974                           	
 10975                           l148:	
 10976  1690                     	
 10977                           l3540:	
 10978  1690                     	bcf	status, 5	;RP0=0, select bank0
 10979  1690  1283               	bcf	status, 6	;RP1=0, select bank0
 10980  1691  1303               	movf	((_IsHeatingOn)),w
 10981  1692  0860               iorwf	((_IsHeatingOn+1)),w
 10982  1693  0461               	btfss	status,2
 10983  1694  1D03               	goto	u2861
 10984  1695  2E97               	goto	u2860
 10985  1696  2E98               u2861:
 10986  1697                     	goto	l3524
 10987  1697  2E4E               u2860:
 10988  1698                     	line	289
 10989                           	
 10990                           l3542:	
 10991  1698                     ;main.c: 288:     Main_Delay(200);;main.c: 289: 
 10992                           	movlw	low(014h)
 10993  1698  3014               	fcall	_LCD_Command
 10994  1699  160A  158A  2633  160A  118A  	line	290
 10995                           	
 10996                           l3544:	
 10997  169E                     ;main.c: 290:     LCD_Command(0x01);
 10998                           		movf	(SwapToHeatingDisplay@Off),w
 10999  169E  087D               	movwf	(LCD_SendString@string)
 11000  169F  00F1               	movlw	0
 11001  16A0  3000               	btfss	status,2
 11002  16A1  1D03               	movlw	080h
 11003  16A2  3080               	movwf	(LCD_SendString@string+1)
 11004  16A3  00F2               
 11005                           	fcall	_LCD_SendString
 11006  16A4  160A  118A  2365  160A  118A  	goto	l3524
 11007  16A9  2E4E               	line	291
 11008                           ;main.c: 291:     while(1)
 11009                           	
 11010                           l150:	
 11011  16AA                     	goto	l3524
 11012  16AA  2E4E               	
 11013                           l149:	
 11014  16AB                     	goto	l3524
 11015  16AB  2E4E               	line	292
 11016                           ;main.c: 292:     {
 11017                           	
 11018                           l151:	
 11019  16AC                     	goto	l3524
 11020  16AC  2E4E               	
 11021                           l147:	
 11022  16AD                     	line	293
 11023                           	
 11024                           l152:	
 11025  16AD                     	return
 11026  16AD  0008               	opt stack 0
 11027                           GLOBAL	__end_of_SwapToHeatingDisplay
 11028                           	__end_of_SwapToHeatingDisplay:
 11029  16AE                     	signat	_SwapToHeatingDisplay,4217
 11030                           	global	_LCD_SecondLine
 11031                           
 11032 ;; *************** function _LCD_SecondLine *****************
 11033 ;; Defined at:
 11034 ;;		line 49 in file "LCD.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;		None
 11037 ;; Auto vars:     Size  Location     Type
 11038 ;;		None
 11039 ;; Return value:  Size  Location     Type
 11040 ;;                  1    wreg      void 
 11041 ;; Registers used:
 11042 ;;		wreg, status,2, status,0, pclath, cstack
 11043 ;; Tracked objects:
 11044 ;;		On entry : 0/0
 11045 ;;		On exit  : 0/0
 11046 ;;		Unchanged: 0/0
 11047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11048 ;;      Params:         0       0       0       0       0
 11049 ;;      Locals:         0       0       0       0       0
 11050 ;;      Temps:          0       0       0       0       0
 11051 ;;      Totals:         0       0       0       0       0
 11052 ;;Total ram usage:        0 bytes
 11053 ;; Hardware stack levels used:    1
 11054 ;; Hardware stack levels required when called:    2
 11055 ;; This function calls:
 11056 ;;		_LCD_Command
 11057 ;; This function is called by:
 11058 ;;		_MainScreen
 11059 ;;		_DateDayScreen
 11060 ;;		_SetDate
 11061 ;; This function uses a non-reentrant model
 11062 ;;
 11063                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 11064                           	file	"LCD.c"
 11065                           	line	49
 11066                           global __ptext32
 11067                           __ptext32:	;psect for function _LCD_SecondLine
 11068  1E16                     psect	text32
 11069                           	file	"LCD.c"
 11070                           	line	49
 11071                           	global	__size_of_LCD_SecondLine
 11072                           	__size_of_LCD_SecondLine	equ	__end_of_LCD_SecondLine-_LCD_SecondLine
 11073  0007                     	
 11074                           _LCD_SecondLine:	
 11075  1E16                     ;incstack = 0
 11076                           	opt	stack 2
 11077                           ; Regs used in _LCD_SecondLine: [wreg+status,2+status,0+pclath+cstack]
 11078                           	line	51
 11079                           	
 11080                           l3276:	
 11081  1E16                     ;LCD.c: 51:     LCD_Command(0xc0);
 11082                           	movlw	low(0C0h)
 11083  1E16  30C0               	fcall	_LCD_Command
 11084  1E17  160A  158A  2633  160A  158A  	line	52
 11085                           	
 11086                           l521:	
 11087  1E1C                     	return
 11088  1E1C  0008               	opt stack 0
 11089                           GLOBAL	__end_of_LCD_SecondLine
 11090                           	__end_of_LCD_SecondLine:
 11091  1E1D                     	signat	_LCD_SecondLine,89
 11092                           	global	_DisplayDay
 11093                           
 11094 ;; *************** function _DisplayDay *****************
 11095 ;; Defined at:
 11096 ;;		line 104 in file "main.c"
 11097 ;; Parameters:    Size  Location     Type
 11098 ;;		None
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;  Sunday          1   13[BANK0 ] PTR unsigned char 
 11101 ;;		 -> STR_7(7), 
 11102 ;;  Saturday        1   12[BANK0 ] PTR unsigned char 
 11103 ;;		 -> STR_6(9), 
 11104 ;;  Friday          1   11[BANK0 ] PTR unsigned char 
 11105 ;;		 -> STR_5(7), 
 11106 ;;  Thursday        1   10[BANK0 ] PTR unsigned char 
 11107 ;;		 -> STR_4(9), 
 11108 ;;  Wednesday       1    9[BANK0 ] PTR unsigned char 
 11109 ;;		 -> STR_3(10), 
 11110 ;;  Tuesday         1    8[BANK0 ] PTR unsigned char 
 11111 ;;		 -> STR_2(8), 
 11112 ;;  Monday          1    7[BANK0 ] PTR unsigned char 
 11113 ;;		 -> STR_1(7), 
 11114 ;; Return value:  Size  Location     Type
 11115 ;;                  1    wreg      void 
 11116 ;; Registers used:
 11117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11118 ;; Tracked objects:
 11119 ;;		On entry : 0/0
 11120 ;;		On exit  : 0/0
 11121 ;;		Unchanged: 0/0
 11122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11123 ;;      Params:         0       0       0       0       0
 11124 ;;      Locals:         0       7       0       0       0
 11125 ;;      Temps:          1       0       0       0       0
 11126 ;;      Totals:         1       7       0       0       0
 11127 ;;Total ram usage:        8 bytes
 11128 ;; Hardware stack levels used:    1
 11129 ;; Hardware stack levels required when called:    3
 11130 ;; This function calls:
 11131 ;;		_LCD_SendString
 11132 ;;		_RealTimeClock_get_day_of_week
 11133 ;; This function is called by:
 11134 ;;		_DateDayScreen
 11135 ;; This function uses a non-reentrant model
 11136 ;;
 11137                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 11138                           	file	"main.c"
 11139                           	line	104
 11140                           global __ptext33
 11141                           __ptext33:	;psect for function _DisplayDay
 11142  080B                     psect	text33
 11143                           	file	"main.c"
 11144                           	line	104
 11145                           	global	__size_of_DisplayDay
 11146                           	__size_of_DisplayDay	equ	__end_of_DisplayDay-_DisplayDay
 11147  00B1                     	
 11148                           _DisplayDay:	
 11149  080B                     ;incstack = 0
 11150                           	opt	stack 3
 11151                           ; Regs used in _DisplayDay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11152                           	line	107
 11153                           	
 11154                           l3596:	
 11155  080B                     ;main.c: 107:             break;
 11156                           	fcall	_RealTimeClock_get_day_of_week
 11157  080B  160A  158A  27BC  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 11158  0810  1283               	bcf	status, 6	;RP1=0, select bank0
 11159  0811  1303               	movf	(1+(?_RealTimeClock_get_day_of_week)),w
 11160  0812  0826               	bsf	status, 5	;RP0=1, select bank1
 11161  0813  1683               	bcf	status, 6	;RP1=0, select bank1
 11162  0814  1303               	movwf	(_day_of_week+1)^080h
 11163  0815  00ED               	bcf	status, 5	;RP0=0, select bank0
 11164  0816  1283               	bcf	status, 6	;RP1=0, select bank0
 11165  0817  1303               	movf	(0+(?_RealTimeClock_get_day_of_week)),w
 11166  0818  0825               	bsf	status, 5	;RP0=1, select bank1
 11167  0819  1683               	bcf	status, 6	;RP1=0, select bank1
 11168  081A  1303               	movwf	(_day_of_week)^080h
 11169  081B  00EC               	line	108
 11170                           	
 11171                           l3598:	
 11172  081C                     ;main.c: 108:         case 5:
 11173                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
 11174  081C  308E               	movwf	(??_DisplayDay+0)+0
 11175  081D  00FC               	movf	(??_DisplayDay+0)+0,w
 11176  081E  087C               	bcf	status, 5	;RP0=0, select bank0
 11177  081F  1283               	bcf	status, 6	;RP1=0, select bank0
 11178  0820  1303               	movwf	(DisplayDay@Monday)
 11179  0821  00A7               	line	109
 11180                           	
 11181                           l3600:	
 11182  0822                     ;main.c: 109:             LCD_SendString(Friday);
 11183                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
 11184  0822  3078               	movwf	(??_DisplayDay+0)+0
 11185  0823  00FC               	movf	(??_DisplayDay+0)+0,w
 11186  0824  087C               	movwf	(DisplayDay@Tuesday)
 11187  0825  00A8               	line	110
 11188                           	
 11189                           l3602:	
 11190  0826                     ;main.c: 110:             break;
 11191                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
 11192  0826  3041               	movwf	(??_DisplayDay+0)+0
 11193  0827  00FC               	movf	(??_DisplayDay+0)+0,w
 11194  0828  087C               	movwf	(DisplayDay@Wednesday)
 11195  0829  00A9               	line	111
 11196                           	
 11197                           l3604:	
 11198  082A                     ;main.c: 111:         case 6:
 11199                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
 11200  082A  306F               	movwf	(??_DisplayDay+0)+0
 11201  082B  00FC               	movf	(??_DisplayDay+0)+0,w
 11202  082C  087C               	movwf	(DisplayDay@Thursday)
 11203  082D  00AA               	line	112
 11204                           	
 11205                           l3606:	
 11206  082E                     ;main.c: 112:             LCD_SendString(Saturday);
 11207                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
 11208  082E  3087               	movwf	(??_DisplayDay+0)+0
 11209  082F  00FC               	movf	(??_DisplayDay+0)+0,w
 11210  0830  087C               	movwf	(DisplayDay@Friday)
 11211  0831  00AB               	line	113
 11212                           	
 11213                           l3608:	
 11214  0832                     ;main.c: 113:             break;
 11215                           	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
 11216  0832  3066               	movwf	(??_DisplayDay+0)+0
 11217  0833  00FC               	movf	(??_DisplayDay+0)+0,w
 11218  0834  087C               	movwf	(DisplayDay@Saturday)
 11219  0835  00AC               	line	114
 11220                           	
 11221                           l3610:	
 11222  0836                     ;main.c: 114:         case 7:
 11223                           	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
 11224  0836  3095               	movwf	(??_DisplayDay+0)+0
 11225  0837  00FC               	movf	(??_DisplayDay+0)+0,w
 11226  0838  087C               	movwf	(DisplayDay@Sunday)
 11227  0839  00AD               	line	116
 11228                           ;main.c: 116:             break;
 11229                           	goto	l3628
 11230  083A  289D               	line	118
 11231                           ;main.c: 117:     };main.c: 118: }
 11232                           	
 11233                           l110:	
 11234  083B                     	line	119
 11235                           	
 11236                           l3612:	
 11237  083B                     ;main.c: 119: 
 11238                           	bcf	status, 5	;RP0=0, select bank0
 11239  083B  1283               		movf	(DisplayDay@Monday),w
 11240  083C  0827               	movwf	(LCD_SendString@string)
 11241  083D  00F1               	movlw	0
 11242  083E  3000               	btfss	status,2
 11243  083F  1D03               	movlw	080h
 11244  0840  3080               	movwf	(LCD_SendString@string+1)
 11245  0841  00F2               
 11246                           	fcall	_LCD_SendString
 11247  0842  160A  118A  2365  120A  158A  	line	120
 11248                           ;main.c: 120: 
 11249                           	goto	l118
 11250  0847  28BB               	line	121
 11251                           ;main.c: 121: void DisplayTemp(char* tempBuffer)
 11252                           	
 11253                           l112:	
 11254  0848                     	line	122
 11255                           	
 11256                           l3614:	
 11257  0848                     ;main.c: 122: {
 11258                           	bcf	status, 5	;RP0=0, select bank0
 11259  0848  1283               	bcf	status, 6	;RP1=0, select bank0
 11260  0849  1303               		movf	(DisplayDay@Tuesday),w
 11261  084A  0828               	movwf	(LCD_SendString@string)
 11262  084B  00F1               	movlw	0
 11263  084C  3000               	btfss	status,2
 11264  084D  1D03               	movlw	080h
 11265  084E  3080               	movwf	(LCD_SendString@string+1)
 11266  084F  00F2               
 11267                           	fcall	_LCD_SendString
 11268  0850  160A  118A  2365  120A  158A  	line	123
 11269                           ;main.c: 123: 
 11270                           	goto	l118
 11271  0855  28BB               	line	124
 11272                           ;main.c: 124:     Get_Temp(tempBuffer);
 11273                           	
 11274                           l113:	
 11275  0856                     	line	125
 11276                           	
 11277                           l3616:	
 11278  0856                     ;main.c: 125: 
 11279                           	bcf	status, 5	;RP0=0, select bank0
 11280  0856  1283               	bcf	status, 6	;RP1=0, select bank0
 11281  0857  1303               		movf	(DisplayDay@Wednesday),w
 11282  0858  0829               	movwf	(LCD_SendString@string)
 11283  0859  00F1               	movlw	0
 11284  085A  3000               	btfss	status,2
 11285  085B  1D03               	movlw	080h
 11286  085C  3080               	movwf	(LCD_SendString@string+1)
 11287  085D  00F2               
 11288                           	fcall	_LCD_SendString
 11289  085E  160A  118A  2365  120A  158A  	line	126
 11290                           ;main.c: 126:     LCD_SendString(tempBuffer);
 11291                           	goto	l118
 11292  0863  28BB               	line	127
 11293                           ;main.c: 127: 
 11294                           	
 11295                           l114:	
 11296  0864                     	line	128
 11297                           	
 11298                           l3618:	
 11299  0864                     ;main.c: 128:     LCD_SendData(0xDF);
 11300                           	bcf	status, 5	;RP0=0, select bank0
 11301  0864  1283               	bcf	status, 6	;RP1=0, select bank0
 11302  0865  1303               		movf	(DisplayDay@Thursday),w
 11303  0866  082A               	movwf	(LCD_SendString@string)
 11304  0867  00F1               	movlw	0
 11305  0868  3000               	btfss	status,2
 11306  0869  1D03               	movlw	080h
 11307  086A  3080               	movwf	(LCD_SendString@string+1)
 11308  086B  00F2               
 11309                           	fcall	_LCD_SendString
 11310  086C  160A  118A  2365  120A  158A  	line	129
 11311                           ;main.c: 129:     LCD_Busy();
 11312                           	goto	l118
 11313  0871  28BB               	line	130
 11314                           ;main.c: 130: 
 11315                           	
 11316                           l115:	
 11317  0872                     	line	131
 11318                           	
 11319                           l3620:	
 11320  0872                     ;main.c: 131:     LCD_SendData('C');
 11321                           	bcf	status, 5	;RP0=0, select bank0
 11322  0872  1283               	bcf	status, 6	;RP1=0, select bank0
 11323  0873  1303               		movf	(DisplayDay@Friday),w
 11324  0874  082B               	movwf	(LCD_SendString@string)
 11325  0875  00F1               	movlw	0
 11326  0876  3000               	btfss	status,2
 11327  0877  1D03               	movlw	080h
 11328  0878  3080               	movwf	(LCD_SendString@string+1)
 11329  0879  00F2               
 11330                           	fcall	_LCD_SendString
 11331  087A  160A  118A  2365  120A  158A  	line	132
 11332                           ;main.c: 132: }
 11333                           	goto	l118
 11334  087F  28BB               	line	133
 11335                           ;main.c: 133: 
 11336                           	
 11337                           l116:	
 11338  0880                     	line	134
 11339                           	
 11340                           l3622:	
 11341  0880                     ;main.c: 134: 
 11342                           	bcf	status, 5	;RP0=0, select bank0
 11343  0880  1283               	bcf	status, 6	;RP1=0, select bank0
 11344  0881  1303               		movf	(DisplayDay@Saturday),w
 11345  0882  082C               	movwf	(LCD_SendString@string)
 11346  0883  00F1               	movlw	0
 11347  0884  3000               	btfss	status,2
 11348  0885  1D03               	movlw	080h
 11349  0886  3080               	movwf	(LCD_SendString@string+1)
 11350  0887  00F2               
 11351                           	fcall	_LCD_SendString
 11352  0888  160A  118A  2365  120A  158A  	line	135
 11353                           ;main.c: 135: void MainScreen(void)
 11354                           	goto	l118
 11355  088D  28BB               	line	136
 11356                           ;main.c: 136: {
 11357                           	
 11358                           l117:	
 11359  088E                     	line	137
 11360                           	
 11361                           l3624:	
 11362  088E                     ;main.c: 137: 
 11363                           	bcf	status, 5	;RP0=0, select bank0
 11364  088E  1283               	bcf	status, 6	;RP1=0, select bank0
 11365  088F  1303               		movf	(DisplayDay@Sunday),w
 11366  0890  082D               	movwf	(LCD_SendString@string)
 11367  0891  00F1               	movlw	0
 11368  0892  3000               	btfss	status,2
 11369  0893  1D03               	movlw	080h
 11370  0894  3080               	movwf	(LCD_SendString@string+1)
 11371  0895  00F2               
 11372                           	fcall	_LCD_SendString
 11373  0896  160A  118A  2365  120A  158A  	line	138
 11374                           ;main.c: 138:     char* Time = "Time:";
 11375                           	goto	l118
 11376  089B  28BB               	line	139
 11377                           	
 11378                           l3626:	
 11379  089C                     ;main.c: 139:     char* Temp = "Temp:";
 11380                           	goto	l118
 11381  089C  28BB               	
 11382                           l109:	
 11383  089D                     	
 11384                           l3628:	
 11385  089D                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 11386                           ; Switch size 1, requested type "space"
 11387                           ; Number of cases is 1, Range of values is 0 to 0
 11388                           ; switch strategies available:
 11389                           ; Name         Instructions Cycles
 11390                           ; simple_byte            4     3 (average)
 11391                           ; direct_byte           11     8 (fixed)
 11392                           ; jumptable            260     6 (fixed)
 11393                           ;	Chosen strategy is simple_byte
 11394                           
 11395                           	bsf	status, 5	;RP0=1, select bank1
 11396  089D  1683               	bcf	status, 6	;RP1=0, select bank1
 11397  089E  1303               	movf (_day_of_week+1)^080h,w
 11398  089F  086D               	opt asmopt_push
 11399                           	opt asmopt_off
 11400                           	xorlw	0^0	; case 0
 11401  08A0  3A00               	skipnz
 11402  08A1  1903               	goto	l4378
 11403  08A2  28A4               	goto	l118
 11404  08A3  28BB               	opt asmopt_pop
 11405                           	
 11406                           l4378:	
 11407  08A4                     ; Switch size 1, requested type "space"
 11408                           ; Number of cases is 7, Range of values is 1 to 7
 11409                           ; switch strategies available:
 11410                           ; Name         Instructions Cycles
 11411                           ; simple_byte           22    12 (average)
 11412                           ; direct_byte           32    11 (fixed)
 11413                           ; jumptable            263     9 (fixed)
 11414                           ;	Chosen strategy is simple_byte
 11415                           
 11416                           	movf (_day_of_week)^080h,w
 11417  08A4  086C               	opt asmopt_push
 11418                           	opt asmopt_off
 11419                           	xorlw	1^0	; case 1
 11420  08A5  3A01               	skipnz
 11421  08A6  1903               	goto	l3612
 11422  08A7  283B               	xorlw	2^1	; case 2
 11423  08A8  3A03               	skipnz
 11424  08A9  1903               	goto	l3614
 11425  08AA  2848               	xorlw	3^2	; case 3
 11426  08AB  3A01               	skipnz
 11427  08AC  1903               	goto	l3616
 11428  08AD  2856               	xorlw	4^3	; case 4
 11429  08AE  3A07               	skipnz
 11430  08AF  1903               	goto	l3618
 11431  08B0  2864               	xorlw	5^4	; case 5
 11432  08B1  3A01               	skipnz
 11433  08B2  1903               	goto	l3620
 11434  08B3  2872               	xorlw	6^5	; case 6
 11435  08B4  3A03               	skipnz
 11436  08B5  1903               	goto	l3622
 11437  08B6  2880               	xorlw	7^6	; case 7
 11438  08B7  3A01               	skipnz
 11439  08B8  1903               	goto	l3624
 11440  08B9  288E               	goto	l118
 11441  08BA  28BB               	opt asmopt_pop
 11442                           
 11443                           	
 11444                           l111:	
 11445  08BB                     	line	140
 11446                           	
 11447                           l118:	
 11448  08BB                     	return
 11449  08BB  0008               	opt stack 0
 11450                           GLOBAL	__end_of_DisplayDay
 11451                           	__end_of_DisplayDay:
 11452  08BC                     	signat	_DisplayDay,89
 11453                           	global	_RealTimeClock_get_day_of_week
 11454                           
 11455 ;; *************** function _RealTimeClock_get_day_of_week *****************
 11456 ;; Defined at:
 11457 ;;		line 128 in file "realtimeclock.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;		None
 11460 ;; Auto vars:     Size  Location     Type
 11461 ;;  c               1   11[COMMON] unsigned char 
 11462 ;; Return value:  Size  Location     Type
 11463 ;;                  2    5[BANK0 ] int 
 11464 ;; Registers used:
 11465 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11466 ;; Tracked objects:
 11467 ;;		On entry : 0/0
 11468 ;;		On exit  : 0/0
 11469 ;;		Unchanged: 0/0
 11470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11471 ;;      Params:         0       2       0       0       0
 11472 ;;      Locals:         1       0       0       0       0
 11473 ;;      Temps:          1       0       0       0       0
 11474 ;;      Totals:         2       2       0       0       0
 11475 ;;Total ram usage:        4 bytes
 11476 ;; Hardware stack levels used:    1
 11477 ;; Hardware stack levels required when called:    2
 11478 ;; This function calls:
 11479 ;;		_RealTimeClock_read_byte
 11480 ;;		_RealTimeClock_write_byte
 11481 ;;		___hex_to_int
 11482 ;; This function is called by:
 11483 ;;		_DisplayDay
 11484 ;;		_SetDate
 11485 ;;		_main
 11486 ;; This function uses a non-reentrant model
 11487 ;;
 11488                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 11489                           	file	"realtimeclock.c"
 11490                           	line	128
 11491                           global __ptext34
 11492                           __ptext34:	;psect for function _RealTimeClock_get_day_of_week
 11493  1FBC                     psect	text34
 11494                           	file	"realtimeclock.c"
 11495                           	line	128
 11496                           	global	__size_of_RealTimeClock_get_day_of_week
 11497                           	__size_of_RealTimeClock_get_day_of_week	equ	__end_of_RealTimeClock_get_day_of_week-_Rea
                                 lTimeClock_get_day_of_week
 11498  0022                     	
 11499                           _RealTimeClock_get_day_of_week:	
 11500  1FBC                     ;incstack = 0
 11501                           	opt	stack 4
 11502                           ; Regs used in _RealTimeClock_get_day_of_week: [wreg+status,2+status,0+btemp+1+pclath+cs
                                 tack]
 11503                           	line	129
 11504                           	
 11505                           l3410:	
 11506  1FBC                     ;realtimeclock.c: 129:     RB5 = 1;
 11507                           	bcf	status, 5	;RP0=0, select bank0
 11508  1FBC  1283               	bcf	status, 6	;RP1=0, select bank0
 11509  1FBD  1303               	bsf	(53/8),(53)&7	;volatile
 11510  1FBE  1686               	line	130
 11511                           	
 11512                           l3412:	
 11513  1FBF                     ;realtimeclock.c: 130:     RealTimeClock_write_byte(0x8b);
 11514                           	movlw	low(08Bh)
 11515  1FBF  308B               	fcall	_RealTimeClock_write_byte
 11516  1FC0  160A  118A  21ED  160A  158A  	line	131
 11517                           ;realtimeclock.c: 131:     unsigned char c = RealTimeClock_read_byte();
 11518                           	fcall	_RealTimeClock_read_byte
 11519  1FC5  160A  118A  2431  160A  158A  	movwf	(??_RealTimeClock_get_day_of_week+0)+0
 11520  1FCA  00FA               	movf	(??_RealTimeClock_get_day_of_week+0)+0,w
 11521  1FCB  087A               	movwf	(RealTimeClock_get_day_of_week@c)
 11522  1FCC  00FB               	line	132
 11523                           	
 11524                           l3414:	
 11525  1FCD                     ;realtimeclock.c: 132:     RB5 = 0;
 11526                           	bcf	status, 5	;RP0=0, select bank0
 11527  1FCD  1283               	bcf	status, 6	;RP1=0, select bank0
 11528  1FCE  1303               	bcf	(53/8),(53)&7	;volatile
 11529  1FCF  1286               	line	133
 11530                           	
 11531                           l3416:	
 11532  1FD0                     ;realtimeclock.c: 133:     return __hex_to_int(c);
 11533                           	movf	(RealTimeClock_get_day_of_week@c),w
 11534  1FD0  087B               	fcall	___hex_to_int
 11535  1FD1  160A  118A  24C3  160A  158A  	movf	(1+(?___hex_to_int)),w
 11536  1FD6  0878               	bcf	status, 5	;RP0=0, select bank0
 11537  1FD7  1283               	bcf	status, 6	;RP1=0, select bank0
 11538  1FD8  1303               	movwf	(?_RealTimeClock_get_day_of_week+1)
 11539  1FD9  00A6               	movf	(0+(?___hex_to_int)),w
 11540  1FDA  0877               	movwf	(?_RealTimeClock_get_day_of_week)
 11541  1FDB  00A5               	goto	l368
 11542  1FDC  2FDD               	
 11543                           l3418:	
 11544  1FDD                     	line	134
 11545                           	
 11546                           l368:	
 11547  1FDD                     	return
 11548  1FDD  0008               	opt stack 0
 11549                           GLOBAL	__end_of_RealTimeClock_get_day_of_week
 11550                           	__end_of_RealTimeClock_get_day_of_week:
 11551  1FDE                     	signat	_RealTimeClock_get_day_of_week,90
 11552                           	global	_DisplayDate
 11553                           
 11554 ;; *************** function _DisplayDate *****************
 11555 ;; Defined at:
 11556 ;;		line 85 in file "main.c"
 11557 ;; Parameters:    Size  Location     Type
 11558 ;;		None
 11559 ;; Auto vars:     Size  Location     Type
 11560 ;;  year            2   11[BANK0 ] int 
 11561 ;;  day             2    9[BANK0 ] int 
 11562 ;;  month           2    7[BANK0 ] int 
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  1    wreg      void 
 11565 ;; Registers used:
 11566 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11567 ;; Tracked objects:
 11568 ;;		On entry : 0/0
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11572 ;;      Params:         0       0       0       0       0
 11573 ;;      Locals:         0       6       0       0       0
 11574 ;;      Temps:          1       0       0       0       0
 11575 ;;      Totals:         1       6       0       0       0
 11576 ;;Total ram usage:        7 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; Hardware stack levels required when called:    3
 11579 ;; This function calls:
 11580 ;;		_RealTimeClock_get_day_of_month
 11581 ;;		_RealTimeClock_get_month
 11582 ;;		_RealTimeClock_get_year
 11583 ;;		___awdiv
 11584 ;;		___awmod
 11585 ;; This function is called by:
 11586 ;;		_DateDayScreen
 11587 ;; This function uses a non-reentrant model
 11588 ;;
 11589                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
 11590                           	file	"main.c"
 11591                           	line	85
 11592                           global __ptext35
 11593                           __ptext35:	;psect for function _DisplayDate
 11594  0008                     psect	text35
 11595                           	file	"main.c"
 11596                           	line	85
 11597                           	global	__size_of_DisplayDate
 11598                           	__size_of_DisplayDate	equ	__end_of_DisplayDate-_DisplayDate
 11599  00DD                     	
 11600                           _DisplayDate:	
 11601  0008                     ;incstack = 0
 11602                           	opt	stack 3
 11603                           ; Regs used in _DisplayDate: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 11604                           	line	88
 11605                           	
 11606                           l3576:	
 11607  0008                     ;main.c: 88:     char* Wednesday = ("Wednesday");
 11608                           	fcall	_RealTimeClock_get_month
 11609  0008  160A  158A  2778  120A  118A  	bcf	status, 5	;RP0=0, select bank0
 11610  000D  1283               	bcf	status, 6	;RP1=0, select bank0
 11611  000E  1303               	movf	(1+(?_RealTimeClock_get_month)),w
 11612  000F  0826               	movwf	(DisplayDate@month+1)
 11613  0010  00A8               	movf	(0+(?_RealTimeClock_get_month)),w
 11614  0011  0825               	movwf	(DisplayDate@month)
 11615  0012  00A7               	line	89
 11616                           ;main.c: 89:     char* Thursday = ("Thursday");
 11617                           	fcall	_RealTimeClock_get_day_of_month
 11618  0013  160A  158A  2756  120A  118A  	bcf	status, 5	;RP0=0, select bank0
 11619  0018  1283               	bcf	status, 6	;RP1=0, select bank0
 11620  0019  1303               	movf	(1+(?_RealTimeClock_get_day_of_month)),w
 11621  001A  0826               	movwf	(DisplayDate@day+1)
 11622  001B  00AA               	movf	(0+(?_RealTimeClock_get_day_of_month)),w
 11623  001C  0825               	movwf	(DisplayDate@day)
 11624  001D  00A9               	line	90
 11625                           ;main.c: 90:     char* Friday = ("Friday");
 11626                           	fcall	_RealTimeClock_get_year
 11627  001E  160A  158A  279A  120A  118A  	bcf	status, 5	;RP0=0, select bank0
 11628  0023  1283               	bcf	status, 6	;RP1=0, select bank0
 11629  0024  1303               	movf	(1+(?_RealTimeClock_get_year)),w
 11630  0025  0826               	movwf	(DisplayDate@year+1)
 11631  0026  00AC               	movf	(0+(?_RealTimeClock_get_year)),w
 11632  0027  0825               	movwf	(DisplayDate@year)
 11633  0028  00AB               	line	92
 11634                           	
 11635                           l3578:	
 11636  0029                     ;main.c: 92:     char* Sunday = ("Sunday");
 11637                           	movlw	0Ah
 11638  0029  300A               	movwf	(___awmod@divisor)
 11639  002A  00F0               	movlw	0
 11640  002B  3000               	movwf	((___awmod@divisor))+1
 11641  002C  00F1               	movf	(DisplayDate@month+1),w
 11642  002D  0828               	movwf	(___awmod@dividend+1)
 11643  002E  00F3               	movf	(DisplayDate@month),w
 11644  002F  0827               	movwf	(___awmod@dividend)
 11645  0030  00F2               	fcall	___awmod
 11646  0031  160A  118A  2567  120A  118A  	movf	(0+(?___awmod)),w
 11647  0036  0870               	addlw	030h
 11648  0037  3E30               	movwf	(??_DisplayDate+0)+0
 11649  0038  00FC               	movf	(??_DisplayDate+0)+0,w
 11650  0039  087C               	bsf	status, 5	;RP0=1, select bank1
 11651  003A  1683               	bcf	status, 6	;RP1=0, select bank1
 11652  003B  1303               	movwf	0+(_dateDisplayer)^080h+01h
 11653  003C  00B4               	line	93
 11654                           	
 11655                           l3580:	
 11656  003D                     ;main.c: 93: 
 11657                           	movlw	0Ah
 11658  003D  300A               	movwf	(___awdiv@divisor)
 11659  003E  00F0               	movlw	0
 11660  003F  3000               	movwf	((___awdiv@divisor))+1
 11661  0040  00F1               	bcf	status, 5	;RP0=0, select bank0
 11662  0041  1283               	bcf	status, 6	;RP1=0, select bank0
 11663  0042  1303               	movf	(DisplayDate@month+1),w
 11664  0043  0828               	movwf	(___awdiv@dividend+1)
 11665  0044  00F3               	movf	(DisplayDate@month),w
 11666  0045  0827               	movwf	(___awdiv@dividend)
 11667  0046  00F2               	fcall	___awdiv
 11668  0047  160A  118A  25CA  120A  118A  	movf	(1+(?___awdiv)),w
 11669  004C  0871               	bcf	status, 5	;RP0=0, select bank0
 11670  004D  1283               	bcf	status, 6	;RP1=0, select bank0
 11671  004E  1303               	movwf	(DisplayDate@month+1)
 11672  004F  00A8               	movf	(0+(?___awdiv)),w
 11673  0050  0870               	movwf	(DisplayDate@month)
 11674  0051  00A7               	line	94
 11675                           	
 11676                           l3582:	
 11677  0052                     ;main.c: 94:     switch(day_of_week)
 11678                           	movlw	0Ah
 11679  0052  300A               	movwf	(___awmod@divisor)
 11680  0053  00F0               	movlw	0
 11681  0054  3000               	movwf	((___awmod@divisor))+1
 11682  0055  00F1               	movf	(DisplayDate@month+1),w
 11683  0056  0828               	movwf	(___awmod@dividend+1)
 11684  0057  00F3               	movf	(DisplayDate@month),w
 11685  0058  0827               	movwf	(___awmod@dividend)
 11686  0059  00F2               	fcall	___awmod
 11687  005A  160A  118A  2567  120A  118A  	movf	(0+(?___awmod)),w
 11688  005F  0870               	addlw	030h
 11689  0060  3E30               	movwf	(??_DisplayDate+0)+0
 11690  0061  00FC               	movf	(??_DisplayDate+0)+0,w
 11691  0062  087C               	bsf	status, 5	;RP0=1, select bank1
 11692  0063  1683               	bcf	status, 6	;RP1=0, select bank1
 11693  0064  1303               	movwf	(_dateDisplayer)^080h
 11694  0065  00B3               	line	95
 11695                           	
 11696                           l3584:	
 11697  0066                     ;main.c: 95:     {
 11698                           	movlw	0Ah
 11699  0066  300A               	movwf	(___awmod@divisor)
 11700  0067  00F0               	movlw	0
 11701  0068  3000               	movwf	((___awmod@divisor))+1
 11702  0069  00F1               	bcf	status, 5	;RP0=0, select bank0
 11703  006A  1283               	bcf	status, 6	;RP1=0, select bank0
 11704  006B  1303               	movf	(DisplayDate@day+1),w
 11705  006C  082A               	movwf	(___awmod@dividend+1)
 11706  006D  00F3               	movf	(DisplayDate@day),w
 11707  006E  0829               	movwf	(___awmod@dividend)
 11708  006F  00F2               	fcall	___awmod
 11709  0070  160A  118A  2567  120A  118A  	movf	(0+(?___awmod)),w
 11710  0075  0870               	addlw	030h
 11711  0076  3E30               	movwf	(??_DisplayDate+0)+0
 11712  0077  00FC               	movf	(??_DisplayDate+0)+0,w
 11713  0078  087C               	bsf	status, 5	;RP0=1, select bank1
 11714  0079  1683               	bcf	status, 6	;RP1=0, select bank1
 11715  007A  1303               	movwf	0+(_dateDisplayer)^080h+03h
 11716  007B  00B6               	line	96
 11717                           	
 11718                           l3586:	
 11719  007C                     ;main.c: 96:         case 1:
 11720                           	movlw	0Ah
 11721  007C  300A               	movwf	(___awdiv@divisor)
 11722  007D  00F0               	movlw	0
 11723  007E  3000               	movwf	((___awdiv@divisor))+1
 11724  007F  00F1               	bcf	status, 5	;RP0=0, select bank0
 11725  0080  1283               	bcf	status, 6	;RP1=0, select bank0
 11726  0081  1303               	movf	(DisplayDate@day+1),w
 11727  0082  082A               	movwf	(___awdiv@dividend+1)
 11728  0083  00F3               	movf	(DisplayDate@day),w
 11729  0084  0829               	movwf	(___awdiv@dividend)
 11730  0085  00F2               	fcall	___awdiv
 11731  0086  160A  118A  25CA  120A  118A  	movf	(1+(?___awdiv)),w
 11732  008B  0871               	bcf	status, 5	;RP0=0, select bank0
 11733  008C  1283               	bcf	status, 6	;RP1=0, select bank0
 11734  008D  1303               	movwf	(DisplayDate@day+1)
 11735  008E  00AA               	movf	(0+(?___awdiv)),w
 11736  008F  0870               	movwf	(DisplayDate@day)
 11737  0090  00A9               	line	97
 11738                           	
 11739                           l3588:	
 11740  0091                     ;main.c: 97:             LCD_SendString(Monday);
 11741                           	movlw	0Ah
 11742  0091  300A               	movwf	(___awmod@divisor)
 11743  0092  00F0               	movlw	0
 11744  0093  3000               	movwf	((___awmod@divisor))+1
 11745  0094  00F1               	movf	(DisplayDate@day+1),w
 11746  0095  082A               	movwf	(___awmod@dividend+1)
 11747  0096  00F3               	movf	(DisplayDate@day),w
 11748  0097  0829               	movwf	(___awmod@dividend)
 11749  0098  00F2               	fcall	___awmod
 11750  0099  160A  118A  2567  120A  118A  	movf	(0+(?___awmod)),w
 11751  009E  0870               	addlw	030h
 11752  009F  3E30               	movwf	(??_DisplayDate+0)+0
 11753  00A0  00FC               	movf	(??_DisplayDate+0)+0,w
 11754  00A1  087C               	bsf	status, 5	;RP0=1, select bank1
 11755  00A2  1683               	bcf	status, 6	;RP1=0, select bank1
 11756  00A3  1303               	movwf	0+(_dateDisplayer)^080h+04h
 11757  00A4  00B7               	line	98
 11758                           	
 11759                           l3590:	
 11760  00A5                     ;main.c: 98:             break;
 11761                           	movlw	0Ah
 11762  00A5  300A               	movwf	(___awmod@divisor)
 11763  00A6  00F0               	movlw	0
 11764  00A7  3000               	movwf	((___awmod@divisor))+1
 11765  00A8  00F1               	bcf	status, 5	;RP0=0, select bank0
 11766  00A9  1283               	bcf	status, 6	;RP1=0, select bank0
 11767  00AA  1303               	movf	(DisplayDate@year+1),w
 11768  00AB  082C               	movwf	(___awmod@dividend+1)
 11769  00AC  00F3               	movf	(DisplayDate@year),w
 11770  00AD  082B               	movwf	(___awmod@dividend)
 11771  00AE  00F2               	fcall	___awmod
 11772  00AF  160A  118A  2567  120A  118A  	movf	(0+(?___awmod)),w
 11773  00B4  0870               	addlw	030h
 11774  00B5  3E30               	movwf	(??_DisplayDate+0)+0
 11775  00B6  00FC               	movf	(??_DisplayDate+0)+0,w
 11776  00B7  087C               	bsf	status, 5	;RP0=1, select bank1
 11777  00B8  1683               	bcf	status, 6	;RP1=0, select bank1
 11778  00B9  1303               	movwf	0+(_dateDisplayer)^080h+07h
 11779  00BA  00BA               	line	99
 11780                           	
 11781                           l3592:	
 11782  00BB                     ;main.c: 99:         case 2:
 11783                           	movlw	0Ah
 11784  00BB  300A               	movwf	(___awdiv@divisor)
 11785  00BC  00F0               	movlw	0
 11786  00BD  3000               	movwf	((___awdiv@divisor))+1
 11787  00BE  00F1               	bcf	status, 5	;RP0=0, select bank0
 11788  00BF  1283               	bcf	status, 6	;RP1=0, select bank0
 11789  00C0  1303               	movf	(DisplayDate@year+1),w
 11790  00C1  082C               	movwf	(___awdiv@dividend+1)
 11791  00C2  00F3               	movf	(DisplayDate@year),w
 11792  00C3  082B               	movwf	(___awdiv@dividend)
 11793  00C4  00F2               	fcall	___awdiv
 11794  00C5  160A  118A  25CA  120A  118A  	movf	(1+(?___awdiv)),w
 11795  00CA  0871               	bcf	status, 5	;RP0=0, select bank0
 11796  00CB  1283               	bcf	status, 6	;RP1=0, select bank0
 11797  00CC  1303               	movwf	(DisplayDate@year+1)
 11798  00CD  00AC               	movf	(0+(?___awdiv)),w
 11799  00CE  0870               	movwf	(DisplayDate@year)
 11800  00CF  00AB               	line	100
 11801                           	
 11802                           l3594:	
 11803  00D0                     ;main.c: 100:             LCD_SendString(Tuesday);
 11804                           	movlw	0Ah
 11805  00D0  300A               	movwf	(___awmod@divisor)
 11806  00D1  00F0               	movlw	0
 11807  00D2  3000               	movwf	((___awmod@divisor))+1
 11808  00D3  00F1               	movf	(DisplayDate@year+1),w
 11809  00D4  082C               	movwf	(___awmod@dividend+1)
 11810  00D5  00F3               	movf	(DisplayDate@year),w
 11811  00D6  082B               	movwf	(___awmod@dividend)
 11812  00D7  00F2               	fcall	___awmod
 11813  00D8  160A  118A  2567  120A  118A  	movf	(0+(?___awmod)),w
 11814  00DD  0870               	addlw	030h
 11815  00DE  3E30               	movwf	(??_DisplayDate+0)+0
 11816  00DF  00FC               	movf	(??_DisplayDate+0)+0,w
 11817  00E0  087C               	bsf	status, 5	;RP0=1, select bank1
 11818  00E1  1683               	bcf	status, 6	;RP1=0, select bank1
 11819  00E2  1303               	movwf	0+(_dateDisplayer)^080h+06h
 11820  00E3  00B9               	line	101
 11821                           	
 11822                           l106:	
 11823  00E4                     	return
 11824  00E4  0008               	opt stack 0
 11825                           GLOBAL	__end_of_DisplayDate
 11826                           	__end_of_DisplayDate:
 11827  00E5                     	signat	_DisplayDate,89
 11828                           	global	_RealTimeClock_get_year
 11829                           
 11830 ;; *************** function _RealTimeClock_get_year *****************
 11831 ;; Defined at:
 11832 ;;		line 136 in file "realtimeclock.c"
 11833 ;; Parameters:    Size  Location     Type
 11834 ;;		None
 11835 ;; Auto vars:     Size  Location     Type
 11836 ;;  c               1   11[COMMON] unsigned char 
 11837 ;; Return value:  Size  Location     Type
 11838 ;;                  2    5[BANK0 ] int 
 11839 ;; Registers used:
 11840 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11841 ;; Tracked objects:
 11842 ;;		On entry : 0/0
 11843 ;;		On exit  : 0/0
 11844 ;;		Unchanged: 0/0
 11845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11846 ;;      Params:         0       2       0       0       0
 11847 ;;      Locals:         1       0       0       0       0
 11848 ;;      Temps:          1       0       0       0       0
 11849 ;;      Totals:         2       2       0       0       0
 11850 ;;Total ram usage:        4 bytes
 11851 ;; Hardware stack levels used:    1
 11852 ;; Hardware stack levels required when called:    2
 11853 ;; This function calls:
 11854 ;;		_RealTimeClock_read_byte
 11855 ;;		_RealTimeClock_write_byte
 11856 ;;		___hex_to_int
 11857 ;; This function is called by:
 11858 ;;		_DisplayDate
 11859 ;; This function uses a non-reentrant model
 11860 ;;
 11861                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 11862                           	file	"realtimeclock.c"
 11863                           	line	136
 11864                           global __ptext36
 11865                           __ptext36:	;psect for function _RealTimeClock_get_year
 11866  1F9A                     psect	text36
 11867                           	file	"realtimeclock.c"
 11868                           	line	136
 11869                           	global	__size_of_RealTimeClock_get_year
 11870                           	__size_of_RealTimeClock_get_year	equ	__end_of_RealTimeClock_get_year-_RealTimeClock_get
                                 _year
 11871  0022                     	
 11872                           _RealTimeClock_get_year:	
 11873  1F9A                     ;incstack = 0
 11874                           	opt	stack 3
 11875                           ; Regs used in _RealTimeClock_get_year: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 11876                           	line	137
 11877                           	
 11878                           l3400:	
 11879  1F9A                     ;realtimeclock.c: 137:     RB5 = 1;
 11880                           	bcf	status, 5	;RP0=0, select bank0
 11881  1F9A  1283               	bcf	status, 6	;RP1=0, select bank0
 11882  1F9B  1303               	bsf	(53/8),(53)&7	;volatile
 11883  1F9C  1686               	line	138
 11884                           	
 11885                           l3402:	
 11886  1F9D                     ;realtimeclock.c: 138:     RealTimeClock_write_byte(0x8d);
 11887                           	movlw	low(08Dh)
 11888  1F9D  308D               	fcall	_RealTimeClock_write_byte
 11889  1F9E  160A  118A  21ED  160A  158A  	line	139
 11890                           ;realtimeclock.c: 139:     unsigned char c = RealTimeClock_read_byte();
 11891                           	fcall	_RealTimeClock_read_byte
 11892  1FA3  160A  118A  2431  160A  158A  	movwf	(??_RealTimeClock_get_year+0)+0
 11893  1FA8  00FA               	movf	(??_RealTimeClock_get_year+0)+0,w
 11894  1FA9  087A               	movwf	(RealTimeClock_get_year@c)
 11895  1FAA  00FB               	line	140
 11896                           	
 11897                           l3404:	
 11898  1FAB                     ;realtimeclock.c: 140:     RB5 = 0;
 11899                           	bcf	status, 5	;RP0=0, select bank0
 11900  1FAB  1283               	bcf	status, 6	;RP1=0, select bank0
 11901  1FAC  1303               	bcf	(53/8),(53)&7	;volatile
 11902  1FAD  1286               	line	141
 11903                           	
 11904                           l3406:	
 11905  1FAE                     ;realtimeclock.c: 141:     return __hex_to_int(c);
 11906                           	movf	(RealTimeClock_get_year@c),w
 11907  1FAE  087B               	fcall	___hex_to_int
 11908  1FAF  160A  118A  24C3  160A  158A  	movf	(1+(?___hex_to_int)),w
 11909  1FB4  0878               	bcf	status, 5	;RP0=0, select bank0
 11910  1FB5  1283               	bcf	status, 6	;RP1=0, select bank0
 11911  1FB6  1303               	movwf	(?_RealTimeClock_get_year+1)
 11912  1FB7  00A6               	movf	(0+(?___hex_to_int)),w
 11913  1FB8  0877               	movwf	(?_RealTimeClock_get_year)
 11914  1FB9  00A5               	goto	l371
 11915  1FBA  2FBB               	
 11916                           l3408:	
 11917  1FBB                     	line	142
 11918                           	
 11919                           l371:	
 11920  1FBB                     	return
 11921  1FBB  0008               	opt stack 0
 11922                           GLOBAL	__end_of_RealTimeClock_get_year
 11923                           	__end_of_RealTimeClock_get_year:
 11924  1FBC                     	signat	_RealTimeClock_get_year,90
 11925                           	global	_RealTimeClock_get_month
 11926                           
 11927 ;; *************** function _RealTimeClock_get_month *****************
 11928 ;; Defined at:
 11929 ;;		line 120 in file "realtimeclock.c"
 11930 ;; Parameters:    Size  Location     Type
 11931 ;;		None
 11932 ;; Auto vars:     Size  Location     Type
 11933 ;;  c               1   11[COMMON] unsigned char 
 11934 ;; Return value:  Size  Location     Type
 11935 ;;                  2    5[BANK0 ] int 
 11936 ;; Registers used:
 11937 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11938 ;; Tracked objects:
 11939 ;;		On entry : 0/0
 11940 ;;		On exit  : 0/0
 11941 ;;		Unchanged: 0/0
 11942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11943 ;;      Params:         0       2       0       0       0
 11944 ;;      Locals:         1       0       0       0       0
 11945 ;;      Temps:          1       0       0       0       0
 11946 ;;      Totals:         2       2       0       0       0
 11947 ;;Total ram usage:        4 bytes
 11948 ;; Hardware stack levels used:    1
 11949 ;; Hardware stack levels required when called:    2
 11950 ;; This function calls:
 11951 ;;		_RealTimeClock_read_byte
 11952 ;;		_RealTimeClock_write_byte
 11953 ;;		___hex_to_int
 11954 ;; This function is called by:
 11955 ;;		_DisplayDate
 11956 ;; This function uses a non-reentrant model
 11957 ;;
 11958                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
 11959                           	line	120
 11960                           global __ptext37
 11961                           __ptext37:	;psect for function _RealTimeClock_get_month
 11962  1F78                     psect	text37
 11963                           	file	"realtimeclock.c"
 11964                           	line	120
 11965                           	global	__size_of_RealTimeClock_get_month
 11966                           	__size_of_RealTimeClock_get_month	equ	__end_of_RealTimeClock_get_month-_RealTimeClock_g
                                 et_month
 11967  0022                     	
 11968                           _RealTimeClock_get_month:	
 11969  1F78                     ;incstack = 0
 11970                           	opt	stack 3
 11971                           ; Regs used in _RealTimeClock_get_month: [wreg+status,2+status,0+btemp+1+pclath+cstack]

 11972                           	line	121
 11973                           	
 11974                           l3380:	
 11975  1F78                     ;realtimeclock.c: 121:     RB5 = 1;
 11976                           	bcf	status, 5	;RP0=0, select bank0
 11977  1F78  1283               	bcf	status, 6	;RP1=0, select bank0
 11978  1F79  1303               	bsf	(53/8),(53)&7	;volatile
 11979  1F7A  1686               	line	122
 11980                           	
 11981                           l3382:	
 11982  1F7B                     ;realtimeclock.c: 122:     RealTimeClock_write_byte(0x89);
 11983                           	movlw	low(089h)
 11984  1F7B  3089               	fcall	_RealTimeClock_write_byte
 11985  1F7C  160A  118A  21ED  160A  158A  	line	123
 11986                           ;realtimeclock.c: 123:     unsigned char c = RealTimeClock_read_byte();
 11987                           	fcall	_RealTimeClock_read_byte
 11988  1F81  160A  118A  2431  160A  158A  	movwf	(??_RealTimeClock_get_month+0)+0
 11989  1F86  00FA               	movf	(??_RealTimeClock_get_month+0)+0,w
 11990  1F87  087A               	movwf	(RealTimeClock_get_month@c)
 11991  1F88  00FB               	line	124
 11992                           	
 11993                           l3384:	
 11994  1F89                     ;realtimeclock.c: 124:     RB5 = 0;
 11995                           	bcf	status, 5	;RP0=0, select bank0
 11996  1F89  1283               	bcf	status, 6	;RP1=0, select bank0
 11997  1F8A  1303               	bcf	(53/8),(53)&7	;volatile
 11998  1F8B  1286               	line	125
 11999                           	
 12000                           l3386:	
 12001  1F8C                     ;realtimeclock.c: 125:     return __hex_to_int(c);
 12002                           	movf	(RealTimeClock_get_month@c),w
 12003  1F8C  087B               	fcall	___hex_to_int
 12004  1F8D  160A  118A  24C3  160A  158A  	movf	(1+(?___hex_to_int)),w
 12005  1F92  0878               	bcf	status, 5	;RP0=0, select bank0
 12006  1F93  1283               	bcf	status, 6	;RP1=0, select bank0
 12007  1F94  1303               	movwf	(?_RealTimeClock_get_month+1)
 12008  1F95  00A6               	movf	(0+(?___hex_to_int)),w
 12009  1F96  0877               	movwf	(?_RealTimeClock_get_month)
 12010  1F97  00A5               	goto	l365
 12011  1F98  2F99               	
 12012                           l3388:	
 12013  1F99                     	line	126
 12014                           	
 12015                           l365:	
 12016  1F99                     	return
 12017  1F99  0008               	opt stack 0
 12018                           GLOBAL	__end_of_RealTimeClock_get_month
 12019                           	__end_of_RealTimeClock_get_month:
 12020  1F9A                     	signat	_RealTimeClock_get_month,90
 12021                           	global	_RealTimeClock_get_day_of_month
 12022                           
 12023 ;; *************** function _RealTimeClock_get_day_of_month *****************
 12024 ;; Defined at:
 12025 ;;		line 112 in file "realtimeclock.c"
 12026 ;; Parameters:    Size  Location     Type
 12027 ;;		None
 12028 ;; Auto vars:     Size  Location     Type
 12029 ;;  c               1   11[COMMON] unsigned char 
 12030 ;; Return value:  Size  Location     Type
 12031 ;;                  2    5[BANK0 ] int 
 12032 ;; Registers used:
 12033 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 12034 ;; Tracked objects:
 12035 ;;		On entry : 0/0
 12036 ;;		On exit  : 0/0
 12037 ;;		Unchanged: 0/0
 12038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12039 ;;      Params:         0       2       0       0       0
 12040 ;;      Locals:         1       0       0       0       0
 12041 ;;      Temps:          1       0       0       0       0
 12042 ;;      Totals:         2       2       0       0       0
 12043 ;;Total ram usage:        4 bytes
 12044 ;; Hardware stack levels used:    1
 12045 ;; Hardware stack levels required when called:    2
 12046 ;; This function calls:
 12047 ;;		_RealTimeClock_read_byte
 12048 ;;		_RealTimeClock_write_byte
 12049 ;;		___hex_to_int
 12050 ;; This function is called by:
 12051 ;;		_DisplayDate
 12052 ;; This function uses a non-reentrant model
 12053 ;;
 12054                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
 12055                           	line	112
 12056                           global __ptext38
 12057                           __ptext38:	;psect for function _RealTimeClock_get_day_of_month
 12058  1F56                     psect	text38
 12059                           	file	"realtimeclock.c"
 12060                           	line	112
 12061                           	global	__size_of_RealTimeClock_get_day_of_month
 12062                           	__size_of_RealTimeClock_get_day_of_month	equ	__end_of_RealTimeClock_get_day_of_month-_R
                                 ealTimeClock_get_day_of_month
 12063  0022                     	
 12064                           _RealTimeClock_get_day_of_month:	
 12065  1F56                     ;incstack = 0
 12066                           	opt	stack 3
 12067                           ; Regs used in _RealTimeClock_get_day_of_month: [wreg+status,2+status,0+btemp+1+pclath+c
                                 stack]
 12068                           	line	113
 12069                           	
 12070                           l3390:	
 12071  1F56                     ;realtimeclock.c: 113:     RB5 = 1;
 12072                           	bcf	status, 5	;RP0=0, select bank0
 12073  1F56  1283               	bcf	status, 6	;RP1=0, select bank0
 12074  1F57  1303               	bsf	(53/8),(53)&7	;volatile
 12075  1F58  1686               	line	114
 12076                           	
 12077                           l3392:	
 12078  1F59                     ;realtimeclock.c: 114:     RealTimeClock_write_byte(0x87);
 12079                           	movlw	low(087h)
 12080  1F59  3087               	fcall	_RealTimeClock_write_byte
 12081  1F5A  160A  118A  21ED  160A  158A  	line	115
 12082                           ;realtimeclock.c: 115:     unsigned char c = RealTimeClock_read_byte();
 12083                           	fcall	_RealTimeClock_read_byte
 12084  1F5F  160A  118A  2431  160A  158A  	movwf	(??_RealTimeClock_get_day_of_month+0)+0
 12085  1F64  00FA               	movf	(??_RealTimeClock_get_day_of_month+0)+0,w
 12086  1F65  087A               	movwf	(RealTimeClock_get_day_of_month@c)
 12087  1F66  00FB               	line	116
 12088                           	
 12089                           l3394:	
 12090  1F67                     ;realtimeclock.c: 116:     RB5 = 0;
 12091                           	bcf	status, 5	;RP0=0, select bank0
 12092  1F67  1283               	bcf	status, 6	;RP1=0, select bank0
 12093  1F68  1303               	bcf	(53/8),(53)&7	;volatile
 12094  1F69  1286               	line	117
 12095                           	
 12096                           l3396:	
 12097  1F6A                     ;realtimeclock.c: 117:     return __hex_to_int(c);
 12098                           	movf	(RealTimeClock_get_day_of_month@c),w
 12099  1F6A  087B               	fcall	___hex_to_int
 12100  1F6B  160A  118A  24C3  160A  158A  	movf	(1+(?___hex_to_int)),w
 12101  1F70  0878               	bcf	status, 5	;RP0=0, select bank0
 12102  1F71  1283               	bcf	status, 6	;RP1=0, select bank0
 12103  1F72  1303               	movwf	(?_RealTimeClock_get_day_of_month+1)
 12104  1F73  00A6               	movf	(0+(?___hex_to_int)),w
 12105  1F74  0877               	movwf	(?_RealTimeClock_get_day_of_month)
 12106  1F75  00A5               	goto	l362
 12107  1F76  2F77               	
 12108                           l3398:	
 12109  1F77                     	line	118
 12110                           	
 12111                           l362:	
 12112  1F77                     	return
 12113  1F77  0008               	opt stack 0
 12114                           GLOBAL	__end_of_RealTimeClock_get_day_of_month
 12115                           	__end_of_RealTimeClock_get_day_of_month:
 12116  1F78                     	signat	_RealTimeClock_get_day_of_month,90
 12117                           	global	_ChangeTrigger
 12118                           
 12119 ;; *************** function _ChangeTrigger *****************
 12120 ;; Defined at:
 12121 ;;		line 177 in file "main.c"
 12122 ;; Parameters:    Size  Location     Type
 12123 ;;  Key             1    wreg     unsigned char 
 12124 ;; Auto vars:     Size  Location     Type
 12125 ;;  Key             1   12[BANK0 ] unsigned char 
 12126 ;;  digits          3    6[BANK0 ] unsigned char [3]
 12127 ;;  i               2   13[BANK0 ] int 
 12128 ;;  decimal         1   11[BANK0 ] unsigned char 
 12129 ;;  i               2   15[BANK0 ] int 
 12130 ;;  TriggerSet      1   10[BANK0 ] PTR unsigned char 
 12131 ;;		 -> STR_11(12), 
 12132 ;;  Trigger         1    9[BANK0 ] PTR unsigned char 
 12133 ;;		 -> STR_10(9), 
 12134 ;; Return value:  Size  Location     Type
 12135 ;;                  1    wreg      void 
 12136 ;; Registers used:
 12137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 12138 ;; Tracked objects:
 12139 ;;		On entry : 0/0
 12140 ;;		On exit  : 0/0
 12141 ;;		Unchanged: 0/0
 12142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12143 ;;      Params:         0       0       0       0       0
 12144 ;;      Locals:         0      11       0       0       0
 12145 ;;      Temps:          0       6       0       0       0
 12146 ;;      Totals:         0      17       0       0       0
 12147 ;;Total ram usage:       17 bytes
 12148 ;; Hardware stack levels used:    1
 12149 ;; Hardware stack levels required when called:    3
 12150 ;; This function calls:
 12151 ;;		_Keypad_Scan
 12152 ;;		_LCD_Busy
 12153 ;;		_LCD_Command
 12154 ;;		_LCD_SendData
 12155 ;;		_LCD_SendString
 12156 ;;		_Main_Delay
 12157 ;;		___awdiv
 12158 ;;		___awmod
 12159 ;; This function is called by:
 12160 ;;		_HeatingControlOff
 12161 ;;		_SoundAlarm
 12162 ;;		_DateDayScreen
 12163 ;;		_main
 12164 ;; This function uses a non-reentrant model
 12165 ;;
 12166                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
 12167                           	file	"main.c"
 12168                           	line	177
 12169                           global __ptext39
 12170                           __ptext39:	;psect for function _ChangeTrigger
 12171  0B74                     psect	text39
 12172                           	file	"main.c"
 12173                           	line	177
 12174                           	global	__size_of_ChangeTrigger
 12175                           	__size_of_ChangeTrigger	equ	__end_of_ChangeTrigger-_ChangeTrigger
 12176  016D                     	
 12177                           _ChangeTrigger:	
 12178  0B74                     ;incstack = 0
 12179                           	opt	stack 2
 12180                           ; Regs used in _ChangeTrigger: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 12181                           ;ChangeTrigger@Key stored from wreg
 12182                           	bcf	status, 5	;RP0=0, select bank0
 12183  0B74  1283               	bcf	status, 6	;RP1=0, select bank0
 12184  0B75  1303               	movwf	(ChangeTrigger@Key)
 12185  0B76  00AC               	line	180
 12186                           	
 12187                           l3432:	
 12188  0B77                     ;main.c: 177:             {;main.c: 178:                 LCD_Command(0x01);;main.c: 180:
                                                  LCD_SendString(TriggerSet);
 12189                           	movlw	low(01h)
 12190  0B77  3001               	fcall	_LCD_Command
 12191  0B78  160A  158A  2633  120A  158A  	line	182
 12192                           	
 12193                           l3434:	
 12194  0B7D                     ;main.c: 182:                 LCD_Command(0x01);
 12195                           	bcf	status, 5	;RP0=0, select bank0
 12196  0B7D  1283               	bcf	status, 6	;RP1=0, select bank0
 12197  0B7E  1303               	clrf	(ChangeTrigger@i)
 12198  0B7F  01AF               	clrf	(ChangeTrigger@i+1)
 12199  0B80  01B0               	line	183
 12200                           	
 12201                           l3436:	
 12202  0B81                     ;main.c: 183:                 break;
 12203                           	movlw	(low((((STR_10)-__stringbase)|8000h)))&0ffh
 12204  0B81  3054               	movwf	(??_ChangeTrigger+0)+0
 12205  0B82  00A0               	movf	(??_ChangeTrigger+0)+0,w
 12206  0B83  0820               	movwf	(ChangeTrigger@Trigger)
 12207  0B84  00A9               	line	184
 12208                           	
 12209                           l3438:	
 12210  0B85                     ;main.c: 184:             }
 12211                           	movlw	(low((((STR_11)-__stringbase)|8000h)))&0ffh
 12212  0B85  302A               	movwf	(??_ChangeTrigger+0)+0
 12213  0B86  00A0               	movf	(??_ChangeTrigger+0)+0,w
 12214  0B87  0820               	movwf	(ChangeTrigger@TriggerSet)
 12215  0B88  00AA               	goto	l3440
 12216  0B89  2B8A               	line	185
 12217                           ;main.c: 185: 
 12218                           	
 12219                           l127:	
 12220  0B8A                     	line	192
 12221                           	
 12222                           l3440:	
 12223  0B8A                     ;main.c: 186:             switch(Key);main.c: 188: ;main.c: 190:                     if(
                                 i == 0);main.c: 192:                     else
 12224                           	movlw	low(03h)
 12225  0B8A  3003               	fcall	_LCD_Command
 12226  0B8B  160A  158A  2633  120A  158A  	line	194
 12227                           	
 12228                           l3442:	
 12229  0B90                     ;main.c: 194:                     break;
 12230                           	bcf	status, 5	;RP0=0, select bank0
 12231  0B90  1283               	bcf	status, 6	;RP1=0, select bank0
 12232  0B91  1303               		movf	(ChangeTrigger@Trigger),w
 12233  0B92  0829               	movwf	(LCD_SendString@string)
 12234  0B93  00F1               	movlw	0
 12235  0B94  3000               	btfss	status,2
 12236  0B95  1D03               	movlw	080h
 12237  0B96  3080               	movwf	(LCD_SendString@string+1)
 12238  0B97  00F2               
 12239                           	fcall	_LCD_SendString
 12240  0B98  160A  118A  2365  120A  158A  	line	196
 12241                           	
 12242                           l3444:	
 12243  0B9D                     ;main.c: 196: 
 12244                           	fcall	_Keypad_Scan
 12245  0B9D  120A  118A  20E5  120A  158A  	movf	(0+(?_Keypad_Scan)),w
 12246  0BA2  0876               	bcf	status, 5	;RP0=0, select bank0
 12247  0BA3  1283               	bcf	status, 6	;RP1=0, select bank0
 12248  0BA4  1303               	movwf	(??_ChangeTrigger+0)+0
 12249  0BA5  00A0               	movf	(??_ChangeTrigger+0)+0,w
 12250  0BA6  0820               	movwf	(ChangeTrigger@Key)
 12251  0BA7  00AC               	line	198
 12252                           	
 12253                           l3446:	
 12254  0BA8                     ;main.c: 198:                     {
 12255                           		decf	((ChangeTrigger@Key)),w
 12256  0BA8  032C               	btfss	status,2
 12257  0BA9  1D03               	goto	u2781
 12258  0BAA  2BAC               	goto	u2780
 12259  0BAB  2BAD               u2781:
 12260  0BAC                     	goto	l3484
 12261  0BAC  2C58               u2780:
 12262  0BAD                     	line	200
 12263                           	
 12264                           l3448:	
 12265  0BAD                     ;main.c: 199:                         triggerTemp[1] = 9;;main.c: 200:                  
                                        triggerTemp[0] = triggerTemp[0] - 1;
 12266                           	movlw	low(01h)
 12267  0BAD  3001               	fcall	_LCD_Command
 12268  0BAE  160A  158A  2633  120A  158A  	line	201
 12269                           ;main.c: 201:                     }
 12270                           	movlw	low(03h)
 12271  0BB3  3003               	fcall	_LCD_Command
 12272  0BB4  160A  158A  2633  120A  158A  	line	202
 12273                           	
 12274                           l3450:	
 12275  0BB9                     ;main.c: 202:                     else
 12276                           	bcf	status, 5	;RP0=0, select bank0
 12277  0BB9  1283               	bcf	status, 6	;RP1=0, select bank0
 12278  0BBA  1303               		movf	(ChangeTrigger@TriggerSet),w
 12279  0BBB  082A               	movwf	(LCD_SendString@string)
 12280  0BBC  00F1               	movlw	0
 12281  0BBD  3000               	btfss	status,2
 12282  0BBE  1D03               	movlw	080h
 12283  0BBF  3080               	movwf	(LCD_SendString@string+1)
 12284  0BC0  00F2               
 12285                           	fcall	_LCD_SendString
 12286  0BC1  160A  118A  2365  120A  158A  	line	203
 12287                           	
 12288                           l3452:	
 12289  0BC6                     ;main.c: 203:                         triggerTemp[i] = triggerTemp[i] - 1;
 12290                           	movlw	0C8h
 12291  0BC6  30C8               	movwf	(Main_Delay@k)
 12292  0BC7  00F0               	movlw	0
 12293  0BC8  3000               	movwf	((Main_Delay@k))+1
 12294  0BC9  00F1               	fcall	_Main_Delay
 12295  0BCA  160A  118A  2263  120A  158A  	line	204
 12296                           	
 12297                           l3454:	
 12298  0BCF                     ;main.c: 204:                     break;
 12299                           	movlw	low(01h)
 12300  0BCF  3001               	fcall	_LCD_Command
 12301  0BD0  160A  158A  2633  120A  158A  	line	205
 12302                           ;main.c: 205:                 case 4:
 12303                           	goto	l142
 12304  0BD5  2CE0               	line	206
 12305                           ;main.c: 206: 
 12306                           	
 12307                           l128:	
 12308  0BD6                     	line	208
 12309                           ;main.c: 208:                     {
 12310                           	goto	l3484
 12311  0BD6  2C58               	line	211
 12312                           ;main.c: 209:                         triggerTemp[1] = 0;;main.c: 211:                  
                                    }
 12313                           	
 12314                           l131:	
 12315  0BD7                     	line	212
 12316                           	
 12317                           l3456:	
 12318  0BD7                     ;main.c: 212:                     else
 12319                           	bcf	status, 5	;RP0=0, select bank0
 12320  0BD7  1283               	bcf	status, 6	;RP1=0, select bank0
 12321  0BD8  1303               	movf	((ChangeTrigger@i)),w
 12322  0BD9  082F               iorwf	((ChangeTrigger@i+1)),w
 12323  0BDA  0430               	btfss	status,2
 12324  0BDB  1D03               	goto	u2791
 12325  0BDC  2BDE               	goto	u2790
 12326  0BDD  2BDF               u2791:
 12327  0BDE                     	goto	l3460
 12328  0BDE  2BE4               u2790:
 12329  0BDF                     	line	213
 12330                           	
 12331                           l3458:	
 12332  0BDF                     ;main.c: 213:                         triggerTemp[i] = triggerTemp[i] + 1;
 12333                           	movlw	01h
 12334  0BDF  3001               	movwf	(ChangeTrigger@i)
 12335  0BE0  00AF               	movlw	0
 12336  0BE1  3000               	movwf	((ChangeTrigger@i))+1
 12337  0BE2  00B0               	goto	l3486
 12338  0BE3  2C6D               	line	214
 12339                           ;main.c: 214:                     break;
 12340                           	
 12341                           l132:	
 12342  0BE4                     	line	215
 12343                           	
 12344                           l3460:	
 12345  0BE4                     ;main.c: 215:             }
 12346                           	clrf	(ChangeTrigger@i)
 12347  0BE4  01AF               	clrf	(ChangeTrigger@i+1)
 12348  0BE5  01B0               	goto	l3486
 12349  0BE6  2C6D               	
 12350                           l133:	
 12351  0BE7                     	line	216
 12352                           ;main.c: 216: 
 12353                           	goto	l3486
 12354  0BE7  2C6D               	line	217
 12355                           ;main.c: 217:             int i = triggerTemp[0];
 12356                           	
 12357                           l135:	
 12358  0BE8                     	line	219
 12359                           	
 12360                           l3462:	
 12361  0BE8                     ;main.c: 219:             digits[1] = i % 10 + 48;
 12362                           		decf	((ChangeTrigger@i)),w
 12363  0BE8  032F               iorwf	((ChangeTrigger@i+1)),w
 12364  0BE9  0430               	btfss	status,2
 12365  0BEA  1D03               	goto	u2801
 12366  0BEB  2BED               	goto	u2800
 12367  0BEC  2BEE               u2801:
 12368  0BED                     	goto	l3470
 12369  0BED  2C01               u2800:
 12370  0BEE                     	
 12371                           l3464:	
 12372  0BEE                     	movf	(0+(_triggerTemp)+02h),w
 12373  0BEE  086E               iorwf	(1+(_triggerTemp)+02h),w
 12374  0BEF  046F               	btfss	status,2
 12375  0BF0  1D03               	goto	u2811
 12376  0BF1  2BF3               	goto	u2810
 12377  0BF2  2BF4               u2811:
 12378  0BF3                     	goto	l3470
 12379  0BF3  2C01               u2810:
 12380  0BF4                     	line	221
 12381                           	
 12382                           l3466:	
 12383  0BF4                     ;main.c: 220:             i /= 10;;main.c: 221:             digits[0] = i % 10 + 48;
 12384                           	movlw	09h
 12385  0BF4  3009               	movwf	0+(_triggerTemp)+02h
 12386  0BF5  00EE               	movlw	0
 12387  0BF6  3000               	movwf	(0+(_triggerTemp)+02h)+1
 12388  0BF7  00EF               	line	222
 12389                           	
 12390                           l3468:	
 12391  0BF8                     ;main.c: 222: 
 12392                           	movf	(_triggerTemp),w
 12393  0BF8  086C               	addlw	low(-1)
 12394  0BF9  3EFF               	movwf	(_triggerTemp)
 12395  0BFA  00EC               	movf	(_triggerTemp+1),w
 12396  0BFB  086D               	skipnc
 12397  0BFC  1803               	addlw	1
 12398  0BFD  3E01               	addlw	high(-1)
 12399  0BFE  3EFF               	movwf	1+(_triggerTemp)
 12400  0BFF  00ED               	line	223
 12401                           ;main.c: 223:             digits[2] = '\0';
 12402                           	goto	l3486
 12403  0C00  2C6D               	line	224
 12404                           ;main.c: 224: 
 12405                           	
 12406                           l136:	
 12407  0C01                     	line	225
 12408                           	
 12409                           l3470:	
 12410  0C01                     ;main.c: 225:             decimal = triggerTemp[1] + 48;
 12411                           	movf	(ChangeTrigger@i),w
 12412  0C01  082F               	movwf	(??_ChangeTrigger+0)+0
 12413  0C02  00A0               	addwf	(??_ChangeTrigger+0)+0,w
 12414  0C03  0720               	addlw	low(_triggerTemp|((0x0)<<8))&0ffh
 12415  0C04  3E6C               	movwf	fsr0
 12416  0C05  0084               	bcf	status, 7	;select IRP bank0
 12417  0C06  1383               	movf	indf,w
 12418  0C07  0800               	movwf	(??_ChangeTrigger+1)+0+0
 12419  0C08  00A1               	incf	fsr0,f
 12420  0C09  0A84               	movf	indf,w
 12421  0C0A  0800               	movwf	(??_ChangeTrigger+1)+0+1
 12422  0C0B  00A2               	movf	0+(??_ChangeTrigger+1)+0,w
 12423  0C0C  0821               	addlw	low(-1)
 12424  0C0D  3EFF               	movwf	(??_ChangeTrigger+3)+0
 12425  0C0E  00A3               	movf	1+(??_ChangeTrigger+1)+0,w
 12426  0C0F  0822               	skipnc
 12427  0C10  1803               	addlw	1
 12428  0C11  3E01               	addlw	high(-1)
 12429  0C12  3EFF               	movwf	1+(??_ChangeTrigger+3)+0
 12430  0C13  00A4               	movf	(ChangeTrigger@i),w
 12431  0C14  082F               	movwf	(??_ChangeTrigger+5)+0
 12432  0C15  00A5               	addwf	(??_ChangeTrigger+5)+0,w
 12433  0C16  0725               	addlw	low(_triggerTemp|((0x0)<<8))&0ffh
 12434  0C17  3E6C               	movwf	fsr0
 12435  0C18  0084               	movf	0+(??_ChangeTrigger+3)+0,w
 12436  0C19  0823               	movwf	indf
 12437  0C1A  0080               	incf	fsr0,f
 12438  0C1B  0A84               	movf	1+(??_ChangeTrigger+3)+0,w
 12439  0C1C  0824               	movwf	indf
 12440  0C1D  0080               	goto	l3486
 12441  0C1E  2C6D               	
 12442                           l137:	
 12443  0C1F                     	line	226
 12444                           ;main.c: 226: 
 12445                           	goto	l3486
 12446  0C1F  2C6D               	line	227
 12447                           ;main.c: 227:             LCD_SendString(digits);
 12448                           	
 12449                           l138:	
 12450  0C20                     	line	229
 12451                           	
 12452                           l3472:	
 12453  0C20                     ;main.c: 229: 
 12454                           		decf	((ChangeTrigger@i)),w
 12455  0C20  032F               iorwf	((ChangeTrigger@i+1)),w
 12456  0C21  0430               	btfss	status,2
 12457  0C22  1D03               	goto	u2821
 12458  0C23  2C25               	goto	u2820
 12459  0C24  2C26               u2821:
 12460  0C25                     	goto	l3480
 12461  0C25  2C38               u2820:
 12462  0C26                     	
 12463                           l3474:	
 12464  0C26                     		movlw	9
 12465  0C26  3009               	xorwf	(0+(_triggerTemp)+02h),w
 12466  0C27  066E               iorwf	(1+(_triggerTemp)+02h),w
 12467  0C28  046F               	btfss	status,2
 12468  0C29  1D03               	goto	u2831
 12469  0C2A  2C2C               	goto	u2830
 12470  0C2B  2C2D               u2831:
 12471  0C2C                     	goto	l3480
 12472  0C2C  2C38               u2830:
 12473  0C2D                     	line	231
 12474                           	
 12475                           l3476:	
 12476  0C2D                     ;main.c: 230:             LCD_SendData('.');;main.c: 231:             LCD_Busy();
 12477                           	clrf	0+(_triggerTemp)+02h
 12478  0C2D  01EE               	clrf	1+(_triggerTemp)+02h
 12479  0C2E  01EF               	line	232
 12480                           	
 12481                           l3478:	
 12482  0C2F                     ;main.c: 232: 
 12483                           	movf	(_triggerTemp),w
 12484  0C2F  086C               	addlw	low(01h)
 12485  0C30  3E01               	movwf	(_triggerTemp)
 12486  0C31  00EC               	movf	(_triggerTemp+1),w
 12487  0C32  086D               	skipnc
 12488  0C33  1803               	addlw	1
 12489  0C34  3E01               	addlw	high(01h)
 12490  0C35  3E00               	movwf	1+(_triggerTemp)
 12491  0C36  00ED               	line	233
 12492                           ;main.c: 233:             LCD_SendData(decimal);
 12493                           	goto	l3486
 12494  0C37  2C6D               	line	234
 12495                           ;main.c: 234:             LCD_Busy();
 12496                           	
 12497                           l139:	
 12498  0C38                     	line	235
 12499                           	
 12500                           l3480:	
 12501  0C38                     ;main.c: 235: 
 12502                           	movf	(ChangeTrigger@i),w
 12503  0C38  082F               	movwf	(??_ChangeTrigger+0)+0
 12504  0C39  00A0               	addwf	(??_ChangeTrigger+0)+0,w
 12505  0C3A  0720               	addlw	low(_triggerTemp|((0x0)<<8))&0ffh
 12506  0C3B  3E6C               	movwf	fsr0
 12507  0C3C  0084               	bcf	status, 7	;select IRP bank0
 12508  0C3D  1383               	movf	indf,w
 12509  0C3E  0800               	movwf	(??_ChangeTrigger+1)+0+0
 12510  0C3F  00A1               	incf	fsr0,f
 12511  0C40  0A84               	movf	indf,w
 12512  0C41  0800               	movwf	(??_ChangeTrigger+1)+0+1
 12513  0C42  00A2               	movf	0+(??_ChangeTrigger+1)+0,w
 12514  0C43  0821               	addlw	low(01h)
 12515  0C44  3E01               	movwf	(??_ChangeTrigger+3)+0
 12516  0C45  00A3               	movf	1+(??_ChangeTrigger+1)+0,w
 12517  0C46  0822               	skipnc
 12518  0C47  1803               	addlw	1
 12519  0C48  3E01               	addlw	high(01h)
 12520  0C49  3E00               	movwf	1+(??_ChangeTrigger+3)+0
 12521  0C4A  00A4               	movf	(ChangeTrigger@i),w
 12522  0C4B  082F               	movwf	(??_ChangeTrigger+5)+0
 12523  0C4C  00A5               	addwf	(??_ChangeTrigger+5)+0,w
 12524  0C4D  0725               	addlw	low(_triggerTemp|((0x0)<<8))&0ffh
 12525  0C4E  3E6C               	movwf	fsr0
 12526  0C4F  0084               	movf	0+(??_ChangeTrigger+3)+0,w
 12527  0C50  0823               	movwf	indf
 12528  0C51  0080               	incf	fsr0,f
 12529  0C52  0A84               	movf	1+(??_ChangeTrigger+3)+0,w
 12530  0C53  0824               	movwf	indf
 12531  0C54  0080               	goto	l3486
 12532  0C55  2C6D               	
 12533                           l140:	
 12534  0C56                     	line	236
 12535                           ;main.c: 236:             LCD_SendData('0');
 12536                           	goto	l3486
 12537  0C56  2C6D               	line	237
 12538                           	
 12539                           l3482:	
 12540  0C57                     ;main.c: 237:         }
 12541                           	goto	l3486
 12542  0C57  2C6D               	
 12543                           l130:	
 12544  0C58                     	
 12545                           l3484:	
 12546  0C58                     	bcf	status, 5	;RP0=0, select bank0
 12547  0C58  1283               	bcf	status, 6	;RP1=0, select bank0
 12548  0C59  1303               	movf	(ChangeTrigger@Key),w
 12549  0C5A  082C               	movwf	(??_ChangeTrigger+0)+0
 12550  0C5B  00A0               	clrf	(??_ChangeTrigger+0)+0+1
 12551  0C5C  01A1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 12552                           ; Switch size 1, requested type "space"
 12553                           ; Number of cases is 1, Range of values is 0 to 0
 12554                           ; switch strategies available:
 12555                           ; Name         Instructions Cycles
 12556                           ; simple_byte            4     3 (average)
 12557                           ; direct_byte           11     8 (fixed)
 12558                           ; jumptable            260     6 (fixed)
 12559                           ;	Chosen strategy is simple_byte
 12560                           
 12561                           	movf 1+(??_ChangeTrigger+0)+0,w
 12562  0C5D  0821               	opt asmopt_push
 12563                           	opt asmopt_off
 12564                           	xorlw	0^0	; case 0
 12565  0C5E  3A00               	skipnz
 12566  0C5F  1903               	goto	l4380
 12567  0C60  2C62               	goto	l3486
 12568  0C61  2C6D               	opt asmopt_pop
 12569                           	
 12570                           l4380:	
 12571  0C62                     ; Switch size 1, requested type "space"
 12572                           ; Number of cases is 3, Range of values is 2 to 4
 12573                           ; switch strategies available:
 12574                           ; Name         Instructions Cycles
 12575                           ; simple_byte           10     6 (average)
 12576                           ; direct_byte           20    11 (fixed)
 12577                           ; jumptable            263     9 (fixed)
 12578                           ;	Chosen strategy is simple_byte
 12579                           
 12580                           	movf 0+(??_ChangeTrigger+0)+0,w
 12581  0C62  0820               	opt asmopt_push
 12582                           	opt asmopt_off
 12583                           	xorlw	2^0	; case 2
 12584  0C63  3A02               	skipnz
 12585  0C64  1903               	goto	l3456
 12586  0C65  2BD7               	xorlw	3^2	; case 3
 12587  0C66  3A01               	skipnz
 12588  0C67  1903               	goto	l3462
 12589  0C68  2BE8               	xorlw	4^3	; case 4
 12590  0C69  3A07               	skipnz
 12591  0C6A  1903               	goto	l3472
 12592  0C6B  2C20               	goto	l3486
 12593  0C6C  2C6D               	opt asmopt_pop
 12594                           
 12595                           	
 12596                           l134:	
 12597  0C6D                     	line	239
 12598                           	
 12599                           l3486:	
 12600  0C6D                     ;main.c: 239: 
 12601                           	movf	(_triggerTemp+1),w
 12602  0C6D  086D               	movwf	(ChangeTrigger@i_194+1)
 12603  0C6E  00AE               	movf	(_triggerTemp),w
 12604  0C6F  086C               	movwf	(ChangeTrigger@i_194)
 12605  0C70  00AD               	line	241
 12606                           	
 12607                           l3488:	
 12608  0C71                     ;main.c: 241: void SwapToHeatingDisplay(int Key)
 12609                           	movlw	0Ah
 12610  0C71  300A               	movwf	(___awmod@divisor)
 12611  0C72  00F0               	movlw	0
 12612  0C73  3000               	movwf	((___awmod@divisor))+1
 12613  0C74  00F1               	movf	(ChangeTrigger@i_194+1),w
 12614  0C75  082E               	movwf	(___awmod@dividend+1)
 12615  0C76  00F3               	movf	(ChangeTrigger@i_194),w
 12616  0C77  082D               	movwf	(___awmod@dividend)
 12617  0C78  00F2               	fcall	___awmod
 12618  0C79  160A  118A  2567  120A  158A  	movf	(0+(?___awmod)),w
 12619  0C7E  0870               	addlw	030h
 12620  0C7F  3E30               	bcf	status, 5	;RP0=0, select bank0
 12621  0C80  1283               	bcf	status, 6	;RP1=0, select bank0
 12622  0C81  1303               	movwf	(??_ChangeTrigger+0)+0
 12623  0C82  00A0               	movf	(??_ChangeTrigger+0)+0,w
 12624  0C83  0820               	movwf	0+(ChangeTrigger@digits)+01h
 12625  0C84  00A7               	line	242
 12626                           	
 12627                           l3490:	
 12628  0C85                     ;main.c: 242: {
 12629                           	movlw	0Ah
 12630  0C85  300A               	movwf	(___awdiv@divisor)
 12631  0C86  00F0               	movlw	0
 12632  0C87  3000               	movwf	((___awdiv@divisor))+1
 12633  0C88  00F1               	movf	(ChangeTrigger@i_194+1),w
 12634  0C89  082E               	movwf	(___awdiv@dividend+1)
 12635  0C8A  00F3               	movf	(ChangeTrigger@i_194),w
 12636  0C8B  082D               	movwf	(___awdiv@dividend)
 12637  0C8C  00F2               	fcall	___awdiv
 12638  0C8D  160A  118A  25CA  120A  158A  	movf	(1+(?___awdiv)),w
 12639  0C92  0871               	bcf	status, 5	;RP0=0, select bank0
 12640  0C93  1283               	bcf	status, 6	;RP1=0, select bank0
 12641  0C94  1303               	movwf	(ChangeTrigger@i_194+1)
 12642  0C95  00AE               	movf	(0+(?___awdiv)),w
 12643  0C96  0870               	movwf	(ChangeTrigger@i_194)
 12644  0C97  00AD               	line	243
 12645                           	
 12646                           l3492:	
 12647  0C98                     ;main.c: 243:     char* Heat = "Heating:";
 12648                           	movlw	0Ah
 12649  0C98  300A               	movwf	(___awmod@divisor)
 12650  0C99  00F0               	movlw	0
 12651  0C9A  3000               	movwf	((___awmod@divisor))+1
 12652  0C9B  00F1               	movf	(ChangeTrigger@i_194+1),w
 12653  0C9C  082E               	movwf	(___awmod@dividend+1)
 12654  0C9D  00F3               	movf	(ChangeTrigger@i_194),w
 12655  0C9E  082D               	movwf	(___awmod@dividend)
 12656  0C9F  00F2               	fcall	___awmod
 12657  0CA0  160A  118A  2567  120A  158A  	movf	(0+(?___awmod)),w
 12658  0CA5  0870               	addlw	030h
 12659  0CA6  3E30               	bcf	status, 5	;RP0=0, select bank0
 12660  0CA7  1283               	bcf	status, 6	;RP1=0, select bank0
 12661  0CA8  1303               	movwf	(??_ChangeTrigger+0)+0
 12662  0CA9  00A0               	movf	(??_ChangeTrigger+0)+0,w
 12663  0CAA  0820               	movwf	(ChangeTrigger@digits)
 12664  0CAB  00A6               	line	245
 12665                           	
 12666                           l3494:	
 12667  0CAC                     ;main.c: 245:     LCD_Command(0x01);
 12668                           	clrf	0+(ChangeTrigger@digits)+02h
 12669  0CAC  01A8               	line	247
 12670                           	
 12671                           l3496:	
 12672  0CAD                     ;main.c: 247:     char* Off = "Off";
 12673                           	movf	0+(_triggerTemp)+02h,w
 12674  0CAD  086E               	addlw	030h
 12675  0CAE  3E30               	movwf	(??_ChangeTrigger+0)+0
 12676  0CAF  00A0               	movf	(??_ChangeTrigger+0)+0,w
 12677  0CB0  0820               	movwf	(ChangeTrigger@decimal)
 12678  0CB1  00AB               	line	249
 12679                           	
 12680                           l3498:	
 12681  0CB2                     ;main.c: 249:     {
 12682                           	movlw	(low(ChangeTrigger@digits|((0x0)<<8))&0ffh)
 12683  0CB2  3026               	movwf	(LCD_SendString@string)
 12684  0CB3  00F1               	movlw	(0x0)
 12685  0CB4  3000               	movwf	(LCD_SendString@string+1)
 12686  0CB5  00F2               	fcall	_LCD_SendString
 12687  0CB6  160A  118A  2365  120A  158A  	line	250
 12688                           	
 12689                           l3500:	
 12690  0CBB                     ;main.c: 250: 
 12691                           	fcall	_LCD_Busy
 12692  0CBB  160A  158A  2674  120A  158A  	line	252
 12693                           	
 12694                           l3502:	
 12695  0CC0                     ;main.c: 252:         if(Key == 7)
 12696                           	movlw	low(02Eh)
 12697  0CC0  302E               	fcall	_LCD_SendData
 12698  0CC1  160A  158A  2642  120A  158A  	line	253
 12699                           	
 12700                           l3504:	
 12701  0CC6                     ;main.c: 253:         {
 12702                           	fcall	_LCD_Busy
 12703  0CC6  160A  158A  2674  120A  158A  	line	255
 12704                           	
 12705                           l3506:	
 12706  0CCB                     ;main.c: 255:             break;
 12707                           	bcf	status, 5	;RP0=0, select bank0
 12708  0CCB  1283               	bcf	status, 6	;RP1=0, select bank0
 12709  0CCC  1303               	movf	(ChangeTrigger@decimal),w
 12710  0CCD  082B               	fcall	_LCD_SendData
 12711  0CCE  160A  158A  2642  120A  158A  	line	256
 12712                           	
 12713                           l3508:	
 12714  0CD3                     ;main.c: 256:         }
 12715                           	fcall	_LCD_Busy
 12716  0CD3  160A  158A  2674  120A  158A  	line	258
 12717                           	
 12718                           l3510:	
 12719  0CD8                     ;main.c: 258:         LCD_SendString(Heat);
 12720                           	movlw	low(030h)
 12721  0CD8  3030               	fcall	_LCD_SendData
 12722  0CD9  160A  158A  2642  120A  158A  	goto	l3440
 12723  0CDE  2B8A               	line	259
 12724                           ;main.c: 259: 
 12725                           	
 12726                           l141:	
 12727  0CDF                     	goto	l3440
 12728  0CDF  2B8A               	
 12729                           l129:	
 12730  0CE0                     	line	260
 12731                           	
 12732                           l142:	
 12733  0CE0                     	return
 12734  0CE0  0008               	opt stack 0
 12735                           GLOBAL	__end_of_ChangeTrigger
 12736                           	__end_of_ChangeTrigger:
 12737  0CE1                     	signat	_ChangeTrigger,4217
 12738                           	global	___awdiv
 12739                           
 12740 ;; *************** function ___awdiv *****************
 12741 ;; Defined at:
 12742 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 12743 ;; Parameters:    Size  Location     Type
 12744 ;;  divisor         2    0[COMMON] int 
 12745 ;;  dividend        2    2[COMMON] int 
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;  quotient        2    7[COMMON] int 
 12748 ;;  sign            1    6[COMMON] unsigned char 
 12749 ;;  counter         1    5[COMMON] unsigned char 
 12750 ;; Return value:  Size  Location     Type
 12751 ;;                  2    0[COMMON] int 
 12752 ;; Registers used:
 12753 ;;		wreg, status,2, status,0
 12754 ;; Tracked objects:
 12755 ;;		On entry : 0/0
 12756 ;;		On exit  : 0/0
 12757 ;;		Unchanged: 0/0
 12758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12759 ;;      Params:         4       0       0       0       0
 12760 ;;      Locals:         4       0       0       0       0
 12761 ;;      Temps:          1       0       0       0       0
 12762 ;;      Totals:         9       0       0       0       0
 12763 ;;Total ram usage:        9 bytes
 12764 ;; Hardware stack levels used:    1
 12765 ;; This function calls:
 12766 ;;		Nothing
 12767 ;; This function is called by:
 12768 ;;		_DisplayTime
 12769 ;;		_DisplayDate
 12770 ;;		_ChangeTrigger
 12771 ;;		_SetTime
 12772 ;;		_Get_Temp
 12773 ;; This function uses a non-reentrant model
 12774 ;;
 12775                           psect	text40,local,class=CODE,delta=2,merge=1,group=1
 12776                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 12777                           	line	5
 12778                           global __ptext40
 12779                           __ptext40:	;psect for function ___awdiv
 12780  15CA                     psect	text40
 12781                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 12782                           	line	5
 12783                           	global	__size_of___awdiv
 12784                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 12785  0071                     	
 12786                           ___awdiv:	
 12787  15CA                     ;incstack = 0
 12788                           	opt	stack 3
 12789                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12790                           	line	13
 12791                           	
 12792                           l3006:	
 12793  15CA                     	clrf	(___awdiv@sign)
 12794  15CA  01F6               	line	14
 12795                           	
 12796                           l3008:	
 12797  15CB                     	btfss	(___awdiv@divisor+1),7
 12798  15CB  1FF1               	goto	u2041
 12799  15CC  2DCE               	goto	u2040
 12800  15CD  2DCF               u2041:
 12801  15CE                     	goto	l3014
 12802  15CE  2DD7               u2040:
 12803  15CF                     	line	15
 12804                           	
 12805                           l3010:	
 12806  15CF                     	comf	(___awdiv@divisor),f
 12807  15CF  09F0               	comf	(___awdiv@divisor+1),f
 12808  15D0  09F1               	incf	(___awdiv@divisor),f
 12809  15D1  0AF0               	skipnz
 12810  15D2  1903               	incf	(___awdiv@divisor+1),f
 12811  15D3  0AF1               	line	16
 12812                           	
 12813                           l3012:	
 12814  15D4                     	clrf	(___awdiv@sign)
 12815  15D4  01F6               	incf	(___awdiv@sign),f
 12816  15D5  0AF6               	goto	l3014
 12817  15D6  2DD7               	line	17
 12818                           	
 12819                           l846:	
 12820  15D7                     	line	18
 12821                           	
 12822                           l3014:	
 12823  15D7                     	btfss	(___awdiv@dividend+1),7
 12824  15D7  1FF3               	goto	u2051
 12825  15D8  2DDA               	goto	u2050
 12826  15D9  2DDB               u2051:
 12827  15DA                     	goto	l3020
 12828  15DA  2DE5               u2050:
 12829  15DB                     	line	19
 12830                           	
 12831                           l3016:	
 12832  15DB                     	comf	(___awdiv@dividend),f
 12833  15DB  09F2               	comf	(___awdiv@dividend+1),f
 12834  15DC  09F3               	incf	(___awdiv@dividend),f
 12835  15DD  0AF2               	skipnz
 12836  15DE  1903               	incf	(___awdiv@dividend+1),f
 12837  15DF  0AF3               	line	20
 12838                           	
 12839                           l3018:	
 12840  15E0                     	movlw	low(01h)
 12841  15E0  3001               	movwf	(??___awdiv+0)+0
 12842  15E1  00F4               	movf	(??___awdiv+0)+0,w
 12843  15E2  0874               	xorwf	(___awdiv@sign),f
 12844  15E3  06F6               	goto	l3020
 12845  15E4  2DE5               	line	21
 12846                           	
 12847                           l847:	
 12848  15E5                     	line	22
 12849                           	
 12850                           l3020:	
 12851  15E5                     	clrf	(___awdiv@quotient)
 12852  15E5  01F7               	clrf	(___awdiv@quotient+1)
 12853  15E6  01F8               	line	23
 12854                           	
 12855                           l3022:	
 12856  15E7                     	movf	((___awdiv@divisor)),w
 12857  15E7  0870               iorwf	((___awdiv@divisor+1)),w
 12858  15E8  0471               	btfsc	status,2
 12859  15E9  1903               	goto	u2061
 12860  15EA  2DEC               	goto	u2060
 12861  15EB  2DED               u2061:
 12862  15EC                     	goto	l3042
 12863  15EC  2E2A               u2060:
 12864  15ED                     	line	24
 12865                           	
 12866                           l3024:	
 12867  15ED                     	clrf	(___awdiv@counter)
 12868  15ED  01F5               	incf	(___awdiv@counter),f
 12869  15EE  0AF5               	line	25
 12870                           	goto	l3030
 12871  15EF  2DFC               	
 12872                           l850:	
 12873  15F0                     	line	26
 12874                           	
 12875                           l3026:	
 12876  15F0                     	movlw	01h
 12877  15F0  3001               	
 12878                           u2075:
 12879  15F1                     	clrc
 12880  15F1  1003               	rlf	(___awdiv@divisor),f
 12881  15F2  0DF0               	rlf	(___awdiv@divisor+1),f
 12882  15F3  0DF1               	addlw	-1
 12883  15F4  3EFF               	skipz
 12884  15F5  1D03               	goto	u2075
 12885  15F6  2DF1               	line	27
 12886                           	
 12887                           l3028:	
 12888  15F7                     	movlw	low(01h)
 12889  15F7  3001               	movwf	(??___awdiv+0)+0
 12890  15F8  00F4               	movf	(??___awdiv+0)+0,w
 12891  15F9  0874               	addwf	(___awdiv@counter),f
 12892  15FA  07F5               	goto	l3030
 12893  15FB  2DFC               	line	28
 12894                           	
 12895                           l849:	
 12896  15FC                     	line	25
 12897                           	
 12898                           l3030:	
 12899  15FC                     	btfss	(___awdiv@divisor+1),(15)&7
 12900  15FC  1FF1               	goto	u2081
 12901  15FD  2DFF               	goto	u2080
 12902  15FE  2E00               u2081:
 12903  15FF                     	goto	l3026
 12904  15FF  2DF0               u2080:
 12905  1600                     	goto	l3032
 12906  1600  2E02               	
 12907                           l851:	
 12908  1601                     	goto	l3032
 12909  1601  2E02               	line	29
 12910                           	
 12911                           l852:	
 12912  1602                     	line	30
 12913                           	
 12914                           l3032:	
 12915  1602                     	movlw	01h
 12916  1602  3001               	
 12917                           u2095:
 12918  1603                     	clrc
 12919  1603  1003               	rlf	(___awdiv@quotient),f
 12920  1604  0DF7               	rlf	(___awdiv@quotient+1),f
 12921  1605  0DF8               	addlw	-1
 12922  1606  3EFF               	skipz
 12923  1607  1D03               	goto	u2095
 12924  1608  2E03               	line	31
 12925                           	movf	(___awdiv@divisor+1),w
 12926  1609  0871               	subwf	(___awdiv@dividend+1),w
 12927  160A  0273               	skipz
 12928  160B  1D03               	goto	u2105
 12929  160C  2E0F               	movf	(___awdiv@divisor),w
 12930  160D  0870               	subwf	(___awdiv@dividend),w
 12931  160E  0272               u2105:
 12932  160F                     	skipc
 12933  160F  1C03               	goto	u2101
 12934  1610  2E12               	goto	u2100
 12935  1611  2E13               u2101:
 12936  1612                     	goto	l3038
 12937  1612  2E1B               u2100:
 12938  1613                     	line	32
 12939                           	
 12940                           l3034:	
 12941  1613                     	movf	(___awdiv@divisor),w
 12942  1613  0870               	subwf	(___awdiv@dividend),f
 12943  1614  02F2               	movf	(___awdiv@divisor+1),w
 12944  1615  0871               	skipc
 12945  1616  1C03               	decf	(___awdiv@dividend+1),f
 12946  1617  03F3               	subwf	(___awdiv@dividend+1),f
 12947  1618  02F3               	line	33
 12948                           	
 12949                           l3036:	
 12950  1619                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
 12951  1619  1477               	goto	l3038
 12952  161A  2E1B               	line	34
 12953                           	
 12954                           l853:	
 12955  161B                     	line	35
 12956                           	
 12957                           l3038:	
 12958  161B                     	movlw	01h
 12959  161B  3001               	
 12960                           u2115:
 12961  161C                     	clrc
 12962  161C  1003               	rrf	(___awdiv@divisor+1),f
 12963  161D  0CF1               	rrf	(___awdiv@divisor),f
 12964  161E  0CF0               	addlw	-1
 12965  161F  3EFF               	skipz
 12966  1620  1D03               	goto	u2115
 12967  1621  2E1C               	line	36
 12968                           	
 12969                           l3040:	
 12970  1622                     	movlw	01h
 12971  1622  3001               	subwf	(___awdiv@counter),f
 12972  1623  02F5               	btfss	status,2
 12973  1624  1D03               	goto	u2121
 12974  1625  2E27               	goto	u2120
 12975  1626  2E28               u2121:
 12976  1627                     	goto	l3032
 12977  1627  2E02               u2120:
 12978  1628                     	goto	l3042
 12979  1628  2E2A               	
 12980                           l854:	
 12981  1629                     	goto	l3042
 12982  1629  2E2A               	line	37
 12983                           	
 12984                           l848:	
 12985  162A                     	line	38
 12986                           	
 12987                           l3042:	
 12988  162A                     	movf	((___awdiv@sign)),w
 12989  162A  0876               	btfsc	status,2
 12990  162B  1903               	goto	u2131
 12991  162C  2E2E               	goto	u2130
 12992  162D  2E2F               u2131:
 12993  162E                     	goto	l3046
 12994  162E  2E35               u2130:
 12995  162F                     	line	39
 12996                           	
 12997                           l3044:	
 12998  162F                     	comf	(___awdiv@quotient),f
 12999  162F  09F7               	comf	(___awdiv@quotient+1),f
 13000  1630  09F8               	incf	(___awdiv@quotient),f
 13001  1631  0AF7               	skipnz
 13002  1632  1903               	incf	(___awdiv@quotient+1),f
 13003  1633  0AF8               	goto	l3046
 13004  1634  2E35               	
 13005                           l855:	
 13006  1635                     	line	40
 13007                           	
 13008                           l3046:	
 13009  1635                     	movf	(___awdiv@quotient+1),w
 13010  1635  0878               	movwf	(?___awdiv+1)
 13011  1636  00F1               	movf	(___awdiv@quotient),w
 13012  1637  0877               	movwf	(?___awdiv)
 13013  1638  00F0               	goto	l856
 13014  1639  2E3A               	
 13015                           l3048:	
 13016  163A                     	line	41
 13017                           	
 13018                           l856:	
 13019  163A                     	return
 13020  163A  0008               	opt stack 0
 13021                           GLOBAL	__end_of___awdiv
 13022                           	__end_of___awdiv:
 13023  163B                     	signat	___awdiv,8314
 13024                           	global	_Main_Delay
 13025                           
 13026 ;; *************** function _Main_Delay *****************
 13027 ;; Defined at:
 13028 ;;		line 54 in file "main.c"
 13029 ;; Parameters:    Size  Location     Type
 13030 ;;  k               2    0[COMMON] int 
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;  j               2    5[COMMON] int 
 13033 ;;  i               2    3[COMMON] int 
 13034 ;; Return value:  Size  Location     Type
 13035 ;;                  1    wreg      void 
 13036 ;; Registers used:
 13037 ;;		wreg, status,2, btemp+1
 13038 ;; Tracked objects:
 13039 ;;		On entry : 0/0
 13040 ;;		On exit  : 0/0
 13041 ;;		Unchanged: 0/0
 13042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13043 ;;      Params:         2       0       0       0       0
 13044 ;;      Locals:         4       0       0       0       0
 13045 ;;      Temps:          1       0       0       0       0
 13046 ;;      Totals:         7       0       0       0       0
 13047 ;;Total ram usage:        7 bytes
 13048 ;; Hardware stack levels used:    1
 13049 ;; This function calls:
 13050 ;;		Nothing
 13051 ;; This function is called by:
 13052 ;;		_ChangeTrigger
 13053 ;;		_HeatingControlOff
 13054 ;;		_SetTime
 13055 ;;		_SetDate
 13056 ;;		_main
 13057 ;; This function uses a non-reentrant model
 13058 ;;
 13059                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
 13060                           	file	"main.c"
 13061                           	line	54
 13062                           global __ptext41
 13063                           __ptext41:	;psect for function _Main_Delay
 13064  1263                     psect	text41
 13065                           	file	"main.c"
 13066                           	line	54
 13067                           	global	__size_of_Main_Delay
 13068                           	__size_of_Main_Delay	equ	__end_of_Main_Delay-_Main_Delay
 13069  003E                     	
 13070                           _Main_Delay:	
 13071  1263                     ;incstack = 0
 13072                           	opt	stack 5
 13073                           ; Regs used in _Main_Delay: [wreg+status,2+btemp+1]
 13074                           	line	57
 13075                           	
 13076                           l3232:	
 13077  1263                     ;main.c: 54: ;main.c: 55:     timeDisplayer[7] = timeSecs % 10 + 48;;main.c: 56:     tim
                                 eSecs /= 10;;main.c: 57:     timeDisplayer[6] = timeSecs % 10 + 48;
 13078                           	clrf	(Main_Delay@i)
 13079  1263  01F3               	clrf	(Main_Delay@i+1)
 13080  1264  01F4               	goto	l95
 13081  1265  2A91               	
 13082                           l96:	
 13083  1266                     	line	58
 13084                           	
 13085                           l3234:	
 13086  1266                     ;main.c: 58: 
 13087                           	clrf	(Main_Delay@j)
 13088  1266  01F5               	clrf	(Main_Delay@j+1)
 13089  1267  01F6               	
 13090                           l3236:	
 13091  1268                     	movf	(Main_Delay@j+1),w
 13092  1268  0876               	xorlw	80h
 13093  1269  3A80               	movwf	btemp+1
 13094  126A  00FF               	movlw	(0)^80h
 13095  126B  3080               	subwf	btemp+1,w
 13096  126C  027F               	skipz
 13097  126D  1D03               	goto	u2435
 13098  126E  2A71               	movlw	064h
 13099  126F  3064               	subwf	(Main_Delay@j),w
 13100  1270  0275               u2435:
 13101  1271                     
 13102                           	skipc
 13103  1271  1C03               	goto	u2431
 13104  1272  2A74               	goto	u2430
 13105  1273  2A75               u2431:
 13106  1274                     	goto	l3240
 13107  1274  2A77               u2430:
 13108  1275                     	goto	l3244
 13109  1275  2A8B               	
 13110                           l3238:	
 13111  1276                     	goto	l3244
 13112  1276  2A8B               	
 13113                           l97:	
 13114  1277                     	
 13115                           l3240:	
 13116  1277                     	movlw	01h
 13117  1277  3001               	addwf	(Main_Delay@j),f
 13118  1278  07F5               	skipnc
 13119  1279  1803               	incf	(Main_Delay@j+1),f
 13120  127A  0AF6               	movlw	0
 13121  127B  3000               	addwf	(Main_Delay@j+1),f
 13122  127C  07F6               	
 13123                           l3242:	
 13124  127D                     	movf	(Main_Delay@j+1),w
 13125  127D  0876               	xorlw	80h
 13126  127E  3A80               	movwf	btemp+1
 13127  127F  00FF               	movlw	(0)^80h
 13128  1280  3080               	subwf	btemp+1,w
 13129  1281  027F               	skipz
 13130  1282  1D03               	goto	u2445
 13131  1283  2A86               	movlw	064h
 13132  1284  3064               	subwf	(Main_Delay@j),w
 13133  1285  0275               u2445:
 13134  1286                     
 13135                           	skipc
 13136  1286  1C03               	goto	u2441
 13137  1287  2A89               	goto	u2440
 13138  1288  2A8A               u2441:
 13139  1289                     	goto	l3240
 13140  1289  2A77               u2440:
 13141  128A                     	goto	l3244
 13142  128A  2A8B               	
 13143                           l98:	
 13144  128B                     	
 13145                           l3244:	
 13146  128B                     	movlw	01h
 13147  128B  3001               	addwf	(Main_Delay@i),f
 13148  128C  07F3               	skipnc
 13149  128D  1803               	incf	(Main_Delay@i+1),f
 13150  128E  0AF4               	movlw	0
 13151  128F  3000               	addwf	(Main_Delay@i+1),f
 13152  1290  07F4               	
 13153                           l95:	
 13154  1291                     	movf	(Main_Delay@i+1),w
 13155  1291  0874               	xorlw	80h
 13156  1292  3A80               	movwf	(??_Main_Delay+0)+0
 13157  1293  00F2               	movf	(Main_Delay@k+1),w
 13158  1294  0871               	xorlw	80h
 13159  1295  3A80               	subwf	(??_Main_Delay+0)+0,w
 13160  1296  0272               	skipz
 13161  1297  1D03               	goto	u2455
 13162  1298  2A9B               	movf	(Main_Delay@k),w
 13163  1299  0870               	subwf	(Main_Delay@i),w
 13164  129A  0273               u2455:
 13165  129B                     
 13166                           	skipc
 13167  129B  1C03               	goto	u2451
 13168  129C  2A9E               	goto	u2450
 13169  129D  2A9F               u2451:
 13170  129E                     	goto	l3234
 13171  129E  2A66               u2450:
 13172  129F                     	goto	l100
 13173  129F  2AA0               	
 13174                           l99:	
 13175  12A0                     	line	59
 13176                           	
 13177                           l100:	
 13178  12A0                     	return
 13179  12A0  0008               	opt stack 0
 13180                           GLOBAL	__end_of_Main_Delay
 13181                           	__end_of_Main_Delay:
 13182  12A1                     	signat	_Main_Delay,4217
 13183                           	global	_LCD_SendString
 13184                           
 13185 ;; *************** function _LCD_SendString *****************
 13186 ;; Defined at:
 13187 ;;		line 69 in file "LCD.c"
 13188 ;; Parameters:    Size  Location     Type
 13189 ;;  string          2    1[COMMON] PTR const unsigned char 
 13190 ;;		 -> STR_31(4), STR_30(4), STR_29(4), STR_28(4), 
 13191 ;;		 -> STR_27(4), STR_26(4), STR_25(4), STR_24(13), 
 13192 ;;		 -> STR_23(6), STR_22(5), SetTime@digits(9), STR_21(9), 
 13193 ;;		 -> STR_20(6), STR_19(6), STR_18(7), STR_17(16), 
 13194 ;;		 -> STR_16(11), STR_15(12), STR_14(4), STR_13(3), 
 13195 ;;		 -> STR_12(9), ChangeTrigger@digits(3), STR_11(12), STR_10(9), 
 13196 ;;		 -> tempBuffer(6), STR_9(6), STR_8(6), STR_7(7), 
 13197 ;;		 -> STR_6(9), STR_5(7), STR_4(9), STR_3(10), 
 13198 ;;		 -> STR_2(8), STR_1(7), timeDisplayer(9), 
 13199 ;; Auto vars:     Size  Location     Type
 13200 ;;  i               2    6[COMMON] int 
 13201 ;; Return value:  Size  Location     Type
 13202 ;;                  1    wreg      void 
 13203 ;; Registers used:
 13204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 13205 ;; Tracked objects:
 13206 ;;		On entry : 0/0
 13207 ;;		On exit  : 0/0
 13208 ;;		Unchanged: 0/0
 13209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13210 ;;      Params:         2       0       0       0       0
 13211 ;;      Locals:         2       0       0       0       0
 13212 ;;      Temps:          3       0       0       0       0
 13213 ;;      Totals:         7       0       0       0       0
 13214 ;;Total ram usage:        7 bytes
 13215 ;; Hardware stack levels used:    1
 13216 ;; Hardware stack levels required when called:    2
 13217 ;; This function calls:
 13218 ;;		_LCD_SendData
 13219 ;; This function is called by:
 13220 ;;		_DisplayTime
 13221 ;;		_DisplayDay
 13222 ;;		_DisplayTemp
 13223 ;;		_MainScreen
 13224 ;;		_ChangeTrigger
 13225 ;;		_SwapToHeatingDisplay
 13226 ;;		_HeatingControlOff
 13227 ;;		_SoundAlarm
 13228 ;;		_DateDayScreen
 13229 ;;		_SetTime
 13230 ;;		_SetDate
 13231 ;; This function uses a non-reentrant model
 13232 ;;
 13233                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
 13234                           	file	"LCD.c"
 13235                           	line	69
 13236                           global __ptext42
 13237                           __ptext42:	;psect for function _LCD_SendString
 13238  1365                     psect	text42
 13239                           	file	"LCD.c"
 13240                           	line	69
 13241                           	global	__size_of_LCD_SendString
 13242                           	__size_of_LCD_SendString	equ	__end_of_LCD_SendString-_LCD_SendString
 13243  0044                     	
 13244                           _LCD_SendString:	
 13245  1365                     ;incstack = 0
 13246                           	opt	stack 4
 13247                           ; Regs used in _LCD_SendString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 13248                           	line	71
 13249                           	
 13250                           l3128:	
 13251  1365                     ;LCD.c: 71:     for (int i = 0; string[i]!='\0'; ++i)
 13252                           	clrf	(LCD_SendString@i)
 13253  1365  01F6               	clrf	(LCD_SendString@i+1)
 13254  1366  01F7               	goto	l3134
 13255  1367  2B8B               	
 13256                           l528:	
 13257  1368                     	line	74
 13258                           	
 13259                           l3130:	
 13260  1368                     ;LCD.c: 72:     {;LCD.c: 74:         LCD_SendData(string[i]);
 13261                           	movf	(LCD_SendString@i),w
 13262  1368  0876               	addwf	(LCD_SendString@string),w
 13263  1369  0771               	movwf	(??_LCD_SendString+1)+0
 13264  136A  00F4               	movf	(LCD_SendString@string+1),w
 13265  136B  0872               	movwf	(??_LCD_SendString+0)+0
 13266  136C  00F3               	skipnc
 13267  136D  1803               	incf	(??_LCD_SendString+0)+0,f
 13268  136E  0AF3               	btfss	(LCD_SendString@i),7
 13269  136F  1FF6               	goto	u2270
 13270  1370  2B72               	decf	(??_LCD_SendString+0)+0,f
 13271  1371  03F3               u2270:
 13272  1372                     	movf	(??_LCD_SendString+0)+0,w
 13273  1372  0873               	movwf	0+((??_LCD_SendString+1)+0)+1
 13274  1373  00F5               	movf	1+(??_LCD_SendString+1)+0,w
 13275  1374  0875               	bcf	status, 5	;RP0=0, select bank0
 13276  1375  1283               	bcf	status, 6	;RP1=0, select bank0
 13277  1376  1303               	movwf	btemp+1
 13278  1377  00FF               	movf	0+(??_LCD_SendString+1)+0,w
 13279  1378  0874               	movwf	fsr0
 13280  1379  0084               	fcall	stringtab
 13281  137A  160A  118A  2000  160A  118A  	fcall	_LCD_SendData
 13282  137F  160A  158A  2642  160A  118A  	line	75
 13283                           	
 13284                           l3132:	
 13285  1384                     ;LCD.c: 75:     }
 13286                           	movlw	01h
 13287  1384  3001               	addwf	(LCD_SendString@i),f
 13288  1385  07F6               	skipnc
 13289  1386  1803               	incf	(LCD_SendString@i+1),f
 13290  1387  0AF7               	movlw	0
 13291  1388  3000               	addwf	(LCD_SendString@i+1),f
 13292  1389  07F7               	goto	l3134
 13293  138A  2B8B               	
 13294                           l527:	
 13295  138B                     	
 13296                           l3134:	
 13297  138B                     	movf	(LCD_SendString@i),w
 13298  138B  0876               	addwf	(LCD_SendString@string),w
 13299  138C  0771               	movwf	(??_LCD_SendString+1)+0
 13300  138D  00F4               	movf	(LCD_SendString@string+1),w
 13301  138E  0872               	movwf	(??_LCD_SendString+0)+0
 13302  138F  00F3               	skipnc
 13303  1390  1803               	incf	(??_LCD_SendString+0)+0,f
 13304  1391  0AF3               	btfss	(LCD_SendString@i),7
 13305  1392  1FF6               	goto	u2280
 13306  1393  2B95               	decf	(??_LCD_SendString+0)+0,f
 13307  1394  03F3               u2280:
 13308  1395                     	movf	(??_LCD_SendString+0)+0,w
 13309  1395  0873               	movwf	0+((??_LCD_SendString+1)+0)+1
 13310  1396  00F5               	movf	1+(??_LCD_SendString+1)+0,w
 13311  1397  0875               	bcf	status, 5	;RP0=0, select bank0
 13312  1398  1283               	bcf	status, 6	;RP1=0, select bank0
 13313  1399  1303               	movwf	btemp+1
 13314  139A  00FF               	movf	0+(??_LCD_SendString+1)+0,w
 13315  139B  0874               	movwf	fsr0
 13316  139C  0084               	fcall	stringtab
 13317  139D  160A  118A  2000  160A  118A  	xorlw	0
 13318  13A2  3A00               	skipz
 13319  13A3  1D03               	goto	u2291
 13320  13A4  2BA6               	goto	u2290
 13321  13A5  2BA7               u2291:
 13322  13A6                     	goto	l3130
 13323  13A6  2B68               u2290:
 13324  13A7                     	goto	l530
 13325  13A7  2BA8               	
 13326                           l529:	
 13327  13A8                     	line	76
 13328                           	
 13329                           l530:	
 13330  13A8                     	return
 13331  13A8  0008               	opt stack 0
 13332                           GLOBAL	__end_of_LCD_SendString
 13333                           	__end_of_LCD_SendString:
 13334  13A9                     	signat	_LCD_SendString,4217
 13335                           	global	_LCD_SendData
 13336                           
 13337 ;; *************** function _LCD_SendData *****************
 13338 ;; Defined at:
 13339 ;;		line 55 in file "LCD.c"
 13340 ;; Parameters:    Size  Location     Type
 13341 ;;  c               1    wreg     unsigned char 
 13342 ;; Auto vars:     Size  Location     Type
 13343 ;;  c               1    0[COMMON] unsigned char 
 13344 ;; Return value:  Size  Location     Type
 13345 ;;                  1    wreg      void 
 13346 ;; Registers used:
 13347 ;;		wreg, status,2, status,0, pclath, cstack
 13348 ;; Tracked objects:
 13349 ;;		On entry : 0/0
 13350 ;;		On exit  : 0/0
 13351 ;;		Unchanged: 0/0
 13352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13353 ;;      Params:         0       0       0       0       0
 13354 ;;      Locals:         1       0       0       0       0
 13355 ;;      Temps:          0       0       0       0       0
 13356 ;;      Totals:         1       0       0       0       0
 13357 ;;Total ram usage:        1 bytes
 13358 ;; Hardware stack levels used:    1
 13359 ;; Hardware stack levels required when called:    1
 13360 ;; This function calls:
 13361 ;;		_LCD_Busy
 13362 ;; This function is called by:
 13363 ;;		_DisplayTemp
 13364 ;;		_ChangeTrigger
 13365 ;;		_Switch24Hour
 13366 ;;		_LCD_SendString
 13367 ;; This function uses a non-reentrant model
 13368 ;;
 13369                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
 13370                           	line	55
 13371                           global __ptext43
 13372                           __ptext43:	;psect for function _LCD_SendData
 13373  1E42                     psect	text43
 13374                           	file	"LCD.c"
 13375                           	line	55
 13376                           	global	__size_of_LCD_SendData
 13377                           	__size_of_LCD_SendData	equ	__end_of_LCD_SendData-_LCD_SendData
 13378  000F                     	
 13379                           _LCD_SendData:	
 13380  1E42                     ;incstack = 0
 13381                           	opt	stack 5
 13382                           ; Regs used in _LCD_SendData: [wreg+status,2+status,0+pclath+cstack]
 13383                           ;LCD_SendData@c stored from wreg
 13384                           	movwf	(LCD_SendData@c)
 13385  1E42  00F0               	line	57
 13386                           	
 13387                           l2834:	
 13388  1E43                     ;LCD.c: 57:     RA1 = 1;
 13389                           	bcf	status, 5	;RP0=0, select bank0
 13390  1E43  1283               	bcf	status, 6	;RP1=0, select bank0
 13391  1E44  1303               	bsf	(41/8),(41)&7	;volatile
 13392  1E45  1485               	line	59
 13393                           ;LCD.c: 59:     RA2 = 0;
 13394                           	bcf	(42/8),(42)&7	;volatile
 13395  1E46  1105               	line	61
 13396                           ;LCD.c: 61:     RA3 = 1;
 13397                           	bsf	(43/8),(43)&7	;volatile
 13398  1E47  1585               	line	63
 13399                           	
 13400                           l2836:	
 13401  1E48                     ;LCD.c: 63:     PORTD = c;
 13402                           	movf	(LCD_SendData@c),w
 13403  1E48  0870               	movwf	(8)	;volatile
 13404  1E49  0088               	line	64
 13405                           	
 13406                           l2838:	
 13407  1E4A                     ;LCD.c: 64:     RA3 = 0;
 13408                           	bcf	(43/8),(43)&7	;volatile
 13409  1E4A  1185               	line	65
 13410                           	
 13411                           l2840:	
 13412  1E4B                     ;LCD.c: 65:     LCD_Busy();
 13413                           	fcall	_LCD_Busy
 13414  1E4B  160A  158A  2674  160A  158A  	line	66
 13415                           	
 13416                           l524:	
 13417  1E50                     	return
 13418  1E50  0008               	opt stack 0
 13419                           GLOBAL	__end_of_LCD_SendData
 13420                           	__end_of_LCD_SendData:
 13421  1E51                     	signat	_LCD_SendData,4217
 13422                           	global	_LCD_Command
 13423                           
 13424 ;; *************** function _LCD_Command *****************
 13425 ;; Defined at:
 13426 ;;		line 34 in file "LCD.c"
 13427 ;; Parameters:    Size  Location     Type
 13428 ;;  c               1    wreg     unsigned char 
 13429 ;; Auto vars:     Size  Location     Type
 13430 ;;  c               1    0[COMMON] unsigned char 
 13431 ;; Return value:  Size  Location     Type
 13432 ;;                  1    wreg      void 
 13433 ;; Registers used:
 13434 ;;		wreg, status,2, status,0, pclath, cstack
 13435 ;; Tracked objects:
 13436 ;;		On entry : 0/0
 13437 ;;		On exit  : 0/0
 13438 ;;		Unchanged: 0/0
 13439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13440 ;;      Params:         0       0       0       0       0
 13441 ;;      Locals:         1       0       0       0       0
 13442 ;;      Temps:          0       0       0       0       0
 13443 ;;      Totals:         1       0       0       0       0
 13444 ;;Total ram usage:        1 bytes
 13445 ;; Hardware stack levels used:    1
 13446 ;; Hardware stack levels required when called:    1
 13447 ;; This function calls:
 13448 ;;		_LCD_Busy
 13449 ;; This function is called by:
 13450 ;;		_ChangeTrigger
 13451 ;;		_SwapToHeatingDisplay
 13452 ;;		_HeatingControlOff
 13453 ;;		_SoundAlarm
 13454 ;;		_Switch24Hour
 13455 ;;		_DateDayScreen
 13456 ;;		_SetTime
 13457 ;;		_SetDate
 13458 ;;		_main
 13459 ;;		_LCD_SecondLine
 13460 ;; This function uses a non-reentrant model
 13461 ;;
 13462                           psect	text44,local,class=CODE,delta=2,merge=1,group=0
 13463                           	line	34
 13464                           global __ptext44
 13465                           __ptext44:	;psect for function _LCD_Command
 13466  1E33                     psect	text44
 13467                           	file	"LCD.c"
 13468                           	line	34
 13469                           	global	__size_of_LCD_Command
 13470                           	__size_of_LCD_Command	equ	__end_of_LCD_Command-_LCD_Command
 13471  000F                     	
 13472                           _LCD_Command:	
 13473  1E33                     ;incstack = 0
 13474                           	opt	stack 5
 13475                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
 13476                           ;LCD_Command@c stored from wreg
 13477                           	movwf	(LCD_Command@c)
 13478  1E33  00F0               	line	36
 13479                           	
 13480                           l3212:	
 13481  1E34                     ;LCD.c: 36:     RA1 = 0;
 13482                           	bcf	status, 5	;RP0=0, select bank0
 13483  1E34  1283               	bcf	status, 6	;RP1=0, select bank0
 13484  1E35  1303               	bcf	(41/8),(41)&7	;volatile
 13485  1E36  1085               	line	38
 13486                           ;LCD.c: 38:     RA2 = 0;
 13487                           	bcf	(42/8),(42)&7	;volatile
 13488  1E37  1105               	line	40
 13489                           ;LCD.c: 40:     RA3 = 1;
 13490                           	bsf	(43/8),(43)&7	;volatile
 13491  1E38  1585               	line	42
 13492                           	
 13493                           l3214:	
 13494  1E39                     ;LCD.c: 42:     PORTD = c;
 13495                           	movf	(LCD_Command@c),w
 13496  1E39  0870               	movwf	(8)	;volatile
 13497  1E3A  0088               	line	43
 13498                           	
 13499                           l3216:	
 13500  1E3B                     ;LCD.c: 43:     RA3 = 0;
 13501                           	bcf	(43/8),(43)&7	;volatile
 13502  1E3B  1185               	line	45
 13503                           	
 13504                           l3218:	
 13505  1E3C                     ;LCD.c: 45:     LCD_Busy();
 13506                           	fcall	_LCD_Busy
 13507  1E3C  160A  158A  2674  160A  158A  	line	46
 13508                           	
 13509                           l518:	
 13510  1E41                     	return
 13511  1E41  0008               	opt stack 0
 13512                           GLOBAL	__end_of_LCD_Command
 13513                           	__end_of_LCD_Command:
 13514  1E42                     	signat	_LCD_Command,4217
 13515                           	global	_LCD_Busy
 13516                           
 13517 ;; *************** function _LCD_Busy *****************
 13518 ;; Defined at:
 13519 ;;		line 6 in file "LCD.c"
 13520 ;; Parameters:    Size  Location     Type
 13521 ;;		None
 13522 ;; Auto vars:     Size  Location     Type
 13523 ;;		None
 13524 ;; Return value:  Size  Location     Type
 13525 ;;                  1    wreg      void 
 13526 ;; Registers used:
 13527 ;;		wreg, status,2
 13528 ;; Tracked objects:
 13529 ;;		On entry : 0/0
 13530 ;;		On exit  : 0/0
 13531 ;;		Unchanged: 0/0
 13532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13533 ;;      Params:         0       0       0       0       0
 13534 ;;      Locals:         0       0       0       0       0
 13535 ;;      Temps:          0       0       0       0       0
 13536 ;;      Totals:         0       0       0       0       0
 13537 ;;Total ram usage:        0 bytes
 13538 ;; Hardware stack levels used:    1
 13539 ;; This function calls:
 13540 ;;		Nothing
 13541 ;; This function is called by:
 13542 ;;		_DisplayTemp
 13543 ;;		_ChangeTrigger
 13544 ;;		_LCD_Command
 13545 ;;		_LCD_SendData
 13546 ;; This function uses a non-reentrant model
 13547 ;;
 13548                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
 13549                           	line	6
 13550                           global __ptext45
 13551                           __ptext45:	;psect for function _LCD_Busy
 13552  1E74                     psect	text45
 13553                           	file	"LCD.c"
 13554                           	line	6
 13555                           	global	__size_of_LCD_Busy
 13556                           	__size_of_LCD_Busy	equ	__end_of_LCD_Busy-_LCD_Busy
 13557  0015                     	
 13558                           _LCD_Busy:	
 13559  1E74                     ;incstack = 0
 13560                           	opt	stack 5
 13561                           ; Regs used in _LCD_Busy: [wreg+status,2]
 13562                           	line	8
 13563                           	
 13564                           l2780:	
 13565  1E74                     ;LCD.c: 8:     TRISD = 0xFF;
 13566                           	movlw	low(0FFh)
 13567  1E74  30FF               	bsf	status, 5	;RP0=1, select bank1
 13568  1E75  1683               	bcf	status, 6	;RP1=0, select bank1
 13569  1E76  1303               	movwf	(136)^080h	;volatile
 13570  1E77  0088               	line	9
 13571                           	
 13572                           l2782:	
 13573  1E78                     ;LCD.c: 9:     RA3 = 1;
 13574                           	bcf	status, 5	;RP0=0, select bank0
 13575  1E78  1283               	bcf	status, 6	;RP1=0, select bank0
 13576  1E79  1303               	bsf	(43/8),(43)&7	;volatile
 13577  1E7A  1585               	line	11
 13578                           	
 13579                           l2784:	
 13580  1E7B                     ;LCD.c: 11:     RA1 = 0;
 13581                           	bcf	(41/8),(41)&7	;volatile
 13582  1E7B  1085               	line	13
 13583                           	
 13584                           l2786:	
 13585  1E7C                     ;LCD.c: 13:     RA2 = 1;
 13586                           	bsf	(42/8),(42)&7	;volatile
 13587  1E7C  1505               	line	15
 13588                           ;LCD.c: 15:     while(RD7)
 13589                           	goto	l509
 13590  1E7D  2E80               	
 13591                           l510:	
 13592  1E7E                     	line	18
 13593                           ;LCD.c: 16:     {;LCD.c: 18:         RA3 = 0;
 13594                           	bcf	(43/8),(43)&7	;volatile
 13595  1E7E  1185               	line	19
 13596                           ;LCD.c: 19:         RA3 = 1;
 13597                           	bsf	(43/8),(43)&7	;volatile
 13598  1E7F  1585               	line	20
 13599                           ;LCD.c: 20:     }
 13600                           	
 13601                           l509:	
 13602  1E80                     	line	15
 13603                           ;LCD.c: 15:     while(RD7)
 13604                           	btfsc	(71/8),(71)&7	;volatile
 13605  1E80  1B88               	goto	u1731
 13606  1E81  2E83               	goto	u1730
 13607  1E82  2E84               u1731:
 13608  1E83                     	goto	l510
 13609  1E83  2E7E               u1730:
 13610  1E84                     	goto	l2788
 13611  1E84  2E85               	
 13612                           l511:	
 13613  1E85                     	line	22
 13614                           	
 13615                           l2788:	
 13616  1E85                     ;LCD.c: 22:     TRISD = 0x00;
 13617                           	bsf	status, 5	;RP0=1, select bank1
 13618  1E85  1683               	bcf	status, 6	;RP1=0, select bank1
 13619  1E86  1303               	clrf	(136)^080h	;volatile
 13620  1E87  0188               	line	23
 13621                           	
 13622                           l512:	
 13623  1E88                     	return
 13624  1E88  0008               	opt stack 0
 13625                           GLOBAL	__end_of_LCD_Busy
 13626                           	__end_of_LCD_Busy:
 13627  1E89                     	signat	_LCD_Busy,89
 13628                           	global	_Keypad_Scan
 13629                           
 13630 ;; *************** function _Keypad_Scan *****************
 13631 ;; Defined at:
 13632 ;;		line 17 in file "KeyMatrix.c"
 13633 ;; Parameters:    Size  Location     Type
 13634 ;;		None
 13635 ;; Auto vars:     Size  Location     Type
 13636 ;;		None
 13637 ;; Return value:  Size  Location     Type
 13638 ;;                  2    6[COMMON] int 
 13639 ;; Registers used:
 13640 ;;		wreg, status,2, status,0, pclath, cstack
 13641 ;; Tracked objects:
 13642 ;;		On entry : 0/0
 13643 ;;		On exit  : 0/0
 13644 ;;		Unchanged: 0/0
 13645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 13646 ;;      Params:         2       0       0       0       0
 13647 ;;      Locals:         0       0       0       0       0
 13648 ;;      Temps:          0       0       0       0       0
 13649 ;;      Totals:         2       0       0       0       0
 13650 ;;Total ram usage:        2 bytes
 13651 ;; Hardware stack levels used:    1
 13652 ;; Hardware stack levels required when called:    1
 13653 ;; This function calls:
 13654 ;;		_Key_Delay
 13655 ;; This function is called by:
 13656 ;;		_ChangeTrigger
 13657 ;;		_SwapToHeatingDisplay
 13658 ;;		_HeatingControlOff
 13659 ;;		_SoundAlarm
 13660 ;;		_DateDayScreen
 13661 ;;		_SetTime
 13662 ;;		_SetDate
 13663 ;;		_main
 13664 ;; This function uses a non-reentrant model
 13665 ;;
 13666                           psect	text46,local,class=CODE,delta=2,merge=1,group=0
 13667                           	file	"KeyMatrix.c"
 13668                           	line	17
 13669                           global __ptext46
 13670                           __ptext46:	;psect for function _Keypad_Scan
 13671  00E5                     psect	text46
 13672                           	file	"KeyMatrix.c"
 13673                           	line	17
 13674                           	global	__size_of_Keypad_Scan
 13675                           	__size_of_Keypad_Scan	equ	__end_of_Keypad_Scan-_Keypad_Scan
 13676  01C7                     	
 13677                           _Keypad_Scan:	
 13678  00E5                     ;incstack = 0
 13679                           	opt	stack 5
 13680                           ; Regs used in _Keypad_Scan: [wreg+status,2+status,0+pclath+cstack]
 13681                           	line	19
 13682                           	
 13683                           l3278:	
 13684  00E5                     ;KeyMatrix.c: 19:     RC4 = 1; RC5 = 0; RC6 = 0; RC7 = 0;
 13685                           	bcf	status, 5	;RP0=0, select bank0
 13686  00E5  1283               	bcf	status, 6	;RP1=0, select bank0
 13687  00E6  1303               	bsf	(60/8),(60)&7	;volatile
 13688  00E7  1607               	bcf	(61/8),(61)&7	;volatile
 13689  00E8  1287               	bcf	(62/8),(62)&7	;volatile
 13690  00E9  1307               	bcf	(63/8),(63)&7	;volatile
 13691  00EA  1387               	line	20
 13692                           ;KeyMatrix.c: 20:     if(RC3 == 1)
 13693                           	btfss	(59/8),(59)&7	;volatile
 13694  00EB  1D87               	goto	u2461
 13695  00EC  28EE               	goto	u2460
 13696  00ED  28EF               u2461:
 13697  00EE                     	goto	l426
 13698  00EE  2906               u2460:
 13699  00EF                     	line	22
 13700                           	
 13701                           l3280:	
 13702  00EF                     ;KeyMatrix.c: 21:     {;KeyMatrix.c: 22:         Key_Delay(50);
 13703                           	movlw	032h
 13704  00EF  3032               	movwf	(Key_Delay@k)
 13705  00F0  00F0               	movlw	0
 13706  00F1  3000               	movwf	((Key_Delay@k))+1
 13707  00F2  00F1               	fcall	_Key_Delay
 13708  00F3  160A  118A  2152  120A  118A  	line	23
 13709                           ;KeyMatrix.c: 23:         while(RC3 == 1)
 13710                           	goto	l427
 13711  00F8  28FF               	
 13712                           l428:	
 13713  00F9                     	line	24
 13714                           	
 13715                           l3282:	
 13716  00F9                     ;KeyMatrix.c: 24:             return 1;
 13717                           	movlw	01h
 13718  00F9  3001               	movwf	(?_Keypad_Scan)
 13719  00FA  00F6               	movlw	0
 13720  00FB  3000               	movwf	((?_Keypad_Scan))+1
 13721  00FC  00F7               	goto	l429
 13722  00FD  2AAB               	
 13723                           l3284:	
 13724  00FE                     	goto	l429
 13725  00FE  2AAB               	
 13726                           l427:	
 13727  00FF                     	line	23
 13728                           ;KeyMatrix.c: 23:         while(RC3 == 1)
 13729                           	bcf	status, 5	;RP0=0, select bank0
 13730  00FF  1283               	bcf	status, 6	;RP1=0, select bank0
 13731  0100  1303               	btfsc	(59/8),(59)&7	;volatile
 13732  0101  1987               	goto	u2471
 13733  0102  2904               	goto	u2470
 13734  0103  2905               u2471:
 13735  0104                     	goto	l3282
 13736  0104  28F9               u2470:
 13737  0105                     	goto	l426
 13738  0105  2906               	
 13739                           l430:	
 13740  0106                     	line	25
 13741                           ;KeyMatrix.c: 25:     }
 13742                           	
 13743                           l426:	
 13744  0106                     	line	26
 13745                           ;KeyMatrix.c: 26:     if(RC2 == 1)
 13746                           	btfss	(58/8),(58)&7	;volatile
 13747  0106  1D07               	goto	u2481
 13748  0107  2909               	goto	u2480
 13749  0108  290A               u2481:
 13750  0109                     	goto	l431
 13751  0109  2921               u2480:
 13752  010A                     	line	28
 13753                           	
 13754                           l3286:	
 13755  010A                     ;KeyMatrix.c: 27:     {;KeyMatrix.c: 28:        Key_Delay(50);
 13756                           	movlw	032h
 13757  010A  3032               	movwf	(Key_Delay@k)
 13758  010B  00F0               	movlw	0
 13759  010C  3000               	movwf	((Key_Delay@k))+1
 13760  010D  00F1               	fcall	_Key_Delay
 13761  010E  160A  118A  2152  120A  118A  	line	29
 13762                           ;KeyMatrix.c: 29:        while(RC2 == 1)
 13763                           	goto	l432
 13764  0113  291A               	
 13765                           l433:	
 13766  0114                     	line	30
 13767                           	
 13768                           l3288:	
 13769  0114                     ;KeyMatrix.c: 30:             return 2;
 13770                           	movlw	02h
 13771  0114  3002               	movwf	(?_Keypad_Scan)
 13772  0115  00F6               	movlw	0
 13773  0116  3000               	movwf	((?_Keypad_Scan))+1
 13774  0117  00F7               	goto	l429
 13775  0118  2AAB               	
 13776                           l3290:	
 13777  0119                     	goto	l429
 13778  0119  2AAB               	
 13779                           l432:	
 13780  011A                     	line	29
 13781                           ;KeyMatrix.c: 29:        while(RC2 == 1)
 13782                           	bcf	status, 5	;RP0=0, select bank0
 13783  011A  1283               	bcf	status, 6	;RP1=0, select bank0
 13784  011B  1303               	btfsc	(58/8),(58)&7	;volatile
 13785  011C  1907               	goto	u2491
 13786  011D  291F               	goto	u2490
 13787  011E  2920               u2491:
 13788  011F                     	goto	l3288
 13789  011F  2914               u2490:
 13790  0120                     	goto	l431
 13791  0120  2921               	
 13792                           l434:	
 13793  0121                     	line	31
 13794                           ;KeyMatrix.c: 31:     }
 13795                           	
 13796                           l431:	
 13797  0121                     	line	32
 13798                           ;KeyMatrix.c: 32:     if(RC1 == 1)
 13799                           	btfss	(57/8),(57)&7	;volatile
 13800  0121  1C87               	goto	u2501
 13801  0122  2924               	goto	u2500
 13802  0123  2925               u2501:
 13803  0124                     	goto	l435
 13804  0124  293C               u2500:
 13805  0125                     	line	34
 13806                           	
 13807                           l3292:	
 13808  0125                     ;KeyMatrix.c: 33:     {;KeyMatrix.c: 34:         Key_Delay(50);
 13809                           	movlw	032h
 13810  0125  3032               	movwf	(Key_Delay@k)
 13811  0126  00F0               	movlw	0
 13812  0127  3000               	movwf	((Key_Delay@k))+1
 13813  0128  00F1               	fcall	_Key_Delay
 13814  0129  160A  118A  2152  120A  118A  	line	35
 13815                           ;KeyMatrix.c: 35:         while(RC1 == 1)
 13816                           	goto	l436
 13817  012E  2935               	
 13818                           l437:	
 13819  012F                     	line	36
 13820                           	
 13821                           l3294:	
 13822  012F                     ;KeyMatrix.c: 36:             return 3;
 13823                           	movlw	03h
 13824  012F  3003               	movwf	(?_Keypad_Scan)
 13825  0130  00F6               	movlw	0
 13826  0131  3000               	movwf	((?_Keypad_Scan))+1
 13827  0132  00F7               	goto	l429
 13828  0133  2AAB               	
 13829                           l3296:	
 13830  0134                     	goto	l429
 13831  0134  2AAB               	
 13832                           l436:	
 13833  0135                     	line	35
 13834                           ;KeyMatrix.c: 35:         while(RC1 == 1)
 13835                           	bcf	status, 5	;RP0=0, select bank0
 13836  0135  1283               	bcf	status, 6	;RP1=0, select bank0
 13837  0136  1303               	btfsc	(57/8),(57)&7	;volatile
 13838  0137  1887               	goto	u2511
 13839  0138  293A               	goto	u2510
 13840  0139  293B               u2511:
 13841  013A                     	goto	l3294
 13842  013A  292F               u2510:
 13843  013B                     	goto	l435
 13844  013B  293C               	
 13845                           l438:	
 13846  013C                     	line	37
 13847                           ;KeyMatrix.c: 37:     }
 13848                           	
 13849                           l435:	
 13850  013C                     	line	38
 13851                           ;KeyMatrix.c: 38:     if(RC0 == 1)
 13852                           	btfss	(56/8),(56)&7	;volatile
 13853  013C  1C07               	goto	u2521
 13854  013D  293F               	goto	u2520
 13855  013E  2940               u2521:
 13856  013F                     	goto	l439
 13857  013F  2957               u2520:
 13858  0140                     	line	40
 13859                           	
 13860                           l3298:	
 13861  0140                     ;KeyMatrix.c: 39:     {;KeyMatrix.c: 40:         Key_Delay(50);
 13862                           	movlw	032h
 13863  0140  3032               	movwf	(Key_Delay@k)
 13864  0141  00F0               	movlw	0
 13865  0142  3000               	movwf	((Key_Delay@k))+1
 13866  0143  00F1               	fcall	_Key_Delay
 13867  0144  160A  118A  2152  120A  118A  	line	41
 13868                           ;KeyMatrix.c: 41:         while(RC0 == 1)
 13869                           	goto	l440
 13870  0149  2950               	
 13871                           l441:	
 13872  014A                     	line	42
 13873                           	
 13874                           l3300:	
 13875  014A                     ;KeyMatrix.c: 42:             return 4;
 13876                           	movlw	04h
 13877  014A  3004               	movwf	(?_Keypad_Scan)
 13878  014B  00F6               	movlw	0
 13879  014C  3000               	movwf	((?_Keypad_Scan))+1
 13880  014D  00F7               	goto	l429
 13881  014E  2AAB               	
 13882                           l3302:	
 13883  014F                     	goto	l429
 13884  014F  2AAB               	
 13885                           l440:	
 13886  0150                     	line	41
 13887                           ;KeyMatrix.c: 41:         while(RC0 == 1)
 13888                           	bcf	status, 5	;RP0=0, select bank0
 13889  0150  1283               	bcf	status, 6	;RP1=0, select bank0
 13890  0151  1303               	btfsc	(56/8),(56)&7	;volatile
 13891  0152  1807               	goto	u2531
 13892  0153  2955               	goto	u2530
 13893  0154  2956               u2531:
 13894  0155                     	goto	l3300
 13895  0155  294A               u2530:
 13896  0156                     	goto	l439
 13897  0156  2957               	
 13898                           l442:	
 13899  0157                     	line	43
 13900                           ;KeyMatrix.c: 43:     }
 13901                           	
 13902                           l439:	
 13903  0157                     	line	44
 13904                           ;KeyMatrix.c: 44:     RC4 = 0; RC5 = 1; RC6 = 0; RC7 = 0;
 13905                           	bcf	(60/8),(60)&7	;volatile
 13906  0157  1207               	bsf	(61/8),(61)&7	;volatile
 13907  0158  1687               	bcf	(62/8),(62)&7	;volatile
 13908  0159  1307               	bcf	(63/8),(63)&7	;volatile
 13909  015A  1387               	line	45
 13910                           ;KeyMatrix.c: 45:     if(RC3 == 1)
 13911                           	btfss	(59/8),(59)&7	;volatile
 13912  015B  1D87               	goto	u2541
 13913  015C  295E               	goto	u2540
 13914  015D  295F               u2541:
 13915  015E                     	goto	l443
 13916  015E  2976               u2540:
 13917  015F                     	line	47
 13918                           	
 13919                           l3304:	
 13920  015F                     ;KeyMatrix.c: 46:     {;KeyMatrix.c: 47:         Key_Delay(50);
 13921                           	movlw	032h
 13922  015F  3032               	movwf	(Key_Delay@k)
 13923  0160  00F0               	movlw	0
 13924  0161  3000               	movwf	((Key_Delay@k))+1
 13925  0162  00F1               	fcall	_Key_Delay
 13926  0163  160A  118A  2152  120A  118A  	line	48
 13927                           ;KeyMatrix.c: 48:         while(RC3 == 1)
 13928                           	goto	l444
 13929  0168  296F               	
 13930                           l445:	
 13931  0169                     	line	49
 13932                           	
 13933                           l3306:	
 13934  0169                     ;KeyMatrix.c: 49:             return 5;
 13935                           	movlw	05h
 13936  0169  3005               	movwf	(?_Keypad_Scan)
 13937  016A  00F6               	movlw	0
 13938  016B  3000               	movwf	((?_Keypad_Scan))+1
 13939  016C  00F7               	goto	l429
 13940  016D  2AAB               	
 13941                           l3308:	
 13942  016E                     	goto	l429
 13943  016E  2AAB               	
 13944                           l444:	
 13945  016F                     	line	48
 13946                           ;KeyMatrix.c: 48:         while(RC3 == 1)
 13947                           	bcf	status, 5	;RP0=0, select bank0
 13948  016F  1283               	bcf	status, 6	;RP1=0, select bank0
 13949  0170  1303               	btfsc	(59/8),(59)&7	;volatile
 13950  0171  1987               	goto	u2551
 13951  0172  2974               	goto	u2550
 13952  0173  2975               u2551:
 13953  0174                     	goto	l3306
 13954  0174  2969               u2550:
 13955  0175                     	goto	l443
 13956  0175  2976               	
 13957                           l446:	
 13958  0176                     	line	50
 13959                           ;KeyMatrix.c: 50:     }
 13960                           	
 13961                           l443:	
 13962  0176                     	line	51
 13963                           ;KeyMatrix.c: 51:     if(RC2 == 1)
 13964                           	btfss	(58/8),(58)&7	;volatile
 13965  0176  1D07               	goto	u2561
 13966  0177  2979               	goto	u2560
 13967  0178  297A               u2561:
 13968  0179                     	goto	l447
 13969  0179  2991               u2560:
 13970  017A                     	line	53
 13971                           	
 13972                           l3310:	
 13973  017A                     ;KeyMatrix.c: 52:     {;KeyMatrix.c: 53:         Key_Delay(50);
 13974                           	movlw	032h
 13975  017A  3032               	movwf	(Key_Delay@k)
 13976  017B  00F0               	movlw	0
 13977  017C  3000               	movwf	((Key_Delay@k))+1
 13978  017D  00F1               	fcall	_Key_Delay
 13979  017E  160A  118A  2152  120A  118A  	line	54
 13980                           ;KeyMatrix.c: 54:         while(RC2 == 1)
 13981                           	goto	l448
 13982  0183  298A               	
 13983                           l449:	
 13984  0184                     	line	55
 13985                           	
 13986                           l3312:	
 13987  0184                     ;KeyMatrix.c: 55:             return 6;
 13988                           	movlw	06h
 13989  0184  3006               	movwf	(?_Keypad_Scan)
 13990  0185  00F6               	movlw	0
 13991  0186  3000               	movwf	((?_Keypad_Scan))+1
 13992  0187  00F7               	goto	l429
 13993  0188  2AAB               	
 13994                           l3314:	
 13995  0189                     	goto	l429
 13996  0189  2AAB               	
 13997                           l448:	
 13998  018A                     	line	54
 13999                           ;KeyMatrix.c: 54:         while(RC2 == 1)
 14000                           	bcf	status, 5	;RP0=0, select bank0
 14001  018A  1283               	bcf	status, 6	;RP1=0, select bank0
 14002  018B  1303               	btfsc	(58/8),(58)&7	;volatile
 14003  018C  1907               	goto	u2571
 14004  018D  298F               	goto	u2570
 14005  018E  2990               u2571:
 14006  018F                     	goto	l3312
 14007  018F  2984               u2570:
 14008  0190                     	goto	l447
 14009  0190  2991               	
 14010                           l450:	
 14011  0191                     	line	56
 14012                           ;KeyMatrix.c: 56:     }
 14013                           	
 14014                           l447:	
 14015  0191                     	line	57
 14016                           ;KeyMatrix.c: 57:     if(RC1 == 1)
 14017                           	btfss	(57/8),(57)&7	;volatile
 14018  0191  1C87               	goto	u2581
 14019  0192  2994               	goto	u2580
 14020  0193  2995               u2581:
 14021  0194                     	goto	l451
 14022  0194  29AC               u2580:
 14023  0195                     	line	59
 14024                           	
 14025                           l3316:	
 14026  0195                     ;KeyMatrix.c: 58:     {;KeyMatrix.c: 59:         Key_Delay(50);
 14027                           	movlw	032h
 14028  0195  3032               	movwf	(Key_Delay@k)
 14029  0196  00F0               	movlw	0
 14030  0197  3000               	movwf	((Key_Delay@k))+1
 14031  0198  00F1               	fcall	_Key_Delay
 14032  0199  160A  118A  2152  120A  118A  	line	60
 14033                           ;KeyMatrix.c: 60:         while(RC1 == 1)
 14034                           	goto	l452
 14035  019E  29A5               	
 14036                           l453:	
 14037  019F                     	line	61
 14038                           	
 14039                           l3318:	
 14040  019F                     ;KeyMatrix.c: 61:             return 7;
 14041                           	movlw	07h
 14042  019F  3007               	movwf	(?_Keypad_Scan)
 14043  01A0  00F6               	movlw	0
 14044  01A1  3000               	movwf	((?_Keypad_Scan))+1
 14045  01A2  00F7               	goto	l429
 14046  01A3  2AAB               	
 14047                           l3320:	
 14048  01A4                     	goto	l429
 14049  01A4  2AAB               	
 14050                           l452:	
 14051  01A5                     	line	60
 14052                           ;KeyMatrix.c: 60:         while(RC1 == 1)
 14053                           	bcf	status, 5	;RP0=0, select bank0
 14054  01A5  1283               	bcf	status, 6	;RP1=0, select bank0
 14055  01A6  1303               	btfsc	(57/8),(57)&7	;volatile
 14056  01A7  1887               	goto	u2591
 14057  01A8  29AA               	goto	u2590
 14058  01A9  29AB               u2591:
 14059  01AA                     	goto	l3318
 14060  01AA  299F               u2590:
 14061  01AB                     	goto	l451
 14062  01AB  29AC               	
 14063                           l454:	
 14064  01AC                     	line	62
 14065                           ;KeyMatrix.c: 62:     }
 14066                           	
 14067                           l451:	
 14068  01AC                     	line	63
 14069                           ;KeyMatrix.c: 63:     if(RC0 == 1)
 14070                           	btfss	(56/8),(56)&7	;volatile
 14071  01AC  1C07               	goto	u2601
 14072  01AD  29AF               	goto	u2600
 14073  01AE  29B0               u2601:
 14074  01AF                     	goto	l455
 14075  01AF  29C7               u2600:
 14076  01B0                     	line	65
 14077                           	
 14078                           l3322:	
 14079  01B0                     ;KeyMatrix.c: 64:     {;KeyMatrix.c: 65:         Key_Delay(50);
 14080                           	movlw	032h
 14081  01B0  3032               	movwf	(Key_Delay@k)
 14082  01B1  00F0               	movlw	0
 14083  01B2  3000               	movwf	((Key_Delay@k))+1
 14084  01B3  00F1               	fcall	_Key_Delay
 14085  01B4  160A  118A  2152  120A  118A  	line	66
 14086                           ;KeyMatrix.c: 66:         while(RC0 == 1)
 14087                           	goto	l456
 14088  01B9  29C0               	
 14089                           l457:	
 14090  01BA                     	line	67
 14091                           	
 14092                           l3324:	
 14093  01BA                     ;KeyMatrix.c: 67:             return 8;
 14094                           	movlw	08h
 14095  01BA  3008               	movwf	(?_Keypad_Scan)
 14096  01BB  00F6               	movlw	0
 14097  01BC  3000               	movwf	((?_Keypad_Scan))+1
 14098  01BD  00F7               	goto	l429
 14099  01BE  2AAB               	
 14100                           l3326:	
 14101  01BF                     	goto	l429
 14102  01BF  2AAB               	
 14103                           l456:	
 14104  01C0                     	line	66
 14105                           ;KeyMatrix.c: 66:         while(RC0 == 1)
 14106                           	bcf	status, 5	;RP0=0, select bank0
 14107  01C0  1283               	bcf	status, 6	;RP1=0, select bank0
 14108  01C1  1303               	btfsc	(56/8),(56)&7	;volatile
 14109  01C2  1807               	goto	u2611
 14110  01C3  29C5               	goto	u2610
 14111  01C4  29C6               u2611:
 14112  01C5                     	goto	l3324
 14113  01C5  29BA               u2610:
 14114  01C6                     	goto	l455
 14115  01C6  29C7               	
 14116                           l458:	
 14117  01C7                     	line	68
 14118                           ;KeyMatrix.c: 68:     }
 14119                           	
 14120                           l455:	
 14121  01C7                     	line	69
 14122                           ;KeyMatrix.c: 69:     RC4 = 0; RC5 = 0; RC6 = 1; RC7 = 0;
 14123                           	bcf	(60/8),(60)&7	;volatile
 14124  01C7  1207               	bcf	(61/8),(61)&7	;volatile
 14125  01C8  1287               	bsf	(62/8),(62)&7	;volatile
 14126  01C9  1707               	bcf	(63/8),(63)&7	;volatile
 14127  01CA  1387               	line	70
 14128                           ;KeyMatrix.c: 70:     if(RC3 == 1)
 14129                           	btfss	(59/8),(59)&7	;volatile
 14130  01CB  1D87               	goto	u2621
 14131  01CC  29CE               	goto	u2620
 14132  01CD  29CF               u2621:
 14133  01CE                     	goto	l459
 14134  01CE  29E6               u2620:
 14135  01CF                     	line	72
 14136                           	
 14137                           l3328:	
 14138  01CF                     ;KeyMatrix.c: 71:     {;KeyMatrix.c: 72:         Key_Delay(50);
 14139                           	movlw	032h
 14140  01CF  3032               	movwf	(Key_Delay@k)
 14141  01D0  00F0               	movlw	0
 14142  01D1  3000               	movwf	((Key_Delay@k))+1
 14143  01D2  00F1               	fcall	_Key_Delay
 14144  01D3  160A  118A  2152  120A  118A  	line	73
 14145                           ;KeyMatrix.c: 73:         while(RC3 == 1)
 14146                           	goto	l460
 14147  01D8  29DF               	
 14148                           l461:	
 14149  01D9                     	line	74
 14150                           	
 14151                           l3330:	
 14152  01D9                     ;KeyMatrix.c: 74:             return 9;
 14153                           	movlw	09h
 14154  01D9  3009               	movwf	(?_Keypad_Scan)
 14155  01DA  00F6               	movlw	0
 14156  01DB  3000               	movwf	((?_Keypad_Scan))+1
 14157  01DC  00F7               	goto	l429
 14158  01DD  2AAB               	
 14159                           l3332:	
 14160  01DE                     	goto	l429
 14161  01DE  2AAB               	
 14162                           l460:	
 14163  01DF                     	line	73
 14164                           ;KeyMatrix.c: 73:         while(RC3 == 1)
 14165                           	bcf	status, 5	;RP0=0, select bank0
 14166  01DF  1283               	bcf	status, 6	;RP1=0, select bank0
 14167  01E0  1303               	btfsc	(59/8),(59)&7	;volatile
 14168  01E1  1987               	goto	u2631
 14169  01E2  29E4               	goto	u2630
 14170  01E3  29E5               u2631:
 14171  01E4                     	goto	l3330
 14172  01E4  29D9               u2630:
 14173  01E5                     	goto	l459
 14174  01E5  29E6               	
 14175                           l462:	
 14176  01E6                     	line	75
 14177                           ;KeyMatrix.c: 75:     }
 14178                           	
 14179                           l459:	
 14180  01E6                     	line	76
 14181                           ;KeyMatrix.c: 76:     if(RC2 == 1)
 14182                           	btfss	(58/8),(58)&7	;volatile
 14183  01E6  1D07               	goto	u2641
 14184  01E7  29E9               	goto	u2640
 14185  01E8  29EA               u2641:
 14186  01E9                     	goto	l463
 14187  01E9  2A01               u2640:
 14188  01EA                     	line	78
 14189                           	
 14190                           l3334:	
 14191  01EA                     ;KeyMatrix.c: 77:     {;KeyMatrix.c: 78:         Key_Delay(50);
 14192                           	movlw	032h
 14193  01EA  3032               	movwf	(Key_Delay@k)
 14194  01EB  00F0               	movlw	0
 14195  01EC  3000               	movwf	((Key_Delay@k))+1
 14196  01ED  00F1               	fcall	_Key_Delay
 14197  01EE  160A  118A  2152  120A  118A  	line	79
 14198                           ;KeyMatrix.c: 79:         while(RC2 == 1)
 14199                           	goto	l464
 14200  01F3  29FA               	
 14201                           l465:	
 14202  01F4                     	line	80
 14203                           	
 14204                           l3336:	
 14205  01F4                     ;KeyMatrix.c: 80:             return 10;
 14206                           	movlw	0Ah
 14207  01F4  300A               	movwf	(?_Keypad_Scan)
 14208  01F5  00F6               	movlw	0
 14209  01F6  3000               	movwf	((?_Keypad_Scan))+1
 14210  01F7  00F7               	goto	l429
 14211  01F8  2AAB               	
 14212                           l3338:	
 14213  01F9                     	goto	l429
 14214  01F9  2AAB               	
 14215                           l464:	
 14216  01FA                     	line	79
 14217                           ;KeyMatrix.c: 79:         while(RC2 == 1)
 14218                           	bcf	status, 5	;RP0=0, select bank0
 14219  01FA  1283               	bcf	status, 6	;RP1=0, select bank0
 14220  01FB  1303               	btfsc	(58/8),(58)&7	;volatile
 14221  01FC  1907               	goto	u2651
 14222  01FD  29FF               	goto	u2650
 14223  01FE  2A00               u2651:
 14224  01FF                     	goto	l3336
 14225  01FF  29F4               u2650:
 14226  0200                     	goto	l463
 14227  0200  2A01               	
 14228                           l466:	
 14229  0201                     	line	81
 14230                           ;KeyMatrix.c: 81:     }
 14231                           	
 14232                           l463:	
 14233  0201                     	line	82
 14234                           ;KeyMatrix.c: 82:     if(RC1 == 1)
 14235                           	btfss	(57/8),(57)&7	;volatile
 14236  0201  1C87               	goto	u2661
 14237  0202  2A04               	goto	u2660
 14238  0203  2A05               u2661:
 14239  0204                     	goto	l467
 14240  0204  2A1C               u2660:
 14241  0205                     	line	84
 14242                           	
 14243                           l3340:	
 14244  0205                     ;KeyMatrix.c: 83:     {;KeyMatrix.c: 84:         Key_Delay(50);
 14245                           	movlw	032h
 14246  0205  3032               	movwf	(Key_Delay@k)
 14247  0206  00F0               	movlw	0
 14248  0207  3000               	movwf	((Key_Delay@k))+1
 14249  0208  00F1               	fcall	_Key_Delay
 14250  0209  160A  118A  2152  120A  118A  	line	85
 14251                           ;KeyMatrix.c: 85:         while(RC1 == 1)
 14252                           	goto	l468
 14253  020E  2A15               	
 14254                           l469:	
 14255  020F                     	line	86
 14256                           	
 14257                           l3342:	
 14258  020F                     ;KeyMatrix.c: 86:             return 11;
 14259                           	movlw	0Bh
 14260  020F  300B               	movwf	(?_Keypad_Scan)
 14261  0210  00F6               	movlw	0
 14262  0211  3000               	movwf	((?_Keypad_Scan))+1
 14263  0212  00F7               	goto	l429
 14264  0213  2AAB               	
 14265                           l3344:	
 14266  0214                     	goto	l429
 14267  0214  2AAB               	
 14268                           l468:	
 14269  0215                     	line	85
 14270                           ;KeyMatrix.c: 85:         while(RC1 == 1)
 14271                           	bcf	status, 5	;RP0=0, select bank0
 14272  0215  1283               	bcf	status, 6	;RP1=0, select bank0
 14273  0216  1303               	btfsc	(57/8),(57)&7	;volatile
 14274  0217  1887               	goto	u2671
 14275  0218  2A1A               	goto	u2670
 14276  0219  2A1B               u2671:
 14277  021A                     	goto	l3342
 14278  021A  2A0F               u2670:
 14279  021B                     	goto	l467
 14280  021B  2A1C               	
 14281                           l470:	
 14282  021C                     	line	87
 14283                           ;KeyMatrix.c: 87:     }
 14284                           	
 14285                           l467:	
 14286  021C                     	line	88
 14287                           ;KeyMatrix.c: 88:     if(RC0 == 1)
 14288                           	btfss	(56/8),(56)&7	;volatile
 14289  021C  1C07               	goto	u2681
 14290  021D  2A1F               	goto	u2680
 14291  021E  2A20               u2681:
 14292  021F                     	goto	l471
 14293  021F  2A37               u2680:
 14294  0220                     	line	90
 14295                           	
 14296                           l3346:	
 14297  0220                     ;KeyMatrix.c: 89:     {;KeyMatrix.c: 90:         Key_Delay(50);
 14298                           	movlw	032h
 14299  0220  3032               	movwf	(Key_Delay@k)
 14300  0221  00F0               	movlw	0
 14301  0222  3000               	movwf	((Key_Delay@k))+1
 14302  0223  00F1               	fcall	_Key_Delay
 14303  0224  160A  118A  2152  120A  118A  	line	91
 14304                           ;KeyMatrix.c: 91:         while(RC0 == 1)
 14305                           	goto	l472
 14306  0229  2A30               	
 14307                           l473:	
 14308  022A                     	line	92
 14309                           	
 14310                           l3348:	
 14311  022A                     ;KeyMatrix.c: 92:             return 12;
 14312                           	movlw	0Ch
 14313  022A  300C               	movwf	(?_Keypad_Scan)
 14314  022B  00F6               	movlw	0
 14315  022C  3000               	movwf	((?_Keypad_Scan))+1
 14316  022D  00F7               	goto	l429
 14317  022E  2AAB               	
 14318                           l3350:	
 14319  022F                     	goto	l429
 14320  022F  2AAB               	
 14321                           l472:	
 14322  0230                     	line	91
 14323                           ;KeyMatrix.c: 91:         while(RC0 == 1)
 14324                           	bcf	status, 5	;RP0=0, select bank0
 14325  0230  1283               	bcf	status, 6	;RP1=0, select bank0
 14326  0231  1303               	btfsc	(56/8),(56)&7	;volatile
 14327  0232  1807               	goto	u2691
 14328  0233  2A35               	goto	u2690
 14329  0234  2A36               u2691:
 14330  0235                     	goto	l3348
 14331  0235  2A2A               u2690:
 14332  0236                     	goto	l471
 14333  0236  2A37               	
 14334                           l474:	
 14335  0237                     	line	93
 14336                           ;KeyMatrix.c: 93:     }
 14337                           	
 14338                           l471:	
 14339  0237                     	line	94
 14340                           ;KeyMatrix.c: 94:     RC4 = 0; RC5 = 0; RC6 = 0; RC7 = 1;
 14341                           	bcf	(60/8),(60)&7	;volatile
 14342  0237  1207               	bcf	(61/8),(61)&7	;volatile
 14343  0238  1287               	bcf	(62/8),(62)&7	;volatile
 14344  0239  1307               	bsf	(63/8),(63)&7	;volatile
 14345  023A  1787               	line	95
 14346                           ;KeyMatrix.c: 95:     if(RC3 == 1)
 14347                           	btfss	(59/8),(59)&7	;volatile
 14348  023B  1D87               	goto	u2701
 14349  023C  2A3E               	goto	u2700
 14350  023D  2A3F               u2701:
 14351  023E                     	goto	l475
 14352  023E  2A56               u2700:
 14353  023F                     	line	97
 14354                           	
 14355                           l3352:	
 14356  023F                     ;KeyMatrix.c: 96:     {;KeyMatrix.c: 97:         Key_Delay(50);
 14357                           	movlw	032h
 14358  023F  3032               	movwf	(Key_Delay@k)
 14359  0240  00F0               	movlw	0
 14360  0241  3000               	movwf	((Key_Delay@k))+1
 14361  0242  00F1               	fcall	_Key_Delay
 14362  0243  160A  118A  2152  120A  118A  	line	98
 14363                           ;KeyMatrix.c: 98:         while(RC3 == 1)
 14364                           	goto	l476
 14365  0248  2A4F               	
 14366                           l477:	
 14367  0249                     	line	99
 14368                           	
 14369                           l3354:	
 14370  0249                     ;KeyMatrix.c: 99:             return 13;
 14371                           	movlw	0Dh
 14372  0249  300D               	movwf	(?_Keypad_Scan)
 14373  024A  00F6               	movlw	0
 14374  024B  3000               	movwf	((?_Keypad_Scan))+1
 14375  024C  00F7               	goto	l429
 14376  024D  2AAB               	
 14377                           l3356:	
 14378  024E                     	goto	l429
 14379  024E  2AAB               	
 14380                           l476:	
 14381  024F                     	line	98
 14382                           ;KeyMatrix.c: 98:         while(RC3 == 1)
 14383                           	bcf	status, 5	;RP0=0, select bank0
 14384  024F  1283               	bcf	status, 6	;RP1=0, select bank0
 14385  0250  1303               	btfsc	(59/8),(59)&7	;volatile
 14386  0251  1987               	goto	u2711
 14387  0252  2A54               	goto	u2710
 14388  0253  2A55               u2711:
 14389  0254                     	goto	l3354
 14390  0254  2A49               u2710:
 14391  0255                     	goto	l475
 14392  0255  2A56               	
 14393                           l478:	
 14394  0256                     	line	100
 14395                           ;KeyMatrix.c: 100:     }
 14396                           	
 14397                           l475:	
 14398  0256                     	line	101
 14399                           ;KeyMatrix.c: 101:     if(RC2 == 1)
 14400                           	btfss	(58/8),(58)&7	;volatile
 14401  0256  1D07               	goto	u2721
 14402  0257  2A59               	goto	u2720
 14403  0258  2A5A               u2721:
 14404  0259                     	goto	l479
 14405  0259  2A71               u2720:
 14406  025A                     	line	103
 14407                           	
 14408                           l3358:	
 14409  025A                     ;KeyMatrix.c: 102:     {;KeyMatrix.c: 103:         Key_Delay(50);
 14410                           	movlw	032h
 14411  025A  3032               	movwf	(Key_Delay@k)
 14412  025B  00F0               	movlw	0
 14413  025C  3000               	movwf	((Key_Delay@k))+1
 14414  025D  00F1               	fcall	_Key_Delay
 14415  025E  160A  118A  2152  120A  118A  	line	104
 14416                           ;KeyMatrix.c: 104:         while(RC2 == 1)
 14417                           	goto	l480
 14418  0263  2A6A               	
 14419                           l481:	
 14420  0264                     	line	105
 14421                           	
 14422                           l3360:	
 14423  0264                     ;KeyMatrix.c: 105:             return 14;
 14424                           	movlw	0Eh
 14425  0264  300E               	movwf	(?_Keypad_Scan)
 14426  0265  00F6               	movlw	0
 14427  0266  3000               	movwf	((?_Keypad_Scan))+1
 14428  0267  00F7               	goto	l429
 14429  0268  2AAB               	
 14430                           l3362:	
 14431  0269                     	goto	l429
 14432  0269  2AAB               	
 14433                           l480:	
 14434  026A                     	line	104
 14435                           ;KeyMatrix.c: 104:         while(RC2 == 1)
 14436                           	bcf	status, 5	;RP0=0, select bank0
 14437  026A  1283               	bcf	status, 6	;RP1=0, select bank0
 14438  026B  1303               	btfsc	(58/8),(58)&7	;volatile
 14439  026C  1907               	goto	u2731
 14440  026D  2A6F               	goto	u2730
 14441  026E  2A70               u2731:
 14442  026F                     	goto	l3360
 14443  026F  2A64               u2730:
 14444  0270                     	goto	l479
 14445  0270  2A71               	
 14446                           l482:	
 14447  0271                     	line	106
 14448                           ;KeyMatrix.c: 106:     }
 14449                           	
 14450                           l479:	
 14451  0271                     	line	107
 14452                           ;KeyMatrix.c: 107:     if(RC1 == 1)
 14453                           	btfss	(57/8),(57)&7	;volatile
 14454  0271  1C87               	goto	u2741
 14455  0272  2A74               	goto	u2740
 14456  0273  2A75               u2741:
 14457  0274                     	goto	l483
 14458  0274  2A8C               u2740:
 14459  0275                     	line	109
 14460                           	
 14461                           l3364:	
 14462  0275                     ;KeyMatrix.c: 108:     {;KeyMatrix.c: 109:         Key_Delay(50);
 14463                           	movlw	032h
 14464  0275  3032               	movwf	(Key_Delay@k)
 14465  0276  00F0               	movlw	0
 14466  0277  3000               	movwf	((Key_Delay@k))+1
 14467  0278  00F1               	fcall	_Key_Delay
 14468  0279  160A  118A  2152  120A  118A  	line	110
 14469                           ;KeyMatrix.c: 110:         while(RC1 == 1)
 14470                           	goto	l484
 14471  027E  2A85               	
 14472                           l485:	
 14473  027F                     	line	111
 14474                           	
 14475                           l3366:	
 14476  027F                     ;KeyMatrix.c: 111:             return 15;
 14477                           	movlw	0Fh
 14478  027F  300F               	movwf	(?_Keypad_Scan)
 14479  0280  00F6               	movlw	0
 14480  0281  3000               	movwf	((?_Keypad_Scan))+1
 14481  0282  00F7               	goto	l429
 14482  0283  2AAB               	
 14483                           l3368:	
 14484  0284                     	goto	l429
 14485  0284  2AAB               	
 14486                           l484:	
 14487  0285                     	line	110
 14488                           ;KeyMatrix.c: 110:         while(RC1 == 1)
 14489                           	bcf	status, 5	;RP0=0, select bank0
 14490  0285  1283               	bcf	status, 6	;RP1=0, select bank0
 14491  0286  1303               	btfsc	(57/8),(57)&7	;volatile
 14492  0287  1887               	goto	u2751
 14493  0288  2A8A               	goto	u2750
 14494  0289  2A8B               u2751:
 14495  028A                     	goto	l3366
 14496  028A  2A7F               u2750:
 14497  028B                     	goto	l483
 14498  028B  2A8C               	
 14499                           l486:	
 14500  028C                     	line	112
 14501                           ;KeyMatrix.c: 112:     }
 14502                           	
 14503                           l483:	
 14504  028C                     	line	113
 14505                           ;KeyMatrix.c: 113:     if(RC0 == 1)
 14506                           	btfss	(56/8),(56)&7	;volatile
 14507  028C  1C07               	goto	u2761
 14508  028D  2A8F               	goto	u2760
 14509  028E  2A90               u2761:
 14510  028F                     	goto	l3376
 14511  028F  2AA8               u2760:
 14512  0290                     	line	115
 14513                           	
 14514                           l3370:	
 14515  0290                     ;KeyMatrix.c: 114:     {;KeyMatrix.c: 115:         Key_Delay(50);
 14516                           	movlw	032h
 14517  0290  3032               	movwf	(Key_Delay@k)
 14518  0291  00F0               	movlw	0
 14519  0292  3000               	movwf	((Key_Delay@k))+1
 14520  0293  00F1               	fcall	_Key_Delay
 14521  0294  160A  118A  2152  120A  118A  	line	116
 14522                           ;KeyMatrix.c: 116:         while(RC0 == 1)
 14523                           	goto	l488
 14524  0299  2AA0               	
 14525                           l489:	
 14526  029A                     	line	117
 14527                           	
 14528                           l3372:	
 14529  029A                     ;KeyMatrix.c: 117:             return 16;
 14530                           	movlw	010h
 14531  029A  3010               	movwf	(?_Keypad_Scan)
 14532  029B  00F6               	movlw	0
 14533  029C  3000               	movwf	((?_Keypad_Scan))+1
 14534  029D  00F7               	goto	l429
 14535  029E  2AAB               	
 14536                           l3374:	
 14537  029F                     	goto	l429
 14538  029F  2AAB               	
 14539                           l488:	
 14540  02A0                     	line	116
 14541                           ;KeyMatrix.c: 116:         while(RC0 == 1)
 14542                           	bcf	status, 5	;RP0=0, select bank0
 14543  02A0  1283               	bcf	status, 6	;RP1=0, select bank0
 14544  02A1  1303               	btfsc	(56/8),(56)&7	;volatile
 14545  02A2  1807               	goto	u2771
 14546  02A3  2AA5               	goto	u2770
 14547  02A4  2AA6               u2771:
 14548  02A5                     	goto	l3372
 14549  02A5  2A9A               u2770:
 14550  02A6                     	goto	l3376
 14551  02A6  2AA8               	
 14552                           l490:	
 14553  02A7                     	goto	l3376
 14554  02A7  2AA8               	line	118
 14555                           ;KeyMatrix.c: 118:     }
 14556                           	
 14557                           l487:	
 14558  02A8                     	line	120
 14559                           	
 14560                           l3376:	
 14561  02A8                     ;KeyMatrix.c: 120:         return 0;
 14562                           	clrf	(?_Keypad_Scan)
 14563  02A8  01F6               	clrf	(?_Keypad_Scan+1)
 14564  02A9  01F7               	goto	l429
 14565  02AA  2AAB               	
 14566                           l3378:	
 14567  02AB                     	line	121
 14568                           	
 14569                           l429:	
 14570  02AB                     	return
 14571  02AB  0008               	opt stack 0
 14572                           GLOBAL	__end_of_Keypad_Scan
 14573                           	__end_of_Keypad_Scan:
 14574  02AC                     	signat	_Keypad_Scan,90
 14575                           	global	_Key_Delay
 14576                           
 14577 ;; *************** function _Key_Delay *****************
 14578 ;; Defined at:
 14579 ;;		line 5 in file "KeyMatrix.c"
 14580 ;; Parameters:    Size  Location     Type
 14581 ;;  k               2    0[COMMON] int 
 14582 ;; Auto vars:     Size  Location     Type
 14583 ;;  j               2    4[COMMON] unsigned int 
 14584 ;;  i               2    2[COMMON] unsigned int 
 14585 ;; Return value:  Size  Location     Type
 14586 ;;                  1    wreg      void 
 14587 ;; Registers used:
 14588 ;;		wreg, status,2
 14589 ;; Tracked objects:
 14590 ;;		On entry : 0/0
 14591 ;;		On exit  : 0/0
 14592 ;;		Unchanged: 0/0
 14593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14594 ;;      Params:         2       0       0       0       0
 14595 ;;      Locals:         4       0       0       0       0
 14596 ;;      Temps:          0       0       0       0       0
 14597 ;;      Totals:         6       0       0       0       0
 14598 ;;Total ram usage:        6 bytes
 14599 ;; Hardware stack levels used:    1
 14600 ;; This function calls:
 14601 ;;		Nothing
 14602 ;; This function is called by:
 14603 ;;		_Keypad_Scan
 14604 ;; This function uses a non-reentrant model
 14605 ;;
 14606                           psect	text47,local,class=CODE,delta=2,merge=1,group=0
 14607                           	line	5
 14608                           global __ptext47
 14609                           __ptext47:	;psect for function _Key_Delay
 14610  1152                     psect	text47
 14611                           	file	"KeyMatrix.c"
 14612                           	line	5
 14613                           	global	__size_of_Key_Delay
 14614                           	__size_of_Key_Delay	equ	__end_of_Key_Delay-_Key_Delay
 14615  0032                     	
 14616                           _Key_Delay:	
 14617  1152                     ;incstack = 0
 14618                           	opt	stack 5
 14619                           ; Regs used in _Key_Delay: [wreg+status,2]
 14620                           	line	7
 14621                           	
 14622                           l3220:	
 14623  1152                     ;KeyMatrix.c: 6:     unsigned int i,j;;KeyMatrix.c: 7:     for (i= 0; i < k; i++)
 14624                           	clrf	(Key_Delay@i)
 14625  1152  01F2               	clrf	(Key_Delay@i+1)
 14626  1153  01F3               	goto	l415
 14627  1154  2978               	
 14628                           l416:	
 14629  1155                     	line	8
 14630                           	
 14631                           l3222:	
 14632  1155                     ;KeyMatrix.c: 8:         for(j = 0; j < 100; j++);
 14633                           	clrf	(Key_Delay@j)
 14634  1155  01F4               	clrf	(Key_Delay@j+1)
 14635  1156  01F5               	
 14636                           l3224:	
 14637  1157                     	movlw	0
 14638  1157  3000               	subwf	(Key_Delay@j+1),w
 14639  1158  0275               	movlw	064h
 14640  1159  3064               	skipnz
 14641  115A  1903               	subwf	(Key_Delay@j),w
 14642  115B  0274               	skipc
 14643  115C  1C03               	goto	u2401
 14644  115D  295F               	goto	u2400
 14645  115E  2960               u2401:
 14646  115F                     	goto	l3228
 14647  115F  2962               u2400:
 14648  1160                     	goto	l3230
 14649  1160  2972               	
 14650                           l3226:	
 14651  1161                     	goto	l3230
 14652  1161  2972               	
 14653                           l417:	
 14654  1162                     	
 14655                           l3228:	
 14656  1162                     	movlw	01h
 14657  1162  3001               	addwf	(Key_Delay@j),f
 14658  1163  07F4               	skipnc
 14659  1164  1803               	incf	(Key_Delay@j+1),f
 14660  1165  0AF5               	movlw	0
 14661  1166  3000               	addwf	(Key_Delay@j+1),f
 14662  1167  07F5               	movlw	0
 14663  1168  3000               	subwf	(Key_Delay@j+1),w
 14664  1169  0275               	movlw	064h
 14665  116A  3064               	skipnz
 14666  116B  1903               	subwf	(Key_Delay@j),w
 14667  116C  0274               	skipc
 14668  116D  1C03               	goto	u2411
 14669  116E  2970               	goto	u2410
 14670  116F  2971               u2411:
 14671  1170                     	goto	l3228
 14672  1170  2962               u2410:
 14673  1171                     	goto	l3230
 14674  1171  2972               	
 14675                           l418:	
 14676  1172                     	
 14677                           l3230:	
 14678  1172                     	movlw	01h
 14679  1172  3001               	addwf	(Key_Delay@i),f
 14680  1173  07F2               	skipnc
 14681  1174  1803               	incf	(Key_Delay@i+1),f
 14682  1175  0AF3               	movlw	0
 14683  1176  3000               	addwf	(Key_Delay@i+1),f
 14684  1177  07F3               	
 14685                           l415:	
 14686  1178                     	movf	(Key_Delay@k+1),w
 14687  1178  0871               	subwf	(Key_Delay@i+1),w
 14688  1179  0273               	skipz
 14689  117A  1D03               	goto	u2425
 14690  117B  297E               	movf	(Key_Delay@k),w
 14691  117C  0870               	subwf	(Key_Delay@i),w
 14692  117D  0272               u2425:
 14693  117E                     	skipc
 14694  117E  1C03               	goto	u2421
 14695  117F  2981               	goto	u2420
 14696  1180  2982               u2421:
 14697  1181                     	goto	l3222
 14698  1181  2955               u2420:
 14699  1182                     	goto	l420
 14700  1182  2983               	
 14701                           l419:	
 14702  1183                     	line	9
 14703                           	
 14704                           l420:	
 14705  1183                     	return
 14706  1183  0008               	opt stack 0
 14707                           GLOBAL	__end_of_Key_Delay
 14708                           	__end_of_Key_Delay:
 14709  1184                     	signat	_Key_Delay,4217
 14710                           	global	_CheckTime
 14711                           
 14712 ;; *************** function _CheckTime *****************
 14713 ;; Defined at:
 14714 ;;		line 710 in file "main.c"
 14715 ;; Parameters:    Size  Location     Type
 14716 ;;		None
 14717 ;; Auto vars:     Size  Location     Type
 14718 ;;		None
 14719 ;; Return value:  Size  Location     Type
 14720 ;;                  1    wreg      void 
 14721 ;; Registers used:
 14722 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 14723 ;; Tracked objects:
 14724 ;;		On entry : 0/0
 14725 ;;		On exit  : 0/0
 14726 ;;		Unchanged: 0/0
 14727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 14728 ;;      Params:         0       0       0       0       0
 14729 ;;      Locals:         0       0       0       0       0
 14730 ;;      Temps:          1       0       0       0       0
 14731 ;;      Totals:         1       0       0       0       0
 14732 ;;Total ram usage:        1 bytes
 14733 ;; Hardware stack levels used:    1
 14734 ;; Hardware stack levels required when called:    3
 14735 ;; This function calls:
 14736 ;;		_RealTimeClock_get_hours
 14737 ;;		_RealTimeClock_get_minutes
 14738 ;; This function is called by:
 14739 ;;		_main
 14740 ;; This function uses a non-reentrant model
 14741 ;;
 14742                           psect	text48,local,class=CODE,delta=2,merge=1,group=0
 14743                           	file	"main.c"
 14744                           	line	710
 14745                           global __ptext48
 14746                           __ptext48:	;psect for function _CheckTime
 14747  09A2                     psect	text48
 14748                           	file	"main.c"
 14749                           	line	710
 14750                           	global	__size_of_CheckTime
 14751                           	__size_of_CheckTime	equ	__end_of_CheckTime-_CheckTime
 14752  00E8                     	
 14753                           _CheckTime:	
 14754  09A2                     ;incstack = 0
 14755                           	opt	stack 4
 14756                           ; Regs used in _CheckTime: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 14757                           	line	714
 14758                           	
 14759                           l4022:	
 14760  09A2                     ;main.c: 714: 
 14761                           	bsf	status, 5	;RP0=1, select bank1
 14762  09A2  1683               	bcf	status, 6	;RP1=0, select bank1
 14763  09A3  1303               		decf	((_isWeekDay)^080h),w
 14764  09A4  036A               iorwf	((_isWeekDay+1)^080h),w
 14765  09A5  046B               	btfss	status,2
 14766  09A6  1D03               	goto	u3221
 14767  09A7  29A9               	goto	u3220
 14768  09A8  29AA               u3221:
 14769  09A9                     	goto	l4044
 14770  09A9  2A31               u3220:
 14771  09AA                     	line	716
 14772                           	
 14773                           l4024:	
 14774  09AA                     ;main.c: 715:     else if (isWeekDay == 0);main.c: 716:     {
 14775                           	fcall	_RealTimeClock_get_minutes
 14776  09AA  160A  158A  2734  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 14777  09AF  1283               	bcf	status, 6	;RP1=0, select bank0
 14778  09B0  1303               	movf	(1+(?_RealTimeClock_get_minutes)),w
 14779  09B1  0826               	movwf	(_timeMins+1)
 14780  09B2  00DB               	movf	(0+(?_RealTimeClock_get_minutes)),w
 14781  09B3  0825               	movwf	(_timeMins)
 14782  09B4  00DA               	line	717
 14783                           ;main.c: 717: 
 14784                           	fcall	_RealTimeClock_get_hours
 14785  09B5  160A  158A  2712  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 14786  09BA  1283               	bcf	status, 6	;RP1=0, select bank0
 14787  09BB  1303               	movf	(1+(?_RealTimeClock_get_hours)),w
 14788  09BC  0826               	movwf	(_timeHours+1)
 14789  09BD  00DD               	movf	(0+(?_RealTimeClock_get_hours)),w
 14790  09BE  0825               	movwf	(_timeHours)
 14791  09BF  00DC               	line	718
 14792                           	
 14793                           l4026:	
 14794  09C0                     ;main.c: 718:         timeMins = RealTimeClock_get_minutes();
 14795                           	movf	(_timeHours+1),w
 14796  09C0  085D               	xorlw	80h
 14797  09C1  3A80               	movwf	(??_CheckTime+0)+0
 14798  09C2  00FC               	bsf	status, 5	;RP0=1, select bank1
 14799  09C3  1683               	bcf	status, 6	;RP1=0, select bank1
 14800  09C4  1303               	movf	(_weekDayStart+1)^080h,w
 14801  09C5  0849               	xorlw	80h
 14802  09C6  3A80               	subwf	(??_CheckTime+0)+0,w
 14803  09C7  027C               	skipz
 14804  09C8  1D03               	goto	u3235
 14805  09C9  29CE               	movf	(_weekDayStart)^080h,w
 14806  09CA  0848               	bcf	status, 5	;RP0=0, select bank0
 14807  09CB  1283               	bcf	status, 6	;RP1=0, select bank0
 14808  09CC  1303               	subwf	(_timeHours),w
 14809  09CD  025C               u3235:
 14810  09CE                     
 14811                           	skipnc
 14812  09CE  1803               	goto	u3231
 14813  09CF  29D1               	goto	u3230
 14814  09D0  29D2               u3231:
 14815  09D1                     	goto	l4034
 14816  09D1  29F3               u3230:
 14817  09D2                     	line	720
 14818                           	
 14819                           l4028:	
 14820  09D2                     ;main.c: 719:         timeHours = RealTimeClock_get_hours();;main.c: 720:         if (ti
                                 meHours < weekEndStart[0])
 14821                           	bcf	status, 5	;RP0=0, select bank0
 14822  09D2  1283               	bcf	status, 6	;RP1=0, select bank0
 14823  09D3  1303               	movf	(_timeMins+1),w
 14824  09D4  085B               	xorlw	80h
 14825  09D5  3A80               	movwf	(??_CheckTime+0)+0
 14826  09D6  00FC               	bsf	status, 5	;RP0=1, select bank1
 14827  09D7  1683               	bcf	status, 6	;RP1=0, select bank1
 14828  09D8  1303               	movf	1+(_weekDayStart)^080h+02h,w
 14829  09D9  084B               	xorlw	80h
 14830  09DA  3A80               	subwf	(??_CheckTime+0)+0,w
 14831  09DB  027C               	skipz
 14832  09DC  1D03               	goto	u3245
 14833  09DD  29E2               	movf	0+(_weekDayStart)^080h+02h,w
 14834  09DE  084A               	bcf	status, 5	;RP0=0, select bank0
 14835  09DF  1283               	bcf	status, 6	;RP1=0, select bank0
 14836  09E0  1303               	subwf	(_timeMins),w
 14837  09E1  025A               u3245:
 14838  09E2                     
 14839                           	skipnc
 14840  09E2  1803               	goto	u3241
 14841  09E3  29E5               	goto	u3240
 14842  09E4  29E6               u3241:
 14843  09E5                     	goto	l4032
 14844  09E5  29EB               u3240:
 14845  09E6                     	line	721
 14846                           	
 14847                           l4030:	
 14848  09E6                     ;main.c: 721:         {
 14849                           	bcf	status, 5	;RP0=0, select bank0
 14850  09E6  1283               	bcf	status, 6	;RP1=0, select bank0
 14851  09E7  1303               	clrf	(_IsHeatingOn)
 14852  09E8  01E0               	clrf	(_IsHeatingOn+1)
 14853  09E9  01E1               	goto	l279
 14854  09EA  2A89               	line	722
 14855                           ;main.c: 722:             IsHeatingOn = 0;
 14856                           	
 14857                           l266:	
 14858  09EB                     	line	723
 14859                           	
 14860                           l4032:	
 14861  09EB                     ;main.c: 723:         }
 14862                           	movlw	01h
 14863  09EB  3001               	bcf	status, 5	;RP0=0, select bank0
 14864  09EC  1283               	bcf	status, 6	;RP1=0, select bank0
 14865  09ED  1303               	movwf	(_IsHeatingOn)
 14866  09EE  00E0               	movlw	0
 14867  09EF  3000               	movwf	((_IsHeatingOn))+1
 14868  09F0  00E1               	goto	l279
 14869  09F1  2A89               	
 14870                           l267:	
 14871  09F2                     	line	724
 14872                           ;main.c: 724:         else if(timeHours > weekEndEnd[0])
 14873                           	goto	l279
 14874  09F2  2A89               	line	725
 14875                           ;main.c: 725:         {
 14876                           	
 14877                           l265:	
 14878  09F3                     	
 14879                           l4034:	
 14880  09F3                     	bsf	status, 5	;RP0=1, select bank1
 14881  09F3  1683               	bcf	status, 6	;RP1=0, select bank1
 14882  09F4  1303               	movf	(_weekDayEnd+1)^080h,w
 14883  09F5  0845               	xorlw	80h
 14884  09F6  3A80               	movwf	(??_CheckTime+0)+0
 14885  09F7  00FC               	bcf	status, 5	;RP0=0, select bank0
 14886  09F8  1283               	bcf	status, 6	;RP1=0, select bank0
 14887  09F9  1303               	movf	(_timeHours+1),w
 14888  09FA  085D               	xorlw	80h
 14889  09FB  3A80               	subwf	(??_CheckTime+0)+0,w
 14890  09FC  027C               	skipz
 14891  09FD  1D03               	goto	u3255
 14892  09FE  2A03               	movf	(_timeHours),w
 14893  09FF  085C               	bsf	status, 5	;RP0=1, select bank1
 14894  0A00  1683               	bcf	status, 6	;RP1=0, select bank1
 14895  0A01  1303               	subwf	(_weekDayEnd)^080h,w
 14896  0A02  0244               u3255:
 14897  0A03                     
 14898                           	skipnc
 14899  0A03  1803               	goto	u3251
 14900  0A04  2A06               	goto	u3250
 14901  0A05  2A07               u3251:
 14902  0A06                     	goto	l4042
 14903  0A06  2A28               u3250:
 14904  0A07                     	line	727
 14905                           	
 14906                           l4036:	
 14907  0A07                     ;main.c: 726:             IsHeatingOn = 0;;main.c: 727:         }
 14908                           	bsf	status, 5	;RP0=1, select bank1
 14909  0A07  1683               	bcf	status, 6	;RP1=0, select bank1
 14910  0A08  1303               	movf	1+(_weekDayEnd)^080h+02h,w
 14911  0A09  0847               	xorlw	80h
 14912  0A0A  3A80               	movwf	(??_CheckTime+0)+0
 14913  0A0B  00FC               	bcf	status, 5	;RP0=0, select bank0
 14914  0A0C  1283               	bcf	status, 6	;RP1=0, select bank0
 14915  0A0D  1303               	movf	(_timeMins+1),w
 14916  0A0E  085B               	xorlw	80h
 14917  0A0F  3A80               	subwf	(??_CheckTime+0)+0,w
 14918  0A10  027C               	skipz
 14919  0A11  1D03               	goto	u3265
 14920  0A12  2A17               	movf	(_timeMins),w
 14921  0A13  085A               	bsf	status, 5	;RP0=1, select bank1
 14922  0A14  1683               	bcf	status, 6	;RP1=0, select bank1
 14923  0A15  1303               	subwf	0+(_weekDayEnd)^080h+02h,w
 14924  0A16  0246               u3265:
 14925  0A17                     
 14926                           	skipnc
 14927  0A17  1803               	goto	u3261
 14928  0A18  2A1A               	goto	u3260
 14929  0A19  2A1B               u3261:
 14930  0A1A                     	goto	l4040
 14931  0A1A  2A20               u3260:
 14932  0A1B                     	line	728
 14933                           	
 14934                           l4038:	
 14935  0A1B                     ;main.c: 728:         else
 14936                           	bcf	status, 5	;RP0=0, select bank0
 14937  0A1B  1283               	bcf	status, 6	;RP1=0, select bank0
 14938  0A1C  1303               	clrf	(_IsHeatingOn)
 14939  0A1D  01E0               	clrf	(_IsHeatingOn+1)
 14940  0A1E  01E1               	goto	l279
 14941  0A1F  2A89               	line	729
 14942                           ;main.c: 729:             IsHeatingOn = 1;
 14943                           	
 14944                           l270:	
 14945  0A20                     	line	730
 14946                           	
 14947                           l4040:	
 14948  0A20                     ;main.c: 730:     }
 14949                           	movlw	01h
 14950  0A20  3001               	bcf	status, 5	;RP0=0, select bank0
 14951  0A21  1283               	bcf	status, 6	;RP1=0, select bank0
 14952  0A22  1303               	movwf	(_IsHeatingOn)
 14953  0A23  00E0               	movlw	0
 14954  0A24  3000               	movwf	((_IsHeatingOn))+1
 14955  0A25  00E1               	goto	l279
 14956  0A26  2A89               	
 14957                           l271:	
 14958  0A27                     	line	731
 14959                           ;main.c: 731: }
 14960                           	goto	l279
 14961  0A27  2A89               	line	732
 14962                           ;main.c: 732: 
 14963                           	
 14964                           l269:	
 14965  0A28                     	line	733
 14966                           	
 14967                           l4042:	
 14968  0A28                     ;main.c: 733: 
 14969                           	movlw	01h
 14970  0A28  3001               	bcf	status, 5	;RP0=0, select bank0
 14971  0A29  1283               	bcf	status, 6	;RP1=0, select bank0
 14972  0A2A  1303               	movwf	(_IsHeatingOn)
 14973  0A2B  00E0               	movlw	0
 14974  0A2C  3000               	movwf	((_IsHeatingOn))+1
 14975  0A2D  00E1               	goto	l279
 14976  0A2E  2A89               	
 14977                           l272:	
 14978  0A2F                     	goto	l279
 14979  0A2F  2A89               	
 14980                           l268:	
 14981  0A30                     	line	734
 14982                           ;main.c: 734: 
 14983                           	goto	l279
 14984  0A30  2A89               	line	737
 14985                           ;main.c: 737: 
 14986                           	
 14987                           l264:	
 14988  0A31                     	
 14989                           l4044:	
 14990  0A31                     	bsf	status, 5	;RP0=1, select bank1
 14991  0A31  1683               	bcf	status, 6	;RP1=0, select bank1
 14992  0A32  1303               	movf	((_isWeekDay)^080h),w
 14993  0A33  086A               iorwf	((_isWeekDay+1)^080h),w
 14994  0A34  046B               	btfss	status,2
 14995  0A35  1D03               	goto	u3271
 14996  0A36  2A38               	goto	u3270
 14997  0A37  2A39               u3271:
 14998  0A38                     	goto	l279
 14999  0A38  2A89               u3270:
 15000  0A39                     	line	740
 15001                           	
 15002                           l4046:	
 15003  0A39                     ;main.c: 738: void main() {;main.c: 740: 
 15004                           	fcall	_RealTimeClock_get_minutes
 15005  0A39  160A  158A  2734  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 15006  0A3E  1283               	bcf	status, 6	;RP1=0, select bank0
 15007  0A3F  1303               	movf	(1+(?_RealTimeClock_get_minutes)),w
 15008  0A40  0826               	movwf	(_timeMins+1)
 15009  0A41  00DB               	movf	(0+(?_RealTimeClock_get_minutes)),w
 15010  0A42  0825               	movwf	(_timeMins)
 15011  0A43  00DA               	line	741
 15012                           ;main.c: 741:     LCD_Init();
 15013                           	fcall	_RealTimeClock_get_hours
 15014  0A44  160A  158A  2712  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 15015  0A49  1283               	bcf	status, 6	;RP1=0, select bank0
 15016  0A4A  1303               	movf	(1+(?_RealTimeClock_get_hours)),w
 15017  0A4B  0826               	movwf	(_timeHours+1)
 15018  0A4C  00DD               	movf	(0+(?_RealTimeClock_get_hours)),w
 15019  0A4D  0825               	movwf	(_timeHours)
 15020  0A4E  00DC               	line	742
 15021                           	
 15022                           l4048:	
 15023  0A4F                     ;main.c: 742:     Init_Keypad();
 15024                           	movf	(_timeHours+1),w
 15025  0A4F  085D               	xorlw	80h
 15026  0A50  3A80               	movwf	(??_CheckTime+0)+0
 15027  0A51  00FC               	bsf	status, 5	;RP0=1, select bank1
 15028  0A52  1683               	bcf	status, 6	;RP1=0, select bank1
 15029  0A53  1303               	movf	(_weekEndStart+1)^080h,w
 15030  0A54  0841               	xorlw	80h
 15031  0A55  3A80               	subwf	(??_CheckTime+0)+0,w
 15032  0A56  027C               	skipz
 15033  0A57  1D03               	goto	u3285
 15034  0A58  2A5D               	movf	(_weekEndStart)^080h,w
 15035  0A59  0840               	bcf	status, 5	;RP0=0, select bank0
 15036  0A5A  1283               	bcf	status, 6	;RP1=0, select bank0
 15037  0A5B  1303               	subwf	(_timeHours),w
 15038  0A5C  025C               u3285:
 15039  0A5D                     
 15040                           	skipnc
 15041  0A5D  1803               	goto	u3281
 15042  0A5E  2A60               	goto	u3280
 15043  0A5F  2A61               u3281:
 15044  0A60                     	goto	l4052
 15045  0A60  2A66               u3280:
 15046  0A61                     	line	744
 15047                           	
 15048                           l4050:	
 15049  0A61                     ;main.c: 743:     Thermometer_Init();;main.c: 744:     RealTimeClock_init();
 15050                           	bcf	status, 5	;RP0=0, select bank0
 15051  0A61  1283               	bcf	status, 6	;RP1=0, select bank0
 15052  0A62  1303               	clrf	(_IsHeatingOn)
 15053  0A63  01E0               	clrf	(_IsHeatingOn+1)
 15054  0A64  01E1               	line	745
 15055                           ;main.c: 745: 
 15056                           	goto	l279
 15057  0A65  2A89               	line	746
 15058                           ;main.c: 746: 
 15059                           	
 15060                           l275:	
 15061  0A66                     	
 15062                           l4052:	
 15063  0A66                     	bsf	status, 5	;RP0=1, select bank1
 15064  0A66  1683               	bcf	status, 6	;RP1=0, select bank1
 15065  0A67  1303               	movf	(_weekEndEnd+1)^080h,w
 15066  0A68  083D               	xorlw	80h
 15067  0A69  3A80               	movwf	(??_CheckTime+0)+0
 15068  0A6A  00FC               	bcf	status, 5	;RP0=0, select bank0
 15069  0A6B  1283               	bcf	status, 6	;RP1=0, select bank0
 15070  0A6C  1303               	movf	(_timeHours+1),w
 15071  0A6D  085D               	xorlw	80h
 15072  0A6E  3A80               	subwf	(??_CheckTime+0)+0,w
 15073  0A6F  027C               	skipz
 15074  0A70  1D03               	goto	u3295
 15075  0A71  2A76               	movf	(_timeHours),w
 15076  0A72  085C               	bsf	status, 5	;RP0=1, select bank1
 15077  0A73  1683               	bcf	status, 6	;RP1=0, select bank1
 15078  0A74  1303               	subwf	(_weekEndEnd)^080h,w
 15079  0A75  023C               u3295:
 15080  0A76                     
 15081                           	skipnc
 15082  0A76  1803               	goto	u3291
 15083  0A77  2A79               	goto	u3290
 15084  0A78  2A7A               u3291:
 15085  0A79                     	goto	l4056
 15086  0A79  2A7F               u3290:
 15087  0A7A                     	line	748
 15088                           	
 15089                           l4054:	
 15090  0A7A                     ;main.c: 747: ;main.c: 748:     Buzzer_Init();
 15091                           	bcf	status, 5	;RP0=0, select bank0
 15092  0A7A  1283               	bcf	status, 6	;RP1=0, select bank0
 15093  0A7B  1303               	clrf	(_IsHeatingOn)
 15094  0A7C  01E0               	clrf	(_IsHeatingOn+1)
 15095  0A7D  01E1               	line	749
 15096                           ;main.c: 749:     int Key = 0;
 15097                           	goto	l279
 15098  0A7E  2A89               	line	750
 15099                           ;main.c: 750:     DisableAlarm = 0;
 15100                           	
 15101                           l277:	
 15102  0A7F                     	line	751
 15103                           	
 15104                           l4056:	
 15105  0A7F                     ;main.c: 751:     isWeekDay = 1;
 15106                           	movlw	01h
 15107  0A7F  3001               	bcf	status, 5	;RP0=0, select bank0
 15108  0A80  1283               	bcf	status, 6	;RP1=0, select bank0
 15109  0A81  1303               	movwf	(_IsHeatingOn)
 15110  0A82  00E0               	movlw	0
 15111  0A83  3000               	movwf	((_IsHeatingOn))+1
 15112  0A84  00E1               	goto	l279
 15113  0A85  2A89               	
 15114                           l278:	
 15115  0A86                     	goto	l279
 15116  0A86  2A89               	
 15117                           l276:	
 15118  0A87                     	goto	l279
 15119  0A87  2A89               	line	752
 15120                           ;main.c: 752:     int temp, temp2, temp3, tempdec, tempdectenth;
 15121                           	
 15122                           l274:	
 15123  0A88                     	goto	l279
 15124  0A88  2A89               	
 15125                           l273:	
 15126  0A89                     	line	753
 15127                           	
 15128                           l279:	
 15129  0A89                     	return
 15130  0A89  0008               	opt stack 0
 15131                           GLOBAL	__end_of_CheckTime
 15132                           	__end_of_CheckTime:
 15133  0A8A                     	signat	_CheckTime,89
 15134                           	global	_RealTimeClock_get_minutes
 15135                           
 15136 ;; *************** function _RealTimeClock_get_minutes *****************
 15137 ;; Defined at:
 15138 ;;		line 96 in file "realtimeclock.c"
 15139 ;; Parameters:    Size  Location     Type
 15140 ;;		None
 15141 ;; Auto vars:     Size  Location     Type
 15142 ;;  c               1   11[COMMON] unsigned char 
 15143 ;; Return value:  Size  Location     Type
 15144 ;;                  2    5[BANK0 ] int 
 15145 ;; Registers used:
 15146 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 15147 ;; Tracked objects:
 15148 ;;		On entry : 0/0
 15149 ;;		On exit  : 0/0
 15150 ;;		Unchanged: 0/0
 15151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15152 ;;      Params:         0       2       0       0       0
 15153 ;;      Locals:         1       0       0       0       0
 15154 ;;      Temps:          1       0       0       0       0
 15155 ;;      Totals:         2       2       0       0       0
 15156 ;;Total ram usage:        4 bytes
 15157 ;; Hardware stack levels used:    1
 15158 ;; Hardware stack levels required when called:    2
 15159 ;; This function calls:
 15160 ;;		_RealTimeClock_read_byte
 15161 ;;		_RealTimeClock_write_byte
 15162 ;;		___hex_to_int
 15163 ;; This function is called by:
 15164 ;;		_DisplayTime
 15165 ;;		_SetTime
 15166 ;;		_CheckTime
 15167 ;; This function uses a non-reentrant model
 15168 ;;
 15169                           psect	text49,local,class=CODE,delta=2,merge=1,group=0
 15170                           	file	"realtimeclock.c"
 15171                           	line	96
 15172                           global __ptext49
 15173                           __ptext49:	;psect for function _RealTimeClock_get_minutes
 15174  1F34                     psect	text49
 15175                           	file	"realtimeclock.c"
 15176                           	line	96
 15177                           	global	__size_of_RealTimeClock_get_minutes
 15178                           	__size_of_RealTimeClock_get_minutes	equ	__end_of_RealTimeClock_get_minutes-_RealTimeClo
                                 ck_get_minutes
 15179  0022                     	
 15180                           _RealTimeClock_get_minutes:	
 15181  1F34                     ;incstack = 0
 15182                           	opt	stack 1
 15183                           ; Regs used in _RealTimeClock_get_minutes: [wreg+status,2+status,0+btemp+1+pclath+cstack
                                 ]
 15184                           	line	97
 15185                           	
 15186                           l3108:	
 15187  1F34                     ;realtimeclock.c: 97:     RB5 = 1;
 15188                           	bcf	status, 5	;RP0=0, select bank0
 15189  1F34  1283               	bcf	status, 6	;RP1=0, select bank0
 15190  1F35  1303               	bsf	(53/8),(53)&7	;volatile
 15191  1F36  1686               	line	98
 15192                           	
 15193                           l3110:	
 15194  1F37                     ;realtimeclock.c: 98:     RealTimeClock_write_byte(0x83);
 15195                           	movlw	low(083h)
 15196  1F37  3083               	fcall	_RealTimeClock_write_byte
 15197  1F38  160A  118A  21ED  160A  158A  	line	99
 15198                           ;realtimeclock.c: 99:     unsigned char c = RealTimeClock_read_byte();
 15199                           	fcall	_RealTimeClock_read_byte
 15200  1F3D  160A  118A  2431  160A  158A  	movwf	(??_RealTimeClock_get_minutes+0)+0
 15201  1F42  00FA               	movf	(??_RealTimeClock_get_minutes+0)+0,w
 15202  1F43  087A               	movwf	(RealTimeClock_get_minutes@c)
 15203  1F44  00FB               	line	100
 15204                           	
 15205                           l3112:	
 15206  1F45                     ;realtimeclock.c: 100:     RB5 = 0;
 15207                           	bcf	status, 5	;RP0=0, select bank0
 15208  1F45  1283               	bcf	status, 6	;RP1=0, select bank0
 15209  1F46  1303               	bcf	(53/8),(53)&7	;volatile
 15210  1F47  1286               	line	101
 15211                           	
 15212                           l3114:	
 15213  1F48                     ;realtimeclock.c: 101:     return __hex_to_int(c);
 15214                           	movf	(RealTimeClock_get_minutes@c),w
 15215  1F48  087B               	fcall	___hex_to_int
 15216  1F49  160A  118A  24C3  160A  158A  	movf	(1+(?___hex_to_int)),w
 15217  1F4E  0878               	bcf	status, 5	;RP0=0, select bank0
 15218  1F4F  1283               	bcf	status, 6	;RP1=0, select bank0
 15219  1F50  1303               	movwf	(?_RealTimeClock_get_minutes+1)
 15220  1F51  00A6               	movf	(0+(?___hex_to_int)),w
 15221  1F52  0877               	movwf	(?_RealTimeClock_get_minutes)
 15222  1F53  00A5               	goto	l356
 15223  1F54  2F55               	
 15224                           l3116:	
 15225  1F55                     	line	102
 15226                           	
 15227                           l356:	
 15228  1F55                     	return
 15229  1F55  0008               	opt stack 0
 15230                           GLOBAL	__end_of_RealTimeClock_get_minutes
 15231                           	__end_of_RealTimeClock_get_minutes:
 15232  1F56                     	signat	_RealTimeClock_get_minutes,90
 15233                           	global	_RealTimeClock_get_hours
 15234                           
 15235 ;; *************** function _RealTimeClock_get_hours *****************
 15236 ;; Defined at:
 15237 ;;		line 104 in file "realtimeclock.c"
 15238 ;; Parameters:    Size  Location     Type
 15239 ;;		None
 15240 ;; Auto vars:     Size  Location     Type
 15241 ;;  c               1   11[COMMON] unsigned char 
 15242 ;; Return value:  Size  Location     Type
 15243 ;;                  2    5[BANK0 ] int 
 15244 ;; Registers used:
 15245 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 15246 ;; Tracked objects:
 15247 ;;		On entry : 0/0
 15248 ;;		On exit  : 0/0
 15249 ;;		Unchanged: 0/0
 15250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15251 ;;      Params:         0       2       0       0       0
 15252 ;;      Locals:         1       0       0       0       0
 15253 ;;      Temps:          1       0       0       0       0
 15254 ;;      Totals:         2       2       0       0       0
 15255 ;;Total ram usage:        4 bytes
 15256 ;; Hardware stack levels used:    1
 15257 ;; Hardware stack levels required when called:    2
 15258 ;; This function calls:
 15259 ;;		_RealTimeClock_read_byte
 15260 ;;		_RealTimeClock_write_byte
 15261 ;;		___hex_to_int
 15262 ;; This function is called by:
 15263 ;;		_DisplayTime
 15264 ;;		_SetTime
 15265 ;;		_CheckTime
 15266 ;; This function uses a non-reentrant model
 15267 ;;
 15268                           psect	text50,local,class=CODE,delta=2,merge=1,group=0
 15269                           	line	104
 15270                           global __ptext50
 15271                           __ptext50:	;psect for function _RealTimeClock_get_hours
 15272  1F12                     psect	text50
 15273                           	file	"realtimeclock.c"
 15274                           	line	104
 15275                           	global	__size_of_RealTimeClock_get_hours
 15276                           	__size_of_RealTimeClock_get_hours	equ	__end_of_RealTimeClock_get_hours-_RealTimeClock_g
                                 et_hours
 15277  0022                     	
 15278                           _RealTimeClock_get_hours:	
 15279  1F12                     ;incstack = 0
 15280                           	opt	stack 1
 15281                           ; Regs used in _RealTimeClock_get_hours: [wreg+status,2+status,0+btemp+1+pclath+cstack]

 15282                           	line	105
 15283                           	
 15284                           l3118:	
 15285  1F12                     ;realtimeclock.c: 105:     RB5 = 1;
 15286                           	bcf	status, 5	;RP0=0, select bank0
 15287  1F12  1283               	bcf	status, 6	;RP1=0, select bank0
 15288  1F13  1303               	bsf	(53/8),(53)&7	;volatile
 15289  1F14  1686               	line	106
 15290                           	
 15291                           l3120:	
 15292  1F15                     ;realtimeclock.c: 106:     RealTimeClock_write_byte(0x85);
 15293                           	movlw	low(085h)
 15294  1F15  3085               	fcall	_RealTimeClock_write_byte
 15295  1F16  160A  118A  21ED  160A  158A  	line	107
 15296                           ;realtimeclock.c: 107:     unsigned char c = RealTimeClock_read_byte();
 15297                           	fcall	_RealTimeClock_read_byte
 15298  1F1B  160A  118A  2431  160A  158A  	movwf	(??_RealTimeClock_get_hours+0)+0
 15299  1F20  00FA               	movf	(??_RealTimeClock_get_hours+0)+0,w
 15300  1F21  087A               	movwf	(RealTimeClock_get_hours@c)
 15301  1F22  00FB               	line	108
 15302                           	
 15303                           l3122:	
 15304  1F23                     ;realtimeclock.c: 108:     RB5 = 0;
 15305                           	bcf	status, 5	;RP0=0, select bank0
 15306  1F23  1283               	bcf	status, 6	;RP1=0, select bank0
 15307  1F24  1303               	bcf	(53/8),(53)&7	;volatile
 15308  1F25  1286               	line	109
 15309                           	
 15310                           l3124:	
 15311  1F26                     ;realtimeclock.c: 109:     return __hex_to_int(c);
 15312                           	movf	(RealTimeClock_get_hours@c),w
 15313  1F26  087B               	fcall	___hex_to_int
 15314  1F27  160A  118A  24C3  160A  158A  	movf	(1+(?___hex_to_int)),w
 15315  1F2C  0878               	bcf	status, 5	;RP0=0, select bank0
 15316  1F2D  1283               	bcf	status, 6	;RP1=0, select bank0
 15317  1F2E  1303               	movwf	(?_RealTimeClock_get_hours+1)
 15318  1F2F  00A6               	movf	(0+(?___hex_to_int)),w
 15319  1F30  0877               	movwf	(?_RealTimeClock_get_hours)
 15320  1F31  00A5               	goto	l359
 15321  1F32  2F33               	
 15322                           l3126:	
 15323  1F33                     	line	110
 15324                           	
 15325                           l359:	
 15326  1F33                     	return
 15327  1F33  0008               	opt stack 0
 15328                           GLOBAL	__end_of_RealTimeClock_get_hours
 15329                           	__end_of_RealTimeClock_get_hours:
 15330  1F34                     	signat	_RealTimeClock_get_hours,90
 15331                           	global	___hex_to_int
 15332                           
 15333 ;; *************** function ___hex_to_int *****************
 15334 ;; Defined at:
 15335 ;;		line 5 in file "realtimeclock.c"
 15336 ;; Parameters:    Size  Location     Type
 15337 ;;  hex             1    wreg     unsigned char 
 15338 ;; Auto vars:     Size  Location     Type
 15339 ;;  hex             1    0[BANK0 ] unsigned char 
 15340 ;;  i               2    1[BANK0 ] int 
 15341 ;;  t               2    3[BANK0 ] int 
 15342 ;; Return value:  Size  Location     Type
 15343 ;;                  2    7[COMMON] int 
 15344 ;; Registers used:
 15345 ;;		wreg, status,2, status,0, pclath, cstack
 15346 ;; Tracked objects:
 15347 ;;		On entry : 0/0
 15348 ;;		On exit  : 0/0
 15349 ;;		Unchanged: 0/0
 15350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15351 ;;      Params:         2       0       0       0       0
 15352 ;;      Locals:         0       5       0       0       0
 15353 ;;      Temps:          1       0       0       0       0
 15354 ;;      Totals:         3       5       0       0       0
 15355 ;;Total ram usage:        8 bytes
 15356 ;; Hardware stack levels used:    1
 15357 ;; Hardware stack levels required when called:    1
 15358 ;; This function calls:
 15359 ;;		___awmod
 15360 ;; This function is called by:
 15361 ;;		_RealTimeClock_get_seconds
 15362 ;;		_RealTimeClock_get_minutes
 15363 ;;		_RealTimeClock_get_hours
 15364 ;;		_RealTimeClock_get_day_of_month
 15365 ;;		_RealTimeClock_get_month
 15366 ;;		_RealTimeClock_get_day_of_week
 15367 ;;		_RealTimeClock_get_year
 15368 ;;		_RealTimeClock_get_burst_time
 15369 ;; This function uses a non-reentrant model
 15370 ;;
 15371                           psect	text51,local,class=CODE,delta=2,merge=1,group=0
 15372                           	line	5
 15373                           global __ptext51
 15374                           __ptext51:	;psect for function ___hex_to_int
 15375  14C3                     psect	text51
 15376                           	file	"realtimeclock.c"
 15377                           	line	5
 15378                           	global	__size_of___hex_to_int
 15379                           	__size_of___hex_to_int	equ	__end_of___hex_to_int-___hex_to_int
 15380  004F                     	
 15381                           ___hex_to_int:	
 15382  14C3                     ;incstack = 0
 15383                           	opt	stack 1
 15384                           ; Regs used in ___hex_to_int: [wreg+status,2+status,0+pclath+cstack]
 15385                           ;___hex_to_int@hex stored from wreg
 15386                           	bcf	status, 5	;RP0=0, select bank0
 15387  14C3  1283               	bcf	status, 6	;RP1=0, select bank0
 15388  14C4  1303               	movwf	(___hex_to_int@hex)
 15389  14C5  00A0               	line	6
 15390                           	
 15391                           l2842:	
 15392  14C6                     ;realtimeclock.c: 6:     int t = 0;
 15393                           	clrf	(___hex_to_int@t)
 15394  14C6  01A3               	clrf	(___hex_to_int@t+1)
 15395  14C7  01A4               	line	7
 15396                           ;realtimeclock.c: 7:     for(int i = 0; i < hex; ++i) {
 15397                           	clrf	(___hex_to_int@i)
 15398  14C8  01A1               	clrf	(___hex_to_int@i+1)
 15399  14C9  01A2               	goto	l314
 15400  14CA  2CFC               	
 15401                           l315:	
 15402  14CB                     	line	8
 15403                           	
 15404                           l2844:	
 15405  14CB                     ;realtimeclock.c: 8:         ++t;
 15406                           	movlw	01h
 15407  14CB  3001               	bcf	status, 5	;RP0=0, select bank0
 15408  14CC  1283               	bcf	status, 6	;RP1=0, select bank0
 15409  14CD  1303               	addwf	(___hex_to_int@t),f
 15410  14CE  07A3               	skipnc
 15411  14CF  1803               	incf	(___hex_to_int@t+1),f
 15412  14D0  0AA4               	movlw	0
 15413  14D1  3000               	addwf	(___hex_to_int@t+1),f
 15414  14D2  07A4               	line	9
 15415                           	
 15416                           l2846:	
 15417  14D3                     ;realtimeclock.c: 9:         if(t && t % 10 == 0)
 15418                           	movf	((___hex_to_int@t)),w
 15419  14D3  0823               iorwf	((___hex_to_int@t+1)),w
 15420  14D4  0424               	btfsc	status,2
 15421  14D5  1903               	goto	u1851
 15422  14D6  2CD8               	goto	u1850
 15423  14D7  2CD9               u1851:
 15424  14D8                     	goto	l316
 15425  14D8  2CF4               u1850:
 15426  14D9                     	
 15427                           l2848:	
 15428  14D9                     	movlw	0Ah
 15429  14D9  300A               	movwf	(___awmod@divisor)
 15430  14DA  00F0               	movlw	0
 15431  14DB  3000               	movwf	((___awmod@divisor))+1
 15432  14DC  00F1               	movf	(___hex_to_int@t+1),w
 15433  14DD  0824               	movwf	(___awmod@dividend+1)
 15434  14DE  00F3               	movf	(___hex_to_int@t),w
 15435  14DF  0823               	movwf	(___awmod@dividend)
 15436  14E0  00F2               	fcall	___awmod
 15437  14E1  160A  118A  2567  160A  118A  	movf	((0+(?___awmod))),w
 15438  14E6  0870               iorwf	((1+(?___awmod))),w
 15439  14E7  0471               	btfss	status,2
 15440  14E8  1D03               	goto	u1861
 15441  14E9  2CEB               	goto	u1860
 15442  14EA  2CEC               u1861:
 15443  14EB                     	goto	l316
 15444  14EB  2CF4               u1860:
 15445  14EC                     	line	10
 15446                           	
 15447                           l2850:	
 15448  14EC                     ;realtimeclock.c: 10:             i+=6;
 15449                           	movlw	06h
 15450  14EC  3006               	bcf	status, 5	;RP0=0, select bank0
 15451  14ED  1283               	bcf	status, 6	;RP1=0, select bank0
 15452  14EE  1303               	addwf	(___hex_to_int@i),f
 15453  14EF  07A1               	skipnc
 15454  14F0  1803               	incf	(___hex_to_int@i+1),f
 15455  14F1  0AA2               	movlw	0
 15456  14F2  3000               	addwf	(___hex_to_int@i+1),f
 15457  14F3  07A2               	
 15458                           l316:	
 15459  14F4                     	line	11
 15460                           ;realtimeclock.c: 11:     }
 15461                           	movlw	01h
 15462  14F4  3001               	bcf	status, 5	;RP0=0, select bank0
 15463  14F5  1283               	bcf	status, 6	;RP1=0, select bank0
 15464  14F6  1303               	addwf	(___hex_to_int@i),f
 15465  14F7  07A1               	skipnc
 15466  14F8  1803               	incf	(___hex_to_int@i+1),f
 15467  14F9  0AA2               	movlw	0
 15468  14FA  3000               	addwf	(___hex_to_int@i+1),f
 15469  14FB  07A2               	
 15470                           l314:	
 15471  14FC                     	movf	(___hex_to_int@i+1),w
 15472  14FC  0822               	xorlw	80h
 15473  14FD  3A80               	movwf	(??___hex_to_int+0)+0
 15474  14FE  00F9               	movlw	80h
 15475  14FF  3080               	subwf	(??___hex_to_int+0)+0,w
 15476  1500  0279               	skipz
 15477  1501  1D03               	goto	u1875
 15478  1502  2D05               	movf	(___hex_to_int@hex),w
 15479  1503  0820               	subwf	(___hex_to_int@i),w
 15480  1504  0221               u1875:
 15481  1505                     
 15482                           	skipc
 15483  1505  1C03               	goto	u1871
 15484  1506  2D08               	goto	u1870
 15485  1507  2D09               u1871:
 15486  1508                     	goto	l2844
 15487  1508  2CCB               u1870:
 15488  1509                     	goto	l2852
 15489  1509  2D0A               	
 15490                           l317:	
 15491  150A                     	line	12
 15492                           	
 15493                           l2852:	
 15494  150A                     ;realtimeclock.c: 12:     return t;
 15495                           	bcf	status, 5	;RP0=0, select bank0
 15496  150A  1283               	bcf	status, 6	;RP1=0, select bank0
 15497  150B  1303               	movf	(___hex_to_int@t+1),w
 15498  150C  0824               	movwf	(?___hex_to_int+1)
 15499  150D  00F8               	movf	(___hex_to_int@t),w
 15500  150E  0823               	movwf	(?___hex_to_int)
 15501  150F  00F7               	goto	l318
 15502  1510  2D11               	
 15503                           l2854:	
 15504  1511                     	line	13
 15505                           	
 15506                           l318:	
 15507  1511                     	return
 15508  1511  0008               	opt stack 0
 15509                           GLOBAL	__end_of___hex_to_int
 15510                           	__end_of___hex_to_int:
 15511  1512                     	signat	___hex_to_int,4218
 15512                           	global	___awmod
 15513                           
 15514 ;; *************** function ___awmod *****************
 15515 ;; Defined at:
 15516 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 15517 ;; Parameters:    Size  Location     Type
 15518 ;;  divisor         2    0[COMMON] int 
 15519 ;;  dividend        2    2[COMMON] int 
 15520 ;; Auto vars:     Size  Location     Type
 15521 ;;  sign            1    6[COMMON] unsigned char 
 15522 ;;  counter         1    5[COMMON] unsigned char 
 15523 ;; Return value:  Size  Location     Type
 15524 ;;                  2    0[COMMON] int 
 15525 ;; Registers used:
 15526 ;;		wreg, status,2, status,0
 15527 ;; Tracked objects:
 15528 ;;		On entry : 0/0
 15529 ;;		On exit  : 0/0
 15530 ;;		Unchanged: 0/0
 15531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15532 ;;      Params:         4       0       0       0       0
 15533 ;;      Locals:         2       0       0       0       0
 15534 ;;      Temps:          1       0       0       0       0
 15535 ;;      Totals:         7       0       0       0       0
 15536 ;;Total ram usage:        7 bytes
 15537 ;; Hardware stack levels used:    1
 15538 ;; This function calls:
 15539 ;;		Nothing
 15540 ;; This function is called by:
 15541 ;;		_DisplayTime
 15542 ;;		_DisplayDate
 15543 ;;		_ChangeTrigger
 15544 ;;		_Switch24Hour
 15545 ;;		_SetTime
 15546 ;;		___hex_to_int
 15547 ;;		___int_to_hex
 15548 ;;		_Get_Temp
 15549 ;; This function uses a non-reentrant model
 15550 ;;
 15551                           psect	text52,local,class=CODE,delta=2,merge=1,group=1
 15552                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 15553                           	line	5
 15554                           global __ptext52
 15555                           __ptext52:	;psect for function ___awmod
 15556  1567                     psect	text52
 15557                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 15558                           	line	5
 15559                           	global	__size_of___awmod
 15560                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 15561  0063                     	
 15562                           ___awmod:	
 15563  1567                     ;incstack = 0
 15564                           	opt	stack 6
 15565                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 15566                           	line	12
 15567                           	
 15568                           l2796:	
 15569  1567                     	clrf	(___awmod@sign)
 15570  1567  01F6               	line	13
 15571                           	
 15572                           l2798:	
 15573  1568                     	btfss	(___awmod@dividend+1),7
 15574  1568  1FF3               	goto	u1761
 15575  1569  2D6B               	goto	u1760
 15576  156A  2D6C               u1761:
 15577  156B                     	goto	l2804
 15578  156B  2D74               u1760:
 15579  156C                     	line	14
 15580                           	
 15581                           l2800:	
 15582  156C                     	comf	(___awmod@dividend),f
 15583  156C  09F2               	comf	(___awmod@dividend+1),f
 15584  156D  09F3               	incf	(___awmod@dividend),f
 15585  156E  0AF2               	skipnz
 15586  156F  1903               	incf	(___awmod@dividend+1),f
 15587  1570  0AF3               	line	15
 15588                           	
 15589                           l2802:	
 15590  1571                     	clrf	(___awmod@sign)
 15591  1571  01F6               	incf	(___awmod@sign),f
 15592  1572  0AF6               	goto	l2804
 15593  1573  2D74               	line	16
 15594                           	
 15595                           l859:	
 15596  1574                     	line	17
 15597                           	
 15598                           l2804:	
 15599  1574                     	btfss	(___awmod@divisor+1),7
 15600  1574  1FF1               	goto	u1771
 15601  1575  2D77               	goto	u1770
 15602  1576  2D78               u1771:
 15603  1577                     	goto	l2808
 15604  1577  2D7E               u1770:
 15605  1578                     	line	18
 15606                           	
 15607                           l2806:	
 15608  1578                     	comf	(___awmod@divisor),f
 15609  1578  09F0               	comf	(___awmod@divisor+1),f
 15610  1579  09F1               	incf	(___awmod@divisor),f
 15611  157A  0AF0               	skipnz
 15612  157B  1903               	incf	(___awmod@divisor+1),f
 15613  157C  0AF1               	goto	l2808
 15614  157D  2D7E               	
 15615                           l860:	
 15616  157E                     	line	19
 15617                           	
 15618                           l2808:	
 15619  157E                     	movf	((___awmod@divisor)),w
 15620  157E  0870               iorwf	((___awmod@divisor+1)),w
 15621  157F  0471               	btfsc	status,2
 15622  1580  1903               	goto	u1781
 15623  1581  2D83               	goto	u1780
 15624  1582  2D84               u1781:
 15625  1583                     	goto	l2826
 15626  1583  2DB9               u1780:
 15627  1584                     	line	20
 15628                           	
 15629                           l2810:	
 15630  1584                     	clrf	(___awmod@counter)
 15631  1584  01F5               	incf	(___awmod@counter),f
 15632  1585  0AF5               	line	21
 15633                           	goto	l2816
 15634  1586  2D93               	
 15635                           l863:	
 15636  1587                     	line	22
 15637                           	
 15638                           l2812:	
 15639  1587                     	movlw	01h
 15640  1587  3001               	
 15641                           u1795:
 15642  1588                     	clrc
 15643  1588  1003               	rlf	(___awmod@divisor),f
 15644  1589  0DF0               	rlf	(___awmod@divisor+1),f
 15645  158A  0DF1               	addlw	-1
 15646  158B  3EFF               	skipz
 15647  158C  1D03               	goto	u1795
 15648  158D  2D88               	line	23
 15649                           	
 15650                           l2814:	
 15651  158E                     	movlw	low(01h)
 15652  158E  3001               	movwf	(??___awmod+0)+0
 15653  158F  00F4               	movf	(??___awmod+0)+0,w
 15654  1590  0874               	addwf	(___awmod@counter),f
 15655  1591  07F5               	goto	l2816
 15656  1592  2D93               	line	24
 15657                           	
 15658                           l862:	
 15659  1593                     	line	21
 15660                           	
 15661                           l2816:	
 15662  1593                     	btfss	(___awmod@divisor+1),(15)&7
 15663  1593  1FF1               	goto	u1801
 15664  1594  2D96               	goto	u1800
 15665  1595  2D97               u1801:
 15666  1596                     	goto	l2812
 15667  1596  2D87               u1800:
 15668  1597                     	goto	l2818
 15669  1597  2D99               	
 15670                           l864:	
 15671  1598                     	goto	l2818
 15672  1598  2D99               	line	25
 15673                           	
 15674                           l865:	
 15675  1599                     	line	26
 15676                           	
 15677                           l2818:	
 15678  1599                     	movf	(___awmod@divisor+1),w
 15679  1599  0871               	subwf	(___awmod@dividend+1),w
 15680  159A  0273               	skipz
 15681  159B  1D03               	goto	u1815
 15682  159C  2D9F               	movf	(___awmod@divisor),w
 15683  159D  0870               	subwf	(___awmod@dividend),w
 15684  159E  0272               u1815:
 15685  159F                     	skipc
 15686  159F  1C03               	goto	u1811
 15687  15A0  2DA2               	goto	u1810
 15688  15A1  2DA3               u1811:
 15689  15A2                     	goto	l2822
 15690  15A2  2DAA               u1810:
 15691  15A3                     	line	27
 15692                           	
 15693                           l2820:	
 15694  15A3                     	movf	(___awmod@divisor),w
 15695  15A3  0870               	subwf	(___awmod@dividend),f
 15696  15A4  02F2               	movf	(___awmod@divisor+1),w
 15697  15A5  0871               	skipc
 15698  15A6  1C03               	decf	(___awmod@dividend+1),f
 15699  15A7  03F3               	subwf	(___awmod@dividend+1),f
 15700  15A8  02F3               	goto	l2822
 15701  15A9  2DAA               	
 15702                           l866:	
 15703  15AA                     	line	28
 15704                           	
 15705                           l2822:	
 15706  15AA                     	movlw	01h
 15707  15AA  3001               	
 15708                           u1825:
 15709  15AB                     	clrc
 15710  15AB  1003               	rrf	(___awmod@divisor+1),f
 15711  15AC  0CF1               	rrf	(___awmod@divisor),f
 15712  15AD  0CF0               	addlw	-1
 15713  15AE  3EFF               	skipz
 15714  15AF  1D03               	goto	u1825
 15715  15B0  2DAB               	line	29
 15716                           	
 15717                           l2824:	
 15718  15B1                     	movlw	01h
 15719  15B1  3001               	subwf	(___awmod@counter),f
 15720  15B2  02F5               	btfss	status,2
 15721  15B3  1D03               	goto	u1831
 15722  15B4  2DB6               	goto	u1830
 15723  15B5  2DB7               u1831:
 15724  15B6                     	goto	l2818
 15725  15B6  2D99               u1830:
 15726  15B7                     	goto	l2826
 15727  15B7  2DB9               	
 15728                           l867:	
 15729  15B8                     	goto	l2826
 15730  15B8  2DB9               	line	30
 15731                           	
 15732                           l861:	
 15733  15B9                     	line	31
 15734                           	
 15735                           l2826:	
 15736  15B9                     	movf	((___awmod@sign)),w
 15737  15B9  0876               	btfsc	status,2
 15738  15BA  1903               	goto	u1841
 15739  15BB  2DBD               	goto	u1840
 15740  15BC  2DBE               u1841:
 15741  15BD                     	goto	l2830
 15742  15BD  2DC4               u1840:
 15743  15BE                     	line	32
 15744                           	
 15745                           l2828:	
 15746  15BE                     	comf	(___awmod@dividend),f
 15747  15BE  09F2               	comf	(___awmod@dividend+1),f
 15748  15BF  09F3               	incf	(___awmod@dividend),f
 15749  15C0  0AF2               	skipnz
 15750  15C1  1903               	incf	(___awmod@dividend+1),f
 15751  15C2  0AF3               	goto	l2830
 15752  15C3  2DC4               	
 15753                           l868:	
 15754  15C4                     	line	33
 15755                           	
 15756                           l2830:	
 15757  15C4                     	movf	(___awmod@dividend+1),w
 15758  15C4  0873               	movwf	(?___awmod+1)
 15759  15C5  00F1               	movf	(___awmod@dividend),w
 15760  15C6  0872               	movwf	(?___awmod)
 15761  15C7  00F0               	goto	l869
 15762  15C8  2DC9               	
 15763                           l2832:	
 15764  15C9                     	line	34
 15765                           	
 15766                           l869:	
 15767  15C9                     	return
 15768  15C9  0008               	opt stack 0
 15769                           GLOBAL	__end_of___awmod
 15770                           	__end_of___awmod:
 15771  15CA                     	signat	___awmod,8314
 15772                           	global	_RealTimeClock_write_byte
 15773                           
 15774 ;; *************** function _RealTimeClock_write_byte *****************
 15775 ;; Defined at:
 15776 ;;		line 26 in file "realtimeclock.c"
 15777 ;; Parameters:    Size  Location     Type
 15778 ;;  time_tx         1    wreg     unsigned char 
 15779 ;; Auto vars:     Size  Location     Type
 15780 ;;  time_tx         1    4[COMMON] unsigned char 
 15781 ;;  i               2    2[COMMON] int 
 15782 ;; Return value:  Size  Location     Type
 15783 ;;                  1    wreg      void 
 15784 ;; Registers used:
 15785 ;;		wreg, status,2, status,0, btemp+1
 15786 ;; Tracked objects:
 15787 ;;		On entry : 0/0
 15788 ;;		On exit  : 0/0
 15789 ;;		Unchanged: 0/0
 15790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15791 ;;      Params:         0       0       0       0       0
 15792 ;;      Locals:         3       0       0       0       0
 15793 ;;      Temps:          2       0       0       0       0
 15794 ;;      Totals:         5       0       0       0       0
 15795 ;;Total ram usage:        5 bytes
 15796 ;; Hardware stack levels used:    1
 15797 ;; This function calls:
 15798 ;;		Nothing
 15799 ;; This function is called by:
 15800 ;;		_RealTimeClock_init
 15801 ;;		_RealTimeClock_get_seconds
 15802 ;;		_RealTimeClock_get_minutes
 15803 ;;		_RealTimeClock_get_hours
 15804 ;;		_RealTimeClock_get_day_of_month
 15805 ;;		_RealTimeClock_get_month
 15806 ;;		_RealTimeClock_get_day_of_week
 15807 ;;		_RealTimeClock_get_year
 15808 ;;		_RealTimeClock_set_seconds
 15809 ;;		_RealTimeClock_set_minutes
 15810 ;;		_RealTimeClock_set_hours
 15811 ;;		_RealTimeClock_set_day_of_week
 15812 ;;		_RealTimeClock_set_burst_time
 15813 ;;		_RealTimeClock_get_burst_time
 15814 ;;		_RealTimeClock_set_day_of_month
 15815 ;;		_RealTimeClock_set_month
 15816 ;;		_RealTimeClock_set_year
 15817 ;; This function uses a non-reentrant model
 15818 ;;
 15819                           psect	text53,local,class=CODE,delta=2,merge=1,group=0
 15820                           	file	"realtimeclock.c"
 15821                           	line	26
 15822                           global __ptext53
 15823                           __ptext53:	;psect for function _RealTimeClock_write_byte
 15824  11ED                     psect	text53
 15825                           	file	"realtimeclock.c"
 15826                           	line	26
 15827                           	global	__size_of_RealTimeClock_write_byte
 15828                           	__size_of_RealTimeClock_write_byte	equ	__end_of_RealTimeClock_write_byte-_RealTimeClock
                                 _write_byte
 15829  003B                     	
 15830                           _RealTimeClock_write_byte:	
 15831  11ED                     ;incstack = 0
 15832                           	opt	stack 2
 15833                           ; Regs used in _RealTimeClock_write_byte: [wreg+status,2+status,0+btemp+1]
 15834                           ;RealTimeClock_write_byte@time_tx stored from wreg
 15835                           	movwf	(RealTimeClock_write_byte@time_tx)
 15836  11ED  00F4               	line	27
 15837                           	
 15838                           l2856:	
 15839  11EE                     ;realtimeclock.c: 27:     for(int i = 0; i < 8; ++i) {
 15840                           	clrf	(RealTimeClock_write_byte@i)
 15841  11EE  01F2               	clrf	(RealTimeClock_write_byte@i+1)
 15842  11EF  01F3               	
 15843                           l2858:	
 15844  11F0                     	movf	(RealTimeClock_write_byte@i+1),w
 15845  11F0  0873               	xorlw	80h
 15846  11F1  3A80               	movwf	btemp+1
 15847  11F2  00FF               	movlw	(0)^80h
 15848  11F3  3080               	subwf	btemp+1,w
 15849  11F4  027F               	skipz
 15850  11F5  1D03               	goto	u1885
 15851  11F6  29F9               	movlw	08h
 15852  11F7  3008               	subwf	(RealTimeClock_write_byte@i),w
 15853  11F8  0272               u1885:
 15854  11F9                     
 15855                           	skipc
 15856  11F9  1C03               	goto	u1881
 15857  11FA  29FC               	goto	u1880
 15858  11FB  29FD               u1881:
 15859  11FC                     	goto	l328
 15860  11FC  29FF               u1880:
 15861  11FD                     	goto	l329
 15862  11FD  2A24               	
 15863                           l2860:	
 15864  11FE                     	goto	l329
 15865  11FE  2A24               	
 15866                           l328:	
 15867  11FF                     	line	28
 15868                           ;realtimeclock.c: 28:         RB4 = 0;
 15869                           	bcf	status, 5	;RP0=0, select bank0
 15870  11FF  1283               	bcf	status, 6	;RP1=0, select bank0
 15871  1200  1303               	bcf	(52/8),(52)&7	;volatile
 15872  1201  1206               	line	29
 15873                           ;realtimeclock.c: 29:         RB0 = 0;
 15874                           	bcf	(48/8),(48)&7	;volatile
 15875  1202  1006               	line	30
 15876                           ;realtimeclock.c: 30:         if (time_tx&0x01) {
 15877                           	btfss	(RealTimeClock_write_byte@time_tx),(0)&7
 15878  1203  1C74               	goto	u1891
 15879  1204  2A06               	goto	u1890
 15880  1205  2A07               u1891:
 15881  1206                     	goto	l2864
 15882  1206  2A09               u1890:
 15883  1207                     	line	31
 15884                           	
 15885                           l2862:	
 15886  1207                     ;realtimeclock.c: 31:             RB4 = 1;
 15887                           	bsf	(52/8),(52)&7	;volatile
 15888  1207  1606               	goto	l2864
 15889  1208  2A09               	line	32
 15890                           ;realtimeclock.c: 32:         }
 15891                           	
 15892                           l330:	
 15893  1209                     	line	33
 15894                           	
 15895                           l2864:	
 15896  1209                     ;realtimeclock.c: 33:         time_tx = time_tx >> 1;
 15897                           	movf	(RealTimeClock_write_byte@time_tx),w
 15898  1209  0874               	movwf	(??_RealTimeClock_write_byte+0)+0
 15899  120A  00F0               	clrc
 15900  120B  1003               	rrf	(??_RealTimeClock_write_byte+0)+0,w
 15901  120C  0C70               	movwf	(??_RealTimeClock_write_byte+1)+0
 15902  120D  00F1               	movf	(??_RealTimeClock_write_byte+1)+0,w
 15903  120E  0871               	movwf	(RealTimeClock_write_byte@time_tx)
 15904  120F  00F4               	line	34
 15905                           	
 15906                           l2866:	
 15907  1210                     ;realtimeclock.c: 34:         RB0 = 1;
 15908                           	bsf	(48/8),(48)&7	;volatile
 15909  1210  1406               	line	35
 15910                           	
 15911                           l2868:	
 15912  1211                     ;realtimeclock.c: 35:     }
 15913                           	movlw	01h
 15914  1211  3001               	addwf	(RealTimeClock_write_byte@i),f
 15915  1212  07F2               	skipnc
 15916  1213  1803               	incf	(RealTimeClock_write_byte@i+1),f
 15917  1214  0AF3               	movlw	0
 15918  1215  3000               	addwf	(RealTimeClock_write_byte@i+1),f
 15919  1216  07F3               	
 15920                           l2870:	
 15921  1217                     	movf	(RealTimeClock_write_byte@i+1),w
 15922  1217  0873               	xorlw	80h
 15923  1218  3A80               	movwf	btemp+1
 15924  1219  00FF               	movlw	(0)^80h
 15925  121A  3080               	subwf	btemp+1,w
 15926  121B  027F               	skipz
 15927  121C  1D03               	goto	u1905
 15928  121D  2A20               	movlw	08h
 15929  121E  3008               	subwf	(RealTimeClock_write_byte@i),w
 15930  121F  0272               u1905:
 15931  1220                     
 15932                           	skipc
 15933  1220  1C03               	goto	u1901
 15934  1221  2A23               	goto	u1900
 15935  1222  2A24               u1901:
 15936  1223                     	goto	l328
 15937  1223  29FF               u1900:
 15938  1224                     	
 15939                           l329:	
 15940  1224                     	line	36
 15941                           ;realtimeclock.c: 36:     RB0 = 0;
 15942                           	bcf	status, 5	;RP0=0, select bank0
 15943  1224  1283               	bcf	status, 6	;RP1=0, select bank0
 15944  1225  1303               	bcf	(48/8),(48)&7	;volatile
 15945  1226  1006               	line	37
 15946                           	
 15947                           l331:	
 15948  1227                     	return
 15949  1227  0008               	opt stack 0
 15950                           GLOBAL	__end_of_RealTimeClock_write_byte
 15951                           	__end_of_RealTimeClock_write_byte:
 15952  1228                     	signat	_RealTimeClock_write_byte,4217
 15953                           	global	_RealTimeClock_read_byte
 15954                           
 15955 ;; *************** function _RealTimeClock_read_byte *****************
 15956 ;; Defined at:
 15957 ;;		line 39 in file "realtimeclock.c"
 15958 ;; Parameters:    Size  Location     Type
 15959 ;;		None
 15960 ;; Auto vars:     Size  Location     Type
 15961 ;;  i               2    3[COMMON] int 
 15962 ;;  time_rx         1    2[COMMON] unsigned char 
 15963 ;; Return value:  Size  Location     Type
 15964 ;;                  1    wreg      unsigned char 
 15965 ;; Registers used:
 15966 ;;		wreg, status,2, status,0, btemp+1
 15967 ;; Tracked objects:
 15968 ;;		On entry : 0/0
 15969 ;;		On exit  : 0/0
 15970 ;;		Unchanged: 0/0
 15971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 15972 ;;      Params:         0       0       0       0       0
 15973 ;;      Locals:         3       0       0       0       0
 15974 ;;      Temps:          2       0       0       0       0
 15975 ;;      Totals:         5       0       0       0       0
 15976 ;;Total ram usage:        5 bytes
 15977 ;; Hardware stack levels used:    1
 15978 ;; This function calls:
 15979 ;;		Nothing
 15980 ;; This function is called by:
 15981 ;;		_RealTimeClock_get_seconds
 15982 ;;		_RealTimeClock_get_minutes
 15983 ;;		_RealTimeClock_get_hours
 15984 ;;		_RealTimeClock_get_day_of_month
 15985 ;;		_RealTimeClock_get_month
 15986 ;;		_RealTimeClock_get_day_of_week
 15987 ;;		_RealTimeClock_get_year
 15988 ;;		_RealTimeClock_get_burst_time
 15989 ;; This function uses a non-reentrant model
 15990 ;;
 15991                           psect	text54,local,class=CODE,delta=2,merge=1,group=0
 15992                           	line	39
 15993                           global __ptext54
 15994                           __ptext54:	;psect for function _RealTimeClock_read_byte
 15995  1431                     psect	text54
 15996                           	file	"realtimeclock.c"
 15997                           	line	39
 15998                           	global	__size_of_RealTimeClock_read_byte
 15999                           	__size_of_RealTimeClock_read_byte	equ	__end_of_RealTimeClock_read_byte-_RealTimeClock_r
                                 ead_byte
 16000  0047                     	
 16001                           _RealTimeClock_read_byte:	
 16002  1431                     ;incstack = 0
 16003                           	opt	stack 2
 16004                           ; Regs used in _RealTimeClock_read_byte: [wreg+status,2+status,0+btemp+1]
 16005                           	line	41
 16006                           	
 16007                           l2872:	
 16008  1431                     ;realtimeclock.c: 41:     unsigned char time_rx = 0;
 16009                           	clrf	(RealTimeClock_read_byte@time_rx)
 16010  1431  01F2               	line	42
 16011                           	
 16012                           l2874:	
 16013  1432                     ;realtimeclock.c: 42:     TRISB4 = 1;
 16014                           	bsf	status, 5	;RP0=1, select bank1
 16015  1432  1683               	bcf	status, 6	;RP1=0, select bank1
 16016  1433  1303               	bsf	(1076/8)^080h,(1076)&7	;volatile
 16017  1434  1606               	line	43
 16018                           ;realtimeclock.c: 43:     for(int i = 0; i < 8; ++i) {
 16019                           	clrf	(RealTimeClock_read_byte@i)
 16020  1435  01F3               	clrf	(RealTimeClock_read_byte@i+1)
 16021  1436  01F4               	
 16022                           l2876:	
 16023  1437                     	movf	(RealTimeClock_read_byte@i+1),w
 16024  1437  0874               	xorlw	80h
 16025  1438  3A80               	movwf	btemp+1
 16026  1439  00FF               	movlw	(0)^80h
 16027  143A  3080               	subwf	btemp+1,w
 16028  143B  027F               	skipz
 16029  143C  1D03               	goto	u1915
 16030  143D  2C40               	movlw	08h
 16031  143E  3008               	subwf	(RealTimeClock_read_byte@i),w
 16032  143F  0273               u1915:
 16033  1440                     
 16034                           	skipc
 16035  1440  1C03               	goto	u1911
 16036  1441  2C43               	goto	u1910
 16037  1442  2C44               u1911:
 16038  1443                     	goto	l334
 16039  1443  2C46               u1910:
 16040  1444                     	goto	l335
 16041  1444  2C6F               	
 16042                           l2878:	
 16043  1445                     	goto	l335
 16044  1445  2C6F               	
 16045                           l334:	
 16046  1446                     	line	44
 16047                           ;realtimeclock.c: 44:         RB0 = 1;
 16048                           	bcf	status, 5	;RP0=0, select bank0
 16049  1446  1283               	bcf	status, 6	;RP1=0, select bank0
 16050  1447  1303               	bsf	(48/8),(48)&7	;volatile
 16051  1448  1406               	line	47
 16052                           ;realtimeclock.c: 47:         if(RB4) time_rx += 1 << i;
 16053                           	btfss	(52/8),(52)&7	;volatile
 16054  1449  1E06               	goto	u1921
 16055  144A  2C4C               	goto	u1920
 16056  144B  2C4D               u1921:
 16057  144C                     	goto	l2882
 16058  144C  2C5B               u1920:
 16059  144D                     	
 16060                           l2880:	
 16061  144D                     	movlw	low(01h)
 16062  144D  3001               	movwf	(??_RealTimeClock_read_byte+0)+0
 16063  144E  00F0               	incf	(RealTimeClock_read_byte@i),w
 16064  144F  0A73               	goto	u1934
 16065  1450  2C53               u1935:
 16066  1451                     	clrc
 16067  1451  1003               	rlf	(??_RealTimeClock_read_byte+0)+0,f
 16068  1452  0DF0               u1934:
 16069  1453                     	addlw	-1
 16070  1453  3EFF               	skipz
 16071  1454  1D03               	goto	u1935
 16072  1455  2C51               	movf	0+(??_RealTimeClock_read_byte+0)+0,w
 16073  1456  0870               	movwf	(??_RealTimeClock_read_byte+1)+0
 16074  1457  00F1               	movf	(??_RealTimeClock_read_byte+1)+0,w
 16075  1458  0871               	addwf	(RealTimeClock_read_byte@time_rx),f
 16076  1459  07F2               	goto	l2882
 16077  145A  2C5B               	
 16078                           l336:	
 16079  145B                     	line	48
 16080                           	
 16081                           l2882:	
 16082  145B                     ;realtimeclock.c: 48:         RB0 = 0;
 16083                           	bcf	(48/8),(48)&7	;volatile
 16084  145B  1006               	line	49
 16085                           	
 16086                           l2884:	
 16087  145C                     ;realtimeclock.c: 49:     }
 16088                           	movlw	01h
 16089  145C  3001               	addwf	(RealTimeClock_read_byte@i),f
 16090  145D  07F3               	skipnc
 16091  145E  1803               	incf	(RealTimeClock_read_byte@i+1),f
 16092  145F  0AF4               	movlw	0
 16093  1460  3000               	addwf	(RealTimeClock_read_byte@i+1),f
 16094  1461  07F4               	
 16095                           l2886:	
 16096  1462                     	movf	(RealTimeClock_read_byte@i+1),w
 16097  1462  0874               	xorlw	80h
 16098  1463  3A80               	movwf	btemp+1
 16099  1464  00FF               	movlw	(0)^80h
 16100  1465  3080               	subwf	btemp+1,w
 16101  1466  027F               	skipz
 16102  1467  1D03               	goto	u1945
 16103  1468  2C6B               	movlw	08h
 16104  1469  3008               	subwf	(RealTimeClock_read_byte@i),w
 16105  146A  0273               u1945:
 16106  146B                     
 16107                           	skipc
 16108  146B  1C03               	goto	u1941
 16109  146C  2C6E               	goto	u1940
 16110  146D  2C6F               u1941:
 16111  146E                     	goto	l334
 16112  146E  2C46               u1940:
 16113  146F                     	
 16114                           l335:	
 16115  146F                     	line	50
 16116                           ;realtimeclock.c: 50:     RB0 = 0;
 16117                           	bcf	status, 5	;RP0=0, select bank0
 16118  146F  1283               	bcf	status, 6	;RP1=0, select bank0
 16119  1470  1303               	bcf	(48/8),(48)&7	;volatile
 16120  1471  1006               	line	51
 16121                           ;realtimeclock.c: 51:     TRISB4 = 0;
 16122                           	bsf	status, 5	;RP0=1, select bank1
 16123  1472  1683               	bcf	status, 6	;RP1=0, select bank1
 16124  1473  1303               	bcf	(1076/8)^080h,(1076)&7	;volatile
 16125  1474  1206               	line	52
 16126                           	
 16127                           l2888:	
 16128  1475                     ;realtimeclock.c: 52:     return time_rx;
 16129                           	movf	(RealTimeClock_read_byte@time_rx),w
 16130  1475  0872               	goto	l337
 16131  1476  2C77               	
 16132                           l2890:	
 16133  1477                     	line	53
 16134                           	
 16135                           l337:	
 16136  1477                     	return
 16137  1477  0008               	opt stack 0
 16138                           GLOBAL	__end_of_RealTimeClock_read_byte
 16139                           	__end_of_RealTimeClock_read_byte:
 16140  1478                     	signat	_RealTimeClock_read_byte,89
 16141                           	global	_Buzzer_Init
 16142                           
 16143 ;; *************** function _Buzzer_Init *****************
 16144 ;; Defined at:
 16145 ;;		line 6 in file "Buzzer.c"
 16146 ;; Parameters:    Size  Location     Type
 16147 ;;		None
 16148 ;; Auto vars:     Size  Location     Type
 16149 ;;		None
 16150 ;; Return value:  Size  Location     Type
 16151 ;;                  1    wreg      void 
 16152 ;; Registers used:
 16153 ;;		None
 16154 ;; Tracked objects:
 16155 ;;		On entry : 0/0
 16156 ;;		On exit  : 0/0
 16157 ;;		Unchanged: 0/0
 16158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 16159 ;;      Params:         0       0       0       0       0
 16160 ;;      Locals:         0       0       0       0       0
 16161 ;;      Temps:          0       0       0       0       0
 16162 ;;      Totals:         0       0       0       0       0
 16163 ;;Total ram usage:        0 bytes
 16164 ;; Hardware stack levels used:    1
 16165 ;; This function calls:
 16166 ;;		Nothing
 16167 ;; This function is called by:
 16168 ;;		_main
 16169 ;; This function uses a non-reentrant model
 16170 ;;
 16171                           psect	text55,local,class=CODE,delta=2,merge=1,group=0
 16172                           	file	"Buzzer.c"
 16173                           	line	6
 16174                           global __ptext55
 16175                           __ptext55:	;psect for function _Buzzer_Init
 16176  1E0A                     psect	text55
 16177                           	file	"Buzzer.c"
 16178                           	line	6
 16179                           	global	__size_of_Buzzer_Init
 16180                           	__size_of_Buzzer_Init	equ	__end_of_Buzzer_Init-_Buzzer_Init
 16181  0004                     	
 16182                           _Buzzer_Init:	
 16183  1E0A                     ;incstack = 0
 16184                           	opt	stack 7
 16185                           ; Regs used in _Buzzer_Init: []
 16186                           	line	8
 16187                           	
 16188                           l4092:	
 16189  1E0A                     ;Buzzer.c: 8:     TRISB1 = 0;
 16190                           	bsf	status, 5	;RP0=1, select bank1
 16191  1E0A  1683               	bcf	status, 6	;RP1=0, select bank1
 16192  1E0B  1303               	bcf	(1073/8)^080h,(1073)&7	;volatile
 16193  1E0C  1086               	line	9
 16194                           	
 16195                           l537:	
 16196  1E0D                     	return
 16197  1E0D  0008               	opt stack 0
 16198                           GLOBAL	__end_of_Buzzer_Init
 16199                           	__end_of_Buzzer_Init:
 16200  1E0E                     	signat	_Buzzer_Init,89
 16201                           global	___latbits
 16202                           ___latbits	equ	2
 16203  0002                     	global	btemp
 16204                           	btemp set 07Eh
 16205  007E                     
 16206                           	DABS	1,126,2	;btemp
 16207                           	global	wtemp0
 16208                           	wtemp0 set btemp+0
 16209  007E                     	end


Data Sizes:
    Strings     212
    Constant    0
    Data        79
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     54      80
    BANK1            80      0      80
    BANK3            96      0      30
    BANK2            96      0       0

Pointer List with Targets:

    timeBuffer	PTR int  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    Get_Temp@buffer	PTR unsigned char  size(1) Largest target is 6
		 -> tempBuffer(BANK1[6]), 

    LCD_SendString@string	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_31(CODE[4]), STR_30(CODE[4]), STR_29(CODE[4]), STR_28(CODE[4]), 
		 -> STR_27(CODE[4]), STR_26(CODE[4]), STR_25(CODE[4]), STR_24(CODE[13]), 
		 -> STR_23(CODE[6]), STR_22(CODE[5]), SetTime@digits(BANK0[9]), STR_21(CODE[9]), 
		 -> STR_20(CODE[6]), STR_19(CODE[6]), STR_18(CODE[7]), STR_17(CODE[16]), 
		 -> STR_16(CODE[11]), STR_15(CODE[12]), STR_14(CODE[4]), STR_13(CODE[3]), 
		 -> STR_12(CODE[9]), ChangeTrigger@digits(BANK0[3]), STR_11(CODE[12]), STR_10(CODE[9]), 
		 -> tempBuffer(BANK1[6]), STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[7]), 
		 -> STR_6(CODE[9]), STR_5(CODE[7]), STR_4(CODE[9]), STR_3(CODE[10]), 
		 -> STR_2(CODE[8]), STR_1(CODE[7]), timeDisplayer(BANK1[9]), 

    sp__RealTimeClock_get_burst_time	PTR int  size(1) Largest target is 14
		 -> __RealTimeClock_buff(BANK3[14]), 

    SetDate@Sunday	PTR unsigned char  size(1) Largest target is 4
		 -> STR_31(CODE[4]), 

    SetDate@Saturday	PTR unsigned char  size(1) Largest target is 4
		 -> STR_30(CODE[4]), 

    SetDate@Friday	PTR unsigned char  size(1) Largest target is 4
		 -> STR_29(CODE[4]), 

    SetDate@Thursday	PTR unsigned char  size(1) Largest target is 4
		 -> STR_28(CODE[4]), 

    SetDate@Wednesday	PTR unsigned char  size(1) Largest target is 4
		 -> STR_27(CODE[4]), 

    SetDate@Tuesday	PTR unsigned char  size(1) Largest target is 4
		 -> STR_26(CODE[4]), 

    SetDate@Monday	PTR unsigned char  size(1) Largest target is 4
		 -> STR_25(CODE[4]), 

    SetDate@DateSet	PTR unsigned char  size(1) Largest target is 13
		 -> STR_24(CODE[13]), 

    SetDate@Date	PTR unsigned char  size(1) Largest target is 6
		 -> STR_23(CODE[6]), 

    SetDate@Day	PTR unsigned char  size(1) Largest target is 5
		 -> STR_22(CODE[5]), 

    SetTime@TimeSet	PTR unsigned char  size(1) Largest target is 9
		 -> STR_21(CODE[9]), 

    SetTime@Time	PTR unsigned char  size(1) Largest target is 6
		 -> STR_20(CODE[6]), 

    DateDayScreen@day	PTR unsigned char  size(1) Largest target is 6
		 -> STR_19(CODE[6]), 

    DateDayScreen@date	PTR unsigned char  size(1) Largest target is 7
		 -> STR_18(CODE[7]), 

    SoundAlarm@Alarm	PTR unsigned char  size(1) Largest target is 16
		 -> STR_17(CODE[16]), 

    HeatingControlOff@On	PTR unsigned char  size(1) Largest target is 11
		 -> STR_16(CODE[11]), 

    HeatingControlOff@Off	PTR unsigned char  size(1) Largest target is 12
		 -> STR_15(CODE[12]), 

    SwapToHeatingDisplay@Off	PTR unsigned char  size(1) Largest target is 4
		 -> STR_14(CODE[4]), 

    SwapToHeatingDisplay@On	PTR unsigned char  size(1) Largest target is 3
		 -> STR_13(CODE[3]), 

    SwapToHeatingDisplay@Heat	PTR unsigned char  size(1) Largest target is 9
		 -> STR_12(CODE[9]), 

    ChangeTrigger@TriggerSet	PTR unsigned char  size(1) Largest target is 12
		 -> STR_11(CODE[12]), 

    ChangeTrigger@Trigger	PTR unsigned char  size(1) Largest target is 9
		 -> STR_10(CODE[9]), 

    MainScreen@Temp	PTR unsigned char  size(1) Largest target is 6
		 -> STR_9(CODE[6]), 

    MainScreen@Time	PTR unsigned char  size(1) Largest target is 6
		 -> STR_8(CODE[6]), 

    DisplayTemp@tempBuffer	PTR unsigned char  size(1) Largest target is 6
		 -> tempBuffer(BANK1[6]), 

    DisplayDay@Sunday	PTR unsigned char  size(1) Largest target is 7
		 -> STR_7(CODE[7]), 

    DisplayDay@Saturday	PTR unsigned char  size(1) Largest target is 9
		 -> STR_6(CODE[9]), 

    DisplayDay@Friday	PTR unsigned char  size(1) Largest target is 7
		 -> STR_5(CODE[7]), 

    DisplayDay@Thursday	PTR unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[9]), 

    DisplayDay@Wednesday	PTR unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[10]), 

    DisplayDay@Tuesday	PTR unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), 

    DisplayDay@Monday	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_SwapToHeatingDisplay
    _Switch24Hour->___awmod
    _SoundAlarm->_SwapToHeatingDisplay
    _HeatingControlOff->_SwapToHeatingDisplay
    _DisplayTime->_RealTimeClock_get_hours
    _DisplayTime->_RealTimeClock_get_minutes
    _DisplayTime->_RealTimeClock_get_seconds
    _Get_Temp->___lwdiv
    ___lwdiv->___lwmod
    _Write_Byte->_Delay
    _Reset->_Delay
    _Read_Byte->_Delay
    _RealTimeClock_set_seconds->___int_to_hex
    _RealTimeClock_set_minutes->___int_to_hex
    _RealTimeClock_set_hours->___int_to_hex
    _RealTimeClock_get_seconds->___hex_to_int
    _RealTimeClock_set_day_of_week->___int_to_hex
    ___int_to_hex->___awmod
    _RealTimeClock_init->_RealTimeClock_write_byte
    _DateDayScreen->_SwapToHeatingDisplay
    _SwapToHeatingDisplay->_Keypad_Scan
    _SwapToHeatingDisplay->_LCD_SendString
    _LCD_SecondLine->_LCD_Command
    _DisplayDay->_RealTimeClock_get_day_of_week
    _RealTimeClock_get_day_of_week->___hex_to_int
    _DisplayDate->_RealTimeClock_get_day_of_month
    _DisplayDate->_RealTimeClock_get_month
    _DisplayDate->_RealTimeClock_get_year
    _RealTimeClock_get_year->___hex_to_int
    _RealTimeClock_get_month->___hex_to_int
    _RealTimeClock_get_day_of_month->___hex_to_int
    _ChangeTrigger->___awdiv
    _LCD_SendString->_LCD_SendData
    _Keypad_Scan->_Key_Delay
    _CheckTime->_RealTimeClock_get_hours
    _CheckTime->_RealTimeClock_get_minutes
    _RealTimeClock_get_minutes->___hex_to_int
    _RealTimeClock_get_hours->___hex_to_int
    ___hex_to_int->___awmod

Critical Paths under _main in BANK0

    _main->_SetTime
    _SoundAlarm->_HeatingControlOff
    _HeatingControlOff->_ChangeTrigger
    _MainScreen->_DisplayTemp
    _DisplayTime->_RealTimeClock_get_hours
    _DisplayTime->_RealTimeClock_get_minutes
    _DisplayTime->_RealTimeClock_get_seconds
    _DisplayTemp->_Get_Temp
    _SetTime->_RealTimeClock_get_hours
    _SetTime->_RealTimeClock_get_minutes
    _SetTime->_RealTimeClock_get_seconds
    _RealTimeClock_get_seconds->___hex_to_int
    _SetDate->_RealTimeClock_get_day_of_week
    _DateDayScreen->_ChangeTrigger
    _DisplayDay->_RealTimeClock_get_day_of_week
    _RealTimeClock_get_day_of_week->___hex_to_int
    _DisplayDate->_RealTimeClock_get_day_of_month
    _DisplayDate->_RealTimeClock_get_month
    _DisplayDate->_RealTimeClock_get_year
    _RealTimeClock_get_year->___hex_to_int
    _RealTimeClock_get_month->___hex_to_int
    _RealTimeClock_get_day_of_month->___hex_to_int
    _CheckTime->_RealTimeClock_get_hours
    _CheckTime->_RealTimeClock_get_minutes
    _RealTimeClock_get_minutes->___hex_to_int
    _RealTimeClock_get_hours->___hex_to_int

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  339169
                                             40 BANK0     14    14      0
                        _Buzzer_Init
                      _ChangeTrigger
                           _CheckDay
                          _CheckTime
                      _DateDayScreen
                  _HeatingControlOff
                        _Init_Keypad
                        _Keypad_Scan
                        _LCD_Command
                           _LCD_Init
                         _MainScreen
                         _Main_Delay
      _RealTimeClock_get_day_of_week
                 _RealTimeClock_init
                            _SetDate
                            _SetTime
                         _SoundAlarm
                           _SoundOff
               _SwapToHeatingDisplay
                       _Switch24Hour
                   _Thermometer_Init
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Thermometer_Init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Switch24Hour                                         4     2      2    4109
                                              7 COMMON     4     2      2
                        _LCD_Command
                       _LCD_SendData
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _SoundAlarm                                          10     2      8   98342
                                             28 BANK0     10     2      8
                      _ChangeTrigger
                           _Get_Temp
                  _HeatingControlOff
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SendString
                           _SoundOff
                            _SoundOn
               _SwapToHeatingDisplay
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _SoundOn                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HeatingControlOff                                   11     3      8   67916
                                             17 BANK0     11     3      8
                      _ChangeTrigger
                           _Get_Temp
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SendString
                         _MainScreen
                         _Main_Delay
                           _SoundOff
               _SwapToHeatingDisplay
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SoundOff                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MainScreen                                           3     3      0   36725
                                              8 BANK0      3     3      0
                        _DisplayTemp
                        _DisplayTime
                     _LCD_SecondLine
                     _LCD_SendString
 ---------------------------------------------------------------------------------
 (4) _DisplayTime                                          1     1      0   21635
                                             12 COMMON     1     1      0
                     _LCD_SendString
            _RealTimeClock_get_hours
          _RealTimeClock_get_minutes
          _RealTimeClock_get_seconds
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) _DisplayTemp                                          1     1      0   12250
                                              7 BANK0      1     1      0
                           _Get_Temp
                           _LCD_Busy
                       _LCD_SendData
                     _LCD_SendString
 ---------------------------------------------------------------------------------
 (5) _Get_Temp                                             7     7      0    9379
                                              0 BANK0      7     7      0
                              _Delay
                          _Read_Byte
                              _Reset
                         _Write_Byte
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     466
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (6) _Write_Byte                                           5     5      0     637
                                              4 COMMON     5     5      0
                              _Delay
 ---------------------------------------------------------------------------------
 (6) _Reset                                                3     3      0     569
                                              4 COMMON     3     3      0
                              _Delay
 ---------------------------------------------------------------------------------
 (6) _Read_Byte                                            3     3      0     594
                                              4 COMMON     3     3      0
                              _Delay
 ---------------------------------------------------------------------------------
 (7) _Delay                                                4     3      1     523
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _SetTime                                             33    31      2   39671
                                              7 BANK0     33    31      2
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SendString
                         _Main_Delay
            _RealTimeClock_get_hours
          _RealTimeClock_get_minutes
          _RealTimeClock_get_seconds
            _RealTimeClock_set_hours
          _RealTimeClock_set_minutes
          _RealTimeClock_set_seconds
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _RealTimeClock_set_seconds                            2     0      2    4856
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (2) _RealTimeClock_set_minutes                            2     0      2    4856
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (2) _RealTimeClock_set_hours                              2     0      2    4856
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (5) _RealTimeClock_get_seconds                            4     2      2    4265
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (1) _SetDate                                             17    15      2   14348
                                              7 BANK0     17    15      2
                           _CheckDay
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SecondLine
                     _LCD_SendString
                         _Main_Delay
      _RealTimeClock_get_day_of_week
      _RealTimeClock_set_day_of_week
 ---------------------------------------------------------------------------------
 (2) _RealTimeClock_set_day_of_week                        2     0      2    4856
                                              0 BANK0      2     0      2
           _RealTimeClock_write_byte
                       ___int_to_hex
 ---------------------------------------------------------------------------------
 (3) ___int_to_hex                                         7     5      2    4667
                                              7 COMMON     7     5      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _CheckDay                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RealTimeClock_init                                   0     0      0      91
           _RealTimeClock_write_byte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Keypad                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DateDayScreen                                        5     3      2   46272
                                             17 BANK0      5     3      2
                      _ChangeTrigger
                        _DisplayDate
                         _DisplayDay
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SecondLine
                     _LCD_SendString
               _SwapToHeatingDisplay
 ---------------------------------------------------------------------------------
 (1) _SwapToHeatingDisplay                                 6     4      2    4498
                                              8 COMMON     6     4      2
                        _Keypad_Scan
                        _LCD_Command
                     _LCD_SendString
 ---------------------------------------------------------------------------------
 (4) _LCD_SecondLine                                       0     0      0      22
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _DisplayDay                                           8     8      0    7198
                                             12 COMMON     1     1      0
                                              7 BANK0      7     7      0
                     _LCD_SendString
      _RealTimeClock_get_day_of_week
 ---------------------------------------------------------------------------------
 (2) _RealTimeClock_get_day_of_week                        4     2      2    4265
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (2) _DisplayDate                                          7     7      0   19067
                                             12 COMMON     1     1      0
                                              7 BANK0      6     6      0
     _RealTimeClock_get_day_of_month
            _RealTimeClock_get_month
             _RealTimeClock_get_year
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_get_year                               4     2      2    4265
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_get_month                              4     2      2    4265
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (3) _RealTimeClock_get_day_of_month                       4     2      2    4265
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (3) _ChangeTrigger                                       17    17      0   11152
                                              0 BANK0     17    17      0
                        _Keypad_Scan
                           _LCD_Busy
                        _LCD_Command
                       _LCD_SendData
                     _LCD_SendString
                         _Main_Delay
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    2124
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _Main_Delay                                           7     5      2     548
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (2) _LCD_SendString                                       7     5      2    2772
                                              1 COMMON     7     5      2
                       _LCD_SendData
 ---------------------------------------------------------------------------------
 (2) _LCD_SendData                                         1     1      0      22
                                              0 COMMON     1     1      0
                           _LCD_Busy
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0      22
                                              0 COMMON     1     1      0
                           _LCD_Busy
 ---------------------------------------------------------------------------------
 (3) _LCD_Busy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Keypad_Scan                                          2     0      2    1308
                                              6 COMMON     2     0      2
                          _Key_Delay
 ---------------------------------------------------------------------------------
 (3) _Key_Delay                                            6     4      2    1308
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _CheckTime                                            1     1      0    8530
                                             12 COMMON     1     1      0
            _RealTimeClock_get_hours
          _RealTimeClock_get_minutes
 ---------------------------------------------------------------------------------
 (5) _RealTimeClock_get_minutes                            4     2      2    4265
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (5) _RealTimeClock_get_hours                              4     2      2    4265
                                             10 COMMON     2     2      0
                                              5 BANK0      2     0      2
            _RealTimeClock_read_byte
           _RealTimeClock_write_byte
                       ___hex_to_int
 ---------------------------------------------------------------------------------
 (6) ___hex_to_int                                         8     6      2    4059
                                              7 COMMON     3     1      2
                                              0 BANK0      5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    3944
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) _RealTimeClock_write_byte                             5     5      0      91
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _RealTimeClock_read_byte                              5     5      0      92
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Buzzer_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buzzer_Init
   _ChangeTrigger
     _Keypad_Scan
       _Key_Delay
     _LCD_Busy
     _LCD_Command
       _LCD_Busy
     _LCD_SendData
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _Main_Delay
     ___awdiv
     ___awmod
   _CheckDay
   _CheckTime
     _RealTimeClock_get_hours
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_get_minutes
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
   _DateDayScreen
     _ChangeTrigger
       _Keypad_Scan
         _Key_Delay
       _LCD_Busy
       _LCD_Command
         _LCD_Busy
       _LCD_SendData
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _Main_Delay
       ___awdiv
       ___awmod
     _DisplayDate
       _RealTimeClock_get_day_of_month
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_month
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_year
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       ___awdiv
       ___awmod
     _DisplayDay
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _RealTimeClock_get_day_of_week
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SecondLine
       _LCD_Command
         _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _SwapToHeatingDisplay
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
   _HeatingControlOff
     _ChangeTrigger
       _Keypad_Scan
         _Key_Delay
       _LCD_Busy
       _LCD_Command
         _LCD_Busy
       _LCD_SendData
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _Main_Delay
       ___awdiv
       ___awmod
     _Get_Temp
       _Delay
       _Read_Byte
         _Delay
       _Reset
         _Delay
       _Write_Byte
         _Delay
       ___awdiv
       ___awmod
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _MainScreen
       _DisplayTemp
         _Get_Temp
           _Delay
           _Read_Byte
             _Delay
           _Reset
             _Delay
           _Write_Byte
             _Delay
           ___awdiv
           ___awmod
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _LCD_Busy
         _LCD_SendData
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
       _DisplayTime
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _RealTimeClock_get_hours
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_get_minutes
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         _RealTimeClock_get_seconds
           _RealTimeClock_read_byte
           _RealTimeClock_write_byte
           ___hex_to_int
             ___awmod
         ___awdiv
         ___awmod
       _LCD_SecondLine
         _LCD_Command
           _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
     _Main_Delay
     _SoundOff
     _SwapToHeatingDisplay
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
     ___wmul
   _Init_Keypad
   _Keypad_Scan
     _Key_Delay
   _LCD_Command
     _LCD_Busy
   _LCD_Init
   _MainScreen
     _DisplayTemp
       _Get_Temp
         _Delay
         _Read_Byte
           _Delay
         _Reset
           _Delay
         _Write_Byte
           _Delay
         ___awdiv
         ___awmod
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _LCD_Busy
       _LCD_SendData
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
     _DisplayTime
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _RealTimeClock_get_hours
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_minutes
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       _RealTimeClock_get_seconds
         _RealTimeClock_read_byte
         _RealTimeClock_write_byte
         ___hex_to_int
           ___awmod
       ___awdiv
       ___awmod
     _LCD_SecondLine
       _LCD_Command
         _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
   _Main_Delay
   _RealTimeClock_get_day_of_week
     _RealTimeClock_read_byte
     _RealTimeClock_write_byte
     ___hex_to_int
       ___awmod
   _RealTimeClock_init
     _RealTimeClock_write_byte
   _SetDate
     _CheckDay
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SecondLine
       _LCD_Command
         _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _Main_Delay
     _RealTimeClock_get_day_of_week
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_set_day_of_week
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
   _SetTime
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _Main_Delay
     _RealTimeClock_get_hours
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_get_minutes
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_get_seconds
       _RealTimeClock_read_byte
       _RealTimeClock_write_byte
       ___hex_to_int
         ___awmod
     _RealTimeClock_set_hours
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
     _RealTimeClock_set_minutes
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
     _RealTimeClock_set_seconds
       _RealTimeClock_write_byte
       ___int_to_hex
         ___awmod
     ___awdiv
     ___awmod
   _SoundAlarm
     _ChangeTrigger
       _Keypad_Scan
         _Key_Delay
       _LCD_Busy
       _LCD_Command
         _LCD_Busy
       _LCD_SendData
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _Main_Delay
       ___awdiv
       ___awmod
     _Get_Temp
       _Delay
       _Read_Byte
         _Delay
       _Reset
         _Delay
       _Write_Byte
         _Delay
       ___awdiv
       ___awmod
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _HeatingControlOff
       _ChangeTrigger
         _Keypad_Scan
           _Key_Delay
         _LCD_Busy
         _LCD_Command
           _LCD_Busy
         _LCD_SendData
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
         _Main_Delay
         ___awdiv
         ___awmod
       _Get_Temp
         _Delay
         _Read_Byte
           _Delay
         _Reset
           _Delay
         _Write_Byte
           _Delay
         ___awdiv
         ___awmod
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
       _MainScreen
         _DisplayTemp
           _Get_Temp
             _Delay
             _Read_Byte
               _Delay
             _Reset
               _Delay
             _Write_Byte
               _Delay
             ___awdiv
             ___awmod
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _LCD_Busy
           _LCD_SendData
             _LCD_Busy
           _LCD_SendString
             _LCD_SendData
               _LCD_Busy
         _DisplayTime
           _LCD_SendString
             _LCD_SendData
               _LCD_Busy
           _RealTimeClock_get_hours
             _RealTimeClock_read_byte
             _RealTimeClock_write_byte
             ___hex_to_int
               ___awmod
           _RealTimeClock_get_minutes
             _RealTimeClock_read_byte
             _RealTimeClock_write_byte
             ___hex_to_int
               ___awmod
           _RealTimeClock_get_seconds
             _RealTimeClock_read_byte
             _RealTimeClock_write_byte
             ___hex_to_int
               ___awmod
           ___awdiv
           ___awmod
         _LCD_SecondLine
           _LCD_Command
             _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
       _Main_Delay
       _SoundOff
       _SwapToHeatingDisplay
         _Keypad_Scan
           _Key_Delay
         _LCD_Command
           _LCD_Busy
         _LCD_SendString
           _LCD_SendData
             _LCD_Busy
       ___wmul
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
     _SoundOff
     _SoundOn
     _SwapToHeatingDisplay
       _Keypad_Scan
         _Key_Delay
       _LCD_Command
         _LCD_Busy
       _LCD_SendString
         _LCD_SendData
           _LCD_Busy
     ___wmul
   _SoundOff
   _SwapToHeatingDisplay
     _Keypad_Scan
       _Key_Delay
     _LCD_Command
       _LCD_Busy
     _LCD_SendString
       _LCD_SendData
         _LCD_Busy
   _Switch24Hour
     _LCD_Command
       _LCD_Busy
     _LCD_SendData
       _LCD_Busy
     ___awmod
   _Thermometer_Init
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      1E       9       31.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     36      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CC      12        0.0%
ABS                  0      0      CC       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Jan 08 15:27:09 2019

        ??_RealTimeClock_get_day_of_week 007A          ?_RealTimeClock_get_day_of_month 0025  
       ??_RealTimeClock_get_day_of_month 007A                                        pc 0002  
                           ?_LCD_Command 0070                                       l95 1291  
                                     l96 1266                                       l97 1277  
                                     l98 128B                                       l99 12A0  
                ?_RealTimeClock_get_year 0025                             ___awdiv@sign 0076  
                                     fsr 0004                      ___wmul@multiplicand 0072  
                             Key_Delay@i 0072                               Key_Delay@j 0074  
                             Key_Delay@k 0070                             _Switch24Hour 11B7  
                                    l100 12A0                                      l110 083B  
                                    l111 08BB                                      l103 09A1  
                                    l112 0848                                      l200 05B1  
                                    l113 0856                                      l201 061F  
                                    l121 1129                                      l130 0C58  
                                    l106 00E4                                      l114 0864  
                                    l210 0658                                      l202 05F7  
                                    l131 0BD7                                      l115 0872  
                                    l211 065A                                      l203 05D9  
                                    l140 0C56                                      l132 0BE4  
                                    l116 0880                                      l220 06DB  
                                    l212 06A3                                      l204 05F6  
                                    l124 11B6                                      l141 0CDF  
                                    l133 0BE7                                      l109 089D  
                                    l117 088E                                      l221 07B7  
                                    l213 069F                                      l205 061E  
                                    l134 0C6D                                      l142 0CE0  
                                    l118 08BB                                      l150 16AA  
                                    l230 12B3                                      l214 0681  
                                    l206 05FF                                      l222 07B8  
                                    l135 0BE8                                      l127 0B8A  
                                    l151 16AC                                      l231 12B8  
                                    l215 069E                                      l207 061D  
                                    l136 0C01                                      l128 0BD6  
                                    l152 16AD                                      l232 12BD  
                                    l240 0DC7                                      l216 06A2  
                                    l208 0659                                      l160 0B72  
                                    l129 0CE0                                      l137 0C1F  
                                    l145 164E                                      l225 12C3  
                                    l233 12C0                                      l321 1353  
                                    l241 0D8A                                      l217 06A1  
                                    l209 063B                                      l161 0B73  
                                    l330 1209                                      l314 14FC  
                                    l138 0C20                                      l146 1665  
                                    l234 12E1                                      l226 12A2  
                                    l322 1328                                      l242 0DD9  
                                    l250 0DC4                                      l218 06DC  
                                    l170 17FE                                      l331 1227  
                                    l315 14CB                                      l139 0C38  
                                    l147 16AD                                      l227 12E1  
                                    l323 134D                                      l251 0E4F  
                                    l243 0D8B                                      l219 06BE  
                                    l155 0AC8                                      l171 17FF  
                                    l316 14F4                                      l420 1183  
                                    l148 1690                                      l228 12A9  
                                    l324 1362                                      l260 0E6E  
                                    l252 0DEC                                      l244 0DA8  
                                    l156 0AEB                                      l164 173E  
                                    l317 150A                                      l149 16AB  
                                    l181 16BE                                      l229 12AE  
                                    l325 1364                                      l253 0E6D  
                                    l245 0D9E                                      l261 0E6F  
                                    l237 0D1F                                      l157 0AFD  
                                    l165 17A1                                      l334 1446  
                                    l318 1511                                      l270 0A20  
                                    l430 0106                                      l510 1E7E  
                                    l182 1707                                      l350 1103  
                                    l254 0DFA                                      l246 0DA7  
                                    l238 0D89                                      l190 0518  
                                    l158 0B71                                      l166 17B4  
                                    l174 11D0                                      l335 146F  
                                    l271 0A27                                      l415 1178  
                                    l431 0121                                      l511 1E85  
                                    l183 1717                                      l423 1E32  
                                    l239 0E6F                                      l255 0E08  
                                    l247 0DA9                                      l159 0B73  
                                    l167 17CF                                      l175 11EA  
                                    l336 145B                                      l328 11FF  
                                    l264 0A31                                      l272 0A2F  
                                    l416 1155                                      l440 0150  
                                    l432 011A                                      l512 1E88  
                                    l184 172C                                      l256 0E16  
                                    l248 0DC5                                      l168 17FF  
                                    l176 11EC                                      l337 1477  
                                    l329 1224                                      l273 0A89  
                                    l265 09F3                                      l417 1162  
                                    l441 014A                                      l433 0114  
                                    l521 1E1C                                      l185 172A  
                                    l257 0E24                                      l249 0DBB  
                                    l353 1FFF                                      l193 059C  
                                    l169 17FD                                      l177 11EB  
                                    l274 0A88                                      l266 09EB  
                                    l418 1172                                      l450 0191  
                                    l442 0157                                      l434 0121  
                                    l426 0106                                      l530 13A8  
                                    l362 1F77                                      l186 172B  
                                    l258 0E32                                      l194 07B8  
                                    l610 0ECF                                      l178 11EC  
                                    l290 0454                                      l275 0A66  
                                    l267 09F2                                      l419 1183  
                                    l451 01AC                                      l443 0176  
                                    l435 013C                                      l427 00FF  
                                    l371 1FBB                                      l187 172C  
                                    l515 1E23                                      l259 0E40  
                                    l195 06DE                                      l611 0EF2  
                                    l291 047E                                      l356 1F55  
                                    l276 0A87                                      l268 0A30  
                                    l460 01DF                                      l452 01A5  
                                    l444 016F                                      l436 0135  
                                    l428 00F9                                      l524 1E50  
                                    l380 1ED7                                      l196 059D  
                                    l604 13B5                                      l612 0F69  
                                    l540 1E15                                      l292 04CE  
                                    l284 031D                                      l277 0A7F  
                                    l269 0A28                                      l461 01D9  
                                    l453 019F                                      l445 0169  
                                    l437 012F                                      l429 02AB  
                                    l509 1E80                                      l365 1F99  
                                    l197 05A9                                      l605 13EA  
                                    l613 0FA4                                      l293 04D4  
                                    l285 03F5                                      l278 0A86  
                                    l470 021C                                      l462 01E6  
                                    l454 01AC                                      l446 0176  
                                    l438 013C                                      l518 1E41  
                                    l374 1F11                                      l198 05B0  
                                    l606 13D8                                      l614 0FB1  
                                    l702 112D                                      l294 04D5  
                                    l286 0408                                      l359 1F33  
                                    l279 0A89                                      l471 0237  
                                    l463 0201                                      l455 01C7  
                                    l447 0191                                      l439 0157  
                                    l527 138B                                      l199 06F0  
                                    l607 13EC                                      l615 0FBE  
                                    l543 1E11                                      l703 1137  
                                    l295 04D5                                      l287 041B  
                                    l480 026A                                      l472 0230  
                                    l464 01FA                                      l456 01C0  
                                    l448 018A                                      l528 1368  
                                    l368 1FDD                                      l616 0FCB  
                                    l704 114C                                      l288 042E  
                                    l537 1E0D                                      l481 0264  
                                    l473 022A                                      l465 01F4  
                                    l457 01BA                                      l449 0184  
                                    l529 13A8                                      l377 1EF4  
                                    l617 0FFF                                      l705 1151  
                                    l289 0441                                      l490 02A7  
                                    l482 0271                                      l474 0237  
                                    l466 0201                                      l458 01C7  
                                    l483 028C                                      l475 0256  
                                    l467 021C                                      l459 01E6  
                                    l484 0285                                      l476 024F  
                                    l468 0215                                      l580 1E8A  
                                    l485 027F                                      l477 0249  
                                    l469 020F                                      l389 1EBA  
                                    l581 1E8F                                      l486 028C  
                                    l478 0256                                      l582 1E96  
                                    l590 1523                                      l487 02A8  
                                    l479 0271                                      l583 1E9D  
                                    l591 1566                                      l488 02A0  
                                    l584 1E9D                                      l592 1548  
                                    l489 029A                                      l593 1566  
                                    l850 15F0                                      l851 1601  
                                    l587 1E2A                                      l860 157E  
                                    l852 1602                                      l596 13F9  
                                    l861 15B9                                      l853 161B  
                                    l597 1430                                      l862 1593  
                                    l854 1629                                      l846 15D7  
                                    l598 1412                                      l863 1587  
                                    l855 1635                                      l847 15E5  
                                    l599 1430                                      l864 1598  
                                    l856 163A                                      l848 162A  
                                    l865 1599                                      l849 15FC  
                                    l866 15AA                                      l970 1483  
                                    l867 15B8                                      l859 1574  
                                    l971 1494                                      l868 15C4  
                                    l972 1495                                      l980 12EB  
                                    l869 15C9                                      l973 14AE  
                                    l981 12FC                                      l974 14BC  
                                    l982 12FD                                      l975 14C2  
                                    l983 130E                                      l968 14BD  
                                    l984 131C                                      l969 148F  
                                    l985 1322                                      l978 131D  
                                    l979 12F7                                      _RA0 0028  
                                    _RA1 0029                                      _RB0 0030  
                                    _RA2 002A                                      _RA3 002B  
                                    _RB1 0031                                      _RC0 0038  
                                    _RC1 0039                                      _RB4 0034  
                                    _RC2 003A                                      _RB5 0035  
                                    _RC3 003B                                      _RC4 003C  
                                    _RC5 003D                                      _RC6 003E  
                                    _RC7 003F                                      _RD7 0047  
                                    _THB 0069                 ?_RealTimeClock_get_hours 0025  
                                    _TLB 006A                 ?_RealTimeClock_get_month 0025  
                            _triggerTemp 006C                    __size_of___int_to_hex 0042  
                                    fsr0 0004                                      indf 0000  
                           ___awmod@sign 0076                             __CFG_FOSC$HS 0000  
                         _LCD_SecondLine 1E16                             ___hex_to_int 14C3  
                          ?_LCD_SendData 0070                             __CFG_LVP$OFF 0000  
                         _LCD_SendString 1365                                     l3000 13E4  
                                   l3010 15CF                                     l3002 13EA  
                                   l3020 15E5                                     l3012 15D4  
                                   l3100 1FE1                                     l3004 13EC  
                                   l3110 1F37                                     l3030 15FC  
                                   l3022 15E7                                     l3014 15D7  
                                   l3006 15CA                                     l3102 1FEF  
                                   l3120 1F15                                     l3112 1F45  
                                   l3040 1622                                     l3032 1602  
                                   l3024 15ED                                     l3016 15DB  
                                   l3008 15CB                                     l4000 0E08  
                                   l3104 1FF2                                     l3200 0FB5  
                                   l3122 1F23                                     l3114 1F48  
                                   l3130 1368                                     l3034 1613  
                                   l3026 15F0                                     l3042 162A  
                                   l3018 15E0                                     l4010 0E4E  
                                   l4002 0E16                                     l3106 1FFF  
                                   l3050 1478                                     l3210 0FFE  
                                   l3202 0FBE                                     l3124 1F26  
                                   l3116 1F55                                     l3108 1F34  
                                   l3220 1152                                     l3300 014A  
                                   l3212 1E34                                     l3132 1384  
                                   l3044 162F                                     l3036 1619  
                                   l3028 15F7                                     l4004 0E24  
                                   l4012 0E4F                                     l3060 148F  
                                   l3052 147A                                     l3204 0FC2  
                                   l3140 0E7B                                     l4100 02C5  
                                   l3126 1F33                                     l3118 1F12  
                                   l4030 09E6                                     l4022 09A2  
                                   l3230 1172                                     l3222 1155  
                                   l3310 017A                                     l3302 014F  
                                   l3214 1E39                                     l3134 138B  
                                   l3046 1635                                     l3038 161B  
                                   l4006 0E32                                     l3070 14B5  
                                   l3062 1495                                     l3054 1480  
                                   l3206 0FCB                                     l3150 0EA6  
                                   l3142 0E81                                     l4110 02DB  
                                   l4102 02C9                                     l4040 0A20  
                                   l4032 09EB                                     l4024 09AA  
                                   l3224 1157                                     l3320 01A4  
                                   l3312 0184                                     l3304 015F  
                                   l3216 1E3B                                     l3128 1365  
                                   l3240 1277                                     l3232 1263  
                                   l3048 163A                                     l3400 1F9A  
                                   l4008 0E40                                     l3064 14A6  
                                   l3056 1483                                     l3072 14BD  
                                   l3080 12EB                                     l3208 0FDE  
                                   l3160 0ECF                                     l3152 0EB1  
                                   l3144 0E87                                     l3136 0E73  
                                   l4200 04CE                                     l4120 02F8  
                                   l4112 02E1                                     l4104 02CD  
                                   l4050 0A61                                     l4042 0A28  
                                   l4034 09F3                                     l4026 09C0  
                                   l3226 1161                                     l3330 01D9  
                                   l3322 01B0                                     l3314 0189  
                                   l3306 0169                                     l3218 1E3C  
                                   l3242 127D                                     l3234 1266  
                                   l3402 1F9D                                     l3410 1FBC  
                                   l3074 14C2                                     l3066 14AC  
                                   l3058 148A                                     l3090 130E  
                                   l3082 12F2                                     l3170 0F03  
                                   l3162 0EDE                                     l3154 0EBC  
                                   l3146 0E93                                     l3138 0E76  
                                   l3250 08F1                                     l4130 032E  
                                   l4122 0309                                     l4114 02E7  
                                   l4106 02D1                                     l4052 0A66  
                                   l4036 0A07                                     l4028 09D2  
                                   l4044 0A31                                     l3228 1162  
                                   l3340 0205                                     l3332 01DE  
                                   l3324 01BA                                     l3316 0195  
                                   l3308 016E                                     l3244 128B  
                                   l3236 1268                                     l3500 0CBB  
                                   l3404 1FAB                                     l3412 1FBF  
                                   l4060 1E21                                     l3068 14AE  
                                   l3092 1315                                     l3084 12F7  
                                   l3076 12E2                                     l3180 0F26  
                                   l3172 0F09                                     l3164 0EE4  
                                   l3156 0EC0                                     l3148 0E9E  
                                   l3260 0959                                     l3252 0906  
                                   l3420 1184                                     l4140 036B  
                                   l4132 0334                                     l4124 030E  
                                   l4116 02ED                                     l4108 02D7  
                                   l4054 0A7A                                     l4046 0A39  
                                   l4038 0A1B                                     l3350 022F  
                                   l3342 020F                                     l3334 01EA  
                                   l3326 01BF                                     l3318 019F  
                                   l3238 1276                                     l3510 0CD8  
                                   l3502 0CC0                                     l3406 1FAE  
                                   l3414 1FCD                                     l4062 1E2B  
                                   l3086 12FD                                     l3078 12E8  
                                   l3094 131D                                     l3190 0F97  
                                   l3182 0F40                                     l3174 0F0F  
                                   l3158 0ECE                                     l3166 0EF2  
                                   l3270 1118                                     l3262 096F  
                                   l3254 091A                                     l3246 08BC  
                                   l3430 11B0                                     l3422 118E  
                                   l4070 1E29                                     l4150 03A0  
                                   l4142 0374                                     l4134 033F  
                                   l4126 0313                                     l4118 02F3  
                                   l2800 156C                                     l4056 0A7F  
                                   l4048 0A4F                                     l3360 0264  
                                   l3352 023F                                     l3344 0214  
                                   l3336 01F4                                     l3328 01CF  
                                   l3280 00EF                                     l3504 0CC6  
                                   l3440 0B8A                                     l3432 0B77  
                                   l3408 1FBB                                     l3416 1FD0  
                                   l3600 0822                                     l3520 1645  
                                   l4064 1E2E                                     l4080 10EF  
                                   l4072 10E6                                     l3096 1322  
                                   l3088 1307                                     l3192 0F9B  
                                   l3184 0F4D                                     l3176 0F19  
                                   l3168 0EFE                                     l3272 111E  
                                   l3264 0984                                     l3256 0930  
                                   l3248 08DD                                     l3424 1199  
                                   l4160 03E8                                     l4152 03A5  
                                   l4144 037F                                     l4136 034A  
                                   l4128 031D                                     l2810 1584  
                                   l2802 1571                                     l3370 0290  
                                   l3362 0269                                     l3354 0249  
                                   l3346 0220                                     l3338 01F9  
                                   l3290 0119                                     l3282 00F9  
                                   l3506 0CCB                                     l3450 0BB9  
                                   l3442 0B90                                     l3434 0B7D  
                                   l3418 1FDD                                     l3610 0836  
                                   l3602 0826                                     l3530 1665  
                                   l3522 1649                                     l4058 1E1D  
                                   l4090 1100                                     l4082 10F0  
                                   l4074 10E9                                     l3098 1FDE  
                                   l3194 0FA4                                     l3186 0F53  
                                   l3178 0F23                                     l3274 1123  
                                   l3266 0998                                     l3258 0945  
                                   l3426 119E                                     l4066 1E24  
                                   l4170 0411                                     l4162 03EE  
                                   l4154 03B0                                     l4146 0389  
                                   l4138 0361                                     l4092 1E0A  
                                   l2820 15A3                                     l2812 1587  
                                   l2804 1574                                     l3372 029A  
                                   l3364 0275                                     l3356 024E  
                                   l3348 022A                                     l3292 0125  
                                   l3284 00FE                                     l3508 0CD3  
                                   l3460 0BE4                                     l3452 0BC6  
                                   l3444 0B9D                                     l3436 0B81  
                                   l3380 1F78                                     l3620 0872  
                                   l3612 083B                                     l3604 082A  
                                   l3276 1E16                                     l3540 1690  
                                   l3532 166B                                     l3524 164E  
                                   l3516 163B                                     l4084 10F3  
                                   l4076 10ED                                     l3700 1F0E  
                                   l2900 1533                                     l3196 0FA8  
                                   l3188 0F95                                     l3268 1107  
                                   l3428 11A3                                     l4068 1E28  
                                   l4180 0441                                     l4172 041B  
                                   l4164 03F5                                     l4156 03D2  
                                   l4148 0395                                     l2830 15C4  
                                   l2822 15AA                                     l2814 158E  
                                   l2806 1578                                     l3374 029F  
                                   l3366 027F                                     l3358 025A  
                                   l3294 012F                                     l3286 010A  
                                   l3278 00E5                                     l3470 0C01  
                                   l3462 0BE8                                     l3454 0BCF  
                                   l3446 0BA8                                     l3438 0B85  
                                   l3390 1F56                                     l3382 1F7B  
                                   l3622 0880                                     l3614 0848  
                                   l3606 082E                                     l3542 1698  
                                   l3534 1676                                     l3526 1657  
                                   l3518 163F                                     l4086 10F4  
                                   l4078 10EE                                     l3710 12B3  
                                   l3702 12A1                                     l3550 1328  
                                   l2910 1558                                     l2902 1540  
                                   l3198 0FB1                                     l4190 047E  
                                   l4182 044A                                     l4174 0424  
                                   l4166 03FE                                     l4158 03DD  
                                   l4094 02AC                                     l2832 15C9  
                                   l2824 15B1                                     l2816 1593  
                                   l2808 157E                                     l3376 02A8  
                                   l3368 0284                                     l3296 0134  
                                   l3288 0114                                     l2840 1E4B  
                                   l3480 0C38                                     l3472 0C20  
                                   l3464 0BEE                                     l3456 0BD7  
                                   l3448 0BAD                                     l3392 1F59  
                                   l3384 1F89                                     l3624 088E  
                                   l3616 0856                                     l3608 0832  
                                   l3544 169E                                     l3536 167E  
                                   l3528 165E                                     l3800 1710  
                                   l4088 10FA                                     l3712 12B8  
                                   l3704 12A2                                     l3560 1364  
                                   l3552 132E                                     l2904 1547  
                                   l2920 13FE                                     l2912 13EE  
                                   l3640 0A9B                                     l4192 048E  
                                   l4184 0454                                     l4176 042E  
                                   l4168 0408                                     l4096 02BB  
                                   l2818 1599                                     l2826 15B9  
                                   l2850 14EC                                     l2842 14C6  
                                   l3378 02AB                                     l3298 0140  
                                   l2834 1E43                                     l3490 0C85  
                                   l3482 0C57                                     l3474 0C26  
                                   l3466 0BF4                                     l3458 0BDF  
                                   l3394 1F67                                     l3386 1F8C  
                                   l3626 089C                                     l3618 0864  
                                   l3538 1684                                     l3802 1717  
                                   l3714 12BD                                     l3706 12A9  
                                   l3554 1334                                     l4370 06E5  
                                   l3810 04E2                                     l2906 1548  
                                   l2930 1407                                     l2922 1401  
                                   l2914 13F2                                     l3546 1E0E  
                                   l3570 1145                                     l3562 112A  
                                   l3650 0ACE                                     l3642 0AAB  
                                   l3634 0A8A                                     l3730 172D  
                                   l4194 04A6                                     l4186 0464  
                                   l4178 0437                                     l4098 02C0  
                                   l2860 11FE                                     l2828 15BE  
                                   l2852 150A                                     l2844 14CB  
                                   l2780 1E74                                     l2836 1E48  
                                   l3492 0C98                                     l4380 0C62  
                                   l3476 0C2D                                     l3468 0BF8  
                                   l3484 0C58                                     l3396 1F6A  
                                   l3388 1F99                                     l3580 003D  
                                   l3628 089D                                     l3804 1720  
                                   l3716 12C0                                     l3708 12AE  
                                   l3556 1347                                     l3548 1323  
                                   l3724 1E9E                                     l4372 0DCE  
                                   l3900 06FC                                     l3820 050B  
                                   l3812 04E6                                     l2908 1552  
                                   l2940 141C                                     l2932 1408  
                                   l2924 1404                                     l2916 13F8  
                                   l3572 114C                                     l3564 112D  
                                   l3660 0AF4                                     l3652 0AD3  
                                   l3644 0AB8                                     l3636 0A90  
                                   l3740 1751                                     l3732 1733  
                                   l4196 04AE                                     l4188 0468  
                                   l2870 1217                                     l2862 1207  
                                   l2854 1511                                     l2846 14D3  
                                   l2782 1E78                                     l2838 1E4A  
                                   l3494 0CAC                                     l3478 0C2F  
                                   l3486 0C6D                                     l3398 1F77  
                                   l3590 00A5                                     l3582 0052  
                                   l3718 12C3                                     l3558 1362  
                                   l3726 1EA1                                     l4374 0E56  
                                   l3910 075E                                     l3902 0710  
                                   l3830 0535                                     l3822 050F  
                                   l3814 04EA                                     l3806 04D8  
                                   l2790 1E8A                                     l2950 142A  
                                   l2942 141F                                     l2934 1409  
                                   l2926 1405                                     l2918 13F9  
                                   l3574 1151                                     l3566 1131  
                                   l3670 0B3E                                     l3662 0B03  
                                   l3654 0ADE                                     l3646 0AC1  
                                   l3638 0A95                                     l3750 1789  
                                   l3742 1756                                     l3734 1737  
                                   l4198 04B6                                     l2880 144D  
                                   l2872 1431                                     l2864 1209  
                                   l2856 11EE                                     l2848 14D9  
                                   l2784 1E7B                                     l3496 0CAD  
                                   l3488 0C71                                     l3592 00BB  
                                   l3584 0066                                     l3576 0008  
                                   l4376 12CA                                     l3728 1EB7  
                                   l3912 0772                                     l3904 0723  
                                   l3840 0579                                     l3832 0542  
                                   l3824 0513                                     l3816 04F5  
                                   l3808 04DE                                     l2792 1E8F  
                                   l2960 13B5                                     l2952 13A9  
                                   l2944 1420                                     l2936 140E  
                                   l2928 1406                                     l3568 113E  
                                   l3680 0B6C                                     l3672 0B4A  
                                   l3664 0B0E                                     l3656 0AE4  
                                   l3648 0AC8                                     l3760 17B4  
                                   l3752 1794                                     l3744 175C  
                                   l3736 173E                                     l2890 1477  
                                   l2882 145B                                     l2874 1432  
                                   l2866 1210                                     l2858 11F0  
                                   l2786 1E7C                                     l3498 0CB2  
                                   l3594 00D0                                     l3586 007C  
                                   l3578 0029                                     l4378 08A4  
                                   l3930 0CEF                                     l3690 1ED8  
                                   l3914 0786                                     l3906 0737  
                                   l3850 05A6                                     l3842 057F  
                                   l3834 054D                                     l3826 0518  
                                   l3818 0500                                     l2794 1E96  
                                   l2970 13BF                                     l2962 13B7  
                                   l2954 13AA                                     l2946 1421  
                                   l2938 1412                                     l3674 0B57  
                                   l3666 0B19                                     l3658 0AEB  
                                   l3682 1E12                                     l3770 17E5  
                                   l3762 17BD                                     l3754 179A  
                                   l3746 1767                                     l3738 1744  
                                   l2884 145C                                     l2876 1437  
                                   l2868 1211                                     l2796 1567  
                                   l2788 1E85                                     l3588 0091  
                                   l3596 080B                                     l3780 16B4  
                                   l3940 0D03                                     l3932 0CF3  
                                   l3924 0CE1                                     l3684 1EBB  
                                   l3692 1EDB                                     l3916 0799  
                                   l3908 074B                                     l3860 05CE  
                                   l3852 05A9                                     l3844 058C  
                                   l3836 0554                                     l3828 052F  
                                   l2980 13C6                                     l2972 13C0  
                                   l2964 13BA                                     l2956 13AE  
                                   l2892 1512                                     l2948 1428  
                                   l3676 0B60                                     l3668 0B30  
                                   l3764 17C3                                     l3756 17A1  
                                   l3748 1772                                     l3772 11B7  
                                   l2886 1462                                     l2878 1445  
                                   l2798 1568                                     l3598 081C  
                                   l3790 16E6                                     l3782 16BA  
                                   l3950 0D1F                                     l3942 0D07  
                                   l3934 0CF7                                     l3926 0CE7  
                                   l3686 1EBE                                     l3694 1EF1  
                                   l3918 07AD                                     l3862 05D9  
                                   l3870 061F                                     l3854 05B1  
                                   l3846 0595                                     l3838 0573  
                                   l2990 13CB                                     l2982 13C7  
                                   l2974 13C1                                     l2966 13BD  
                                   l2958 13B4                                     l2894 1514  
                                   l3678 0B66                                     l3766 17CF  
                                   l3758 17AA                                     l3774 11DC  
                                   l2888 1475                                     l3792 16F3  
                                   l3784 16CF                                     l3960 0D50  
                                   l3952 0D25                                     l3944 0D0B  
                                   l3936 0CFB                                     l3928 0CEB  
                                   l3688 1ED4                                     l3696 1EF5  
                                   l3880 0666                                     l3872 0630  
                                   l3864 05F7                                     l3856 05B7  
                                   l3848 059D                                     l2992 13D1  
                                   l2984 13C8                                     l2976 13C2  
                                   l2968 13BE                                     l2896 1522  
                                   l3768 17DF                                     l3776 11E3  
                                   l3794 16F8                                     l3786 16DC  
                                   l3778 16AE                                     l3970 0D82  
                                   l3962 0D55                                     l3954 0D32  
                                   l3946 0D0F                                     l3938 0CFF  
                                   l3698 1EF8                                     l3890 06B5  
                                   l3882 0678                                     l3874 063B  
                                   l3866 05FE                                     l3858 05BD  
                                   l2994 13D6                                     l2986 13C9  
                                   l2978 13C3                                     l2898 1529  
                                   l3796 1700                                     l3788 16E1  
                                   l3980 0DA9                                     l3972 0D8B  
                                   l3964 0D61                                     l3956 0D3D  
                                   l3948 0D13                                     l3892 06BE  
                                   l3884 0681                                     l3876 065A  
                                   l3868 05FF                                     l2996 13D8  
                                   l2988 13CA                                     l3798 1707  
                                   l3982 0DAF                                     l3974 0D93  
                                   l3966 0D6C                                     l3958 0D44  
                                   l3990 0DC7                                     l3894 06DD  
                                   l3886 06A0                                     l3878 0660  
                                   l2998 13E2                                     l3984 0DB6  
                                   l3976 0D99                                     l3992 0DD9  
                                   l3968 0D79                                     l3888 06A3  
                                   l3896 06DE                                     l3994 0DDE  
                                   l3986 0DBB                                     l3978 0D9E  
                                   l3898 06F0                                     l3996 0DEC  
                                   l3988 0DC6                                     l3998 0DFA  
                                   STR_1 109D                                     STR_2 1087  
                                   STR_3 1050                                     STR_4 107E  
                                   STR_5 1096                                     STR_6 1075  
                                   STR_7 10A4                                     STR_8 10B1  
                                   STR_9 10BD                                     u2000 142F  
                                   u2001 142E                                     u2010 13B3  
                                   u2011 13B2                                     u2100 1613  
                                   u2020 13D6                                     u2101 1612  
                                   u2021 13D5                                     u2030 13E9  
                                   u2031 13E8                                     u2120 1628  
                                   u2040 15CF                                     u2200 14BB  
                                   u3000 17DF                                     u2121 1627  
                                   u2105 160F                                     u2041 15CE  
                                   u2201 14BA                                     u3001 17DE  
                                   u2130 162F                                     u2050 15DB  
                                   u2210 12E8                                     u3010 11E3  
                                   u2131 162E                                     u2115 161C  
                                   u2051 15DA                                     u2211 12E7  
                                   u3011 11E2                                     u2060 15ED  
                                   u3020 1700                                     u3100 05CE  
                                   u2140 1480                                     u2300 0ECD  
                                   u2061 15EC                                     u3021 16FF  
                                   u3101 05CD                                     u2141 147F  
                                   u2301 0ECC                                     u3005 17DB  
                                   u3030 1710                                     u3110 05FD  
                                   u2230 12FB                                     u2310 0EF1  
                                   u3031 170F                                     u3111 05FC  
                                   u2231 12FA                                     u2311 0EF0  
                                   u2400 1160                                     u2080 1600  
                                   u3040 1720                                     u3200 0DAF  
                                   u3120 0630                                     u2160 1493  
                                   u2240 1307                                     u2401 115F  
                                   u2081 15FF                                     u3041 171F  
                                   u3201 0DAE                                     u3121 062F  
                                   u2161 1492                                     u2241 1306  
                                   u2225 12EC                                     u2305 0EC9  
                                   u2410 1171                                     u3210 0DB6  
                                   u3130 0660                                     u3050 0522  
                                   u2411 1170                                     u2075 15F1  
                                   u3211 0DB5                                     u3131 065F  
                                   u2155 1484                                     u2315 0EED  
                                   u3220 09AA                                     u2420 1182  
                                   u2500 0125                                     u3140 0666  
                                   u3060 0554                                     u2180 14A6  
                                   u2260 131B                                     u3300 03EE  
                                   u3221 09A9                                     u2421 1181  
                                   u2501 0124                                     u3141 0665  
                                   u3061 0553                                     u2181 14A5  
                                   u2261 131A                                     u2245 1303  
                                   u2325 0F2B                                     u3301 03ED  
                                   u3230 09D2                                     u2510 013B  
                                   u2270 1372                                     u2430 1275  
                                   u3150 0678                                     u3070 05A6  
                                   u2350 0F53                                     u3310 03FE  
                                   u3231 09D1                                     u2511 013A  
                                   u2431 1274                                     u2095 1603  
                                   u3151 0677                                     u3071 05A5  
                                   u2175 1496                                     u2255 130F  
                                   u2351 0F52                                     u2335 0F36  
                                   u3311 03FD                                     u1800 1597  
                                   u3240 09E6                                     u2600 01B0  
                                   u2520 0140                                     u2280 1395  
                                   u2440 128A                                     u3160 06B5  
                                   u3080 05B7                                     u2360 0F9B  
                                   u3400 04B6                                     u3320 0411  
                                   u1801 1596                                     u3241 09E5  
                                   u2425 117E                                     u2601 01AF  
                                   u2521 013F                                     u2441 1289  
                                   u3161 06B4                                     u3081 05B6  
                                   u2185 14A2                                     u2361 0F9A  
                                   u2345 0F43                                     u3401 04B5  
                                   u3321 0410                                     u1810 15A3  
                                   u3250 0A07                                     u2610 01C6  
                                   u2530 0156                                     u1730 1E84  
                                   u2290 13A7                                     u2450 129F  
                                   u3170 0D44                                     u3090 05BD  
                                   u2370 0FA8                                     u3330 0424  
                                   u1811 15A2                                     u3251 0A06  
                                   u3235 09CE                                     u2611 01C5  
                                   u2531 0155                                     u1731 1E83  
                                   u2291 13A6                                     u2451 129E  
                                   u2435 1271                                     u3171 0D43  
                                   u3091 05BC                                     u2195 14AF  
                                   u2371 0FA7                                     u3331 0423  
                                   u1900 1224                                     u3260 0A1B  
                                   u2700 023F                                     u2620 01CF  
                                   u2540 015F                                     u2460 00EF  
                                   u3180 0D93                                     u1740 1E95  
                                   u2380 0FB5                                     u3340 0437  
                                   u1901 1223                                     u3261 0A1A  
                                   u3245 09E2                                     u2701 023E  
                                   u2621 01CE                                     u2541 015E  
                                   u2461 00EE                                     u2445 1286  
                                   u3181 0D92                                     u1741 1E94  
                                   u2381 0FB4                                     u3341 0436  
                                   u1910 1444                                     u1830 15B7  
                                   u3270 0A39                                     u2710 0255  
                                   u2630 01E5                                     u2550 0175  
                                   u2470 0105                                     u3190 0D99  
                                   u1750 1E9C                                     u2390 0FC2  
                                   u3350 044A                                     u1911 1443  
                                   u1831 15B6                                     u1815 159F  
                                   u3271 0A38                                     u3255 0A03  
                                   u2711 0254                                     u2631 01E4  
                                   u2551 0174                                     u2471 0104  
                                   u2455 129B                                     u3191 0D98  
                                   u1751 1E9B                                     u2391 0FC1  
                                   u3351 0449                                     u1920 144D  
                                   u1840 15BE                                     u1760 156C  
                                   u3280 0A61                                     u2720 025A  
                                   u2640 01EA                                     u2560 017A  
                                   u2480 010A                                     u2800 0BEE  
                                   u3360 0464                                     u1921 144C  
                                   u1905 1220                                     u1841 15BD  
                                   u1825 15AB                                     u1761 156B  
                                   u3281 0A60                                     u3265 0A17  
                                   u2721 0259                                     u2641 01E9  
                                   u2561 0179                                     u2481 0109  
                                   u2801 0BED                                     u3361 0463  
                                   u1770 1578                                     u1850 14D9  
                                   u3290 0A7A                                     u2730 0270  
                                   u2650 0200                                     u2570 0190  
                                   u2490 0120                                     u2810 0BF4  
                                   u3370 048E                                     u1915 1440  
                                   u1771 1577                                     u1851 14D8  
                                   u3291 0A79                                     u2731 026F  
                                   u2651 01FF                                     u2571 018F  
                                   u2491 011F                                     u2811 0BF3  
                                   u3371 048D                                     u1940 146F  
                                   u1780 1584                                     u1860 14EC  
                                   u2740 0275                                     u2660 0205  
                                   u2580 0195                                     u2820 0C26  
                                   u2900 1131                                     u3380 04A6  
                                   u1941 146E                                     u1781 1583  
                                   u1861 14EB                                     u3285 0A5D  
                                   u2741 0274                                     u2661 0204  
                                   u2581 0194                                     u2821 0C25  
                                   u2901 1130                                     u3381 04A5  
                                   u3365 0460                                     u1934 1453  
                                   u1870 1509                                     u2750 028B  
                                   u2670 021B                                     u2590 01AB  
                                   u2830 0C2D                                     u1950 1521  
                                   u3390 04AE                                     u1935 1451  
                                   u1871 1508                                     u3295 0A76  
                                   u2751 028A                                     u2671 021A  
                                   u2591 01AA                                     u2831 0C2C  
                                   u1951 1520                                     u3391 04AD  
                                   u3375 048A                                     u1880 11FD  
                                   u2760 0290                                     u2680 0220  
                                   u2840 165E                                     u1960 1546  
                                   u1945 146B                                     u1881 11FC  
                                   u2761 028F                                     u2681 021F  
                                   u2841 165D                                     u1961 1545  
                                   u3385 04A2                                     u1890 1207  
                                   u2770 02A6                                     u2690 0236  
                                   u2850 167E                                     u1970 1565  
                                   u2930 114B                                     u1891 1206  
                                   u1795 1588                                     u1875 1505  
                                   u2771 02A5                                     u2691 0235  
                                   u2851 167D                                     u1971 1564  
                                   u1955 151D                                     u2931 114A  
                                   u2915 1138                                     u2780 0BAD  
                                   u2860 1698                                     u1980 13F7  
                                   u2940 0AE4                                     u1885 11F9  
                                   u2781 0BAC                                     u2861 1697  
                                   u1981 13F6                                     u2925 113F  
                                   u2941 0AE3                                     u2790 0BDF  
                                   u2870 1334                                     u1990 140E  
                                   u2950 0AF4                                     u2791 0BDE  
                                   u2871 1333                                     u1975 1561  
                                   u1991 140D                                     u2951 0AF3  
                                   u2880 1347                                     u2960 0B3E  
                                   u2881 1346                                     u2961 0B3D  
                                   u2890 1361                                     u2970 179A  
                                   u2891 1360                                     u2971 1799  
                                   u2980 17AA                                     u2965 0B3A  
                                   u2981 17A9                                     u2990 17BD  
                                   u2895 135D                                     u2991 17BC  
               ?_RealTimeClock_read_byte 0070                                     _Temp 00E1  
                                   _main 02AC                              main@tempdec 004A  
                                   btemp 007E         __end_of_RealTimeClock_write_byte 1228  
                                   start 0000                               Read_Byte@i 0076  
                             Read_Byte@j 0062       __size_of_RealTimeClock_set_minutes 001D  
     __size_of_RealTimeClock_set_seconds 001D                            ??_Init_Keypad 0070  
         __end_of_RealTimeClock_get_year 1FBC                 ?_RealTimeClock_set_hours 0020  
                           ___int_to_hex 1323                          __end_of_SetDate 0E70  
                        __end_of_SetTime 07B9                         __end_of_LCD_Busy 1E89  
                       __end_of_LCD_Init 1E24                      __end_of_DisplayDate 00E5  
                    __end_of_DisplayTemp 112A                      __end_of_DisplayTime 09A2  
                        __end_of_SoundOn 1E16                                    ?_main 0070  
                        __end_of___awdiv 163B                                    STR_10 1063  
                                  STR_11 1039                                    STR_20 10B1  
                                  STR_12 105A                                    STR_13 104D  
                                  STR_21 106C                                    STR_14 1035  
                                  STR_30 10DC                                    STR_22 10C3  
                                  STR_31 10D8                                    STR_23 10B7  
                                  STR_15 102D                                    STR_16 1045  
                                  STR_24 1020                                    STR_25 10D4  
                                  STR_17 1010                            __CFG_WDTE$OFF 0000  
                                  STR_26 10CC                                    STR_18 108F  
                                  STR_27 10C8                                    STR_19 10AB  
                                  STR_28 10E0                          __end_of___awmod 15CA  
                                  STR_29 10D0                          ___awdiv@divisor 0070  
                        __end_of___lwdiv 14C3                          __end_of___lwmod 1323  
                        ___awdiv@counter 0075                            ??_Keypad_Scan 0078  
                 __end_of_LCD_SecondLine 1E1D                                    _PORTC 0007  
                                  _PORTD 0008                                    _TRISA 0085  
                                  _TRISC 0087                                    _TRISD 0088  
                                  _Delay 1E89                            __CFG_PWRTE$ON 0000  
                 __end_of_LCD_SendString 13A9                                    _Reset 1512  
                             _DisplayDay 080B                           ??_LCD_SendData 0070  
                             _Main_Delay 1263                               SetDate@Day 002A  
                             SetDate@Key 0027                               _MainScreen 1184  
                          ??_Buzzer_Init 0070           RealTimeClock_read_byte@time_rx 0072  
                         __CFG_BOREN$OFF 0000                             LCD_Command@c 0070  
                                  pclath 000A                         __end_of_CheckDay 12E2  
                                  status 0003                                    wtemp0 007E  
                         Get_Temp@buffer 0024                         __end_of_Get_Temp 1000  
                        __initialization 07B9                             __end_of_main 04D8  
                     __size_of_CheckTime 00E8                            SoundAlarm@Key 003C  
        __end_of_RealTimeClock_get_hours 1F34          __end_of_RealTimeClock_get_month 1F9A  
                         ___hex_to_int@i 0021                               SetTime@Key 0027  
                         ___hex_to_int@t 0023                               SetTime@min 003C  
                             SetTime@sec 003E    __end_of_RealTimeClock_get_day_of_week 1FDE  
 __size_of_RealTimeClock_get_day_of_week 0022            _RealTimeClock_get_day_of_week 1FBC  
                    __end_of_Init_Keypad 1E33                                   ??_main 0048  
                        ?_LCD_SecondLine 0070                                   ?_Delay 0070  
                            _IsHeatingOn 0060                                   ?_Reset 0070  
              __size_of_Thermometer_Init 0007                          ?_LCD_SendString 0071  
                          SetTime@digits 002F          __end_of_RealTimeClock_read_byte 1478  
                       __end_of_SoundOff 1E12                                   _ADCON1 009F  
       RealTimeClock_set_day_of_week@day 0020                 RealTimeClock_get_hours@c 007B  
                       ___awdiv@dividend 0072                 RealTimeClock_get_month@c 007B  
                    __end_of_Keypad_Scan 02AC                       __size_of_Key_Delay 0032  
                                 Delay@x 0072                                   Delay@y 0070  
                                 Delay@z 0073                                   _TRISA0 0428  
                                 _TRISB0 0430                                   _TRISB1 0431  
                                 _TRISB4 0434                                   _TRISB5 0435  
                     __size_of_Read_Byte 0044                   __size_of_DateDayScreen 007F  
        __end_of_RealTimeClock_set_hours 1ED8                                ??_SetDate 0029  
                    __end_of_Buzzer_Init 1E0E                                   Reset@i 0075  
                              ??_SetTime 0029                              _DisplayDate 0008  
                            _DisplayTemp 1104                              _DisplayTime 08BC  
                              ??_SoundOn 0070                 _RealTimeClock_write_byte 11ED  
                                 ___wmul 112A                                ??___awdiv 0074  
                              ??___awmod 0074                                ??___lwdiv 007A  
                              ??___lwmod 0074                              SetDate@Date 002B  
                                 _intent 0065                         ___awdiv@quotient 0077  
                        ___awmod@divisor 0070                                   _tenbit 0066  
                        ___awmod@counter 0075                     __size_of_LCD_Command 000F  
                    HeatingControlOff@On 003B                              ?_DisplayDay 0070  
                            ?_Main_Delay 0070                              ?_MainScreen 0070  
                      __end_of_CheckTime 0A8A                               _SoundAlarm 172D  
                        LCD_SendString@i 0076             __end_of_SwapToHeatingDisplay 16AE  
                 __size_of_ChangeTrigger 016D                  __end_of__initialization 07FC  
                              ?_LCD_Busy 0070                                ?_LCD_Init 0070  
        ??_RealTimeClock_set_day_of_week 007E                            __end_of_Delay 1E9E  
                         __pcstackCOMMON 0070                              _Init_Keypad 1E2B  
                          __end_of_Reset 1567                     __end_of_LCD_SendData 1E51  
                           __pidataBANK0 0004                             __pidataBANK1 1228  
                           __pidataBANK3 1E51                 RealTimeClock_read_byte@i 0073  
                             _Write_Byte 13ED               ?_RealTimeClock_get_minutes 0025  
             ?_RealTimeClock_get_seconds 0025                        __end_of_Key_Delay 1184  
                            SetTime@F993 00AA                           SoundAlarm@temp 003E  
                SwapToHeatingDisplay@Off 007D                  SwapToHeatingDisplay@Key 0078  
                            SetTime@Time 0038                        __end_of_Read_Byte 13ED  
                          _DateDayScreen 16AE                                ?_CheckDay 0070  
                            SetTime@hour 003A                              _Keypad_Scan 00E5  
                         ___int_to_hex@i 007C                                  ??_Delay 0071  
                         ___int_to_hex@t 007A                            LCD_SendData@c 0070  
                                ??_Reset 0074   __end_of_RealTimeClock_get_day_of_month 1F78  
__size_of_RealTimeClock_get_day_of_month 0022           _RealTimeClock_get_day_of_month 1F56  
                              ?_Get_Temp 0070              __size_of_RealTimeClock_init 001E  
                         Write_Byte@temp 0076                               __pbssBANK0 0056  
                             __pbssBANK1 00DB                               __pbssBANK3 01A0  
                    DisplayDay@Wednesday 0029                              _Buzzer_Init 1E0A  
                           _DisableAlarm 00EE                           SetTime@TimeSet 0039  
       __size_of_RealTimeClock_get_hours 0022         __size_of_RealTimeClock_get_month 0022  
                             ??_LCD_Busy 0070                               ??_LCD_Init 0070  
                ChangeTrigger@TriggerSet 002A                               __pmaintext 02AC  
                    __size_of_DisplayDay 00B1                                  ?___wmul 0070  
                    __size_of_Main_Delay 003E         __size_of_RealTimeClock_read_byte 0047  
                              ?_SoundOff 0070                      __size_of_MainScreen 0033  
      __end_of_RealTimeClock_get_minutes 1F56        __end_of_RealTimeClock_get_seconds 2000  
                         SetTime@setTime 0040                            _ChangeTrigger 0B74  
                          Switch24Hour@c 007A                           ?_DateDayScreen 0031  
                             ??_CheckDay 0070                         _Thermometer_Init 1E24  
       __size_of_RealTimeClock_set_hours 001D                               ??_Get_Temp 0020  
                            ?_SoundAlarm 003C                               __stringtab 1000  
                                _SetDate 0CE1                                  _TempBCD 0056  
                                _SetTime 04D8                                  _TempDec 0067  
                                _TempInt 0068                          SetDate@Saturday 0032  
  __end_of_RealTimeClock_set_day_of_week 1EBB   __size_of_RealTimeClock_set_day_of_week 001D  
          _RealTimeClock_set_day_of_week 1E9E                          Switch24Hour@Key 0077  
                                _SoundOn 1E12                                  ___awdiv 15CA  
                            ?_Write_Byte 0070                                  ___awmod 1567  
                        __size_of___wmul 0028                          SetDate@Thursday 0030  
                                ___lwdiv 1478                                  ___lwmod 12E2  
                             ??_SoundOff 0070                         ??_LCD_SecondLine 0071  
                         ?_ChangeTrigger 0070                         ??_LCD_SendString 0073  
                                __ptext1 1E24                                  __ptext2 11B7  
                                __ptext3 172D                                  __ptext4 1E12  
                                __ptext5 0A8A                                  __ptext6 112A  
                                __ptext7 1E0E                                  __ptext8 1184  
                                __ptext9 08BC                     _SwapToHeatingDisplay 163B  
                       ___awmod@dividend 0072                                  main@Key 0054  
                                clrloop0 0804                     HeatingControlOff@Off 003A  
                   HeatingControlOff@Key 0031                     end_of_initialization 07FC  
             ??_RealTimeClock_write_byte 0070                    __size_of_LCD_SendData 000F  
                             _weekDayEnd 00C4                               _tempBuffer 00D5  
                             _weekEndEnd 00BC                               _timeBuffer 006B  
                           ?_DisplayDate 0070                          DisplayDate@year 002B  
                           ?_DisplayTemp 0070                             ?_DisplayTime 0070  
                              Get_Temp@i 0025               ?_RealTimeClock_set_minutes 0020  
             ?_RealTimeClock_set_seconds 0020                      __size_of_SoundAlarm 00D3  
                        ??_DateDayScreen 0033                    ?_SwapToHeatingDisplay 0078  
                          _dateDisplayer 00B3                             ??_DisplayDay 007C  
                           ??_Main_Delay 0072                             ??_MainScreen 0028  
                           _LCD_SendData 1E42                               _start_date 0190  
                    __size_of_Write_Byte 0044                  _RealTimeClock_get_hours 1F12  
                _RealTimeClock_get_month 1F78                                _CheckTime 09A2  
           RealTimeClock_set_hours@hours 0020                 ??_RealTimeClock_get_year 007A  
                      __size_of_LCD_Busy 0015                        __size_of_LCD_Init 0007  
                           ?_Init_Keypad 0070                  _RealTimeClock_read_byte 1431  
                        ??_ChangeTrigger 0020                       __end_of_DisplayDay 08BC  
                          ??_LCD_Command 0070              ??_RealTimeClock_get_minutes 007A  
            ??_RealTimeClock_get_seconds 007A                       __end_of_Main_Delay 12A1  
                         __end_of___wmul 1152        __end_of_RealTimeClock_set_minutes 1EF5  
      __end_of_RealTimeClock_set_seconds 1F12                       __end_of_MainScreen 11B7  
                      _triggerTempChange 00E6                            ?_Switch24Hour 0077  
                              _Key_Delay 1152                             ?_Keypad_Scan 0076  
                        SoundAlarm@Alarm 0045                      start_initialization 07B9  
                _RealTimeClock_set_hours 1EBB                            ?___hex_to_int 0077  
                      __size_of_CheckDay 0041                                _Read_Byte 13A9  
                        SoundAlarm@temp2 0040                          SoundAlarm@temp3 0042  
                       ___hex_to_int@hex 0020                 SwapToHeatingDisplay@Heat 007B  
                      __size_of_Get_Temp 0190                             ?_Buzzer_Init 0070  
                             ?_CheckTime 0070                  RealTimeClock_get_year@c 007B  
               __end_of_Thermometer_Init 1E2B                            ?___int_to_hex 0077  
                               ??___wmul 0074                               init_fetch0 1E61  
                            __pdataBANK0 006C                              __pdataBANK1 00A0  
                            __pdataBANK3 0190                   ??_SwapToHeatingDisplay 007A  
                         ??_Switch24Hour 0079                        _HeatingControlOff 0A8A  
                      __size_of_SoundOff 0004                               ?_Key_Delay 0070  
                     ?_HeatingControlOff 0031                      __end_of_LCD_Command 1E42  
             __end_of_RealTimeClock_init 1104                                ___latbits 0002  
                         ??___hex_to_int 0079                            __pcstackBANK0 0020  
                      DateDayScreen@date 0034                ??_RealTimeClock_get_hours 007A  
                             ?_Read_Byte 0070                ??_RealTimeClock_get_month 007A  
              _RealTimeClock_get_minutes 1F34                _RealTimeClock_get_seconds 1FDE  
                           ??_SoundAlarm 0044                      ??_HeatingControlOff 0039  
                 SwapToHeatingDisplay@On 007C                            Write_Byte@val 0077  
                     DisplayDay@Saturday 002C          __size_of_RealTimeClock_get_year 0022  
              ??_RealTimeClock_read_byte 0070                                 ?_SetDate 0027  
                            Write_Byte@i 0078                                 ?_SetTime 0027  
                     DisplayDay@Thursday 002A                         ___lwdiv@dividend 0078  
              RealTimeClock_write_byte@i 0072                           ??___int_to_hex 0079  
                            _day_of_week 00EC                    DisplayTemp@tempBuffer 0027  
                               ?_SoundOn 0070                             ??_Write_Byte 0074  
                               ?___awdiv 0070                                 ?___awmod 0070  
                   __size_of_DisplayDate 00DD                __end_of_HeatingControlOff 0B74  
                               ?___lwdiv 0076                                 ?___lwmod 0070  
                   __size_of_DisplayTemp 0026                     __size_of_DisplayTime 00E6  
                         SetDate@DateSet 002C                       __end_of_SoundAlarm 1800  
                              __pstrings 1000                ??_RealTimeClock_set_hours 007E  
                              _isWeekDay 00EA                           __size_of_Delay 0015  
                         __size_of_Reset 0055                         ___lwdiv@quotient 007B  
                         SetDate@Tuesday 002E           ?_RealTimeClock_get_day_of_week 0025  
                     __end_of_Write_Byte 1431                                 _LCD_Busy 1E74  
                               _LCD_Init 1E1D                              ??_CheckTime 007C  
                         ___wmul@product 0074                            _timeDisplayer 00CC  
                              clear_ram0 0803                           DisplayDate@day 0029  
                              _timeHours 005C                         ChangeTrigger@Key 002C  
                            _LCD_Command 1E33                     __size_of_Init_Keypad 0008  
            ??_RealTimeClock_set_minutes 007E              ??_RealTimeClock_set_seconds 007E  
                           _hundredthbit 0063                              __stringbase 100F  
                      ___wmul@multiplier 0070                   _RealTimeClock_get_year 1F9A  
       RealTimeClock_set_minutes@minutes 0020                              ??_Key_Delay 0072  
                               _CheckDay 12A1                         main@tempdectenth 004C  
                              main@temp2 0050                                main@temp3 0052  
                            ??_Read_Byte 0074                     __size_of_Keypad_Scan 01C7  
                               _Get_Temp 0E70                     LCD_SendString@string 0071  
                 HeatingControlOff@temp2 0035                   HeatingControlOff@temp3 0037  
                               SetDate@i 0034         RealTimeClock_set_seconds@seconds 0020  
                   __end_of_Switch24Hour 11ED                                 SetTime@i 0046  
                   __size_of_Buzzer_Init 0004          RealTimeClock_get_day_of_month@c 007B  
                       __size_of_SetDate 018F                     __end_of___hex_to_int 1512  
                       __size_of_SetTime 02E1                         SetDate@Wednesday 002F  
             __size_of_HeatingControlOff 00EA                                 _is24Hour 005E  
                       __size_of_SoundOn 0004                                 _SoundOff 1E0E  
                       __size_of___awdiv 0071                         __size_of___awmod 0063  
                       __size_of___lwdiv 004B                         __size_of___lwmod 0041  
                       DateDayScreen@Key 0031        __size_of_RealTimeClock_write_byte 003B  
                       DateDayScreen@day 0035                ?_RealTimeClock_write_byte 0070  
                     __end_of__stringtab 1010                    __end_of_DateDayScreen 172D  
                        ___lwdiv@divisor 0076                        DisplayDay@Tuesday 0028  
                        ___lwdiv@counter 007D                  __size_of_LCD_SecondLine 0007  
                               __ptext10 1104                                 __ptext11 0E70  
                               __ptext20 1ED8                                 __ptext12 12E2  
                               __ptext21 1EBB                                 __ptext13 1478  
                               __ptext30 16AE                                 __ptext22 1FDE  
                               __ptext14 13ED                                 __ptext31 163B  
                               __ptext23 0CE1                                 __ptext15 1512  
                               __ptext40 15CA                                 __ptext32 1E16  
                               __ptext24 1E9E                                 __ptext16 13A9  
                               __ptext41 1263                                 __ptext33 080B  
                               __ptext25 1323                                 __ptext17 1E89  
                               __ptext50 1F12                                 __ptext42 1365  
                               __ptext34 1FBC                                 __ptext26 12A1  
                               __ptext18 04D8                                 __ptext51 14C3  
                               __ptext43 1E42                                 __ptext35 0008  
                               __ptext27 10E6                                 __ptext19 1EF5  
                               __ptext52 1567                                 __ptext44 1E33  
                               __ptext36 1F9A                                 __ptext28 1E1D  
                               __ptext53 11ED                                 __ptext45 1E74  
                               __ptext37 1F78                                 __ptext29 1E2B  
                               __ptext54 1431                                 __ptext46 00E5  
                               __ptext38 1F56                                 __ptext55 1E0A  
                               __ptext47 1152                                 __ptext39 0B74  
                               __ptext48 09A2                                 __ptext49 1F34  
                   __end_of___int_to_hex 1365                             _weekDayStart 00C8  
                __size_of_LCD_SendString 0044                _RealTimeClock_set_minutes 1ED8  
              _RealTimeClock_set_seconds 1EF5                            SetDate@Friday 0031  
                           _weekEndStart 00C0                            SetDate@Monday 002D  
                          SetDate@Sunday 0033                            __size_of_main 022C  
                          SetDate@dayInt 0036       __size_of_RealTimeClock_get_minutes 0022  
     __size_of_RealTimeClock_get_seconds 0022                                 _timeMins 005A  
                               _timeSecs 0058                        ?_Thermometer_Init 0070  
                               _tenthbit 0064                       ??_Thermometer_Init 0070  
                  __end_of_ChangeTrigger 0CE1                                 main@temp 004E  
             RealTimeClock_get_minutes@c 007B               RealTimeClock_get_seconds@c 007B  
                  HeatingControlOff@temp 0033           RealTimeClock_get_day_of_week@c 007B  
                               init_ram0 1E65          RealTimeClock_write_byte@time_tx 0074  
                       DisplayDay@Friday 002B                         DisplayDay@Monday 0027  
                   ChangeTrigger@Trigger 0029                         DisplayDay@Sunday 002D  
                       ___lwmod@dividend 0072                     ___int_to_hex@integer 0077  
                     _RealTimeClock_init 10E6                     ChangeTrigger@decimal 002B  
                              stringcode 100A                         DisplayDate@month 0027  
                         ChangeTrigger@i 002F                      ?_RealTimeClock_init 0070  
                            _numberTable 00A0            __size_of_SwapToHeatingDisplay 0073  
         ?_RealTimeClock_set_day_of_week 0020                          ___lwmod@divisor 0070  
                        ___lwmod@counter 0075                           Read_Byte@value 0075  
                    ChangeTrigger@digits 0026                                 stringdir 100A  
                           _previousTemp 00DB                                 stringtab 1000  
                         MainScreen@Temp 002A                           MainScreen@Time 0029  
                   ??_RealTimeClock_init 0075                    __size_of_Switch24Hour 0036  
                     ChangeTrigger@i_194 002D                              Main_Delay@i 0073  
                            Main_Delay@j 0075                              Main_Delay@k 0070  
                  __size_of___hex_to_int 004F                     ___RealTimeClock_buff 01A0  
                          ??_DisplayDate 007C                            ??_DisplayTemp 007E  
                          ??_DisplayTime 007C  
